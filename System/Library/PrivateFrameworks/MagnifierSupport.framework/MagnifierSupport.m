void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_3(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void box3dVol(const float *a1)
{
  float v2;
  float *__C[3];

  if (a1)
  {
    std::vector<float>::vector(__C, 3uLL);
    v2 = 0.0;
    vDSP_vsub(a1 + 3, 1, a1, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    vDSP_vsub(a1 + 6, 1, a1 + 3, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    vDSP_vsub(a1 + 12, 1, a1, 1, __C[0], 1, 3uLL);
    vDSP_svesq(__C[0], 1, &v2, 3uLL);
    if (__C[0])
    {
      __C[1] = __C[0];
      operator delete(__C[0]);
    }
  }
}

void sub_2272F812C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

float boxVolume(_OWORD *a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  char *v9;
  uint64_t v10;
  float v11;
  float v12;
  void *__p[3];

  v2 = operator new(0x80uLL);
  v3 = a1[5];
  v2[4] = a1[4];
  v2[5] = v3;
  v4 = a1[7];
  v2[6] = a1[6];
  v2[7] = v4;
  v5 = a1[1];
  *v2 = *a1;
  v2[1] = v5;
  v6 = a1[3];
  v2[2] = a1[2];
  v2[3] = v6;
  std::vector<float>::vector(__p, 0x18uLL);
  v7 = 0;
  v8 = v2;
  do
  {
    v9 = (char *)__p[0] + v7;
    v10 = *(_QWORD *)v8;
    *((_DWORD *)v9 + 2) = *((_DWORD *)v8 + 2);
    *(_QWORD *)v9 = v10;
    v7 += 12;
    ++v8;
  }
  while (v7 != 96);
  operator delete(v2);
  box3dVol((const float *)__p[0]);
  v12 = v11;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v12;
}

void sub_2272F820C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 box3dToCentroidSizeAngle@<Q0>(float32x4_t *a1@<X0>, uint64_t *a2@<X8>)
{
  float32x4_t v3;
  float32x4_t v4;
  float v5;
  float32x4_t v6;
  float32x4_t v7;
  float v8;
  float32x4_t v9;
  float32x4_t v10;
  float v11;
  float v12;
  uint64_t v13;
  __n128 result;
  float32x4_t v15;
  int v16;

  v3 = vsubq_f32(*a1, a1[3]);
  v4 = vmulq_f32(v3, v3);
  v5 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
  v6 = vsubq_f32(*a1, a1[1]);
  v7 = vmulq_f32(v6, v6);
  v8 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).f32[0]);
  v9 = vsubq_f32(*a1, a1[4]);
  v10 = vmulq_f32(v9, v9);
  v11 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0]);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v15 = vmulq_f32(vaddq_f32(*a1, a1[6]), v10);
  v12 = atan2f(v6.f32[0], v6.f32[1]);
  v16 = 0;
  std::vector<float>::vector(a2, 7uLL, &v16);
  v13 = *a2;
  result = (__n128)v15;
  *(_QWORD *)v13 = v15.i64[0];
  *(_DWORD *)(v13 + 8) = v15.i32[2];
  *(float *)(v13 + 12) = v5;
  *(float *)(v13 + 16) = v8;
  *(float *)(v13 + 20) = v11;
  *(float *)(v13 + 24) = v12;
  return result;
}

void box3dFromNSArray(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t i;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  __int128 v13;
  int v14;
  std::logic_error *exception;
  int v16;
  __int128 v17;
  id v18;

  v3 = a1;
  v18 = v3;
  if (!v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "[3DOD] box3dFromNSArray takes non-null pointer).");
    goto LABEL_8;
  }
  if (objc_msgSend(v3, "count") != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "[3DOD] box3dFromNSArray takes non-8 corners box).");
LABEL_8:
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EF97358, MEMORY[0x24BEDAB88]);
  }
  for (i = 0; i != 8; ++i)
  {
    objc_msgSend(v18, "objectAtIndexedSubscript:", i);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectAtIndexedSubscript:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "floatValue");
    *(_QWORD *)&v17 = v7;
    objc_msgSend(v18, "objectAtIndexedSubscript:", i);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "objectAtIndexedSubscript:", 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "floatValue");
    v16 = v10;
    objc_msgSend(v18, "objectAtIndexedSubscript:", i);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectAtIndexedSubscript:", 2);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "floatValue");
    v13 = v17;
    DWORD1(v13) = v16;
    DWORD2(v13) = v14;
    *(_OWORD *)(a2 + 16 * i) = v13;

  }
}

void sub_2272F8484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  void *v14;

  __cxa_free_exception(v14);

  _Unwind_Resume(a1);
}

float area(const Polygon *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v1 = *(_QWORD *)&a1->polyBBox.right - *(_QWORD *)&a1->polySize;
  if (v1)
  {
    v2 = v1 >> 3;
    if (v2 <= 1)
      v3 = 1;
    else
      v3 = v2;
    v4 = 1;
    v5 = *(uint64_t **)&a1->polySize;
    do
    {
      v6 = *v5++;
      _V1.S[1] = HIDWORD(v6);
      _D2 = *(_QWORD *)(*(_QWORD *)&a1->polySize + 8 * v4);
      __asm { FMLS            S0, S2, V1.S[1] }
      v4 = (v4 + 1) % v2;
      --v3;
    }
    while (v3);
  }
  else
  {
    _S0 = 0.0;
  }
  return fabsf(_S0) * 0.5;
}

float getLineEquation(float32x2_t *a1, float *a2, _DWORD *a3, float *a4)
{
  float32x2_t v4;
  float32x2_t v5;
  float v6;
  float result;

  if (a2 && a3)
  {
    if (a4)
    {
      v4 = *a1;
      v5 = a1[1];
      LODWORD(v6) = HIDWORD(*(unint64_t *)a1);
      *a2 = v5.f32[1] - v6;
      *a3 = vsub_f32(v4, v5).u32[0];
      result = vmlas_n_f32(vmuls_lane_f32(-v4.f32[0], v5, 1), v6, v5.f32[0]);
      *a4 = result;
    }
  }
  return result;
}

uint64_t intersect(int32x2_t *a1, int32x2_t *a2, float32x2_t *a3)
{
  float32x2_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float v8;
  float32x2_t v14;

  if (!a3)
    return 0;
  v3.i32[0] = (__int32)*a1;
  v3.i32[1] = HIDWORD(*(_QWORD *)&a2[1]);
  v4.i32[0] = (__int32)a1[1];
  v4.i32[1] = HIDWORD(*(unint64_t *)a2);
  v5.i32[0] = (__int32)*a2;
  v5.i32[1] = HIDWORD(*(_QWORD *)&a1[1]);
  v6 = vsub_f32(v3, v4);
  v4.i32[0] = (__int32)a2[1];
  _D5.i32[1] = HIDWORD(*(unint64_t *)a1);
  _D6 = vsub_f32(v5, _D5);
  v8 = -(float)((float)((float)-v6.f32[1] * v6.f32[0]) + (float)(_D6.f32[1] * _D6.f32[0]));
  __asm { FMLA            S5, S6, V6.S[1] }
  if (_D5.f32[0] >= 0.0)
    v8 = _D5.f32[0];
  if (v8 < 0.00000001)
    return 0;
  v14 = vmla_f32(vmul_f32((float32x2_t)vzip2_s32(a2[1], a1[1]), vneg_f32((float32x2_t)vzip1_s32(*a2, *a1))), (float32x2_t)vzip2_s32(*a2, *a1), (float32x2_t)vzip1_s32(a2[1], a1[1]));
  *a3 = vdiv_f32(vmla_f32(vmul_f32((float32x2_t)vrev64_s32((int32x2_t)v14), vneg_f32(_D6)), v14, v6), (float32x2_t)vdup_lane_s32((int32x2_t)_D5, 0));
  return 1;
}

float distance2(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2;
  float v3;
  float v4;
  float32x2_t v5;
  float v6;
  float v7;

  v2 = a1[1];
  LODWORD(v3) = HIDWORD(*(unint64_t *)a1);
  v4 = v2.f32[1] - v3;
  v5 = vsub_f32(*a1, v2);
  v6 = vmlas_n_f32(vmuls_lane_f32(-COERCE_FLOAT(*a1), v2, 1), v3, v2.f32[0]);
  v7 = vmlas_n_f32(vmul_lane_f32(v5, *a2, 1).f32[0], v2.f32[1] - v3, COERCE_FLOAT(*a2));
  return (float)((float)(v6 + v7) * (float)(v6 + v7)) / (float)(vmul_f32(v5, v5).f32[0] + (float)(v4 * v4));
}

void clip(const Polygon *a1@<X0>, const Polygon *a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[2];
  void (*v11)(uint64_t, int32x2_t, float32x2_t);
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 (*v17)(__n128 *, __n128 *);
  void (*v18)(uint64_t);
  const char *v19;
  void *__p;
  void *v21;
  uint64_t v22;

  v14 = 0;
  v15 = &v14;
  v16 = 0x4812000000;
  v17 = __Block_byref_object_copy_;
  v18 = __Block_byref_object_dispose_;
  v19 = "";
  __p = 0;
  v21 = 0;
  v22 = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(&__p, *(const void **)&a1->polySize, *(_QWORD *)&a1->polyBBox.right, (uint64_t)(*(_QWORD *)&a1->polyBBox.right - *(_QWORD *)&a1->polySize) >> 3);
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v11 = ___Z4clipRK7PolygonS1__block_invoke;
  v12 = &unk_24EF97B58;
  v13 = &v14;
  v5 = *(_QWORD *)&a2->polyBBox.right - *(_QWORD *)&a2->polySize;
  if (v5)
  {
    v6 = 0;
    v7 = v5 >> 3;
    if ((unint64_t)(v5 >> 3) <= 1)
      v8 = 1;
    else
      v8 = v5 >> 3;
    v9 = 1;
    do
    {
      ((void (*)(_QWORD *, double, double))v11)(v10, *(double *)(*(_QWORD *)&a2->polySize + 8 * v6++), *(double *)(*(_QWORD *)&a2->polySize + 8 * v9));
      v9 = (v9 + 1) % v7;
    }
    while (v8 != v6);
  }
  Polygon::Polygon(a3, (char *)v15[6], (v15[7] - v15[6]) >> 3);
  _Block_object_dispose(&v14, 8);
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2272F87C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  _Block_object_dispose(&a14, 8);
  if (__p)
  {
    a21 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy_(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void ___Z4clipRK7PolygonS1__block_invoke(uint64_t a1, int32x2_t a2, float32x2_t a3)
{
  uint64_t v4;
  float32x2_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  float32x2_t v10;
  float v11;
  float32x2_t v12;
  float v13;
  float v14;
  float v15;
  float v16;
  _BOOL4 v17;
  float v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  float32x2_t *v23;
  float32x2_t *v24;
  float32x2_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  float32x2_t *v30;
  float32x2_t *v31;
  float32x2_t v32;
  uint64_t v33;
  unint64_t v34;
  float32x2_t v35;
  _QWORD *v36;
  void *v37;
  _BYTE *v38;
  float32x2_t *v39;
  float32x2_t v40;
  float32x2_t *v41;
  float32x2_t *v42;
  float32x2_t *v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  float32x2_t v47;
  float32x2_t v48;
  float32x2_t v49;
  int32x2_t v50[2];

  v47 = (float32x2_t)a2;
  v48 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v45 = 0;
  v46 = 0;
  v44 = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(&v44, *(const void **)(v4 + 48), *(_QWORD *)(v4 + 56), (uint64_t)(*(_QWORD *)(v4 + 56) - *(_QWORD *)(v4 + 48)) >> 3);
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v5 = 0;
  if (v45 != v44)
  {
    v6 = 0;
    v7 = (v45 - v44) >> 3;
    if (v7 <= 1)
      v8 = 1;
    else
      v8 = (v45 - v44) >> 3;
    v9 = 1;
    do
    {
      v10 = *(float32x2_t *)&v44[8 * v9];
      v50[0] = *(int32x2_t *)&v44[8 * v6];
      v50[1] = (int32x2_t)v10;
      v11 = v48.f32[1] - v47.f32[1];
      v12 = vsub_f32(v47, v48);
      v13 = vmlas_n_f32(vmuls_lane_f32(-v47.f32[0], v48, 1), v47.f32[1], v48.f32[0]);
      v14 = vmlas_n_f32(vmuls_lane_f32(v12.f32[0], (float32x2_t)v50[0], 1), v48.f32[1] - v47.f32[1], *(float *)v50[0].i32);
      v15 = vmul_f32(v12, v12).f32[0] + (float)(v11 * v11);
      LODWORD(v16) = vsub_f32(v48, v47).u32[0];
      v17 = vmlas_n_f32(-(float)(vsub_f32((float32x2_t)v50[0], v47).f32[0] * (float)(v48.f32[1] - v47.f32[1])), *(float *)&v50[0].i32[1] - v47.f32[1], v16) < 0.0;
      if ((float)((float)((float)(v13 + v14) * (float)(v13 + v14)) / v15) < 0.00000001)
        v17 = 1;
      v18 = vmlas_n_f32(vmuls_lane_f32(v12.f32[0], v10, 1), v11, v10.f32[0]);
      if ((float)((float)((float)(v13 + v18) * (float)(v13 + v18)) / v15) >= 0.00000001
        && vmlas_n_f32(-(float)(vsub_f32(v10, v47).f32[0] * v11), v10.f32[1] - v47.f32[1], v16) >= 0.0)
      {
        if (!v17)
          goto LABEL_50;
        v49 = 0;
        if (!intersect(v50, (int32x2_t *)&v47, &v49))
          goto LABEL_50;
        if (v5 >= v43)
        {
          v33 = v5 - v41;
          if ((unint64_t)(v33 + 1) >> 61)
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          v34 = ((char *)v43 - (char *)v41) >> 2;
          if (v34 <= v33 + 1)
            v34 = v33 + 1;
          if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8)
            v28 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v28 = v34;
          if (v28)
            v29 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v28);
          else
            v29 = 0;
          v30 = (float32x2_t *)&v29[8 * v33];
          *v30 = v49;
          v5 = v30 + 1;
          v31 = v42;
          if (v42 != v41)
          {
            do
            {
              v35 = v31[-1];
              --v31;
              v30[-1] = v35;
              --v30;
            }
            while (v31 != v41);
LABEL_46:
            v31 = v41;
          }
LABEL_47:
          v41 = v30;
          v43 = (float32x2_t *)&v29[8 * v28];
          if (v31)
            operator delete(v31);
          goto LABEL_49;
        }
        *v5++ = v49;
      }
      else
      {
        v40 = v10;
        if (!v17)
        {
          v49 = 0;
          if (intersect(v50, (int32x2_t *)&v47, &v49))
          {
            if (v5 >= v43)
            {
              v19 = v5 - v41;
              if ((unint64_t)(v19 + 1) >> 61)
                _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
              v20 = ((char *)v43 - (char *)v41) >> 2;
              if (v20 <= v19 + 1)
                v20 = v19 + 1;
              if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8)
                v21 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v21 = v20;
              if (v21)
                v22 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v21);
              else
                v22 = 0;
              v23 = (float32x2_t *)&v22[8 * v19];
              *v23 = v49;
              v5 = v23 + 1;
              v24 = v42;
              if (v42 != v41)
              {
                do
                {
                  v25 = v24[-1];
                  --v24;
                  v23[-1] = v25;
                  --v23;
                }
                while (v24 != v41);
                v24 = v41;
              }
              v41 = v23;
              v43 = (float32x2_t *)&v22[8 * v21];
              if (v24)
                operator delete(v24);
            }
            else
            {
              *v5++ = v49;
            }
            v42 = v5;
          }
        }
        if (v5 >= v43)
        {
          v26 = v5 - v41;
          if ((unint64_t)(v26 + 1) >> 61)
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          v27 = ((char *)v43 - (char *)v41) >> 2;
          if (v27 <= v26 + 1)
            v27 = v26 + 1;
          if ((unint64_t)((char *)v43 - (char *)v41) >= 0x7FFFFFFFFFFFFFF8)
            v28 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v28 = v27;
          if (v28)
            v29 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v43, v28);
          else
            v29 = 0;
          v30 = (float32x2_t *)&v29[8 * v26];
          *v30 = v40;
          v5 = v30 + 1;
          v31 = v42;
          if (v42 != v41)
          {
            do
            {
              v32 = v31[-1];
              --v31;
              v30[-1] = v32;
              --v30;
            }
            while (v31 != v41);
            goto LABEL_46;
          }
          goto LABEL_47;
        }
        *v5++ = v40;
      }
LABEL_49:
      v42 = v5;
LABEL_50:
      ++v6;
      v9 = (v9 + 1) % v7;
    }
    while (v6 != v8);
  }
  v36 = *(_QWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v37 = (void *)v36[6];
  if (v37)
  {
    v36[7] = v37;
    operator delete(v37);
    v36[6] = 0;
    v36[7] = 0;
    v36[8] = 0;
    v5 = v42;
  }
  v39 = v43;
  v38 = v44;
  v36[6] = v41;
  v36[7] = v5;
  v36[8] = v39;
  if (v38)
  {
    v45 = v38;
    operator delete(v38);
  }
}

void sub_2272F8C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void box3dIou(float32x4_t *a1@<X0>, float32x4_t *a2@<X1>, uint64_t a3@<X8>)
{
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  float v25;
  _BYTE *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  float v34;
  float v35;
  _BYTE *v36;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float v51;
  float v52;
  float v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  float v60;
  float v61;
  float v62;
  float v63;
  float v64;
  float v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float v77;
  float v78;
  float v79;
  _BYTE *v80;
  _BYTE *v81;
  void *__p;
  _BYTE *v83;
  _QWORD *v84;
  _BYTE *v85;
  float32x4_t v86[2];
  float32x4_t v87[2];
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  v7 = *a2;
  v8 = vsubq_f32(*a1, *a2);
  v9 = vmulq_f32(v8, v8);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v9, 2), vaddq_f32(v9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v9.f32, 1))).f32[0]) <= 0.001)
  {
    v73 = 1;
    while (v73 != 8)
    {
      v74 = vsubq_f32(a1[v73], a2[v73]);
      v75 = vmulq_f32(v74, v74);
      ++v73;
      if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v75, 2), vaddq_f32(v75, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v75.f32, 1))).f32[0]) > 0.001)
      {
        if ((unint64_t)(v73 - 2) < 7)
          goto LABEL_2;
        break;
      }
    }
    __asm { FMOV            V0.2S, #1.0 }
    *(_QWORD *)a3 = _D0;
    *(float *)(a3 + 8) = boxVolume(a1);
    *(_OWORD *)(a3 + 12) = xmmword_227593960;
    *(_OWORD *)(a3 + 28) = xmmword_227593970;
    *(_DWORD *)(a3 + 44) = 0;
  }
  else
  {
LABEL_2:
    v10 = a1[2];
    v6.i64[1] = a1[1].i64[0];
    v10.i64[1] = a1[3].i64[0];
    v87[0] = v6;
    v87[1] = v10;
    v11 = a2[2];
    v7.i64[1] = a2[1].i64[0];
    v86[0] = v7;
    v11.i64[1] = a2[3].i64[0];
    v86[1] = v11;
    Polygon::Polygon((char *)&v84, (char *)v87, 4uLL);
    Polygon::Polygon((char *)&__p, (char *)v86, 4uLL);
    clip((const Polygon *)&v84, (const Polygon *)&__p, (char *)&v80);
    _S0 = 0.0;
    _S1 = 0.0;
    v14 = (v85 - (_BYTE *)v84) >> 3;
    if (v85 != (_BYTE *)v84)
    {
      if (v14 <= 1)
        v15 = 1;
      else
        v15 = (v85 - (_BYTE *)v84) >> 3;
      v16 = 1;
      v17 = v84;
      do
      {
        v18 = *v17++;
        _V2.S[1] = HIDWORD(v18);
        _D3 = v84[v16];
        __asm { FMLS            S1, S3, V2.S[1] }
        v16 = (v16 + 1) % v14;
        --v15;
      }
      while (v15);
    }
    v25 = fabsf(_S1);
    v26 = __p;
    v27 = (v83 - (_BYTE *)__p) >> 3;
    if (v83 != __p)
    {
      if (v27 <= 1)
        v28 = 1;
      else
        v28 = (v83 - (_BYTE *)__p) >> 3;
      v29 = 1;
      v30 = (uint64_t *)__p;
      do
      {
        v31 = *v30++;
        _V3.S[1] = HIDWORD(v31);
        _D4 = *((_QWORD *)__p + v29);
        __asm { FMLS            S0, S4, V3.S[1] }
        v29 = (v29 + 1) % v27;
        --v28;
      }
      while (v28);
    }
    v34 = v25 * 0.5;
    v35 = fabsf(_S0) * 0.5;
    v36 = v80;
    _S6 = 0.0;
    _S0 = 0.0;
    if (v81 != v80)
    {
      v39 = (v81 - v80) >> 3;
      if (v39 <= 1)
        v40 = 1;
      else
        v40 = (v81 - v80) >> 3;
      v41 = 1;
      v42 = (uint64_t *)v80;
      do
      {
        v43 = *v42++;
        _V1.S[1] = HIDWORD(v43);
        _D4 = *(_QWORD *)&v80[8 * v41];
        __asm { FMLS            S0, S4, V1.S[1] }
        v41 = (v41 + 1) % v39;
        --v40;
      }
      while (v40);
    }
    v46 = fabsf(_S0) * 0.5;
    v47 = (float)(v34 + v35) - v46;
    v48 = fminf(v34, v35);
    v49 = a1->f32[2];
    v50 = a2->f32[2];
    v51 = a1[4].f32[2];
    v52 = a2[4].f32[2];
    v53 = fmax((float)(fminf(v51, v52) - fmaxf(v49, v50)), 0.0);
    if (v85 != (_BYTE *)v84)
    {
      if (v14 <= 1)
        v54 = 1;
      else
        v54 = (v85 - (_BYTE *)v84) >> 3;
      v55 = 1;
      v56 = v84;
      do
      {
        v57 = *v56++;
        _V16.S[1] = HIDWORD(v57);
        _D21 = v84[v55];
        __asm { FMLS            S6, S21, V16.S[1] }
        v55 = (v55 + 1) % v14;
        --v54;
      }
      while (v54);
    }
    v60 = v46 / v48;
    v61 = v46 / v34;
    v62 = v46 * v53;
    v63 = fabsf(_S6) * 0.5;
    v64 = vabds_f32(v51, v49);
    v65 = v46 / v35;
    if (v83 == __p)
    {
      _S19 = 0.0;
    }
    else
    {
      if (v27 <= 1)
        v66 = 1;
      else
        v66 = (v83 - (_BYTE *)__p) >> 3;
      v67 = 1;
      v68 = (uint64_t *)__p;
      do
      {
        v69 = *v68++;
        _V20.S[1] = HIDWORD(v69);
        _D21 = *((_QWORD *)__p + v67);
        __asm { FMLS            S19, S21, V20.S[1] }
        v67 = (v67 + 1) % v27;
        --v66;
      }
      while (v66);
    }
    v77 = v64 * v63;
    v78 = vabds_f32(v52, v50) * (float)(fabsf(_S19) * 0.5);
    v79 = (float)(v77 + v78) - v62;
    *(float *)a3 = v62 / v79;
    *(float *)(a3 + 4) = v62;
    *(float *)(a3 + 8) = v79;
    *(float *)(a3 + 12) = v62 / fminf(v77, v78);
    *(float *)(a3 + 16) = v62 / v77;
    *(float *)(a3 + 20) = v62 / v78;
    *(float *)(a3 + 24) = v46 / v47;
    *(float *)(a3 + 28) = v46;
    *(float *)(a3 + 32) = v47;
    *(float *)(a3 + 36) = v60;
    *(float *)(a3 + 40) = v61;
    *(float *)(a3 + 44) = v65;
    if (v36)
    {
      v81 = v36;
      operator delete(v36);
      v26 = __p;
    }
    if (v26)
    {
      v83 = v26;
      operator delete(v26);
    }
    if (v84)
    {
      v85 = v84;
      operator delete(v84);
    }
  }
}

void sub_2272F9068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20)
{
  if (__p)
    operator delete(__p);
  if (a19)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

char *Polygon::Polygon(char *a1, char *a2, unint64_t a3)
{
  float32x2_t *v5;
  float32x2_t v6;
  unint64_t v7;
  uint64_t v8;
  float32x2_t v9;
  float32x2_t v10;

  *(_QWORD *)a1 = 0;
  *((_QWORD *)a1 + 1) = 0;
  *((_QWORD *)a1 + 2) = 0;
  if (a3)
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE18__assign_with_sizeB8ne180100IPKS1_S7_EEvT_T0_l(a1, a2, (uint64_t)&a2[8 * a3], a3);
    if (a3 >= 3)
    {
      v5 = *(float32x2_t **)a1;
      v6 = **(float32x2_t **)a1;
      v7 = *((_QWORD *)a1 + 1) - *(_QWORD *)a1;
      if ((int)(v7 >> 3) < 1)
      {
        v9 = **(float32x2_t **)a1;
      }
      else
      {
        v8 = (v7 >> 3);
        v9 = **(float32x2_t **)a1;
        do
        {
          v10 = *v5++;
          v9 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v9, v10), (int8x8_t)v10, (int8x8_t)v9);
          v6 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v10, v6), (int8x8_t)v10, (int8x8_t)v6);
          --v8;
        }
        while (v8);
      }
      *((float32x2_t *)a1 + 3) = v9;
      *((float32x2_t *)a1 + 4) = v6;
    }
  }
  return a1;
}

void sub_2272F9134(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void Polygon::Polygon(Polygon *this, const CGRect *a2)
{
  CGFloat MinY;
  float64x2_t v5;
  CGFloat x;
  CGFloat width;
  CGFloat height;
  CGFloat MaxY;
  float64x2_t v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  float64x2_t v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  float64x2_t v20;
  float32x2_t *v21;
  float32x2_t v22;
  unint64_t v23;
  uint64_t v24;
  float32x2_t v25;
  float32x2_t v26;
  CGFloat MinX;
  CGFloat v28;
  CGFloat MaxX;
  CGFloat v30;

  *(_QWORD *)&this->polySize = 0;
  *(_QWORD *)&this->polyBBox.right = 0;
  this[1].polyBBox = 0;
  _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE6resizeEm((uint64_t)this, 4uLL);
  MinX = CGRectGetMinX(*a2);
  MinY = CGRectGetMinY(*a2);
  v5.f64[0] = MinX;
  v5.f64[1] = MinY;
  **(float32x2_t **)&this->polySize = vcvt_f32_f64(v5);
  x = a2->origin.x;
  v5.f64[0] = a2->origin.y;
  width = a2->size.width;
  height = a2->size.height;
  v28 = CGRectGetMinX(*(CGRect *)((char *)&v5 - 8));
  MaxY = CGRectGetMaxY(*a2);
  v10.f64[0] = v28;
  v10.f64[1] = MaxY;
  *(float32x2_t *)(*(_QWORD *)&this->polySize + 8) = vcvt_f32_f64(v10);
  v11 = a2->origin.x;
  v10.f64[0] = a2->origin.y;
  v12 = a2->size.width;
  v13 = a2->size.height;
  MaxX = CGRectGetMaxX(*(CGRect *)((char *)&v10 - 8));
  v14 = CGRectGetMaxY(*a2);
  v15.f64[0] = MaxX;
  v15.f64[1] = v14;
  *(float32x2_t *)(*(_QWORD *)&this->polySize + 16) = vcvt_f32_f64(v15);
  v16 = a2->origin.x;
  v15.f64[0] = a2->origin.y;
  v17 = a2->size.width;
  v18 = a2->size.height;
  v30 = CGRectGetMaxX(*(CGRect *)((char *)&v15 - 8));
  v19 = CGRectGetMinY(*a2);
  v20.f64[0] = v30;
  v20.f64[1] = v19;
  *(float32x2_t *)(*(_QWORD *)&this->polySize + 24) = vcvt_f32_f64(v20);
  v21 = *(float32x2_t **)&this->polySize;
  v22 = **(float32x2_t **)&this->polySize;
  v23 = *(_QWORD *)&this->polyBBox.right - *(_QWORD *)&this->polySize;
  if ((int)(v23 >> 3) < 1)
  {
    v25 = **(float32x2_t **)&this->polySize;
  }
  else
  {
    v24 = (v23 >> 3);
    v25 = **(float32x2_t **)&this->polySize;
    do
    {
      v26 = *v21++;
      v25 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v25, v26), (int8x8_t)v26, (int8x8_t)v25);
      v22 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v26, v22), (int8x8_t)v26, (int8x8_t)v22);
      --v24;
    }
    while (v24);
  }
  *(float32x2_t *)&this[1].polyPoints[0].v = v25;
  *(float32x2_t *)&this[2].polyBBox.left = v22;
}

void sub_2272F9294(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE6resizeEm(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE8__appendEm((void **)a1, a2 - v2);
  }
}

void _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_24EF97348, MEMORY[0x24BEDAAF0]);
}

void sub_2272F9334(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

void *_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a2);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x24BEDB748], MEMORY[0x24BEDABB8]);
}

_QWORD *std::vector<float>::vector(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_2272F9420(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<float>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<float>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

_QWORD *std::vector<float>::vector(_QWORD *a1, unint64_t a2, _DWORD *a3)
{
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_DWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_2272F9514(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE16__init_with_sizeB8ne180100IPS1_S6_EEvT_T0_m(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_2272F958C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  result = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

char *_ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE18__assign_with_sizeB8ne180100IPKS1_S7_EEvT_T0_l(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 3)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61)
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    v10 = v8 >> 2;
    if (v8 >> 2 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

void _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE8__appendEm(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    v10 = v8 >> 3;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v4, v12);
    else
      v13 = 0;
    v14 = &v13[8 * v10];
    v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    v16 = &v14[8 * a2];
    v18 = (char *)*a1;
    v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        v19 = *((_QWORD *)v17 - 1);
        v17 -= 8;
        *((_QWORD *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
      operator delete(v17);
  }
}

void sub_2272F9AE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2272F9D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)PersonDetectionManager;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_2272F9EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_2272FA604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{

  _Unwind_Resume(a1);
}

void sub_2272FA7E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2272FA8F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2272FAA70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2272FABB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FAC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_2272FAD2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FAE34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2272FB0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2272FB2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2272FB878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  id *v20;
  uint64_t v21;

  objc_destroyWeak(v20);
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a20, 8);
  objc_destroyWeak((id *)(v21 - 40));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

double RenderPoseToVisionPose(simd_float4x4 a1)
{
  uint64_t v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  uint64_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  simd_float4x4 v12;
  simd_float4x4 v13;
  _OWORD v14[4];

  if (onceToken != -1)
  {
    v12 = a1;
    dispatch_once(&onceToken, &__block_literal_global_2);
    a1 = v12;
  }
  v1 = 0;
  v2 = (float32x4_t)VW_RW;
  v3 = (float32x4_t)VW_RW;
  v4 = (float32x4_t)VW_RW;
  v5 = (float32x4_t)VW_RW;
  v13 = a1;
  do
  {
    v14[v1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)&v13.columns[v1])), v3, *(float32x2_t *)v13.columns[v1].f32, 1), v4, (float32x4_t)v13.columns[v1], 2), v5, (float32x4_t)v13.columns[v1], 3);
    ++v1;
  }
  while (v1 != 4);
  v6 = 0;
  v7 = (float32x4_t)v14[0];
  v8 = (float32x4_t)v14[1];
  v9 = (float32x4_t)v14[2];
  v10 = (float32x4_t)v14[3];
  v13.columns[0] = (simd_float4)RC_VC;
  v13.columns[1] = (simd_float4)RC_VC;
  v13.columns[2] = (simd_float4)RC_VC;
  v13.columns[3] = (simd_float4)RC_VC;
  do
  {
    v14[v6] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v7, COERCE_FLOAT(*(_OWORD *)&v13.columns[v6])), v8, *(float32x2_t *)v13.columns[v6].f32, 1), v9, (float32x4_t)v13.columns[v6], 2), v10, (float32x4_t)v13.columns[v6], 3);
    ++v6;
  }
  while (v6 != 4);
  return *(double *)v14;
}

double ___Z22RenderPoseToVisionPose13simd_float4x4_block_invoke()
{
  double result;

  VW_RW = xmmword_227593A20;
  VW_RW = xmmword_227593970;
  VW_RW = xmmword_227593A30;
  VW_RW = xmmword_227593A40;
  RC_VC = xmmword_227593A20;
  RC_VC = xmmword_227593A30;
  result = 0.0;
  RC_VC = xmmword_227593A50;
  RC_VC = xmmword_227593A40;
  return result;
}

void sub_2272FD934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FD97C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FD9C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FDA04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FDA48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FDA8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2272FDAD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t ou_object_group::sortIndices@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v11;

  std::vector<unsigned long>::vector(a2, (a1[1] - *a1) >> 2);
  v4 = *a2;
  v5 = (uint64_t *)a2[1];
  if ((uint64_t *)*a2 != v5)
  {
    v6 = 0;
    v7 = (uint64_t *)*a2;
    do
      *v7++ = v6++;
    while (v7 != v5);
  }
  v8 = 126 - 2 * __clz(((uint64_t)v5 - v4) >> 3);
  v11 = a1;
  if (v5 == (uint64_t *)v4)
    v9 = 0;
  else
    v9 = v8;
  return std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(v4, v5, &v11, v9, 1);
}

void ou_object_group::nmsOnBoxesHelper(void *a1, uint64_t *a2, uint64_t *a3, char **a4, float a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char **v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  int v37;
  _QWORD *v38;
  _BYTE *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  char **v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  void *__p[2];
  __int128 v61;
  __int128 v62;
  _QWORD v63[4];

  v56 = a1;
  v9 = (a2[1] - *a2) >> 7;
  if (v9 != (a3[1] - *a3) >> 2)
    __assert_rtn("nmsOnBoxesHelper", "OUObjectGroup.mm", 37, "boxes.size() == box_scores.size()");
  LODWORD(v57) = -1082130432;
  std::vector<float>::vector(__p, v9, &v57);
  std::vector<std::vector<float>>::vector(v63, v9, (uint64_t)__p);
  v52 = a3;
  v54 = a4;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v10 = *a2;
  v11 = a2[1];
  if (v11 != *a2)
  {
    v12 = 0;
    v13 = *MEMORY[0x24BE6E098];
    v14 = *MEMORY[0x24BE6E0E8];
    v55 = *MEMORY[0x24BE6E0D8];
    v15 = 128;
    v16 = 24;
    while (1)
    {
      v17 = v12++;
      if (v12 < (v11 - v10) >> 7)
        break;
      v23 = (v11 - v10) >> 7;
LABEL_17:
      v16 += 24;
      v15 += 128;
      if (v12 >= v23)
        goto LABEL_18;
    }
    v18 = v15;
    v19 = v16;
    v53 = v12;
    while (1)
    {
      v61 = 0u;
      v62 = 0u;
      *(_OWORD *)__p = 0u;
      box3dIou((float32x4_t *)(v10 + (v17 << 7)), (float32x4_t *)(v10 + v18), (uint64_t)__p);
      if ((objc_msgSend(v56, "isEqualToString:", v13, v52) & 1) != 0
        || objc_msgSend(v56, "isEqualToString:", v14))
      {
        v20 = DWORD2(v61);
      }
      else
      {
        if (!objc_msgSend(v56, "isEqualToString:", v55))
          goto LABEL_12;
        v20 = (int)__p[0];
      }
      v21 = v63[0];
      *(_DWORD *)(*(_QWORD *)(v63[0] + v19) + 4 * v17) = v20;
      *(_DWORD *)(*(_QWORD *)(v21 + 24 * v17) + 4 * v12) = v20;
LABEL_12:
      ++v12;
      v10 = *a2;
      v11 = a2[1];
      v22 = v11 - *a2;
      v19 += 24;
      v18 += 128;
      if (v12 >= v22 >> 7)
      {
        v23 = v22 >> 7;
        v12 = v53;
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  ou_object_group::sortIndices(v52, (uint64_t *)__p);
  v24 = v54;
  v54[1] = *v54;
  v25 = (char *)__p[0];
  if (__p[0] != __p[1])
  {
    while (1)
    {
      v26 = *(_QWORD *)v25;
      v28 = v24[1];
      v27 = (unint64_t)v24[2];
      if ((unint64_t)v28 >= v27)
      {
        v30 = *v24;
        v31 = (v28 - *v24) >> 2;
        v32 = v31 + 1;
        if ((unint64_t)(v31 + 1) >> 62)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v33 = v27 - (_QWORD)v30;
        if (v33 >> 1 > v32)
          v32 = v33 >> 1;
        if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
          v34 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v34 = v32;
        if (v34)
        {
          v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(v54 + 2), v34);
          v30 = *v24;
          v28 = v24[1];
        }
        else
        {
          v35 = 0;
        }
        v36 = &v35[4 * v31];
        *(_DWORD *)v36 = v26;
        v29 = v36 + 4;
        while (v28 != v30)
        {
          v37 = *((_DWORD *)v28 - 1);
          v28 -= 4;
          *((_DWORD *)v36 - 1) = v37;
          v36 -= 4;
        }
        *v24 = v36;
        v24[1] = v29;
        v24[2] = &v35[4 * v34];
        if (v30)
          operator delete(v30);
      }
      else
      {
        *(_DWORD *)v28 = v26;
        v29 = v28 + 4;
      }
      v24[1] = v29;
      v57 = 0;
      v58 = 0;
      v59 = 0;
      v38 = __p[0];
      v39 = __p[1];
      if ((void *)((char *)__p[1] - (char *)__p[0]) < (void *)9)
      {
        v40 = 0;
        if (!__p[0])
          goto LABEL_58;
      }
      else
      {
        v40 = 0;
        v41 = 1;
        do
        {
          v42 = v38[v41];
          if (*(float *)(*(_QWORD *)(v63[0] + 24 * v26) + 4 * v42) <= a5)
          {
            if (v40 >= v59)
            {
              v44 = v57;
              v45 = (v40 - v57) >> 3;
              v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 61)
                _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
              v47 = v59 - v57;
              if ((v59 - v57) >> 2 > v46)
                v46 = v47 >> 2;
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8)
                v48 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v48 = v46;
              if (v48)
              {
                v49 = (char *)_ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)&v59, v48);
                v44 = v57;
                v40 = v58;
              }
              else
              {
                v49 = 0;
              }
              v50 = &v49[8 * v45];
              *(_QWORD *)v50 = v42;
              v43 = v50 + 8;
              while (v40 != v44)
              {
                v51 = *((_QWORD *)v40 - 1);
                v40 -= 8;
                *((_QWORD *)v50 - 1) = v51;
                v50 -= 8;
              }
              v57 = v50;
              v58 = v43;
              v59 = &v49[8 * v48];
              if (v44)
                operator delete(v44);
            }
            else
            {
              *(_QWORD *)v40 = v42;
              v43 = v40 + 8;
            }
            v58 = v43;
            v40 = v43;
            v38 = __p[0];
            v39 = __p[1];
          }
          ++v41;
        }
        while (v41 < (v39 - (_BYTE *)v38) >> 3);
        if (!v38)
          goto LABEL_58;
      }
      __p[1] = v38;
      operator delete(v38);
      v40 = v58;
LABEL_58:
      v25 = v57;
      __p[0] = v57;
      __p[1] = v40;
      *(_QWORD *)&v61 = v59;
      v24 = v54;
      if (v57 == v40)
        goto LABEL_63;
    }
  }
  v40 = (char *)__p[0];
LABEL_63:
  if (v40)
  {
    __p[1] = v40;
    operator delete(v40);
  }
  __p[0] = v63;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);

}

void sub_2272FDFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  __p = &a23;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);

  _Unwind_Resume(a1);
}

void ou_object_group::nmsClasswise(uint64_t *a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  int v11;
  char *v12;
  char *v13;
  int v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  int v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  int v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  int v41;
  char *v42;
  int v43;
  int *v44;
  int *v45;
  unint64_t v46;
  __int128 *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  char *v76;
  _DWORD *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int *v88;
  int *v89;
  OUBox3d *v90;
  const OUBox3d *v91;
  int *v92;
  unint64_t v93;
  __int128 *v94;
  char *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  char *v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  char *v123;
  _DWORD *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  int v134;
  int *v135;
  int *v136;
  OUBox3d *v137;
  const OUBox3d *v138;
  int *v139;
  unint64_t v140;
  __int128 *v141;
  char *v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  char *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  char *v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  char *v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  char *v170;
  float v171;
  char *v172;
  float *v173;
  char *v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  float *v180;
  int v181;
  int *v182;
  int *v183;
  OUBox3d *v184;
  const OUBox3d *v185;
  void *v186[3];
  void *v187;
  char *v188;
  char *v189;
  void *v190;
  char *v191;
  char *v192;
  void *v193;
  int *v194;
  uint64_t v195;
  void *v196;
  char *v197;
  char *v198;
  void *__p;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v202 = 0;
  v203 = 0;
  v204 = 0;
  __p = 0;
  v200 = 0;
  v201 = 0;
  v196 = 0;
  v197 = 0;
  v198 = 0;
  v6 = *a1;
  if (*a1 == a1[1])
  {
    v44 = 0;
    v45 = 0;
  }
  else
  {
    v7 = *MEMORY[0x24BE6E098];
    v8 = *MEMORY[0x24BE6E0E8];
    v9 = *MEMORY[0x24BE6E0D8];
    do
    {
      v10 = *(id *)(v6 + 128);
      if (objc_msgSend(v10, "isEqualToString:", v7))
      {
        v11 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        v12 = v203;
        if (v203 >= v204)
        {
          v17 = v202;
          v18 = (v203 - v202) >> 2;
          v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 62)
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          v20 = v204 - v202;
          if ((v204 - v202) >> 1 > v19)
            v19 = v20 >> 1;
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
            v21 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v21 = v19;
          if (v21)
          {
            v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v204, v21);
            v17 = v202;
            v12 = v203;
          }
          else
          {
            v22 = 0;
          }
          v32 = &v22[4 * v18];
          *(_DWORD *)v32 = v11;
          v13 = v32 + 4;
          while (v12 != v17)
          {
            v33 = *((_DWORD *)v12 - 1);
            v12 -= 4;
            *((_DWORD *)v32 - 1) = v33;
            v32 -= 4;
          }
          v202 = v32;
          v203 = v13;
          v204 = &v22[4 * v21];
          if (v17)
            operator delete(v17);
        }
        else
        {
          *(_DWORD *)v203 = v11;
          v13 = v12 + 4;
        }
        v203 = v13;
      }
      else if (objc_msgSend(v10, "isEqualToString:", v8))
      {
        v14 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        v15 = v200;
        if (v200 >= v201)
        {
          v26 = (char *)__p;
          v27 = (v200 - (_BYTE *)__p) >> 2;
          v28 = v27 + 1;
          if ((unint64_t)(v27 + 1) >> 62)
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          v29 = v201 - (_BYTE *)__p;
          if ((v201 - (_BYTE *)__p) >> 1 > v28)
            v28 = v29 >> 1;
          if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFFCLL)
            v30 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v30 = v28;
          if (v30)
          {
            v31 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v201, v30);
            v26 = (char *)__p;
            v15 = v200;
          }
          else
          {
            v31 = 0;
          }
          v40 = &v31[4 * v27];
          *(_DWORD *)v40 = v14;
          v16 = v40 + 4;
          while (v15 != v26)
          {
            v41 = *((_DWORD *)v15 - 1);
            v15 -= 4;
            *((_DWORD *)v40 - 1) = v41;
            v40 -= 4;
          }
          __p = v40;
          v200 = v16;
          v201 = &v31[4 * v30];
          if (v26)
            operator delete(v26);
        }
        else
        {
          *(_DWORD *)v200 = v14;
          v16 = v15 + 4;
        }
        v200 = v16;
      }
      else if (objc_msgSend(v10, "isEqualToString:", v9))
      {
        v23 = -1227133513 * ((unint64_t)(v6 - *a1) >> 5);
        v24 = v197;
        if (v197 >= v198)
        {
          v34 = (char *)v196;
          v35 = (v197 - (_BYTE *)v196) >> 2;
          v36 = v35 + 1;
          if ((unint64_t)(v35 + 1) >> 62)
            _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
          v37 = v198 - (_BYTE *)v196;
          if ((v198 - (_BYTE *)v196) >> 1 > v36)
            v36 = v37 >> 1;
          if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFFCLL)
            v38 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v38 = v36;
          if (v38)
          {
            v39 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v198, v38);
            v34 = (char *)v196;
            v24 = v197;
          }
          else
          {
            v39 = 0;
          }
          v42 = &v39[4 * v35];
          *(_DWORD *)v42 = v23;
          v25 = v42 + 4;
          while (v24 != v34)
          {
            v43 = *((_DWORD *)v24 - 1);
            v24 -= 4;
            *((_DWORD *)v42 - 1) = v43;
            v42 -= 4;
          }
          v196 = v42;
          v197 = v25;
          v198 = &v39[4 * v38];
          if (v34)
            operator delete(v34);
        }
        else
        {
          *(_DWORD *)v197 = v23;
          v25 = v24 + 4;
        }
        v197 = v25;
      }

      v6 += 224;
    }
    while (v6 != a1[1]);
    v44 = (int *)v202;
    v45 = (int *)v203;
  }
  v193 = 0;
  v194 = 0;
  v195 = 0;
  v190 = 0;
  v191 = 0;
  v192 = 0;
  v187 = 0;
  v188 = 0;
  v189 = 0;
  if (v45 != v44)
  {
    v46 = 0;
    do
    {
      v47 = (__int128 *)(*a1 + 224 * v44[v46]);
      v48 = v191;
      if (v191 >= v192)
      {
        v56 = (char *)v190;
        v57 = (v191 - (_BYTE *)v190) >> 7;
        v58 = v57 + 1;
        if ((unint64_t)(v57 + 1) >> 57)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v59 = v192 - (_BYTE *)v190;
        if ((v192 - (_BYTE *)v190) >> 6 > v58)
          v58 = v59 >> 6;
        if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFF80)
          v60 = 0x1FFFFFFFFFFFFFFLL;
        else
          v60 = v58;
        if (v60)
        {
          v61 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v60);
          v56 = (char *)v190;
          v48 = v191;
        }
        else
        {
          v61 = 0;
        }
        v62 = &v61[128 * v57];
        v63 = *v47;
        v64 = v47[1];
        v65 = v47[3];
        *((_OWORD *)v62 + 2) = v47[2];
        *((_OWORD *)v62 + 3) = v65;
        *(_OWORD *)v62 = v63;
        *((_OWORD *)v62 + 1) = v64;
        v66 = v47[4];
        v67 = v47[5];
        v68 = v47[7];
        *((_OWORD *)v62 + 6) = v47[6];
        *((_OWORD *)v62 + 7) = v68;
        *((_OWORD *)v62 + 4) = v66;
        *((_OWORD *)v62 + 5) = v67;
        if (v48 == v56)
        {
          v76 = &v61[128 * v57];
        }
        else
        {
          v69 = &v61[128 * v57];
          do
          {
            v70 = *((_OWORD *)v48 - 8);
            v71 = *((_OWORD *)v48 - 7);
            v72 = *((_OWORD *)v48 - 5);
            *((_OWORD *)v69 - 6) = *((_OWORD *)v48 - 6);
            *((_OWORD *)v69 - 5) = v72;
            *((_OWORD *)v69 - 8) = v70;
            *((_OWORD *)v69 - 7) = v71;
            v73 = *((_OWORD *)v48 - 4);
            v74 = *((_OWORD *)v48 - 3);
            v75 = *((_OWORD *)v48 - 1);
            v76 = v69 - 128;
            *((_OWORD *)v69 - 2) = *((_OWORD *)v48 - 2);
            *((_OWORD *)v69 - 1) = v75;
            *((_OWORD *)v69 - 4) = v73;
            *((_OWORD *)v69 - 3) = v74;
            v48 -= 128;
            v69 -= 128;
          }
          while (v48 != v56);
        }
        v55 = v62 + 128;
        v190 = v76;
        v191 = v62 + 128;
        v192 = &v61[128 * v60];
        if (v56)
          operator delete(v56);
      }
      else
      {
        v49 = *v47;
        v50 = v47[1];
        v51 = v47[3];
        *((_OWORD *)v191 + 2) = v47[2];
        *((_OWORD *)v48 + 3) = v51;
        *(_OWORD *)v48 = v49;
        *((_OWORD *)v48 + 1) = v50;
        v52 = v47[4];
        v53 = v47[5];
        v54 = v47[7];
        *((_OWORD *)v48 + 6) = v47[6];
        *((_OWORD *)v48 + 7) = v54;
        *((_OWORD *)v48 + 4) = v52;
        *((_OWORD *)v48 + 5) = v53;
        v55 = v48 + 128;
      }
      v191 = v55;
      v77 = (_DWORD *)(*a1 + 224 * *(int *)&v202[4 * v46] + 136);
      v78 = v188;
      if (v188 >= v189)
      {
        v80 = (char *)v187;
        v81 = (v188 - (_BYTE *)v187) >> 2;
        v82 = v81 + 1;
        if ((unint64_t)(v81 + 1) >> 62)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v83 = v189 - (_BYTE *)v187;
        if ((v189 - (_BYTE *)v187) >> 1 > v82)
          v82 = v83 >> 1;
        if ((unint64_t)v83 >= 0x7FFFFFFFFFFFFFFCLL)
          v84 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v84 = v82;
        if (v84)
        {
          v85 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v84);
          v80 = (char *)v187;
          v78 = v188;
        }
        else
        {
          v85 = 0;
        }
        v86 = &v85[4 * v81];
        *(_DWORD *)v86 = *v77;
        v79 = v86 + 4;
        while (v78 != v80)
        {
          v87 = *((_DWORD *)v78 - 1);
          v78 -= 4;
          *((_DWORD *)v86 - 1) = v87;
          v86 -= 4;
        }
        v187 = v86;
        v188 = v79;
        v189 = &v85[4 * v84];
        if (v80)
          operator delete(v80);
      }
      else
      {
        *(_DWORD *)v188 = *v77;
        v79 = v78 + 4;
      }
      v188 = v79;
      ++v46;
      v44 = (int *)v202;
    }
    while (v46 < (v203 - v202) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x24BE6E098], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  v88 = (int *)v193;
  v89 = v194;
  if (v193 != v194)
  {
    v90 = (OUBox3d *)a2[1];
    do
    {
      v91 = (const OUBox3d *)(*a1 + 224 * *(int *)&v202[4 * *v88]);
      if ((unint64_t)v90 >= a2[2])
      {
        v90 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v91);
      }
      else
      {
        OUBox3d::OUBox3d(v90, v91);
        v90 = (OUBox3d *)((char *)v90 + 224);
        a2[1] = (uint64_t)v90;
      }
      a2[1] = (uint64_t)v90;
      ++v88;
    }
    while (v88 != v89);
    v88 = (int *)v193;
  }
  v191 = (char *)v190;
  v188 = (char *)v187;
  v194 = v88;
  v92 = (int *)__p;
  if (v200 != __p)
  {
    v93 = 0;
    do
    {
      v94 = (__int128 *)(*a1 + 224 * v92[v93]);
      v95 = v191;
      if (v191 >= v192)
      {
        v103 = (char *)v190;
        v104 = (v191 - (_BYTE *)v190) >> 7;
        v105 = v104 + 1;
        if ((unint64_t)(v104 + 1) >> 57)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v106 = v192 - (_BYTE *)v190;
        if ((v192 - (_BYTE *)v190) >> 6 > v105)
          v105 = v106 >> 6;
        if ((unint64_t)v106 >= 0x7FFFFFFFFFFFFF80)
          v107 = 0x1FFFFFFFFFFFFFFLL;
        else
          v107 = v105;
        if (v107)
        {
          v108 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v107);
          v103 = (char *)v190;
          v95 = v191;
        }
        else
        {
          v108 = 0;
        }
        v109 = &v108[128 * v104];
        v110 = *v94;
        v111 = v94[1];
        v112 = v94[3];
        *((_OWORD *)v109 + 2) = v94[2];
        *((_OWORD *)v109 + 3) = v112;
        *(_OWORD *)v109 = v110;
        *((_OWORD *)v109 + 1) = v111;
        v113 = v94[4];
        v114 = v94[5];
        v115 = v94[7];
        *((_OWORD *)v109 + 6) = v94[6];
        *((_OWORD *)v109 + 7) = v115;
        *((_OWORD *)v109 + 4) = v113;
        *((_OWORD *)v109 + 5) = v114;
        if (v95 == v103)
        {
          v123 = &v108[128 * v104];
        }
        else
        {
          v116 = &v108[128 * v104];
          do
          {
            v117 = *((_OWORD *)v95 - 8);
            v118 = *((_OWORD *)v95 - 7);
            v119 = *((_OWORD *)v95 - 5);
            *((_OWORD *)v116 - 6) = *((_OWORD *)v95 - 6);
            *((_OWORD *)v116 - 5) = v119;
            *((_OWORD *)v116 - 8) = v117;
            *((_OWORD *)v116 - 7) = v118;
            v120 = *((_OWORD *)v95 - 4);
            v121 = *((_OWORD *)v95 - 3);
            v122 = *((_OWORD *)v95 - 1);
            v123 = v116 - 128;
            *((_OWORD *)v116 - 2) = *((_OWORD *)v95 - 2);
            *((_OWORD *)v116 - 1) = v122;
            *((_OWORD *)v116 - 4) = v120;
            *((_OWORD *)v116 - 3) = v121;
            v95 -= 128;
            v116 -= 128;
          }
          while (v95 != v103);
        }
        v102 = v109 + 128;
        v190 = v123;
        v191 = v109 + 128;
        v192 = &v108[128 * v107];
        if (v103)
          operator delete(v103);
      }
      else
      {
        v96 = *v94;
        v97 = v94[1];
        v98 = v94[3];
        *((_OWORD *)v191 + 2) = v94[2];
        *((_OWORD *)v95 + 3) = v98;
        *(_OWORD *)v95 = v96;
        *((_OWORD *)v95 + 1) = v97;
        v99 = v94[4];
        v100 = v94[5];
        v101 = v94[7];
        *((_OWORD *)v95 + 6) = v94[6];
        *((_OWORD *)v95 + 7) = v101;
        *((_OWORD *)v95 + 4) = v99;
        *((_OWORD *)v95 + 5) = v100;
        v102 = v95 + 128;
      }
      v191 = v102;
      v124 = (_DWORD *)(*a1 + 224 * *((int *)__p + v93) + 136);
      v125 = v188;
      if (v188 >= v189)
      {
        v127 = (char *)v187;
        v128 = (v188 - (_BYTE *)v187) >> 2;
        v129 = v128 + 1;
        if ((unint64_t)(v128 + 1) >> 62)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v130 = v189 - (_BYTE *)v187;
        if ((v189 - (_BYTE *)v187) >> 1 > v129)
          v129 = v130 >> 1;
        if ((unint64_t)v130 >= 0x7FFFFFFFFFFFFFFCLL)
          v131 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v131 = v129;
        if (v131)
        {
          v132 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v131);
          v127 = (char *)v187;
          v125 = v188;
        }
        else
        {
          v132 = 0;
        }
        v133 = &v132[4 * v128];
        *(_DWORD *)v133 = *v124;
        v126 = v133 + 4;
        while (v125 != v127)
        {
          v134 = *((_DWORD *)v125 - 1);
          v125 -= 4;
          *((_DWORD *)v133 - 1) = v134;
          v133 -= 4;
        }
        v187 = v133;
        v188 = v126;
        v189 = &v132[4 * v131];
        if (v127)
          operator delete(v127);
      }
      else
      {
        *(_DWORD *)v188 = *v124;
        v126 = v125 + 4;
      }
      v188 = v126;
      ++v93;
      v92 = (int *)__p;
    }
    while (v93 < (v200 - (_BYTE *)__p) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x24BE6E0E8], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  v135 = (int *)v193;
  v136 = v194;
  if (v193 != v194)
  {
    v137 = (OUBox3d *)a2[1];
    do
    {
      v138 = (const OUBox3d *)(*a1 + 224 * *((int *)__p + *v135));
      if ((unint64_t)v137 >= a2[2])
      {
        v137 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v138);
      }
      else
      {
        OUBox3d::OUBox3d(v137, v138);
        v137 = (OUBox3d *)((char *)v137 + 224);
        a2[1] = (uint64_t)v137;
      }
      a2[1] = (uint64_t)v137;
      ++v135;
    }
    while (v135 != v136);
    v135 = (int *)v193;
  }
  v191 = (char *)v190;
  v188 = (char *)v187;
  v194 = v135;
  v139 = (int *)v196;
  if (v197 != v196)
  {
    v140 = 0;
    do
    {
      v141 = (__int128 *)(*a1 + 224 * v139[v140]);
      v142 = v191;
      if (v191 >= v192)
      {
        v150 = (char *)v190;
        v151 = (v191 - (_BYTE *)v190) >> 7;
        v152 = v151 + 1;
        if ((unint64_t)(v151 + 1) >> 57)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v153 = v192 - (_BYTE *)v190;
        if ((v192 - (_BYTE *)v190) >> 6 > v152)
          v152 = v153 >> 6;
        if ((unint64_t)v153 >= 0x7FFFFFFFFFFFFF80)
          v154 = 0x1FFFFFFFFFFFFFFLL;
        else
          v154 = v152;
        if (v154)
        {
          v155 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>((uint64_t)&v192, v154);
          v150 = (char *)v190;
          v142 = v191;
        }
        else
        {
          v155 = 0;
        }
        v156 = &v155[128 * v151];
        v157 = *v141;
        v158 = v141[1];
        v159 = v141[3];
        *((_OWORD *)v156 + 2) = v141[2];
        *((_OWORD *)v156 + 3) = v159;
        *(_OWORD *)v156 = v157;
        *((_OWORD *)v156 + 1) = v158;
        v160 = v141[4];
        v161 = v141[5];
        v162 = v141[7];
        *((_OWORD *)v156 + 6) = v141[6];
        *((_OWORD *)v156 + 7) = v162;
        *((_OWORD *)v156 + 4) = v160;
        *((_OWORD *)v156 + 5) = v161;
        if (v142 == v150)
        {
          v170 = &v155[128 * v151];
        }
        else
        {
          v163 = &v155[128 * v151];
          do
          {
            v164 = *((_OWORD *)v142 - 8);
            v165 = *((_OWORD *)v142 - 7);
            v166 = *((_OWORD *)v142 - 5);
            *((_OWORD *)v163 - 6) = *((_OWORD *)v142 - 6);
            *((_OWORD *)v163 - 5) = v166;
            *((_OWORD *)v163 - 8) = v164;
            *((_OWORD *)v163 - 7) = v165;
            v167 = *((_OWORD *)v142 - 4);
            v168 = *((_OWORD *)v142 - 3);
            v169 = *((_OWORD *)v142 - 1);
            v170 = v163 - 128;
            *((_OWORD *)v163 - 2) = *((_OWORD *)v142 - 2);
            *((_OWORD *)v163 - 1) = v169;
            *((_OWORD *)v163 - 4) = v167;
            *((_OWORD *)v163 - 3) = v168;
            v142 -= 128;
            v163 -= 128;
          }
          while (v142 != v150);
        }
        v149 = v156 + 128;
        v190 = v170;
        v191 = v156 + 128;
        v192 = &v155[128 * v154];
        if (v150)
          operator delete(v150);
      }
      else
      {
        v143 = *v141;
        v144 = v141[1];
        v145 = v141[3];
        *((_OWORD *)v191 + 2) = v141[2];
        *((_OWORD *)v142 + 3) = v145;
        *(_OWORD *)v142 = v143;
        *((_OWORD *)v142 + 1) = v144;
        v146 = v141[4];
        v147 = v141[5];
        v148 = v141[7];
        *((_OWORD *)v142 + 6) = v141[6];
        *((_OWORD *)v142 + 7) = v148;
        *((_OWORD *)v142 + 4) = v146;
        *((_OWORD *)v142 + 5) = v147;
        v149 = v142 + 128;
      }
      v191 = v149;
      box3dToCentroidSizeAngle((float32x4_t *)(*a1 + 224 * *((int *)v196 + v140)), (uint64_t *)v186);
      v171 = (float)(*((float *)v186[0] + 3) * *((float *)v186[0] + 4)) * *((float *)v186[0] + 5);
      v172 = v188;
      if (v188 >= v189)
      {
        v174 = (char *)v187;
        v175 = (v188 - (_BYTE *)v187) >> 2;
        v176 = v175 + 1;
        if ((unint64_t)(v175 + 1) >> 62)
          _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
        v177 = v189 - (_BYTE *)v187;
        if ((v189 - (_BYTE *)v187) >> 1 > v176)
          v176 = v177 >> 1;
        if ((unint64_t)v177 >= 0x7FFFFFFFFFFFFFFCLL)
          v178 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v178 = v176;
        if (v178)
        {
          v179 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v189, v178);
          v174 = (char *)v187;
          v172 = v188;
        }
        else
        {
          v179 = 0;
        }
        v180 = (float *)&v179[4 * v175];
        *v180 = v171;
        v173 = v180 + 1;
        while (v172 != v174)
        {
          v181 = *((_DWORD *)v172 - 1);
          v172 -= 4;
          *((_DWORD *)v180-- - 1) = v181;
        }
        v187 = v180;
        v188 = (char *)v173;
        v189 = &v179[4 * v178];
        if (v174)
          operator delete(v174);
      }
      else
      {
        *(float *)v188 = v171;
        v173 = (float *)(v172 + 4);
      }
      v188 = (char *)v173;
      if (v186[0])
      {
        v186[1] = v186[0];
        operator delete(v186[0]);
      }
      ++v140;
      v139 = (int *)v196;
    }
    while (v140 < (v197 - (_BYTE *)v196) >> 2);
  }
  ou_object_group::nmsOnBoxesHelper((void *)*MEMORY[0x24BE6E0D8], (uint64_t *)&v190, (uint64_t *)&v187, (char **)&v193, a3);
  v182 = (int *)v193;
  v183 = v194;
  if (v193 != v194)
  {
    v184 = (OUBox3d *)a2[1];
    do
    {
      v185 = (const OUBox3d *)(*a1 + 224 * *((int *)v196 + *v182));
      if ((unint64_t)v184 >= a2[2])
      {
        v184 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a2, v185);
      }
      else
      {
        OUBox3d::OUBox3d(v184, v185);
        v184 = (OUBox3d *)((char *)v184 + 224);
        a2[1] = (uint64_t)v184;
      }
      a2[1] = (uint64_t)v184;
      ++v182;
    }
    while (v182 != v183);
  }
  if (v187)
  {
    v188 = (char *)v187;
    operator delete(v187);
  }
  if (v190)
  {
    v191 = (char *)v190;
    operator delete(v190);
  }
  if (v193)
  {
    v194 = (int *)v193;
    operator delete(v193);
  }
  if (v196)
  {
    v197 = (char *)v196;
    operator delete(v196);
  }
  if (__p)
  {
    v200 = (char *)__p;
    operator delete(__p);
  }
  if (v202)
  {
    v203 = v202;
    operator delete(v202);
  }
}

void sub_2272FEC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v33;

  if (__p)
    operator delete(__p);
  if (a28)
    operator delete(a28);
  v33 = *(void **)(v31 - 128);
  if (v33)
  {
    *(_QWORD *)(v31 - 120) = v33;
    operator delete(v33);
  }
  *(_QWORD *)(v31 - 128) = v29;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)(v31 - 128));
  _Unwind_Resume(a1);
}

void ou_object_group::boxesFromObjects(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  id v6;
  unint64_t v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  float v15;
  float v16;
  void *v17;
  void *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  __int128 v27;
  id v28;
  uint64_t v29;
  void **v30;
  id v31;
  __int128 v32[8];
  id v33;
  int v34;
  __int128 v35;
  void *v36[3];
  __int128 __p;
  uint64_t v38;
  id v39;
  __int16 v40;
  __int128 v41[9];

  v5 = a1;
  v6 = a2;
  v7 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v30 = v36;
  *a3 = 0;
  while (objc_msgSend(v5, "count", v30) > v7)
  {
    objc_msgSend(v5, "objectAtIndexedSubscript:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "hasBoxesDict:", v6);

    if ((v9 & 1) != 0)
    {
      memset(v41, 0, 128);
      objc_msgSend(v5, "objectAtIndexedSubscript:", v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "boxesDict");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "objectForKeyedSubscript:", v6);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      box3dFromNSArray(v12, (uint64_t)v41);

      objc_msgSend(v5, "objectAtIndexedSubscript:", v7);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "type");
      v31 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "objectAtIndexedSubscript:", v7);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "confidence");
      v16 = v15;
      objc_msgSend(v5, "objectAtIndexedSubscript:", v7);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "identifier");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      OUBox3d::OUBox3d((uint64_t)v32, v41, &v31, v18, v16);
      v19 = a3[1];
      if (v19 >= a3[2])
      {
        v29 = std::vector<OUBox3d>::__push_back_slow_path<OUBox3d>(a3, v32);
      }
      else
      {
        v20 = v32[0];
        v21 = v32[1];
        v22 = v32[3];
        *(_OWORD *)(v19 + 32) = v32[2];
        *(_OWORD *)(v19 + 48) = v22;
        *(_OWORD *)v19 = v20;
        *(_OWORD *)(v19 + 16) = v21;
        v23 = v32[4];
        v24 = v32[5];
        v25 = v32[7];
        *(_OWORD *)(v19 + 96) = v32[6];
        *(_OWORD *)(v19 + 112) = v25;
        *(_OWORD *)(v19 + 64) = v23;
        *(_OWORD *)(v19 + 80) = v24;
        v26 = v33;
        v33 = 0;
        *(_QWORD *)(v19 + 128) = v26;
        *(_DWORD *)(v19 + 136) = v34;
        v27 = v35;
        v35 = 0u;
        *(_QWORD *)(v19 + 176) = 0;
        *(_OWORD *)(v19 + 144) = v27;
        *(_OWORD *)(v19 + 160) = 0u;
        *(_OWORD *)(v19 + 160) = *(_OWORD *)v36;
        *(void **)(v19 + 176) = v36[2];
        *(_OWORD *)v30 = 0u;
        v30[2] = 0;
        *(_OWORD *)(v19 + 184) = __p;
        *(_QWORD *)(v19 + 200) = v38;
        __p = 0u;
        v38 = 0;
        v28 = v39;
        v39 = 0;
        *(_QWORD *)(v19 + 208) = v28;
        *(_WORD *)(v19 + 216) = v40;
        v29 = v19 + 224;
      }
      a3[1] = v29;

      if ((_QWORD)__p)
        operator delete((void *)__p);
      if (v36[0])
      {
        v36[1] = v36[0];
        operator delete(v36[0]);
      }

    }
    ++v7;
  }

}

void sub_2272FF018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a3);
  OUBox3d::~OUBox3d((id *)va);

  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void OUBox3d::~OUBox3d(id *this)
{
  id v2;
  id v3;

  v2 = this[23];
  if (v2)
    operator delete(v2);
  v3 = this[20];
  if (v3)
  {
    this[21] = v3;
    operator delete(v3);
  }

}

void ou_object_group::box3d_iou_pairwise_matrix(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *__p[2];
  __int128 v13;
  __int128 v14;
  int v15;

  *(_QWORD *)(a3 + 64) = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  v7 = *a1;
  v6 = a1[1];
  v8 = 0x6DB6DB6DB6DB6DB7 * ((v6 - *a1) >> 5);
  v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)(a3 + 24), v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)a3, v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v15 = 0;
  std::vector<float>::vector(__p, v8, &v15);
  std::vector<std::vector<float>>::resize((uint64_t *)(a3 + 48), v8, (uint64_t)__p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v6 != v7)
  {
    v9 = 0;
    if (v8 <= 1)
      v8 = 1;
    do
    {
      v10 = 0;
      for (i = 0; i != v8; ++i)
      {
        v13 = 0u;
        v14 = 0u;
        *(_OWORD *)__p = 0u;
        box3dIou((float32x4_t *)(*a1 + 224 * v9), (float32x4_t *)(*a2 + v10), (uint64_t)__p);
        *(_DWORD *)(*(_QWORD *)(*(_QWORD *)a3 + 24 * v9) + 4 * i) = __p[0];
        *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 24 * v9) + 4 * i) = HIDWORD(__p[0]);
        *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 24 * v9) + 4 * i) = __p[1];
        v10 += 224;
      }
      ++v9;
    }
    while (v9 != v8);
  }
}

void sub_2272FF290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  void **v10;

  if (__p)
    operator delete(__p);
  ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices(v10);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<float>>::resize(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v4 = a1[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  v6 = a2 >= v5;
  v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    std::vector<std::vector<float>>::__append(a1, v7, a3);
  }
  else if (!v6)
  {
    v8 = *a1 + 24 * a2;
    if (v4 != v8)
    {
      v9 = a1[1];
      do
      {
        v11 = *(void **)(v9 - 24);
        v9 -= 24;
        v10 = v11;
        if (v11)
        {
          *(_QWORD *)(v4 - 16) = v10;
          operator delete(v10);
        }
        v4 = v9;
      }
      while (v9 != v8);
    }
    a1[1] = v8;
  }
}

void ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices(void **this)
{
  void **v2;

  v2 = this + 6;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = this + 3;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = this;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void ou_object_group::removeLargeChairs(uint64_t *a1@<X0>, _QWORD *a2@<X1>, char **a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  float v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  float v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v33;
  void *__p[3];
  void *v35;
  _BYTE *v36;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  LODWORD(__p[0]) = 0;
  std::vector<float>::vector(&v35, v6, __p);
  v7 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  v33 = 0;
  std::vector<float>::vector(__p, v7, &v33);
  v8 = *a1;
  if (a1[1] != *a1)
  {
    v9 = 0;
    v10 = 0;
    do
    {
      v11 = boxVolume((_OWORD *)(v8 + v9));
      *((float *)__p[0] + v10++) = v11;
      v8 = *a1;
      v12 = a1[1];
      v9 += 224;
    }
    while (v10 < 0x6DB6DB6DB6DB6DB7 * ((v12 - *a1) >> 5));
    if (v12 != v8)
    {
      v13 = 0;
      v14 = *MEMORY[0x24BE6E098];
      do
      {
        if (objc_msgSend(*(id *)(v8 + 224 * v13 + 128), "isEqualToString:", v14)
          && *((float *)__p[0] + v13) >= 1.0)
        {
          v16 = *a1;
          v15 = a1[1];
          if (v15 != *a1)
          {
            v17 = 0;
            v18 = 0;
            v19 = 128;
            do
            {
              if (v13 == v17)
              {
                *((_DWORD *)v35 + v13) = 0;
                v20 = 0.0;
              }
              else
              {
                v20 = *(float *)(*(_QWORD *)(*a2 + 24 * v13) + 4 * v17) / *((float *)__p[0] + v17);
                *((float *)v35 + v17) = v20;
              }
              if (v20 > 0.6)
              {
                v18 += objc_msgSend(*(id *)(v16 + v19), "isEqualToString:", v14);
                v16 = *a1;
                v15 = a1[1];
              }
              ++v17;
              v19 += 224;
            }
            while (0x6DB6DB6DB6DB6DB7 * ((v15 - v16) >> 5) > v17);
            if (v18 > 1)
            {
              v22 = a3[1];
              v21 = (unint64_t)a3[2];
              if ((unint64_t)v22 >= v21)
              {
                v24 = *a3;
                v25 = (v22 - *a3) >> 2;
                v26 = v25 + 1;
                if ((unint64_t)(v25 + 1) >> 62)
                  _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
                v27 = v21 - (_QWORD)v24;
                if (v27 >> 1 > v26)
                  v26 = v27 >> 1;
                if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
                  v28 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v28 = v26;
                if (v28)
                {
                  v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a3 + 2), v28);
                  v24 = *a3;
                  v22 = a3[1];
                }
                else
                {
                  v29 = 0;
                }
                v30 = &v29[4 * v25];
                *(_DWORD *)v30 = v13;
                v23 = v30 + 4;
                while (v22 != v24)
                {
                  v31 = *((_DWORD *)v22 - 1);
                  v22 -= 4;
                  *((_DWORD *)v30 - 1) = v31;
                  v30 -= 4;
                }
                *a3 = v30;
                a3[1] = v23;
                a3[2] = &v29[4 * v28];
                if (v24)
                  operator delete(v24);
              }
              else
              {
                *(_DWORD *)v22 = v13;
                v23 = v22 + 4;
              }
              a3[1] = v23;
            }
          }
          if (v36 - (_BYTE *)v35 >= 1)
            bzero(v35, 4 * (((unint64_t)(v36 - (_BYTE *)v35) >> 2) - ((unint64_t)(v36 - (_BYTE *)v35) > 3)) + 4);
        }
        ++v13;
        v8 = *a1;
      }
      while (0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5) > v13);
    }
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v35)
  {
    v36 = v35;
    operator delete(v35);
  }
}

void sub_2272FF6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  void *v18;

  if (__p)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  v18 = *(void **)a11;
  if (*(_QWORD *)a11)
  {
    *(_QWORD *)(a11 + 8) = v18;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ou_object_group::removeBoxFromList@<X0>(_QWORD *a1@<X0>, int **a2@<X1>, uint64_t *a3@<X8>)
{
  const OUBox3d *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v10;
  _QWORD v11[5];

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  std::unordered_set<int>::unordered_set<std::__wrap_iter<int const*>>((uint64_t)v11, *a2, a2[1]);
  v10 = 0;
  if (a1[1] != *a1)
  {
    do
    {
      if (!std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::find<int>(v11, &v10))
      {
        v5 = (const OUBox3d *)(*a1 + 224 * v10);
        v6 = a3[1];
        if (v6 >= a3[2])
        {
          v7 = std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(a3, v5);
        }
        else
        {
          OUBox3d::OUBox3d((OUBox3d *)a3[1], v5);
          v7 = v6 + 224;
          a3[1] = v6 + 224;
        }
        a3[1] = v7;
      }
      v8 = ++v10;
    }
    while (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 5) > v8);
  }
  return std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)v11);
}

void sub_2272FF820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void ou_object_group::removeRowCol(__n128 **a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v5;
  __n128 *v6;
  uint64_t v7;
  __n128 *v8;
  __n128 *v9;
  __n128 *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  __n128 *v15;
  __n128 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *a2;
  if (a2[1] != *a2)
  {
    v5 = 0;
    v6 = a1[1];
    do
    {
      v7 = (uint64_t)*a1 + 24 * *(int *)(v2 + 4 * v5);
      std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::vector<float> *,std::vector<float> *,std::vector<float> *,0>((__n128 *)(v7 + 24), v6, v7);
      v6 = v8;
      v9 = a1[1];
      if (v9 != v8)
      {
        v10 = a1[1];
        do
        {
          v12 = (void *)v10[-2].n128_u64[1];
          v10 = (__n128 *)((char *)v10 - 24);
          v11 = v12;
          if (v12)
          {
            v9[-1].n128_u64[0] = (unint64_t)v11;
            operator delete(v11);
          }
          v9 = v10;
        }
        while (v10 != v6);
      }
      a1[1] = v6;
      ++v5;
      v2 = *a2;
      v13 = a2[1];
    }
    while (v5 < (v13 - *a2) >> 2);
    if (v13 != v2)
    {
      v14 = 0;
      v15 = *a1;
      v16 = v6;
      do
      {
        if (v16 == v15)
        {
          v16 = v15;
        }
        else
        {
          v17 = 0;
          v18 = 0;
          do
          {
            v19 = (uint64_t)v15 + v17 * 8;
            v20 = v15->n128_i64[v17 + 1];
            v21 = v15->n128_u64[v17] + 4 * *(int *)(*a2 + 4 * v14);
            v22 = v20 - (v21 + 4);
            if (v20 != v21 + 4)
            {
              memmove((void *)(v15->n128_u64[v17] + 4 * *(int *)(*a2 + 4 * v14)), (const void *)(v21 + 4), v20 - (v21 + 4));
              v15 = *a1;
              v6 = a1[1];
            }
            *(_QWORD *)(v19 + 8) = v21 + v22;
            ++v18;
            v17 += 3;
          }
          while (v18 < 0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v15) >> 3));
          v2 = *a2;
          v13 = a2[1];
          v16 = v6;
        }
        ++v14;
      }
      while (v14 < (v13 - v2) >> 2);
    }
  }
}

uint64_t ou_object_group::checkChairTableOverlap(float32x4_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  char v11;
  int v12;
  _OWORD v14[3];

  v2 = *a2;
  if (a2[1] == *a2)
    return 0xFFFFFFFFLL;
  v5 = 0;
  v6 = 0;
  v7 = *MEMORY[0x24BE6E0E8];
  v8 = *MEMORY[0x24BE6E0D8];
  v9 = 0xFFFFFFFFLL;
  v10 = 0.0;
  do
  {
    v11 = objc_msgSend(*(id *)(v2 + v5 + 128), "isEqualToString:", v7);
    v2 = *a2;
    if ((v11 & 1) != 0
      || (v12 = objc_msgSend(*(id *)(v2 + v5 + 128), "isEqualToString:", v8), v2 = *a2, v12)
      && (float)(*(float *)(v2 + v5 + 72) - *(float *)(v2 + v5 + 8)) < 1.3)
    {
      memset(v14, 0, sizeof(v14));
      box3dIou(a1, (float32x4_t *)(v2 + v5), (uint64_t)v14);
      if (*(float *)v14 <= v10)
        v9 = v9;
      else
        v9 = v6;
      if (*(float *)v14 > v10)
        v10 = *(float *)v14;
      v2 = *a2;
    }
    ++v6;
    v5 += 224;
  }
  while (0x6DB6DB6DB6DB6DB7 * ((a2[1] - v2) >> 5) > v6);
  return v9;
}

void ou_object_group::getIndexOverlapAll(_QWORD *a1, uint64_t *a2)
{
  std::vector<int>::size_type v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__p[3];
  std::vector<int>::value_type __x[2];
  uint64_t v20;
  std::vector<int> v21;

  v4 = 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 5);
  __x[0] = 0;
  std::vector<int>::vector(&v21, v4, __x);
  v5 = *a2;
  if (a2[1] != *a2)
  {
    v6 = 0;
    v7 = 0;
    v8 = *MEMORY[0x24BE6E098];
    do
    {
      if ((objc_msgSend(*(id *)(v5 + v6 + 128), "isEqualToString:", v8) & 1) != 0)
      {
        v9 = ou_object_group::checkChairTableOverlap((float32x4_t *)(*a2 + v6), a2);
        v10 = v9;
        if ((v9 & 0x80000000) == 0)
        {
          box3dToCentroidSizeAngle((float32x4_t *)(*a2 + 224 * v9), (uint64_t *)__x);
          box3dToCentroidSizeAngle((float32x4_t *)(*a2 + v6), (uint64_t *)__p);
          v11 = __p[0];
          if ((float)(*(float *)(*(_QWORD *)__x + 12) * *(float *)(*(_QWORD *)__x + 16)) >= (float)((float)(*((float *)__p[0] + 3) * *((float *)__p[0] + 4)) + (float)(*((float *)__p[0] + 3) * *((float *)__p[0] + 4)))
            && vabds_f32(*(float *)(*a2 + v6 + 8), *(float *)(*a2 + 224 * v10 + 8)) <= 0.3)
          {
            ++v21.__begin_[v10];
          }
          else
          {
            v10 = -1;
          }
          __p[1] = v11;
          operator delete(v11);
          if (*(_QWORD *)__x)
          {
            v20 = *(_QWORD *)__x;
            operator delete(*(void **)__x);
          }
        }
      }
      else
      {
        v10 = -1;
      }
      if (v7 >= (uint64_t)(a1[1] - *a1) >> 2)
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      *(_DWORD *)(*a1 + 4 * v7++) = v10;
      v5 = *a2;
      v12 = a2[1];
      v6 += 224;
    }
    while (v7 < 0x6DB6DB6DB6DB6DB7 * ((v12 - *a2) >> 5));
    if (v12 != v5)
    {
      v13 = 0;
      v14 = 0;
      v15 = *MEMORY[0x24BE6E090];
      v16 = *MEMORY[0x24BE6E0D8];
      do
      {
        if ((objc_msgSend(*(id *)(v5 + v13 + 128), "isEqualToString:", v8) & 1) != 0)
        {
          if (v14 >= (uint64_t)(a1[1] - *a1) >> 2)
            std::vector<int>::__throw_out_of_range[abi:ne180100]();
          v17 = *(unsigned int *)(*a1 + 4 * v14);
          if ((v17 & 0x80000000) == 0
            && v21.__begin_[v17] == 1
            && ((objc_msgSend(*(id *)(*a2 + 224 * v17 + 128), "isEqualToString:", v15) & 1) != 0
             || objc_msgSend(*(id *)(*a2 + 224 * v17 + 128), "isEqualToString:", v16))
            && vaddv_f32(vmul_f32(vsub_f32(*(float32x2_t *)(*a2 + v13 + 16), *(float32x2_t *)(*a2 + v13)), vsub_f32(vmul_f32(vadd_f32(*(float32x2_t *)(*a2 + 224 * v17), *(float32x2_t *)(*a2 + 224 * v17 + 32)), (float32x2_t)0x3F0000003F000000), vmul_f32(vadd_f32(*(float32x2_t *)(*a2 + v13), *(float32x2_t *)(*a2 + v13 + 32)), (float32x2_t)0x3F0000003F000000)))) < 0.0)
          {
            if (v14 >= (uint64_t)(a1[1] - *a1) >> 2)
              std::vector<int>::__throw_out_of_range[abi:ne180100]();
            *(_DWORD *)(*a1 + 4 * v14) = -1;
          }
        }
        ++v14;
        v5 = *a2;
        v13 += 224;
      }
      while (v14 < 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 5));
    }
  }
  if (v21.__begin_)
  {
    v21.__end_ = v21.__begin_;
    operator delete(v21.__begin_);
  }
}

void sub_2272FFDF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

id ou_object_group::groupTableChair(void *a1)
{
  id *v1;
  id *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  std::vector<int>::pointer end;
  int *v7;
  _QWORD **v8;
  char *v9;
  int v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  int v19;
  _QWORD *v20;
  _QWORD **v21;
  BOOL v22;
  std::vector<int>::pointer begin;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  BOOL v31;
  void *v32;
  id *i;
  id v34;
  std::vector<int>::pointer v35;
  int *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t k;
  id v46;
  void *v47;
  int v48;
  std::vector<int>::pointer v49;
  std::vector<int>::pointer v50;
  void *v51;
  OUBox3d *v52;
  OUBox3d *v53;
  void *v54;
  BOOL v55;
  void *v56;
  __int16 v57;
  id v58;
  id v59;
  id obj;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  void *__p;
  char *v72;
  char *v73;
  std::vector<int>::value_type __x[2];
  _QWORD *v75[2];
  std::vector<int> v76;
  __n128 *v77[3];
  __n128 *v78[3];
  __n128 *v79[3];
  void *v80;
  void *v81;
  std::vector<int> v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  OUBox3d *v88;
  unint64_t v89;
  std::vector<int> v90;
  id *v91;
  id *v92;
  _BYTE v93[128];
  _BYTE v94[128];
  uint64_t v95;

  v95 = *MEMORY[0x24BDAC8D0];
  v58 = a1;
  ou_object_group::boxesFromObjects(v58, (void *)*MEMORY[0x24BE6E070], (uint64_t *)&v91);
  memset(&v90, 0, sizeof(v90));
  v87 = 0;
  v88 = 0;
  v89 = 0;
  v2 = v91;
  v1 = v92;
  if (v91 == v92)
    goto LABEL_59;
  v3 = 0;
  v62 = *MEMORY[0x24BE6E098];
  v4 = *MEMORY[0x24BE6E0E8];
  v5 = *MEMORY[0x24BE6E0D8];
  do
  {
    if ((objc_msgSend(v2[16], "isEqualToString:", v62) & 1) != 0
      || (objc_msgSend(v2[16], "isEqualToString:", v4) & 1) != 0
      || objc_msgSend(v2[16], "isEqualToString:", v5))
    {
      end = v90.__end_;
      if (v90.__end_ >= v90.__end_cap_.__value_)
      {
        v7 = (int *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>((uint64_t *)&v90, (const OUBox3d *)v2);
      }
      else
      {
        OUBox3d::OUBox3d((OUBox3d *)v90.__end_, (const OUBox3d *)v2);
        v7 = end + 56;
      }
      v90.__end_ = v7;
    }
    v3 += objc_msgSend(v2[16], "isEqualToString:", v62);
    v2 += 28;
  }
  while (v2 != v1);
  if (!v3 || v90.__begin_ == v90.__end_)
  {
LABEL_59:
    v59 = 0;
  }
  else
  {
    ou_object_group::nmsClasswise((uint64_t *)&v90, (uint64_t *)&v82, 0.25);
    std::vector<OUBox3d>::__vdeallocate((void **)&v90.__begin_);
    v90 = v82;
    memset(&v82, 0, sizeof(v82));
    v80 = &v82;
    std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    ou_object_group::box3d_iou_pairwise_matrix((uint64_t *)&v90, &v90, (uint64_t)&v82);
    ou_object_group::removeLargeChairs((uint64_t *)&v90, &v83, (char **)&v80);
    memset(v79, 0, sizeof(v79));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v79, (uint64_t)v82.__begin_, (uint64_t)v82.__end_, 0xAAAAAAAAAAAAAAABLL * (((char *)v82.__end_ - (char *)v82.__begin_) >> 3));
    memset(v78, 0, sizeof(v78));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v78, v83, v84, 0xAAAAAAAAAAAAAAABLL * ((v84 - v83) >> 3));
    memset(v77, 0, sizeof(v77));
    std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(v77, v85, v86, 0xAAAAAAAAAAAAAAABLL * ((v86 - v85) >> 3));
    if (v80 != v81)
    {
      ou_object_group::removeBoxFromList(&v90, (int **)&v80, (uint64_t *)&v76);
      std::vector<OUBox3d>::__vdeallocate((void **)&v90.__begin_);
      v90 = v76;
      memset(&v76, 0, sizeof(v76));
      *(_QWORD *)__x = &v76;
      std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
      ou_object_group::removeRowCol(v79, (uint64_t *)&v80);
      ou_object_group::removeRowCol(v78, (uint64_t *)&v80);
      ou_object_group::removeRowCol(v77, (uint64_t *)&v80);
    }
    __x[0] = 0;
    std::vector<int>::vector(&v76, 0x6DB6DB6DB6DB6DB7 * (((char *)v90.__end_ - (char *)v90.__begin_) >> 5), __x);
    ou_object_group::getIndexOverlapAll(&v76, (uint64_t *)&v90);
    std::set<int>::set[abi:ne180100]<std::__wrap_iter<int *>>((uint64_t)__x, v76.__begin_, v76.__end_);
    __p = 0;
    v72 = 0;
    v73 = 0;
    v8 = *(_QWORD ***)__x;
    if (*(_QWORD ***)__x != v75)
    {
      v9 = 0;
      do
      {
        v10 = *((_DWORD *)v8 + 7);
        if ((v10 & 0x80000000) == 0)
        {
          if (v9 >= v73)
          {
            v12 = (char *)__p;
            v13 = (v9 - (_BYTE *)__p) >> 2;
            v14 = v13 + 1;
            if ((unint64_t)(v13 + 1) >> 62)
              _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
            v15 = v73 - (_BYTE *)__p;
            if ((v73 - (_BYTE *)__p) >> 1 > v14)
              v14 = v15 >> 1;
            if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
              v16 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v16 = v14;
            if (v16)
            {
              v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v73, v16);
              v12 = (char *)__p;
              v9 = v72;
              v10 = *((_DWORD *)v8 + 7);
            }
            else
            {
              v17 = 0;
            }
            v18 = &v17[4 * v13];
            *(_DWORD *)v18 = v10;
            v11 = v18 + 4;
            while (v9 != v12)
            {
              v19 = *((_DWORD *)v9 - 1);
              v9 -= 4;
              *((_DWORD *)v18 - 1) = v19;
              v18 -= 4;
            }
            __p = v18;
            v72 = v11;
            v73 = &v17[4 * v16];
            if (v12)
              operator delete(v12);
          }
          else
          {
            *(_DWORD *)v9 = v10;
            v11 = v9 + 4;
          }
          v72 = v11;
          v9 = v11;
        }
        v20 = v8[1];
        if (v20)
        {
          do
          {
            v21 = (_QWORD **)v20;
            v20 = (_QWORD *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            v21 = (_QWORD **)v8[2];
            v22 = *v21 == v8;
            v8 = v21;
          }
          while (!v22);
        }
        v8 = v21;
      }
      while (v21 != v75);
    }
    v59 = objc_alloc_init(MEMORY[0x24BDBCED8]);
    begin = v90.__begin_;
    if (v90.__end_ != v90.__begin_)
    {
      v24 = 0;
      v25 = 36;
      do
      {
        v26 = v76.__begin_[v24];
        if ((v26 & 0x80000000) == 0)
        {
          v27 = &begin[56 * v26];
          v29 = *((_QWORD *)v27 + 18);
          v28 = v27 + 36;
          objc_msgSend(v59, "objectForKey:", v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = v30 == 0;

          if (v31)
          {
            v32 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithObjects:", *(_QWORD *)&begin[v25], 0);
            objc_msgSend(v59, "setObject:forKey:", v32, *v28);
          }
          else
          {
            objc_msgSend(v59, "objectForKeyedSubscript:", *v28);
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v32, "addObject:", *(_QWORD *)&begin[v25]);
          }

        }
        ++v24;
        begin = v90.__begin_;
        v25 += 56;
      }
      while (v24 < 0x6DB6DB6DB6DB6DB7 * (((char *)v90.__end_ - (char *)v90.__begin_) >> 5));
    }
    for (i = v91; i != v92; i += 28)
    {
      v34 = i[16];
      if ((objc_msgSend(v34, "isEqualToString:", v62) & 1) == 0
        && (objc_msgSend(v34, "isEqualToString:", v4) & 1) == 0
        && (objc_msgSend(v34, "isEqualToString:", v5) & 1) == 0)
      {
        v35 = v90.__end_;
        if (v90.__end_ >= v90.__end_cap_.__value_)
        {
          v36 = (int *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>((uint64_t *)&v90, (const OUBox3d *)i);
        }
        else
        {
          OUBox3d::OUBox3d((OUBox3d *)v90.__end_, (const OUBox3d *)i);
          v36 = v35 + 56;
        }
        v90.__end_ = v36;
      }

    }
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    objc_msgSend(v59, "allValues");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v94, 16);
    if (v38)
    {
      v39 = 0;
      v61 = *(_QWORD *)v68;
      do
      {
        for (j = 0; j != v38; ++j)
        {
          if (*(_QWORD *)v68 != v61)
            objc_enumerationMutation(obj);
          v41 = *(void **)(*((_QWORD *)&v67 + 1) + 8 * j);
          v63 = 0u;
          v64 = 0u;
          v65 = 0u;
          v66 = 0u;
          v42 = v41;
          v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v63, v93, 16);
          if (v43)
          {
            v44 = *(_QWORD *)v64;
            do
            {
              for (k = 0; k != v43; ++k)
              {
                if (*(_QWORD *)v64 != v44)
                  objc_enumerationMutation(v42);
                v46 = *(id *)(*((_QWORD *)&v63 + 1) + 8 * k);
                objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", v39);
                v47 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(0, "setObject:forKeyedSubscript:", v47, v46);

              }
              v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v63, v93, 16);
            }
            while (v43);
            v48 = 1;
          }
          else
          {
            v48 = 0;
          }

          v39 = (v48 + v39);
        }
        v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v94, 16);
      }
      while (v38);
    }

    v49 = v90.__end_;
    v50 = v90.__begin_;
    if (v90.__begin_ != v90.__end_)
    {
      v51 = (void *)*MEMORY[0x24BE6E078];
      do
      {
        v52 = v88;
        if ((unint64_t)v88 >= v89)
        {
          v53 = (OUBox3d *)std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(&v87, (const OUBox3d *)v50);
        }
        else
        {
          OUBox3d::OUBox3d(v88, (const OUBox3d *)v50);
          v53 = (OUBox3d *)((char *)v52 + 224);
        }
        v88 = v53;
        if (objc_msgSend(*((id *)v50 + 16), "isEqualToString:", v62))
        {
          objc_msgSend(0, "objectForKeyedSubscript:", *((_QWORD *)v50 + 18));
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          v55 = v54 == 0;

          if (!v55)
          {
            objc_storeStrong((id *)v88 - 2, v51);
            objc_msgSend(0, "objectForKeyedSubscript:", *((_QWORD *)v50 + 18));
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            v57 = objc_msgSend(v56, "intValue");
            *((_WORD *)v88 - 4) = v57;

          }
        }
        v50 += 56;
      }
      while (v50 != v49);
    }
    if (__p)
    {
      v72 = (char *)__p;
      operator delete(__p);
    }
    std::__tree<int>::destroy((uint64_t)__x, v75[0]);
    if (v76.__begin_)
    {
      v76.__end_ = v76.__begin_;
      operator delete(v76.__begin_);
    }
    v76.__begin_ = (std::vector<int>::pointer)v77;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v76);
    v77[0] = (__n128 *)v78;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)v77);
    v78[0] = (__n128 *)v79;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)v78);
    if (v80)
    {
      v81 = v80;
      operator delete(v80);
    }
    v80 = &v85;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    v80 = &v83;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
    v80 = &v82;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v80);
  }
  v82.__begin_ = (std::vector<int>::pointer)&v87;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  v82.__begin_ = (std::vector<int>::pointer)&v90;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  v82.__begin_ = (std::vector<int>::pointer)&v91;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);

  return v59;
}

void sub_2273006B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  char a67;
  char a70;

  a39 = &a43;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a39);
  a43 = (uint64_t)&a46;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a43);
  a46 = (uint64_t)&a49;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);
  if (__p)
  {
    a53 = (uint64_t)__p;
    operator delete(__p);
  }
  ou_object_group::box3dPairwiseMatrices::~box3dPairwiseMatrices((void **)&a55);
  a55 = (uint64_t)&a64;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);
  a55 = (uint64_t)&a67;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);
  a55 = (uint64_t)&a70;
  std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100]((void ***)&a55);

  _Unwind_Resume(a1);
}

id ou_object_group::groupStorage(void *a1)
{
  id v1;
  unint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  int v18;
  void *v19;
  void *v20;
  char *v21;
  std::vector<int>::size_type v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t **i;
  void *v42;
  void *v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[3];
  float32x4_t __x[8];
  std::vector<int> v52;
  void *__p;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];
  char *v57;
  char *v58;
  char *v59;

  v1 = a1;
  v2 = 0;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  v49 = *MEMORY[0x24BE6E090];
  v48 = *MEMORY[0x24BE6E088];
  v47 = *MEMORY[0x24BE6E0D8];
  v45 = *MEMORY[0x24BE6E0B8];
  while (objc_msgSend(v1, "count", v45) > v2)
  {
    objc_msgSend(v1, "objectAtIndexedSubscript:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "type");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "isEqualToString:", v49) & 1) == 0)
    {
      objc_msgSend(v1, "objectAtIndexedSubscript:", v2);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "type");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v6, "isEqualToString:", v48) & 1) == 0)
      {
        objc_msgSend(v1, "objectAtIndexedSubscript:", v2);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "type");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v8, "isEqualToString:", v47) & 1) == 0)
        {
          objc_msgSend(v1, "objectAtIndexedSubscript:", v2);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "type");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v46 = objc_msgSend(v20, "isEqualToString:", v45);

          if ((v46 & 1) == 0)
            goto LABEL_26;
          goto LABEL_9;
        }

      }
    }

LABEL_9:
    v9 = v58;
    if (v58 >= v59)
    {
      v11 = v57;
      v12 = (v58 - v57) >> 2;
      v13 = v12 + 1;
      if ((unint64_t)(v12 + 1) >> 62)
        _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
      v14 = v59 - v57;
      if ((v59 - v57) >> 1 > v13)
        v13 = v14 >> 1;
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
        v15 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v15 = v13;
      if (v15)
      {
        v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)&v59, v15);
        v11 = v57;
        v9 = v58;
      }
      else
      {
        v16 = 0;
      }
      v17 = &v16[4 * v12];
      *(_DWORD *)v17 = v2;
      v10 = v17 + 4;
      while (v9 != v11)
      {
        v18 = *((_DWORD *)v9 - 1);
        v9 -= 4;
        *((_DWORD *)v17 - 1) = v18;
        v17 -= 4;
      }
      v57 = v17;
      v58 = v10;
      v59 = &v16[4 * v15];
      if (v11)
        operator delete(v11);
    }
    else
    {
      *(_DWORD *)v58 = v2;
      v10 = v9 + 4;
    }
    v58 = v10;
LABEL_26:
    ++v2;
  }
  v21 = v57;
  if (v57 == v58)
  {
    v37 = 0;
    if (v57)
      goto LABEL_48;
  }
  else
  {
    memset(v56, 0, sizeof(v56));
    v22 = (v58 - v57) >> 2;
    __x[0].i32[0] = 0;
    std::vector<int>::vector(&v52, v22, (const std::vector<int>::value_type *)__x);
    std::vector<std::vector<int>>::resize(v56, v22, (uint64_t)&v52);
    if (v52.__begin_)
    {
      v52.__end_ = v52.__begin_;
      operator delete(v52.__begin_);
    }
    v23 = v57;
    v24 = v58;
    if (v58 != v57)
    {
      v25 = 0;
      v26 = *MEMORY[0x24BE6E070];
      do
      {
        if ((unint64_t)(v24 - v23) <= 4)
        {
          v36 = (unint64_t)(v24 - v23) >> 2;
        }
        else
        {
          v27 = *(int *)&v23[4 * v25];
          v28 = 1;
          do
          {
            v29 = *(int *)&v23[4 * v28];
            objc_msgSend(v1, "objectAtIndexedSubscript:", v27);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "boxesDict");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "objectForKey:", v26);
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            box3dFromNSArray(v32, (uint64_t)&v52);

            objc_msgSend(v1, "objectAtIndexedSubscript:", v29);
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v33, "boxesDict");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v34, "objectForKey:", v26);
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            box3dFromNSArray(v35, (uint64_t)__x);

            memset(v50, 0, sizeof(v50));
            box3dIou((float32x4_t *)&v52, __x, (uint64_t)v50);
            *(_DWORD *)(*(_QWORD *)(v56[0] + 24 * v25) + 4 * v28++) = *(float *)v50 > 0.05;
            v23 = v57;
            v24 = v58;
            v36 = (v58 - v57) >> 2;
          }
          while (v36 > v28);
        }
        ++v25;
      }
      while (v36 > v25);
    }
    ou_object_group::RelationGrouping::RelationGrouping(&v52, v56);
    ou_object_group::RelationGrouping::groupItems((uint64_t *)&v52);
    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", 0xCCCCCCCCCCCCCCCDLL * ((v55 - v54) >> 3));
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = v54;
    v39 = v55;
    while (v38 != v39)
    {
      objc_msgSend(MEMORY[0x24BDBCEB8], "array");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      for (i = *(uint64_t ***)(v38 + 16); i; i = (uint64_t **)*i)
      {
        objc_msgSend(v1, "objectAtIndexedSubscript:", *(int *)&v57[4 * *((int *)i + 4)]);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v42, "identifier");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "addObject:", v43);

      }
      objc_msgSend(v37, "addObject:", v40);

      v38 += 40;
    }
    __x[0].i64[0] = (uint64_t)&v54;
    std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
    if (__p)
      operator delete(__p);
    __x[0].i64[0] = (uint64_t)&v52;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)__x);
    v52.__begin_ = (std::vector<int>::pointer)v56;
    std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v52);
    v21 = v57;
    if (v57)
    {
LABEL_48:
      v58 = v21;
      operator delete(v21);
    }
  }

  return v37;
}

void sub_227300D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38)
{
  void *v38;
  uint64_t v39;
  void *v41;

  ou_object_group::RelationGrouping::~RelationGrouping((ou_object_group::RelationGrouping *)&__p);
  a15 = v39 - 152;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  v41 = *(void **)(v39 - 128);
  if (v41)
  {
    *(_QWORD *)(v39 - 120) = v41;
    operator delete(v41);
  }

  _Unwind_Resume(a1);
}

void std::vector<std::vector<int>>::resize(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v4 = a1[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  v6 = a2 >= v5;
  v7 = a2 - v5;
  if (v7 != 0 && v6)
  {
    std::vector<std::vector<int>>::__append(a1, v7, a3);
  }
  else if (!v6)
  {
    v8 = *a1 + 24 * a2;
    if (v4 != v8)
    {
      v9 = a1[1];
      do
      {
        v11 = *(void **)(v9 - 24);
        v9 -= 24;
        v10 = v11;
        if (v11)
        {
          *(_QWORD *)(v4 - 16) = v10;
          operator delete(v10);
        }
        v4 = v9;
      }
      while (v9 != v8);
    }
    a1[1] = v8;
  }
}

uint64_t *ou_object_group::RelationGrouping::groupItems(uint64_t *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  _OWORD v8[2];
  int v9;

  v2 = *this;
  v1 = this[1];
  if (v1 != *this)
  {
    v3 = this;
    v4 = 0;
    v5 = this + 6;
    do
    {
      if (((*(_QWORD *)(v3[3] + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      {
        memset(v8, 0, sizeof(v8));
        v9 = 1065353216;
        ou_object_group::RelationGrouping::dfs(v3, v4, (uint64_t)v8);
        v6 = v3[7];
        if (v6 >= v3[8])
        {
          v7 = std::vector<ou_object_group::ItemGroup>::__push_back_slow_path<ou_object_group::ItemGroup const&>(v5, (uint64_t)v8);
        }
        else
        {
          std::unordered_set<int>::unordered_set(v3[7], (uint64_t)v8);
          v7 = v6 + 40;
          v3[7] = v6 + 40;
        }
        v3[7] = v7;
        this = (uint64_t *)std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)v8);
        v2 = *v3;
        v1 = v3[1];
      }
      ++v4;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v1 - v2) >> 3) > v4);
  }
  return this;
}

void sub_227301048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 56) = v10;
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void ou_object_group::RelationGrouping::~RelationGrouping(ou_object_group::RelationGrouping *this)
{
  void *v2;
  void **v3;

  v3 = (void **)((char *)this + 48);
  std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100](&v3);
  v2 = (void *)*((_QWORD *)this + 3);
  if (v2)
    operator delete(v2);
  v3 = (void **)this;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

uint64_t OUBox3d::OUBox3d(uint64_t a1, __int128 *a2, id *a3, void *a4, float a5)
{
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v9 = a4;
  v10 = a2[3];
  v12 = *a2;
  v11 = a2[1];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v11;
  v13 = a2[7];
  v15 = a2[4];
  v14 = a2[5];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 128) = *a3;
  *(float *)(a1 + 136) = a5;
  *(_QWORD *)(a1 + 144) = objc_msgSend(v9, "copy");
  *(_QWORD *)(a1 + 152) = (id)*MEMORY[0x24BE6E080];
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_QWORD *)(a1 + 208) = 0;
  *(_WORD *)(a1 + 216) = -1;

  return a1;
}

void sub_2273011A0(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Unwind_Resume(a1);
}

_QWORD *ou_object_group::RelationGrouping::RelationGrouping(_QWORD *a1, uint64_t *a2)
{
  unint64_t v3;
  unsigned __int8 v5[9];

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  std::vector<std::vector<int>>::__init_with_size[abi:ne180100]<std::vector<int>*,std::vector<int>*>(a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  v3 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3);
  v5[0] = 0;
  std::vector<BOOL>::vector(a1 + 3, v3, v5);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  return a1;
}

void sub_227301230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::vector<int>>::__init_with_size[abi:ne180100]<std::vector<int>*,std::vector<int>*>(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<int>>,std::vector<int>*,std::vector<int>*,std::vector<int>*>((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_2273012AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::vector<int>>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a2);
}

_QWORD *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<int>>,std::vector<int>*,std::vector<int>*,std::vector<int>*>(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), (uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 2);
      v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_2273013FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<float>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_22730146C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  if (v1 != v2)
  {
    v3 = **(_QWORD **)(a1 + 16);
    do
    {
      v5 = *(void **)(v3 - 24);
      v3 -= 24;
      v4 = v5;
      if (v5)
      {
        *(_QWORD *)(v1 - 16) = v4;
        operator delete(v4);
      }
      v1 = v3;
    }
    while (v3 != v2);
  }
}

void std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::vector<int>>::__clear[abi:ne180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<std::vector<int>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = a1[1];
    do
    {
      v6 = *(void **)(v4 - 24);
      v4 -= 24;
      v5 = v6;
      if (v6)
      {
        *(_QWORD *)(v2 - 16) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

_QWORD *std::vector<BOOL>::vector(_QWORD *a1, unint64_t a2, unsigned __int8 *a3)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  int v14;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<BOOL>::__vallocate[abi:ne180100](a1, a2);
    v6 = *a3;
    v7 = a1[1];
    v8 = v7 + a2;
    a1[1] = v7 + a2;
    if (v7)
    {
      v9 = v8 - 1;
      if (((v8 - 1) ^ (v7 - 1)) < 0x40)
      {
LABEL_10:
        v13 = *a1 + 8 * (v7 >> 6);
        v14 = v7 & 0x3F;
        if (v6)
          std::__fill_n[abi:ne180100]<true,std::vector<BOOL>>(&v13, a2);
        else
          std::__fill_n[abi:ne180100]<false,std::vector<BOOL>>((uint64_t)&v13, a2);
        return a1;
      }
    }
    else
    {
      v9 = v8 - 1;
    }
    v10 = v9 >> 6;
    if (v8 >= 0x41)
      v11 = v10;
    else
      v11 = 0;
    *(_QWORD *)(*a1 + 8 * v11) = 0;
    goto LABEL_10;
  }
  return a1;
}

void *std::vector<BOOL>::__vallocate[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  void *result;
  uint64_t v4;

  if (a2 < 0)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  result = _ZNSt3__119__allocate_at_leastB8ne180100INS_9allocatorIDv2_fEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

_QWORD *std::__fill_n[abi:ne180100]<true,std::vector<BOOL>>(_QWORD *result, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v3;
  int v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = a2;
  v3 = result;
  v4 = *((_DWORD *)result + 2);
  v5 = (_QWORD *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2)
      v6 = a2;
    else
      v6 = (64 - v4);
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    v2 = a2 - v6;
    *result = v5;
  }
  v7 = v2 >> 6;
  if (v2 >= 0x40)
    result = memset(v5, 255, 8 * v7);
  if ((v2 & 0x3F) != 0)
  {
    v8 = &v5[v7];
    *v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void std::__fill_n[abi:ne180100]<false,std::vector<BOOL>>(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  int v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = a2;
  v4 = *(_DWORD *)(a1 + 8);
  v5 = *(_QWORD **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2)
      v6 = a2;
    else
      v6 = (64 - v4);
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    v2 = a2 - v6;
    *(_QWORD *)a1 = v5;
  }
  v7 = v2 >> 6;
  if (v2 >= 0x40)
    bzero(v5, 8 * v7);
  if ((v2 & 0x3F) != 0)
  {
    v8 = &v5[v7];
    *(_QWORD *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

_QWORD *ou_object_group::RelationGrouping::dfs(uint64_t *a1, int a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v9 = a2;
  *(_QWORD *)(a1[3] + (((unint64_t)a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a2;
  result = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a3, &v9, &v9);
  v7 = *a1;
  v6 = a1[1];
  if (v6 != *a1)
  {
    v8 = 0;
    do
    {
      if (*(_DWORD *)(*(_QWORD *)(v7 + 24 * v9) + 4 * v8) == 1
        && ((*(_QWORD *)(a1[3] + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        result = (_QWORD *)ou_object_group::RelationGrouping::dfs(a1, v8, a3);
        v7 = *a1;
        v6 = a1[1];
      }
      ++v8;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) > v8);
  }
  return result;
}

_QWORD *std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(uint64_t a1, int *a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v7 <= v6)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == (_DWORD)v6)
              return v10;
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7)
                v11 %= v7;
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  v10 = operator new(0x18uLL);
  *v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *v10 = *v19;
LABEL_38:
    *v19 = v10;
    goto LABEL_39;
  }
  *v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    v20 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_227301AF8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__do_rehash<true>(a1, prime);
  }
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t std::vector<ou_object_group::ItemGroup>::__push_back_slow_path<ou_object_group::ItemGroup const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x333333333333333)
    v9 = 0x666666666666666;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<ou_object_group::ItemGroup>>(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[40 * v4];
  v16 = &v10[40 * v9];
  std::unordered_set<int>::unordered_set((uint64_t)v14, a2);
  v15 = v14 + 40;
  std::vector<ou_object_group::ItemGroup>::__swap_out_circular_buffer(a1, &v13);
  v11 = a1[1];
  std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer((uint64_t)&v13);
  return v11;
}

void sub_227301E30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_set<int>::unordered_set(uint64_t a1, uint64_t a2)
{
  int *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, *(_QWORD *)(a2 + 8));
  for (i = *(int **)(a2 + 16); i; i = *(int **)i)
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, i + 4, i + 4);
  return a1;
}

void sub_227301EA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

uint64_t std::vector<ou_object_group::ItemGroup>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = (uint64_t *)*a1;
  v4 = (uint64_t *)a1[1];
  result = a2[1];
  while (v4 != v5)
  {
    v4 -= 5;
    result = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__hash_table(result - 40, v4);
  }
  a2[1] = result;
  v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<ou_object_group::ItemGroup>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(40 * a2);
}

uint64_t std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v2 = *a2;
  *a2 = 0;
  *(_QWORD *)result = v2;
  *(_QWORD *)(result + 8) = a2[1];
  a2[1] = 0;
  v5 = a2[2];
  v3 = a2 + 2;
  v4 = v5;
  *(_QWORD *)(result + 16) = v5;
  v6 = v3[1];
  *(_QWORD *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(_QWORD *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v7 %= v8;
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(_QWORD *)(v2 + 8 * v7) = result + 16;
    *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

uint64_t std::__split_buffer<ou_object_group::ItemGroup>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 40;
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(i - 40);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::vector<ou_object_group::ItemGroup>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v4 - 40);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *std::vector<unsigned long>::vector(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    _ZNSt3__16vectorIDv2_fNS_9allocatorIS1_EEE11__vallocateB8ne180100Em(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_22730214C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(uint64_t result, uint64_t *a2, uint64_t **a3, uint64_t a4, char a5)
{
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  float v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  float v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  float v61;
  uint64_t v62;
  uint64_t *v63;
  int64_t v64;
  uint64_t *v65;
  int64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  float v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  float v92;
  uint64_t *v93;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  float v99;

  v9 = (uint64_t *)result;
LABEL_2:
  v10 = v9;
  while (2)
  {
    v9 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = a2 - v10;
    switch(v12)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v42 = *(a2 - 1);
        v43 = *v10;
        if (*(float *)(**a3 + 4 * (int)v42) > *(float *)(**a3 + (*v10 << 32 >> 30)))
        {
          *v10 = v42;
          *(a2 - 1) = v43;
        }
        return result;
      case 3uLL:
        return (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v10, v10 + 1, a2 - 1, a3);
      case 4uLL:
        return (uint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v10, v10 + 1, v10 + 2, a2 - 1, a3);
      case 5uLL:
        v44 = v10 + 1;
        v45 = v10 + 2;
        v46 = v10 + 3;
        result = (uint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v10, v10 + 1, v10 + 2, v10 + 3, a3);
        v47 = *(a2 - 1);
        v48 = v10[3];
        v49 = **a3;
        if (*(float *)(v49 + 4 * (int)v47) > *(float *)(v49 + 4 * (int)v48))
        {
          *v46 = v47;
          *(a2 - 1) = v48;
          v50 = *v46;
          v51 = *v45;
          v52 = *(float *)(v49 + (*v46 << 32 >> 30));
          if (v52 > *(float *)(v49 + (*v45 << 32 >> 30)))
          {
            *v45 = v50;
            *v46 = v51;
            v53 = *v44;
            if (v52 > *(float *)(v49 + (*v44 << 32 >> 30)))
            {
              v10[1] = v50;
              v10[2] = v53;
              v54 = *v10;
              if (v52 > *(float *)(v49 + (*v10 << 32 >> 30)))
              {
                *v10 = v50;
                v10[1] = v54;
              }
            }
          }
        }
        return result;
      default:
        if (v11 <= 191)
        {
          if ((a5 & 1) != 0)
          {
            if (v10 != a2)
            {
              v55 = v10 + 1;
              if (v10 + 1 != a2)
              {
                v56 = 0;
                v57 = **a3;
                v58 = v10;
                do
                {
                  v60 = *v58;
                  v59 = v58[1];
                  v58 = v55;
                  v61 = *(float *)(v57 + 4 * (int)v59);
                  if (v61 > *(float *)(v57 + 4 * (int)v60))
                  {
                    v62 = v56;
                    while (1)
                    {
                      *(uint64_t *)((char *)v10 + v62 + 8) = v60;
                      if (!v62)
                        break;
                      v60 = *(uint64_t *)((char *)v10 + v62 - 8);
                      v62 -= 8;
                      if (v61 <= *(float *)(v57 + 4 * (int)v60))
                      {
                        v63 = (uint64_t *)((char *)v10 + v62 + 8);
                        goto LABEL_74;
                      }
                    }
                    v63 = v10;
LABEL_74:
                    *v63 = v59;
                  }
                  v55 = v58 + 1;
                  v56 += 8;
                }
                while (v58 + 1 != a2);
              }
            }
          }
          else if (v10 != a2)
          {
            v95 = v10 + 1;
            if (v10 + 1 != a2)
            {
              v96 = **a3;
              do
              {
                v98 = *v9;
                v97 = v9[1];
                v9 = v95;
                v99 = *(float *)(v96 + 4 * (int)v97);
                if (v99 > *(float *)(v96 + 4 * (int)v98))
                {
                  do
                  {
                    *v95 = v98;
                    v98 = *(v95 - 2);
                    --v95;
                  }
                  while (v99 > *(float *)(v96 + 4 * (int)v98));
                  *v95 = v97;
                }
                v95 = v9 + 1;
              }
              while (v9 + 1 != a2);
            }
          }
          return result;
        }
        if (!a4)
        {
          if (v10 != a2)
          {
            v64 = (v12 - 2) >> 1;
            v65 = *a3;
            v66 = v64;
            do
            {
              v67 = v66;
              if (v64 >= v66)
              {
                v68 = (2 * v66) | 1;
                v69 = &v10[v68];
                v70 = 2 * v66 + 2;
                v71 = *v65;
                if (v70 < (uint64_t)v12 && *(float *)(v71 + (*v69 << 32 >> 30)) > *(float *)(v71 + 4 * (int)v69[1]))
                {
                  ++v69;
                  v68 = 2 * v67 + 2;
                }
                v72 = &v10[v67];
                result = *v69;
                v73 = *v72;
                v74 = *(float *)(v71 + (*v72 << 32 >> 30));
                if (*(float *)(v71 + (*v69 << 32 >> 30)) <= v74)
                {
                  do
                  {
                    v75 = v69;
                    *v72 = result;
                    if (v64 < v68)
                      break;
                    v76 = 2 * v68;
                    v68 = (2 * v68) | 1;
                    v69 = &v10[v68];
                    v77 = v76 + 2;
                    if (v77 < (uint64_t)v12
                      && *(float *)(v71 + (*v69 << 32 >> 30)) > *(float *)(v71 + 4 * (int)v69[1]))
                    {
                      ++v69;
                      v68 = v77;
                    }
                    result = *v69;
                    v72 = v75;
                  }
                  while (*(float *)(v71 + (*v69 << 32 >> 30)) <= v74);
                  *v75 = v73;
                }
              }
              v66 = v67 - 1;
            }
            while (v67);
            v78 = (unint64_t)v11 >> 3;
            do
            {
              v79 = 0;
              v80 = *v10;
              v81 = *a3;
              v82 = v10;
              do
              {
                v83 = v82;
                v82 += v79 + 1;
                v84 = 2 * v79;
                v79 = (2 * v79) | 1;
                v85 = v84 + 2;
                if (v85 < v78)
                {
                  result = v82[1];
                  if (*(float *)(*v81 + (*v82 << 32 >> 30)) > *(float *)(*v81 + 4 * (int)result))
                  {
                    ++v82;
                    v79 = v85;
                  }
                }
                *v83 = *v82;
              }
              while (v79 <= (uint64_t)((unint64_t)(v78 - 2) >> 1));
              if (v82 == --a2)
              {
                *v82 = v80;
              }
              else
              {
                *v82 = *a2;
                *a2 = v80;
                v86 = (char *)v82 - (char *)v10 + 8;
                if (v86 >= 9)
                {
                  v87 = (((unint64_t)v86 >> 3) - 2) >> 1;
                  v88 = &v10[v87];
                  v89 = *v88;
                  v90 = *v82;
                  v91 = *v81;
                  v92 = *(float *)(v91 + (*v82 << 32 >> 30));
                  if (*(float *)(v91 + (*v88 << 32 >> 30)) > v92)
                  {
                    do
                    {
                      v93 = v88;
                      *v82 = v89;
                      if (!v87)
                        break;
                      v87 = (v87 - 1) >> 1;
                      v88 = &v10[v87];
                      v89 = *v88;
                      v82 = v93;
                    }
                    while (*(float *)(v91 + (*v88 << 32 >> 30)) > v92);
                    *v93 = v90;
                  }
                }
              }
            }
            while (v78-- > 2);
          }
          return result;
        }
        v13 = v12 >> 1;
        v14 = &v10[v12 >> 1];
        if ((unint64_t)v11 < 0x401)
        {
          result = (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(&v9[v12 >> 1], v9, a2 - 1, a3);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v9, &v9[v12 >> 1], a2 - 1, a3);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v9 + 1, v14 - 1, a2 - 2, a3);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v9 + 2, &v9[v13 + 1], a2 - 3, a3);
          result = (uint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v14 - 1, v14, &v9[v13 + 1], a3);
          v15 = *v9;
          *v9 = *v14;
          *v14 = v15;
        }
        --a4;
        v16 = *v9;
        v17 = **a3;
        if ((a5 & 1) == 0)
        {
          v18 = *(float *)(v17 + 4 * (int)v16);
          if (*(float *)(v17 + (*(v9 - 1) << 32 >> 30)) <= v18)
          {
            if (v18 <= *(float *)(v17 + (*(a2 - 1) << 32 >> 30)))
            {
              v34 = v9 + 1;
              do
              {
                v10 = v34;
                if (v34 >= a2)
                  break;
                ++v34;
              }
              while (v18 <= *(float *)(v17 + (*v10 << 32 >> 30)));
            }
            else
            {
              v10 = v9;
              do
              {
                v33 = v10[1];
                ++v10;
              }
              while (v18 <= *(float *)(v17 + 4 * (int)v33));
            }
            v35 = a2;
            if (v10 < a2)
            {
              v35 = a2;
              do
                v36 = *--v35;
              while (v18 > *(float *)(v17 + 4 * (int)v36));
            }
            if (v10 < v35)
            {
              v37 = *v10;
              v38 = *v35;
              do
              {
                *v10 = v38;
                *v35 = v37;
                do
                {
                  v39 = v10[1];
                  ++v10;
                  v37 = v39;
                }
                while (v18 <= *(float *)(v17 + 4 * (int)v39));
                do
                {
                  v40 = *--v35;
                  v38 = v40;
                }
                while (v18 > *(float *)(v17 + 4 * (int)v40));
              }
              while (v10 < v35);
            }
            v41 = v10 - 1;
            if (v10 - 1 != v9)
              *v9 = *v41;
            a5 = 0;
            *v41 = v16;
            continue;
          }
        }
        v19 = 0;
        v20 = *(float *)(v17 + 4 * (int)v16);
        do
          v21 = v9[++v19];
        while (*(float *)(v17 + 4 * (int)v21) > v20);
        v22 = &v9[v19];
        v23 = a2;
        if (v19 == 1)
        {
          v23 = a2;
          do
          {
            if (v22 >= v23)
              break;
            v25 = *--v23;
          }
          while (*(float *)(v17 + 4 * (int)v25) <= v20);
        }
        else
        {
          do
            v24 = *--v23;
          while (*(float *)(v17 + 4 * (int)v24) <= v20);
        }
        if (v22 >= v23)
        {
          v31 = v22 - 1;
        }
        else
        {
          v26 = *v23;
          v27 = &v9[v19];
          v28 = v23;
          do
          {
            *v27 = v26;
            *v28 = v21;
            do
            {
              v29 = v27[1];
              ++v27;
              v21 = v29;
            }
            while (*(float *)(v17 + 4 * (int)v29) > v20);
            do
            {
              v30 = *--v28;
              v26 = v30;
            }
            while (*(float *)(v17 + 4 * (int)v30) <= v20);
          }
          while (v27 < v28);
          v31 = v27 - 1;
        }
        if (v31 != v9)
          *v9 = *v31;
        *v31 = v16;
        if (v22 < v23)
        {
LABEL_32:
          result = std::__introsort<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *,false>(v9, v31, a3, a4, a5 & 1);
          a5 = 0;
          v10 = v31 + 1;
          continue;
        }
        v32 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v9, v31, a3);
        v10 = v31 + 1;
        result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(v31 + 1, a2, a3);
        if (!(_DWORD)result)
        {
          if (v32)
            continue;
          goto LABEL_32;
        }
        a2 = v31;
        if (!v32)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t **a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  float v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *result;
  v6 = **a4;
  v7 = *(float *)(v6 + (*a2 << 32 >> 30));
  v8 = *(float *)(v6 + (*result << 32 >> 30));
  v9 = *a3;
  v10 = *(float *)(v6 + (*a3 << 32 >> 30));
  if (v7 <= v8)
  {
    if (v10 > v7)
    {
      *a2 = v9;
      *a3 = v4;
      v11 = *result;
      if (*(float *)(v6 + (*a2 << 32 >> 30)) > *(float *)(v6 + (*result << 32 >> 30)))
      {
        *result = *a2;
        *a2 = v11;
      }
    }
  }
  else
  {
    if (v10 <= v7)
    {
      *result = v4;
      *a2 = v5;
      if (*(float *)(v6 + (*a3 << 32 >> 30)) <= v8)
        return result;
      *a2 = *a3;
    }
    else
    {
      *result = v9;
    }
    *a3 = v5;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6;
  _BOOL8 result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  uint64_t v30;
  uint64_t v31;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = *(a2 - 1);
      v9 = *a1;
      if (*(float *)(**a3 + 4 * (int)v8) > *(float *)(**a3 + (*a1 << 32 >> 30)))
      {
        *a1 = v8;
        *(a2 - 1) = v9;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      v21 = a1 + 1;
      v22 = a1 + 2;
      v23 = a1 + 3;
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a1 + 3, a3);
      v24 = *(a2 - 1);
      v25 = a1[3];
      v26 = **a3;
      if (*(float *)(v26 + 4 * (int)v24) > *(float *)(v26 + 4 * (int)v25))
      {
        *v23 = v24;
        *(a2 - 1) = v25;
        v27 = *v23;
        v28 = *v22;
        v29 = *(float *)(v26 + (*v23 << 32 >> 30));
        if (v29 > *(float *)(v26 + (*v22 << 32 >> 30)))
        {
          *v22 = v27;
          *v23 = v28;
          v30 = *v21;
          if (v29 > *(float *)(v26 + (*v21 << 32 >> 30)))
          {
            a1[1] = v27;
            a1[2] = v30;
            v31 = *a1;
            if (v29 > *(float *)(v26 + (*a1 << 32 >> 30)))
            {
              *a1 = v27;
              a1[1] = v31;
            }
          }
        }
      }
      return 1;
    default:
      v10 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a1 + 1, a1 + 2, a3);
      v11 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v12 = 0;
      v13 = **a3;
      v14 = 24;
      break;
  }
  while (1)
  {
    v15 = *v11;
    v16 = *v10;
    v17 = *(float *)(v13 + (*v11 << 32 >> 30));
    if (v17 > *(float *)(v13 + (*v10 << 32 >> 30)))
    {
      v18 = v14;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v18) = v16;
        v19 = v18 - 8;
        if (v18 == 8)
          break;
        v16 = *(uint64_t *)((char *)a1 + v18 - 16);
        v18 -= 8;
        if (v17 <= *(float *)(v13 + 4 * (int)v16))
        {
          v20 = (uint64_t *)((char *)a1 + v19);
          goto LABEL_13;
        }
      }
      v20 = a1;
LABEL_13:
      *v20 = v15;
      if (++v12 == 8)
        return v11 + 1 == a2;
    }
    v10 = v11;
    v14 += 8;
    if (++v11 == a2)
      return 1;
  }
}

uint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t **a5)
{
  uint64_t *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,ou_object_group::sortIndices(std::vector<float> const&)::$_0 &,unsigned long *>(a1, a2, a3, a5);
  v11 = *a3;
  v12 = **a5;
  if (*(float *)(v12 + (*a4 << 32 >> 30)) > *(float *)(v12 + (*a3 << 32 >> 30)))
  {
    *a3 = *a4;
    *a4 = v11;
    v13 = *a2;
    if (*(float *)(v12 + (*a3 << 32 >> 30)) > *(float *)(v12 + (*a2 << 32 >> 30)))
    {
      *a2 = *a3;
      *a3 = v13;
      v14 = *a1;
      if (*(float *)(v12 + (*a2 << 32 >> 30)) > *(float *)(v12 + (*a1 << 32 >> 30)))
      {
        *a1 = *a2;
        *a2 = v14;
      }
    }
  }
  return result;
}

_QWORD *std::vector<std::vector<float>>::vector(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_QWORD *)a1[1];
    v7 = 3 * a2;
    v8 = &v6[3 * a2];
    v9 = 8 * v7;
    do
    {
      *v6 = 0;
      v6[1] = 0;
      v6[2] = 0;
      std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v6, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
      v6 += 3;
      v9 -= 24;
    }
    while (v9);
    a1[1] = v8;
  }
  return a1;
}

void sub_227302DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<float>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_227302E40(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<OUBox3d>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 224;
        std::allocator<OUBox3d>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<OUBox3d>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a2 + 184);
  if (v3)
    operator delete(v3);
  v4 = *(void **)(a2 + 160);
  if (v4)
  {
    *(_QWORD *)(a2 + 168) = v4;
    operator delete(v4);
  }

}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<box3d>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 57)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(a2 << 7);
}

uint64_t std::vector<OUBox3d>::__push_back_slow_path<OUBox3d const&>(uint64_t *a1, const OUBox3d *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  OUBox3d *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x124924924924924)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x92492492492492)
    v9 = 0x124924924924924;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = (OUBox3d *)&v10[224 * v4];
  v16 = &v10[224 * v9];
  OUBox3d::OUBox3d(v14, a2);
  v15 = (char *)v14 + 224;
  std::vector<OUBox3d>::__swap_out_circular_buffer(a1, &v13);
  v11 = a1[1];
  std::__split_buffer<OUBox3d>::~__split_buffer(&v13);
  return v11;
}

void sub_227303070(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<OUBox3d>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

void OUBox3d::OUBox3d(OUBox3d *this, const OUBox3d *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  id v10;

  v4 = *(_OWORD *)a2;
  v5 = *((_OWORD *)a2 + 1);
  v6 = *((_OWORD *)a2 + 3);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)this + 3) = v6;
  *(_OWORD *)this = v4;
  *((_OWORD *)this + 1) = v5;
  v7 = *((_OWORD *)a2 + 4);
  v8 = *((_OWORD *)a2 + 5);
  v9 = *((_OWORD *)a2 + 7);
  *((_OWORD *)this + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)this + 7) = v9;
  *((_OWORD *)this + 4) = v7;
  *((_OWORD *)this + 5) = v8;
  *((_QWORD *)this + 16) = *((id *)a2 + 16);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_QWORD *)this + 18) = *((id *)a2 + 18);
  v10 = *((id *)a2 + 19);
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 19) = v10;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 22) = 0;
  std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>((_QWORD *)this + 20, *((const void **)a2 + 20), *((_QWORD *)a2 + 21), (uint64_t)(*((_QWORD *)a2 + 21) - *((_QWORD *)a2 + 20)) >> 2);
  std::vector<BOOL>::vector((_QWORD *)this + 23, (uint64_t)a2 + 184);
  *((_QWORD *)this + 26) = *((id *)a2 + 26);
  *((_WORD *)this + 108) = *((_WORD *)a2 + 108);
}

void sub_22730313C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 168) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(a1);
}

_QWORD *std::vector<BOOL>::vector(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    std::vector<BOOL>::__vallocate[abi:ne180100](a1, v4);
    std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>>(a1, *(_QWORD **)a2, 0, (_QWORD *)(*(_QWORD *)a2 + 8 * (*(_QWORD *)(a2 + 8) >> 6)), *(_QWORD *)(a2 + 8) & 0x3F, *(_QWORD *)(a2 + 8));
  }
  return a1;
}

void std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>>(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5, uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  _BYTE v11[32];

  v6 = a1[1];
  v7 = v6 + a6;
  a1[1] = v6 + a6;
  if (!v6 || ((v7 - 1) ^ (v6 - 1)) >= 0x40)
  {
    if (v7 >= 0x41)
      v8 = (v7 - 1) >> 6;
    else
      v8 = 0;
    *(_QWORD *)(*a1 + 8 * v8) = 0;
  }
  v9 = *a1 + 8 * (v6 >> 6);
  v10 = v6 & 0x3F;
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(a2, a3, a4, a5, (uint64_t)&v9, (uint64_t)v11);
}

void std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,true,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(_QWORD *a1@<X1>, unint64_t a2@<X2>, _QWORD *a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  _BOOL4 v12;

  LODWORD(v6) = a2;
  v7 = *(uint64_t **)a5;
  v8 = *(_DWORD *)(a5 + 8);
  if (a1 != a3 || (_DWORD)a2 != a4)
  {
    do
    {
      v9 = 1 << v8;
      if (((*a1 >> a2) & 1) != 0)
        v10 = *v7 | v9;
      else
        v10 = *v7 & ~v9;
      *v7 = v10;
      v11 = (_DWORD)v6 == 63;
      v12 = v6 == 63;
      v6 = (a2 + 1);
      if (v11)
        v6 = 0;
      if (v8 == 63)
      {
        v8 = 0;
        *(_QWORD *)a5 = ++v7;
      }
      else
      {
        ++v8;
      }
      a1 += v12;
      a2 = v6 | a2 & 0xFFFFFFFF00000000;
      *(_DWORD *)(a5 + 8) = v8;
    }
    while (a1 != a3 || (_DWORD)v6 != a4);
    a1 = a3;
  }
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = v7;
  *(_DWORD *)(a6 + 24) = v8;
}

uint64_t std::vector<OUBox3d>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>>((uint64_t)(a1 + 2), a1[1], (__int128 *)a1[1], *a1, (__int128 *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x124924924924925)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(224 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>,std::reverse_iterator<OUBox3d*>>(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 *v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 14;
      std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>(a1, v7 - 224, v9);
      v7 = *((_QWORD *)&v16 + 1) - 224;
      *((_QWORD *)&v16 + 1) -= 224;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

__n128 std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[3];
  *(_OWORD *)(a2 + 32) = a3[2];
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v4;
  v6 = a3[4];
  v7 = a3[5];
  v8 = a3[7];
  *(_OWORD *)(a2 + 96) = a3[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  v9 = *((_QWORD *)a3 + 16);
  *((_QWORD *)a3 + 16) = 0;
  *(_QWORD *)(a2 + 128) = v9;
  *(_DWORD *)(a2 + 136) = *((_DWORD *)a3 + 34);
  v10 = a3[9];
  a3[9] = 0u;
  *(_OWORD *)(a2 + 144) = v10;
  *(_QWORD *)(a2 + 160) = 0;
  *(_OWORD *)(a2 + 168) = 0u;
  result = (__n128)a3[10];
  *(__n128 *)(a2 + 160) = result;
  *(_QWORD *)(a2 + 176) = *((_QWORD *)a3 + 22);
  *((_QWORD *)a3 + 22) = 0;
  a3[10] = 0u;
  v12 = *((_QWORD *)a3 + 24);
  *(_QWORD *)(a2 + 184) = *((_QWORD *)a3 + 23);
  *(_QWORD *)(a2 + 192) = v12;
  *(_QWORD *)(a2 + 200) = *((_QWORD *)a3 + 25);
  *(__int128 *)((char *)a3 + 184) = 0u;
  v13 = *((_QWORD *)a3 + 26);
  *(__int128 *)((char *)a3 + 200) = 0u;
  *(_QWORD *)(a2 + 208) = v13;
  *(_WORD *)(a2 + 216) = *((_WORD *)a3 + 108);
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<OUBox3d>,std::reverse_iterator<OUBox3d*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      std::allocator<OUBox3d>::destroy[abi:ne180100](v3, v1);
      v1 += 224;
    }
    while (v1 != v2);
  }
}

void **std::__split_buffer<OUBox3d>::~__split_buffer(void **a1)
{
  std::__split_buffer<OUBox3d>::clear[abi:ne180100](a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void std::__split_buffer<OUBox3d>::clear[abi:ne180100](_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 224;
    std::allocator<OUBox3d>::destroy[abi:ne180100](v4, i - 224);
  }
}

uint64_t std::vector<OUBox3d>::__push_back_slow_path<OUBox3d>(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;

  v3 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x124924924924924)
    _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 5) > v4)
    v4 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 5);
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((a1[2] - *a1) >> 5)) >= 0x92492492492492)
    v6 = 0x124924924924924;
  else
    v6 = v4;
  v14 = a1 + 2;
  if (v6)
    v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<OUBox3d>>((uint64_t)(a1 + 2), v6);
  else
    v7 = 0;
  v10 = v7;
  v11 = &v7[224 * v3];
  v13 = &v7[224 * v6];
  std::allocator<OUBox3d>::construct[abi:ne180100]<OUBox3d,OUBox3d>((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  v12 = v11 + 224;
  std::vector<OUBox3d>::__swap_out_circular_buffer(a1, &v10);
  v8 = a1[1];
  std::__split_buffer<OUBox3d>::~__split_buffer(&v10);
  return v8;
}

void sub_2273036F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<OUBox3d>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::vector<float>>::__append(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  _QWORD *v21;

  v8 = a1[2];
  result = a1 + 2;
  v7 = v8;
  v9 = (_QWORD *)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)v9) >> 3) >= a2)
  {
    if (a2)
    {
      v15 = &v9[3 * a2];
      v16 = 24 * a2;
      do
      {
        *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        result = std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v9, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
        v9 += 3;
        v16 -= 24;
      }
      while (v16);
      v9 = v15;
    }
    a1[1] = (uint64_t)v9;
  }
  else
  {
    v10 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *a1) >> 3);
    v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL)
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11)
      v11 = 2 * v12;
    if (v12 >= 0x555555555555555)
      v13 = 0xAAAAAAAAAAAAAAALL;
    else
      v13 = v11;
    v21 = result;
    if (v13)
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)result, v13);
    else
      v14 = 0;
    v17 = v14;
    v18 = &v14[24 * v10];
    v19 = v18;
    v20 = &v14[24 * v13];
    std::__split_buffer<std::vector<float>>::__construct_at_end(&v17, a2, a3);
    std::vector<std::vector<float>>::__swap_out_circular_buffer(a1, &v17);
    return (_QWORD *)std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)&v17);
  }
  return result;
}

void sub_22730385C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::__split_buffer<std::vector<float>>::__construct_at_end(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;

  v3 = result;
  v4 = (_QWORD *)result[2];
  if (a2)
  {
    v6 = &v4[3 * a2];
    v7 = 24 * a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      result = std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v4, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
      v4 += 3;
      v7 -= 24;
    }
    while (v7);
    v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_2273038F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<float>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>>((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>,std::reverse_iterator<std::vector<float>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      *(_QWORD *)(v7 - 8) = 0;
      v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(_QWORD *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      v7 = *((_QWORD *)&v14 + 1) - 24;
      *((_QWORD *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t std::__split_buffer<std::vector<float>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::vector<float>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__split_buffer<std::vector<float>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    v5 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(_QWORD *)(v2 - 16) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

uint64_t std::unordered_set<int>::unordered_set<std::__wrap_iter<int const*>>(uint64_t a1, int *a2, int *a3)
{
  int *v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a2 != a3)
  {
    v5 = a2;
    do
    {
      std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, v5, v5);
      ++v5;
    }
    while (v5 != a3);
  }
  return a1;
}

void sub_227303B78(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::find<int>(_QWORD *a1, int *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  uint64_t **v6;
  uint64_t *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (*(_QWORD *)&v2 <= v3)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (*(_QWORD *)&v2 - 1) & v3;
  }
  v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  for (result = *v6; result; result = (uint64_t *)*result)
  {
    v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3)
        return result;
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(_QWORD *)&v2)
          v8 %= *(_QWORD *)&v2;
      }
      else
      {
        v8 &= *(_QWORD *)&v2 - 1;
      }
      if (v8 != v5)
        return 0;
    }
  }
  return result;
}

__n128 *std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::vector<float> *,std::vector<float> *,std::vector<float> *,0>(__n128 *a1, __n128 *a2, uint64_t a3)
{
  __n128 *v4;

  v4 = a1;
  if (a1 != a2)
  {
    do
    {
      std::vector<float>::__move_assign(a3, v4);
      v4 = (__n128 *)((char *)v4 + 24);
      a3 += 24;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

__n128 std::vector<float>::__move_assign(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

std::vector<int> *__cdecl std::vector<int>::vector(std::vector<int> *this, std::vector<int>::size_type __n, const std::vector<int>::value_type *__x)
{
  std::vector<int>::pointer end;
  int *v7;
  std::vector<int>::size_type v8;

  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<float>::__vallocate[abi:ne180100](this, __n);
    end = this->__end_;
    v7 = &end[__n];
    v8 = 4 * __n;
    do
    {
      *end++ = *__x;
      v8 -= 4;
    }
    while (v8);
    this->__end_ = v7;
  }
  return this;
}

void sub_227303D50(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<int>::__throw_out_of_range[abi:ne180100]()
{
  std::__throw_out_of_range[abi:ne180100]("vector");
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_24EF97350, MEMORY[0x24BEDAB00]);
}

void sub_227303DBC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
  return result;
}

void std::vector<OUBox3d>::__vdeallocate(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 224;
        std::allocator<OUBox3d>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

_QWORD *std::vector<std::vector<float>>::__init_with_size[abi:ne180100]<std::vector<float>*,std::vector<float>*>(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    std::vector<std::vector<int>>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<float>>,std::vector<float>*,std::vector<float>*,std::vector<float>*>((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_227303EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::vector<int>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<float>>,std::vector<float>*,std::vector<float>*,std::vector<float>*>(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), (uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 2);
      v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::vector<float>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_227303F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::vector<float>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::vector<float>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::vector<int>*>::operator()[abi:ne180100](a1);
  return a1;
}

uint64_t std::set<int>::set[abi:ne180100]<std::__wrap_iter<int *>>(uint64_t a1, int *a2, int *a3)
{
  uint64_t *v4;
  int *v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = (uint64_t *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>((uint64_t **)a1, v4, v6, v6);
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_227304030(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__tree<int>::destroy(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t v10;
  uint64_t *v11;

  v6 = std::__tree<int>::__find_equal<int>(a1, a2, &v11, &v10, a3);
  v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    std::__tree<int>::__insert_node_at(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *std::__tree<int>::__find_equal<int>(_QWORD *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  int v22;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      v9 = (uint64_t *)*a2;
      do
      {
        v10 = v9;
        v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      v13 = a2;
      do
      {
        v10 = (uint64_t *)v13[2];
        v14 = *v10 == (_QWORD)v13;
        v13 = v10;
      }
      while (v14);
    }
    v15 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5)
      goto LABEL_17;
    v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v17 = (uint64_t *)v16;
          v18 = *(_DWORD *)(v16 + 28);
          if (v15 >= v18)
            break;
          v16 = *v17;
          v5 = v17;
          if (!*v17)
            goto LABEL_29;
        }
        if (v18 >= v15)
          break;
        v5 = v17 + 1;
        v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  v11 = a2[1];
  if (v11)
  {
    v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      v14 = *a4 == (_QWORD)v19;
      v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 7))
  {
    v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v21 = (uint64_t *)v20;
          v22 = *(_DWORD *)(v20 + 28);
          if (v6 >= v22)
            break;
          v20 = *v21;
          v5 = v21;
          if (!*v21)
            goto LABEL_48;
        }
        if (v22 >= v6)
          break;
        v5 = v21 + 1;
        v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t *std::__tree<int>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::__tree<int>::destroy(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    std::__tree<int>::destroy(a1, *a2);
    std::__tree<int>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

_QWORD *std::vector<std::vector<int>>::__append(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  _QWORD *v21;

  v8 = a1[2];
  result = a1 + 2;
  v7 = v8;
  v9 = (_QWORD *)*(result - 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)v9) >> 3) >= a2)
  {
    if (a2)
    {
      v15 = &v9[3 * a2];
      v16 = 24 * a2;
      do
      {
        *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v9, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
        v9 += 3;
        v16 -= 24;
      }
      while (v16);
      v9 = v15;
    }
    a1[1] = (uint64_t)v9;
  }
  else
  {
    v10 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *a1) >> 3);
    v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL)
      _ZNKSt3__16vectorIDv2_fNS_9allocatorIS1_EEE20__throw_length_errorB8ne180100Ev();
    v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    if (2 * v12 > v11)
      v11 = 2 * v12;
    if (v12 >= 0x555555555555555)
      v13 = 0xAAAAAAAAAAAAAAALL;
    else
      v13 = v11;
    v21 = result;
    if (v13)
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<int>>>((uint64_t)result, v13);
    else
      v14 = 0;
    v17 = v14;
    v18 = &v14[24 * v10];
    v19 = v18;
    v20 = &v14[24 * v13];
    std::__split_buffer<std::vector<int>>::__construct_at_end(&v17, a2, a3);
    std::vector<std::vector<int>>::__swap_out_circular_buffer(a1, &v17);
    return (_QWORD *)std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)&v17);
  }
  return result;
}

void sub_2273045F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<float>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::__split_buffer<std::vector<int>>::__construct_at_end(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;

  v3 = result;
  v4 = (_QWORD *)result[2];
  if (a2)
  {
    v6 = &v4[3 * a2];
    v7 = 24 * a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v4, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 2);
      v4 += 3;
      v7 -= 24;
    }
    while (v7);
    v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_227304688(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<int>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>>((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>,std::reverse_iterator<std::vector<int>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      *(_QWORD *)(v7 - 8) = 0;
      v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(_QWORD *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      v7 = *((_QWORD *)&v14 + 1) - 24;
      *((_QWORD *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v11);
  return v9;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<int>>,std::reverse_iterator<std::vector<int>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<float>>,std::reverse_iterator<std::vector<float>*>>::operator()[abi:ne180100](a1);
  return a1;
}

void sub_227305F1C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_2273063A0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2273063E8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

BOOL sub_2273064FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s16MagnifierSupport20MAGOutputEventSourceO9hashValueSivg_0()
{
  sub_22758EF4C();
  sub_22758EF58();
  return sub_22758EF88();
}

uint64_t sub_227306554()
{
  return sub_22758EF58();
}

uint64_t sub_22730657C()
{
  sub_22758EF4C();
  sub_22758EF58();
  return sub_22758EF88();
}

unint64_t sub_2273065BC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_22730A874(*a1);
  *a2 = result;
  return result;
}

void sub_2273065E4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_2273065F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF97E30;
}

uint64_t sub_227306600()
{
  sub_22730A884();
  return sub_22758E3AC();
}

uint64_t sub_22730665C()
{
  sub_22730A884();
  return sub_22758E388();
}

BOOL sub_2273066A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_2273066BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_2273066D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_2273066E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void sub_2273066F8(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_22730672C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

void sub_22730696C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2273069A0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

id sub_227306B2C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id result;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  objc_super v40;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA0C0);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9AE0);
  v36 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9930);
  v37 = *(_QWORD *)(v17 - 8);
  v38 = v17;
  MEMORY[0x24BDAC7A8](v17, v18, v19, v20, v21);
  v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40.receiver = v1;
  v40.super_class = ObjectType;
  objc_msgSendSuper2(&v40, sel_viewDidLoad);
  v24 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView];
  objc_msgSend(v24, sel_setDataSource_, v1);
  objc_msgSend(v24, sel_setDelegate_, v1);
  sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v26 = (void *)sub_22758E1B4();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v26);

  type metadata accessor for UIStepperLengthCell();
  v27 = swift_getObjCClassFromMetadata();
  v28 = (void *)sub_22758E1B4();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, v27, v28);

  v29 = (void *)sub_22758E1B4();
  objc_msgSend(v24, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v29);

  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v31 = result;
  objc_msgSend(result, sel_addSubview_, v24);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v32 = result;
  sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
  swift_bridgeObjectRelease();

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9BC0);
  sub_22758D170();
  swift_endAccess();
  v39 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v33 = sub_22758EA00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
  sub_22730BA80(0, (unint64_t *)&unk_2540BA0E0);
  sub_22730BB7C((unint64_t *)&unk_2540B9AD0, &qword_2540B9AE0, MEMORY[0x24BDB9EE8]);
  sub_22730BAB8();
  sub_22758D200();
  sub_22730BB10((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9920, &qword_2540B9930, MEMORY[0x24BDB9A08]);
  v34 = v38;
  v35 = sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v34);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = v35;
  return (id)swift_release();
}

void sub_227306FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2276B3E34](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (v6 == 1)
    {
      objc_msgSend(v4, sel_beginUpdates);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D50E0);
      sub_22758CAD4();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_227593AB0;
      MEMORY[0x2276B0A98](1, 2);
      v5 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_reloadRowsAtIndexPaths_withRowAnimation_, v5, 100);

      objc_msgSend(v4, sel_endUpdates);
    }

  }
}

void sub_227307174(char a1)
{
  void *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

}

id sub_22730731C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  objc_class *ObjectType;
  objc_super v22;
  uint64_t v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v3;
  v6 = 0;
  v7 = MEMORY[0x24BEE4AF8];
  do
  {
    v10 = byte_24EF981E0[v6 + 32];
    if (v10 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v23 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324650(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v23;
      }
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_227324650(v8 > 1, v9 + 1, 1);
        v7 = v23;
      }
      *(_QWORD *)(v7 + 16) = v9 + 1;
      *(_BYTE *)(v7 + v9 + 32) = v10;
    }
    ++v6;
  }
  while (v6 != 4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks] = v7;
  v11 = OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, sel_setClipsToBounds_, 0);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_systemYellowColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  *(_QWORD *)&v5[v11] = v14;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = 0;

  if (a2)
  {
    v16 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v22.receiver = v5;
  v22.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, v16, a3, a1);

  return v17;
}

id sub_2273075BC(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  objc_class *ObjectType;
  objc_super v17;
  uint64_t v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = v1;
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
  do
  {
    v8 = byte_24EF98208[v4 + 32];
    if (v8 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v18 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324650(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v18;
      }
      v7 = *(_QWORD *)(v5 + 16);
      v6 = *(_QWORD *)(v5 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_227324650(v6 > 1, v7 + 1, 1);
        v5 = v18;
      }
      *(_QWORD *)(v5 + 16) = v7 + 1;
      *(_BYTE *)(v5 + v7 + 32) = v8;
    }
    ++v4;
  }
  while (v4 != 4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks] = v5;
  v9 = OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_tableView;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_systemYellowColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  *(_QWORD *)&v3[v9] = v12;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_speechFeedbackSubscription] = 0;

  v17.receiver = v3;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

  return v14;
}

id sub_2273077F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ObjectUnderstandingSettingsViewController()
{
  return objc_opt_self();
}

id sub_227307894(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char **v42;
  id v43;
  void *v44;
  uint64_t v45;
  char **v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t ObjCClassFromMetadata;
  id v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  void *v74;
  void *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  void *v97;
  void *v98;
  uint64_t v100;
  uint64_t v101[3];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6620);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v11 = (char *)&v101[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 2;
  switch(sub_22758CAC8())
  {
    case 0:
      v13 = (void *)sub_22758E1B4();
      v14 = (void *)sub_22758CA74();
      v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

      objc_msgSend(v15, sel_setAccessoryView_, 0);
      v16 = sub_22758CA98();
      if (v16)
      {
        if (v16 != 1)
          return v15;
        v17 = 1;
      }
      else
      {
        v17 = 0;
      }
      if (qword_2540B87B8 != -1)
        swift_once();
      v86 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
      swift_beginAccess();
      v87 = *(_QWORD *)(v86 + 8);
      v88 = *(_BYTE *)(v86 + 16);
      v102 = *(_QWORD *)v86;
      v103 = v87;
      LOBYTE(v104) = v88;
      v89 = qword_2540B9100;
      v90 = swift_bridgeObjectRetain();
      if (v89 != -1)
        v90 = swift_once();
      MEMORY[0x24BDAC7A8](v90, v91, v92, v93, v94);
      *(&v100 - 2) = (uint64_t)&v102;
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      if (((v17 ^ LOBYTE(v101[0])) & 1) != 0)
        v95 = 0;
      else
        v95 = 3;
      objc_msgSend(v15, sel_setAccessoryType_, v95);
      v96 = objc_msgSend(v15, sel_textLabel);
      if (v96)
      {
        v97 = v96;
        sub_22737F0BC();
        v98 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v97, sel_setText_, v98);

      }
      return v15;
    case 1:
      v19 = (void *)sub_22758E1B4();
      v20 = (void *)sub_22758CA74();
      v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v19, v20);

      type metadata accessor for UIStepperLengthCell();
      v21 = swift_dynamicCastClass();
      if (v21)
      {
        v100 = v21;
        v22 = qword_2540B87B8;
        v15 = v15;
        if (v22 != -1)
          swift_once();
        v23 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        v24 = *(_QWORD *)(v23 + 8);
        v25 = *(_BYTE *)(v23 + 16);
        v102 = *(_QWORD *)v23;
        v103 = v24;
        LOBYTE(v104) = v25;
        v26 = qword_2540B9100;
        v27 = swift_bridgeObjectRetain();
        if (v26 != -1)
          v27 = swift_once();
        MEMORY[0x24BDAC7A8](v27, v28, v29, v30, v31);
        *(&v100 - 2) = (uint64_t)&v102;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        v32 = LOBYTE(v101[0]);
        v33 = (uint64_t *)(qword_2540BCDD0
                        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold);
        v34 = swift_beginAccess();
        v35 = v33[1];
        v36 = v33[2];
        v101[0] = *v33;
        v101[1] = v35;
        v101[2] = v36;
        MEMORY[0x24BDAC7A8](v34, v37, v38, v39, v40);
        *(&v100 - 2) = (uint64_t)v101;
        swift_bridgeObjectRetain();
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        v41 = (void *)objc_opt_self();
        v42 = &selRef_feet;
        if (!v32)
          v42 = &selRef_meters;
        v43 = objc_msgSend(v41, *v42);
        sub_22730BA80(0, (unint64_t *)&qword_2558D50C0);
        sub_22758C57C();
        sub_227436BC0((uint64_t)v11, (uint64_t)sub_2273083C0, 0);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      }
      return v15;
    case 2:
      goto LABEL_15;
    case 3:
      v12 = 3;
LABEL_15:
      v18 = 0;
      goto LABEL_16;
    default:
      v12 = 4;
      v18 = 1;
LABEL_16:
      v44 = (void *)sub_22758E1B4();
      v45 = sub_22758CA74();
      v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v44, v45);

      if ((v18 & 1) != 0)
        return v15;
      v46 = &selRef_session_didUpdateDetectedObjects_;
      v47 = objc_msgSend(v15, sel_textLabel);
      v48 = v47;
      if (v12 == 3)
      {
        if (v47)
        {
          objc_msgSend(v47, sel_setLineBreakMode_, 0);

        }
        v49 = objc_msgSend(v15, sel_textLabel);
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v49, sel_setNumberOfLines_, 0);

        }
        v51 = objc_msgSend(v15, sel_textLabel);
        if (v51)
        {
          v52 = v51;
          type metadata accessor for MAGUtilities();
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          v54 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
          v55 = (void *)sub_22758E1B4();
          v56 = (void *)sub_22758E1B4();
          v57 = objc_msgSend(v54, sel_localizedStringForKey_value_table_, v55, 0, v56);

          sub_22758E1E4();
          v58 = (void *)sub_22758E1B4();
          swift_bridgeObjectRelease();
          objc_msgSend(v52, sel_setText_, v58);

        }
        v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
        objc_msgSend(v59, sel_setTag_, sub_22758CA98());
        if (qword_2540B87B8 != -1)
          swift_once();
        v60 = qword_2540BCDD0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingSeatOccupancy;
        swift_beginAccess();
        v61 = *(_QWORD *)(v60 + 8);
        v62 = *(_BYTE *)(v60 + 16);
        v102 = *(_QWORD *)v60;
        v103 = v61;
        LOBYTE(v104) = v62;
        v63 = qword_2540B9100;
        v64 = swift_bridgeObjectRetain();
        if (v63 != -1)
          v64 = swift_once();
        MEMORY[0x24BDAC7A8](v64, v65, v66, v67, v68);
        *(&v100 - 2) = (uint64_t)&v102;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v59, sel_setOn_, LOBYTE(v101[0]));
        objc_msgSend(v59, sel_addTarget_action_forControlEvents_, v2, sel_toggleSeatOccupancySwitch_, 4096);
        objc_msgSend(v15, sel_setAccessoryView_, v59);
        objc_msgSend(v15, sel_setAccessoryType_, 0);

        return v15;
      }
      if (v47)
      {
        objc_msgSend(v47, sel_setLineBreakMode_, 0);

      }
      v69 = objc_msgSend(v15, sel_textLabel);
      if (v69)
      {
        v70 = v69;
        objc_msgSend(v69, sel_setNumberOfLines_, 0);

      }
      v71 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC16MagnifierSupport41ObjectUnderstandingSettingsViewController_availableDetectionFeedbacks);
      v72 = sub_22758CA98();
      if ((v72 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_53;
      }
      if (v72 >= *(_QWORD *)(v71 + 16))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        swift_once();
        goto LABEL_38;
      }
      v45 = *(unsigned __int8 *)(v71 + v72 + 32);
      v73 = objc_msgSend(v15, sel_textLabel);
      if (v73)
      {
        v74 = v73;
        sub_2273063A0(v45);
        v75 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v74, sel_setText_, v75);

      }
      v46 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
      if (qword_2540B87B8 != -1)
        goto LABEL_54;
LABEL_38:
      v76 = (uint64_t *)(qword_2540BCDD0
                      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedObjectUnderstandingFeedbacks);
      swift_beginAccess();
      v77 = v76[1];
      v78 = v76[2];
      v102 = *v76;
      v103 = v77;
      v104 = v78;
      v79 = qword_2540B9100;
      swift_bridgeObjectRetain();
      v80 = swift_bridgeObjectRetain();
      if (v79 != -1)
        v80 = swift_once();
      MEMORY[0x24BDAC7A8](v80, v81, v82, v83, v84);
      *(&v100 - 2) = (uint64_t)&v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D4F18);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = sub_227367600(v45, v101[0]);
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setOn_, v85);
      objc_msgSend(v46, sel_setTag_, v45);
      objc_msgSend(v46, sel_addTarget_action_forControlEvents_, v2, sel_toggleFeedbackSwitch_, 4096);
      objc_msgSend(v15, sel_setAccessoryView_, v46);

      return v15;
  }
}

uint64_t sub_2273083C0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  double v18;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0
      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold;
  swift_beginAccess();
  v18 = a1;
  if (qword_2540B9100 != -1)
    swift_once();
  v11 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  *(_QWORD *)&v17[-16] = &v18;
  *(_QWORD *)&v17[-8] = v10;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

id sub_2273086CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, _QWORD))
{
  uint64_t v5;
  void *v6;

  sub_22730A8C8(a4, a5);
  if (v5)
  {
    v6 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E68);
}

void type metadata accessor for Event(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E70);
}

void type metadata accessor for TorchMode(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E78);
}

void type metadata accessor for ARConfidenceLevel(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E80);
}

uint64_t initializeBufferWithCopyOfBuffer for MFReaderTextLocaleAndRange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MFRubberBand(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MFRubberBand(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E88);
}

void type metadata accessor for Identifier(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E90);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2540B9F48);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MFCardContainerView.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MFCardContainerView.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2540B9FC0);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4E98);
}

void type metadata accessor for ParameterID(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EA0);
}

void type metadata accessor for EventType(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EA8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EB0);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EB8);
}

void type metadata accessor for TestOption(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EC0);
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_227308A70(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_227308A90(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D4EC8);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectUnderstandingFeedback(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectUnderstandingFeedback(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_227308BC8 + 4 * byte_227593AC9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_227308BFC + 4 * byte_227593AC4[v4]))();
}

uint64_t sub_227308BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227308C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227308C0CLL);
  return result;
}

uint64_t sub_227308C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227308C20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_227308C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227308C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227308C38(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_227308C44(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectUnderstandingFeedback()
{
  return &type metadata for ObjectUnderstandingFeedback;
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2558D4ED0);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2540B9E38);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2558D4EE0);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2540B9E88);
}

_QWORD *sub_227308CAC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_227308CBC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_22758E1CC();
  *a2 = 0;
  return result;
}

uint64_t sub_227308D48(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_22758E1D8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_227308DE4(uint64_t a1, uint64_t a2)
{
  return sub_22730A4C4(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_227308E04(uint64_t a1, uint64_t a2)
{
  return sub_22730A4C4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_227308E10(uint64_t a1, uint64_t a2)
{
  return sub_227308E90(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_227308E24@<X0>(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t result;

  sub_22758E1E4();
  v2 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  sub_22758E1E4();
  v3 = sub_22758E1B4();

  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_227308E84(uint64_t a1, uint64_t a2)
{
  return sub_227308E90(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_227308E90(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  sub_22758E1E4();
  v4 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v5 = sub_22758E1E4();
  v6 = a3(v5);

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_227308EF4()
{
  void *v0;

  sub_22758E1E4();
  v0 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  sub_22758E1E4();
  sub_22758E274();

  return swift_bridgeObjectRelease();
}

uint64_t sub_227308F5C()
{
  void *v0;
  uint64_t v1;

  sub_22758E1E4();
  v0 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  sub_22758E1E4();
  sub_22758EF4C();
  sub_22758E274();
  v1 = sub_22758EF88();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_227308FF4()
{
  sub_2273096F0(&qword_2558D52C8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_22759582C);
  return sub_22758EEE0();
}

uint64_t sub_227309034()
{
  sub_2273096F0(&qword_2558D52C8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_22759582C);
  return sub_22758EED4();
}

uint64_t sub_227309078()
{
  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  return sub_22758C6F0();
}

id sub_2273090B8()
{
  id *v0;

  return *v0;
}

uint64_t sub_2273090C0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2273090C8(uint64_t a1)
{
  MEMORY[0x2276B3C78](&unk_227596344, a1);
  return sub_22758CD14();
}

uint64_t sub_227309104()
{
  MEMORY[0x2276B3C78](&unk_227596344);
  return sub_22758CD08();
}

uint64_t sub_22730914C(uint64_t a1, uint64_t a2)
{
  sub_22758EF4C();
  MEMORY[0x2276B3C78](&unk_227596344, a2);
  sub_22758CD08();
  return sub_22758EF88();
}

uint64_t sub_2273091A4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_22758E1CC();
  *a2 = 0;
  return result;
}

uint64_t sub_227309218(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_22758E1D8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_227309294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_22758E1E4();
  v2 = sub_22758E1B4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2273092D4()
{
  return sub_227392B4C();
}

void sub_2273092E0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2273092EC()
{
  return sub_22758E1E4();
}

uint64_t sub_2273092FC()
{
  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  return sub_22758C738();
}

uint64_t sub_22730933C()
{
  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  return sub_22758C708();
}

uint64_t sub_22730937C(void *a1)
{
  id v2;

  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  v2 = a1;
  return sub_22758C6FC();
}

uint64_t sub_2273093E0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_22758E964();

  return v2;
}

uint64_t sub_227309414()
{
  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  return sub_22758C72C();
}

uint64_t sub_227309464()
{
  sub_22758EF4C();
  sub_22758E13C();
  return sub_22758EF88();
}

uint64_t sub_2273094C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2276B3C78](&unk_227596344, a3);
  return sub_22758CCFC();
}

uint64_t sub_22730950C()
{
  sub_2273096F0(&qword_2558D53E0, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_227596300);
  sub_2273096F0(&qword_2558D53E8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_2275951BC);
  return sub_22758ED3C();
}

uint64_t sub_227309590()
{
  sub_2273096F0(&qword_2558D53C0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_227595460);
  sub_2273096F0(&qword_2558D53C8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_227595408);
  return sub_22758ED3C();
}

uint64_t sub_227309614()
{
  sub_2273096F0(&qword_2558D5040, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_227593E68);
  sub_2273096F0(&qword_2558D5048, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_227593E08);
  return sub_22758ED3C();
}

uint64_t sub_227309698()
{
  return sub_2273096F0(&qword_2558D4EF0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_227593DCC);
}

uint64_t sub_2273096C4()
{
  return sub_2273096F0(&qword_2558D4EF8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_227593DA0);
}

uint64_t sub_2273096F0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2276B3C78](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227309730()
{
  return sub_2273096F0(&qword_2558D4F00, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_227593E3C);
}

unint64_t sub_227309760()
{
  unint64_t result;

  result = qword_2558D4F08;
  if (!qword_2558D4F08)
  {
    result = MEMORY[0x2276B3C78](&unk_2275940B4, &type metadata for ObjectUnderstandingFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D4F08);
  }
  return result;
}

uint64_t sub_2273097A4()
{
  return sub_22730BB7C(&qword_2558D4F10, &qword_2558D4F18, MEMORY[0x24BEE12E0]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2276B3C6C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_227309814()
{
  sub_2273096F0((unint64_t *)&qword_2558D53F0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_2275963B4);
  sub_2273096F0(&qword_2558D53F8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_227595004);
  return sub_22758ED3C();
}

uint64_t sub_227309898()
{
  sub_2273096F0((unint64_t *)&qword_2558D5350, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_2275960F0);
  sub_2273096F0(&qword_2558D5358, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_227595D3C);
  return sub_22758ED3C();
}

BOOL sub_22730991C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_227309930@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22758E1E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_227309958()
{
  sub_2273096F0((unint64_t *)&qword_2558D5018, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2275949C0);
  sub_2273096F0(&qword_2558D5020, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22759426C);
  return sub_22758ED3C();
}

uint64_t sub_2273099DC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  sub_22758E1E4();
  v4 = sub_22758E1B4();

  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_227309A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_22758E1E4();
  v2 = sub_22758E1B4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_227309A6C()
{
  sub_2273096F0(&qword_2558D5370, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227596178);
  sub_2273096F0(&qword_2558D5378, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227595B14);
  sub_2273096F0(&qword_2558D5360, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227596134);
  return sub_22758ED3C();
}

uint64_t sub_227309B0C()
{
  sub_2273096F0(&qword_2558D5380, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_227596028);
  sub_2273096F0(&qword_2558D5388, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_227595A0C);
  return sub_22758ED3C();
}

uint64_t sub_227309B90()
{
  sub_2273096F0(&qword_2558D5028, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594A04);
  sub_2273096F0(&qword_2558D5030, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594150);
  return sub_22758ED3C();
}

uint64_t sub_227309C14()
{
  return sub_2273096F0(&qword_2558D4F20, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594114);
}

uint64_t sub_227309C40()
{
  return sub_2273096F0(&qword_2558D4F28, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_2275940E8);
}

uint64_t sub_227309C6C()
{
  return sub_2273096F0(&qword_2558D4F30, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_227594230);
}

uint64_t sub_227309C98()
{
  return sub_2273096F0(&qword_2558D4F38, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_227594204);
}

uint64_t sub_227309CC4()
{
  sub_2273096F0(&qword_2558D4FC8, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_227594878);
  sub_2273096F0(&qword_2558D4FD0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_227594818);
  return sub_22758ED3C();
}

uint64_t sub_227309D48()
{
  sub_2273096F0(&qword_2558D5400, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_227594F14);
  sub_2273096F0(&qword_2558D5408, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_227594EBC);
  return sub_22758ED3C();
}

uint64_t sub_227309DCC()
{
  sub_2273096F0((unint64_t *)&qword_2540B9F80, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2275962BC);
  sub_2273096F0(&qword_2558D53B8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_227595550);
  return sub_22758ED3C();
}

uint64_t sub_227309E50()
{
  sub_2273096F0(&qword_2558D53A0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_2275956C4);
  sub_2273096F0((unint64_t *)&unk_2558D53A8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_227595664);
  return sub_22758ED3C();
}

uint64_t sub_227309ED4()
{
  sub_2273096F0(&qword_2558D4FD8, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_227594720);
  sub_2273096F0(&qword_2558D4FE0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2275946C0);
  return sub_22758ED3C();
}

uint64_t sub_227309F58()
{
  sub_2273096F0((unint64_t *)&qword_2558D5330, (uint64_t (*)(uint64_t))type metadata accessor for AXMFeatureDescriptionOption, (uint64_t)&unk_227596068);
  sub_2273096F0(&qword_2558D5338, (uint64_t (*)(uint64_t))type metadata accessor for AXMFeatureDescriptionOption, (uint64_t)&unk_227595F7C);
  return sub_22758ED3C();
}

uint64_t sub_227309FDC()
{
  sub_2273096F0(&qword_2558D5008, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_227594980);
  sub_2273096F0(&qword_2558D5010, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_227594378);
  return sub_22758ED3C();
}

uint64_t sub_22730A060()
{
  return sub_2273096F0(&qword_2558D4F40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_227594340);
}

uint64_t sub_22730A08C()
{
  return sub_2273096F0(&qword_2558D4F48, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_227594318);
}

uint64_t sub_22730A0B8()
{
  sub_2273096F0(&qword_2558D4FF8, (uint64_t (*)(uint64_t))type metadata accessor for EventType, (uint64_t)&unk_2275944D0);
  sub_2273096F0(&qword_2558D5000, (uint64_t (*)(uint64_t))type metadata accessor for EventType, (uint64_t)&unk_227594478);
  return sub_22758ED3C();
}

uint64_t sub_22730A13C()
{
  return sub_2273096F0(&qword_2558D4F50, (uint64_t (*)(uint64_t))type metadata accessor for EventType, (uint64_t)&unk_227594440);
}

uint64_t sub_22730A168()
{
  return sub_2273096F0(&qword_2558D4F58, (uint64_t (*)(uint64_t))type metadata accessor for EventType, (uint64_t)&unk_227594418);
}

uint64_t sub_22730A194()
{
  sub_2273096F0(&qword_2558D4FE8, (uint64_t (*)(uint64_t))type metadata accessor for ParameterID, (uint64_t)&unk_227594940);
  sub_2273096F0(&qword_2558D4FF0, (uint64_t (*)(uint64_t))type metadata accessor for ParameterID, (uint64_t)&unk_2275945B8);
  return sub_22758ED3C();
}

uint64_t sub_22730A218()
{
  sub_2273096F0(&qword_2558D53D0, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_227595320);
  sub_2273096F0(&qword_2558D53D8, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_2275952C8);
  return sub_22758ED3C();
}

uint64_t sub_22730A29C()
{
  sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
  return sub_22758C714();
}

uint64_t sub_22730A2F4()
{
  sub_2273096F0(&qword_2558D5390, (uint64_t (*)(uint64_t))type metadata accessor for MatteType, (uint64_t)&unk_227595924);
  sub_2273096F0(&qword_2558D5398, (uint64_t (*)(uint64_t))type metadata accessor for MatteType, (uint64_t)&unk_2275958CC);
  return sub_22758ED3C();
}

uint64_t sub_22730A378()
{
  sub_2273096F0(&qword_2558D5360, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227596134);
  sub_2273096F0(&qword_2558D5368, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227595C28);
  return sub_22758ED3C();
}

uint64_t sub_22730A3FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22758E1B4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22730A440()
{
  sub_2273096F0(&qword_2558D5340, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2275960AC);
  sub_2273096F0(&qword_2558D5348, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_227595E50);
  return sub_22758ED3C();
}

uint64_t sub_22730A4C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22758E1E4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22730A500()
{
  sub_22758E1E4();
  sub_22758E274();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22730A540()
{
  uint64_t v0;

  sub_22758E1E4();
  sub_22758EF4C();
  sub_22758E274();
  v0 = sub_22758EF88();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22730A5B0()
{
  return sub_2273096F0(&qword_2558D4F60, (uint64_t (*)(uint64_t))type metadata accessor for EventType, (uint64_t)&unk_2275944A8);
}

uint64_t sub_22730A5DC()
{
  return sub_2273096F0(&qword_2558D4F68, (uint64_t (*)(uint64_t))type metadata accessor for ParameterID, (uint64_t)&unk_227594580);
}

uint64_t sub_22730A608()
{
  return sub_2273096F0(&qword_2558D4F70, (uint64_t (*)(uint64_t))type metadata accessor for ParameterID, (uint64_t)&unk_227594558);
}

uint64_t sub_22730A634()
{
  return sub_2273096F0(&qword_2558D4F78, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_227594684);
}

uint64_t sub_22730A660()
{
  return sub_2273096F0(&qword_2558D4F80, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_227594658);
}

uint64_t sub_22730A68C()
{
  return sub_2273096F0(&qword_2558D4F88, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_2275946F4);
}

uint64_t sub_22730A6B8()
{
  return sub_2273096F0(&qword_2558D4F90, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_2275947DC);
}

uint64_t sub_22730A6E4()
{
  return sub_2273096F0(&qword_2558D4F98, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_2275947B0);
}

uint64_t sub_22730A710()
{
  return sub_2273096F0(&qword_2558D4FA0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_22759484C);
}

uint64_t sub_22730A73C()
{
  return sub_2273096F0(&qword_2558D4FA8, (uint64_t (*)(uint64_t))type metadata accessor for ParameterID, (uint64_t)&unk_2275945E8);
}

uint64_t sub_22730A768()
{
  return sub_2273096F0(&qword_2558D4FB0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2275943A8);
}

uint64_t sub_22730A794()
{
  return sub_2273096F0(&qword_2558D4FB8, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2275942A0);
}

uint64_t sub_22730A7C0()
{
  return sub_2273096F0(&qword_2558D4FC0, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594184);
}

uint64_t sub_22730A7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_22758E1E4();
  v2 = v1;
  if (v0 == sub_22758E1E4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_22758EE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_22730A874(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_22730A884()
{
  unint64_t result;

  result = qword_2558D5038;
  if (!qword_2558D5038)
  {
    result = MEMORY[0x2276B3C78](&unk_22759403C, &type metadata for ObjectUnderstandingFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D5038);
  }
  return result;
}

uint64_t sub_22730A8C8(unint64_t a1, uint64_t (*a2)(unint64_t, _QWORD))
{
  if (a1 > 3)
    return 0;
  else
    return a2(a1, a2);
}

id sub_22730A8F0(id result)
{
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  uint64_t v25;

  if (result)
  {
    v1 = result;
    result = objc_msgSend(result, sel_tag);
    if ((unint64_t)result <= 3)
    {
      v2 = result;
      if (objc_msgSend(v1, sel_isOn))
      {
        if (qword_2540B87B8 != -1)
          swift_once();
        swift_beginAccess();
        v3 = qword_2540B9100;
        swift_bridgeObjectRetain();
        v4 = swift_bridgeObjectRetain();
        if (v3 != -1)
          v4 = swift_once();
        MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558D4F18);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v9 = (char *)v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_2273A489C(0, *(_QWORD *)(v25 + 16) + 1, 1, (char *)v25);
        v11 = *((_QWORD *)v9 + 2);
        v10 = *((_QWORD *)v9 + 3);
        if (v11 >= v10 >> 1)
          v9 = sub_2273A489C((char *)(v10 > 1), v11 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v11 + 1;
        v9[v11 + 32] = v2;
        swift_bridgeObjectRelease();
        sub_227444184((uint64_t)v9, 1);
        return (id)swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_2540B87B8 != -1)
          swift_once();
        swift_beginAccess();
        v12 = qword_2540B9100;
        swift_bridgeObjectRetain();
        v13 = swift_bridgeObjectRetain();
        if (v12 != -1)
          v13 = swift_once();
        MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558D4F18);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = *(_QWORD *)(v25 + 16);
        if (v18)
        {
          v19 = (unsigned __int8 *)(v25 + 32);
          v20 = MEMORY[0x24BEE4AF8];
          do
          {
            v24 = *v19++;
            v23 = v24;
            if (v24 != v2)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                sub_227324650(0, *(_QWORD *)(v20 + 16) + 1, 1);
              v22 = *(_QWORD *)(v20 + 16);
              v21 = *(_QWORD *)(v20 + 24);
              if (v22 >= v21 >> 1)
                sub_227324650(v21 > 1, v22 + 1, 1);
              *(_QWORD *)(v20 + 16) = v22 + 1;
              *(_BYTE *)(v20 + v22 + 32) = v23;
            }
            --v18;
          }
          while (v18);
        }
        else
        {
          v20 = MEMORY[0x24BEE4AF8];
        }
        swift_bridgeObjectRelease();
        sub_227444184(v20, 1);
        return (id)swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22730ACC0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[23];
  unsigned __int8 v20;

  v3 = sub_22758DF20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 == -1)
  {
    if (a1)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_once();
  if (!a1)
    goto LABEL_6;
LABEL_3:
  v11 = qword_2540BCDD0;
  v12 = objc_msgSend(a1, sel_isOn);
  v1 = v11 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingSeatOccupancy;
  swift_beginAccess();
  v20 = v12;
  if (qword_2540B9100 != -1)
LABEL_7:
    swift_once();
  v13 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  *(_QWORD *)&v19[-16] = &v20;
  *(_QWORD *)&v19[-8] = v1;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v10, v3);
  return swift_endAccess();
}

void sub_22730AE40(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void *v65;
  id v66;
  void (*v67)(char *, uint64_t);
  void *v68;
  id v69;
  double v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  id v107;
  _QWORD v108[36];
  uint64_t v109;
  double v110;
  unsigned __int8 v111;

  v2 = sub_22758CA44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758CAD4();
  v104 = *(_QWORD *)(v10 - 8);
  v105 = v10;
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22758DF20();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19, v20, v21, v22);
  v106 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (void *)sub_22758CA74();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v24, 1);

  v25 = (void *)sub_22758CA74();
  v107 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v25);

  if (v107)
  {
    v26 = sub_22758CA98();
    if (v26)
    {
      if (v26 != 1)
      {
LABEL_29:

        return;
      }
      v103 = 1;
    }
    else
    {
      v103 = 0;
    }
    v102 = v17;
    v100 = v3;
    if (qword_2540B87B8 != -1)
      swift_once();
    v99 = v9;
    v101 = v2;
    v27 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
    swift_beginAccess();
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(_BYTE *)(v27 + 16);
    v108[0] = *(_QWORD *)v27;
    v108[1] = v28;
    LOBYTE(v108[2]) = v29;
    v30 = qword_2540B9100;
    v31 = swift_bridgeObjectRetain();
    if (v30 != -1)
      v31 = swift_once();
    MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
    *(&v95 - 2) = (uint64_t)v108;
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if (v103 != v111)
    {
      v36 = sub_22758CAC8();
      if ((unint64_t)(v36 - 1) >= 3 && !v36)
      {
        v37 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        v111 = v103;
        v38 = v106;
        v39 = sub_22758DF14();
        MEMORY[0x24BDAC7A8](v39, v40, v41, v42, v43);
        *(&v95 - 2) = (uint64_t)&v111;
        *(&v95 - 1) = v37;
        sub_22758E7A8();
        v98 = *(void (**)(char *, uint64_t))(v18 + 8);
        v98(v38, v102);
        swift_endAccess();
        v44 = (_QWORD *)qword_2540BCDD0;
        v45 = swift_beginAccess();
        v46 = v44[10];
        v47 = v44[11];
        v48 = v44[12];
        v108[0] = v44[9];
        v108[1] = v46;
        v108[2] = v47;
        v108[3] = v48;
        MEMORY[0x24BDAC7A8](v45, v49, v50, v51, v52);
        *(&v95 - 2) = (uint64_t)v108;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v109)
        {
          v97 = v109;
          v96 = v108[35];
          v53 = (_QWORD *)qword_2540BCDD0;
          v54 = swift_beginAccess();
          v55 = v53[6];
          v56 = v53[7];
          v108[0] = v53[5];
          v108[1] = v55;
          v108[2] = v56;
          MEMORY[0x24BDAC7A8](v54, v57, v58, v59, v60);
          *(&v95 - 2) = (uint64_t)v108;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
          sub_22758E7B4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61 = v110;
          v62 = v105;
          if (*(_QWORD *)(*(_QWORD *)&v110 + 16) && (v63 = sub_2274DE434(v96, v97), (v64 & 1) != 0))
          {
            memcpy(v108, (const void *)(*(_QWORD *)(*(_QWORD *)&v61 + 56) + 280 * v63), 0x118uLL);
            sub_22730B838((uint64_t)v108);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22730B91C((uint64_t)v108);
            if (v103 != BYTE3(v108[7]))
            {
              swift_getKeyPath();
              swift_getKeyPath();
              LOBYTE(v110) = 1;
              swift_retain();
              sub_22758D1A0();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          v62 = v105;
        }
        MEMORY[0x2276B0A98](0, 0);
        v65 = (void *)sub_22758CA74();
        v66 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v65);

        if (v66)
        {
          objc_msgSend(v66, sel_setAccessoryType_, 0);

        }
        v67 = *(void (**)(char *, uint64_t))(v104 + 8);
        v67(v16, v62);
        MEMORY[0x2276B0A98](1, 0);
        v68 = (void *)sub_22758CA74();
        v69 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v68);

        if (v69)
        {
          objc_msgSend(v69, sel_setAccessoryType_, 0);

        }
        v67(v16, v62);
        objc_msgSend(v107, sel_setAccessoryType_, 3);
        if (v103)
          v70 = 6.0;
        else
          v70 = 2.0;
        v71 = qword_2540BCDD0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionPitchThreshold;
        swift_beginAccess();
        v110 = v70;
        v72 = v106;
        v73 = sub_22758DF14();
        MEMORY[0x24BDAC7A8](v73, v74, v75, v76, v77);
        *(&v95 - 2) = (uint64_t)&v110;
        *(&v95 - 1) = v71;
        sub_22758E7A8();
        v78 = v102;
        v79 = v98;
        v98(v72, v102);
        swift_endAccess();
        v80 = qword_2540BCDD0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
        swift_beginAccess();
        v110 = v70;
        v81 = sub_22758DF14();
        MEMORY[0x24BDAC7A8](v81, v82, v83, v84, v85);
        *(&v95 - 2) = (uint64_t)&v110;
        *(&v95 - 1) = v80;
        sub_22758E7A8();
        v79(v72, v78);
        swift_endAccess();
        v86 = qword_2540BCDD0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectUnderstandingPitchThreshold;
        swift_beginAccess();
        v110 = v70;
        v87 = sub_22758DF14();
        MEMORY[0x24BDAC7A8](v87, v88, v89, v90, v91);
        *(&v95 - 2) = (uint64_t)&v110;
        *(&v95 - 1) = v86;
        sub_22758E7A8();
        v79(v72, v78);
        swift_endAccess();
        objc_msgSend(a1, sel_beginUpdates);
        v108[0] = &unk_24EF98230;
        sub_2273096F0((unint64_t *)&qword_2558D5E20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF428], MEMORY[0x24BDCF468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D50B0);
        sub_22730BB7C((unint64_t *)&qword_2558D5E30, (uint64_t *)&unk_2558D50B0, MEMORY[0x24BEE12C8]);
        v92 = v99;
        v93 = v101;
        sub_22758EACC();
        v94 = (void *)sub_22758CA38();
        (*(void (**)(char *, uint64_t))(v100 + 8))(v92, v93);
        objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v94, 100);

        objc_msgSend(a1, sel_endUpdates);
      }
    }
    goto LABEL_29;
  }
}

uint64_t sub_22730B780@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_22752B500(*(_QWORD *)(v1 + 16), a1);
}

void sub_22730B798()
{
  sub_227467574();
}

uint64_t sub_22730B7B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_22738D388(*(uint64_t **)(v1 + 16), a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2276B3C60]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_22730B808()
{
  sub_227467558();
}

uint64_t sub_22730B820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2273FAD18(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_22730B838(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22730B91C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_22730BA08()
{
  sub_2274DAEC4();
}

uint64_t sub_22730BA20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_227373AD0(*(uint64_t **)(v1 + 16), a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_22730BA50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2273D912C(*(_QWORD *)(v1 + 16), a1);
}

void sub_22730BA68(double *a1@<X8>)
{
  uint64_t v1;

  sub_2274C72C8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22730BA80(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_22730BAB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540BA0D0;
  if (!qword_2540BA0D0)
  {
    v1 = sub_22730BA80(255, (unint64_t *)&unk_2540BA0E0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDD0408], v1);
    atomic_store(result, (unint64_t *)&qword_2540BA0D0);
  }
  return result;
}

uint64_t sub_22730BB10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA0C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22730BB50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22730BB74(uint64_t a1)
{
  uint64_t v1;

  sub_227306FB8(a1, v1);
}

uint64_t sub_22730BB7C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2276B3C78](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for AXMFeatureDescriptionOption(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D50E8);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D50F0);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D50F8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5100);
}

void type metadata accessor for VNRecognizedPointKey(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5108);
}

void type metadata accessor for JointName(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5110);
}

void type metadata accessor for OU3DObjectType(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5118);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_22730BC5C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22730BC7C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CMVideoDimensions(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2558D5120);
}

void type metadata accessor for MatteType(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2540B9FA8);
}

void type metadata accessor for AVError(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5130);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2540B9F68);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2540B9F90);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5138);
}

void type metadata accessor for AVVideoCodecType(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5140);
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5148);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5150);
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5158);
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5160);
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2558D5168);
}

void type metadata accessor for DeviceType(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2540B9F30);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_22730C58C(a1, &qword_2558D5178);
}

uint64_t sub_22730BDBC()
{
  return sub_2273096F0(&qword_2558D5180, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_227594E84);
}

uint64_t sub_22730BDE8()
{
  return sub_2273096F0((unint64_t *)&unk_2558D5188, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_227594E5C);
}

uint64_t sub_22730BE14()
{
  return sub_2273096F0((unint64_t *)&unk_2540B9F20, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_227594EEC);
}

uint64_t sub_22730BE40()
{
  return sub_2273096F0(&qword_2558D5198, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_227594FC8);
}

uint64_t sub_22730BE6C()
{
  return sub_2273096F0(&qword_2558D51A0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_227594F9C);
}

uint64_t sub_22730BE98()
{
  return sub_2273096F0(&qword_2558D51A8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_227595180);
}

uint64_t sub_22730BEC4()
{
  return sub_2273096F0(&qword_2558D51B0, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_227595154);
}

uint64_t sub_22730BEF0()
{
  return sub_2273096F0(&qword_2558D51B8, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_227595290);
}

uint64_t sub_22730BF1C()
{
  return sub_2273096F0(&qword_2558D51C0, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_227595268);
}

uint64_t sub_22730BF48()
{
  return sub_2273096F0(&qword_2558D51C8, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_2275952F8);
}

uint64_t sub_22730BF74()
{
  return sub_2273096F0(&qword_2558D51D0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2275953D0);
}

uint64_t sub_22730BFA0()
{
  return sub_2273096F0(&qword_2558D51D8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_2275953A8);
}

uint64_t sub_22730BFCC()
{
  return sub_2273096F0(&qword_2558D51E0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_227595438);
}

uint64_t sub_22730BFF8()
{
  return sub_2273096F0(&qword_2558D51E8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_227595514);
}

uint64_t sub_22730C024()
{
  return sub_2273096F0(&qword_2558D51F0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_2275954E8);
}

uint64_t sub_22730C050()
{
  return sub_2273096F0(&qword_2558D51F8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_227595628);
}

uint64_t sub_22730C07C()
{
  return sub_2273096F0((unint64_t *)&unk_2558D5200, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_2275955FC);
}

uint64_t sub_22730C0A8()
{
  return sub_2273096F0((unint64_t *)&unk_2540B9F58, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_227595698);
}

uint64_t sub_22730C0D4()
{
  return sub_2273096F0(&qword_2558D5210, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_227595754);
}

uint64_t sub_22730C100()
{
  return sub_2273096F0(&qword_2558D5218, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_22759577C);
}

uint64_t sub_22730C12C()
{
  return sub_2273096F0(&qword_2558D5220, (uint64_t (*)(uint64_t))type metadata accessor for MatteType, (uint64_t)&unk_227595894);
}

uint64_t sub_22730C158()
{
  return sub_2273096F0(&qword_2558D5228, (uint64_t (*)(uint64_t))type metadata accessor for MatteType, (uint64_t)&unk_22759586C);
}

uint64_t sub_22730C184()
{
  return sub_2273096F0(&qword_2558D5230, (uint64_t (*)(uint64_t))type metadata accessor for MatteType, (uint64_t)&unk_2275958FC);
}

uint64_t sub_22730C1B0()
{
  return sub_2273096F0(&qword_2558D5238, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_2275959D4);
}

uint64_t sub_22730C1DC()
{
  return sub_2273096F0(&qword_2558D5240, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_2275959AC);
}

uint64_t sub_22730C208()
{
  return sub_2273096F0(&qword_2558D5248, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227595AD8);
}

uint64_t sub_22730C234()
{
  return sub_2273096F0(&qword_2558D5250, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227595AAC);
}

uint64_t sub_22730C260()
{
  return sub_2273096F0(&qword_2558D5258, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227595BEC);
}

uint64_t sub_22730C28C()
{
  return sub_2273096F0(&qword_2558D5260, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227595BC0);
}

uint64_t sub_22730C2B8()
{
  return sub_2273096F0(&qword_2558D5268, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_227595D00);
}

uint64_t sub_22730C2E4()
{
  return sub_2273096F0(&qword_2558D5270, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_227595CD4);
}

uint64_t sub_22730C310()
{
  return sub_2273096F0(&qword_2558D5278, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_227595E14);
}

uint64_t sub_22730C33C()
{
  return sub_2273096F0(&qword_2558D5280, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_227595DE8);
}

uint64_t sub_22730C368()
{
  return sub_2273096F0(&qword_2558D5288, (uint64_t (*)(uint64_t))type metadata accessor for AXMFeatureDescriptionOption, (uint64_t)&unk_227595F40);
}

uint64_t sub_22730C394()
{
  return sub_2273096F0(&qword_2558D5290, (uint64_t (*)(uint64_t))type metadata accessor for AXMFeatureDescriptionOption, (uint64_t)&unk_227595F14);
}

uint64_t sub_22730C3C0()
{
  return sub_2273096F0(&qword_2558D5298, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_227595A3C);
}

uint64_t sub_22730C3EC()
{
  return sub_2273096F0(&qword_2558D52A0, (uint64_t (*)(uint64_t))type metadata accessor for AXMFeatureDescriptionOption, (uint64_t)&unk_227595FB0);
}

uint64_t sub_22730C418()
{
  return sub_2273096F0(&qword_2558D52A8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_227595E84);
}

uint64_t sub_22730C444()
{
  return sub_2273096F0(&qword_2558D52B0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_227595D70);
}

uint64_t sub_22730C470()
{
  return sub_2273096F0(&qword_2558D52B8, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_227595C5C);
}

uint64_t sub_22730C49C()
{
  return sub_2273096F0(&qword_2558D52C0, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227595B48);
}

uint64_t sub_22730C4C8()
{
  return sub_2273096F0(&qword_2558D52C8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_22759582C);
}

uint64_t sub_22730C4F4()
{
  return sub_2273096F0(&qword_2558D52D0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275957FC);
}

uint64_t sub_22730C520()
{
  return sub_2273096F0(&qword_2558D52D8, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275957BC);
}

uint64_t sub_22730C54C()
{
  return sub_2273096F0(&qword_2558D52E0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_22759625C);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_22730C58C(a1, (unint64_t *)&unk_2558D5410);
}

void sub_22730C58C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_22730C5D0()
{
  return sub_2273096F0(&qword_2558D52E8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227596224);
}

unint64_t sub_22730C600()
{
  unint64_t result;

  result = qword_2558D52F0;
  if (!qword_2558D52F0)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2558D52F0);
  }
  return result;
}

uint64_t sub_22730C644()
{
  return sub_2273096F0(&qword_2558D52F8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227596294);
}

uint64_t sub_22730C670()
{
  return sub_2273096F0((unint64_t *)&unk_2558D5300, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_2275961BC);
}

uint64_t sub_22730C69C()
{
  return sub_2273096F0(&qword_2540B9F88, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_227595584);
}

uint64_t sub_22730C6C8()
{
  return sub_2273096F0(&qword_2558D5310, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_2275951F0);
}

uint64_t sub_22730C6F4()
{
  return sub_2273096F0((unint64_t *)&qword_2558D5318, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_227596370);
}

uint64_t sub_22730C720()
{
  return sub_2273096F0(&qword_2558D5320, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_227595128);
}

uint64_t sub_22730C74C()
{
  return sub_2273096F0(&qword_2558D5328, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_227595038);
}

uint64_t sub_22730C778@<X0>(uint64_t *a1@<X8>)
{
  return sub_22730BA20(a1);
}

uint64_t sub_22730C78C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22730B780(a1);
}

void sub_22730C7BC()
{
  sub_22730B808();
}

uint64_t sub_22730C7DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[67] = a2;
  v2[66] = a1;
  v2[68] = type metadata accessor for MAGOutputEvent(0);
  v2[69] = swift_task_alloc();
  v3 = sub_22758DF20();
  v2[70] = v3;
  v2[71] = *(_QWORD *)(v3 - 8);
  v2[72] = swift_task_alloc();
  v4 = sub_22758DF68();
  v2[73] = v4;
  v2[74] = *(_QWORD *)(v4 - 8);
  v2[75] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  v2[76] = swift_task_alloc();
  v5 = type metadata accessor for SpatialTextBlock();
  v2[77] = v5;
  v2[78] = *(_QWORD *)(v5 - 8);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v6 = type metadata accessor for DetectedTextBlock();
  v2[81] = v6;
  v2[82] = *(_QWORD *)(v6 - 8);
  v2[83] = swift_task_alloc();
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  v2[86] = type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  v2[87] = swift_task_alloc();
  sub_22758E49C();
  v2[88] = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_22730C984()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = *(_QWORD *)(v0 + 536);
  swift_release();
  swift_beginAccess();
  if (MEMORY[0x2276B3E34](v1 + 16))
  {
    sub_22730DEEC(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 696), type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType);
    v2 = (char *)&loc_22730CA9C + *((int *)qword_22730D9C8 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_22730D9EC()
{
  unint64_t result;

  result = qword_2540B9EF0;
  if (!qword_2540B9EF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540B9EF0);
  }
  return result;
}

void sub_22730DA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;

  v5 = sub_2274E51C0();
  v6 = sub_2274E5324();
  sub_2274E2410(a2, a3, v5, v6);

}

void sub_22730DA88(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  __int128 v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float v28[6];
  id v29;

  v2 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTipScene;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTipScene))
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8280]), sel_init);
    v4 = objc_msgSend((id)objc_opt_self(), sel_sphereWithRadius_, 0.005);
    v5 = objc_msgSend(v4, sel_firstMaterial);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, sel_diffuse);

      v8 = objc_msgSend((id)objc_opt_self(), sel_redColor);
      objc_msgSend(v7, sel_setContents_, v8);

    }
    v9 = objc_msgSend((id)objc_opt_self(), sel_nodeWithGeometry_, v4);
    objc_msgSend(v9, sel_setHidden_, 1);
    v10 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip) = v9;
    v11 = v9;

    v12 = objc_msgSend(v3, sel_rootNode);
    objc_msgSend(v12, sel_addChildNode_, v11);

    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView), sel_setScene_, v3);
    v13 = *(void **)(a1 + v2);
    *(_QWORD *)(a1 + v2) = v3;

  }
  sub_22758CFC0();
  v15 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_fingerTip);
  if (v15)
  {
    v16 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
    if (v16)
    {
      *(_OWORD *)v28 = v14;
      v29 = v15;
      v17 = objc_msgSend(v16, sel_session);
      v18 = objc_msgSend(v17, sel_currentFrame);

      if (v18)
      {
        v19 = objc_msgSend(v18, sel_camera);

        objc_msgSend(v19, sel_transform);
        v24 = v20;
        v25 = v21;
        v26 = v23;
        v27 = v22;

        objc_msgSend(v29, sel_setSimdWorldPosition_, *(double *)vaddq_f32(v26, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v24, v28[0] / 100.0), v25, v28[1] / 100.0), v27, v28[2] / 100.0)).i64);
        objc_msgSend(v29, sel_setHidden_, 0);
      }

    }
  }
}

uint64_t sub_22730DD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22758CFCC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_22730DE10()
{
  uint64_t v0;

  sub_22758CFCC();
  sub_22730DA88(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_22730DE58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540B9C50;
  if (!qword_2540B9C50)
  {
    v1 = sub_22758DF20();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2540B9C50);
  }
  return result;
}

unint64_t sub_22730DEA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540B9E00;
  if (!qword_2540B9E00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2540B9DF0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540B9E00);
  }
  return result;
}

uint64_t sub_22730DEEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22730DF30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_227504FCC(*(uint64_t **)(v1 + 16), a1);
}

void sub_22730DF48()
{
  sub_22741E3EC();
}

uint64_t sub_22730DF60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22730DF8C()
{
  uint64_t *v0;

  sub_22730DA28(v0[2], v0[3], v0[4]);
}

void sub_22730DF98(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_22746758C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22730DFB0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22730DFEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22730E030(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22730E070(uint64_t a1@<X8>)
{
  sub_22730DF98(a1);
}

uint64_t sub_22730E08C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22730E094()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22730E10C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_22730E1CC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_22730E210(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_22730E280(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_22730E2F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_22730E348(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22730E3B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22730E484 + 4 * byte_227596410[(v9 - 1)]))();
}

void sub_22730E4F4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for DefaultStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultStorage);
}

uint64_t sub_22730E6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v0 = sub_22758E790();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22758DF68();
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v13 = sub_22758E73C();
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  sub_22730D9EC();
  sub_22758E730();
  sub_22758DF44();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v7, *MEMORY[0x24BEE5750], v0);
  result = sub_22758E7D8();
  qword_2540B90F0 = result;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2276B3BDC](a1, v6, a5);
}

uint64_t sub_22730E868()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[9] = v0;
  v2 = sub_22758DF20();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v3 = sub_22758DF68();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v4 = type metadata accessor for MAGOutputEngine.Event(0);
  v1[16] = v4;
  v1[17] = *(_QWORD *)(v4 - 8);
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5650);
  v1[19] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5658);
  v1[20] = v5;
  v1[21] = *(_QWORD *)(v5 - 8);
  v1[22] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D5660);
  v1[23] = v6;
  v1[24] = *(_QWORD *)(v6 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = sub_22758E49C();
  v1[27] = sub_22758E490();
  v1[28] = sub_22758E460();
  v1[29] = v7;
  return swift_task_switch();
}

uint64_t sub_22730E9CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[20];
  sub_22758CD5C();
  sub_22758E4F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[30] = sub_22758E490();
  v4 = (_QWORD *)swift_task_alloc();
  v0[31] = v4;
  *v4 = v0;
  v4[1] = sub_22730EAA4;
  return sub_22758E4FC();
}

uint64_t sub_22730EAA4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22730EAF8()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 48))(v1, 1, *(_QWORD *)(v0 + 128)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_2273123B0(v1, *(_QWORD *)(v0 + 144));
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v4 = *(uint64_t **)(v0 + 144);
    if (EnumCaseMultiPayload == 2)
    {
      v5 = *(_QWORD *)(v0 + 120);
      v6 = *(_QWORD *)(v0 + 96);
      v17 = *(_QWORD *)(v0 + 112);
      v18 = *(_QWORD *)(v0 + 104);
      v7 = *(_QWORD *)(v0 + 80);
      v16 = *(_QWORD *)(v0 + 88);
      v8 = *(void **)(v0 + 72);
      v9 = *v4;
      v10 = v4[1];
      sub_22730D9EC();
      v11 = (void *)sub_22758E79C();
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = v8;
      v12[3] = v9;
      v12[4] = v10;
      *(_QWORD *)(v0 + 48) = sub_2273123F8;
      *(_QWORD *)(v0 + 56) = v12;
      *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_227367AE4;
      *(_QWORD *)(v0 + 40) = &block_descriptor_27;
      v13 = _Block_copy((const void *)(v0 + 16));
      v14 = v8;
      sub_22758DF44();
      *(_QWORD *)(v0 + 64) = MEMORY[0x24BEE4AF8];
      sub_22730DE58();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
      sub_22730DEA0();
      sub_22758EACC();
      MEMORY[0x2276B27CC](0, v5, v6, v13);
      _Block_release(v13);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v6, v7);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
      swift_release();
    }
    else
    {
      sub_22730DFB0((uint64_t)v4, type metadata accessor for MAGOutputEngine.Event);
    }
    *(_QWORD *)(v0 + 240) = sub_22758E490();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v15;
    *v15 = v0;
    v15[1] = sub_22730EAA4;
    return sub_22758E4FC();
  }
}

void sub_22730EDA8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeView);
  if (v1)
  {
    v2 = *(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport17DetectionModeView_detectionLabel);
    v3 = (id)sub_22758E1B4();
    objc_msgSend(v2, sel_setText_, v3);

  }
}

uint64_t sub_22730EE44(void *a1, _BYTE *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  id v87;
  id v88;
  void *v89;
  uint64_t v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  _QWORD v101[2];
  char v102;
  _QWORD aBlock[6];
  __int16 v104;

  v5 = v4;
  v104 = 0;
  sub_22730FAD4(a1, (char *)&v104 + 1, &v104);
  if (*(_BYTE *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService)
                + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_detectionModeAutomationRunning) == 1)
  {
    result = 1;
    *a2 = 1;
    return result;
  }
  if (HIBYTE(v104) == 1)
  {
    v10 = v104;
    *a2 = v104;
    if (v10 != 1)
      goto LABEL_25;
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if ((aBlock[0] & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_22758D194(),
          swift_release(),
          swift_release(),
          LOBYTE(aBlock[0]) == 1))
    {
      swift_bridgeObjectRelease();
      type metadata accessor for MAGUtilities();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v12 = (void *)objc_opt_self();
      v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      v14 = (void *)sub_22758E1B4();
      v15 = (void *)sub_22758E1B4();
      v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

      v17 = sub_22758E1E4();
      v19 = v18;

      swift_bridgeObjectRelease();
      *a4 = v17;
      a4[1] = v19;
      v20 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      v21 = (void *)sub_22758E1B4();
      v22 = (void *)sub_22758E1B4();
      v23 = objc_msgSend(v20, sel_localizedStringForKey_value_table_, v21, 0, v22);

      v24 = sub_22758E1E4();
      v26 = v25;

      *a3 = v24;
      a3[1] = v26;
      v27 = qword_2540BCDD0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFlashlightEnabled;
      swift_beginAccess();
      v28 = *(_QWORD *)(v27 + 8);
      v29 = *(_BYTE *)(v27 + 16);
      v101[0] = *(_QWORD *)v27;
      v101[1] = v28;
      v102 = v29;
      v30 = qword_2540B9100;
      v31 = swift_bridgeObjectRetain();
      if (v30 != -1)
        v31 = swift_once();
      MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      if (v98 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        if ((v101[0] & 1) != 0)
          goto LABEL_15;
      }
      v36 = qword_2540BCDD0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
      v37 = swift_beginAccess();
      v38 = *(_QWORD *)(v36 + 8);
      v39 = *(_BYTE *)(v36 + 16);
      v98 = *(_QWORD *)v36;
      v99 = v38;
      v100 = v39;
      MEMORY[0x24BDAC7A8](v37, v40, v41, v42, v43);
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      if (v95 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        if (v98 == 1)
        {
LABEL_15:
          if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) & 1) == 0)
          {
            v44 = *a4;
            if (a4[1])
            {
              swift_bridgeObjectRetain();
              v45 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
              v46 = (void *)sub_22758E1B4();
              v47 = (void *)sub_22758E1B4();
              v48 = objc_msgSend(v45, sel_localizedStringForKey_value_table_, v46, 0, v47);

              v49 = sub_22758E1E4();
              v51 = v50;

              v98 = v49;
              v99 = v51;
              swift_bridgeObjectRetain();
              v96 = sub_22758E328();
              v97 = v52;
              sub_22758E2A4();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              v44 = v96;
              v53 = v97;
            }
            else
            {
              v53 = 0;
            }
            *a4 = v44;
            a4[1] = v53;
            sub_22730FBF0();
          }
        }
      }
    }
    else
    {
LABEL_25:
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if ((aBlock[0] & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for MAGUtilities();
        v70 = swift_getObjCClassFromMetadata();
        v71 = (void *)objc_opt_self();
        v72 = objc_msgSend(v71, sel_bundleForClass_, v70);
        v73 = (void *)sub_22758E1B4();
        v74 = (void *)sub_22758E1B4();
        v75 = objc_msgSend(v72, sel_localizedStringForKey_value_table_, v73, 0, v74);

        v76 = sub_22758E1E4();
        v78 = v77;

        swift_bridgeObjectRelease();
        *a4 = v76;
        a4[1] = v78;
        v79 = objc_msgSend(v71, sel_bundleForClass_, v70);
        v80 = (void *)sub_22758E1B4();
        v81 = (void *)sub_22758E1B4();
        v82 = objc_msgSend(v79, sel_localizedStringForKey_value_table_, v80, 0, v81);

        v83 = sub_22758E1E4();
        v85 = v84;

        result = 0;
        *a3 = v83;
        a3[1] = v85;
        return result;
      }
    }
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if ((aBlock[0] & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_22758D194(),
          swift_release(),
          swift_release(),
          LOBYTE(aBlock[0]) == 1))
    {
      *(_BYTE *)(v4 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeTooDarkToDetect) = 0;
    }
    LOBYTE(v101[0]) = 0;
    LOBYTE(v98) = 0;
    sub_22731006C((char *)v101, &v98);
    if (LOBYTE(v101[0]) == 1)
    {
      type metadata accessor for MAGUtilities();
      v54 = swift_getObjCClassFromMetadata();
      v55 = (void *)objc_opt_self();
      v56 = objc_msgSend(v55, sel_bundleForClass_, v54);
      v57 = (void *)sub_22758E1B4();
      v58 = (void *)sub_22758E1B4();
      v59 = objc_msgSend(v56, sel_localizedStringForKey_value_table_, v57, 0, v58);

      v60 = sub_22758E1E4();
      v62 = v61;

      swift_bridgeObjectRelease();
      *a4 = v60;
      a4[1] = v62;
      v63 = objc_msgSend(v55, sel_bundleForClass_, v54);
      v64 = (void *)sub_22758E1B4();
      v65 = (void *)sub_22758E1B4();
      v66 = objc_msgSend(v63, sel_localizedStringForKey_value_table_, v64, 0, v65);

      v67 = sub_22758E1E4();
      v69 = v68;

      result = 0;
      *a3 = v67;
      a3[1] = v69;
      *a2 = v98;
    }
    else
    {
      v86 = v104 | v98;
      *a2 = (v104 | v98) & 1;
      swift_bridgeObjectRelease();
      *a4 = 0;
      a4[1] = 0;
      *a3 = 0;
      a3[1] = 0;
      if ((v86 & 1) != 0)
      {
        v87 = sub_2274E51C0();
        v88 = sub_2274E5324();
        *(_BYTE *)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_isInformationLabelVisible) = 0;
        v89 = (void *)objc_opt_self();
        v90 = swift_allocObject();
        *(_QWORD *)(v90 + 16) = v87;
        *(_QWORD *)(v90 + 24) = v88;
        aBlock[4] = sub_2273124C4;
        aBlock[5] = v90;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_227367AE4;
        aBlock[3] = &block_descriptor_45;
        v91 = _Block_copy(aBlock);
        v92 = v87;
        v93 = v88;
        swift_release();
        v94 = objc_msgSend(v89, sel_runningPropertyAnimatorWithDuration_delay_options_animations_completion_, 0x20000, v91, 0, 0.2, 0.0);
        _Block_release(v91);

      }
      return 1;
    }
  }
  return result;
}

void sub_22730FAD4(void *a1, char *a2, _BYTE *a3)
{
  uint64_t v3;
  double v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  char v15;

  *a3 = 0;
  objc_msgSend(a1, sel_estimatedLuminance);
  if (v7 == 0.0)
  {
    v8 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(a1, sel_capturedImage);
      objc_msgSend(v9, sel_computeLuminanceFromPixelBuffer_, v10);
      v12 = v11;

    }
    else
    {
      v12 = 0.0;
    }
    v13 = v12 / 96.0;
  }
  else
  {
    objc_msgSend(a1, sel_estimatedLuminance);
  }
  if (v13 > 0.0 && v13 < 0.3)
  {
    v15 = 1;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect) & 1) != 0)
      goto LABEL_13;
    goto LABEL_12;
  }
  v15 = 0;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect))
  {
LABEL_12:
    *(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooDarkToDetect) = v15;
    *a3 = 1;
  }
LABEL_13:
  *a2 = v15;
}

uint64_t sub_22730FBF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (**v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  char *v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t result;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  void (**v57)(char *, uint64_t);
  _QWORD v58[2];
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (**v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t aBlock;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;

  v1 = sub_22758DF08();
  v60 = *(_QWORD *)(v1 - 8);
  v61 = v1;
  MEMORY[0x24BDAC7A8](v1, v2, v3, v4, v5);
  v59 = (_QWORD *)((char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22758DF20();
  v68 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  v70 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22758DF68();
  v66 = *(_QWORD *)(v13 - 8);
  v67 = (char *)v13;
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22758DF80();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22, v23, v24, v25);
  v27 = (char *)v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v29, v30, v31, v32);
  v34 = (char *)v58 - v33;
  v69 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeFlashlightDispatchItem;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeFlashlightDispatchItem])
  {
    swift_retain();
    sub_22758DFA4();
    swift_release();
  }
  v58[1] = sub_22730D9EC();
  v64 = sub_22758E79C();
  sub_22758DF74();
  MEMORY[0x2276B1FE0](v27, 0.5);
  v35 = *(void (***)(char *, uint64_t))(v21 + 8);
  ((void (*)(char *, uint64_t))v35)(v27, v20);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v0;
  v76 = sub_2273121FC;
  v77 = v36;
  aBlock = MEMORY[0x24BDAC760];
  v73 = 1107296256;
  v74 = sub_227367AE4;
  v75 = &block_descriptor_1;
  v37 = _Block_copy(&aBlock);
  v65 = v20;
  v58[0] = v27;
  v38 = v37;
  v62 = v0;
  swift_release();
  sub_22758DF44();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_22730DE58();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  v63 = v0;
  sub_22730DEA0();
  v39 = v70;
  sub_22758EACC();
  v40 = (void *)v64;
  MEMORY[0x2276B2754](v34, v19, v39, v38);
  v41 = v38;
  v42 = v65;
  _Block_release(v41);

  v68[1](v39, v7);
  (*(void (**)(char *, char *))(v66 + 8))(v19, v67);
  v67 = v34;
  v68 = v35;
  ((void (*)(char *, uint64_t))v35)(v34, v42);
  v43 = swift_allocObject();
  v44 = v62;
  *(_QWORD *)(v43 + 16) = v62;
  v76 = sub_22731234C;
  v77 = v43;
  aBlock = MEMORY[0x24BDAC760];
  v73 = 1107296256;
  v74 = sub_227367AE4;
  v75 = &block_descriptor_6_0;
  _Block_copy(&aBlock);
  v71 = MEMORY[0x24BEE4AF8];
  v45 = v44;
  sub_22758EACC();
  sub_22758DFB0();
  swift_allocObject();
  v46 = sub_22758DF98();
  swift_release();
  v47 = v69;
  v48 = v63;
  *(_QWORD *)&v63[v69] = v46;
  v49 = v48;
  result = swift_release();
  if (*(_QWORD *)&v49[v47])
  {
    swift_retain();
    v51 = (void *)sub_22758E79C();
    v52 = v58[0];
    sub_22758DF74();
    v54 = v59;
    v53 = v60;
    *v59 = 10;
    v55 = v61;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v54, *MEMORY[0x24BEE5420], v61);
    v56 = v67;
    MEMORY[0x2276B1FD4](v52, v54);
    (*(void (**)(_QWORD *, uint64_t))(v53 + 8))(v54, v55);
    v57 = v68;
    ((void (*)(uint64_t, uint64_t))v68)(v52, v42);
    sub_22758E754();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v57)(v56, v42);
  }
  return result;
}

void sub_22731006C(char *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;

  v3 = v2;
  v6 = sub_22758C930();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8, v9, v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a2 = 0;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager);
  if (!v14)
    goto LABEL_11;
  v15 = *(void **)(v14 + 16);
  swift_retain();
  v16 = objc_msgSend(v15, sel_deviceMotion);
  if (!v16
    || (v17 = v16,
        objc_msgSend(v16, sel_rotationRate),
        v19 = v18,
        v21 = v20,
        v23 = v22,
        v17,
        sqrt(v23 * v23 + v19 * v19 + v21 * v21) <= 5.0))
  {
    v26 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) == 1)
    {
      v27 = v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_tooFastLastDate;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v27, v6);
      sub_22758C8DC();
      v29 = v28;
      swift_release();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v25 = 1;
      if (v29 > -1.0)
        goto LABEL_12;
      *(_BYTE *)(v3 + v26) = 0;
      *a2 = 1;
    }
    else
    {
      swift_release();
    }
LABEL_11:
    v25 = 0;
    goto LABEL_12;
  }
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) & 1) == 0)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_wasTooFastToDetect) = 1;
    *a2 = 1;
  }
  sub_22758C924();
  v24 = v3 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_tooFastLastDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v24, v13, v6);
  swift_endAccess();
  swift_release();
  v25 = 1;
LABEL_12:
  *a1 = v25;
}

void sub_227310298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  void *v5;
  void *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t ObjCClassFromMetadata;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[4];
  _QWORD aBlock[6];

  v6 = v5;
  v72 = a3;
  v73 = a4;
  v71 = type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v71, v10, v11, v12, v13);
  v70 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22758DF20();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17, v18, v19, v20);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22758DF68();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25, v26, v27, v28);
  v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (v73)
    {
      sub_22730D9EC();
      v69 = a5;
      swift_bridgeObjectRetain();
      v68 = sub_22758E79C();
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = v6;
      v31[3] = a1;
      v31[4] = a2;
      aBlock[4] = sub_227312434;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227367AE4;
      aBlock[3] = &block_descriptor_33;
      v32 = _Block_copy(aBlock);
      v6;
      swift_release();
      sub_22758DF44();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_22730DE58();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
      sub_22730DEA0();
      sub_22758EACC();
      v33 = (void *)v68;
      MEMORY[0x2276B27CC](0, v30, v22, v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
      if ((v69 & 1) != 0)
      {
        if (qword_2540B87B8 != -1)
          swift_once();
        v34 = (_QWORD *)(qword_2540BCDD0
                       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPauseDetectionModeFeedbacks);
        swift_beginAccess();
        v35 = v34[1];
        v36 = v34[2];
        v74[0] = *v34;
        v74[1] = v35;
        v74[2] = v36;
        v37 = qword_2540B9100;
        swift_bridgeObjectRetain();
        v38 = swift_bridgeObjectRetain();
        if (v37 != -1)
          v38 = swift_once();
        MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
        *(&v67 - 2) = (uint64_t)v74;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D90);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = sub_227367600(0, v74[3]);
        swift_bridgeObjectRelease();
        if (v43)
        {
          type metadata accessor for MAGUtilities();
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          v45 = (void *)objc_opt_self();
          v46 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
          v47 = (void *)sub_22758E1B4();
          v48 = (void *)sub_22758E1B4();
          v49 = objc_msgSend(v46, sel_localizedStringForKey_value_table_, v47, 0, v48);

          v50 = sub_22758E1E4();
          v52 = v51;

          v53 = v72;
          if (v50 == v72 && v52 == v73)
          {
            swift_bridgeObjectRelease();
LABEL_13:
            v56 = (uint64_t)v70;
            v55 = v71;
            v57 = &v70[*(int *)(v71 + 20)];
            v58 = 3;
LABEL_14:
            *v57 = v58;
            type metadata accessor for MAGOutputEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            sub_22758C978();
            *(_BYTE *)(v56 + *(int *)(v55 + 24)) = 0;
            *(_BYTE *)(v56 + *(int *)(v55 + 28)) = 0;
            sub_2273C9264(v56);
            sub_22730DFB0(v56, type metadata accessor for MAGOutputEvent);
            return;
          }
          v54 = sub_22758EE50();
          swift_bridgeObjectRelease();
          if ((v54 & 1) != 0)
            goto LABEL_13;
          v59 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
          v60 = (void *)sub_22758E1B4();
          v61 = (void *)sub_22758E1B4();
          v62 = objc_msgSend(v59, sel_localizedStringForKey_value_table_, v60, 0, v61);

          v63 = sub_22758E1E4();
          v65 = v64;

          if (v63 == v53 && v65 == v73)
          {
            swift_bridgeObjectRelease();
LABEL_20:
            v56 = (uint64_t)v70;
            v55 = v71;
            v57 = &v70[*(int *)(v71 + 20)];
            v58 = 2;
            goto LABEL_14;
          }
          v66 = sub_22758EE50();
          swift_bridgeObjectRelease();
          if ((v66 & 1) != 0)
            goto LABEL_20;
        }
      }
    }
  }
}

void sub_22731088C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  void (*v19)();
  _QWORD *v20;

  v15 = a2;
  v16 = a3;
  sub_22731236C();
  v4 = sub_22758EA6C();
  v6 = v5;
  v7 = sub_2274E51C0();
  v8 = sub_2274E5324();
  *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_isInformationLabelVisible) = 1;
  v9 = (void *)sub_22758E1B4();
  objc_msgSend(v7, sel_setText_, v9, v15, v16);

  objc_msgSend(v7, sel_sizeToFit);
  objc_msgSend(v7, sel_setNeedsLayout);
  v10 = (void *)objc_opt_self();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v4;
  v11[5] = v6;
  v19 = sub_22731248C;
  v20 = v11;
  v15 = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_227367AE4;
  v18 = &block_descriptor_39;
  v12 = _Block_copy(&v15);
  v13 = v7;
  swift_bridgeObjectRetain();
  v14 = v8;
  swift_release();

  _Block_release(v12);
  swift_bridgeObjectRelease();

}

uint64_t sub_227310A38()
{
  uint64_t v0;
  char v2;
  unsigned __int8 v3;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_usePointSpeakSpeechFeedback) == 1)
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if ((v2 & 1) != 0)
      return 1;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_useTextDetectionSpeechFeedback) != 1)
    return 0;
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  return v3;
}

void sub_227310B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  BOOL v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  float v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;

  v2 = v1;
  v65 = *MEMORY[0x24BDAC8D0];
  v4 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (v11)
  {
    v12 = v11;
    if (objc_msgSend(v11, sel_torchMode) == (id)1 && a1 == 0)
    {
      type metadata accessor for MAGUtilities();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v30 = (void *)sub_22758E1B4();
      v31 = (void *)sub_22758E1B4();
      v32 = objc_msgSend(v29, sel_localizedStringForKey_value_table_, v30, 0, v31);

      v33 = (void *)sub_22758E1E4();
      v35 = v34;

      v63 = v33;
      v64 = v35;
      sub_22731236C();
      v36 = sub_22758EA6C();
      v38 = v37;
      swift_bridgeObjectRelease();
      v39 = sub_2274E51C0();
      v40 = sub_2274E5324();
      sub_2274E2410(v36, v38, v39, v40);
      swift_bridgeObjectRelease();

      if ((sub_227310A38() & 1) != 0)
      {
        v10[v4[5]] = 5;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_22758C978();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_2273C9264((uint64_t)v10);
        sub_22730DFB0((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
    }
    else
    {
      if (objc_msgSend(v12, sel_torchMode))
        v14 = 0;
      else
        v14 = a1 == 1;
      if (v14)
      {
        type metadata accessor for MAGUtilities();
        v15 = swift_getObjCClassFromMetadata();
        v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v15);
        v17 = (void *)sub_22758E1B4();
        v18 = (void *)sub_22758E1B4();
        v19 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, 0, v18);

        v20 = (void *)sub_22758E1E4();
        v22 = v21;

        v63 = v20;
        v64 = v22;
        sub_22731236C();
        v23 = sub_22758EA6C();
        v25 = v24;
        swift_bridgeObjectRelease();
        v26 = sub_2274E51C0();
        v27 = sub_2274E5324();
        sub_2274E2410(v23, v25, v26, v27);
        swift_bridgeObjectRelease();

      }
    }
    v63 = 0;
    if (!objc_msgSend(v12, sel_lockForConfiguration_, &v63))
    {
      v50 = v63;
      v51 = (void *)sub_22758C75C();

      swift_willThrow();
      return;
    }
    v41 = v63;
    if (objc_msgSend(v12, sel_isTorchModeSupported_, a1))
    {
      objc_msgSend(v12, sel_setTorchMode_, a1);
      v42 = objc_msgSend(v12, sel_torchMode);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode) = v42;
      if (qword_2540B87B8 != -1)
        swift_once();
      if (a1 == 1)
        v43 = 1.0;
      else
        v43 = 0.0;
      swift_getKeyPath();
      swift_getKeyPath();
      *(float *)&v63 = v43;
      swift_retain();
      sub_22758D1A0();
    }
    objc_msgSend(v12, sel_unlockForConfiguration);
    v44 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
    v45 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
    if (!v45)
      goto LABEL_35;
    type metadata accessor for MAGUtilities();
    v46 = swift_getObjCClassFromMetadata();
    v47 = (void *)objc_opt_self();
    v48 = v45;
    v49 = objc_msgSend(v47, sel_bundleForClass_, v46);
    v52 = (void *)sub_22758E1B4();
    v53 = (void *)sub_22758E1B4();
    v54 = objc_msgSend(v49, sel_localizedStringForKey_value_table_, v52, 0, v53);

    sub_22758E1E4();
    v55 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v48, sel_setAccessibilityValue_, v55);

    v56 = *(void **)(v2 + v44);
    if (!v56)
      goto LABEL_35;
    v57 = v56;
    if (a1 == 1)
    {
      v58 = (void *)sub_22758E1B4();
      v59 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v58);

      if (v59)
      {
        if (qword_2540B8D70 == -1)
          goto LABEL_32;
        goto LABEL_37;
      }
    }
    else
    {
      v60 = (void *)sub_22758E1B4();
      v59 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v60);

      if (v59)
      {
        if (qword_2540B8D70 == -1)
        {
LABEL_32:
          v61 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_2540BCE30);
          v62 = objc_msgSend(v59, sel_imageByApplyingSymbolConfiguration_, v61);

LABEL_34:
          objc_msgSend(v57, sel_setImage_, v62);

LABEL_35:
          return;
        }
LABEL_37:
        swift_once();
        goto LABEL_32;
      }
    }
    v62 = 0;
    goto LABEL_34;
  }
}

void sub_227311390()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (v1)
  {
    v2 = v1;
    v8[0] = 0;
    if (objc_msgSend(v1, sel_lockForConfiguration_, v8))
    {
      v3 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode;
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode);
      v5 = v8[0];
      if (objc_msgSend(v2, sel_isTorchModeSupported_, v4))
        objc_msgSend(v2, sel_setTorchMode_, *(_QWORD *)(v0 + v3));
      objc_msgSend(v2, sel_unlockForConfiguration);

    }
    else
    {
      v6 = v8[0];
      v7 = (void *)sub_22758C75C();

      swift_willThrow();
    }
  }
}

void sub_2273114C0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  char **v14;
  id v15;
  uint64_t v16;
  void *v17;
  void **p_weak_ivar_lyt;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t ObjCClassFromMetadata;
  void *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  char v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;

  v2 = v1;
  v81 = *MEMORY[0x24BDAC8D0];
  v4 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, *MEMORY[0x24BDB1D50]);
  if (v11)
  {
    v12 = v11;
    v79 = 0;
    if (!objc_msgSend(v11, sel_lockForConfiguration_, &v79))
    {
      v33 = v79;
      v34 = (void *)sub_22758C75C();

      swift_willThrow();
      return;
    }
    v13 = v79;
    v14 = &selRef_session_didUpdateDetectedObjects_;
    v15 = objc_msgSend(v12, sel_torchMode);
    if (v15 == (id)1)
    {
      if (objc_msgSend(v12, sel_isTorchModeSupported_, 0))
        objc_msgSend(v12, sel_setTorchMode_, 0);
      if ((a1 & 1) == 0)
        *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) = 1;
      v35 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
      v36 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
      if (v36)
      {
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v38 = (void *)objc_opt_self();
        v39 = v36;
        v40 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
        v41 = (void *)sub_22758E1B4();
        v42 = (void *)sub_22758E1B4();
        v43 = objc_msgSend(v40, sel_localizedStringForKey_value_table_, v41, 0, v42);

        sub_22758E1E4();
        v44 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v39, sel_setAccessibilityValue_, v44);

        v45 = *(void **)(v2 + v35);
        if (v45)
        {
          v46 = v45;
          v47 = (void *)sub_22758E1B4();
          v48 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v47);

          if (v48)
          {
            if (qword_2540B8D70 != -1)
              swift_once();
            v49 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_2540BCE30);
            v50 = objc_msgSend(v48, sel_imageByApplyingSymbolConfiguration_, v49);

          }
          else
          {
            v50 = 0;
          }
          objc_msgSend(v46, sel_setImage_, v50);

        }
      }
      type metadata accessor for MAGUtilities();
      v65 = swift_getObjCClassFromMetadata();
      v66 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v65);
      v67 = (void *)sub_22758E1B4();
      v68 = (void *)sub_22758E1B4();
      v69 = objc_msgSend(v66, sel_localizedStringForKey_value_table_, v67, 0, v68);

      v70 = (void *)sub_22758E1E4();
      v72 = v71;

      v79 = v70;
      v80 = v72;
      sub_22731236C();
      v73 = sub_22758EA6C();
      v75 = v74;
      swift_bridgeObjectRelease();
      v76 = sub_2274E51C0();
      v77 = sub_2274E5324();
      sub_2274E2410(v73, v75, v76, v77);
      swift_bridgeObjectRelease();

      if ((sub_227310A38() & 1) != 0 && !UIAccessibilityIsVoiceOverRunning())
      {
        v10[v4[5]] = 7;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_22758C978();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_2273C9264((uint64_t)v10);
        sub_22730DFB0((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if (v79 == 1)
        *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 0;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      v14 = &selRef_session_didUpdateDetectedObjects_;
      if (v79 != 1)
        goto LABEL_47;
      v64 = 0;
    }
    else
    {
      if (v15)
        goto LABEL_47;
      if (objc_msgSend(v12, sel_isTorchModeSupported_, 1))
        objc_msgSend(v12, sel_setTorchMode_, 1);
      *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_toggledDetectionModeFlashlightOff) = 0;
      v16 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem;
      v17 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_flashlightBarButtonItem);
      p_weak_ivar_lyt = (void **)(&TapToRadarManager + 56);
      if (v17)
      {
        type metadata accessor for MAGUtilities();
        v19 = swift_getObjCClassFromMetadata();
        v20 = (void *)objc_opt_self();
        v21 = v17;
        v22 = objc_msgSend(v20, sel_bundleForClass_, v19);
        v23 = (void *)sub_22758E1B4();
        v24 = (void *)sub_22758E1B4();
        v25 = objc_msgSend(v22, sel_localizedStringForKey_value_table_, v23, 0, v24);

        sub_22758E1E4();
        v26 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setAccessibilityValue_, v26);

        p_weak_ivar_lyt = (void **)(&TapToRadarManager + 56);
        v27 = *(void **)(v2 + v16);
        if (v27)
        {
          v28 = v27;
          v29 = (void *)sub_22758E1B4();
          v30 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v29);

          if (v30)
          {
            if (qword_2540B8D70 != -1)
              swift_once();
            v31 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_2540BCE30);
            v32 = objc_msgSend(v30, sel_imageByApplyingSymbolConfiguration_, v31);

          }
          else
          {
            v32 = 0;
          }
          objc_msgSend(v28, sel_setImage_, v32);

          p_weak_ivar_lyt = &TapToRadarManager.weak_ivar_lyt;
        }
      }
      type metadata accessor for MAGUtilities();
      v51 = swift_getObjCClassFromMetadata();
      v52 = objc_msgSend((id)objc_opt_self(), (SEL)p_weak_ivar_lyt[209], v51);
      v53 = (void *)sub_22758E1B4();
      v54 = (void *)sub_22758E1B4();
      v55 = objc_msgSend(v52, sel_localizedStringForKey_value_table_, v53, 0, v54);

      v56 = (void *)sub_22758E1E4();
      v58 = v57;

      v79 = v56;
      v80 = v58;
      sub_22731236C();
      v59 = sub_22758EA6C();
      v61 = v60;
      swift_bridgeObjectRelease();
      v62 = sub_2274E51C0();
      v63 = sub_2274E5324();
      sub_2274E2410(v59, v61, v62, v63);
      swift_bridgeObjectRelease();

      if ((sub_227310A38() & 1) != 0 && !UIAccessibilityIsVoiceOverRunning())
      {
        v10[v4[5]] = 6;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        sub_22758C978();
        v10[v4[6]] = 0;
        v10[v4[7]] = 0;
        sub_2273C9264((uint64_t)v10);
        sub_22730DFB0((uint64_t)v10, type metadata accessor for MAGOutputEvent);
      }
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if (v79 == 1)
        *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      v14 = &selRef_session_didUpdateDetectedObjects_;
      if ((v79 & 1) == 0)
        goto LABEL_47;
      v64 = 1;
    }
    *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = v64;
LABEL_47:
    v78 = objc_msgSend(v12, v14[96]);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_globalTorchMode) = v78;
    objc_msgSend(v12, sel_unlockForConfiguration);

  }
}

uint64_t sub_2273120A0(uint64_t a1)
{
  uint64_t result;
  char v3;
  char v4;

  sub_227310B94(1);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v4 == 1)
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  result = swift_release();
  if (v3 == 1)
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = 1;
  return result;
}

uint64_t sub_2273121D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2273121FC()
{
  uint64_t v0;

  return sub_2273120A0(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_22731221C(uint64_t a1)
{
  uint64_t result;
  char v3;
  char v4;

  sub_227310B94(0);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v4 == 1)
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointSpeakToggledDetectionModeFlashlightOn) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  result = swift_release();
  if (v3 == 1)
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_textDetectionToggledDetectionModeFlashlightOn) = 0;
  return result;
}

uint64_t sub_22731234C()
{
  uint64_t v0;

  return sub_22731221C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_22731236C()
{
  unint64_t result;

  result = qword_2540B9C60;
  if (!qword_2540B9C60)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540B9C60);
  }
  return result;
}

uint64_t sub_2273123B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MAGOutputEngine.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2273123F8()
{
  uint64_t v0;

  sub_22730EDA8(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_227312434()
{
  uint64_t *v0;

  sub_22731088C(v0[2], v0[3], v0[4]);
}

uint64_t sub_227312440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2273AB210(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_227312458()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22731248C()
{
  uint64_t v0;

  sub_227503400(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227312498()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2273124C4()
{
  uint64_t v0;

  return sub_227503494(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2273124CC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22730BA50(a1);
}

uint64_t type metadata accessor for MFPageViewController()
{
  return objc_opt_self();
}

void sub_227312670()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  char v21;

  v2 = v0;
  v3 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  swift_beginAccess();
  v4 = sub_22758CAD4();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    v5 = sub_22758CAB0();
    swift_endAccess();
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (v21 != 1)
      goto LABEL_11;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v2, sel_parentViewController);
    if (!v6)
      return;
    v7 = v6;
    v8 = objc_msgSend(v6, sel_navigationItem);

    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v11 = (void *)sub_22758E1B4();
    v12 = (_QWORD *)sub_22758E1B4();
    v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

    sub_22758E1E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_227596540;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else
    {
      v12 = (_QWORD *)v14;
      v13 = (id)MEMORY[0x24BEE1768];
      v1 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v14 + 64) = v1;
      *(_QWORD *)(v14 + 32) = v5 + 1;
      v15 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
      swift_beginAccess();
      v16 = *(_QWORD *)v15;
      if (!(v16 >> 62))
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
        v12[12] = v13;
        v12[13] = v1;
        v12[9] = v17;
        sub_22758E214();
        swift_bridgeObjectRelease();
        v18 = (id)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setTitle_, v18);

        goto LABEL_13;
      }
    }
    swift_bridgeObjectRetain();
    v17 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_endAccess();
LABEL_11:
  v19 = objc_msgSend(v2, sel_parentViewController);
  if (!v19)
    return;
  v20 = v19;
  v18 = objc_msgSend(v19, sel_navigationItem);

  objc_msgSend(v18, sel_setTitle_, 0);
LABEL_13:

}

id sub_227312A98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t inited;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_227593AB0;
    v5 = (void *)*MEMORY[0x24BEBE5E8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBE5E8];
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing);
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE50B0];
    *(_QWORD *)(inited + 40) = v6;
    v7 = v5;
    sub_22731D280(inited);
    v8 = objc_allocWithZone((Class)type metadata accessor for MFPageViewController());
    type metadata accessor for OptionsKey(0);
    sub_2273096F0(&qword_2558D53E0, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_227596300);
    v9 = (void *)sub_22758E10C();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v8, sel_initWithTransitionStyle_navigationOrientation_options_, 1, 0, v9);

    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

char *sub_227312BE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs))
  {
    v2 = *(char **)(v0
                  + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs);
  }
  else
  {
    v3 = v0;
    if (qword_2558D4BD8 != -1)
      swift_once();
    v2 = sub_22738669C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_227312C7C()
{
  id v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;

  v0 = sub_227312A98();
  v1 = objc_msgSend(v0, sel_viewControllers);

  if (!v1)
    return;
  sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
  v2 = sub_22758E3DC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x2276B2BEC](0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v3 = *(id *)(v2 + 32);
  }
  v4 = v3;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  if (!swift_dynamicCastClass())

}

void sub_227312D90()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints;
  sub_22730BA80(0, (unint64_t *)&qword_2540B9F00);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  if (MEMORY[0x2276B3E34](&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate]))
  {
    sub_2275042AC();
    v6 = v5;
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_227596550;
    v8 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
    v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl], sel_bottomAnchor);
    v10 = objc_msgSend(v1, sel_view);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_bottomAnchor);

      v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v12, v6);
      *(_QWORD *)(v7 + 32) = v13;
      v14 = objc_msgSend(*(id *)&v1[v8], sel_centerXAnchor);
      v15 = sub_227312A98();
      v16 = objc_msgSend(v15, sel_view);

      if (v16)
      {
        v17 = objc_msgSend(v16, sel_centerXAnchor);

        v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v17, 0.0);
        *(_QWORD *)(v7 + 40) = v18;
        sub_22758E3F4();
        *(_QWORD *)&v1[v3] = v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v19 = (id)sub_22758E3C4();
        swift_bridgeObjectRelease();
        objc_msgSend(v2, sel_activateConstraints_, v19);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_2273130F8()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription] = 0;
  v2 = v0;
  v3 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_22758ECE8())
    v4 = sub_227327650(MEMORY[0x24BEE4AF8]);
  else
    v4 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables] = v4;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages] = v3;
  v5 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  MEMORY[0x2276B0AB0](0, 0);
  v6 = sub_22758CAD4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  v7 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing;
  if (qword_2558D4B08 != -1)
    swift_once();
  *(_QWORD *)&v2[v7] = qword_2558F3C78;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  *(_QWORD *)&v2[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7D0]), sel_init);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints] = v3;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem] = 0;

  v10.receiver = v2;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

void sub_2273132F4()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGFloat v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  char *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  uint64_t aBlock;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  void *v58;
  void (*v59)();
  uint64_t v60;
  CGRect v61;
  CGRect v62;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v61.origin.x = v4;
  v61.origin.y = v6;
  v61.size.width = v8;
  v61.size.height = v10;
  v11 = CGRectGetMaxY(v61) + -50.0;
  v12 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v12, sel_bounds);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v62.origin.x = v14;
  v62.origin.y = v16;
  v62.size.width = v18;
  v62.size.height = v20;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7D0]), sel_initWithFrame_, 0.0, v11, CGRectGetWidth(v62), 50.0);
  v22 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  v23 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl] = v21;

  v24 = *(void **)&v0[v22];
  v25 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  if (*(_QWORD *)v25 >> 62)
  {
    v53 = v24;
    swift_bridgeObjectRetain();
    v26 = sub_22758ECE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = *(_QWORD *)((*(_QWORD *)v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    v27 = v24;
  }
  objc_msgSend(v24, sel_setNumberOfPages_, v26);

  objc_msgSend(*(id *)&v0[v22], sel_setCurrentPage_, 0);
  objc_msgSend(*(id *)&v0[v22], sel_setAlpha_, 0.5);
  v28 = *(void **)&v0[v22];
  v29 = (void *)objc_opt_self();
  v30 = v28;
  v31 = objc_msgSend(v29, sel_blackColor);
  objc_msgSend(v30, sel_setTintColor_, v31);

  v32 = *(id *)&v0[v22];
  v33 = objc_msgSend(v29, sel_whiteColor);
  objc_msgSend(v32, sel_setPageIndicatorTintColor_, v33);

  v34 = *(id *)&v0[v22];
  v35 = objc_msgSend(v29, sel_blackColor);
  objc_msgSend(v34, sel_setCurrentPageIndicatorTintColor_, v35);

  objc_msgSend(*(id *)&v0[v22], sel_addTarget_action_forControlEvents_, v0, sel_didTapPageControl_, 4096);
  objc_msgSend(*(id *)&v0[v22], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v0[v22], sel_setBackgroundStyle_, 1);
  v36 = objc_msgSend(v0, sel_view);
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v36, sel_addSubview_, *(_QWORD *)&v0[v22]);

    v38 = *(void **)&v0[v22];
    v39 = *(_QWORD *)v25;
    if (v39 >> 62)
    {
      v54 = v38;
      swift_bridgeObjectRetain();
      v40 = sub_22758ECE8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      v41 = v38;
    }
    v42 = 0.0;
    if (v40 > 1)
      v42 = 1.0;
    objc_msgSend(v38, sel_setAlpha_, v42);

    v43 = *(void **)&v0[v22];
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v0;
    v59 = sub_22731A364;
    v60 = v44;
    v45 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v56 = 1107296256;
    v57 = sub_227367AE4;
    v58 = &block_descriptor_75;
    v46 = _Block_copy(&aBlock);
    v47 = v43;
    v48 = v0;
    swift_release();
    objc_msgSend(v47, sel__setAccessibilityIncrementBlock_, v46);
    _Block_release(v46);

    v49 = *(void **)&v0[v22];
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v48;
    v59 = sub_22731A36C;
    v60 = v50;
    aBlock = v45;
    v56 = 1107296256;
    v57 = sub_227367AE4;
    v58 = &block_descriptor_81;
    v51 = _Block_copy(&aBlock);
    v48;
    v52 = v49;
    swift_release();
    objc_msgSend(v52, sel__setAccessibilityDecrementBlock_, v51);
    _Block_release(v51);

    sub_227312D90();
  }
  else
  {
    __break(1u);
  }
}

void sub_2273137D0(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  id i;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  _QWORD v38[10];

  v3 = (_QWORD *)sub_22758CAD4();
  v4 = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = (unint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227312A98();
  v12 = objc_msgSend(v11, sel_viewControllers);

  if (!v12)
    goto LABEL_14;
  sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
  v13 = sub_22758E3DC();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_41;
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = *(id *)(v13 + 32); ; i = (id)MEMORY[0x2276B2BEC](0, v13))
  {
    v15 = i;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    v16 = swift_dynamicCastClass();
    if (v16)
    {
      v17 = v16;
      v18 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
      swift_beginAccess();
      v19 = *v18;
      swift_bridgeObjectRetain();
      sub_2274AB3D8(v17, v19);
      v21 = v20;
      v1 = v22;

      swift_bridgeObjectRelease();
      v23 = (v1 & 1) != 0 ? 0 : v21;
    }
    else
    {

LABEL_14:
      v23 = 0;
    }
    if (__OFADD__(v23, 1))
    {
      __break(1u);
    }
    else
    {
      MEMORY[0x2276B0AB0](v23 + 1, 0);
      sub_227313C70(v10);
      (*(void (**)(unint64_t, _QWORD *))(v4 + 8))(v10, v3);
      v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
      v3 = objc_retain(*(id *)((char *)a1
                             + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl));
      v10 = (unint64_t)sub_227312A98();
      v13 = (unint64_t)objc_msgSend((id)v10, sel_viewControllers);

      if (!v13)
        goto LABEL_30;
      sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
      v10 = sub_22758E3DC();

      if (!(v10 >> 62))
      {
        v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v13)
          goto LABEL_29;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    v13 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_19:
    if ((v10 & 0xC000000000000001) == 0)
      break;
LABEL_43:
    v25 = (id *)MEMORY[0x2276B2BEC](0, v10);
LABEL_22:
    v13 = (unint64_t)v25;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    v26 = swift_dynamicCastClass();
    if (!v26)
    {

LABEL_30:
      v33 = 0;
      goto LABEL_31;
    }
    v27 = v26;
    v28 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    v29 = *v28;
    swift_bridgeObjectRetain();
    sub_2274AB3D8(v27, v29);
    v10 = v30;
    v32 = v31;

    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      v33 = 0;
    else
      v33 = v10;
LABEL_31:
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_38:
      v35 = (id)MEMORY[0x2276B2BEC](v13);
LABEL_36:
      v36 = v35;
      swift_endAccess();
      *(_QWORD *)(v10 + 32) = v36;
      v38[7] = v10;
      sub_22758E3F4();
      sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
      v37 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setViewControllers_direction_animated_completion_, v37, 0, 1, 0);

      return;
    }
    objc_msgSend(v3, sel_setCurrentPage_, v33 + 1);

    v3 = sub_227312A98();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_227596560;
    v13 = (unint64_t)objc_msgSend(*(id *)((char *)a1 + v1), sel_currentPage);
    a1 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    v34 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
      goto LABEL_38;
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v35 = *(id *)(v34 + 8 * v13 + 32);
      goto LABEL_36;
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v25 = (id *)*(id *)(v10 + 32);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_227313C70(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v2 = v1;
  v4 = sub_22758CAD4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v58 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v16 = MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v57 = (uint64_t)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18, v19, v20, v21);
  v56 = (char *)&v55 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57E0);
  MEMORY[0x24BDAC7A8](v23, v24, v25, v26, v27);
  v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (uint64_t)&v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  swift_beginAccess();
  v31 = v5;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v30, 1, v4))
  {
    swift_endAccess();
    goto LABEL_11;
  }
  v32 = sub_22758CAB0();
  swift_endAccess();
  v33 = &v2[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  if (*(_QWORD *)v33 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v34 < 0)
    {
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    v34 = *(_QWORD *)((*(_QWORD *)v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v32 & 0x8000000000000000) == 0 && v32 < v34)
  {
    swift_beginAccess();
    v35 = *(_QWORD *)v33;
    if ((*(_QWORD *)v33 & 0xC000000000000001) == 0)
    {
      if ((unint64_t)v32 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v36 = *(id *)(v35 + 8 * v32 + 32);
      goto LABEL_10;
    }
LABEL_27:
    v36 = (id)MEMORY[0x2276B2BEC](v32);
LABEL_10:
    v37 = v36;
    swift_endAccess();
    sub_2274BC4B0();
    sub_2274BC748();
    sub_2274BC874();

  }
LABEL_11:
  v38 = v31;
  v39 = *(_QWORD *)(v31 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v39)(v29, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v4);
  swift_beginAccess();
  sub_22731A288((uint64_t)v29, v30);
  swift_endAccess();
  sub_227312670();
  sub_22731A1A4((uint64_t)v29, &qword_2558D57E0);
  v40 = *((_QWORD *)sub_227312BE8() + 2);
  swift_bridgeObjectRelease();
  v41 = sub_22758CAB0();
  if (v41 < 0 || v41 >= v40)
  {
    if (qword_2558D4A28 == -1)
      goto LABEL_19;
  }
  else
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    v4 = *(_QWORD *)(qword_2540BCDC8 + 16);
    swift_retain();
    v39 = sub_22758CAB0();
    v42 = sub_227312BE8();
    if ((v39 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v43 = v42;
      if (v39 < *((_QWORD *)v42 + 2))
      {
        v44 = sub_22758C858();
        v45 = *(_QWORD *)(v44 - 8);
        v46 = (uint64_t)v56;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v56, &v43[((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v39], v44);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22731A11C(v46, v57, &qword_2540B7B10);
        swift_retain();
        sub_22758D1A0();
        sub_22731A1A4(v46, &qword_2540B7B10);
        swift_release();
        return;
      }
    }
    __break(1u);
  }
  swift_once();
LABEL_19:
  v47 = sub_22758CF9C();
  __swift_project_value_buffer(v47, (uint64_t)qword_2558D61A0);
  v48 = v58;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v58, a1, v4);
  v49 = v2;
  v50 = sub_22758CF84();
  v51 = sub_22758E6B8();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    *(_DWORD *)v52 = 134218240;
    v53 = sub_22758CAB0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v48, v4);
    v59 = v53;
    sub_22758EA48();
    *(_WORD *)(v52 + 12) = 2048;
    v54 = *((_QWORD *)sub_227312BE8() + 2);

    swift_bridgeObjectRelease();
    v59 = v54;
    sub_22758EA48();

    _os_log_impl(&dword_2272F4000, v50, v51, "Requested active page %ld exceeds asset count %ld", (uint8_t *)v52, 0x16u);
    MEMORY[0x2276B3D50](v52, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v48, v4);
  }
}

void sub_2273141FC(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  id i;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  _QWORD v38[10];

  v3 = (_QWORD *)sub_22758CAD4();
  v4 = *(v3 - 1);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = (unint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227312A98();
  v12 = objc_msgSend(v11, sel_viewControllers);

  if (!v12)
    goto LABEL_14;
  sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
  v13 = sub_22758E3DC();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_41;
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = *(id *)(v13 + 32); ; i = (id)MEMORY[0x2276B2BEC](0, v13))
  {
    v15 = i;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    v16 = swift_dynamicCastClass();
    if (v16)
    {
      v17 = v16;
      v18 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
      swift_beginAccess();
      v19 = *v18;
      swift_bridgeObjectRetain();
      sub_2274AB3D8(v17, v19);
      v21 = v20;
      v1 = v22;

      swift_bridgeObjectRelease();
      v23 = (v1 & 1) != 0 ? 0 : v21;
    }
    else
    {

LABEL_14:
      v23 = 0;
    }
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
    }
    else
    {
      MEMORY[0x2276B0AB0](v23 - 1, 0);
      sub_227313C70(v10);
      (*(void (**)(unint64_t, _QWORD *))(v4 + 8))(v10, v3);
      v1 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
      v3 = objc_retain(*(id *)((char *)a1
                             + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl));
      v10 = (unint64_t)sub_227312A98();
      v13 = (unint64_t)objc_msgSend((id)v10, sel_viewControllers);

      if (!v13)
        goto LABEL_30;
      sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
      v10 = sub_22758E3DC();

      if (!(v10 >> 62))
      {
        v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v13)
          goto LABEL_29;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    v13 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_19:
    if ((v10 & 0xC000000000000001) == 0)
      break;
LABEL_43:
    v25 = (id *)MEMORY[0x2276B2BEC](0, v10);
LABEL_22:
    v13 = (unint64_t)v25;
    swift_bridgeObjectRelease();
    type metadata accessor for FreezeFramePageContentViewController();
    v26 = swift_dynamicCastClass();
    if (!v26)
    {

LABEL_30:
      v33 = 0;
      goto LABEL_31;
    }
    v27 = v26;
    v28 = (unint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    v29 = *v28;
    swift_bridgeObjectRetain();
    sub_2274AB3D8(v27, v29);
    v10 = v30;
    v32 = v31;

    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      v33 = 0;
    else
      v33 = v10;
LABEL_31:
    if (__OFSUB__(v33, 1))
    {
      __break(1u);
LABEL_38:
      v35 = (id)MEMORY[0x2276B2BEC](v13);
LABEL_36:
      v36 = v35;
      swift_endAccess();
      *(_QWORD *)(v10 + 32) = v36;
      v38[7] = v10;
      sub_22758E3F4();
      sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
      v37 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setViewControllers_direction_animated_completion_, v37, 0, 1, 0);

      return;
    }
    objc_msgSend(v3, sel_setCurrentPage_, v33 - 1);

    v3 = sub_227312A98();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_227596560;
    v13 = (unint64_t)objc_msgSend(*(id *)((char *)a1 + v1), sel_currentPage);
    a1 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    v34 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
      goto LABEL_38;
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v35 = *(id *)(v34 + 8 * v13 + 32);
      goto LABEL_36;
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v25 = (id *)*(id *)(v10 + 32);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_22731469C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12[4];

  sub_22731A374(a1, (uint64_t)v12);
  sub_22730BA80(0, &qword_2558D5838);
  if (swift_dynamicCast())
  {
    v2 = (unint64_t)objc_msgSend(v11, sel_currentPage);
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
    swift_beginAccess();
    v4 = *v3;
    if ((*v3 & 0xC000000000000001) == 0)
    {
      if ((v2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v2 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v5 = *(id *)(v4 + 8 * v2 + 32);
LABEL_6:
        v6 = v5;
        swift_endAccess();
        v7 = sub_227312A98();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
        v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_227596560;
        *(_QWORD *)(v8 + 32) = v6;
        v12[0] = v8;
        sub_22758E3F4();
        sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
        v9 = v6;
        v10 = (void *)sub_22758E3C4();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setViewControllers_direction_animated_completion_, v10, 0, 1, 0);

        return;
      }
      __break(1u);
      return;
    }
    v5 = (id)MEMORY[0x2276B2BEC](v2);
    goto LABEL_6;
  }
}

void sub_2273148A0()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;

  v1 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v1, sel_bounds);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, v3, v5, v7, v9);
  objc_msgSend(v11, sel_setAutoresizingMask_, 18);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v10);

  objc_msgSend(v11, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v0, sel_setView_, v11);

}

void sub_2273149EC()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  objc_super v19;

  v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  v2 = sub_227312A98();
  objc_msgSend(v2, sel_setDelegate_, v1);

  v3 = sub_227312A98();
  objc_msgSend(v3, sel_setDataSource_, v1);

  v4 = sub_227312A98();
  objc_msgSend(v1, sel_addChildViewController_, v4);

  v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = sub_227312A98();
  v8 = objc_msgSend(v7, sel_view);

  if (v8)
  {
    objc_msgSend(v6, sel_addSubview_, v8);

    v9 = sub_227312A98();
    objc_msgSend(v9, sel_didMoveToParentViewController_, v1);

    v10 = &v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
    swift_beginAccess();
    v11 = *(_QWORD *)v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_22758ECE8())
      {
LABEL_5:
        if ((v11 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v13 = *(id *)(v11 + 32);
LABEL_8:
            v14 = v13;
            swift_bridgeObjectRelease();
            v15 = sub_227312A98();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
            v16 = swift_allocObject();
            *(_OWORD *)(v16 + 16) = xmmword_227596560;
            *(_QWORD *)(v16 + 32) = v14;
            sub_22758E3F4();
            sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
            v17 = v14;
            v18 = (void *)sub_22758E3C4();
            swift_bridgeObjectRelease();
            objc_msgSend(v15, sel_setViewControllers_direction_animated_completion_, v18, 0, 1, 0);

            sub_2273132F4();
            return;
          }
          __break(1u);
          goto LABEL_13;
        }
LABEL_11:
        v13 = (id)MEMORY[0x2276B2BEC](0, v11);
        goto LABEL_8;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_22758ECC4();
    __break(1u);
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

id sub_227314D04(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id result;
  void *v12;
  char *v13;
  objc_class *v14;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a1)
    goto LABEL_12;
  v4 = &v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  v13 = v4;
  v14 = ObjectType;
  if (!(*(_QWORD *)v4 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v6)
      goto LABEL_4;
    goto LABEL_11;
  }
LABEL_14:
  swift_bridgeObjectRetain_n();
  v6 = sub_22758ECE8();
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease_n();
    *(_QWORD *)v13 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    a1 = 0;
    ObjectType = v14;
LABEL_12:
    v15.receiver = v1;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_willMoveToParentViewController_, a1);
  }
LABEL_4:
  v7 = 4;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x2276B2BEC](v7 - 4, v5);
    else
      v8 = *(id *)(v5 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
    result = objc_msgSend(v9, sel_view);
    if (!result)
      break;
    v12 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(v9, sel_removeFromParentViewController);
    ++v7;
    if (v10 == v6)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_227314F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;

  v1 = sub_22758DF2C();
  v68 = *(_QWORD *)(v1 - 8);
  v69 = v1;
  MEMORY[0x24BDAC7A8](v1, v2, v3, v4, v5);
  v67 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22758E784();
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  v70 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9AE0);
  MEMORY[0x24BDAC7A8](v62, v13, v14, v15, v16);
  v61 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9A90);
  MEMORY[0x24BDAC7A8](v60, v18, v19, v20, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9A60);
  v27 = MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  MEMORY[0x24BDAC7A8](v27, v28, v29, v30, v31);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9490);
  v63 = *(_QWORD *)(v32 - 8);
  v64 = v32;
  MEMORY[0x24BDAC7A8](v32, v33, v34, v35, v36);
  v38 = (char *)&v59 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9858);
  v65 = *(_QWORD *)(v39 - 8);
  v66 = v39;
  MEMORY[0x24BDAC7A8](v39, v40, v41, v42, v43);
  v45 = (char *)&v59 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables) = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9B60);
  sub_22758D170();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_22758D170();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9B80);
  sub_22758D170();
  swift_endAccess();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9BC0);
  sub_22758D170();
  swift_endAccess();
  v46 = MEMORY[0x24BDB9EE8];
  sub_22730BB7C((unint64_t *)&unk_2540B9A50, (uint64_t *)&unk_2540B9A60, MEMORY[0x24BDB9EE8]);
  sub_22730BB7C((unint64_t *)&unk_2540B9A80, (uint64_t *)&unk_2540B9A90, v46);
  sub_22730BB7C((unint64_t *)&unk_2540B9AD0, &qword_2540B9AE0, v46);
  sub_22758D0D4();
  v47 = v70;
  sub_22758E778();
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v49 = v67;
  v48 = v68;
  v50 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v67, *MEMORY[0x24BEE5488], v69);
  v51 = (void *)sub_22758E7E4();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  v74 = v51;
  sub_22730BB7C((unint64_t *)&unk_2540B9480, &qword_2540B9490, MEMORY[0x24BDB9490]);
  sub_22731A2D8();
  v52 = v64;
  sub_22758D20C();

  (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v72);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v52);
  v53 = swift_allocObject();
  v54 = v73;
  swift_unknownObjectWeakInit();
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = sub_22731A354;
  *(_QWORD *)(v55 + 24) = v53;
  sub_22730BB7C(&qword_2540B9850, (uint64_t *)&unk_2540B9858, MEMORY[0x24BDB9988]);
  v56 = v66;
  v57 = sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v56);
  *(_QWORD *)(v54
            + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription) = v57;
  return swift_release();
}

void sub_227315518(char a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v9 = a3 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x2276B3E34](v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = sub_227469BA0(a5);
    if ((a2 & 1) == 0)
    {
      v13 = v12;
      v14 = -0.5;
      v15 = a4 + -0.5;
      if (a4 + -0.5 > 0.5)
        v15 = 0.5;
      if (v15 > -0.5)
        v14 = v15;
      sub_227315968(a1, v14, v13);
    }

  }
}

uint64_t sub_2273155B8(char a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  objc_super v18;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_22758CAD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7, v8, v9, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.receiver = v2;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, sel_viewWillAppear_, a1 & 1);
  if (qword_2558D4A28 != -1)
    swift_once();
  v13 = sub_22758CF9C();
  __swift_project_value_buffer(v13, (uint64_t)qword_2558D61A0);
  v14 = sub_22758CF84();
  v15 = sub_22758E6B8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2272F4000, v14, v15, "viewWillAppear", v16, 2u);
    MEMORY[0x2276B3D50](v16, -1, -1);
  }

  MEMORY[0x2276B0AB0](0, 0);
  sub_227313C70((uint64_t)v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
}

uint64_t sub_227315968(char a1, double a2, double a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_22758DF20();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v30 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22758DF68();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18, v19, v20, v21);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_brightness] = a2;
  *(double *)&v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_contrast] = a3;
  v4[OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_colorFilter] = a1;
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v24 = (void *)sub_22758E79C();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v4;
  aBlock[4] = sub_22731A114;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_51;
  v26 = _Block_copy(aBlock);
  v27 = v4;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, v9, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v23, v15, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v23, v16);
}

uint64_t sub_227315BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  char *v8;
  BOOL v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44[2];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[16];
  __int128 v49;
  double v50;
  __int128 v51;
  __int128 v52;
  double v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _UNKNOWN **v58;

  v1 = a1;
  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
  swift_beginAccess();
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
    goto LABEL_32;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v4; v4 = sub_22758ECE8())
  {
    v5 = 0;
    v36 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_contrast;
    v37 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_brightness;
    v39 = v3 & 0xC000000000000001;
    v35 = OBJC_IVAR____TtC16MagnifierSupport27LensFilteringViewController_colorFilter;
    v32 = v3 + 32;
    v34 = v1;
    v38 = v4;
    v33 = v3;
    while (1)
    {
      v7 = v39 ? (char *)MEMORY[0x2276B2BEC](v5, v3) : (char *)*(id *)(v32 + 8 * v5);
      v8 = v7;
      v9 = __OFADD__(v5, 1);
      v10 = v5 + 1;
      if (v9)
        break;
      v49 = xmmword_227596570;
      v11 = *(double *)(v1 + v37);
      if (vabdd_f64(0.0, v11) <= 0.01)
      {
        v12 = 0.0;
        v51 = 0u;
        v52 = 0u;
      }
      else
      {
        *(_QWORD *)&v52 = &type metadata for DisplayFilter;
        *((_QWORD *)&v52 + 1) = &off_24EFA2590;
        v12 = v11;
        LOBYTE(v51) = 0;
      }
      v50 = v12;
      v13 = *(double *)(v1 + v36);
      if (vabdd_f64(1.0, v13) <= 0.01)
      {
        v14 = 0.0;
        v54 = 0u;
        v55 = 0u;
      }
      else
      {
        *(_QWORD *)&v55 = &type metadata for DisplayFilter;
        *((_QWORD *)&v55 + 1) = &off_24EFA2590;
        v14 = v13;
        LOBYTE(v54) = 1;
      }
      v53 = v14;
      v15 = *(unsigned __int8 *)(v1 + v35);
      v41 = v10;
      if (v15 == 12)
      {
        v58 = 0;
        v56 = 0u;
        v57 = 0u;
      }
      else
      {
        *((_QWORD *)&v57 + 1) = &type metadata for ColorFilter;
        v58 = &off_24EFA24D0;
        LOBYTE(v56) = v15;
      }
      v16 = 32;
      v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        sub_22731A11C((uint64_t)&v48[v16], (uint64_t)v45, &qword_2540B7EB0);
        sub_22731A160((uint64_t)v45, (uint64_t)&v42, &qword_2540B7EB0);
        if (v43)
        {
          sub_22731A268(&v42, (uint64_t)v44);
          sub_22731A268(v44, (uint64_t)&v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_2273A4BD8(0, v17[2] + 1, 1, v17);
          v19 = v17[2];
          v18 = v17[3];
          if (v19 >= v18 >> 1)
            v17 = sub_2273A4BD8((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
          v17[2] = v19 + 1;
          sub_22731A268(&v42, (uint64_t)&v17[5 * v19 + 4]);
        }
        else
        {
          sub_22731A1A4((uint64_t)&v42, &qword_2540B7EB0);
        }
        v16 += 40;
      }
      while (v16 != 152);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7EB0);
      swift_arrayDestroy();
      v20 = OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_filterSet;
      *(_QWORD *)&v8[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_filterSet] = v17;
      swift_bridgeObjectRelease();
      v21 = v8;
      v22 = *(_QWORD *)&v8[v20];
      v40 = v21;
      v23 = *(void **)&v21[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_imageView];
      swift_bridgeObjectRetain();
      v24 = objc_msgSend(v23, sel_layer);
      v25 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)&v44[0] = MEMORY[0x24BEE4AF8];
      v26 = *(_QWORD *)(v22 + 16);
      if (v26)
      {
        v27 = v22 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22731A1E0(v27, (uint64_t)v45);
          v28 = v46;
          v29 = v47;
          __swift_project_boxed_opaque_existential_1(v45, v46);
          v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
          sub_2273A338C(v30);
          v27 += 40;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        v25 = *(_QWORD *)&v44[0];
        v3 = v33;
        v1 = v34;
      }
      sub_227575C00(v25);
      swift_bridgeObjectRelease();
      v6 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setFilters_, v6);

      swift_bridgeObjectRelease();
      v5 = v41;
      if (v41 == v38)
        return swift_bridgeObjectRelease_n();
    }
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

void sub_2273160A8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22731A1A4(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath, &qword_2558D57E0);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController));
  swift_bridgeObjectRelease();
  sub_22731A0F0(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate);

  swift_bridgeObjectRelease();
  sub_22731A0F0(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem));
}

uint64_t sub_22731623C()
{
  return type metadata accessor for FreezeFramePageFlippingController();
}

uint64_t type metadata accessor for FreezeFramePageFlippingController()
{
  uint64_t result;

  result = qword_2558D57C0;
  if (!qword_2558D57C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_227316280()
{
  unint64_t v0;

  sub_22731633C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22731633C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2558D57D0)
  {
    sub_22758CAD4();
    v0 = sub_22758EA30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2558D57D0);
  }
}

uint64_t sub_227316390(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[6];

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v4;
  *(double *)(v9 + 24) = a1;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(double *)(v9 + 48) = a4;
  v10 = v4;
  if ((sub_227469C00() & 1) != 0)
  {
    v11 = (void *)objc_opt_self();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_227319088;
    *(_QWORD *)(v12 + 24) = v9;
    v15[4] = sub_227319E80;
    v15[5] = v12;
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 1107296256;
    v15[2] = sub_2273D1018;
    v15[3] = &block_descriptor_2;
    v13 = _Block_copy(v15);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_sbs_unlockDeviceIfNeededAndPerform_, v13);
    _Block_release(v13);

    return swift_release();
  }
  else
  {
    sub_227318990(v10, a1, a2, a3, a4);

    return swift_release();
  }
}

uint64_t sub_227316508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  BOOL v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  uint64_t result;
  uint64_t ObjCClassFromMetadata;
  id v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  void *v79;
  _QWORD *v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  objc_class *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  void *v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  id v109;
  __int128 v110;
  char *v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;
  objc_super v115;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v6 = MEMORY[0x24BDAC7A8](v1, v2, v3, v4, v5);
  v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9, v10, v11, v12);
  v14 = (char *)&v106 - v13;
  v15 = sub_22758C858();
  v113 = *(_QWORD **)(v15 - 8);
  v114 = v15;
  v20 = MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v112 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22, v23, v24, v25);
  v27 = (char *)&v106 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57E0);
  MEMORY[0x24BDAC7A8](v28, v29, v30, v31, v32);
  v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22758CAD4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37, v38, v39, v40);
  v42 = (char *)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath;
  swift_beginAccess();
  sub_22731A11C(v43, (uint64_t)v34, &qword_2558D57E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    v44 = &qword_2558D57E0;
    v45 = (uint64_t)v34;
LABEL_3:
    sub_22731A1A4(v45, v44);
LABEL_17:
    if (qword_2558D4A28 != -1)
      swift_once();
    v57 = sub_22758CF9C();
    __swift_project_value_buffer(v57, (uint64_t)qword_2558D61A0);
    v58 = sub_22758CF84();
    v59 = sub_22758E6B8();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_2272F4000, v58, v59, "Unable to share image", v60, 2u);
      MEMORY[0x2276B3D50](v60, -1, -1);
    }

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v42, v34, v35);
  v46 = (unint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
  swift_beginAccess();
  v47 = *v46;
  if (*v46 >> 62)
  {
    swift_bridgeObjectRetain();
    v48 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v48 < 0)
    {
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v49 = sub_22758CAB0();
  if (v49 < 0 || v49 >= v48)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v35);
    goto LABEL_17;
  }
  v47 = sub_22758CAB0();
  swift_beginAccess();
  v50 = *v46;
  v51 = (*v46 & 0xC000000000000001) == 0;
  v111 = v27;
  if (v51)
  {
    if ((v47 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v47 < *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v52 = *(id *)(v50 + 8 * v47 + 32);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_38:
  v52 = (id)MEMORY[0x2276B2BEC](v47);
LABEL_13:
  v53 = v52;
  swift_endAccess();
  v54 = (uint64_t)v53 + OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset;
  swift_beginAccess();
  sub_22731A11C(v54, (uint64_t)v8, &qword_2540B7B10);

  v56 = v113;
  v55 = v114;
  v27 = (char *)v113[6];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v27)(v8, 1, v114) == 1)
  {
    if (qword_2540B87B8 == -1)
    {
LABEL_15:
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22758D194();
      swift_release();
      swift_release();
      swift_release();
      sub_22731A1A4((uint64_t)v8, &qword_2540B7B10);
      v56 = v113;
      v55 = v114;
      goto LABEL_24;
    }
LABEL_41:
    swift_once();
    goto LABEL_15;
  }
  ((void (*)(char *, char *, uint64_t))v56[4])(v14, v8, v55);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v56[7])(v14, 0, 1, v55);
LABEL_24:
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v27)(v14, 1, v55) == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v35);
    v44 = &qword_2540B7B10;
    v45 = (uint64_t)v14;
    goto LABEL_3;
  }
  ((void (*)(char *, char *, uint64_t))v56[4])(v111, v14, v55);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v64 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v65 = (void *)sub_22758E1B4();
  v66 = (void *)sub_22758E1B4();
  v67 = objc_msgSend(v64, sel_localizedStringForKey_value_table_, v65, 0, v66);

  sub_22758E1E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
  v68 = swift_allocObject();
  v110 = xmmword_227593AB0;
  *(_OWORD *)(v68 + 16) = xmmword_227593AB0;
  v69 = (unint64_t)v42;
  v70 = sub_22758CAB0();
  if (__OFADD__(v70, 1))
  {
    __break(1u);
LABEL_43:
    v76 = (char *)MEMORY[0x2276B2BEC](v69);
    goto LABEL_32;
  }
  v71 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v68 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v68 + 64) = v71;
  *(_QWORD *)(v68 + 32) = v70 + 1;
  v72 = (void *)sub_22758E214();
  v74 = v73;
  swift_bridgeObjectRelease();
  v69 = sub_22758CAB0();
  result = swift_beginAccess();
  v75 = *v46;
  v51 = (*v46 & 0xC000000000000001) == 0;
  v109 = v72;
  v108 = v74;
  if (!v51)
    goto LABEL_43;
  if ((v69 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v69 < *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v76 = (char *)*(id *)(v75 + 8 * v69 + 32);
LABEL_32:
    v77 = v76;
    swift_endAccess();
    v78 = &v77[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset];
    swift_beginAccess();
    v79 = *(void **)&v78[*(int *)(type metadata accessor for Asset() + 20)];
    v107 = v79;

    v81 = v112;
    v80 = v113;
    v82 = (void (*)(char *, char *, uint64_t))v113[2];
    v83 = v114;
    v82(v112, v111, v114);
    v84 = (objc_class *)type metadata accessor for MFSnapshotProvider();
    v85 = (char *)objc_allocWithZone(v84);
    v86 = &v85[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_title];
    v87 = v108;
    *(_QWORD *)v86 = v109;
    *((_QWORD *)v86 + 1) = v87;
    v82(&v85[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_url], v81, v83);
    *(_QWORD *)&v85[OBJC_IVAR____TtC16MagnifierSupport18MFSnapshotProvider_image] = v79;
    v88 = v107;
    v89 = (void *)sub_22758C7EC();
    v115.receiver = v85;
    v115.super_class = v84;
    v90 = objc_msgSendSuper2(&v115, sel_initWithPlaceholderItem_, v89);
    v109 = v88;

    v91 = (void (*)(char *, uint64_t))v80[1];
    v91(v81, v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA330);
    v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = v110;
    *(_QWORD *)(v92 + 56) = v84;
    *(_QWORD *)(v92 + 32) = v90;
    v93 = objc_allocWithZone((Class)type metadata accessor for MFActivityViewController());
    v113 = v90;
    v94 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
    v95 = objc_msgSend(v93, sel_initWithActivityItems_applicationActivities_, v94, 0);

    v96 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v97 = (void *)sub_22758E1B4();
    LODWORD(v81) = objc_msgSend(v96, sel_BOOLForKey_, v97);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57E8);
    v98 = swift_allocObject();
    if ((_DWORD)v81)
    {
      *(_OWORD *)(v98 + 16) = xmmword_227596540;
      v99 = (void *)*MEMORY[0x24BE8F6C0];
      v100 = (void *)*MEMORY[0x24BE8F708];
      *(_QWORD *)(v98 + 32) = *MEMORY[0x24BE8F6C0];
      *(_QWORD *)(v98 + 40) = v100;
      type metadata accessor for ActivityType(0);
      v61 = v95;
      v101 = v99;
      v102 = v100;
    }
    else
    {
      *(_OWORD *)(v98 + 16) = v110;
      v103 = (void *)*MEMORY[0x24BE8F6C0];
      *(_QWORD *)(v98 + 32) = *MEMORY[0x24BE8F6C0];
      type metadata accessor for ActivityType(0);
      v61 = v95;
      v104 = v103;
    }
    v105 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v61, sel_setExcludedActivityTypes_, v105);

    v91(v111, v114);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v35);
    return (uint64_t)v61;
  }
  __break(1u);
  return result;
}

uint64_t sub_227316ECC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD aBlock[6];
  _BYTE v24[32];
  _BYTE v25[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = qword_2558DCEC8;
  if (qword_2558DCEC8)
  {
    v11 = sub_22758E4C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_22758E49C();
    swift_retain_n();
    v12 = v1;
    v13 = sub_22758E490();
    v14 = (_QWORD *)swift_allocObject();
    v15 = MEMORY[0x24BEE6930];
    v14[2] = v13;
    v14[3] = v15;
    v14[4] = v12;
    v14[5] = v10;
    sub_227367B10((uint64_t)v9, (uint64_t)&unk_2558D5818, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_22731A11C(a1, (uint64_t)v25, &qword_2540BA340);
    sub_22731A11C((uint64_t)v25, (uint64_t)v24, &qword_2540BA340);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v1;
    sub_22731A160((uint64_t)v25, v17 + 24, &qword_2540BA340);
    v18 = v1;
    if ((sub_227469C00() & 1) != 0)
    {
      v19 = (void *)objc_opt_self();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_227319FD0;
      *(_QWORD *)(v20 + 24) = v17;
      aBlock[4] = sub_22731A400;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2273D1018;
      aBlock[3] = &block_descriptor_34;
      v21 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v19, sel_sbs_unlockDeviceIfNeededAndPerform_, v21);
      _Block_release(v21);
    }
    else
    {
      sub_227317CE4(v18, (uint64_t)v24);
    }

    swift_release();
    return sub_22731A1A4((uint64_t)v24, &qword_2540BA340);
  }
}

uint64_t sub_22731712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[44] = a4;
  v5[45] = a5;
  v6 = sub_22758CE58();
  v5[46] = v6;
  v5[47] = *(_QWORD *)(v6 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v5[51] = swift_task_alloc();
  v7 = sub_22758C858();
  v5[52] = v7;
  v5[53] = *(_QWORD *)(v7 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57E0);
  v5[55] = swift_task_alloc();
  v8 = sub_22758CAD4();
  v5[56] = v8;
  v5[57] = *(_QWORD *)(v8 - 8);
  v5[58] = swift_task_alloc();
  sub_22758E49C();
  v5[59] = sub_22758E490();
  v5[60] = sub_22758E460();
  v5[61] = v9;
  return swift_task_switch();
}

uint64_t sub_227317274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 440);
  v4 = *(_QWORD *)(v0 + 352) + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath;
  swift_beginAccess();
  sub_22731A11C(v4, v3, &qword_2558D57E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 440);
    swift_release();
    v6 = &qword_2558D57E0;
    v7 = v5;
LABEL_9:
    sub_22731A1A4(v7, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 32))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448));
  v9 = sub_22758CAB0();
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
  result = swift_beginAccess();
  v12 = *v10;
  if ((*v10 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x2276B2BEC](v9);
    goto LABEL_7;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v13 = *(id *)(v12 + 8 * v9 + 32);
LABEL_7:
  v14 = v13;
  v15 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 424);
  v17 = *(_QWORD *)(v0 + 408);
  swift_endAccess();
  v18 = (uint64_t)v14 + OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_asset;
  swift_beginAccess();
  sub_22731A11C(v18, v17, &qword_2540B7B10);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) == 1)
  {
    v19 = *(_QWORD *)(v0 + 408);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    swift_release();
    v6 = &qword_2540B7B10;
    v7 = v19;
    goto LABEL_9;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 32))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416));
  sub_22758E1E4();
  v20 = objc_allocWithZone(MEMORY[0x24BDD1960]);
  v21 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithActivityType_, v21);
  *(_QWORD *)(v0 + 496) = v22;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA300);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227596540;
  *(_QWORD *)(v0 + 304) = 0xD000000000000017;
  *(_QWORD *)(v0 + 312) = 0x80000002275AE7C0;
  v24 = MEMORY[0x24BEE0D00];
  sub_22758EB80();
  *(_QWORD *)(inited + 96) = v24;
  *(_QWORD *)(inited + 72) = 0xD000000000000011;
  *(_QWORD *)(inited + 80) = 0x80000002275AE7E0;
  *(_QWORD *)(v0 + 288) = 0xD000000000000014;
  *(_QWORD *)(v0 + 296) = 0x80000002275AE800;
  sub_22758EB80();
  v25 = sub_22758C7E0();
  *(_QWORD *)(inited + 168) = v24;
  *(_QWORD *)(inited + 144) = v25;
  *(_QWORD *)(inited + 152) = v26;
  sub_22731D4E0(inited);
  v27 = (void *)sub_22758E10C();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setUserInfo_, v27);

  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v28;
  *v28 = v0;
  v28[1] = sub_227317660;
  return sub_22758CE40();
}

uint64_t sub_227317660()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2273176C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 416);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227317780()
{
  uint64_t v0;
  id *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = (id *)(v0 + 320);
  v2 = *(void **)(v0 + 512);
  v3 = *(void **)(v0 + 496);
  swift_release();

  *(_QWORD *)(v0 + 320) = v2;
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5828);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 400);
    v7 = *(_QWORD *)(v0 + 376);
    v6 = *(_QWORD *)(v0 + 384);
    v8 = *(_QWORD *)(v0 + 368);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
    if (qword_2558D4A28 != -1)
      swift_once();
    v9 = *(_QWORD *)(v0 + 392);
    v10 = *(_QWORD *)(v0 + 400);
    v12 = *(_QWORD *)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 376);
    v13 = sub_22758CF9C();
    __swift_project_value_buffer(v13, (uint64_t)qword_2558D61A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v10, v12);
    v14 = sub_22758CF84();
    v15 = sub_22758E6C4();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 464);
    v18 = *(_QWORD *)(v0 + 448);
    v51 = *(_QWORD *)(v0 + 432);
    v52 = *(_QWORD *)(v0 + 456);
    v49 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 416);
    v19 = *(_QWORD *)(v0 + 392);
    v47 = *(_QWORD *)(v0 + 400);
    v20 = *(_QWORD *)(v0 + 368);
    v21 = *(_QWORD *)(v0 + 376);
    if (v16)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v54 = v23;
      *(_DWORD *)v22 = 136315138;
      sub_2273096F0(&qword_2558D5830, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAA60], MEMORY[0x24BDDAA68]);
      v24 = sub_22758EEEC();
      *(_QWORD *)(v0 + 344) = sub_22733611C(v24, v25, &v54);
      sub_22758EA48();
      swift_bridgeObjectRelease();
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v19, v20);
      _os_log_impl(&dword_2272F4000, v14, v15, "Unable to open app - ApplicationLaunchError - %s", v22, 0xCu);
      swift_arrayDestroy();
      v27 = v23;
      v1 = (id *)(v0 + 320);
      MEMORY[0x2276B3D50](v27, -1, -1);
      MEMORY[0x2276B3D50](v22, -1, -1);

      v26(v47, v20);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
    }
    else
    {

      v45 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v45(v19, v20);
      v45(v47, v20);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
    }
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v17, v18);

  }
  else
  {

    if (qword_2558D4A28 != -1)
      swift_once();
    v28 = *(void **)(v0 + 512);
    v29 = sub_22758CF9C();
    __swift_project_value_buffer(v29, (uint64_t)qword_2558D61A0);
    v30 = v28;
    v31 = v28;
    v32 = sub_22758CF84();
    v33 = sub_22758E6C4();
    v34 = os_log_type_enabled(v32, v33);
    v35 = *(void **)(v0 + 512);
    v37 = *(_QWORD *)(v0 + 456);
    v36 = *(_QWORD *)(v0 + 464);
    v38 = *(_QWORD *)(v0 + 448);
    v39 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 424);
    v40 = *(_QWORD *)(v0 + 416);
    if (v34)
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v48 = v38;
      v42 = swift_slowAlloc();
      v54 = v42;
      *(_DWORD *)v41 = 136315138;
      swift_getErrorValue();
      v43 = sub_22758EEEC();
      *(_QWORD *)(v0 + 336) = sub_22733611C(v43, v44, &v54);
      sub_22758EA48();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2272F4000, v32, v33, "Unable to open app - unknown error type - %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v42, -1, -1);
      MEMORY[0x2276B3D50](v41, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v39, v40);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v48);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v39, v40);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227317CE4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[3];
  void *v34;
  void (*v35)();
  uint64_t v36;
  _QWORD v37[4];

  v4 = sub_22758DF20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22758DF68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14, v15, v16, v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v20 = (void *)sub_227316508();
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
      v22 = objc_msgSend(v21, sel_popoverPresentationController);
      if (v22)
      {
        v23 = v22;
        sub_22731A11C(a2, (uint64_t)aBlock, &qword_2540BA340);
        if (v34)
        {
          sub_22730BA80(0, (unint64_t *)&unk_2540B9FE0);
          if (swift_dynamicCast())
            v24 = (void *)v37[0];
          else
            v24 = 0;
        }
        else
        {
          sub_22731A1A4((uint64_t)aBlock, &qword_2540BA340);
          v24 = 0;
        }
        objc_msgSend(v23, sel_setSourceView_, v24);

      }
      v29 = objc_msgSend(v21, sel_popoverPresentationController);
      if (v29)
      {
        v30 = v29;
        objc_msgSend(v29, sel_setPermittedArrowDirections_, 3);

      }
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v21, 1, 0);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v21, 1, 0);

    }
  }
  else
  {
    sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
    v32 = sub_22758E79C();
    sub_22731A11C(a2, (uint64_t)v37, &qword_2540BA340);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a1;
    sub_22731A160((uint64_t)v37, v25 + 24, &qword_2540BA340);
    v35 = sub_22731A0E4;
    v36 = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227367AE4;
    v34 = &block_descriptor_45_0;
    v26 = _Block_copy(aBlock);
    v27 = a1;
    swift_release();
    sub_22758DF44();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
    sub_22758EACC();
    v28 = (void *)v32;
    MEMORY[0x2276B27CC](0, v19, v11, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
}

void sub_227318078(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _BYTE v12[24];
  uint64_t v13;

  v4 = (void *)sub_227316508();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setModalPresentationStyle_, 7);
    v6 = objc_msgSend(v5, sel_popoverPresentationController);
    if (v6)
    {
      v7 = v6;
      sub_22731A11C(a2, (uint64_t)v12, &qword_2540BA340);
      if (v13)
      {
        sub_22730BA80(0, (unint64_t *)&unk_2540B9FE0);
        if (swift_dynamicCast())
          v8 = v11;
        else
          v8 = 0;
      }
      else
      {
        sub_22731A1A4((uint64_t)v12, &qword_2540BA340);
        v8 = 0;
      }
      objc_msgSend(v7, sel_setSourceView_, v8);

    }
    v9 = objc_msgSend(v5, sel_popoverPresentationController);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_setPermittedArrowDirections_, 3);

    }
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v5, 1, 0);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v5, 1, 0);

  }
}

uint64_t sub_2273181F4()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v1 = sub_22758DF20();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v23 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3, v4, v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22758DF68();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v17 = (void *)sub_22758E79C();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_227319EE4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_18;
  v19 = _Block_copy(aBlock);
  v20 = v0;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, v2, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v16, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

void sub_227318408(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  id v28[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227312A98();
  v10 = objc_msgSend(v9, sel_viewControllers);

  if (!v10)
    goto LABEL_12;
  sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
  v11 = sub_22758E3DC();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_4:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x2276B2BEC](0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v12 = *(id *)(v11 + 32);
  }
  v13 = v12;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  v14 = swift_dynamicCastClass();
  if (v14)
  {
    v15 = v14;
    v16 = sub_22758E4C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    sub_22758E49C();
    v17 = v13;
    v18 = sub_22758E490();
    v19 = (_QWORD *)swift_allocObject();
    v20 = MEMORY[0x24BEE6930];
    v19[2] = v18;
    v19[3] = v20;
    v19[4] = v15;
    sub_2274193DC((uint64_t)v8, (uint64_t)&unk_2558D5800, (uint64_t)v19);
    swift_release();

    return;
  }

LABEL_12:
  if (qword_2558D4A28 != -1)
    swift_once();
  v22 = sub_22758CF9C();
  __swift_project_value_buffer(v22, (uint64_t)qword_2558D61A0);
  v28[0] = a1;
  v23 = sub_22758CF84();
  v24 = sub_22758E6B8();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v25 = 138412290;
    v27 = sub_227312A98();
    v28[1] = v27;
    sub_22758EA48();
    *v26 = v27;

    _os_log_impl(&dword_2272F4000, v23, v24, "Could not load view controllers of pageController: %@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v26, -1, -1);
    MEMORY[0x2276B3D50](v25, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_22731875C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_22758E49C();
  v0[3] = sub_22758E490();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_2273187C0;
  return sub_2274BC9B8();
}

uint64_t sub_2273187C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227318848()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22731887C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2273188BC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  id v6;
  id v7;
  _OWORD v9[2];

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_22758EAB4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    v7 = a1;
  }
  a4(v9);

  return sub_22731A1A4((uint64_t)v9, &qword_2540BA340);
}

void sub_227318990(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  _QWORD aBlock[6];

  v10 = sub_22758DF20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22758DF68();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20, v21, v22, v23);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v26 = (void *)sub_227316508();
    if (v26)
    {
      v38 = v26;
      objc_msgSend(v26, sel_setModalPresentationStyle_, 7);
      v27 = objc_msgSend(v38, sel_popoverPresentationController);
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(a1, sel_view);
        objc_msgSend(v28, sel_setSourceView_, v29);

      }
      v30 = objc_msgSend(v38, sel_popoverPresentationController);
      objc_msgSend(v30, sel_setSourceRect_, a2, a3, a4, a5);

      v31 = objc_msgSend(v38, sel_popoverPresentationController);
      if (v31)
      {
        v32 = v31;
        objc_msgSend(v31, sel_setPermittedArrowDirections_, 3);

      }
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v38, 1, 0);

    }
  }
  else
  {
    sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
    v38 = (id)sub_22758E79C();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = a1;
    *(double *)(v33 + 24) = a2;
    *(double *)(v33 + 32) = a3;
    *(double *)(v33 + 40) = a4;
    *(double *)(v33 + 48) = a5;
    aBlock[4] = sub_227319EA0;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227367AE4;
    aBlock[3] = &block_descriptor_12;
    v34 = _Block_copy(aBlock);
    v35 = a1;
    swift_release();
    sub_22758DF44();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
    sub_22758EACC();
    v36 = v38;
    MEMORY[0x2276B27CC](0, v25, v17, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
  }
}

void sub_227318D04(void *a1, double a2, double a3, double a4, double a5)
{
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  v10 = (void *)sub_227316508();
  if (v10)
  {
    v17 = v10;
    objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
    v11 = objc_msgSend(v17, sel_popoverPresentationController);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(a1, sel_view);
      objc_msgSend(v12, sel_setSourceView_, v13);

    }
    v14 = objc_msgSend(v17, sel_popoverPresentationController);
    objc_msgSend(v14, sel_setSourceRect_, a2, a3, a4, a5);

    v15 = objc_msgSend(v17, sel_popoverPresentationController);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, sel_setPermittedArrowDirections_, 3);

    }
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v17, 1, 0);

  }
}

uint64_t sub_227318EE4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  return swift_release();
}

uint64_t sub_227318F4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v7 = MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10, v11, v12, v13);
  v15 = (char *)&v17 - v14;
  sub_22731A11C(a1, (uint64_t)&v17 - v14, &qword_2540B7B10);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22731A11C((uint64_t)v15, (uint64_t)v9, &qword_2540B7B10);
  swift_retain();
  sub_22758D1A0();
  return sub_22731A1A4((uint64_t)v15, &qword_2540B7B10);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_227319064()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227319088()
{
  return sub_227319EAC((uint64_t (*)(_QWORD, double, double, double, double))sub_227318990);
}

void sub_227319094()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_freezeFrameDisplayAppearanceSubscription] = 0;
  v1 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_22758ECE8())
    v2 = sub_227327650(MEMORY[0x24BEE4AF8]);
  else
    v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_cancellables] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages] = v1;
  v3 = &v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_activePageIndexPath];
  MEMORY[0x2276B0AB0](0, 0);
  v4 = sub_22758CAD4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  v5 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageSpacing;
  if (qword_2558D4B08 != -1)
    swift_once();
  *(_QWORD *)&v0[v5] = qword_2558F3C78;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___pageController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___assetURLs] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlPositionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7D0]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControlConstraints] = v1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_textOverlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController____lazy_storage___textReaderModeButtonItem] = 0;

  sub_22758ECC4();
  __break(1u);
}

id sub_227319250(unint64_t a1)
{
  uint64_t v2;
  id result;
  uint64_t i;
  uint64_t j;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;
  id v24;
  char v25;
  unint64_t v26;

  v26 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_22758ECE8();
    v2 = (uint64_t)result;
    if (!result)
      goto LABEL_19;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (!v2)
      goto LABEL_19;
  }
  if (v2 < 1)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v2; ++i)
    {
      MEMORY[0x2276B2BEC](i, a1);
      type metadata accessor for FreezeFramePageContentViewController();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x2276B23C4]();
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22758E400();
        sub_22758E424();
        sub_22758E3F4();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    type metadata accessor for FreezeFramePageContentViewController();
    for (j = 0; j != v2; ++j)
    {
      v6 = *(void **)(a1 + 8 * j + 32);
      if (swift_dynamicCastClass())
      {
        MEMORY[0x2276B23C4](v6);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22758E400();
        sub_22758E424();
        sub_22758E3F4();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (v26 >> 62)
    goto LABEL_42;
  v7 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_22758ECE8())
  {
    v8 = 4;
    v9 = 0;
    if ((v26 & 0xC000000000000001) != 0)
    {
LABEL_22:
      v10 = (char *)MEMORY[0x2276B2BEC](v9, v26);
      goto LABEL_24;
    }
    while (1)
    {
      v10 = (char *)*(id *)(v26 + 8 * v8);
LABEL_24:
      v11 = v10;
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      sub_2274BC4B0();
      if (qword_2558D4A40 != -1)
        swift_once();
      v13 = sub_22758CF9C();
      __swift_project_value_buffer(v13, (uint64_t)qword_2558D61E8);
      v14 = sub_22758CF84();
      v15 = sub_22758E6B8();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_2272F4000, v14, v15, "resetImageCentering", v16, 2u);
        MEMORY[0x2276B3D50](v16, -1, -1);
      }

      v17 = *(void **)&v11[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_imageView];
      result = objc_msgSend(v11, sel_view);
      if (!result)
        goto LABEL_45;
      v18 = result;
      objc_msgSend(result, sel_center);
      v20 = v19;
      v22 = v21;

      sub_2274C18A0(v17, v20, v22);
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if ((v25 & 1) != 0)
      {
        v23 = sub_22758EE50();
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {

          if (v12 == v7)
            return (id)swift_bridgeObjectRelease_n();
        }
        else
        {
          v24 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC16MagnifierSupport36FreezeFramePageContentViewController_scrollView], sel_panGestureRecognizer);
          objc_msgSend(v24, sel_setEnabled_, !sub_2274BDC40());

          if (v12 == v7)
            return (id)swift_bridgeObjectRelease_n();
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        if (v12 == v7)
          return (id)swift_bridgeObjectRelease_n();
      }
      v9 = ++v8 - 4;
      if ((v26 & 0xC000000000000001) != 0)
        goto LABEL_22;
    }
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
  }
  return (id)swift_bridgeObjectRelease_n();
}

void sub_227319724(void *a1, char a2, char a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;

  v7 = (_QWORD *)sub_22758CAD4();
  v8 = *(v7 - 1);
  MEMORY[0x24BDAC7A8](v7, v9, v10, v11, v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
    return;
  v15 = objc_msgSend(a1, sel_viewControllers);
  if (!v15)
    return;
  v16 = v15;
  sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
  v17 = sub_22758E3DC();

  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v31 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_20;
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x2276B2BEC](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_23:
      v32 = v7;
      swift_bridgeObjectRetain();
      v28 = sub_22758ECE8();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    v18 = *(id *)(v17 + 32);
  }
  v33 = v18;
  swift_bridgeObjectRelease();
  type metadata accessor for FreezeFramePageContentViewController();
  v19 = swift_dynamicCastClass();
  if (!v19)
  {

    return;
  }
  v20 = v19;
  v21 = (unint64_t *)(v3 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages);
  swift_beginAccess();
  v22 = *v21;
  swift_bridgeObjectRetain();
  sub_2274AB3D8(v20, v22);
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0 || (a2 & 1) == 0)
  {

    return;
  }
  MEMORY[0x2276B0AB0](v24, 0);
  sub_227313C70((uint64_t)v14);
  (*(void (**)(char *, _QWORD *))(v8 + 8))(v14, v7);
  v27 = OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pageControl), sel_setCurrentPage_, v24);
  v7 = *(_QWORD **)(v3 + v27);
  if (*v21 >> 62)
    goto LABEL_23;
  v28 = *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = v7;
LABEL_13:
  v30 = 0.0;
  if (v28 > 1)
    v30 = 1.0;
  objc_msgSend(v7, sel_setAlpha_, v30);

}

uint64_t sub_2273199F0(void *a1)
{
  char *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t result;
  unint64_t v18;
  id v19;
  id v20;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_layoutDirection);

  if (v4 == (id)1)
    v5 = 1;
  else
    v5 = -1;
  type metadata accessor for FreezeFramePageContentViewController();
  v6 = swift_dynamicCastClass();
  if (!v6)
    return 0;
  v7 = v6;
  v8 = (unint64_t *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  v9 = *v8;
  v10 = a1;
  swift_bridgeObjectRetain();
  sub_2274AB3D8(v7, v9);
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_15:

    return 0;
  }
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    v15 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = __OFADD__(v12, v5);
  v12 += v5;
  if (v16)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v12 & 0x8000000000000000) != 0 || v12 >= v15)
    goto LABEL_15;
  result = swift_beginAccess();
  v18 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v19 = (id)MEMORY[0x2276B2BEC](v12);
    goto LABEL_14;
  }
  if (v12 < *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v18 + 8 * v12 + 32);
LABEL_14:
    v20 = v19;
    swift_endAccess();

    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_227319B94(void *a1)
{
  char *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t result;
  unint64_t v18;
  id v19;
  id v20;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_layoutDirection);

  if (v4 == (id)1)
    v5 = -1;
  else
    v5 = 1;
  type metadata accessor for FreezeFramePageContentViewController();
  v6 = swift_dynamicCastClass();
  if (!v6)
    return 0;
  v7 = v6;
  v8 = (unint64_t *)&v1[OBJC_IVAR____TtC16MagnifierSupport33FreezeFramePageFlippingController_pages];
  swift_beginAccess();
  v9 = *v8;
  v10 = a1;
  swift_bridgeObjectRetain();
  sub_2274AB3D8(v7, v9);
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_15:

    return 0;
  }
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    v15 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = __OFADD__(v12, v5);
  v12 += v5;
  if (v16)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v12 & 0x8000000000000000) != 0 || v12 >= v15)
    goto LABEL_15;
  result = swift_beginAccess();
  v18 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v19 = (id)MEMORY[0x2276B2BEC](v12);
    goto LABEL_14;
  }
  if (v12 < *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v18 + 8 * v12 + 32);
LABEL_14:
    v20 = v19;
    swift_endAccess();

    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_227319E80(uint64_t a1)
{
  uint64_t v1;

  return sub_2274193B8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_227319EA0()
{
  return sub_227319EAC((uint64_t (*)(_QWORD, double, double, double, double))sub_227318D04);
}

uint64_t sub_227319EAC(uint64_t (*a1)(_QWORD, double, double, double, double))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_227319EC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227319EE4()
{
  uint64_t v0;

  sub_227318408(*(void **)(v0 + 16));
}

uint64_t sub_227319EEC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227319F18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227319F84;
  return sub_22731875C();
}

uint64_t sub_227319F84()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_227319FD0()
{
  uint64_t v0;

  sub_227317CE4(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_227319FDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22731A000()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22731A034(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227319F84;
  return sub_22731712C(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  return swift_deallocObject();
}

void sub_22731A0E4()
{
  uint64_t v0;

  sub_227318078(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_22731A0F0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_22731A114()
{
  uint64_t v0;

  return sub_227315BB4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22731A11C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22731A160(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22731A1A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22731A1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22731A268(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_22731A288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_22731A2D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540B9EE0;
  if (!qword_2540B9EE0)
  {
    v1 = sub_22730BA80(255, (unint64_t *)&qword_2540B9EF0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_2540B9EE0);
  }
  return result;
}

uint64_t sub_22731A330()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22731A354(char a1, char a2, double a3, double a4)
{
  uint64_t v4;

  sub_227315518(a1, a2, v4, a3, a4);
}

uint64_t sub_22731A35C(uint64_t a1)
{
  uint64_t v1;

  return sub_2274E2648(a1, *(uint64_t (**)(_QWORD, _QWORD, double, double))(v1 + 16));
}

void sub_22731A364()
{
  uint64_t v0;

  sub_2273137D0(*(uint64_t **)(v0 + 16));
}

void sub_22731A36C()
{
  uint64_t v0;

  sub_2273141FC(*(uint64_t **)(v0 + 16));
}

uint64_t sub_22731A374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22731A404()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

BOOL sub_22731A528(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

_QWORD *sub_22731A540@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_22731A560(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF982C0;
}

uint64_t sub_22731A570(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_22731A584(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_22731A598(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_22731A5AC(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_22731A5C0()
{
  sub_22731BE10();
  return sub_22758E3AC();
}

uint64_t sub_22731A61C()
{
  sub_22731BE10();
  return sub_22758E388();
}

uint64_t sub_22731A668()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

id sub_22731A778()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t ObjCClassFromMetadata;
  void *v27;
  id result;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  objc_super v35;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA0C0);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9AE0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9930);
  v33 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35.receiver = v1;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  v25 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView];
  objc_msgSend(v25, sel_setDataSource_, v1);
  objc_msgSend(v25, sel_setDelegate_, v1);
  sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v27 = (void *)sub_22758E1B4();
  objc_msgSend(v25, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v27);

  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v29 = result;
  objc_msgSend(result, sel_addSubview_, v25);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v30 = result;
  sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
  swift_bridgeObjectRelease();

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9BC0);
  sub_22758D170();
  swift_endAccess();
  v34 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v31 = sub_22758EA00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
  sub_22730BA80(0, (unint64_t *)&unk_2540BA0E0);
  sub_22730BB7C((unint64_t *)&unk_2540B9AD0, &qword_2540B9AE0, MEMORY[0x24BDB9EE8]);
  sub_22730BAB8();
  sub_22758D200();
  sub_22730BB10((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9920, &qword_2540B9930, MEMORY[0x24BDB9A08]);
  v32 = sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v18);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = v32;
  return (id)swift_release();
}

void sub_22731AB74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[8];

  v3 = sub_22758CAD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v11 = MEMORY[0x2276B3E34](a2 + 16);
  if (v11)
  {
    v12 = (void *)v11;
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (v16[7] == 1)
    {
      objc_msgSend(v12, sel_beginUpdates);
      MEMORY[0x2276B0A98](1, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D50E0);
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_227593AB0;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v4 + 16))(v14 + v13, v10, v3);
      v15 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_reloadRowsAtIndexPaths_withRowAnimation_, v15, 100);

      objc_msgSend(v12, sel_endUpdates);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {

    }
  }
}

void sub_22731AD90(char a1)
{
  void *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

}

id sub_22731AF40(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks] = &unk_24EF982E8;
  v8 = OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView;
  v9 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v10 = v4;
  v11 = objc_msgSend(v9, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v4[v8] = v13;
  *(_QWORD *)&v10[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = 0;

  if (a2)
  {
    v15 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v10;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id sub_22731B11C(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks] = &unk_24EF98310;
  v5 = OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_tableView;
  v6 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v7 = v2;
  v8 = objc_msgSend(v6, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v2[v5] = v10;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_speechFeedbackSubscription] = 0;

  v14.receiver = v7;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

uint64_t type metadata accessor for TextDetectionSettingsViewController()
{
  return objc_opt_self();
}

id sub_22731B320(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;

  v2 = v1;
  v4 = (id)0xD000000000000011;
  v5 = (void *)sub_22758E1B4();
  v6 = sub_22758CA74();
  v7 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v5, v6);

  v8 = v7;
  v9 = sub_22758CAC8();
  if (v9)
  {
    if (v9 == 1)
    {
      v10 = objc_msgSend(v8, sel_textLabel);
      if (v10)
      {
        v11 = v10;
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v14 = (void *)sub_22758E1B4();
        v15 = (void *)sub_22758E1B4();
        v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

        sub_22758E1E4();
        v17 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setText_, v17);

      }
      v18 = objc_msgSend(v8, sel_textLabel);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, sel_setNumberOfLines_, 0);

      }
      v20 = objc_msgSend(v8, sel_textLabel);
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, sel_setLineBreakMode_, 0);

      }
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
      if (qword_2540B87B8 != -1)
        swift_once();
      v23 = qword_2540BCDD0
          + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
      swift_beginAccess();
      v44 = *(_QWORD *)v23;
      v46 = *(_QWORD *)(v23 + 8);
      LOBYTE(v48) = *(_BYTE *)(v23 + 16);
      v24 = qword_2540B9100;
      v25 = swift_bridgeObjectRetain();
      if (v24 != -1)
        v25 = swift_once();
      MEMORY[0x24BDAC7A8](v25, v26, v27, v28, v29);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setOn_, v50, v44, v46, v48);
      objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v2, sel_didToggleFlashlightSwitch_, 4096);
      objc_msgSend(v8, sel_setAccessoryView_, v22);
      objc_msgSend(v8, sel_setAccessoryType_, 0);

    }
    goto LABEL_22;
  }
  v30 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport35TextDetectionSettingsViewController_availableTextDetectionFeedbacks);
  v31 = sub_22758CA98();
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v31 < *(_QWORD *)(v30 + 16))
  {
    v6 = *(unsigned __int8 *)(v30 + v31 + 32);
    v32 = objc_msgSend(v8, sel_textLabel);
    if (v32)
    {
      v33 = v32;
      sub_22731A404();
      v34 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setText_, v34);

    }
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
    if (qword_2540B87B8 == -1)
      goto LABEL_19;
    goto LABEL_25;
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_19:
  v35 = (uint64_t *)(qword_2540BCDD0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
  swift_beginAccess();
  v45 = *v35;
  v47 = v35[1];
  v49 = v35[2];
  v36 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v37 = swift_bridgeObjectRetain();
  if (v36 != -1)
    v37 = swift_once();
  MEMORY[0x24BDAC7A8](v37, v38, v39, v40, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D70);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = ((uint64_t (*)(uint64_t))sub_227367604)(v6);
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setOn_, v42 & 1, v45, v47, v49);
  objc_msgSend(v4, sel_setTag_, v6);
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v2, sel_didToggleFeedbackSwitch_, 4096);
  objc_msgSend(v8, sel_setAccessoryView_, v4);
  objc_msgSend(v8, sel_setAccessoryType_, 0);

LABEL_22:
  return v8;
}

uint64_t getEnumTagSinglePayload for TextDetectionFeedback(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextDetectionFeedback(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22731BD10 + 4 * byte_227596785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22731BD44 + 4 * byte_227596780[v4]))();
}

uint64_t sub_22731BD44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22731BD4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22731BD54);
  return result;
}

uint64_t sub_22731BD60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22731BD68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22731BD6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22731BD74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22731BD80(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TextDetectionFeedback()
{
  return &type metadata for TextDetectionFeedback;
}

unint64_t sub_22731BDA0()
{
  unint64_t result;

  result = qword_2558D5940;
  if (!qword_2558D5940)
  {
    result = MEMORY[0x2276B3C78](&unk_227596940, &type metadata for TextDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D5940);
  }
  return result;
}

uint64_t sub_22731BDE4()
{
  return sub_22730BB7C(&qword_2558D5948, &qword_2540B9D70, MEMORY[0x24BEE12E0]);
}

unint64_t sub_22731BE10()
{
  unint64_t result;

  result = qword_2540B9248;
  if (!qword_2540B9248)
  {
    result = MEMORY[0x2276B3C78](&unk_2275968C8, &type metadata for TextDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2540B9248);
  }
  return result;
}

id sub_22731BE54(void *a1)
{
  id result;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;

  result = objc_msgSend(a1, sel_tag);
  if (result)
  {
    if (result != (id)1)
      return result;
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  if (objc_msgSend(a1, sel_isOn))
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_beginAccess();
    v4 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    if (v4 != -1)
      v5 = swift_once();
    MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D70);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = (char *)v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_2273A4BEC(0, *(_QWORD *)(v25 + 16) + 1, 1, (char *)v25);
    v12 = *((_QWORD *)v10 + 2);
    v11 = *((_QWORD *)v10 + 3);
    if (v12 >= v11 >> 1)
      v10 = sub_2273A4BEC((char *)(v11 > 1), v12 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v12 + 1;
    v10[v12 + 32] = v3;
    swift_bridgeObjectRelease();
    sub_227444988((uint64_t)v10, 1);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_beginAccess();
    v13 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    if (v13 != -1)
      v14 = swift_once();
    MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D70);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v25 + 16);
    if (v19)
    {
      v20 = (unsigned __int8 *)(v25 + 32);
      v21 = MEMORY[0x24BEE4AF8];
      do
      {
        v24 = *v20;
        if (v3 != v24)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_227324780(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v23 = *(_QWORD *)(v21 + 16);
          v22 = *(_QWORD *)(v21 + 24);
          if (v23 >= v22 >> 1)
            sub_227324780(v22 > 1, v23 + 1, 1);
          *(_QWORD *)(v21 + 16) = v23 + 1;
          *(_BYTE *)(v21 + v23 + 32) = v24;
        }
        ++v20;
        --v19;
      }
      while (v19);
    }
    else
    {
      v21 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    sub_227444988(v21, 1);
    return (id)swift_release();
  }
}

uint64_t sub_22731C22C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[23];
  unsigned __int8 v20;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0;
  v11 = objc_msgSend(a1, sel_isOn);
  v12 = v10 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__textDetectionFlashlightEnabled;
  swift_beginAccess();
  v20 = v11;
  if (qword_2540B9100 != -1)
    swift_once();
  v13 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  *(_QWORD *)&v19[-16] = &v20;
  *(_QWORD *)&v19[-8] = v12;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

uint64_t sub_22731C3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;

  if (a1)
    return 0;
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_22758E1B4();
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  v1 = sub_22758E1E4();
  return v1;
}

uint64_t sub_22731C49C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2273AB4B8(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_22731C4B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22731C4D8(uint64_t a1)
{
  uint64_t v1;

  sub_22731AB74(a1, v1);
}

uint64_t sub_22731C4E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_22731C49C(a1);
}

uint64_t MFReaderFormatterTheme.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_22758C984();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22758C978();
  v8 = sub_22758C948();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  return v8;
}

void sub_22731C58C()
{
  __asm { BR              X10 }
}

uint64_t sub_22731C5B4()
{
  return MEMORY[0x2276B1C68](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.901960784, 0.901960784, 0.901960784, 1.0));
}

void sub_22731C680()
{
  __asm { BR              X10 }
}

uint64_t sub_22731C6AC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t sub_22731C904()
{
  _BYTE *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if (*v0 != 4)
    return 0;
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (void *)sub_22758E1B4();
  v4 = (void *)sub_22758E1B4();
  v5 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, v4);

  v6 = sub_22758E1E4();
  return v6;
}

MagnifierSupport::MFReaderFormatterTheme_optional __swiftcall MFReaderFormatterTheme.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MagnifierSupport::MFReaderFormatterTheme_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22758ED48();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static MFReaderFormatterTheme.allCases.getter()
{
  return &unk_24EF983D0;
}

uint64_t MFReaderFormatterTheme.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22731CA98 + 4 * byte_2275969D0[*v0]))(0x6574696877, 0xE500000000000000);
}

uint64_t sub_22731CA98()
{
  return 0x6169706573;
}

uint64_t sub_22731CAA8()
{
  return 2036429415;
}

uint64_t sub_22731CAB8()
{
  return 0x6B63616C62;
}

uint64_t sub_22731CAC8()
{
  return 0x6D6F74737563;
}

void sub_22731CADC(char *a1)
{
  sub_227392DC0(*a1);
}

unint64_t sub_22731CAEC()
{
  unint64_t result;

  result = qword_2558D5950;
  if (!qword_2558D5950)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFormatterTheme, &type metadata for MFReaderFormatterTheme);
    atomic_store(result, (unint64_t *)&qword_2558D5950);
  }
  return result;
}

void sub_22731CB30()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22758EF4C();
  __asm { BR              X9 }
}

uint64_t sub_22731CB78()
{
  sub_22758E274();
  swift_bridgeObjectRelease();
  return sub_22758EF88();
}

void sub_22731CBE4()
{
  __asm { BR              X10 }
}

uint64_t sub_22731CC1C()
{
  sub_22758E274();
  return swift_bridgeObjectRelease();
}

void sub_22731CC74()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22758EF4C();
  __asm { BR              X9 }
}

uint64_t sub_22731CCB8()
{
  sub_22758E274();
  swift_bridgeObjectRelease();
  return sub_22758EF88();
}

MagnifierSupport::MFReaderFormatterTheme_optional sub_22731CD24(Swift::String *a1)
{
  return MFReaderFormatterTheme.init(rawValue:)(*a1);
}

uint64_t sub_22731CD30()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_22731CD5C + 4 * byte_2275969E4[*v0]))();
}

void sub_22731CD5C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6169706573;
  a1[1] = v1;
}

void sub_22731CD70(_QWORD *a1@<X8>)
{
  *a1 = 2036429415;
  a1[1] = 0xE400000000000000;
}

void sub_22731CD84(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6B63616C62;
  a1[1] = v1;
}

void sub_22731CD98(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74737563;
  a1[1] = 0xE600000000000000;
}

unint64_t sub_22731CDB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5958;
  if (!qword_2558D5958)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D5960);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5958);
  }
  return result;
}

void sub_22731CE00(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF983F8;
}

uint64_t sub_22731CE10()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_22731CE1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = sub_22758C984();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22758C978();
  v10 = sub_22758C948();
  v12 = v11;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t sub_22731CEAC()
{
  sub_22731D0B0();
  return sub_22758E394();
}

uint64_t sub_22731CF08()
{
  sub_22731D0B0();
  return sub_22758E370();
}

uint64_t getEnumTagSinglePayload for MFReaderFormatterTheme(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderFormatterTheme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22731D030 + 4 * byte_2275969EE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22731D064 + 4 * byte_2275969E9[v4]))();
}

uint64_t sub_22731D064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22731D06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22731D074);
  return result;
}

uint64_t sub_22731D080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22731D088);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22731D08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22731D094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MFReaderFormatterTheme()
{
  return &type metadata for MFReaderFormatterTheme;
}

unint64_t sub_22731D0B0()
{
  unint64_t result;

  result = qword_2558D5968;
  if (!qword_2558D5968)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFormatterTheme, &type metadata for MFReaderFormatterTheme);
    atomic_store(result, (unint64_t *)&qword_2558D5968);
  }
  return result;
}

_QWORD *sub_22731D0F4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  _QWORD v15[38];

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1E0);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_retain();
  memcpy(v15, (const void *)(a1 + 32), 0x128uLL);
  v4 = v15[0];
  v5 = v15[1];
  sub_227320260((uint64_t)v15);
  v6 = sub_2274DE434(v4, v5);
  if ((v7 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v8 = 328;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    v9 = (uint64_t *)(v2[6] + 16 * v6);
    *v9 = v4;
    v9[1] = v5;
    result = memcpy((void *)(v2[7] + 280 * v6), &v15[2], 0x118uLL);
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v2[2] = v13;
    if (!--v3)
      goto LABEL_9;
    memcpy(v15, (const void *)(a1 + v8), 0x128uLL);
    v4 = v15[0];
    v5 = v15[1];
    sub_227320260((uint64_t)v15);
    v6 = sub_2274DE434(v4, v5);
    v8 += 296;
    if ((v14 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_22731D264(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558DC9C0, &qword_2558D5A88, (uint64_t (*)(uint64_t))sub_2274DE4F4);
}

unint64_t sub_22731D280(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5AA0, &qword_2558D5AA8, (uint64_t (*)(uint64_t))sub_2274DE574);
}

unint64_t sub_22731D29C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_22758ED18();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22731A11C(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_227320358(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D3C4(uint64_t a1)
{
  return sub_22731E5E8(a1, &qword_2558D5B98);
}

unint64_t sub_22731D3D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AB8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2274DE434(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D4E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA210);
  v2 = sub_22758ED18();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22731A11C(v6, (uint64_t)v15, &qword_2540BA1B8);
    result = sub_2274DE404((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_227320358(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D620(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AC8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_2274DE4F4((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D728(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1F8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_BYTE *)v4;
    v6 = *(v4 - 1);
    result = sub_2274DE574();
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_BYTE *)(v2[7] + result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D824(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5A90);
  v2 = sub_22758ED18();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22731A11C(v6, (uint64_t)&v13, &qword_2558D5A98);
    v7 = v13;
    result = sub_2274DE648(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_227320358(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731D950(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1F0);
  v2 = sub_22758ED18();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22731A11C(v6, (uint64_t)&v15, &qword_2540B9CB8);
    v7 = v15;
    v8 = v16;
    result = sub_2274DE434(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_227320358(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731DA84(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AC0);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2274DE434(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731DBA4(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5B68, &qword_2558D5B70, sub_2274DE574);
}

unint64_t sub_22731DBC0(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5B88, &qword_2558D5B90, sub_2274DE574);
}

unint64_t sub_22731DBDC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1D0);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v12 = *(_OWORD *)v4;
    v6 = *v4;
    result = sub_2274DE634(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v12;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731DCEC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA200);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_2274DE574(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731DDE8(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2540BA208, (uint64_t *)&unk_2540B9F98, sub_2274DE574);
}

unint64_t sub_22731DE04(uint64_t a1)
{
  return sub_22731E5E8(a1, &qword_2558D5B78);
}

unint64_t sub_22731DE10(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5B60);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    result = sub_2274DE84C(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731DF10(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5B58);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2274DE498(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E01C(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5B48, &qword_2558D5B50, sub_2274DE574);
}

unint64_t sub_22731E038(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5B40);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_2274DE574(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E140(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1E8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2274DE434(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E250(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5B30, &qword_2558D5B38, sub_2274DE574);
}

unint64_t sub_22731E26C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AE0);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22731A11C(v4, (uint64_t)v15, &qword_2558D5AE8);
    result = sub_2274DE404((uint64_t)v15);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 40 * result;
    v8 = v15[0];
    v9 = v15[1];
    *(_QWORD *)(v7 + 32) = v16;
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    v11 = v18;
    *v10 = v17;
    v10[1] = v11;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E39C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AF0);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_DWORD *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2274DE434(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_DWORD *)(v12 + 8) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E4C4(uint64_t a1)
{
  return sub_22731E5E8(a1, &qword_2558D5B10);
}

unint64_t sub_22731E4D0(uint64_t a1)
{
  return sub_22731E5E8(a1, &qword_2558D5B08);
}

unint64_t sub_22731E4DC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA1D8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2274DE634(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E5DC(uint64_t a1)
{
  return sub_22731E5E8(a1, &qword_2558D5B00);
}

unint64_t sub_22731E5E8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_22758ED18();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v14 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_2274DE434(v6, v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E70C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AF8);
  v2 = (_QWORD *)sub_22758ED18();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    result = sub_2274DE980((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22731E814(uint64_t a1)
{
  return sub_22731D29C(a1, &qword_2558D5B20, &qword_2558D5B28, sub_2274DE574);
}

id sub_22731E830()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = objc_allocWithZone(MEMORY[0x24BDFD248]);
    swift_unownedRetain();
    v4 = objc_msgSend(v3, sel_initWithVersion_, 0x10000);
    objc_msgSend(v4, sel_setEnableObjectTracking_, 1);
    objc_msgSend(v4, sel_setEnableSegmentation_, 0);
    objc_msgSend(v4, sel_setNetworkResolution_, 0);
    objc_msgSend(v4, sel_setRunningFrameRate_, 0);
    swift_unownedRelease();
    v5 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v4;
    v2 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

uint64_t ANSTPersonDetectionManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ANSTPersonDetectionManager.init()();
  return v0;
}

_QWORD *ANSTPersonDetectionManager.init()()
{
  _QWORD *v0;

  v0[2] = 0;
  v0[3] = sub_22731EDEC(MEMORY[0x24BEE4AF8]);
  v0[4] = 0;
  sub_22731EA44();
  return v0;
}

void sub_22731EA44()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_22731E830();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFD240]), sel_initWithConfiguration_, v1);

  v3 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = v2;

  v4 = *(void **)(v0 + 16);
  if (v4)
  {
    v9[0] = 0;
    if (objc_msgSend(v4, sel_prepareWithError_, v9))
    {
      v5 = v9[0];
    }
    else
    {
      v6 = v9[0];
      v7 = (void *)sub_22758C75C();

      swift_willThrow();
      sub_2273203F0();
      swift_allocError();
      *(_QWORD *)(v8 + 8) = 0;
      *(_QWORD *)(v8 + 16) = 0;
      *(_QWORD *)v8 = 11;
      *(_BYTE *)(v8 + 24) = 4;
      swift_willThrow();

    }
  }
}

_QWORD *sub_22731EB68(void *a1)
{
  return sub_22731F160(a1);
}

uint64_t ANSTPersonDetectionManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ANSTPersonDetectionManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_22731EBE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void **v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AB0);
  v3 = (_QWORD *)sub_22758ED18();
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_2274DE4F0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    v14 = v5;
    result = sub_2274DE4F0(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_22731ECD8(uint64_t a1)
{
  return sub_22731F084(a1, &qword_2558D5B80, sub_2274DE4F0);
}

unint64_t sub_22731ECEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  char v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _BYTE v11[8];
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5AD0);
    v3 = (_QWORD *)sub_22758ED18();
    for (i = a1 + 32; ; i += 40)
    {
      sub_22731A11C(i, (uint64_t)v11, &qword_2558D5AD8);
      v5 = v11[0];
      result = sub_2274DE4F0(v11[0]);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      result = (unint64_t)sub_227320358(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22731EDEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BD8);
    v11 = (_QWORD *)sub_22758ED18();
    v12 = (char *)v9 + *(int *)(v2 + 48);
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_22731A11C(v13, (uint64_t)v9, &qword_2558D5BD0);
      v15 = *v9;
      result = sub_2274DE604(*v9);
      if ((v17 & 1) != 0)
        break;
      v18 = result;
      *(_QWORD *)((char *)v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v11[6] + 8 * result) = v15;
      v19 = v11[7];
      v20 = sub_22758C984();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v12, v20);
      v21 = v11[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_10;
      v11[2] = v23;
      v13 += v14;
      if (!--v10)
        return (unint64_t)v11;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22731EF54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  __int128 v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BC8);
    v3 = (_QWORD *)sub_22758ED18();
    for (i = (_OWORD *)(a1 + 80); ; i += 4)
    {
      v5 = *((_QWORD *)i - 6);
      v6 = *((_QWORD *)i - 5);
      v8 = (void *)*((_QWORD *)i - 4);
      v7 = (void *)*((_QWORD *)i - 3);
      v10 = (void *)*((_QWORD *)i - 2);
      v9 = *((_QWORD *)i - 1);
      v20 = *i;
      result = sub_2274DE604(v5);
      if ((v12 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v13 = v3[7] + 56 * result;
      *(_QWORD *)v13 = v6;
      *(_QWORD *)(v13 + 8) = v8;
      *(_QWORD *)(v13 + 16) = v7;
      *(_QWORD *)(v13 + 24) = v10;
      *(_QWORD *)(v13 + 32) = v9;
      *(_OWORD *)(v13 + 40) = v20;
      v14 = v3[2];
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        goto LABEL_10;
      v3[2] = v16;
      v17 = v10;
      swift_bridgeObjectRetain();
      v18 = v8;
      v19 = v7;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22731F070(uint64_t a1)
{
  return sub_22731F084(a1, &qword_2558D5B18, sub_2274DE4F0);
}

unint64_t sub_22731F084(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  _DWORD *i;
  unsigned __int8 v8;
  int v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v6 = (_QWORD *)sub_22758ED18();
    for (i = (_DWORD *)(a1 + 36); ; i += 2)
    {
      v8 = *((_BYTE *)i - 4);
      v9 = *i;
      result = a3(v8);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v6[6] + result) = v8;
      *(_DWORD *)(v6[7] + 4 * result) = v9;
      v12 = v6[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v6[2] = v14;
      if (!--v3)
        return (unint64_t)v6;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

_QWORD *sub_22731F160(void *a1)
{
  _QWORD *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  __CVBuffer *v8;
  int64_t Width;
  __CVBuffer *v10;
  int64_t Height;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  unint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)v1[2];
  if (!v2)
  {
    sub_2273203F0();
    swift_allocError();
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)v16 = 12;
    *(_BYTE *)(v16 + 24) = 4;
    swift_willThrow();
    return v1;
  }
  v4 = v2;
  v5 = objc_msgSend(a1, sel_capturedImage);
  v40[0] = 0;
  v6 = objc_msgSend(v4, sel_resultForPixelBuffer_orientation_error_, v5, 4, v40);

  if (!v6)
  {
    v17 = v40[0];
    v1 = (_QWORD *)sub_22758C75C();

    swift_willThrow();
    sub_2273203F0();
    swift_allocError();
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)v18 = 12;
    *(_BYTE *)(v18 + 24) = 4;
    swift_willThrow();

    return v1;
  }
  v7 = v40[0];
  v8 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
  Width = CVPixelBufferGetWidth(v8);

  v10 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
  Height = CVPixelBufferGetHeight(v10);

  v12 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x24BDFD218]);
  if (v12)
  {
    v13 = v12;
    sub_22730BA80(0, &qword_2558D5BC0);
    v14 = sub_22758E3DC();

    if (!(v14 >> 62))
      goto LABEL_5;
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
    if (!(MEMORY[0x24BEE4AF8] >> 62))
    {
LABEL_5:
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      sub_22758EE68();
      sub_22730BA80(0, &qword_2558D5BB0);
      if (swift_dynamicCastMetatype())
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = Height;
        v21 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21)
        {
          v38 = Width;
          v22 = v15 + 32;
          while (1)
          {
            objc_opt_self();
            if (!swift_dynamicCastObjCClass())
              break;
            v22 += 8;
            if (!--v21)
            {
              swift_bridgeObjectRelease();
              goto LABEL_18;
            }
          }
          swift_bridgeObjectRelease();
          v14 = v15 | 1;
LABEL_18:
          Width = v38;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        Height = v20;
      }
      goto LABEL_20;
    }
  }
  sub_22730BA80(0, &qword_2558D5BB0);
  swift_bridgeObjectRetain();
  v19 = sub_22758ECD0();
  swift_bridgeObjectRelease_n();
  v14 = v19;
LABEL_20:
  v23 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x24BDFD220]);
  if (v23)
  {
    v24 = v23;
    sub_22730BA80(0, &qword_2558D5BC0);
    v39 = sub_22758E3DC();

  }
  else
  {
    v39 = MEMORY[0x24BEE4AF8];
  }
  v25 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x24BDFD210]);
  if (v25)
  {
    v26 = v25;
    sub_22730BA80(0, &qword_2558D5BC0);
    v37 = sub_22758E3DC();

  }
  else
  {
    v37 = MEMORY[0x24BEE4AF8];
  }
  v27 = objc_msgSend(v6, sel_detectedObjectsForCategory_, *MEMORY[0x24BDFD228]);
  if (v27)
  {
    v28 = v27;
    sub_22730BA80(0, &qword_2558D5BC0);
    v29 = sub_22758E3DC();

  }
  else
  {
    v29 = MEMORY[0x24BEE4AF8];
  }
  v30 = (double)Width;
  v31 = (double)Height;
  if (v29 >> 62)
  {
    sub_22730BA80(0, &qword_2558D5BB8);
    swift_bridgeObjectRetain();
    v36 = sub_22758ECD0();
    swift_bridgeObjectRelease_n();
    v29 = v36;
  }
  else
  {
    v32 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_22758EE68();
    sub_22730BA80(0, &qword_2558D5BB8);
    if (swift_dynamicCastMetatype() || (v34 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_31:
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = v32 + 32;
      while (1)
      {
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
          break;
        v35 += 8;
        if (!--v34)
          goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      v29 = v32 | 1;
    }
  }
  v1 = (_QWORD *)sub_22742A0E8(v14, v39, v37, v29, v30, v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_22731F740(void *a1, uint64_t a2)
{
  void *v2;
  double v4;
  double v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double v29;
  uint64_t v30;
  id v34;
  CGAffineTransform v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v2 = *(void **)(a2 + 8);
  if (v2)
  {
    v5 = *(double *)(a2 + 40);
    v4 = *(double *)(a2 + 48);
    v6 = v2;
    objc_msgSend(a1, sel_screenRect);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    CGAffineTransformMakeScale(&v35, v5, v4);
    v36.origin.x = v8;
    v36.origin.y = v10;
    v36.size.width = v12;
    v36.size.height = v14;
    v37 = CGRectApplyAffineTransform(v36, &v35);
    x = v37.origin.x;
    y = v37.origin.y;
    width = v37.size.width;
    height = v37.size.height;
    objc_msgSend(v6, sel_boundingBox);
    v46.origin.x = x;
    v46.origin.y = y;
    v46.size.width = width;
    v46.size.height = height;
    v39 = CGRectIntersection(v38, v46);
    v19 = v39.origin.x;
    v20 = v39.origin.y;
    v21 = v39.size.width;
    v22 = v39.size.height;
    v40 = CGRectStandardize(v39);
    v23 = v40.size.height;
    v40.origin.x = v19;
    v40.origin.y = v20;
    v40.size.width = v21;
    v40.size.height = v22;
    v41 = CGRectStandardize(v40);
    v24 = v23 * v41.size.width;
    objc_msgSend(v6, sel_boundingBox, v41.origin.x, v41.origin.y);
    v25 = v42.origin.x;
    v26 = v42.origin.y;
    v27 = v42.size.width;
    v28 = v42.size.height;
    v43 = CGRectStandardize(v42);
    v29 = v43.size.height;
    v43.origin.x = v25;
    v43.origin.y = v26;
    v43.size.width = v27;
    v43.size.height = v28;
    v44 = CGRectStandardize(v43);
    if (v24 / (v29 * v44.size.width) <= 0.75)
    {
LABEL_10:

      return;
    }
    objc_msgSend(v6, sel_boundingBox);
    if (v5 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v5 < 9.22337204e18)
    {
      if ((*(_QWORD *)&v5 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(_QWORD *)&v4 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (v4 > -9.22337204e18)
        {
          if (v4 < 9.22337204e18)
          {
            v45 = VNNormalizedRectForImageRect(*(CGRect *)&v30, (uint64_t)v5, (uint64_t)v4);
            v34 = objc_msgSend((id)objc_opt_self(), sel_valueWithCGRect_, v45.origin.x, v45.origin.y, v45.size.width, v45.size.height);
            objc_msgSend(a1, sel_setFace_, v34);

            goto LABEL_10;
          }
LABEL_16:
          __break(1u);
          return;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t sub_22731F9A0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v36;
  int64_t v37;
  double *v38;
  void *v39;
  void *v40;
  void *v41;
  CGFloat v42;
  CGFloat v43;
  id v44;
  id v45;
  id v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v59;
  double v60;
  double v61;
  double v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  double v75;
  double v76;
  unint64_t v77;
  unint64_t v78;
  double v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  double v84;
  CGFloat a;
  CGFloat b;
  CGFloat tx;
  CGFloat ty;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v101)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v107;
  unint64_t v108;
  char v109;
  unint64_t v110;
  char *v111;
  char *v112;
  double v113;
  double v114;
  id v115;
  uint64_t v117;
  char *v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  id v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  CGFloat v134;
  double c;
  double d;
  CGAffineTransform v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v119 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v117 - v15;
  MEMORY[0x24BDAC7A8](v17, v18, v19, v20, v21);
  v23 = (char *)&v117 - v22;
  MEMORY[0x24BDAC7A8](v24, v25, v26, v27, v28);
  v118 = (char *)&v117 - v29;
  v30 = (_QWORD *)sub_22731EDEC(MEMORY[0x24BEE4AF8]);
  v140 = a2;
  v141 = v30;
  v123 = a1;
  if (a1 >> 62)
    goto LABEL_55;
  v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v31)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
LABEL_3:
  v32 = 0;
  v33 = v123;
  v125 = v123 & 0xC000000000000001;
  v121 = v123 & 0xFFFFFFFFFFFFFF8;
  v120 = v123 + 32;
  v126 = v16;
  v127 = v23;
  v124 = v31;
  do
  {
    if (v125)
    {
      v34 = (id)MEMORY[0x2276B2BEC](v32, v33);
    }
    else
    {
      if (v32 >= *(_QWORD *)(v121 + 16))
        goto LABEL_54;
      v34 = *(id *)(v120 + 8 * v32);
    }
    v130 = v34;
    if (__OFADD__(v32++, 1))
      goto LABEL_52;
    v36 = v140;
    v37 = *(_QWORD *)(v140 + 16);
    v129 = v32;
    if (v37)
    {
      v139 = (_QWORD *)MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_2273247A4(0, v37, 0);
      v30 = v139;
      v128 = v36;
      v38 = (double *)(v36 + 80);
      while (1)
      {
        v40 = (void *)*((_QWORD *)v38 - 5);
        v39 = (void *)*((_QWORD *)v38 - 4);
        v41 = (void *)*((_QWORD *)v38 - 3);
        v42 = *(v38 - 1);
        v43 = *v38;
        v44 = v41;
        swift_bridgeObjectRetain();
        v45 = v40;
        v46 = v39;
        objc_msgSend(v130, sel_screenRect);
        v48 = v47;
        v50 = v49;
        v52 = v51;
        v54 = v53;
        CGAffineTransformMakeScale(&v137, v42, v43);
        v142.origin.x = v48;
        v142.origin.y = v50;
        v142.size.width = v52;
        v142.size.height = v54;
        v143 = CGRectApplyAffineTransform(v142, &v137);
        x = v143.origin.x;
        y = v143.origin.y;
        width = v143.size.width;
        height = v143.size.height;
        if (v39)
        {
          objc_msgSend(v46, sel_boundingBox);
        }
        else
        {
          if (!v41)
          {
            v65 = 0.0;
            v66 = 0.0;
            v63 = 0.0;
            v64 = 0.0;
            goto LABEL_18;
          }
          objc_msgSend(v44, sel_boundingBox);
        }
        v63 = v59;
        v64 = v60;
        v65 = v61;
        v66 = v62;
LABEL_18:
        v144.origin.x = x;
        v144.origin.y = y;
        v144.size.width = width;
        v144.size.height = height;
        v151.origin.x = v63;
        v151.origin.y = v64;
        v151.size.width = v65;
        v151.size.height = v66;
        v145 = CGRectIntersection(v144, v151);
        v134 = x;
        v67 = v145.origin.x;
        v133 = y;
        v68 = v145.origin.y;
        v132 = width;
        v69 = v145.size.width;
        v131 = height;
        v70 = v145.size.height;
        v146 = CGRectStandardize(v145);
        d = v146.size.height;
        v146.origin.x = v67;
        v146.origin.y = v68;
        v146.size.width = v69;
        v146.size.height = v70;
        v147 = CGRectStandardize(v146);
        c = v147.size.width;
        v147.origin.x = v134;
        v147.origin.y = v133;
        v147.size.width = v132;
        v147.size.height = v131;
        v152.origin.x = v63;
        v152.origin.y = v64;
        v152.size.width = v65;
        v152.size.height = v66;
        v148 = CGRectUnion(v147, v152);
        v71 = v148.origin.x;
        v72 = v148.origin.y;
        v73 = v148.size.width;
        v74 = v148.size.height;
        v149 = CGRectStandardize(v148);
        v75 = v149.size.height;
        v149.origin.x = v71;
        v149.origin.y = v72;
        v149.size.width = v73;
        v149.size.height = v74;
        v150 = CGRectStandardize(v149);
        v76 = v150.size.width;
        swift_bridgeObjectRelease();

        v139 = v30;
        v78 = v30[2];
        v77 = v30[3];
        if (v78 >= v77 >> 1)
        {
          sub_2273247A4(v77 > 1, v78 + 1, 1);
          v30 = v139;
        }
        v79 = d * c / (v75 * v76);
        v30[2] = v78 + 1;
        *(double *)&v30[v78 + 4] = v79;
        v38 += 7;
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          v33 = v123;
          v16 = v126;
          v23 = v127;
          v31 = v124;
          v32 = v129;
          v80 = v30[2];
          if (!v80)
            goto LABEL_4;
LABEL_26:
          v81 = 0;
          v82 = 0;
          v83 = v30 + 4;
          while (v82 < v80)
          {
            if (*(double *)&v83[v82] < *(double *)&v30[v81 + 4])
              v82 = v81;
            if (v80 == ++v81)
            {
              if (v82 >= v80)
                goto LABEL_53;
              v84 = *(double *)&v83[v82];
              swift_bridgeObjectRelease();
              if (v84 <= 0.5)
              {

                goto LABEL_5;
              }
              sub_2273C04A8(v82, (uint64_t)&v137);
              a = v137.a;
              b = v137.b;
              c = v137.c;
              tx = v137.tx;
              ty = v137.ty;
              v89 = v138;
              v90 = *(_QWORD *)(v122 + 24);
              v91 = *(_QWORD *)(v90 + 16);
              d = v137.d;
              if (v91)
              {
                v92 = sub_2274DE604(*(uint64_t *)&v137.a);
                if ((v93 & 1) != 0)
                {
                  v94 = v92;
                  v95 = *(_QWORD *)(v90 + 56);
                  v96 = sub_22758C984();
                  v97 = *(_QWORD *)(v96 - 8);
                  v98 = v95 + *(_QWORD *)(v97 + 72) * v94;
                  v33 = v123;
                  v99 = (uint64_t)v127;
                  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v127, v98, v96);
                  v100 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56);
                  v16 = v126;
                  v100(v99, 0, 1, v96);
                  goto LABEL_40;
                }
                v96 = sub_22758C984();
                v101 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
                v99 = (uint64_t)v127;
              }
              else
              {
                v99 = (uint64_t)v23;
                v96 = sub_22758C984();
                v101 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
              }
              v101(v99, 1, 1, v96);
LABEL_40:
              sub_227320368(v99, (uint64_t)v16);
              sub_22758C984();
              v102 = *(_QWORD *)(v96 - 8);
              v103 = (uint64_t)v16;
              v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
              if (v104(v103, 1, v96) == 1)
              {
                swift_bridgeObjectRetain();
                v105 = (uint64_t)v118;
                sub_22758C978();
                sub_2273203B0(v103);
                swift_bridgeObjectRelease();
              }
              else
              {
                v105 = (uint64_t)v118;
                (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v118, v103, v96);
              }
              v31 = v124;
              v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
              v106(v105, 0, 1, v96);
              sub_227350CE8(v105, *(uint64_t *)&a);
              v107 = v141;
              if (v141[2] && (v108 = sub_2274DE604(*(uint64_t *)&a), (v109 & 1) != 0))
              {
                v110 = v107[7] + *(_QWORD *)(v102 + 72) * v108;
                v111 = v119;
                (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v119, v110, v96);
                v106((uint64_t)v111, 0, 1, v96);
                if (v104((uint64_t)v111, 1, v96) != 1)
                {
                  v112 = v111;
                  v30 = (_QWORD *)sub_22758C954();
                  (*(void (**)(char *, uint64_t))(v102 + 8))(v112, v96);
LABEL_49:
                  v114 = c;
                  v113 = d;
                  v115 = v130;
                  objc_msgSend(v130, sel_setUuid_, v30);

                  v137.a = a;
                  v137.b = b;
                  v137.c = v114;
                  v137.d = v113;
                  v137.tx = tx;
                  v137.ty = ty;
                  v138 = v89;
                  sub_22731F740(v115, (uint64_t)&v137);
                  swift_bridgeObjectRelease();

                  v16 = v126;
                  v23 = v127;
                  v32 = v129;
                  goto LABEL_5;
                }
              }
              else
              {
                v106((uint64_t)v119, 1, 1, v96);
              }
              v30 = 0;
              goto LABEL_49;
            }
          }
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v31 = sub_22758ECE8();
          if (!v31)
            goto LABEL_56;
          goto LABEL_3;
        }
      }
    }
    v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v80 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v80)
      goto LABEL_26;
LABEL_4:

    swift_bridgeObjectRelease();
LABEL_5:
    ;
  }
  while (v32 != v31);
  swift_bridgeObjectRelease();
  v30 = v141;
LABEL_57:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v122 + 24) = v30;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ANSTPersonDetectionManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ANSTPersonDetectionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.computePersonDetectionFromFrame(frame:interfaceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ANSTPersonDetectionManager.matchANSTDetections(to:anstDetections:orientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_227320260(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *sub_227320358(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_227320368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2273203B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2273203F0()
{
  unint64_t result;

  result = qword_2558D5BA8;
  if (!qword_2558D5BA8)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MAGError, &type metadata for MAGError);
    atomic_store(result, (unint64_t *)&qword_2558D5BA8);
  }
  return result;
}

uint64_t sub_227320434(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 352) = a2;
  v4 = sub_22758DF20();
  *(_QWORD *)(v2 + 360) = v4;
  *(_QWORD *)(v2 + 368) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 376) = swift_task_alloc();
  v5 = sub_22758DF68();
  *(_QWORD *)(v2 + 384) = v5;
  *(_QWORD *)(v2 + 392) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 400) = swift_task_alloc();
  *(_OWORD *)(v2 + 408) = *a1;
  sub_22758E49C();
  *(_QWORD *)(v2 + 424) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227320500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  unint64_t v20;
  __CVBuffer *v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1 + 16);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = *(_QWORD *)(v0 + 408);
    if (v4 >> 62)
    {
      if (v4 >> 62 != 1)
        __asm { BR              X10 }
      v5 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      v6 = qword_2540B87B8;
      swift_retain();
      if (v6 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if ((*(_BYTE *)(v0 + 435) & 1) != 0
        || (swift_getKeyPath(),
            swift_getKeyPath(),
            sub_22758D194(),
            swift_release(),
            swift_release(),
            (*(_BYTE *)(v0 + 436) & 1) != 0))
      {
        sub_2273227B8(*(_QWORD *)(v0 + 408), *(void **)(v0 + 416));

      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        if (*(_BYTE *)(v0 + 434) == 1)
        {
          v11 = *(_QWORD *)(v0 + 408);
          v23 = *(void **)(v0 + 416);
          v12 = *(_QWORD *)(v0 + 400);
          v13 = *(_QWORD *)(v0 + 376);
          v25 = *(_QWORD *)(v0 + 392);
          v26 = *(_QWORD *)(v0 + 384);
          v24 = *(_QWORD *)(v0 + 368);
          v14 = *(_QWORD *)(v0 + 360);
          sub_22730D9EC();
          v15 = (void *)sub_22758E79C();
          v16 = swift_allocObject();
          *(_QWORD *)(v16 + 16) = v3;
          *(_QWORD *)(v16 + 24) = v5;
          *(_QWORD *)(v0 + 48) = sub_227322804;
          *(_QWORD *)(v0 + 56) = v16;
          *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
          *(_QWORD *)(v0 + 24) = 1107296256;
          *(_QWORD *)(v0 + 32) = sub_227367AE4;
          *(_QWORD *)(v0 + 40) = &block_descriptor_35;
          v17 = _Block_copy((const void *)(v0 + 16));
          v18 = v3;
          sub_22732280C(v11, v23);
          swift_release();
          sub_22758DF44();
          *(_QWORD *)(v0 + 312) = MEMORY[0x24BEE4AF8];
          sub_22730DE58();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
          sub_22730DEA0();
          sub_22758EACC();
          MEMORY[0x2276B27CC](0, v12, v13, v17);
          _Block_release(v17);

          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v13, v14);
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v26);
        }
        v20 = *(_QWORD *)(v0 + 408);
        v19 = *(void **)(v0 + 416);
        v21 = CMSampleBufferGetImageBuffer(*(CMSampleBufferRef *)(v5 + 16));
        swift_getKeyPath();
        swift_getKeyPath();
        *(_QWORD *)(v0 + 320) = v21;
        swift_retain();
        sub_22758D1A0();

        sub_2273227B8(v20, v19);
      }
    }
    else
    {
      v7 = *(void **)(v0 + 416);
      if ((v4 & 1) != 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(_QWORD *)(v0 + 304) = v7;
        sub_22732280C(v4, v7);
        v9 = v3;
        sub_22732280C(v4, v7);
        sub_22758D1A0();
        v9[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureAttemptDidSucceed] = 1;
        sub_2274E46EC();
      }
      else
      {
        *(_BYTE *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureAttemptDidSucceed) = 0;
        v8 = v7;
        sub_2274E46EC();
        sub_2274E4938(0);
      }
      sub_2273227B8(*(_QWORD *)(v0 + 408), *(void **)(v0 + 416));
      v10 = *(id *)&v3[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureService];

      v10[OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_isCapturingPhoto] = 0;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227321308(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v2 = sub_2274E4588();
  v3 = objc_msgSend(v2, sel_layer);
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setAutomaticallyDimsOverCaptureRegion_, 0);

    LODWORD(v6) = 0;
    objc_msgSend(v5, sel_setOpacity_, v6);

    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    aBlock[4] = sub_22732286C;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227367AE4;
    aBlock[3] = &block_descriptor_71;
    v9 = _Block_copy(aBlock);
    v10 = a1;
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.2);
    _Block_release(v9);
  }
  else
  {

    sub_22758ECC4();
    __break(1u);
  }
}

void sub_227321490()
{
  id v0;
  void *v1;
  void *v2;
  double v3;
  id v4;

  v0 = sub_2274E4588();
  v4 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setAutomaticallyDimsOverCaptureRegion_, 0);

    LODWORD(v3) = 1.0;
    objc_msgSend(v2, sel_setOpacity_, v3);

  }
  else
  {

    sub_22758ECC4();
    __break(1u);
  }
}

void sub_227321574(uint64_t a1, uint64_t a2)
{
  opaqueCMSampleBuffer *v2;
  id v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;

  v2 = (opaqueCMSampleBuffer *)*(id *)(a2 + 16);
  v3 = sub_22750517C(v2);

  if (v3)
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D1A0();
  }
  else
  {
    if (qword_2558D4A08 != -1)
      swift_once();
    v4 = sub_22758CF9C();
    __swift_project_value_buffer(v4, (uint64_t)qword_2558D6140);
    oslog = sub_22758CF84();
    v5 = sub_22758E6B8();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_22758EA48();
      _os_log_impl(&dword_2272F4000, oslog, v5, "%ld NO SAMPLE IMAGE", v6, 0xCu);
      MEMORY[0x2276B3D50](v6, -1, -1);
    }

  }
}

void sub_227321720(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  const void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t aBlock;
  uint64_t v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;

  v74 = sub_22758DF20();
  v2 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74, v3, v4, v5, v6);
  v73 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22758DF68();
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_22758DF80();
  v72 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77, v15, v16, v17, v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  v27 = (char *)&v68 - v26;
  if (qword_2540B87B8 != -1)
    swift_once();
  v28 = qword_2540BCDD0;
  v29 = MEMORY[0x24BDAC760];
  if (*(_BYTE *)(qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedFromShortcut) == 1)
  {
    v71 = v2;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 0;
    swift_retain();
    sub_22758D1A0();
    v30 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController;
    v31 = *(void **)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController];
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v32, sel_willMoveToParentViewController_, 0);
      v70 = (char *)objc_opt_self();
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = v32;
      v82 = sub_227322918;
      v83 = v33;
      aBlock = v29;
      v79 = 1107296256;
      v80 = sub_227367AE4;
      v81 = &block_descriptor_108;
      v34 = _Block_copy(&aBlock);
      v35 = v32;
      swift_release();
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v35;
      v82 = sub_2273228AC;
      v83 = v36;
      aBlock = v29;
      v79 = 1107296256;
      v80 = sub_2273D1018;
      v81 = &block_descriptor_115;
      v37 = _Block_copy(&aBlock);
      v38 = v35;
      swift_release();
      objc_msgSend(v70, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v34, v37, 0.25, 0.0);
      _Block_release(v37);
      _Block_release(v34);
      v39 = *(void **)&a1[v30];
      *(_QWORD *)&a1[v30] = 0;

    }
    sub_22730D9EC();
    v40 = (void *)sub_22758E79C();
    sub_22758DF74();
    MEMORY[0x2276B1FE0](v20, 2.0);
    v69 = *(void (**)(char *, uint64_t))(v72 + 8);
    v70 = a1;
    v69(v20, v77);
    v82 = sub_227321E68;
    v83 = 0;
    aBlock = MEMORY[0x24BDAC760];
    v79 = 1107296256;
    v80 = sub_227367AE4;
    v81 = &block_descriptor_101;
    v41 = _Block_copy(&aBlock);
    sub_22758DF44();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22730DE58();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730DEA0();
    v42 = v20;
    v43 = v27;
    v44 = v73;
    v45 = v14;
    v46 = v74;
    sub_22758EACC();
    MEMORY[0x2276B2754](v43, v45, v44, v41);
    _Block_release(v41);

    v2 = v71;
    v47 = v44;
    v27 = v43;
    v20 = v42;
    v48 = v46;
    v14 = v45;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v76);
    a1 = v70;
    v69(v27, v77);
    v28 = qword_2540BCDD0;
    v29 = MEMORY[0x24BDAC760];
  }
  if (*(_BYTE *)(v28 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedReaderFromShortcut) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 0;
    swift_retain();
    sub_22758D1A0();
    v49 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController;
    v50 = *(void **)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_readerModeViewController];
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v51, sel_willMoveToParentViewController_, 0);
      v70 = (char *)objc_opt_self();
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = v51;
      v82 = sub_227322884;
      v83 = v52;
      aBlock = v29;
      v79 = 1107296256;
      v80 = sub_227367AE4;
      v81 = &block_descriptor_92;
      v53 = _Block_copy(&aBlock);
      v71 = v2;
      v54 = v53;
      v55 = v51;
      swift_release();
      v56 = swift_allocObject();
      *(_QWORD *)(v56 + 16) = v55;
      v82 = sub_22732288C;
      v83 = v56;
      aBlock = v29;
      v79 = 1107296256;
      v80 = sub_2273D1018;
      v81 = &block_descriptor_98;
      v57 = _Block_copy(&aBlock);
      v58 = v55;
      swift_release();
      objc_msgSend(v70, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v54, v57, 0.25, 0.0);
      _Block_release(v57);
      v59 = v54;
      v2 = v71;
      _Block_release(v59);
      v60 = *(void **)&a1[v49];
      *(_QWORD *)&a1[v49] = 0;

    }
    sub_22730D9EC();
    v61 = (void *)sub_22758E79C();
    sub_22758DF74();
    MEMORY[0x2276B1FE0](v20, 2.0);
    v72 = *(_QWORD *)(v72 + 8);
    v62 = v77;
    ((void (*)(char *, uint64_t))v72)(v20, v77);
    v82 = sub_227321F1C;
    v83 = 0;
    aBlock = v29;
    v79 = 1107296256;
    v80 = sub_227367AE4;
    v81 = &block_descriptor_86;
    v63 = _Block_copy(&aBlock);
    sub_22758DF44();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22730DE58();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730DEA0();
    v64 = v27;
    v65 = v73;
    v66 = v14;
    v67 = v74;
    sub_22758EACC();
    MEMORY[0x2276B2754](v64, v66, v65, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v65, v67);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v76);
    ((void (*)(char *, uint64_t))v72)(v64, v62);
  }
}

uint64_t sub_227321E68()
{
  if (qword_2540B87B8 != -1)
    swift_once();
  *(_BYTE *)(qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedFromShortcut) = 0;
  sub_227469C74(1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22758D1A0();
}

uint64_t sub_227321F1C()
{
  uint64_t result;

  if (qword_2540B87B8 != -1)
    result = swift_once();
  *(_BYTE *)(qword_2540BCDD0
           + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_launchedReaderFromShortcut) = 0;
  return result;
}

void sub_227321F6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  char *v44;
  void *v45;
  char *v46;
  id v47;
  void *v48;
  id v49;
  _BYTE v50[23];
  char v51;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__cardPosition;
  swift_beginAccess();
  v51 = 0;
  if (qword_2540B9100 != -1)
    swift_once();
  v11 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  *(_QWORD *)&v50[-16] = &v51;
  *(_QWORD *)&v50[-8] = v10;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v2);
  swift_endAccess();
  v16 = sub_2274E4250();
  v17 = objc_msgSend(v16, sel_view);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setAlpha_, 0.0);

    v19 = objc_msgSend(v16, sel_view);
    if (v19)
    {
      v20 = v19;
      type metadata accessor for MFPassthroughView();
      v21 = swift_dynamicCastClass();
      if (v21)
        *(_BYTE *)(v21 + OBJC_IVAR____TtC16MagnifierSupport17MFPassthroughView_enabled) = 0;

    }
    else
    {
      v20 = v16;
    }

    v22 = (char *)sub_2274E4250();
    v23 = (char *)*(id *)&v22[OBJC_IVAR____TtC16MagnifierSupport24MFMainCardViewController_cardContainer];

    v24 = *(id *)&v23[OBJC_IVAR____TtC16MagnifierSupport19MFCardContainerView_grabberView];
    sub_227390FD4();

    sub_2274E2678();
    v25 = sub_2274E445C();
    v26 = sub_2274808C0();

    v27 = objc_msgSend(v26, sel_contextMenuInteraction);
    objc_msgSend(v27, sel_dismissMenu);

    v28 = sub_2274E445C();
    v29 = sub_2274808D4();

    v30 = objc_msgSend(v29, sel_contextMenuInteraction);
    objc_msgSend(v30, sel_dismissMenu);

    v31 = (char *)sub_2274E445C();
    v32 = *(void **)&v31[OBJC_IVAR____TtC16MagnifierSupport24CameraTrayViewController_snapshotButtonContextMenuInteraction];
    v33 = v32;

    if (v32)
    {
      v34 = sub_2274E445C();
      v35 = sub_2274808E8();

      objc_msgSend(v35, sel_removeInteraction_, v33);
      v36 = sub_2274E445C();
      v37 = sub_2274808E8();

      objc_msgSend(v37, sel_setAccessibilityCustomActions_, 0);
    }
    v38 = (char *)sub_2274E4168();
    v39 = &v38[OBJC_IVAR____TtC16MagnifierSupport20ControlContainerView_buttonMap];
    swift_beginAccess();
    v40 = *(_QWORD *)v39;
    if (*(_QWORD *)(v40 + 16) && (v41 = sub_2274DE634(7), (v42 & 1) != 0))
    {
      v43 = *(void **)(*(_QWORD *)(v40 + 56) + 16 * v41);
      swift_endAccess();
      v44 = v43;

      type metadata accessor for MenuButton();
      v45 = (void *)swift_dynamicCastClass();
      if (v45)
      {
        v46 = v44;
        v47 = sub_2273FF348();

        v38 = (char *)objc_msgSend(v47, sel_contextMenuInteraction);
        objc_msgSend(v38, sel_dismissMenu);
      }
      else
      {
        v38 = v44;
      }
    }
    else
    {
      swift_endAccess();
      v45 = 0;
    }

    sub_2274EA6B0();
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pipWindowButton), sel_setAlpha_, 0.0);
    v48 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_closeButton);
    if (v48)
    {
      v49 = v48;
      objc_msgSend(v49, sel_setAlpha_, 0.0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_227322408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  _BYTE v23[23];
  char v24;

  v0 = sub_22758DF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v8 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__cardPosition;
  swift_beginAccess();
  v24 = 0;
  if (qword_2540B9100 != -1)
    swift_once();
  v9 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v9, v10, v11, v12, v13);
  *(_QWORD *)&v23[-16] = &v24;
  *(_QWORD *)&v23[-8] = v8;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v7, v0);
  swift_endAccess();
  v14 = sub_2274E4250();
  v15 = objc_msgSend(v14, sel_view);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_setAlpha_, 1.0);

    v17 = objc_msgSend(v14, sel_view);
    if (v17)
    {
      v18 = v17;
      type metadata accessor for MFPassthroughView();
      v19 = swift_dynamicCastClass();
      if (v19)
        *(_BYTE *)(v19 + OBJC_IVAR____TtC16MagnifierSupport17MFPassthroughView_enabled) = 1;

    }
    else
    {
      v18 = v14;
    }

    v20 = (char *)sub_2274E4250();
    v21 = (char *)*(id *)&v20[OBJC_IVAR____TtC16MagnifierSupport24MFMainCardViewController_cardContainer];

    v22 = *(id *)&v21[OBJC_IVAR____TtC16MagnifierSupport19MFCardContainerView_grabberView];
    sub_227390FD4();

    sub_2274E2678();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_227322658@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2273226D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22758D1A0();
}

uint64_t sub_227322744()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227322768()
{
  sub_227322408();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_227322788()
{
  uint64_t v0;

  sub_227321F6C(*(_QWORD *)(v0 + 16));
}

void sub_227322790()
{
  uint64_t v0;

  sub_227321720(*(char **)(v0 + 16));
}

void sub_2273227B8(unint64_t a1, void *a2)
{
  if (a1 >> 62 == 1)
  {
    swift_release();
  }
  else if (!(a1 >> 62))
  {

  }
}

uint64_t sub_2273227D8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_227322804()
{
  uint64_t v0;

  sub_227321574(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_22732280C(unint64_t result, void *a2)
{
  if (result >> 62 == 1)
    return swift_retain();
  if (!(result >> 62))
    return (unint64_t)a2;
  return result;
}

void sub_227322834()
{
  uint64_t v0;

  sub_227321308(*(void **)(v0 + 16));
}

void sub_227322854(float *a1@<X8>)
{
  uint64_t v1;

  sub_22751637C(*(_QWORD *)(v1 + 16), a1);
}

void sub_22732286C()
{
  sub_227321490();
}

void sub_227322884()
{
  uint64_t v0;

  sub_22758B8AC(*(void **)(v0 + 16));
}

uint64_t sub_22732288C(int a1)
{
  uint64_t v1;

  return sub_22758B8A8(a1, *(id *)(v1 + 16));
}

void sub_227322894()
{
  uint64_t v0;

  sub_2274675F0(*(unsigned __int8 **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_227322924()
{
  sub_227322894();
}

uint64_t sub_227322938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B08);
  v5 = MEMORY[0x24BDAC7A8](v0, v1, v2, v3, v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8, v9, v10, v11);
  v13 = (char *)&v21 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA2D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227593AB0;
  v15 = (void *)*MEMORY[0x24BDBCC48];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC48];
  v16 = v15;
  sub_227327424(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_22758C7BC();
  swift_bridgeObjectRelease();
  v17 = sub_22758C6C0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 0, 1, v17);
  sub_22732834C((uint64_t)v13, (uint64_t)v7);
  sub_22758C6C0();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
  {
    sub_22731A1A4((uint64_t)v13, &qword_2540B7B08);
    sub_22731A1A4((uint64_t)v7, &qword_2540B7B08);
    return 0;
  }
  else
  {
    v19 = sub_22758C6B4();
    sub_22731A1A4((uint64_t)v13, &qword_2540B7B08);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  return v19;
}

uint64_t sub_227322B3C@<X0>(uint64_t a1@<X8>)
{
  return sub_227322CD0(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a1);
}

uint64_t sub_227322B48(uint64_t a1)
{
  return sub_227322D3C(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory);
}

uint64_t (*sub_227322B54())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_227322B9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1 + *a2;
  swift_beginAccess();
  v5 = sub_22758C858();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_227322C00(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = sub_22758C858();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  v16 = *a2 + *a5;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v16, v15, v8);
  return swift_endAccess();
}

uint64_t sub_227322CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_227322CD0(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a1);
}

uint64_t sub_227322CD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  swift_beginAccess();
  v5 = sub_22758C858();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_227322D30(uint64_t a1)
{
  return sub_227322D3C(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory);
}

uint64_t sub_227322D3C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a2;
  swift_beginAccess();
  v5 = sub_22758C858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess();
}

uint64_t (*sub_227322DA4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MagnifierStillImageStore.__allocating_init(captureService:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MagnifierStillImageStore.init(captureService:)(a1);
  return v2;
}

uint64_t MagnifierStillImageStore.init(captureService:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  void *v28;
  unsigned __int8 v29;
  void *v30;
  unsigned int v31;
  id v32;
  uint64_t v33;
  void *v34;
  unsigned __int8 v35;
  void *v36;
  unsigned int v37;
  uint64_t result;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  id v45[3];
  id v46[5];

  v2 = v1;
  v46[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_22758C858();
  v5 = *(_QWORD *)(v4 - 8);
  v10 = MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13, v14, v15, v16);
  v18 = (char *)&v41 - v17;
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v46[0] = 0;
  v20 = objc_msgSend(v19, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 9, 1, 0, 1, v46);
  v21 = v46[0];
  if (v20)
  {
    v22 = v20;
    v41 = a1;
    sub_22758C81C();
    v23 = v21;

    swift_beginAccess();
    if (qword_2558DCEC8)
    {
      swift_retain();
      sub_22758CE4C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v12, v4);
    }
    sub_22758C804();
    v42 = v2;
    v24 = v2 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
    v25 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    v25(v24, v12, v4);
    swift_beginAccess();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v26(v12, v24, v4);
    sub_22758C840();
    v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v12, v4);
    v28 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v19, sel_fileExistsAtPath_, v28);

    if ((v29 & 1) != 0
      || (v26(v12, v24, v4),
          v30 = (void *)sub_22758C7EC(),
          v27(v12, v4),
          v45[0] = 0,
          v31 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v30, 1, 0, v45), v30, v32 = v45[0], v31))
    {
      sub_22758C804();
      v33 = v42 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory;
      v25(v42 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v12, v4);
      swift_beginAccess();
      v26(v12, v33, v4);
      sub_22758C840();
      v27(v12, v4);
      v34 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      v35 = objc_msgSend(v19, sel_fileExistsAtPath_, v34);

      if ((v35 & 1) != 0
        || (v26(v12, v33, v4),
            v36 = (void *)sub_22758C7EC(),
            v27(v12, v4),
            v43 = 0,
            v37 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v36, 1, 0, &v43), v36, v32 = v43, v37))
      {
        v27(v18, v4);

        result = v42;
        *(_QWORD *)(v42 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_captureService) = v41;
        return result;
      }
    }
    v40 = v32;
    sub_22758C75C();

    swift_willThrow();
    v27(v18, v4);
  }
  else
  {
    v39 = v46[0];
    sub_22758C75C();

    swift_willThrow();
  }
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_22758EBB0();
  swift_bridgeObjectRelease();
  v43 = (id)0xD000000000000017;
  v44 = 0x80000002275AECC0;
  swift_getErrorValue();
  sub_22758EEEC();
  sub_22758E2B0();
  swift_bridgeObjectRelease();
  result = sub_22758ECC4();
  __break(1u);
  return result;
}

void sub_227323310(void *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  _BYTE *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  unint64_t v66;
  uint8_t *v67;
  double v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  UIImage *v73;
  NSData *v74;
  NSData *v75;
  uint64_t v76;
  UIImage *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82[2];
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v87 = a2;
  v5 = sub_22758C930();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7, v8, v9, v10);
  v12 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22758C858();
  v90 = *(_QWORD *)(v13 - 8);
  v18 = MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  v20 = (char *)v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21, v22, v23, v24);
  v89 = (char *)v82 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
  v88 = (uint64_t)v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = objc_msgSend(a1, sel_fileDataRepresentation);
  if (!v32)
  {
    sub_227324558();
    swift_allocError();
    *v45 = 0;
    swift_willThrow();
    return;
  }
  v33 = v32;
  v84 = v6;
  v85 = (char *)v5;
  v34 = sub_22758C87C();
  v36 = v35;

  sub_22732459C(v34, v36);
  if (qword_2558D4BA0 != -1)
    swift_once();
  v82[1] = v3;
  v86 = v2;
  if (byte_2558DAEE0 != 1)
  {
    sub_2273245E0(v34, v36);
    goto LABEL_11;
  }
  v37 = objc_allocWithZone(MEMORY[0x24BEBD640]);
  sub_22732459C(v34, v36);
  v38 = (void *)sub_22758C870();
  v39 = objc_msgSend(v37, sel_initWithData_, v38);
  sub_2273245E0(v34, v36);

  if (!v39)
  {
    sub_2273203F0();
    swift_allocError();
    *(_QWORD *)v70 = 0xD000000000000029;
    *(_QWORD *)(v70 + 8) = 0x80000002275AECE0;
    *(_QWORD *)(v70 + 16) = 0;
    *(_BYTE *)(v70 + 24) = 2;
    swift_willThrow();
LABEL_28:
    sub_2273245E0(v34, v36);
    v60 = v34;
    goto LABEL_29;
  }
  v40 = objc_msgSend(v39, sel_CGImage);
  if (!v40)
  {
    sub_2273203F0();
    swift_allocError();
    *(_QWORD *)v71 = 0xD00000000000002BLL;
    *(_QWORD *)(v71 + 8) = 0x80000002275AED10;
    *(_QWORD *)(v71 + 16) = 0;
    *(_BYTE *)(v71 + 24) = 2;
    swift_willThrow();

    goto LABEL_28;
  }
  v41 = v40;

  sub_2273245E0(v34, v36);
  v42 = *(void **)(*(_QWORD *)&v86[OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_captureService]
                 + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_videoDeviceRotationCoordinator);
  v83 = (uint64_t)v42;
  if (v42)
  {
    objc_msgSend(v42, sel_videoRotationAngleForHorizonLevelCapture);
    v44 = v43;
  }
  else
  {
    v44 = 0.0;
  }
  v82[0] = v36;
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v92 != 4)
  {
    if (v83)
    {
      if (v44 == 90.0)
      {
        v72 = 3;
        goto LABEL_50;
      }
      if (v44 == 180.0)
      {
        v72 = 1;
        goto LABEL_50;
      }
      if (v44 == 270.0)
      {
        v72 = 2;
        goto LABEL_50;
      }
    }
    v72 = 0;
    goto LABEL_50;
  }
  if (!v83)
  {
LABEL_46:
    v72 = 4;
    goto LABEL_50;
  }
  if (v44 != 90.0)
  {
    if (v44 == 180.0)
    {
      v72 = 5;
      goto LABEL_50;
    }
    if (v44 == 270.0)
    {
      v72 = 7;
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  v72 = 6;
LABEL_50:
  v73 = (UIImage *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_initWithCGImage_scale_orientation_, v41, v72, 1.0);
  v74 = UIImageJPEGRepresentation(v73, 1.0);
  if (!v74)
  {
    sub_2273203F0();
    swift_allocError();
    *(_QWORD *)v81 = 0xD000000000000038;
    *(_QWORD *)(v81 + 8) = 0x80000002275AED40;
    *(_QWORD *)(v81 + 16) = 0;
    *(_BYTE *)(v81 + 24) = 2;
    swift_willThrow();

    sub_2273245E0(v34, v82[0]);
    return;
  }
  v75 = v74;
  v76 = sub_22758C87C();
  v77 = v73;
  v78 = v76;
  v80 = v79;

  sub_2273245E0(v34, v82[0]);
  v34 = v78;
  v36 = v80;
LABEL_11:
  v83 = v34;
  v46 = objc_msgSend(a1, sel_processedFileType, v82[0]);
  if (v46 && (v47 = v46, v48 = sub_22754F01C(), v50 = v49, v47, v50))
  {
    v51 = (void (*)(char *, uint64_t))v36;
  }
  else
  {
    v51 = (void (*)(char *, uint64_t))v36;
    swift_bridgeObjectRelease();
    v48 = 6778986;
  }
  v36 = (unint64_t)&v86[OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory];
  swift_beginAccess();
  v86 = *(char **)(v90 + 16);
  ((void (*)(char *, unint64_t, uint64_t))v86)(v89, v36, v13);
  sub_22758C924();
  sub_22758C8F4();
  v53 = v52;
  (*(void (**)(char *, char *))(v84 + 8))(v12, v85);
  v54 = round(v53 * 1000.0);
  if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v54 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v54 < 9.22337204e18)
  {
    v85 = v20;
    v91 = (uint64_t)v54;
    sub_22758EE2C();
    v55 = v88;
    v56 = v89;
    v57 = v83;
    v36 = (unint64_t)v51;
    sub_22754F244(v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = v90;
    v51 = *(void (**)(char *, uint64_t))(v90 + 8);
    v51(v56, v13);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v55, 1, v13) == 1)
    {
      sub_22731A1A4(v55, &qword_2540B7B10);
      sub_227324558();
      swift_allocError();
      *v59 = 0;
      swift_willThrow();
      v60 = v57;
LABEL_29:
      sub_2273245E0(v60, v36);
      return;
    }
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32);
    v48 = v87;
    v61(v87, v55, v13);
    if (qword_2558D4A30 == -1)
      goto LABEL_21;
    goto LABEL_56;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  swift_once();
LABEL_21:
  v62 = sub_22758CF9C();
  __swift_project_value_buffer(v62, (uint64_t)qword_2558D61B8);
  v63 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v86)(v85, v48, v13);
  v64 = sub_22758CF84();
  v65 = sub_22758E6B8();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = v36;
    v67 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v67 = 134217984;
    v68 = (double)sub_227322938() * 0.000000953674316;
    if ((v69 & 1) != 0)
      v68 = -0.000000953674316;
    v91 = *(_QWORD *)&v68;
    sub_22758EA48();
    v51(v63, v13);
    _os_log_impl(&dword_2272F4000, v64, v65, "Saved file with size: %f MB", v67, 0xCu);
    MEMORY[0x2276B3D50](v67, -1, -1);

    sub_2273245E0(v83, v66);
  }
  else
  {
    v51(v63, v13);
    sub_2273245E0(v83, v36);

  }
}

id sub_227323C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t inited;
  void *v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  void *v76;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  void (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  id v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  id v101[10];

  v101[9] = *(id *)MEMORY[0x24BDAC8D0];
  v86 = sub_22758CEE8();
  v1 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86, v2, v3, v4, v5);
  v80 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_22758C6C0();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v7, v8, v9, v10);
  v96 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9448);
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  v83 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v99 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_22758C858();
  v25 = *(_QWORD *)(v24 - 8);
  v30 = MEMORY[0x24BDAC7A8](v24, v26, v27, v28, v29);
  v79 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v30, v32, v33, v34, v35);
  v100 = (char *)&v78 - v37;
  MEMORY[0x24BDAC7A8](v36, v38, v39, v40, v41);
  v43 = (char *)&v78 - v42;
  v44 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v45 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  swift_beginAccess();
  v97 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v97(v43, v45, v24);
  v46 = (void *)sub_22758C7EC();
  v98 = v25;
  v90 = *(void (**)(char *, uint64_t))(v25 + 8);
  v90(v43, v24);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA2D0);
  v47 = swift_allocObject();
  v94 = xmmword_227593AB0;
  *(_OWORD *)(v47 + 16) = xmmword_227593AB0;
  v48 = (void *)*MEMORY[0x24BDBCBE8];
  *(_QWORD *)(v47 + 32) = *MEMORY[0x24BDBCBE8];
  type metadata accessor for URLResourceKey(0);
  v50 = v49;
  v92 = v48;
  v93 = v50;
  v51 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  v101[0] = 0;
  v52 = objc_msgSend(v44, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v46, v51, 7, v101);

  v53 = v101[0];
  if (v52)
  {
    v54 = sub_22758E3DC();

    v101[0] = (id)MEMORY[0x24BEE4AF8];
    v91 = *(_QWORD *)(v54 + 16);
    if (v91)
    {
      v55 = 0;
      v57 = v98;
      v56 = (uint64_t)v99;
      v82 = v1;
      v81 = v24;
      v89 = v54;
      while (1)
      {
        if (v55 >= *(_QWORD *)(v54 + 16))
          __break(1u);
        v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        v59 = *(_QWORD *)(v57 + 72);
        v97((char *)v56, v54 + v58 + v59 * v55, v24);
        v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
        v88(v56, 0, 1, v24);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v56, 1, v24) == 1)
          goto LABEL_19;
        v60 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
        v60(v100, v56, v24);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v94;
        v62 = v92;
        *(_QWORD *)(inited + 32) = v92;
        v63 = v62;
        sub_227327424(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        v64 = v96;
        sub_22758C7BC();
        v87 = (void (*)(char *, char *, uint64_t))v60;
        swift_bridgeObjectRelease();
        v65 = (uint64_t)v83;
        sub_22758C6A8();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v85);
        v66 = v82;
        v67 = v86;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v65, 1, v86) == 1)
        {
          sub_22731A1A4(v65, &qword_2540B9448);
        }
        else
        {
          v68 = v80;
          sub_22758CEC4();
          v69 = sub_22758CEDC();
          v70 = *(void (**)(char *, uint64_t))(v66 + 8);
          v70(v68, v67);
          v70((char *)v65, v67);
          if ((v69 & 1) != 0)
          {
            v24 = v81;
            v87(v79, v100, v81);
            v71 = (char *)v101[0];
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v54 = v89;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_227324738(0, *((_QWORD *)v71 + 2) + 1, 1);
              v71 = (char *)v101[0];
            }
            v74 = *((_QWORD *)v71 + 2);
            v73 = *((_QWORD *)v71 + 3);
            if (v74 >= v73 >> 1)
            {
              sub_227324738(v73 > 1, v74 + 1, 1);
              v71 = (char *)v101[0];
            }
            *((_QWORD *)v71 + 2) = v74 + 1;
            v87(&v71[v58 + v74 * v59], v79, v24);
            v101[0] = v71;
            v57 = v98;
            v56 = (uint64_t)v99;
            goto LABEL_15;
          }
        }
        v56 = (uint64_t)v99;
        v24 = v81;
        v57 = v98;
        v54 = v89;
        v90(v100, v81);
LABEL_15:
        if (v91 == ++v55)
        {
          v88(v56, 1, 1, v24);
          goto LABEL_19;
        }
      }
    }
    v56 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v99, 1, 1, v24);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_22731A1A4(v56, &qword_2540B7B10);
    return v101[0];
  }
  else
  {
    v75 = v53;
    v76 = (void *)sub_22758C75C();

    swift_willThrow();
    return (id)MEMORY[0x24BEE4AF8];
  }
}

uint64_t MagnifierStillImageStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  v2 = sub_22758C858();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v2);

  return v0;
}

uint64_t MagnifierStillImageStore.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory;
  v2 = sub_22758C858();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, v2);

  return swift_deallocClassInstance();
}

void sub_2273243B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_227323310(a1, a2);
}

id sub_2273243D0()
{
  return sub_227323C08();
}

uint64_t sub_2273243F0@<X0>(uint64_t a1@<X8>)
{
  return sub_227324408(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a1);
}

uint64_t sub_2273243FC@<X0>(uint64_t a1@<X8>)
{
  return sub_227324408(&OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a1);
}

uint64_t sub_227324408@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + *a1;
  swift_beginAccess();
  v5 = sub_22758C858();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22732446C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2273244E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22758D1A0();
}

unint64_t sub_227324558()
{
  unint64_t result;

  result = qword_2558D5BF0;
  if (!qword_2558D5BF0)
  {
    result = MEMORY[0x2276B3C78](&unk_227596FD0, &type metadata for MagnifierStillImageStore.Error);
    atomic_store(result, (unint64_t *)&qword_2558D5BF0);
  }
  return result;
}

uint64_t sub_22732459C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2273245E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22732462C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA2A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324650(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2558D5C00);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324674(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227324D48(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_227324690(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227324ED0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2273246AC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325058(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273246C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2273251E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273246E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325338(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324700(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325494(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22732471C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2273255FC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324738(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227327244(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5C20, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
  *v3 = result;
  return result;
}

uint64_t sub_227324764(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22732578C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324780(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA290);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273247A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325904(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273247C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA288);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273247E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA260);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324808(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325C00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324824(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227325D4C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324840(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227327244(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5CB0, type metadata accessor for DetectedDoor);
  *v3 = result;
  return result;
}

uint64_t sub_22732486C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227326610(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5CB8, &qword_2558D5CC0);
  *v3 = result;
  return result;
}

uint64_t sub_227324898(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326018(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273248B4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227326174(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2273248D0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326314(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273248EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326494(a1, a2, a3, *v3, &qword_2558D5D30);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324918(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326494(a1, a2, a3, *v3, &qword_2558D5D48);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324944(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227326610(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5CE8, &qword_2558D7530);
  *v3 = result;
  return result;
}

uint64_t sub_227324970(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2273270B8(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5CF0, &qword_2558D5CF8);
  *v3 = result;
  return result;
}

uint64_t sub_22732499C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA298);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2273249C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227327244(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5D18, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_2273249EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326968(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324A08(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA248);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324A2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA268);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324A50(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326AD0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324A6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA278);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324A90(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326814(a1, a2, a3, *v3, &qword_2540BA280);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324AB4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227326C38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227324AD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227326F1C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_227324AEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227327244(a1, a2, a3, (_QWORD *)*v3, &qword_2558D55B8, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *v3 = result;
  return result;
}

uint64_t sub_227324B18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2273270B8(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5C90, (uint64_t *)&unk_2558D50B0);
  *v3 = result;
  return result;
}

uint64_t sub_227324B44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2273270B8(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5C58, &qword_2558D5C60);
  *v3 = result;
  return result;
}

uint64_t sub_227324B70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227326D94(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_227324B8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2273270B8(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5C80, &qword_2558D5C88);
  *v3 = result;
  return result;
}

uint64_t sub_227324BB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227327244(a1, a2, a3, (_QWORD *)*v3, &qword_2558D5C78, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
  *v3 = result;
  return result;
}

uint64_t sub_227324BE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227324D30(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA248);
}

uint64_t sub_227324D3C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2558D5C00);
}

uint64_t sub_227324D48(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C40);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C48);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227324ED0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558DA760);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325058(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8])
      memmove(v12, v13, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273251E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325338(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325494(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558DD1F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 80 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273255FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA2B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325764(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326494(a1, a2, a3, a4, &qword_2558D5D30);
}

uint64_t sub_227325778(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227327244(a1, a2, a3, a4, &qword_2558D5C20, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_22732578C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA330);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273258F8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA290);
}

uint64_t sub_227325904(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325A60(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA288);
}

uint64_t sub_227325A6C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C28);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558DDB60);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325BF4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA260);
}

uint64_t sub_227325C00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA250);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325D4C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227325EA8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227327244(a1, a2, a3, a4, &qword_2558D5CB0, type metadata accessor for DetectedDoor);
}

uint64_t sub_227325EBC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326018(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326174(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C98);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CA0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326314(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D08);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326494(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 96);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 96 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326610(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273267F0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA298);
}

uint64_t sub_2273267FC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA268);
}

uint64_t sub_227326808(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA280);
}

uint64_t sub_227326814(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_22732695C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_227326814(a1, a2, a3, a4, &qword_2540BA278);
}

uint64_t sub_227326968(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CD0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326AD0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326C38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326D94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C68);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C70);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227326F1C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA270);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9080);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273270A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227327244(a1, a2, a3, a4, &qword_2558D55B8, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
}

uint64_t sub_2273270B8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227327244(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_227327424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D58);
    v3 = sub_22758EBA4();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_22758E1E4();
      sub_22758EF4C();
      v7 = v6;
      sub_22758E274();
      v8 = sub_22758EF88();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_22758E1E4();
        v17 = v16;
        if (v15 == sub_22758E1E4() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_22758EE50();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_22758E1E4();
          v24 = v23;
          if (v22 == sub_22758E1E4() && v24 == v25)
            goto LABEL_3;
          v27 = sub_22758EE50();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_227327650(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22758ECE8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C08);
      result = sub_22758EBA4();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_22758ECE8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2276B2BEC](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_22758D128();
    sub_2273096F0(&qword_2558D5C10, v8, MEMORY[0x24BDB9B70]);
    result = sub_22758E130();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_2273096F0(&qword_2558D5C18, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_22758E190();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2273278E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;

  v2 = sub_22758C984();
  v3 = *(_QWORD *)(v2 - 8);
  v8 = MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11, v12, v13, v14);
  v16 = (char *)&v35 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D38);
    v18 = sub_22758EBA4();
    v19 = 0;
    v20 = *(unsigned __int8 *)(v3 + 80);
    v36 = v17;
    v37 = a1 + ((v20 + 32) & ~v20);
    v21 = *(_QWORD *)(v3 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v40 = v18 + 56;
    while (1)
    {
      v38 = v19;
      v39(v16, v37 + v21 * v19, v2);
      sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v22 = sub_22758E130();
      v23 = ~(-1 << *(_BYTE *)(v18 + 32));
      v24 = v22 & v23;
      v25 = (v22 & (unint64_t)v23) >> 6;
      v26 = *(_QWORD *)(v40 + 8 * v25);
      v27 = 1 << (v22 & v23);
      if ((v27 & v26) != 0)
      {
        do
        {
          v39(v10, *(_QWORD *)(v18 + 48) + v24 * v21, v2);
          sub_2273096F0((unint64_t *)&unk_2558D7550, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v28 = sub_22758E190();
          v29 = v3;
          v30 = *(void (**)(char *, uint64_t))(v3 + 8);
          v30(v10, v2);
          if ((v28 & 1) != 0)
          {
            v30(v16, v2);
            v3 = v29;
            v17 = v36;
            goto LABEL_4;
          }
          v24 = (v24 + 1) & v23;
          v25 = v24 >> 6;
          v26 = *(_QWORD *)(v40 + 8 * (v24 >> 6));
          v27 = 1 << v24;
          v3 = v29;
        }
        while ((v26 & (1 << v24)) != 0);
        v17 = v36;
      }
      *(_QWORD *)(v40 + 8 * v25) = v27 | v26;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v18 + 48) + v24 * v21, v16, v2);
      v32 = *(_QWORD *)(v18 + 16);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        break;
      *(_QWORD *)(v18 + 16) = v34;
LABEL_4:
      v19 = v38 + 1;
      if (v38 + 1 == v17)
        return v18;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_227327B4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227322B9C(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory, a2);
}

uint64_t sub_227327B68(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_227322C00(a1, a2, a3, a4, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_imageDirectory);
}

uint64_t sub_227327B84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227322B9C(a1, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory, a2);
}

uint64_t sub_227327BA0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_227322C00(a1, a2, a3, a4, &OBJC_IVAR____TtC16MagnifierSupport24MagnifierStillImageStore_thumbnailDirectory);
}

uint64_t sub_227327BBC()
{
  return type metadata accessor for MagnifierStillImageStore();
}

uint64_t type metadata accessor for MagnifierStillImageStore()
{
  uint64_t result;

  result = qword_2540B7B70;
  if (!qword_2540B7B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_227327C00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22758C858();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MagnifierStillImageStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageDirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.thumbnailDirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.__allocating_init(captureService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.saveAVCapturePhoto(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MagnifierStillImageStore.imageURLs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t storeEnumTagSinglePayload for MagnifierStillImageStore.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227327D4C + 4 * byte_227596EC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227327D80 + 4 * byte_227596EC0[v4]))();
}

uint64_t sub_227327D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227327D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227327D90);
  return result;
}

uint64_t sub_227327D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227327DA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227327DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227327DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MagnifierStillImageStore.Error()
{
  return &type metadata for MagnifierStillImageStore.Error;
}

unint64_t sub_227327DD0()
{
  unint64_t result;

  result = qword_2558D5BF8;
  if (!qword_2558D5BF8)
  {
    result = MEMORY[0x2276B3C78](&unk_227596FA8, &type metadata for MagnifierStillImageStore.Error);
    atomic_store(result, (unint64_t *)&qword_2558D5BF8);
  }
  return result;
}

uint64_t sub_227327E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CE0);
    v3 = sub_22758EBA4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_22758EF4C();
      swift_bridgeObjectRetain();
      sub_22758E274();
      result = sub_22758EF88();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_22758EE50(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_22758EE50();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_227327FB8(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C38);
      v3 = sub_22758EBA4();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_22758ECE8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x2276B2BEC](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_22758E940();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_227328310();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_22758E94C();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_22758E94C();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_22758E940();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_227328310();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_22758E94C();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_22758E94C();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_227328310()
{
  unint64_t result;

  result = qword_2558DCC50;
  if (!qword_2558DCC50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2558DCC50);
  }
  return result;
}

uint64_t sub_22732834C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_227328398(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2273283E4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_227328508(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98420;
}

uint64_t sub_227328518()
{
  sub_22732D6FC();
  return sub_22758E3AC();
}

uint64_t sub_227328574()
{
  sub_22732D6FC();
  return sub_22758E388();
}

uint64_t sub_2273285C0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E65657267;
  if (*v0 != 1)
    v1 = 1702194274;
  if (*v0)
    return v1;
  else
    return 6579570;
}

uint64_t sub_227328608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22732D338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22732862C()
{
  return 0;
}

void sub_227328638(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_227328644()
{
  sub_22732D630();
  return sub_22758EFDC();
}

uint64_t sub_22732866C()
{
  sub_22732D630();
  return sub_22758EFE8();
}

uint64_t sub_227328694(_QWORD *a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  double v19;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA230);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22732D630();
  sub_22758EFC4();
  v19 = a2;
  HIBYTE(v18) = 0;
  sub_22732D6B8();
  sub_22758EE08();
  if (!v4)
  {
    v19 = a3;
    HIBYTE(v18) = 1;
    sub_22758EE08();
    v19 = a4;
    HIBYTE(v18) = 2;
    sub_22758EE08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

void sub_227328820(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22732D464(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
}

uint64_t sub_22732884C(_QWORD *a1)
{
  double *v1;

  return sub_227328694(a1, *v1, v1[1], v1[2]);
}

BOOL sub_227328868(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_227328898(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2273288CC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

void sub_227328AAC(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_227328AE0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

id sub_227328F2C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t ObjCClassFromMetadata;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id result;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _UNKNOWN **v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_class *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56[2];
  __int128 v57;
  _UNKNOWN **v58;
  double v59;
  double v60;
  double v61;
  objc_super v62;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA0C0);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9AE0);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v10, v11, v12, v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9930);
  v54 = *(_QWORD *)(v16 - 8);
  v55 = v16;
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62.receiver = v0;
  v62.super_class = ObjectType;
  v51 = ObjectType;
  objc_msgSendSuper2(&v62, sel_viewDidLoad);
  v23 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView];
  objc_msgSend(v23, sel_setDataSource_, v0);
  objc_msgSend(v23, sel_setDelegate_, v0);
  sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v25 = (void *)sub_22758E1B4();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v25);

  type metadata accessor for UIStepperLengthCell();
  v26 = swift_getObjCClassFromMetadata();
  v27 = (void *)sub_22758E1B4();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, v26, v27);

  v28 = (void *)sub_22758E1B4();
  objc_msgSend(v23, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v28);

  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v30 = result;
  objc_msgSend(result, sel_addSubview_, v23);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v31 = result;
  sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
  swift_bridgeObjectRelease();

  v32 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController];
  objc_msgSend(v32, sel_setSupportsAlpha_, 0);
  if (qword_2540B87B8 != -1)
    swift_once();
  v33 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
  swift_beginAccess();
  v34 = *(void **)(v33 + 8);
  v35 = *(_UNKNOWN ***)(v33 + 32);
  v36 = *(_OWORD *)(v33 + 16);
  v56[0] = *(id *)v33;
  v56[1] = v34;
  v57 = v36;
  v58 = v35;
  v37 = qword_2540B9100;
  v38 = swift_bridgeObjectRetain();
  if (v37 != -1)
    v38 = swift_once();
  MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
  *(&v51 - 2) = (objc_class *)v56;
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v59, v60, v61, 1.0);
  objc_msgSend(v32, sel_setSelectedColor_, v43);

  objc_msgSend(v32, sel_setDelegate_, v1);
  v44 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController];
  *((_QWORD *)&v57 + 1) = v51;
  v58 = &off_24EF9C7A0;
  v56[0] = v1;
  v45 = v44 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate;
  swift_beginAccess();
  v46 = v1;
  sub_22732ED0C((uint64_t)v56, v45);
  swift_endAccess();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9BC0);
  sub_22758D170();
  swift_endAccess();
  v56[0] = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v47 = sub_22758EA00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v9, 1, 1, v47);
  sub_22730BA80(0, (unint64_t *)&unk_2540BA0E0);
  sub_22730BB7C((unint64_t *)&unk_2540B9AD0, &qword_2540B9AE0, MEMORY[0x24BDB9EE8]);
  sub_22730BAB8();
  v48 = v53;
  sub_22758D200();
  sub_22731A1A4((uint64_t)v9, (uint64_t *)&unk_2540BA0C0);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v48);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9920, &qword_2540B9930, MEMORY[0x24BDB9A08]);
  v49 = v55;
  v50 = sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v49);
  *(_QWORD *)&v46[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = v50;
  return (id)swift_release();
}

void sub_22732958C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[8];

  v3 = sub_22758CAD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v11 = MEMORY[0x2276B3E34](a2 + 16);
  if (v11)
  {
    v12 = (void *)v11;
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (v16[7] == 1)
    {
      objc_msgSend(v12, sel_beginUpdates);
      MEMORY[0x2276B0A98](1, 2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D50E0);
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_227593AB0;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v4 + 16))(v14 + v13, v10, v3);
      v15 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_reloadRowsAtIndexPaths_withRowAnimation_, v15, 100);

      objc_msgSend(v12, sel_endUpdates);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {

    }
  }
}

void sub_2273297A8(char a1)
{
  void *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

}

id sub_227329958(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  objc_class *ObjectType;
  objc_super v24;
  uint64_t v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v3;
  v6 = 0;
  v7 = MEMORY[0x24BEE4AF8];
  do
  {
    v10 = byte_24EF98470[v6 + 32];
    if (v10 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v25 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2273247C0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v25;
      }
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_2273247C0(v8 > 1, v9 + 1, 1);
        v7 = v25;
      }
      *(_QWORD *)(v7 + 16) = v9 + 1;
      *(_BYTE *)(v7 + v9 + 32) = v10;
    }
    ++v6;
  }
  while (v6 != 4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks] = v7;
  v11 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_systemYellowColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  objc_msgSend(v14, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v5[v11] = v14;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = 0;
  v16 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController;
  *(_QWORD *)&v5[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4C8]), sel_init);
  v17 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController;
  type metadata accessor for DoorAttributeCustomizationViewController();
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  if (a2)
  {
    v18 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v24.receiver = v5;
  v24.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, v18, a3, a1);

  return v19;
}

id sub_227329C44(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_class *ObjectType;
  objc_super v19;
  uint64_t v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = v1;
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
  do
  {
    v8 = byte_24EF98498[v4 + 32];
    if (v8 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v20 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2273247C0(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v20;
      }
      v7 = *(_QWORD *)(v5 + 16);
      v6 = *(_QWORD *)(v5 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_2273247C0(v6 > 1, v7 + 1, 1);
        v5 = v20;
      }
      *(_QWORD *)(v5 + 16) = v7 + 1;
      *(_BYTE *)(v5 + v7 + 32) = v8;
    }
    ++v4;
  }
  while (v4 != 4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks] = v5;
  v9 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_systemYellowColor);
  objc_msgSend(v12, sel_setTintColor_, v13);

  objc_msgSend(v12, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v3[v9] = v12;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_speechFeedbackSubscription] = 0;
  v14 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController;
  *(_QWORD *)&v3[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4C8]), sel_init);
  v15 = OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController;
  type metadata accessor for DoorAttributeCustomizationViewController();
  *(_QWORD *)&v3[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  v19.receiver = v3;
  v19.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);

  return v16;
}

uint64_t type metadata accessor for DoorDetectionSettingsViewController()
{
  return objc_opt_self();
}

id sub_227329FA8(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  int v11;
  char v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  char **v44;
  id v45;
  _BYTE v47[32];
  id v48;
  uint64_t v49;
  unsigned __int8 v50;
  _QWORD v51[2];
  uint64_t v52;
  _QWORD v53[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6620);
  v49 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = 5;
  v11 = 2;
  switch(sub_22758CAC8())
  {
    case 0:
      v11 = 0;
      goto LABEL_7;
    case 1:
      v13 = (void *)sub_22758E1B4();
      v14 = (void *)sub_22758CA74();
      v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

      type metadata accessor for UIStepperLengthCell();
      if (swift_dynamicCastClass())
      {
        v23 = qword_2540B87B8;
        v24 = v15;
        if (v23 != -1)
          swift_once();
        v48 = v24;
        v25 = (_QWORD *)(qword_2540BCDD0
                       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold);
        swift_beginAccess();
        v26 = v25[1];
        v27 = v25[2];
        v53[0] = *v25;
        v53[1] = v26;
        v53[2] = v27;
        v28 = qword_2540B9100;
        v29 = swift_bridgeObjectRetain();
        if (v28 != -1)
          v29 = swift_once();
        MEMORY[0x24BDAC7A8](v29, v30, v31, v32, v33);
        *(_QWORD *)&v47[-16] = v53;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        v34 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        v35 = swift_beginAccess();
        v36 = *(_QWORD *)(v34 + 8);
        v37 = *(_BYTE *)(v34 + 16);
        v51[0] = *(_QWORD *)v34;
        v51[1] = v36;
        LOBYTE(v52) = v37;
        MEMORY[0x24BDAC7A8](v35, v38, v39, v40, v41);
        *(_QWORD *)&v47[-16] = v51;
        swift_bridgeObjectRetain();
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        v42 = v50;
        v43 = (void *)objc_opt_self();
        v44 = &selRef_feet;
        if (!v42)
          v44 = &selRef_meters;
        v45 = objc_msgSend(v43, *v44);
        sub_22730BA80(0, (unint64_t *)&qword_2558D50C0);
        sub_22758C57C();
        sub_227436BC0((uint64_t)v9, (uint64_t)sub_22732BDFC, 0);
        v15 = v48;

        (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v9, v3);
      }
      return v15;
    case 2:
      goto LABEL_7;
    case 3:
      v11 = 3;
      goto LABEL_7;
    case 4:
      v11 = 4;
LABEL_7:
      v48 = v1;
      v12 = 0;
      goto LABEL_8;
    case 5:
      goto LABEL_11;
    case 6:
      v10 = 6;
LABEL_11:
      v18 = sub_22758CA98();
      v48 = v1;
      if (v18 == 1)
      {
        v19 = (void *)sub_22758E1B4();
        v20 = (void *)sub_22758CA74();
        v21 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v19, v20);

      }
      else
      {
        v22 = objc_allocWithZone(MEMORY[0x24BEBD9F8]);
        v20 = (void *)sub_22758E1B4();
        objc_msgSend(v22, sel_initWithStyle_reuseIdentifier_, 1, v20);
      }

      goto LABEL_15;
    default:
      v48 = v1;
      v11 = 7;
      v12 = 1;
LABEL_8:
      v16 = (void *)sub_22758E1B4();
      v17 = (void *)sub_22758CA74();
      v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v16, v17);

      v10 = v11;
      if ((v12 & 1) == 0)
LABEL_15:
        __asm { BR              X10 }
      return v15;
  }
}

uint64_t sub_22732BDFC(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  double v18;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
  swift_beginAccess();
  v18 = a1;
  if (qword_2540B9100 != -1)
    swift_once();
  v11 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  *(_QWORD *)&v17[-16] = &v18;
  *(_QWORD *)&v17[-8] = v10;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

id sub_22732C0FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, _QWORD))
{
  uint64_t v5;
  void *v6;

  sub_22732EC48(a4, a5);
  if (v5)
  {
    v6 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

void sub_22732C1D0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  int v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void (*v51)(char *, uint64_t);
  void *v52;
  id v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint8_t *v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  void (*v79)(char *, uint64_t);
  unsigned int v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  __int128 v86;
  _BYTE v87[24];
  uint64_t v88;
  id v89[2];

  v2 = v1;
  v4 = sub_22758CA44();
  v82 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v81 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758CAD4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22758DF20();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20, v21, v22, v23);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (void *)sub_22758CA74();
  v84 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v26);

  if (v84)
  {
    v27 = (void *)sub_22758CA74();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v27, 1);

    switch(sub_22758CAC8())
    {
      case 0:
        v28 = sub_22758CA98();
        if (v28)
        {
          if (v28 != 1)
            goto LABEL_38;
          v29 = 1;
        }
        else
        {
          v29 = 0;
        }
        v80 = v29;
        if (qword_2540B87B8 != -1)
          swift_once();
        v33 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
        swift_beginAccess();
        v34 = *(_QWORD *)(v33 + 8);
        v35 = *(_BYTE *)(v33 + 16);
        *(_QWORD *)&v85 = *(_QWORD *)v33;
        *((_QWORD *)&v85 + 1) = v34;
        LOBYTE(v86) = v35;
        v36 = qword_2540B9100;
        v37 = swift_bridgeObjectRetain();
        if (v36 != -1)
          v37 = swift_once();
        v79 = (void (*)(char *, uint64_t))&v79;
        MEMORY[0x24BDAC7A8](v37, v38, v39, v40, v41);
        *(&v79 - 2) = (void (*)(char *, uint64_t))&v85;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        v42 = v80;
        if (v80 != LOBYTE(v89[0]))
        {
          v43 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionUnit;
          swift_beginAccess();
          LOBYTE(v89[0]) = v42;
          v44 = sub_22758DF14();
          v79 = (void (*)(char *, uint64_t))&v79;
          MEMORY[0x24BDAC7A8](v44, v45, v46, v47, v48);
          *(&v79 - 2) = (void (*)(char *, uint64_t))v89;
          *(&v79 - 1) = (void (*)(char *, uint64_t))v43;
          sub_22758E7A8();
          v79 = *(void (**)(char *, uint64_t))(v19 + 8);
          v79(v25, v18);
          swift_endAccess();
          MEMORY[0x2276B0A98](0, 0);
          v49 = (void *)sub_22758CA74();
          v50 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v49);

          if (v50)
          {
            objc_msgSend(v50, sel_setAccessoryType_, 0);

          }
          v51 = *(void (**)(char *, uint64_t))(v11 + 8);
          v51(v17, v10);
          MEMORY[0x2276B0A98](1, 0);
          v52 = (void *)sub_22758CA74();
          v53 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v52);

          if (v53)
          {
            objc_msgSend(v53, sel_setAccessoryType_, 0);

          }
          v51(v17, v10);
          objc_msgSend(v84, sel_setAccessoryType_, 3);
          if (qword_2558D4A48 != -1)
            swift_once();
          v54 = sub_22758CF9C();
          __swift_project_value_buffer(v54, (uint64_t)qword_2558D6200);
          v55 = sub_22758CF84();
          v56 = sub_22758E6B8();
          if (os_log_type_enabled(v55, v56))
          {
            v57 = v80;
            v58 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v58 = 134217984;
            *(_QWORD *)&v85 = v57;
            sub_22758EA48();
            _os_log_impl(&dword_2272F4000, v55, v56, "New door detection unit: %ld", v58, 0xCu);
            MEMORY[0x2276B3D50](v58, -1, -1);
          }

          if (v80)
            v59 = 6.0;
          else
            v59 = 2.0;
          v60 = qword_2540BCDD0
              + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionPitchThreshold;
          swift_beginAccess();
          v89[0] = *(id *)&v59;
          v61 = sub_22758DF14();
          MEMORY[0x24BDAC7A8](v61, v62, v63, v64, v65);
          *(&v79 - 2) = (void (*)(char *, uint64_t))v89;
          *(&v79 - 1) = (void (*)(char *, uint64_t))v60;
          sub_22758E7A8();
          v66 = v79;
          v79(v25, v18);
          swift_endAccess();
          v67 = qword_2540BCDD0
              + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectionPitchThreshold;
          swift_beginAccess();
          v89[0] = *(id *)&v59;
          v68 = sub_22758DF14();
          MEMORY[0x24BDAC7A8](v68, v69, v70, v71, v72);
          *(&v79 - 2) = (void (*)(char *, uint64_t))v89;
          *(&v79 - 1) = (void (*)(char *, uint64_t))v67;
          sub_22758E7A8();
          v66(v25, v18);
          swift_endAccess();
          objc_msgSend(a1, sel_beginUpdates);
          *(_QWORD *)&v85 = &unk_24EF984E8;
          sub_2273096F0((unint64_t *)&qword_2558D5E20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF428], MEMORY[0x24BDCF468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D50B0);
          sub_22730BB7C((unint64_t *)&qword_2558D5E30, (uint64_t *)&unk_2558D50B0, MEMORY[0x24BEE12C8]);
          v73 = v81;
          v74 = v83;
          sub_22758EACC();
          v75 = (void *)sub_22758CA38();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v73, v74);
          objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v75, 100);

          objc_msgSend(a1, sel_endUpdates);
        }
        goto LABEL_38;
      case 3:
        objc_msgSend(v1, sel_presentViewController_animated_completion_, *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_colorPickerController], 1, 0);
        goto LABEL_38;
      case 5:
        v30 = objc_msgSend((id)objc_opt_self(), sel_shared);
        v31 = objc_msgSend(v30, sel_doorAttributesClassifierProperties);

        if (!v31)
          goto LABEL_38;
        *(_QWORD *)&v85 = 0xD000000000000017;
        *((_QWORD *)&v85 + 1) = 0x80000002275AEFD0;
        v32 = objc_msgSend(v31, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
        swift_unknownObjectRelease();
        if (v32)
        {
          sub_22758EAB4();
          swift_unknownObjectRelease();
        }
        else
        {
          v85 = 0u;
          v86 = 0u;
        }
        sub_22732D760((uint64_t)&v85, (uint64_t)v87);
        if (v88)
        {
          sub_22730BA80(0, (unint64_t *)&unk_2558D5E40);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v76 = v89[0];
            if ((uint64_t)objc_msgSend(v89[0], sel_count) >= 1)
            {
              v77 = objc_msgSend(v2, sel_navigationController);
              if (v77)
              {
                v78 = v77;
                objc_msgSend(v77, sel_pushViewController_animated_, *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_doorAttributesController], 1);

              }
            }

          }
          else
          {

LABEL_38:
          }
        }
        else
        {

          sub_22731A1A4((uint64_t)v87, &qword_2540BA340);
        }
        break;
      default:
        goto LABEL_38;
    }
  }
}

uint64_t sub_22732CBBC(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  _QWORD v70[35];

  v3 = v1;
  v5 = sub_22758DF20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7, v8, v9, v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_selectedColor);
  v14 = objc_msgSend(v13, sel_CGColor);

  v15 = (_QWORD *)sub_22758E640();
  if (!v15)
    v15 = &unk_24EF98510;
  if (qword_2540B87B8 == -1)
  {
    v16 = v15[2];
    if (v16)
      goto LABEL_5;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_once();
  v16 = v15[2];
  if (!v16)
    goto LABEL_18;
LABEL_5:
  if (v16 == 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v16 >= 3)
  {
    v2 = &unk_2540BC000;
    v17 = qword_2540BCDD0;
    v18 = v15[4];
    v19 = v15[5];
    v20 = v15[6];
    swift_bridgeObjectRelease();
    v14 = (id)(v17 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor);
    swift_beginAccess();
    v63 = v18;
    v64 = v19;
    *(_QWORD *)&v65 = v20;
    if (qword_2540B9100 == -1)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_8:
  v21 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  *(&v63 - 2) = (uint64_t)&v63;
  *(&v63 - 1) = (uint64_t)v14;
  sub_22758E7A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  swift_endAccess();
  v26 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_tableView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D50E0);
  sub_22758CAD4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_227593AB0;
  MEMORY[0x2276B0AB0](0, 3);
  v27 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_reloadRowsAtIndexPaths_withRowAnimation_, v27, 5);

  v28 = (_QWORD *)v2[442];
  v29 = swift_beginAccess();
  v30 = v28[10];
  v31 = v28[11];
  v32 = v28[12];
  v70[0] = v28[9];
  v70[1] = v30;
  v70[2] = v31;
  v70[3] = v32;
  MEMORY[0x24BDAC7A8](v29, v33, v34, v35, v36);
  *(&v63 - 2) = (uint64_t)v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v38 = v64;
  if (v64)
  {
    v39 = v63;
    v40 = (_QWORD *)v2[442];
    v41 = swift_beginAccess();
    v42 = v40[6];
    v43 = v40[7];
    v70[0] = v40[5];
    v70[1] = v42;
    v70[2] = v43;
    MEMORY[0x24BDAC7A8](v41, v44, v45, v46, v47);
    *(&v63 - 2) = (uint64_t)v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v63;
    if (*(_QWORD *)(v63 + 16) && (v49 = sub_2274DE434(v39, v38), (v50 & 1) != 0))
    {
      memcpy(v70, (const void *)(*(_QWORD *)(v48 + 56) + 280 * v49), sizeof(v70));
      sub_22730B838((uint64_t)v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = *(double *)&v70[15];
      v51 = *(double *)&v70[16];
      v53 = *(double *)&v70[17];
      v54 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionColor;
      v55 = swift_beginAccess();
      v56 = *(_QWORD *)(v54 + 8);
      v57 = *(_QWORD *)(v54 + 32);
      v58 = *(_OWORD *)(v54 + 16);
      v63 = *(_QWORD *)v54;
      v64 = v56;
      v65 = v58;
      v66 = v57;
      MEMORY[0x24BDAC7A8](v55, v59, v60, v61, v62);
      *(&v63 - 2) = (uint64_t)&v63;
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      result = sub_22730B91C((uint64_t)v70);
      if (v52 != v67 || v51 != v68 || v53 != v69)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v63) = 1;
        swift_retain();
        return sub_22758D1A0();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MagnifierColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MagnifierColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MagnifierColor()
{
  return &type metadata for MagnifierColor;
}

uint64_t storeEnumTagSinglePayload for DoorDetectionFeedback(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22732D244 + 4 * byte_227597015[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22732D278 + 4 * byte_227597010[v4]))();
}

uint64_t sub_22732D278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22732D280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22732D288);
  return result;
}

uint64_t sub_22732D294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22732D29CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22732D2A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22732D2A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DoorDetectionFeedback()
{
  return &type metadata for DoorDetectionFeedback;
}

unint64_t sub_22732D2C8()
{
  unint64_t result;

  result = qword_2558D5E10;
  if (!qword_2558D5E10)
  {
    result = MEMORY[0x2276B3C78](&unk_2275971F0, &type metadata for DoorDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D5E10);
  }
  return result;
}

uint64_t sub_22732D30C()
{
  return sub_22730BB7C(&qword_2558D5E18, &qword_2540B9D50, MEMORY[0x24BEE12E0]);
}

uint64_t sub_22732D338(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_22758EE50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_22758EE50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22758EE50();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

double sub_22732D464(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v12;
  char v13;
  double v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA218);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22732D630();
  sub_22758EFB8();
  v13 = 0;
  sub_22732D674();
  sub_22758EDA8();
  v10 = v14;
  v13 = 1;
  sub_22758EDA8();
  v13 = 2;
  sub_22758EDA8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v10;
}

unint64_t sub_22732D630()
{
  unint64_t result;

  result = qword_2540B7CA0;
  if (!qword_2540B7CA0)
  {
    result = MEMORY[0x2276B3C78](&unk_2275973F4, &type metadata for MagnifierColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2540B7CA0);
  }
  return result;
}

unint64_t sub_22732D674()
{
  unint64_t result;

  result = qword_2540B7B68;
  if (!qword_2540B7B68)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2540B7B68);
  }
  return result;
}

unint64_t sub_22732D6B8()
{
  unint64_t result;

  result = qword_2540B7B50;
  if (!qword_2540B7B50)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2540B7B50);
  }
  return result;
}

unint64_t sub_22732D6FC()
{
  unint64_t result;

  result = qword_2540B9230;
  if (!qword_2540B9230)
  {
    result = MEMORY[0x2276B3C78](&unk_227597178, &type metadata for DoorDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2540B9230);
  }
  return result;
}

void sub_22732D740()
{
  sub_227468978();
}

uint64_t sub_22732D760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22732D7A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = 2;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 3:
    case 5:
    case 6:
      result = 1;
      break;
    case 2:
      result = *(_QWORD *)(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC16MagnifierSupport35DoorDetectionSettingsViewController_availableDoorDetectionFeedbacks)
                         + 16);
      break;
    case 4:
      result = AXDeviceSupportsBackTap();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_22732D818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  char v44;
  _BYTE v45[9];

  v0 = sub_22758DF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v9 = objc_msgSend(v8, sel_downloadManager);

  v10 = (void *)sub_22758E1B4();
  objc_msgSend(v9, sel_totalDownloadedWithName_, v10);
  v12 = v11;

  if (v12 < 100.0)
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    v13 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
    swift_beginAccess();
    LOBYTE(v43[0]) = 0;
    if (qword_2540B9100 != -1)
      swift_once();
    v14 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
    v43[-2] = v43;
    v43[-1] = v13;
    sub_22758E7A8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return swift_endAccess();
  }
  if (qword_2540B87B8 != -1)
    swift_once();
  v19 = qword_2540BCDD0;
  *(_BYTE *)(qword_2540BCDD0
           + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloaded) = 1;
  *(_BYTE *)(v19 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloading) = 0;
  v20 = v19
      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorAttributesToggledOnAfterSuccessfulDownload;
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + 8);
  v22 = *(_BYTE *)(v20 + 16);
  v43[0] = *(_QWORD *)v20;
  v43[1] = v21;
  v44 = v22;
  v23 = qword_2540B9100;
  v24 = swift_bridgeObjectRetain();
  if (v23 != -1)
    v24 = swift_once();
  MEMORY[0x24BDAC7A8](v24, v25, v26, v27, v28);
  v43[-2] = v43;
  sub_22758E7B4();
  result = swift_bridgeObjectRelease();
  if ((v45[0] & 1) == 0)
  {
    v30 = qword_2540BCDD0
        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorAttributesToggledOnAfterSuccessfulDownload;
    swift_beginAccess();
    v45[0] = 1;
    v31 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
    v43[-2] = v45;
    v43[-1] = v30;
    sub_22758E7A8();
    v36 = *(void (**)(char *, uint64_t))(v1 + 8);
    v36(v7, v0);
    swift_endAccess();
    v37 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
    swift_beginAccess();
    v45[0] = 1;
    v38 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
    v43[-2] = v45;
    v43[-1] = v37;
    sub_22758E7A8();
    v36(v7, v0);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_22732DC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  char v44;
  _BYTE v45[9];

  v0 = sub_22758DF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v9 = objc_msgSend(v8, sel_downloadManager);

  v10 = (void *)sub_22758E1B4();
  objc_msgSend(v9, sel_totalDownloadedWithName_, v10);
  v12 = v11;

  if (v12 < 100.0)
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    v13 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    LOBYTE(v43[0]) = 0;
    if (qword_2540B9100 != -1)
      swift_once();
    v14 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
    v43[-2] = v43;
    v43[-1] = v13;
    sub_22758E7A8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return swift_endAccess();
  }
  if (qword_2540B87B8 != -1)
    swift_once();
  v19 = qword_2540BCDD0;
  *(_BYTE *)(qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloaded) = 1;
  *(_BYTE *)(v19 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloading) = 0;
  v20 = v19
      + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorSignsToggledOnAfterSuccessfulDownload;
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + 8);
  v22 = *(_BYTE *)(v20 + 16);
  v43[0] = *(_QWORD *)v20;
  v43[1] = v21;
  v44 = v22;
  v23 = qword_2540B9100;
  v24 = swift_bridgeObjectRetain();
  if (v23 != -1)
    v24 = swift_once();
  MEMORY[0x24BDAC7A8](v24, v25, v26, v27, v28);
  v43[-2] = v43;
  sub_22758E7B4();
  result = swift_bridgeObjectRelease();
  if ((v45[0] & 1) == 0)
  {
    v30 = qword_2540BCDD0
        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorSignsToggledOnAfterSuccessfulDownload;
    swift_beginAccess();
    v45[0] = 1;
    v31 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
    v43[-2] = v45;
    v43[-1] = v30;
    sub_22758E7A8();
    v36 = *(void (**)(char *, uint64_t))(v1 + 8);
    v36(v7, v0);
    swift_endAccess();
    v37 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    v45[0] = 1;
    v38 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
    v43[-2] = v45;
    v43[-1] = v37;
    sub_22758E7A8();
    v36(v7, v0);
    return swift_endAccess();
  }
  return result;
}

BOOL sub_22732E074(SEL *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  v6 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v7 = objc_msgSend(v6, *a1);

  if (v7)
  {
    *(_QWORD *)&v12[0] = a2;
    *((_QWORD *)&v12[0] + 1) = a3;
    v8 = objc_msgSend(v7, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v8)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_22732D760((uint64_t)v12, (uint64_t)v13);
    if (v14)
    {
      sub_22730BA80(0, (unint64_t *)&unk_2558D5E40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = objc_msgSend(v11, sel_count);

        return (uint64_t)v9 > 0;
      }

    }
    else
    {

      sub_22731A1A4((uint64_t)v13, &qword_2540BA340);
    }
  }
  return 0;
}

id sub_22732E1E8(void *a1)
{
  id result;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  uint64_t v26;

  result = objc_msgSend(a1, sel_tag);
  if ((unint64_t)result <= 3)
  {
    v3 = result;
    if (objc_msgSend(a1, sel_isOn))
    {
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_beginAccess();
      v4 = qword_2540B9100;
      swift_bridgeObjectRetain();
      v5 = swift_bridgeObjectRetain();
      if (v4 != -1)
        v5 = swift_once();
      MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D50);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v10 = (char *)v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_2273A4D20(0, *(_QWORD *)(v26 + 16) + 1, 1, (char *)v26);
      v12 = *((_QWORD *)v10 + 2);
      v11 = *((_QWORD *)v10 + 3);
      if (v12 >= v11 >> 1)
        v10 = sub_2273A4D20((char *)(v11 > 1), v12 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v12 + 1;
      v10[v12 + 32] = v3;
      swift_bridgeObjectRelease();
      sub_227445BFC((uint64_t)v10, 1);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_beginAccess();
      v13 = qword_2540B9100;
      swift_bridgeObjectRetain();
      v14 = swift_bridgeObjectRetain();
      if (v13 != -1)
        v14 = swift_once();
      MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D50);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v26 + 16);
      if (v19)
      {
        v20 = (unsigned __int8 *)(v26 + 32);
        v21 = MEMORY[0x24BEE4AF8];
        do
        {
          v25 = *v20++;
          v24 = v25;
          if (v25 != v3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              sub_2273247C0(0, *(_QWORD *)(v21 + 16) + 1, 1);
            v23 = *(_QWORD *)(v21 + 16);
            v22 = *(_QWORD *)(v21 + 24);
            if (v23 >= v22 >> 1)
              sub_2273247C0(v22 > 1, v23 + 1, 1);
            *(_QWORD *)(v21 + 16) = v23 + 1;
            *(_BYTE *)(v21 + v23 + 32) = v24;
          }
          --v19;
        }
        while (v19);
      }
      else
      {
        v21 = MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      sub_227445BFC(v21, 1);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_22732E5B0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[23];
  unsigned __int8 v20;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0;
  v11 = objc_msgSend(a1, sel_isOn);
  v12 = v10 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__backTapEnabled;
  swift_beginAccess();
  v20 = v11;
  if (qword_2540B9100 != -1)
    swift_once();
  v13 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  *(_QWORD *)&v19[-16] = &v20;
  *(_QWORD *)&v19[-8] = v12;
  sub_22758E7A8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v2);
  return swift_endAccess();
}

uint64_t sub_22732E728(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  char v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD v54[36];
  uint64_t v55;
  char v56;

  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v50[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isOn))
  {
    if (qword_2540B87B8 != -1)
      swift_once();
    v10 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
    swift_beginAccess();
    v56 = 1;
    if (qword_2540B9100 == -1)
      goto LABEL_9;
LABEL_20:
    swift_once();
    goto LABEL_9;
  }
  if (qword_2540B87B8 != -1)
    swift_once();
  v10 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
  swift_beginAccess();
  v56 = 0;
  if (qword_2540B9100 != -1)
    goto LABEL_20;
LABEL_9:
  v11 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  *(&v49 - 2) = (uint64_t)&v56;
  *(&v49 - 1) = v10;
  sub_22758E7A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  swift_endAccess();
  if (qword_2540B87B8 != -1)
    swift_once();
  v16 = (_QWORD *)qword_2540BCDD0;
  swift_beginAccess();
  v17 = v16[10];
  v18 = v16[11];
  v19 = v16[12];
  v54[0] = v16[9];
  v54[1] = v17;
  v54[2] = v18;
  v54[3] = v19;
  v20 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  if (v20 != -1)
    v21 = swift_once();
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  *(&v49 - 2) = (uint64_t)v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v27 = v55;
  if (v55)
  {
    v28 = v54[35];
    v29 = (_QWORD *)qword_2540BCDD0;
    v30 = swift_beginAccess();
    v31 = v29[6];
    v32 = v29[7];
    v54[0] = v29[5];
    v54[1] = v31;
    v54[2] = v32;
    MEMORY[0x24BDAC7A8](v30, v33, v34, v35, v36);
    *(&v49 - 2) = (uint64_t)v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v53;
    if (*(_QWORD *)(v53 + 16) && (v38 = sub_2274DE434(v28, v27), (v39 & 1) != 0))
    {
      memcpy(v54, (const void *)(*(_QWORD *)(v37 + 56) + 280 * v38), 0x118uLL);
      sub_22730B838((uint64_t)v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = LOBYTE(v54[20]);
      v41 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
      v42 = swift_beginAccess();
      v43 = *(_QWORD *)(v41 + 8);
      v44 = *(_BYTE *)(v41 + 16);
      v50[0] = *(_QWORD *)v41;
      v50[1] = v43;
      v51 = v44;
      MEMORY[0x24BDAC7A8](v42, v45, v46, v47, v48);
      *(&v49 - 2) = (uint64_t)v50;
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      result = sub_22730B91C((uint64_t)v54);
      if (v40 != v52)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v50[0]) = 1;
        swift_retain();
        return sub_22758D1A0();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22732EC48(unint64_t a1, uint64_t (*a2)(unint64_t, _QWORD))
{
  if (a1 > 6)
    return 0;
  else
    return a2(a1, a2);
}

BOOL sub_22732EC70()
{
  return sub_22758CAC8() != 2;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_22732ECB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2273AB280(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_22732ECC8()
{
  unint64_t result;

  result = qword_2540B9C70;
  if (!qword_2540B9C70)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540B9C70);
  }
  return result;
}

uint64_t sub_22732ED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D5FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22732ED54()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22732ED78(uint64_t a1)
{
  uint64_t v1;

  sub_22732958C(a1, v1);
}

uint64_t getEnumTagSinglePayload for MagnifierColor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MagnifierColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22732EE64 + 4 * byte_227597026[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22732EE98 + 4 * byte_227597021[v4]))();
}

uint64_t sub_22732EE98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22732EEA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22732EEA8);
  return result;
}

uint64_t sub_22732EEB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22732EEBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22732EEC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22732EEC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MagnifierColor.CodingKeys()
{
  return &type metadata for MagnifierColor.CodingKeys;
}

unint64_t sub_22732EEE8()
{
  unint64_t result;

  result = qword_2558D5E58;
  if (!qword_2558D5E58)
  {
    result = MEMORY[0x2276B3C78](&unk_2275973CC, &type metadata for MagnifierColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558D5E58);
  }
  return result;
}

unint64_t sub_22732EF30()
{
  unint64_t result;

  result = qword_2540B7CB0;
  if (!qword_2540B7CB0)
  {
    result = MEMORY[0x2276B3C78](&unk_22759733C, &type metadata for MagnifierColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2540B7CB0);
  }
  return result;
}

unint64_t sub_22732EF78()
{
  unint64_t result;

  result = qword_2540B7CA8;
  if (!qword_2540B7CA8)
  {
    result = MEMORY[0x2276B3C78](&unk_227597364, &type metadata for MagnifierColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2540B7CA8);
  }
  return result;
}

uint64_t sub_22732EFC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_22730B7B0(a1);
}

uint64_t sub_22732EFD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_22730B820(a1);
}

uint64_t sub_22732EFE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_22732ECB0(a1);
}

void sub_22732EFFC()
{
  sub_22730BA08();
}

uint64_t SpatialPersonDetection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22758C984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SpatialPersonDetection.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22758C984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SpatialPersonDetection.id.modify())()
{
  return CGRectMake;
}

__n128 SpatialPersonDetection.dimensions.getter()
{
  uint64_t v0;

  return *(__n128 *)(v0 + *(int *)(type metadata accessor for SpatialPersonDetection() + 20));
}

uint64_t type metadata accessor for SpatialPersonDetection()
{
  uint64_t result;

  result = qword_2558D5EC8;
  if (!qword_2558D5EC8)
    return swift_getSingletonMetadata();
  return result;
}

__n128 SpatialPersonDetection.dimensions.setter(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  v2 = type metadata accessor for SpatialPersonDetection();
  result = a1;
  *(__n128 *)(v1 + *(int *)(v2 + 20)) = a1;
  return result;
}

uint64_t (*SpatialPersonDetection.dimensions.modify())()
{
  type metadata accessor for SpatialPersonDetection();
  return CGRectMake;
}

__n128 SpatialPersonDetection.transform.getter()
{
  uint64_t v0;

  return *(__n128 *)(v0 + *(int *)(type metadata accessor for SpatialPersonDetection() + 24));
}

__n128 SpatialPersonDetection.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  __n128 *v5;
  __n128 result;

  v5 = (__n128 *)(v4 + *(int *)(type metadata accessor for SpatialPersonDetection() + 24));
  *v5 = a1;
  v5[1] = a2;
  result = a4;
  v5[2] = a3;
  v5[3] = a4;
  return result;
}

uint64_t (*SpatialPersonDetection.transform.modify())()
{
  type metadata accessor for SpatialPersonDetection();
  return CGRectMake;
}

float SpatialPersonDetection.volume.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SpatialPersonDetection();
  return *(float *)(v0 + *(int *)(v1 + 20) + 8)
       * (float)(*(float *)(v0 + *(int *)(v1 + 20)) * *(float *)(v0 + *(int *)(v1 + 20) + 4));
}

uint64_t sub_22732F214@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 IsLandscape;
  __CVBuffer *v33;
  __CVBuffer *v34;
  int64_t Width;
  __CVBuffer *v36;
  size_t Height;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  uint64_t v49;
  double a;
  double d;
  double b;
  double tx;
  double ty;
  double c;
  CGFloat x;
  CGFloat y;
  CGFloat v58;
  CGFloat v59;
  float32x4_t v60;
  id v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  float32x4_t v85;
  float32x4_t v86;
  float v87;
  float32x4_t v88;
  float v89;
  uint64_t v90;
  uint64_t v91;
  float32x4_t v92;
  id v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  uint64_t v98;
  __float2 v99;
  __n128 v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  id v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t *v112;
  id v113;
  id v114;
  void *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  float32x4_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  simd_float4 v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  simd_float4 v137;
  simd_float4 v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  CGAffineTransform v143;
  simd_float4x4 v144;
  simd_float4x4 v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v130 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_22758C984();
  v128 = *(_QWORD *)(v131 - 8);
  v18 = MEMORY[0x24BDAC7A8](v131, v14, v15, v16, v17);
  v127 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20, v21, v22, v23);
  v129 = (char *)&v126 - v24;
  v25 = type metadata accessor for SpatialPersonDetection();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v27, v28, v29, v30);
  v132 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  IsLandscape = UIInterfaceOrientationIsLandscape(a3);
  v33 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
  v34 = v33;
  if (IsLandscape)
  {
    Width = CVPixelBufferGetWidth(v33);

    v36 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
    Height = CVPixelBufferGetHeight(v36);
  }
  else
  {
    Width = CVPixelBufferGetHeight(v33);

    v36 = (__CVBuffer *)objc_msgSend(a2, sel_capturedImage);
    Height = CVPixelBufferGetWidth(v36);
  }
  v38 = Height;

  v39 = (double)Width;
  v40 = (double)v38;
  objc_msgSend(a1, sel_screenRect);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v134 = a4;
  v135 = v26;
  v49 = v25;
  switch(a3)
  {
    case 1:
      c = -v39;
      a = 0.0;
      b = (double)v38;
      d = 0.0;
      tx = (double)Width;
      ty = 0.0;
      break;
    case 2:
      b = -v40;
      a = 0.0;
      c = (double)Width;
      d = 0.0;
      ty = (double)v38;
      tx = 0.0;
      break;
    case 4:
      a = -v39;
      d = -v40;
      b = 0.0;
      tx = (double)Width;
      ty = (double)v38;
      c = 0.0;
      break;
    default:
      CGAffineTransformMakeScale(&v143, (double)Width, (double)v38);
      a = v143.a;
      b = v143.b;
      c = v143.c;
      d = v143.d;
      tx = v143.tx;
      ty = v143.ty;
      break;
  }
  v143.a = a;
  v143.b = b;
  v143.c = c;
  v143.d = d;
  v143.tx = tx;
  v143.ty = ty;
  v146.origin.x = v42;
  v146.origin.y = v44;
  v146.size.width = v46;
  v146.size.height = v48;
  v147 = CGRectApplyAffineTransform(v146, &v143);
  x = v147.origin.x;
  y = v147.origin.y;
  v58 = v147.size.width;
  v59 = v147.size.height;
  CGRectGetMinX(v147);
  v148.origin.x = x;
  v148.origin.y = y;
  v148.size.width = v58;
  v148.size.height = v59;
  CGRectGetMinY(v148);
  v149.origin.x = x;
  v149.origin.y = y;
  v149.size.width = v58;
  v149.size.height = v59;
  v133.i64[0] = CGRectGetMaxX(v149);
  v150.origin.x = x;
  v150.origin.y = y;
  v150.size.width = v58;
  v150.size.height = v59;
  CGRectGetMaxY(v150);
  v136 = a1;
  objc_msgSend(a1, sel_position);
  v60.f32[0] = (float)v60.i32[2] / -1000.0;
  v139 = v60;
  v61 = objc_msgSend(a2, sel_camera);
  objc_msgSend(v61, sel_transform);
  v141 = v63;
  v142 = v62;
  v137 = (simd_float4)v64;
  v138 = (simd_float4)v65;

  v66 = vmulq_f32(v142, (float32x4_t)0);
  v142 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v142, (float32x4_t)0, v141), (float32x4_t)0, (float32x4_t)v137), (float32x4_t)0, (float32x4_t)v138);
  v67 = vmlaq_f32(v66, (float32x4_t)0, v141);
  v140 = vmlaq_f32(vaddq_f32((float32x4_t)v137, v67), (float32x4_t)0, (float32x4_t)v138);
  __asm { FMOV            V2.4S, #-1.0 }
  v141 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v66, _Q2, v141), (float32x4_t)0, (float32x4_t)v137), (float32x4_t)0, (float32x4_t)v138);
  v139 = vaddq_f32((float32x4_t)v138, vmlaq_n_f32(v67, (float32x4_t)v137, v139.f32[0]));
  v73 = objc_msgSend(a2, sel_camera);
  v74 = sub_22758E910();
  v76 = v75;
  v78 = v77;

  if ((v78 & 1) == 0)
  {
    v79 = objc_msgSend(a2, sel_camera);
    v80 = sub_22758E910();
    v82 = v81;
    v84 = v83;

    if ((v84 & 1) == 0)
    {
      v85.i64[0] = v74;
      v85.i64[1] = v76;
      v86.i64[0] = v80;
      v86.i64[1] = v82;
      v87 = *(float *)&v80;
      *(float32x2_t *)v88.f32 = vabd_f32((float32x2_t)v74, (float32x2_t)v80);
      v89 = v88.f32[1];
      if (v88.f32[1] >= v88.f32[0])
        v89 = v88.f32[0];
      v88.i64[1] = LODWORD(v89);
      v90 = v49;
      v91 = (uint64_t)v132;
      *(float32x4_t *)&v132[*(int *)(v49 + 20)] = v88;
      v92 = vaddq_f32(v85, v86);
      v88.f32[0] = (float)(*(float *)&v74 + v87) * 0.5;
      v140 = v88;
      v88.f32[0] = vmuls_lane_f32(0.5, *(float32x2_t *)v92.f32, 1);
      v141 = v88;
      v88.f32[0] = vmuls_lane_f32(0.5, v92, 2);
      v142 = v88;
      v93 = objc_msgSend(a2, sel_camera);
      objc_msgSend(v93, sel_transform);
      v139 = v94;
      v138 = (simd_float4)v95;
      v137 = (simd_float4)v96;
      v133 = (simd_float4)v97;

      v144.columns[0] = (simd_float4)v139;
      v144.columns[1] = v138;
      v144.columns[2] = v137;
      v144.columns[3] = v133;
      v145 = __invert_f4(v144);
      v142 = vaddq_f32((float32x4_t)v145.columns[3], vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32((float32x4_t)v145.columns[0], v140.f32[0]), (float32x4_t)v145.columns[1], v141.f32[0]), (float32x4_t)v145.columns[2], v142.f32[0]));
      v98 = ARCameraToDisplayRotation();
      v99 = __sincosf_stret((float)((float)((float)v98 * 3.1416) / 180.0) * 0.5);
      v100 = (__n128)vmulq_n_f32((float32x4_t)xmmword_227593970, v99.__sinval);
      v100.n128_u32[3] = LODWORD(v99.__cosval);
      *(double *)v101.i64 = MEMORY[0x2276B26F4](v100);
      v139 = v101;
      v140 = v102;
      v141 = v103;
      v104 = objc_msgSend(a2, sel_camera);
      objc_msgSend(v104, sel_transform);
      v126 = v105;
      v133 = (simd_float4)v106;
      v137 = (simd_float4)v107;
      v138 = (simd_float4)v108;

      v109 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v126, v140.f32[0]), (float32x4_t)v133, *(float32x2_t *)v140.f32, 1), (float32x4_t)v137, v140, 2), (float32x4_t)v138, v140, 3);
      v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v126, v141.f32[0]), (float32x4_t)v133, *(float32x2_t *)v141.f32, 1), (float32x4_t)v137, v141, 2), (float32x4_t)v138, v141, 3);
      v111 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v126, v142.f32[0]), (float32x4_t)v133, *(float32x2_t *)v142.f32, 1), (float32x4_t)v137, v142, 2), (float32x4_t)v138, v142, 3);
      v112 = (float32x4_t *)(v91 + *(int *)(v49 + 24));
      *v112 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v126, v139.f32[0]), (float32x4_t)v133, *(float32x2_t *)v139.f32, 1), (float32x4_t)v137, v139, 2), (float32x4_t)v138, v139, 3);
      v112[1] = v109;
      v112[2] = v110;
      v112[3] = v111;
      v113 = v136;
      v114 = objc_msgSend(v136, sel_uuid);
      if (v114)
      {
        v115 = v114;
        v116 = v127;
        sub_22758C96C();

        v117 = v128;
        v118 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
        v119 = (uint64_t)v130;
        v120 = v131;
        v118(v130, v116, v131);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v119, 0, 1, v120);
        v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v119, 1, v120);
        v122 = v134;
        v123 = v129;
        if (v121 != 1)
        {

          v118(v123, (char *)v119, v120);
LABEL_21:
          v118((char *)v91, v123, v120);
          *(_QWORD *)(v91 + *(int *)(v90 + 28)) = v113;
          sub_2273309C0(v91, v122);
          v124 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v122, v124, 1, v90);
        }
      }
      else
      {
        v117 = v128;
        v119 = (uint64_t)v130;
        v120 = v131;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v130, 1, 1, v131);
        v122 = v134;
        v123 = v129;
      }
      sub_22758C978();

      sub_22731A1A4(v119, &qword_2558D5BA0);
      v118 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
      goto LABEL_21;
    }
  }

  v124 = 1;
  v122 = v134;
  v90 = v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v122, v124, 1, v90);
}

uint64_t SpatialPersonDetection.hash(into:)()
{
  sub_22758C984();
  sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_22758E13C();
}

id sub_22732FAE0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  float v4;
  float v5;
  float v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;

  v3 = type metadata accessor for SpatialPersonDetection();
  sub_22758E664();
  v7 = objc_msgSend((id)objc_opt_self(), sel_boxWithWidth_height_length_chamferRadius_, v4, v5, v6, 0.0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_nodeWithGeometry_, v7);

  objc_msgSend(v8, sel_setOpacity_, a1);
  v9 = objc_msgSend(v8, sel_geometry);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_firstMaterial);

    if (v11)
    {
      v12 = objc_msgSend(v11, sel_diffuse);

      v13 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
      objc_msgSend(v12, sel_setContents_, v13);

    }
  }
  objc_msgSend(v8, sel_setSimdWorldTransform_, *(double *)(v1 + *(int *)(v3 + 24)), *(double *)(v1 + *(int *)(v3 + 24) + 16), *(double *)(v1 + *(int *)(v3 + 24) + 32), *(double *)(v1 + *(int *)(v3 + 24) + 48));
  sub_22758C948();
  v14 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setName_, v14);

  v15 = objc_msgSend((id)objc_opt_self(), sel_shapeWithNode_options_, v8, 0);
  v16 = objc_msgSend((id)objc_opt_self(), sel_bodyWithType_shape_, 2, v15);

  objc_msgSend(v8, sel_setPhysicsBody_, v16);
  v17 = objc_msgSend(v8, sel_physicsBody);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setCategoryBitMask_, 4);

  }
  objc_msgSend(v8, sel_setCategoryBitMask_, 4);
  return v8;
}

unint64_t static SpatialPersonDetection.spatialize(_:frame:orientation:)(unint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  unint64_t v6;

  v5 = a2;
  v6 = sub_2273301DC(a1, v5, a3);

  return v6;
}

uint64_t SpatialPersonDetection.hashValue.getter()
{
  sub_22758EF4C();
  sub_22758C984();
  sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22758E13C();
  return sub_22758EF88();
}

uint64_t sub_22732FE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22758C984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

__n128 sub_22732FE60(uint64_t a1)
{
  uint64_t v1;

  return *(__n128 *)(v1 + *(int *)(a1 + 20));
}

__n128 sub_22732FE6C(uint64_t a1)
{
  uint64_t v1;

  return *(__n128 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_22732FE80()
{
  sub_22758EF4C();
  sub_22758C984();
  sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22758E13C();
  return sub_22758EF88();
}

uint64_t sub_22732FEEC()
{
  sub_22758C984();
  sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_22758E13C();
}

uint64_t sub_22732FF44()
{
  sub_22758EF4C();
  sub_22758C984();
  sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22758E13C();
  return sub_22758EF88();
}

uint64_t _s16MagnifierSupport22SpatialPersonDetectionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  float v37;
  float v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v4 = type metadata accessor for SpatialPersonDetection();
  v9 = MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v9, v12, v13, v14, v15);
  v18 = (char *)&v40 - v17;
  v23 = MEMORY[0x24BDAC7A8](v16, v19, v20, v21, v22);
  v25 = (char *)&v40 - v24;
  MEMORY[0x24BDAC7A8](v23, v26, v27, v28, v29);
  v31 = (char *)&v40 - v30;
  v32 = sub_22758C960();
  sub_227330A14(a1, (uint64_t)v31);
  sub_227330A14(a2, (uint64_t)v25);
  if ((v32 & 1) != 0)
  {
    v41 = *(_OWORD *)&v31[*(int *)(v4 + 20)];
    sub_227330A58((uint64_t)v31);
    v40 = *(_OWORD *)&v25[*(int *)(v4 + 20)];
    sub_227330A58((uint64_t)v25);
    v33 = 0;
    while (1)
    {
      v42 = v41;
      v37 = *(float *)((unint64_t)&v42 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
      v43 = v40;
      v38 = *(float *)((unint64_t)&v43 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
      v34 = v37 == v38;
      if (v33 == 2)
        break;
      while (1)
      {
        ++v33;
        if (v34)
          break;
        if (v33 == 2)
          goto LABEL_6;
        v34 = 0;
      }
    }
    sub_227330A14(a1, (uint64_t)v18);
    sub_227330A14(a2, (uint64_t)v11);
    if (v37 == v38)
    {
      v39 = *(int *)(v4 + 24);
      v35 = vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 16], *(float32x4_t *)&v11[v39 + 16]), (int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39], *(float32x4_t *)&v11[v39])), vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 32], *(float32x4_t *)&v11[v39 + 32]), (int8x16_t)vceqq_f32(*(float32x4_t *)&v18[v39 + 48], *(float32x4_t *)&v11[v39 + 48])))) >> 31;
      goto LABEL_8;
    }
  }
  else
  {
    sub_227330A58((uint64_t)v25);
    sub_227330A58((uint64_t)v31);
LABEL_6:
    sub_227330A14(a1, (uint64_t)v18);
    sub_227330A14(a2, (uint64_t)v11);
  }
  v35 = 0;
LABEL_8:
  sub_227330A58((uint64_t)v11);
  sub_227330A58((uint64_t)v18);
  return v35;
}

unint64_t sub_2273301DC(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id *v27;
  id *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;

  v4 = v3;
  v41 = a3;
  v40 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5F08);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SpatialPersonDetection();
  v13 = *(_QWORD *)(v39 - 8);
  v18 = MEMORY[0x24BDAC7A8](v39, v14, v15, v16, v17);
  v38 = (uint64_t)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20, v21, v22, v23);
  v36 = (uint64_t)&v35 - v24;
  if (a1 >> 62)
    goto LABEL_18;
  v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v25; v25 = sub_22758ECE8())
  {
    v35 = v4;
    v37 = a1 & 0xC000000000000001;
    v26 = MEMORY[0x24BEE4AF8];
    v4 = 4;
    v27 = (id *)a1;
    while (1)
    {
      v28 = v37 ? (id *)MEMORY[0x2276B2BEC](v4 - 4, a1) : (id *)*(id *)(a1 + 8 * v4);
      a1 = (unint64_t)v28;
      v29 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v30 = v40;
      sub_22732F214((void *)a1, v30, v41, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v39) == 1)
      {
        sub_22731A1A4((uint64_t)v12, &qword_2558D5F08);
      }
      else
      {
        v31 = v36;
        sub_2273309C0((uint64_t)v12, v36);
        sub_2273309C0(v31, v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_2273A4D2C(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
        v33 = *(_QWORD *)(v26 + 16);
        v32 = *(_QWORD *)(v26 + 24);
        if (v33 >= v32 >> 1)
          v26 = sub_2273A4D2C(v32 > 1, v33 + 1, 1, v26);
        *(_QWORD *)(v26 + 16) = v33 + 1;
        sub_2273309C0(v38, v26+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v33);
      }
      a1 = (unint64_t)v27;
      ++v4;
      if (v29 == v25)
      {
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_227330474()
{
  return sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_2273304A0(uint64_t a1)
{
  uint64_t result;

  result = sub_2273096F0(&qword_2558D5E60, (uint64_t (*)(uint64_t))type metadata accessor for SpatialPersonDetection, (uint64_t)&protocol conformance descriptor for SpatialPersonDetection);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2273304DC()
{
  return sub_2273096F0(&qword_2558D5E68, (uint64_t (*)(uint64_t))type metadata accessor for SpatialPersonDetection, (uint64_t)&protocol conformance descriptor for SpatialPersonDetection);
}

uint64_t *initializeBufferWithCopyOfBuffer for SpatialPersonDetection(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22758C984();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[3];
    v9[2] = v10[2];
    v9[3] = v11;
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v14;
    v15 = v14;
  }
  return a1;
}

void destroy for SpatialPersonDetection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  v12 = a3[7];
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = v13;
  return a1;
}

uint64_t assignWithCopy for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v10 = a3[7];
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  return a1;
}

uint64_t initializeWithTake for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SpatialPersonDetection(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = a3[7];
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  return a1;
}

uint64_t getEnumTagSinglePayload for SpatialPersonDetection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227330834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22758C984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SpatialPersonDetection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2273308BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22758C984();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_227330934()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22758C984();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2273309C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL UIInterfaceOrientationIsLandscape(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_227330A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227330A58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SpatialPersonDetection();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227330A94()
{
  return 1;
}

uint64_t sub_227330AA4()
{
  return 0x65756C6156776172;
}

uint64_t sub_227330ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22758EE50();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_227330B50(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_227330B5C()
{
  sub_227330E14();
  return sub_22758EFDC();
}

uint64_t sub_227330B84()
{
  sub_227330E14();
  return sub_22758EFE8();
}

uint64_t sub_227330BAC()
{
  sub_22758EF4C();
  sub_22758EF58();
  return sub_22758EF88();
}

uint64_t sub_227330BEC()
{
  return sub_22758EF58();
}

uint64_t sub_227330C10()
{
  sub_22758EF4C();
  sub_22758EF58();
  return sub_22758EF88();
}

uint64_t DynamicTypeSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  char *v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5F10);
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v4, v5, v6, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758D47C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227330E14();
  sub_22758EFB8();
  if (!v2)
  {
    v26 = v17;
    v18 = v11;
    v19 = v29;
    v20 = sub_22758ED9C();
    v21 = v28;
    if (v20 >= 0xC)
    {
      sub_227330E58();
      swift_allocError();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v19);
    }
    else
    {
      v22 = (unsigned int *)qword_24EF9CB68[v20];
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v19);
      v23 = v26;
      (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v26, *v22, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v23, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_227330E14()
{
  unint64_t result;

  result = qword_2558D5F18;
  if (!qword_2558D5F18)
  {
    result = MEMORY[0x2276B3C78](&unk_22759773C, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_2558D5F18);
  }
  return result;
}

unint64_t sub_227330E58()
{
  unint64_t result;

  result = qword_2558D5F20;
  if (!qword_2558D5F20)
  {
    result = MEMORY[0x2276B3C78](&unk_2275976FC, &_s11CodingErrorON);
    atomic_store(result, (unint64_t *)&qword_2558D5F20);
  }
  return result;
}

uint64_t DynamicTypeSize.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  _QWORD v20[4];

  v2 = sub_22758D47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5F28);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_227330E14();
  sub_22758EFC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 16))(v9, v20[3], v2);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v9, v2);
  if (v18 == *MEMORY[0x24BDECF20]
    || v18 == *MEMORY[0x24BDECF08]
    || v18 == *MEMORY[0x24BDECF10]
    || v18 == *MEMORY[0x24BDECF00]
    || v18 == *MEMORY[0x24BDECF18]
    || v18 == *MEMORY[0x24BDECF28]
    || v18 == *MEMORY[0x24BDECF38]
    || v18 == *MEMORY[0x24BDECEA0]
    || v18 == *MEMORY[0x24BDECEA8]
    || v18 == *MEMORY[0x24BDECEC0]
    || v18 == *MEMORY[0x24BDECED0]
    || v18 == *MEMORY[0x24BDECEE0])
  {
    sub_22758EDFC();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  }
  else
  {
    sub_227330E58();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
}

uint64_t sub_227331180@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicTypeSize.init(from:)(a1, a2);
}

uint64_t sub_227331194(_QWORD *a1)
{
  return DynamicTypeSize.encode(to:)(a1);
}

uint64_t sub_2273311B4()
{
  return 0;
}

ValueMetadata *_s11CodingErrorOMa()
{
  return &_s11CodingErrorON;
}

uint64_t getEnumTagSinglePayload for DocumentFilter(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s11CodingErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22733125C + 4 * byte_227597560[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22733127C + 4 * byte_227597565[v4]))();
}

_BYTE *sub_22733125C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22733127C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227331284(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22733128C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227331294(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22733129C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_2273312BC()
{
  unint64_t result;

  result = qword_2558D5F30;
  if (!qword_2558D5F30)
  {
    result = MEMORY[0x2276B3C78](&unk_22759766C, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_2558D5F30);
  }
  return result;
}

unint64_t sub_227331304()
{
  unint64_t result;

  result = qword_2558D5F38;
  if (!qword_2558D5F38)
  {
    result = MEMORY[0x2276B3C78](&unk_2275976D4, &_s11CodingErrorON);
    atomic_store(result, (unint64_t *)&qword_2558D5F38);
  }
  return result;
}

unint64_t sub_22733134C()
{
  unint64_t result;

  result = qword_2558D5F40;
  if (!qword_2558D5F40)
  {
    result = MEMORY[0x2276B3C78](&unk_2275975DC, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_2558D5F40);
  }
  return result;
}

unint64_t sub_227331394()
{
  unint64_t result;

  result = qword_2558D5F48;
  if (!qword_2558D5F48)
  {
    result = MEMORY[0x2276B3C78](&unk_227597604, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_2558D5F48);
  }
  return result;
}

void sub_2273313DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_227331424()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

unint64_t sub_2273315A0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_227334820(*a1);
  *a2 = result;
  return result;
}

void sub_2273315C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98550;
}

uint64_t sub_2273315D8()
{
  sub_227334830();
  return sub_22758E3AC();
}

uint64_t sub_227331634()
{
  sub_227334830();
  return sub_22758E388();
}

void sub_227331680()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  id *v38;
  char v39;
  id v40;
  void *v41;
  char v42;
  char *v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  uint64_t ObjCClassFromMetadata;
  void *v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  char *v55;
  void *v56;
  _OWORD v57[2];
  __int128 v58;
  __int128 v59;
  objc_super v60;

  v1 = v0;
  v60.receiver = v0;
  v60.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v60, sel_viewDidLoad);
  v2 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v3 = objc_msgSend(v2, sel_doorAttributesClassifierProperties);

  if (v3)
  {
    *(_QWORD *)&v57[0] = 0xD000000000000017;
    *((_QWORD *)&v57[0] + 1) = 0x80000002275AEFD0;
    v4 = objc_msgSend(v3, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v4)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v57, 0, sizeof(v57));
    }
    sub_22732D760((uint64_t)v57, (uint64_t)&v58);
    if (!*((_QWORD *)&v59 + 1))
    {

      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      return;
    }
    sub_22730BA80(0, (unint64_t *)&unk_2558D5E40);
    if ((swift_dynamicCast() & 1) == 0)
    {

      return;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558DDB40);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_227597790;
    *(_BYTE *)(v5 + 32) = 4;
    *(_QWORD *)&v58 = 0x746174536E65704FLL;
    *((_QWORD *)&v58 + 1) = 0xE900000000000065;
    v6 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x746174536E65704FLL;
      *((_QWORD *)&v58 + 1) = 0xE900000000000065;
      v7 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v7)
        goto LABEL_60;
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v8 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v8 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 40) = v8;
    *(_BYTE *)(v5 + 48) = 5;
    *(_QWORD *)&v58 = 0x6570616853;
    *((_QWORD *)&v58 + 1) = 0xE500000000000000;
    v9 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v9)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x6570616853;
      *((_QWORD *)&v58 + 1) = 0xE500000000000000;
      v10 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v10)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v11 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v11 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 56) = v11;
    *(_BYTE *)(v5 + 64) = 0;
    *(_QWORD *)&v58 = 0x6863616F72707041;
    *((_QWORD *)&v58 + 1) = 0xE800000000000000;
    v12 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    v55 = v1;
    v54 = v3;
    if (v12)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x6863616F72707041;
      *((_QWORD *)&v58 + 1) = 0xE800000000000000;
      v13 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v13)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v14 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v14 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 72) = v14;
    *(_BYTE *)(v5 + 80) = 3;
    *(_QWORD *)&v58 = 0x6874654D6E65704FLL;
    *((_QWORD *)&v58 + 1) = 0xEA0000000000646FLL;
    v15 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v15)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x6874654D6E65704FLL;
      *((_QWORD *)&v58 + 1) = 0xEA0000000000646FLL;
      v16 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v16)
      {
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v17 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v17 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 88) = v17;
    *(_BYTE *)(v5 + 96) = 6;
    *(_QWORD *)&v58 = 1702521171;
    *((_QWORD *)&v58 + 1) = 0xE400000000000000;
    v18 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v18)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 1702521171;
      *((_QWORD *)&v58 + 1) = 0xE400000000000000;
      v19 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v19)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v20 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v20 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 104) = v20;
    *(_BYTE *)(v5 + 112) = 2;
    *(_QWORD *)&v58 = 0x646E6148726F6F44;
    *((_QWORD *)&v58 + 1) = 0xEA0000000000656CLL;
    v21 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v21)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x646E6148726F6F44;
      *((_QWORD *)&v58 + 1) = 0xEA0000000000656CLL;
      v22 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v22)
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v23 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v23 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 120) = v23;
    *(_BYTE *)(v5 + 128) = 7;
    *(_QWORD *)&v58 = 0x776F646E6957;
    *((_QWORD *)&v58 + 1) = 0xE600000000000000;
    v24 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v24)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x776F646E6957;
      *((_QWORD *)&v58 + 1) = 0xE600000000000000;
      v25 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v25)
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v26 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v26 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 136) = v26;
    *(_BYTE *)(v5 + 144) = 1;
    *(_QWORD *)&v58 = 0x726F6C6F43;
    *((_QWORD *)&v58 + 1) = 0xE500000000000000;
    v27 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v27)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x726F6C6F43;
      *((_QWORD *)&v58 + 1) = 0xE500000000000000;
      v28 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v28)
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v29 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v29 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 152) = v29;
    *(_BYTE *)(v5 + 160) = 8;
    *(_QWORD *)&v58 = 0x6C6169726574614DLL;
    *((_QWORD *)&v58 + 1) = 0xE800000000000000;
    v30 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v30)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      *(_QWORD *)&v58 = 0x6C6169726574614DLL;
      *((_QWORD *)&v58 + 1) = 0xE800000000000000;
      v31 = objc_msgSend(v56, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      if (!v31)
      {
LABEL_68:
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
      sub_22758EAB4();
      swift_unknownObjectRelease();
      sub_227320358(v57, &v58);
      sub_22730BA80(0, &qword_2540BA030);
      swift_dynamicCast();
      v32 = (uint64_t)v56;
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
      sub_22731A1A4((uint64_t)&v58, &qword_2540BA340);
      sub_22730BA80(0, &qword_2540BA030);
      v32 = sub_22758E91C();
    }
    *(_QWORD *)(v5 + 168) = v32;
    sub_22731EBE0(v5);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558DDB50);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v33 = swift_bridgeObjectRetain();
    v34 = sub_2273A6310(v33);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v34;
    sub_227333E5C((_QWORD **)&v58);
    swift_bridgeObjectRelease();
    v35 = v58;
    v36 = *(_QWORD *)(v58 + 16);
    if (v36)
    {
      sub_22730BA80(0, &qword_2540BA030);
      v37 = (char **)&v1[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes];
      v38 = (id *)(v35 + 40);
      do
      {
        v39 = *((_BYTE *)v38 - 8);
        v40 = *v38;
        v41 = (void *)sub_22758E91C();
        v42 = sub_22758E94C();

        if ((v42 & 1) == 0)
        {
          swift_beginAccess();
          v43 = *v37;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v37 = v43;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v43 = sub_2273A4D40(0, *((_QWORD *)v43 + 2) + 1, 1, v43);
            *v37 = v43;
          }
          v46 = *((_QWORD *)v43 + 2);
          v45 = *((_QWORD *)v43 + 3);
          if (v46 >= v45 >> 1)
          {
            v43 = sub_2273A4D40((char *)(v45 > 1), v46 + 1, 1, v43);
            *v37 = v43;
          }
          *((_QWORD *)v43 + 2) = v46 + 1;
          v43[v46 + 32] = v39;
          swift_endAccess();
        }

        v38 += 2;
        --v36;
      }
      while (v36);
    }
    swift_release();
    v47 = *(void **)&v55[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView];
    objc_msgSend(v47, sel_setDataSource_, v55);
    objc_msgSend(v47, sel_setDelegate_, v55);
    sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v49 = (void *)sub_22758E1B4();
    objc_msgSend(v47, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v49);

    objc_msgSend(v47, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v50 = objc_msgSend(v55, sel_view);
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v50, sel_addSubview_, v47);

      v52 = objc_msgSend(v55, sel_view);
      if (v52)
      {
        v53 = v52;
        sub_22757580C(v52, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));

        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
}

void sub_2273327A4(char a1)
{
  void *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

}

id sub_227332A90(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  void *v16;
  id v17;
  objc_super v19;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView;
  v9 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v10 = v4;
  v11 = objc_msgSend(v9, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v4[v8] = v13;
  *(_QWORD *)&v10[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes] = MEMORY[0x24BEE4AF8];
  v15 = &v10[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;

  if (a2)
  {
    v16 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v10;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v16, a3);

  return v17;
}

id sub_227332C78(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_tableView;
  v6 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v7 = v2;
  v8 = objc_msgSend(v6, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  objc_msgSend(v10, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v2[v5] = v10;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes] = MEMORY[0x24BEE4AF8];
  v12 = &v7[OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_delegate];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;

  v15.receiver = v7;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  return v13;
}

uint64_t type metadata accessor for DoorAttributeCustomizationViewController()
{
  return objc_opt_self();
}

id sub_227332EB8(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v20;

  v3 = (void *)sub_22758E1B4();
  v4 = (void *)sub_22758CA74();
  v5 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v3, v4);

  v6 = 0;
  if (!sub_22758CAC8())
    v6 = sub_22758CA98();
  v7 = v1 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes;
  swift_beginAccess();
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v6 >= *(_QWORD *)(*(_QWORD *)v7 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_8;
  }
  v6 = *(unsigned __int8 *)(*(_QWORD *)v7 + v6 + 32);
  v8 = objc_msgSend(v5, sel_textLabel);
  if (v8)
  {
    v9 = v8;
    sub_2273313DC(v6);
    v10 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10);

  }
  if (qword_2540B87B8 != -1)
    goto LABEL_16;
LABEL_8:
  swift_beginAccess();
  v11 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  if (v11 != -1)
    v12 = swift_once();
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CE0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_227367600(v6, v20);
  swift_bridgeObjectRelease();
  if (v17)
    v18 = 3;
  else
    v18 = 0;
  objc_msgSend(v5, sel_setAccessoryType_, v18);
  return v5;
}

void sub_22733324C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  BOOL v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];
  char *v95;
  uint8_t *v96;
  id v97;
  _QWORD v98[4];
  uint64_t v99;
  uint64_t v100[36];
  uint64_t v101;
  uint64_t v102[4];

  v2 = v1;
  v4 = sub_22758DF20();
  v5 = *(uint8_t **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v11 = (char *)v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_22758CA74();
  v13 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v12);

  if (!v13)
    return;
  v14 = (void *)sub_22758CA74();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v14, 1);

  if (sub_22758CAC8())
    v15 = 0;
  else
    v15 = sub_22758CA98();
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport40DoorAttributeCustomizationViewController_doorAttributes);
  swift_beginAccess();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = *v16;
    if (v15 < *(_QWORD *)(*v16 + 16))
    {
      v95 = v11;
      v11 = (char *)*(unsigned __int8 *)(v17 + v15 + 32);
      if (qword_2540B87B8 == -1)
        goto LABEL_8;
      goto LABEL_45;
    }
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_8:
  v96 = v5;
  v18 = (uint64_t *)(qword_2540BCDD0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedAttributes);
  swift_beginAccess();
  v19 = v18[1];
  v20 = v18[2];
  v100[0] = *v18;
  v100[1] = v19;
  v100[2] = v20;
  v21 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v22 = swift_bridgeObjectRetain();
  if (v21 != -1)
    v22 = swift_once();
  MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  v94[-2] = v100;
  v94[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CE0);
  sub_22758E7B4();
  v94[2] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = (char *)v102[0];
  v28 = sub_227367600((_BOOL8)v11, v102[0]);
  v97 = v13;
  if (v28)
  {
    v94[0] = v4;
    v29 = *((_QWORD *)v27 + 2);
    if (v29)
    {
      v30 = (unsigned __int8 *)(v27 + 32);
      v31 = MEMORY[0x24BEE4AF8];
      do
      {
        v35 = *v30++;
        v34 = v35;
        if (v35 != (_DWORD)v11)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v100[0] = v31;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2273247E4(0, *(_QWORD *)(v31 + 16) + 1, 1);
            v31 = v100[0];
          }
          v33 = *(_QWORD *)(v31 + 16);
          v32 = *(_QWORD *)(v31 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_2273247E4(v32 > 1, v33 + 1, 1);
            v31 = v100[0];
          }
          *(_QWORD *)(v31 + 16) = v33 + 1;
          *(_BYTE *)(v31 + v33 + 32) = v34;
        }
        --v29;
      }
      while (v29);
    }
    else
    {
      v31 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v97, sel_setAccessoryType_, 0);
    if (!*(_QWORD *)(v31 + 16))
    {
      v87 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
      swift_beginAccess();
      LOBYTE(v102[0]) = 0;
      v88 = v95;
      v89 = sub_22758DF14();
      MEMORY[0x24BDAC7A8](v89, v90, v91, v92, v93);
      v94[-2] = v102;
      v94[-1] = v87;
      sub_22758E7A8();
      (*((void (**)(char *, _QWORD))v96 + 1))(v88, v94[0]);
      goto LABEL_29;
    }
    v4 = v94[0];
  }
  else
  {
    objc_msgSend(v13, sel_setAccessoryType_, 3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_2273A4D40(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v38 = *((_QWORD *)v27 + 2);
    v37 = *((_QWORD *)v27 + 3);
    if (v38 >= v37 >> 1)
      v27 = sub_2273A4D40((char *)(v37 > 1), v38 + 1, 1, v27);
    *((_QWORD *)v27 + 2) = v38 + 1;
    v27[v38 + 32] = (char)v11;
    v31 = (uint64_t)v27;
  }
  v39 = v95;
  v40 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionAttributes;
  swift_beginAccess();
  LOBYTE(v102[0]) = 1;
  v41 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v41, v42, v43, v44, v45);
  v94[-2] = v102;
  v94[-1] = v40;
  sub_22758E7A8();
  (*((void (**)(char *, uint64_t))v96 + 1))(v39, v4);
LABEL_29:
  swift_endAccess();
  if (qword_2558D4A48 != -1)
    swift_once();
  v46 = sub_22758CF9C();
  __swift_project_value_buffer(v46, (uint64_t)qword_2558D6200);
  swift_bridgeObjectRetain_n();
  v47 = sub_22758CF84();
  v48 = sub_22758E6B8();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v100[0] = v50;
    *(_DWORD *)v49 = 136315138;
    v96 = v49 + 4;
    v51 = swift_bridgeObjectRetain();
    v52 = MEMORY[0x2276B23F4](v51, &type metadata for DoorAttribute);
    v54 = v53;
    swift_bridgeObjectRelease();
    v102[0] = sub_22733611C(v52, v54, v100);
    sub_22758EA48();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2272F4000, v47, v48, "New attributes: %s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v50, -1, -1);
    MEMORY[0x2276B3D50](v49, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_22744632C(v31);
  swift_bridgeObjectRelease();
  v55 = (_QWORD *)qword_2540BCDD0;
  v56 = swift_beginAccess();
  v57 = v55[10];
  v58 = v55[11];
  v59 = v55[12];
  v100[0] = v55[9];
  v100[1] = v57;
  v100[2] = v58;
  v100[3] = v59;
  MEMORY[0x24BDAC7A8](v56, v60, v61, v62, v63);
  v94[-2] = v100;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v64 = v101;
  if (!v101)
    goto LABEL_39;
  v65 = v100[35];
  v66 = (_QWORD *)qword_2540BCDD0;
  v67 = swift_beginAccess();
  v68 = v66[6];
  v69 = v66[7];
  v100[0] = v66[5];
  v100[1] = v68;
  v100[2] = v69;
  MEMORY[0x24BDAC7A8](v67, v70, v71, v72, v73);
  v94[-2] = v100;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = v99;
  if (*(_QWORD *)(v99 + 16))
  {
    v75 = sub_2274DE434(v65, v64);
    if ((v76 & 1) != 0)
    {
      memcpy(v100, (const void *)(*(_QWORD *)(v74 + 56) + 280 * v75), 0x118uLL);
      sub_22730B838((uint64_t)v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v77 = v100[19];
      v78 = (_QWORD *)(qword_2540BCDD0
                     + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedAttributes);
      v79 = swift_beginAccess();
      v80 = v78[1];
      v81 = v78[2];
      v98[0] = *v78;
      v98[1] = v80;
      v98[2] = v81;
      MEMORY[0x24BDAC7A8](v79, v82, v83, v84, v85);
      v94[-2] = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86 = sub_2274492D0(v77, v98[3]);
      sub_22730B91C((uint64_t)v100);
      swift_bridgeObjectRelease();
      if (!v86)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v98[0]) = 1;
        swift_retain();
        sub_22758D1A0();
      }
LABEL_39:

      return;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for DoorAttribute(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DoorAttribute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_227333D44 + 4 * byte_2275977A5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_227333D78 + 4 * byte_2275977A0[v4]))();
}

uint64_t sub_227333D78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227333D80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227333D88);
  return result;
}

uint64_t sub_227333D94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227333D9CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_227333DA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227333DA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DoorAttribute()
{
  return &type metadata for DoorAttribute;
}

unint64_t sub_227333DC8()
{
  unint64_t result;

  result = qword_2558D5F90;
  if (!qword_2558D5F90)
  {
    result = MEMORY[0x2276B3C78](&unk_227597990, &type metadata for DoorAttribute);
    atomic_store(result, (unint64_t *)&qword_2558D5F90);
  }
  return result;
}

unint64_t sub_227333E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5F98;
  if (!qword_2558D5F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540B9CE0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5F98);
  }
  return result;
}

uint64_t sub_227333E5C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_227467440(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_227333EC4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_227333EC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 *__dst;

  v3 = a1[1];
  result = sub_22758EE20();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v85 = 0;
      v86 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(unsigned __int8 *)(v86 + 16 * i);
        v89 = v85;
        do
        {
          if (v88 >= *(unsigned __int8 *)(v86 + v89))
            break;
          if (!v86)
            goto LABEL_140;
          v90 = v86 + v89;
          v91 = *(_QWORD *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *(_BYTE *)v90 = v88;
          *(_QWORD *)(v90 + 8) = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v92 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v93 = *v101;
        do
        {
          v94 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v93)
            goto LABEL_144;
          v95 = v92;
          v96 = *(_QWORD *)&v92[16 * v94 + 32];
          v97 = *(_QWORD *)&v92[16 * v13 + 24];
          sub_2273345A8((unsigned __int8 *)(v93 + 16 * v96), (unsigned __int8 *)(v93 + 16 * *(_QWORD *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = sub_227467370((uint64_t)v95);
          if (v94 >= *((_QWORD *)v95 + 2))
            goto LABEL_133;
          v98 = &v95[16 * v94 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v95 + 2);
          if (v13 > v99)
            goto LABEL_134;
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          v92 = v95;
          *((_QWORD *)v95 + 2) = v99 - 1;
          v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558DDB60);
    v8 = sub_22758E418();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 32;
  v100 = *a1 - 16;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(unsigned __int8 *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (unsigned __int8 *)(v102 + 16 * v14);
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 16;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = 16 * v10;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = *(_BYTE *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(_BYTE *)(v25 - 16) = v26;
              *(_QWORD *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v28 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v28 >= v3)
      v28 = v3;
    if (v28 < v14)
      break;
    if (v10 != v28)
    {
      v29 = (unsigned __int8 *)(v100 + 16 * v10);
      do
      {
        v30 = *(unsigned __int8 *)(v11 + 16 * v10);
        v31 = v14;
        v32 = v29;
        do
        {
          if (v30 >= *v32)
            break;
          if (!v11)
            goto LABEL_141;
          v33 = *((_QWORD *)v32 + 3);
          *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
          *v32 = v30;
          *((_QWORD *)v32 + 1) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      v10 = v28;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_227466C8C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v35 = *((_QWORD *)v12 + 2);
    v34 = *((_QWORD *)v12 + 3);
    v13 = v35 + 1;
    v11 = v106;
    if (v35 >= v34 >> 1)
    {
      v84 = sub_227466C8C((char *)(v34 > 1), v35 + 1, 1, v12);
      v11 = v106;
      v12 = v84;
    }
    *((_QWORD *)v12 + 2) = v13;
    v36 = v12 + 32;
    v37 = &v12[16 * v35 + 32];
    *(_QWORD *)v37 = v14;
    *((_QWORD *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        v38 = v13 - 1;
        if (v13 >= 4)
        {
          v43 = &v36[16 * v13];
          v44 = *((_QWORD *)v43 - 8);
          v45 = *((_QWORD *)v43 - 7);
          v49 = __OFSUB__(v45, v44);
          v46 = v45 - v44;
          if (v49)
            goto LABEL_119;
          v48 = *((_QWORD *)v43 - 6);
          v47 = *((_QWORD *)v43 - 5);
          v49 = __OFSUB__(v47, v48);
          v41 = v47 - v48;
          v42 = v49;
          if (v49)
            goto LABEL_120;
          v50 = v13 - 2;
          v51 = &v36[16 * v13 - 32];
          v53 = *(_QWORD *)v51;
          v52 = *((_QWORD *)v51 + 1);
          v49 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          if (v49)
            goto LABEL_122;
          v49 = __OFADD__(v41, v54);
          v55 = v41 + v54;
          if (v49)
            goto LABEL_125;
          if (v55 >= v46)
          {
            v73 = &v36[16 * v38];
            v75 = *(_QWORD *)v73;
            v74 = *((_QWORD *)v73 + 1);
            v49 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v49)
              goto LABEL_129;
            v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v67 = *((_QWORD *)v12 + 4);
            v68 = *((_QWORD *)v12 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
            goto LABEL_77;
          }
          v40 = *((_QWORD *)v12 + 4);
          v39 = *((_QWORD *)v12 + 5);
          v49 = __OFSUB__(v39, v40);
          v41 = v39 - v40;
          v42 = v49;
        }
        if ((v42 & 1) != 0)
          goto LABEL_121;
        v50 = v13 - 2;
        v56 = &v36[16 * v13 - 32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v59 = __OFSUB__(v57, v58);
        v60 = v57 - v58;
        v61 = v59;
        if (v59)
          goto LABEL_124;
        v62 = &v36[16 * v38];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v49 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v49)
          goto LABEL_127;
        if (__OFADD__(v60, v65))
          goto LABEL_128;
        if (v60 + v65 >= v41)
        {
          v66 = v41 < v65;
LABEL_83:
          if (v66)
            v38 = v50;
          goto LABEL_85;
        }
LABEL_77:
        if ((v61 & 1) != 0)
          goto LABEL_123;
        v69 = &v36[16 * v38];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v49 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v49)
          goto LABEL_126;
        if (v72 < v60)
          goto LABEL_15;
LABEL_85:
        v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v78 = v12;
        v79 = &v36[16 * v77];
        v80 = *(_QWORD *)v79;
        v81 = &v36[16 * v38];
        v82 = *((_QWORD *)v81 + 1);
        sub_2273345A8((unsigned __int8 *)(v11 + 16 * *(_QWORD *)v79), (unsigned __int8 *)(v11 + 16 * *(_QWORD *)v81), v11 + 16 * v82, __dst);
        if (v1)
          goto LABEL_93;
        if (v82 < v80)
          goto LABEL_116;
        if (v38 > *((_QWORD *)v78 + 2))
          goto LABEL_117;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v36[16 * v77 + 8] = v82;
        v83 = *((_QWORD *)v78 + 2);
        if (v38 >= v83)
          goto LABEL_118;
        v12 = v78;
        v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((_QWORD *)v78 + 2) = v83 - 1;
        v11 = v106;
        if (v83 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_22758ECB8();
  __break(1u);
  return result;
}

uint64_t sub_2273345A8(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t result;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (unsigned __int8 *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *(v18 - 16);
          v18 -= 16;
          if (*(v16 - 16) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_227466F98((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_22758ED24();
  __break(1u);
  return result;
}

unint64_t sub_227334820(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

unint64_t sub_227334830()
{
  unint64_t result;

  result = qword_2540B7ED8;
  if (!qword_2540B7ED8)
  {
    result = MEMORY[0x2276B3C78](&unk_227597918, &type metadata for DoorAttribute);
    atomic_store(result, (unint64_t *)&qword_2540B7ED8);
  }
  return result;
}

uint64_t sub_227334874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2274675D4(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_227334894()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t sub_227334980@<X0>(uint64_t *a1@<X8>)
{
  return sub_227334874(a1);
}

uint64_t destroy for MFReaderTextBlockView()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MFReaderTextBlockView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderTextBlockView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderTextBlockView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderTextBlockView()
{
  return &type metadata for MFReaderTextBlockView;
}

uint64_t sub_227334BA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_227334BB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  char v32;
  char v33;
  __int128 v34;

  v3 = sub_22758DA88();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758C678();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  sub_227334D9C((uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_22758DADC();
  v19 = v18;
  v31 = v20;
  v22 = v21 & 1;
  v34 = *(_OWORD *)(v1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  sub_227335520((uint64_t)&v34);
  v32 = v33;
  MFReaderFont.rawValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v10, *MEMORY[0x24BDF18F0], v3);
  sub_22758DA34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  v23 = sub_22758DAC4();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_release();
  sub_227335548(v17, v19, v22);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = v25;
  *(_BYTE *)(a1 + 16) = v27 & 1;
  *(_QWORD *)(a1 + 24) = v29;
  return result;
}

uint64_t sub_227334D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(_OWORD *, _QWORD);
  _QWORD v103[3];
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t KeyPath;
  _OWORD v116[2];
  uint64_t v117;
  _OWORD v118[2];

  v2 = v1;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FB0);
  v8 = MEMORY[0x24BDAC7A8](v106, v4, v5, v6, v7);
  v107 = (char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v104 = (char *)v103 - v14;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FB8);
  v19 = MEMORY[0x24BDAC7A8](v108, v15, v16, v17, v18);
  v105 = (char *)v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21, v22, v23, v24);
  v109 = (uint64_t)v103 - v25;
  v26 = sub_22758C678();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28, v29, v30, v31);
  v33 = (char *)v103 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FC0);
  v39 = MEMORY[0x24BDAC7A8](v34, v35, v36, v37, v38);
  v111 = (char *)v103 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39, v41, v42, v43, v44);
  v46 = (char *)v103 - v45;
  v47 = sub_22758C660();
  v48 = *(_QWORD *)(v47 - 8);
  v113 = v47;
  v114 = v48;
  v53 = MEMORY[0x24BDAC7A8](v47, v49, v50, v51, v52);
  v110 = (char *)v103 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53, v55, v56, v57, v58);
  v112 = (char *)v103 - v59;
  v60 = sub_22758C6D8();
  MEMORY[0x24BDAC7A8](v60, v61, v62, v63, v64);
  v65 = *v1;
  swift_bridgeObjectRetain();
  sub_22758C6CC();
  sub_22758C684();
  v66 = *((_BYTE *)v1 + 40);
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v67 = v2 + 2;
  if ((v66 & 1) != 0)
  {
    v118[0] = *v67;
    v103[2] = swift_retain();
    sub_22743A7C0();
    sub_227335520((uint64_t)v118);
    v71 = sub_22758DCB0();
    swift_release();
    *(_QWORD *)&v116[0] = v71;
    v103[1] = sub_227335574();
    result = sub_22758C654();
    if ((v2[1] & 1) != 0)
    {
      v72 = a1;
      swift_getKeyPath();
      *(_QWORD *)&v116[0] = v65;
      sub_2273096F0((unint64_t *)&qword_2558D5FD0, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderTextBlock, (uint64_t)&unk_2275A2718);
      sub_22758CAF8();
      result = swift_release();
      if ((*(_BYTE *)(v65 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange + 16) & 1) == 0
        && (*(_QWORD *)(v65 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange) ^ *(_QWORD *)(v65 + OBJC_IVAR____TtC16MagnifierSupport17MFReaderTextBlock__selectedLocalTextRange + 8)) >= 0x4000)
      {
        v73 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
        v73(v33, a1, v26);
        sub_2273096F0(&qword_2558D5FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
        sub_22758C66C();
        v75 = v113;
        v74 = v114;
        v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
        if (v76((uint64_t)v46, 1, v113) == 1)
        {
          return sub_22731A1A4((uint64_t)v46, &qword_2558D5FC0);
        }
        else
        {
          v77 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
          v78 = v112;
          v103[0] = v77;
          v77(v112, v46, v75);
          v73(v33, v72, v26);
          v79 = (uint64_t)v111;
          sub_22758C66C();
          if (v76(v79, 1, v75) == 1)
          {
            (*(void (**)(char *, uint64_t))(v114 + 8))(v78, v75);
            return sub_22731A1A4(v79, &qword_2558D5FC0);
          }
          else
          {
            v80 = v110;
            ((void (*)(char *, uint64_t, uint64_t))v103[0])(v110, v79, v75);
            sub_2273096F0(&qword_2558D5FE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
            result = sub_22758E184();
            if ((result & 1) != 0)
            {
              v81 = v75;
              v82 = v78;
              v83 = v106;
              v84 = v104;
              v85 = &v104[*(int *)(v106 + 48)];
              v86 = v114;
              v87 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
              v87(v104, v82, v81);
              v87(v85, v80, v81);
              v88 = v107;
              v89 = &v107[*(int *)(v83 + 48)];
              v87(v107, v84, v81);
              v87(v89, v85, v81);
              v90 = (uint64_t)v105;
              v91 = (void (*)(char *, char *, uint64_t))v103[0];
              ((void (*)(char *, char *, uint64_t))v103[0])(v105, v88, v81);
              v92 = *(void (**)(char *, uint64_t))(v86 + 8);
              v92(v89, v81);
              v93 = &v88[*(int *)(v83 + 48)];
              v91(v88, v84, v81);
              v91(v93, v85, v81);
              v91((char *)(v90 + *(int *)(v108 + 36)), v93, v81);
              v92(v88, v81);
              v94 = v109;
              sub_227335658(v90, v109);
              v95 = swift_getKeyPath();
              v103[-2] = MEMORY[0x24BDAC7A8](v95, v96, v97, v98, v99);
              swift_getKeyPath();
              swift_retain();
              sub_22743A7C0();
              v101 = v100;
              sub_227335520((uint64_t)v118);
              v117 = v101;
              sub_2273356A0();
              v102 = (void (*)(_OWORD *, _QWORD))sub_22758C690();
              sub_22758C6E4();
              v102(v116, 0);
              sub_22731A1A4(v94, &qword_2558D5FB8);
              v92(v110, v81);
              return ((uint64_t (*)(char *, uint64_t))v92)(v112, v81);
            }
            else
            {
              __break(1u);
            }
          }
        }
      }
    }
  }
  else
  {
    v116[0] = *v67;
    swift_retain();
    sub_22743A7C0();
    v69 = v68;
    sub_227335520((uint64_t)v116);
    *(_QWORD *)&v118[0] = v69;
    sub_227335574();
    return sub_22758C654();
  }
  return result;
}

uint64_t sub_22733549C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FF0);
  return sub_22758E190() & 1;
}

uint64_t sub_2273354FC()
{
  return sub_22758DB3C();
}

uint64_t sub_227335520(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_227335548(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

void sub_227335558()
{
  sub_22758C648();
  __break(1u);
}

unint64_t sub_227335574()
{
  unint64_t result;

  result = qword_2558D5FC8;
  if (!qword_2558D5FC8)
  {
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_2558D5FC8);
  }
  return result;
}

void sub_2273355B8()
{
  sub_227335574();
  sub_22758C744();
  __break(1u);
}

uint64_t sub_2273355DC()
{
  return 8;
}

uint64_t sub_2273355E8()
{
  return swift_release();
}

uint64_t sub_2273355F0(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_227335600()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FF0);
  return sub_22758E148();
}

_QWORD *sub_227335644(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_227335658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2273356A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5FE8;
  if (!qword_2558D5FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D5FB8);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5FE8);
  }
  return result;
}

uint64_t sub_2273356EC()
{
  return MEMORY[0x24BDF1F80];
}

uint64_t MAGCaptureEventHandler.register(_:asActionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = v4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = 0x8000000000000000;
  sub_2275867A8((uint64_t)&unk_2558DCCD0, v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t MAGCaptureEventHandler.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_22731D3C4(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t MAGCaptureEventHandler.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_22731D3C4(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t sub_22733583C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_227319F84;
  return v7(a2);
}

uint64_t sub_22733589C()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall MAGCaptureEventHandler.unregister(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = sub_2273367CC(countAndFlagsBits, (uint64_t)object, (void (*)(void))sub_227587E48);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_2273382D0(v3);
}

uint64_t MAGCaptureEventHandler.send(_:)(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = v1;
  *(_OWORD *)(v2 + 120) = *a1;
  return swift_task_switch();
}

uint64_t sub_227335968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int **v13;
  int *v14;
  _QWORD *v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v1 = *(_QWORD *)(v0 + 112);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 200) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  v7 = (_QWORD *)swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v6));
    v10 = (v6 - 1) & v6;
LABEL_5:
    *(_QWORD *)(v0 + 144) = v8;
    *(_QWORD *)(v0 + 152) = v10;
    v11 = 16 * v9;
    v12 = (_QWORD *)(v7[6] + v11);
    *(_QWORD *)(v0 + 160) = *v12;
    *(_QWORD *)(v0 + 168) = v12[1];
    v13 = (int **)(v7[7] + v11);
    v14 = *v13;
    *(_QWORD *)(v0 + 176) = v13[1];
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 120);
    v22 = (uint64_t (*)(void))((char *)v14 + *v14);
    swift_bridgeObjectRetain();
    swift_retain();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v15;
    *v15 = v0;
    v15[1] = sub_227335B4C;
    return v22();
  }
  v17 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    v18 = v7[9];
    if (v18)
    {
      v8 = 1;
LABEL_9:
      v10 = (v18 - 1) & v18;
      v9 = __clz(__rbit64(v18)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v17 >= 0xC0)
    {
      v18 = v7[10];
      if (v18)
      {
        v8 = 2;
        goto LABEL_9;
      }
      if (v17 >= 0x100)
      {
        v18 = v7[11];
        if (v18)
        {
          v8 = 3;
          goto LABEL_9;
        }
        if (v17 >= 0x140)
        {
          v18 = v7[12];
          if (v18)
          {
            v8 = 4;
            goto LABEL_9;
          }
          v19 = 0;
          v20 = v17 >> 6;
          if (v20 <= 5)
            v20 = 5;
          v21 = v20 - 5;
          while (v21 != v19)
          {
            v18 = v7[v19++ + 13];
            if (v18)
            {
              v8 = v19 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227335B4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_227335BC8()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  void (*v16)(void);

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    v6 = *(_QWORD *)(v0 + 136);
LABEL_3:
    *(_QWORD *)(v0 + 144) = v1;
    *(_QWORD *)(v0 + 152) = v4;
    v7 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v5);
    *(_QWORD *)(v0 + 160) = *v7;
    *(_QWORD *)(v0 + 168) = v7[1];
    v8 = *(_QWORD *)(v6 + 56) + 16 * v5;
    v9 = *(int **)v8;
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v8 + 8);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 120);
    v16 = (void (*)(void))((char *)v9 + *v9);
    swift_bridgeObjectRetain();
    swift_retain();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v10;
    *v10 = v0;
    v10[1] = sub_227335B4C;
    v16();
    return;
  }
  v11 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v12 = (unint64_t)((1 << *(_BYTE *)(v0 + 200)) + 63) >> 6;
    v6 = *(_QWORD *)(v0 + 136);
    if (v11 >= v12)
      goto LABEL_18;
    v13 = v6 + 64;
    v14 = *(_QWORD *)(v6 + 64 + 8 * v11);
    ++v1;
    if (v14)
    {
LABEL_7:
      v4 = (v14 - 1) & v14;
      v5 = __clz(__rbit64(v14)) + (v1 << 6);
      goto LABEL_3;
    }
    v1 = v11 + 1;
    if (v11 + 1 >= v12)
      goto LABEL_18;
    v14 = *(_QWORD *)(v13 + 8 * v1);
    if (v14)
      goto LABEL_7;
    v1 = v11 + 2;
    if (v11 + 2 >= v12)
      goto LABEL_18;
    v14 = *(_QWORD *)(v13 + 8 * v1);
    if (v14)
      goto LABEL_7;
    v15 = v11 + 3;
    if (v15 >= v12)
    {
LABEL_18:
      swift_release();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v14 = *(_QWORD *)(v13 + 8 * v15);
    if (v14)
    {
      v1 = v15;
      goto LABEL_7;
    }
    while (1)
    {
      v1 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v1 >= v12)
        goto LABEL_18;
      v14 = *(_QWORD *)(v13 + 8 * v1);
      ++v15;
      if (v14)
        goto LABEL_7;
    }
  }
  __break(1u);
}

uint64_t sub_227335D6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;

  if (qword_2558D49E0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 128);
  v4 = sub_22758CF9C();
  __swift_project_value_buffer(v4, (uint64_t)qword_2558D60C8);
  sub_22732280C(v3, v2);
  v5 = v1;
  swift_bridgeObjectRetain();
  sub_22732280C(v3, v2);
  v6 = v1;
  v7 = sub_22758CF84();
  v8 = sub_22758E6C4();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 168);
  if (v9)
  {
    v12 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(void **)(v0 + 128);
    v15 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v15 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_22733611C(v12, v11, &v22);
    sub_22758EA48();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_22732280C(v13, v14);
    sub_22758EBB0();
    swift_bridgeObjectRelease();
    v23 = 0x2065727574706143;
    v24 = 0xEF203A746E657645;
    v25 = v13;
    v26 = (unint64_t)v14;
    MAGCaptureEvent.CaptureEventType.description.getter();
    sub_22758E2B0();
    swift_bridgeObjectRelease();
    sub_2273227B8(v13, v14);
    *(_QWORD *)(v0 + 80) = sub_22733611C(v23, v24, &v22);
    sub_22758EA48();
    swift_bridgeObjectRelease();
    sub_2273227B8(v13, v14);
    sub_2273227B8(v13, v14);
    *(_WORD *)(v15 + 22) = 2080;
    swift_getErrorValue();
    v16 = sub_22758EEEC();
    *(_QWORD *)(v0 + 104) = sub_22733611C(v16, v17, &v22);
    sub_22758EA48();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2272F4000, v7, v8, "Handler=%s error handling event=%s. Error=%s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v21, -1, -1);
    MEMORY[0x2276B3D50](v15, -1, -1);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(void **)(v0 + 128);
    swift_bridgeObjectRelease_n();
    sub_2273227B8(v19, v18);
    sub_2273227B8(v19, v18);

  }
  swift_willThrow();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MAGCaptureEventHandler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MAGCaptureEventHandler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22733611C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2273361EC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22731A374((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22731A374((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_2273361EC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22758EA54();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2273363A4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22758EBF8();
  if (!v8)
  {
    sub_22758ECB8();
    __break(1u);
LABEL_17:
    result = sub_22758ED24();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2273363A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_227336438(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2273365AC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2273365AC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_227336438(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_227387CF4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22758EBBC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22758ECB8();
      __break(1u);
LABEL_10:
      v2 = sub_22758E2C8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22758ED24();
    __break(1u);
LABEL_14:
    result = sub_22758ECB8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2273365AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D60A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

uint64_t sub_2273366F8(uint64_t a1, uint64_t a2)
{
  return sub_2273367CC(a1, a2, (void (*)(void))sub_2275876EC);
}

uint64_t sub_227336704(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2274DE498(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2275876F8();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_227336BEC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2273367CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2274DE434(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v5;
  v14 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    v11 = v14;
  }
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v8);
  sub_2273379FC(v8, v11);
  *v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_2273368B4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _QWORD v12[35];

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2274DE434(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v12[0] = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_227587E54();
      v11 = v12[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(_QWORD *)(v11 + 56) + 280 * v8), 0x118uLL);
    sub_227337254(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    CGRectMake(a3);
  }
  else
  {
    sub_227338314((uint64_t)v12);
    sub_227338344((uint64_t)v12, (uint64_t)a3);
  }
}

uint64_t sub_2273369B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  int64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2274DE734(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_227588580();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for DetectedTextBlock();
    sub_22730DFB0(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for SpatialTextBlock();
    v14 = *(_QWORD *)(v13 - 8);
    sub_2273383D4(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_227337FF4(v6, v9, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for SpatialTextBlock();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_227336B00(uint64_t a1, uint64_t a2)
{
  return sub_2273367CC(a1, a2, (void (*)(void))sub_22758859C);
}

uint64_t sub_227336B0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2274DE634(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2275887E4();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_2273375EC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_227336BD4(uint64_t a1, uint64_t a2)
{
  return sub_2273367CC(a1, a2, (void (*)(void))sub_227588CE0);
}

uint64_t sub_227336BE0(uint64_t a1, uint64_t a2)
{
  return sub_2273367CC(a1, a2, (void (*)(void))sub_227588CEC);
}

unint64_t sub_227336BEC(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_22758EF4C();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x227336EC4);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_227336EE8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v12 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v12 + 8 * v6);
        result = sub_22758EF40();
        v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 >= v8 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = (_QWORD *)(v12 + 8 * v3);
            if (v3 != v6 || v17 >= v13 + 1)
              *v17 = *v13;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = v18 + 56 * v3;
            v20 = (__int128 *)(v18 + 56 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= (unint64_t)v20 + 56))
            {
              v9 = *v20;
              v10 = v20[1];
              v11 = v20[2];
              *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
              *(_OWORD *)(v19 + 16) = v10;
              *(_OWORD *)(v19 + 32) = v11;
              *(_OWORD *)v19 = v9;
              v3 = v6;
            }
          }
        }
        else if (v14 >= v8 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_227337098(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_22758EF40();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_22758C984() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_227337254(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22758EF4C();
        swift_bridgeObjectRetain();
        sub_22758E274();
        v9 = sub_22758EF88();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 280 * v3;
          v15 = (const void *)(v14 + 280 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 280))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x118uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_227337434(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22758EF4C();
        sub_22758EF58();
        result = sub_22758EF88();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_DWORD *)(v13 + 4 * v3);
          v15 = (_DWORD *)(v13 + 4 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2273375EC(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_22758EF4C();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x2273379B8);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_2273379FC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22758EF4C();
        swift_bridgeObjectRetain();
        sub_22758E274();
        v9 = sub_22758EF88();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_227337BD0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_22758EAD8();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_22758EF4C();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x227337F9CLL);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_227337FE0(int64_t a1, uint64_t a2)
{
  sub_227337FF4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
}

void sub_227337FF4(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t (*v43)(_QWORD);

  v39 = a4;
  v43 = a3;
  v38 = a3(0);
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v7, v8, v9, v10);
  v42 = (char *)&v37 - v11;
  v12 = a2 + 64;
  v13 = -1 << *(_BYTE *)(a2 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    v15 = ~v13;
    v16 = sub_22758EAD8();
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v17 = (v16 + 1) & v15;
      v18 = *(_QWORD *)(v6 + 72);
      v40 = v18;
      v41 = a2 + 64;
      v19 = (uint64_t)v42;
      do
      {
        v20 = v18 * v14;
        v21 = v43;
        sub_22730DEEC(*(_QWORD *)(a2 + 48) + v18 * v14, v19, v43);
        sub_22758EF4C();
        sub_22758C984();
        sub_22733838C();
        sub_22758E13C();
        v22 = sub_22758EF88();
        sub_22730DFB0(v19, v21);
        v23 = v22 & v15;
        if (a1 >= (uint64_t)v17)
        {
          if (v23 < v17)
          {
            v12 = v41;
          }
          else
          {
            v12 = v41;
            if (a1 >= (uint64_t)v23)
              goto LABEL_13;
          }
        }
        else
        {
          v12 = v41;
          if (v23 >= v17 || a1 >= (uint64_t)v23)
          {
LABEL_13:
            v18 = v40;
            if (v40 * a1 < v20
              || *(_QWORD *)(a2 + 48) + v40 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v20 + v40))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v40 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v24 = *(_QWORD *)(a2 + 56);
            v25 = *(_QWORD *)(*(_QWORD *)(v39(0) - 8) + 72);
            v26 = v25 * a1;
            v27 = v24 + v25 * a1;
            v28 = v25 * v14;
            v29 = v24 + v25 * v14 + v25;
            if (v26 < v28 || v27 >= v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v14;
            }
            else
            {
              a1 = v14;
              if (v26 != v28)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_6;
          }
        }
        v18 = v40;
LABEL_6:
        v14 = (v14 + 1) & v15;
      }
      while (((*(_QWORD *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    v31 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_2273382D0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for MAGCaptureEventHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for MAGCaptureEventHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MAGCaptureEventHandler.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

double sub_227338314(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 272) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_227338344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D7870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22733838C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5D40;
  if (!qword_2558D5D40)
  {
    v1 = sub_22758C984();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5D40);
  }
  return result;
}

uint64_t sub_2273383D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialTextBlock();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227338418(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D60B0);
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D49D8, (uint64_t)qword_2558D60B0, a1);
}

uint64_t sub_22733844C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D60C8);
}

uint64_t static Log.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D49E0, (uint64_t)qword_2558D60C8, a1);
}

uint64_t sub_22733848C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_22758CF9C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_2273384F4(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D60E0);
}

uint64_t static Log.output.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D49E8, (uint64_t)qword_2558D60E0, a1);
}

uint64_t sub_22733852C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D60F8);
}

uint64_t static Log.speech.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D49F0, (uint64_t)qword_2558D60F8, a1);
}

uint64_t sub_22733856C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6110);
}

uint64_t static Log.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D49F8, (uint64_t)qword_2558D6110, a1);
}

uint64_t sub_2273385A4(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6128);
}

uint64_t static Log.scene.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A00, (uint64_t)qword_2558D6128, a1);
}

uint64_t sub_2273385E0(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6140);
}

uint64_t static Log.imageCapture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A08, (uint64_t)qword_2558D6140, a1);
}

uint64_t sub_227338628(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6158);
}

uint64_t static Log.captureDevice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A10, (uint64_t)qword_2558D6158, a1);
}

uint64_t sub_227338668(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6170);
}

uint64_t static Log.captureSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A18, (uint64_t)qword_2558D6170, a1);
}

uint64_t sub_2273386A8(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6188);
}

uint64_t static Log.gesture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A20, (uint64_t)qword_2558D6188, a1);
}

uint64_t sub_2273386E8(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D61A0);
}

uint64_t static Log.freezeFrame.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A28, (uint64_t)qword_2558D61A0, a1);
}

uint64_t sub_227338730(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D61B8);
}

uint64_t static Log.storage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A30, (uint64_t)qword_2558D61B8, a1);
}

uint64_t sub_227338770(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D61D0);
}

uint64_t static Log.navigation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A38, (uint64_t)qword_2558D61D0, a1);
}

uint64_t sub_2273387B8(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D61E8);
}

uint64_t static Log.zoom.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A40, (uint64_t)qword_2558D61E8, a1);
}

uint64_t sub_2273387F4(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6200);
}

uint64_t static Log.userControls.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A48, (uint64_t)qword_2558D6200, a1);
}

uint64_t sub_22733883C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6218);
}

uint64_t static Log.peopleDetection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A50, (uint64_t)qword_2558D6218, a1);
}

uint64_t sub_22733887C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6230);
}

uint64_t static Log.doorDetection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A58, (uint64_t)qword_2558D6230, a1);
}

uint64_t sub_2273388BC(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6248);
}

uint64_t static Log.objectUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A60, (uint64_t)qword_2558D6248, a1);
}

uint64_t sub_2273388FC(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6260);
}

uint64_t static Log.pointSpeak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A68, (uint64_t)qword_2558D6260, a1);
}

uint64_t sub_227338944(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6278);
}

uint64_t static Log.arSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A70, (uint64_t)qword_2558D6278, a1);
}

uint64_t sub_227338988(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6290);
}

uint64_t static Log.findMyItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A78, (uint64_t)qword_2558D6290, a1);
}

uint64_t sub_2273389D0(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D62A8);
}

uint64_t static Log.detectionMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A80, (uint64_t)qword_2558D62A8, a1);
}

uint64_t sub_227338A10(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D62C0);
}

uint64_t static Log.activities.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A88, (uint64_t)qword_2558D62C0, a1);
}

uint64_t sub_227338A58(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D62D8);
}

uint64_t static Log.infinite.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A90, (uint64_t)qword_2558D62D8, a1);
}

uint64_t sub_227338A9C(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D62F0);
}

uint64_t static Log.tmp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4A98, (uint64_t)qword_2558D62F0, a1);
}

uint64_t sub_227338AD4(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6308);
}

uint64_t static Log.assistiveAccess.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4AA0, (uint64_t)qword_2558D6308, a1);
}

uint64_t sub_227338B14(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6320);
}

uint64_t static Log.spatialGrouping.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4AA8, (uint64_t)qword_2558D6320, a1);
}

uint64_t sub_227338B54(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6338);
}

uint64_t static Log.thermal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4AB0, (uint64_t)qword_2558D6338, a1);
}

uint64_t sub_227338B94(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6350);
}

uint64_t static Log.angel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4AB8, (uint64_t)qword_2558D6350, a1);
}

uint64_t sub_227338BD0(uint64_t a1)
{
  return sub_227338BFC(a1, qword_2558D6368);
}

uint64_t sub_227338BFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_22758CF9C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_22758CF90();
}

uint64_t static Log.readerMode.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22733848C(&qword_2558D4AC0, (uint64_t)qword_2558D6368, a1);
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_227338CDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22758D47C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_227338DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_22758D47C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_227338E30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22758D47C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_227338ED8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_22731A1A4((uint64_t)a1 + v6, qword_2558D6380);
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22758D47C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_227338FB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22758D47C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_22733905C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_22731A1A4((uint64_t)a1 + v7, qword_2558D6380);
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22758D47C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22733912C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227339138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2273391B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2273391C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MFReaderCustomThemeSelectionMenu(uint64_t a1)
{
  return sub_22733978C(a1, qword_2558D63E0);
}

void sub_227339250()
{
  unint64_t v0;

  sub_2273392C4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2273392C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2558D76E0)
  {
    sub_22758D47C();
    v0 = sub_22758D35C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2558D76E0);
  }
}

uint64_t *sub_227339318(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2558D6380) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_22758D47C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2273393E0(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_22758D47C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_227339444(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22758D47C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2273394E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_22731A1A4((uint64_t)a1, qword_2558D6380);
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_22758D47C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_227339594(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22758D47C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_22733962C(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_22731A1A4((uint64_t)a1, qword_2558D6380);
    v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_22758D47C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2273396DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2273396E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_227339728()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227339734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MFReaderThemeSelectionOverlay(uint64_t a1)
{
  return sub_22733978C(a1, qword_2558D6470);
}

uint64_t sub_22733978C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2273397C0()
{
  unint64_t v0;

  sub_2273392C4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_227339828()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_227339838@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  double v39[3];

  v2 = sub_22758D47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v29 = MEMORY[0x2276B1C68](v10);
  sub_22753F394((uint64_t)v9);
  sub_22758D470();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v9, v2);
  sub_22758D380();
  v12 = v30;
  v13 = v31;
  v14 = v32;
  v28 = v33;
  v15 = v34;
  v27 = sub_22758DE9C();
  v26 = v16;
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_mainScreen);
  objc_msgSend(v18, sel_bounds);

  sub_22753F394((uint64_t)v9);
  sub_22758D470();
  v11(v9, v2);
  v19 = objc_msgSend(v17, sel_mainScreen);
  objc_msgSend(v19, sel_bounds);

  sub_22753F394((uint64_t)v9);
  sub_22758D470();
  v11(v9, v2);
  sub_22758DE9C();
  sub_22758D3C8();
  v20 = v35;
  v21 = v36;
  v22 = v37;
  v23 = v38;
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v28;
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v29;
  *(_WORD *)(a1 + 48) = 256;
  v24 = v26;
  *(_QWORD *)(a1 + 56) = v27;
  *(_QWORD *)(a1 + 64) = v24;
  *(_QWORD *)(a1 + 72) = v20;
  *(_BYTE *)(a1 + 80) = v21;
  *(_QWORD *)(a1 + 88) = v22;
  *(_BYTE *)(a1 + 96) = v23;
  result = v39[0];
  *(_OWORD *)(a1 + 104) = *(_OWORD *)v39;
  return result;
}

uint64_t sub_227339AE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_227339AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t ObjCClassFromMetadata;
  id v126;
  void *v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  id v162;
  void *v163;
  void *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  void *v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  id v211;
  void *v212;
  void *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD v227[2];
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __int128 v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(uint64_t, uint64_t);
  uint64_t v239;
  uint64_t v240;
  __int128 v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  char v275;
  uint64_t v276;
  __int128 v277;
  uint64_t v278;

  v259 = a2;
  v250 = sub_22758DE00();
  v249 = *(_QWORD *)(v250 - 8);
  MEMORY[0x24BDAC7A8](v250, v3, v4, v5, v6);
  v247 = (char *)v227 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6548);
  v12 = MEMORY[0x24BDAC7A8](v248, v8, v9, v10, v11);
  v246 = (char *)v227 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14, v15, v16, v17);
  v273 = (uint64_t)v227 - v18;
  v270 = sub_22758D740();
  v245 = *(_QWORD *)(v270 - 8);
  MEMORY[0x24BDAC7A8](v270, v19, v20, v21, v22);
  v269 = (char *)v227 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = sub_22758D47C();
  v267 = *(_QWORD *)(v271 - 8);
  MEMORY[0x24BDAC7A8](v271, v24, v25, v26, v27);
  v265 = (uint64_t)v227 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for MFColorPicker();
  MEMORY[0x24BDAC7A8](v263, v29, v30, v31, v32);
  v34 = (char *)v227 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6550);
  MEMORY[0x24BDAC7A8](v35, v36, v37, v38, v39);
  v264 = (char *)v227 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6558);
  v45 = MEMORY[0x24BDAC7A8](v268, v41, v42, v43, v44);
  v251 = (uint64_t)v227 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45, v47, v48, v49, v50);
  v52 = (char *)v227 - v51;
  v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6560);
  v57 = MEMORY[0x24BDAC7A8](v262, v53, v54, v55, v56);
  v252 = (uint64_t)v227 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57, v59, v60, v61, v62);
  v64 = (char *)v227 - v63;
  v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6568);
  v69 = MEMORY[0x24BDAC7A8](v266, v65, v66, v67, v68);
  v258 = (uint64_t)v227 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = MEMORY[0x24BDAC7A8](v69, v71, v72, v73, v74);
  v257 = (uint64_t)v227 - v76;
  v81 = MEMORY[0x24BDAC7A8](v75, v77, v78, v79, v80);
  v253 = (char *)v227 - v82;
  v87 = MEMORY[0x24BDAC7A8](v81, v83, v84, v85, v86);
  v254 = (char *)v227 - v88;
  v93 = MEMORY[0x24BDAC7A8](v87, v89, v90, v91, v92);
  v255 = (char *)v227 - v94;
  v99 = MEMORY[0x24BDAC7A8](v93, v95, v96, v97, v98);
  v256 = (uint64_t)v227 - v100;
  v105 = MEMORY[0x24BDAC7A8](v99, v101, v102, v103, v104);
  v107 = (char *)v227 - v106;
  v112 = MEMORY[0x24BDAC7A8](v105, v108, v109, v110, v111);
  v228 = (char *)v227 - v113;
  v118 = MEMORY[0x24BDAC7A8](v112, v114, v115, v116, v117);
  v242 = (char *)v227 - v119;
  MEMORY[0x24BDAC7A8](v118, v120, v121, v122, v123);
  v272 = (uint64_t)v227 - v124;
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v261 = ObjCClassFromMetadata;
  v260 = (id)objc_opt_self();
  v126 = objc_msgSend(v260, sel_bundleForClass_, ObjCClassFromMetadata);
  v127 = (void *)sub_22758E1B4();
  v128 = (void *)sub_22758E1B4();
  v129 = objc_msgSend(v126, sel_localizedStringForKey_value_table_, v127, 0, v128);

  v130 = sub_22758E1E4();
  v132 = v131;

  v244 = type metadata accessor for MFReaderTextFormatterModel(0);
  v240 = sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  sub_22758D458();
  swift_getKeyPath();
  sub_22758D464();
  swift_release();
  swift_release();
  v241 = v277;
  v133 = v278;
  *(_QWORD *)&v34[*(int *)(v263 + 28)] = swift_getKeyPath();
  v243 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v34 = v130;
  *((_QWORD *)v34 + 1) = v132;
  v274 = 0;
  sub_22758DD34();
  v134 = v276;
  v34[16] = v275;
  *((_QWORD *)v34 + 3) = v134;
  *((_OWORD *)v34 + 2) = v241;
  *((_QWORD *)v34 + 6) = v133;
  *(_QWORD *)&v241 = sub_2273096F0(&qword_2558D6570, (uint64_t (*)(uint64_t))type metadata accessor for MFColorPicker, (uint64_t)&unk_227598A80);
  v135 = (uint64_t)v264;
  sub_22758DBE4();
  sub_22730DFB0((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for MFColorPicker);
  LOBYTE(v130) = sub_22758D98C();
  sub_22731A11C(v135, (uint64_t)v52, &qword_2558D6550);
  v136 = &v52[*(int *)(v268 + 36)];
  *v136 = v130;
  *(_OWORD *)(v136 + 8) = 0u;
  *(_OWORD *)(v136 + 24) = 0u;
  v136[40] = 1;
  sub_22731A1A4(v135, &qword_2558D6550);
  LOBYTE(v127) = sub_22758D9A4();
  v137 = *(int *)(type metadata accessor for MFReaderCustomThemeSelectionMenu(0) + 20);
  v227[1] = a1;
  v239 = a1 + v137;
  v138 = v265;
  sub_22753F394(v265);
  sub_22758D470();
  v238 = *(void (**)(uint64_t, uint64_t))(v267 + 8);
  v238(v138, v271);
  sub_22758D2E4();
  v140 = v139;
  v142 = v141;
  v144 = v143;
  v146 = v145;
  sub_22731A11C((uint64_t)v52, (uint64_t)v64, &qword_2558D6558);
  v147 = &v64[*(int *)(v262 + 36)];
  *v147 = (char)v127;
  *((_QWORD *)v147 + 1) = v140;
  *((_QWORD *)v147 + 2) = v142;
  *((_QWORD *)v147 + 3) = v144;
  *((_QWORD *)v147 + 4) = v146;
  v147[40] = 0;
  sub_22731A1A4((uint64_t)v52, &qword_2558D6558);
  sub_22733AC68();
  *(_QWORD *)&v277 = v148;
  *((_QWORD *)&v277 + 1) = v149;
  v267 = sub_22731236C();
  v150 = sub_22758DAE8();
  v152 = v151;
  LOBYTE(v52) = v153 & 1;
  v237 = sub_22733C944(&qword_2558D6578, &qword_2558D6560, sub_22733C928);
  sub_22758DB90();
  sub_227335548(v150, v152, (char)v52);
  swift_bridgeObjectRelease();
  sub_22731A1A4((uint64_t)v64, &qword_2558D6560);
  v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64C8);
  v154 = v245;
  v155 = *(unsigned __int8 *)(v245 + 80);
  v235 = ((v155 + 32) & ~v155) + *(_QWORD *)(v245 + 72);
  v233 = (v155 + 32) & ~v155;
  v234 = v155 | 7;
  v156 = swift_allocObject();
  v232 = xmmword_227593AB0;
  *(_OWORD *)(v156 + 16) = xmmword_227593AB0;
  sub_22758D734();
  *(_QWORD *)&v277 = v156;
  v230 = sub_2273096F0(&qword_2558D64D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64D8);
  v231 = sub_22730BB7C(&qword_2558D64E0, &qword_2558D64D8, MEMORY[0x24BEE12C8]);
  v157 = v269;
  v158 = v270;
  sub_22758EACC();
  v159 = (uint64_t)v228;
  sub_22758D4B8();
  v245 = *(_QWORD *)(v154 + 8);
  ((void (*)(char *, uint64_t))v245)(v157, v158);
  sub_22731A1A4((uint64_t)v107, &qword_2558D6568);
  v160 = v260;
  v161 = v261;
  v162 = objc_msgSend(v260, sel_bundleForClass_, v261);
  v163 = (void *)sub_22758E1B4();
  v164 = (void *)sub_22758E1B4();
  v165 = objc_msgSend(v162, sel_localizedStringForKey_value_table_, v163, 0, v164);

  v166 = sub_22758E1E4();
  v168 = v167;

  *(_QWORD *)&v277 = v166;
  *((_QWORD *)&v277 + 1) = v168;
  v169 = (uint64_t)v242;
  sub_22758D494();
  swift_bridgeObjectRelease();
  sub_22731A1A4(v159, &qword_2558D6568);
  sub_22731A160(v169, v272, &qword_2558D6568);
  v170 = v247;
  sub_22758DDF4();
  v171 = sub_22758DC80();
  LOBYTE(v168) = sub_22758D998();
  v172 = v249;
  v173 = (uint64_t)v246;
  v174 = v250;
  (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v246, v170, v250);
  v175 = v173 + *(int *)(v248 + 36);
  *(_QWORD *)v175 = v171;
  *(_BYTE *)(v175 + 8) = v168;
  (*(void (**)(char *, uint64_t))(v172 + 8))(v170, v174);
  sub_22731A160(v173, v273, &qword_2558D6548);
  v176 = objc_msgSend(v160, sel_bundleForClass_, v161);
  v177 = (void *)sub_22758E1B4();
  v178 = (void *)sub_22758E1B4();
  v179 = objc_msgSend(v176, sel_localizedStringForKey_value_table_, v177, 0, v178);

  v180 = sub_22758E1E4();
  v182 = v181;

  sub_22758D458();
  swift_getKeyPath();
  sub_22758D464();
  swift_release();
  swift_release();
  v183 = v277;
  v184 = v278;
  *(_QWORD *)&v34[*(int *)(v263 + 28)] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v34 = v180;
  *((_QWORD *)v34 + 1) = v182;
  v274 = 0;
  sub_22758DD34();
  v185 = v276;
  v34[16] = v275;
  *((_QWORD *)v34 + 3) = v185;
  *((_OWORD *)v34 + 2) = v183;
  *((_QWORD *)v34 + 6) = v184;
  v186 = (uint64_t)v264;
  sub_22758DBE4();
  sub_22730DFB0((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for MFColorPicker);
  LOBYTE(v34) = sub_22758D98C();
  v187 = v251;
  sub_22731A11C(v186, v251, &qword_2558D6550);
  v188 = v187 + *(int *)(v268 + 36);
  *(_BYTE *)v188 = (_BYTE)v34;
  *(_OWORD *)(v188 + 8) = 0u;
  *(_OWORD *)(v188 + 24) = 0u;
  *(_BYTE *)(v188 + 40) = 1;
  sub_22731A1A4(v186, &qword_2558D6550);
  LOBYTE(v34) = sub_22758D9B0();
  v189 = v265;
  sub_22753F394(v265);
  sub_22758D470();
  v238(v189, v271);
  sub_22758D2E4();
  v191 = v190;
  v193 = v192;
  v195 = v194;
  v197 = v196;
  v198 = v252;
  sub_22731A11C(v187, v252, &qword_2558D6558);
  v199 = v198 + *(int *)(v262 + 36);
  *(_BYTE *)v199 = (_BYTE)v34;
  *(_QWORD *)(v199 + 8) = v191;
  *(_QWORD *)(v199 + 16) = v193;
  *(_QWORD *)(v199 + 24) = v195;
  *(_QWORD *)(v199 + 32) = v197;
  *(_BYTE *)(v199 + 40) = 0;
  sub_22731A1A4(v187, &qword_2558D6558);
  sub_22733AC68();
  *(_QWORD *)&v277 = v200;
  *((_QWORD *)&v277 + 1) = v201;
  v202 = sub_22758DAE8();
  v204 = v203;
  LOBYTE(v178) = v205 & 1;
  v206 = (uint64_t)v253;
  sub_22758DB90();
  sub_227335548(v202, v204, (char)v178);
  swift_bridgeObjectRelease();
  sub_22731A1A4(v198, &qword_2558D6560);
  v207 = swift_allocObject();
  *(_OWORD *)(v207 + 16) = v232;
  sub_22758D734();
  *(_QWORD *)&v277 = v207;
  v209 = v269;
  v208 = v270;
  sub_22758EACC();
  v210 = (uint64_t)v254;
  sub_22758D4B8();
  ((void (*)(char *, uint64_t))v245)(v209, v208);
  sub_22731A1A4(v206, &qword_2558D6568);
  v211 = objc_msgSend(v260, sel_bundleForClass_, v261);
  v212 = (void *)sub_22758E1B4();
  v213 = (void *)sub_22758E1B4();
  v214 = objc_msgSend(v211, sel_localizedStringForKey_value_table_, v212, 0, v213);

  v215 = sub_22758E1E4();
  v217 = v216;

  *(_QWORD *)&v277 = v215;
  *((_QWORD *)&v277 + 1) = v217;
  v218 = (uint64_t)v255;
  sub_22758D494();
  swift_bridgeObjectRelease();
  sub_22731A1A4(v210, &qword_2558D6568);
  v219 = v256;
  sub_22731A160(v218, v256, &qword_2558D6568);
  v220 = v272;
  v221 = v257;
  sub_22731A11C(v272, v257, &qword_2558D6568);
  v222 = v273;
  sub_22731A11C(v273, v173, &qword_2558D6548);
  v223 = v258;
  sub_22731A11C(v219, v258, &qword_2558D6568);
  v224 = v259;
  sub_22731A11C(v221, v259, &qword_2558D6568);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6598);
  sub_22731A11C(v173, v224 + *(int *)(v225 + 48), &qword_2558D6548);
  sub_22731A11C(v223, v224 + *(int *)(v225 + 64), &qword_2558D6568);
  sub_22731A1A4(v219, &qword_2558D6568);
  sub_22731A1A4(v222, &qword_2558D6548);
  sub_22731A1A4(v220, &qword_2558D6568);
  sub_22731A1A4(v223, &qword_2558D6568);
  sub_22731A1A4(v173, &qword_2558D6548);
  return sub_22731A1A4(v221, &qword_2558D6568);
}

void sub_22733AC68()
{
  void *v0;
  id v1;
  uint64_t v2;

  if (UIAccessibilityIsVoiceOverRunning())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D194();
    swift_release();
    swift_release();
    swift_release();
    if (v2)
    {
      sub_22733C76C();
      swift_retain();
      v0 = (void *)sub_22758E904();
      v1 = objc_msgSend(v0, sel__accessibilityColorDescription);

      if (v1)
      {
        sub_22758E1E4();
        swift_release();

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_22733AD64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[7];
  uint64_t v45;
  uint64_t v46;

  v44[5] = a2;
  v3 = sub_22758D740();
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64B0);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (_QWORD *)((char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64B8);
  v19 = MEMORY[0x24BDAC7A8](v45, v15, v16, v17, v18);
  v24 = MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v29 = MEMORY[0x24BDAC7A8](v24, v25, v26, v27, v28);
  v44[3] = (char *)v44 - v30;
  v35 = MEMORY[0x24BDAC7A8](v29, v31, v32, v33, v34);
  v44[6] = (char *)v44 - v36;
  MEMORY[0x24BDAC7A8](v35, v37, v38, v39, v40);
  v44[4] = (char *)v44 - v41;
  *v14 = sub_22758DE9C();
  v14[1] = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64C0);
  sub_22733B604(a1, (uint64_t)v14 + *(int *)(v43 + 44));
  v46 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_22733AF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v7 = sub_22758EE50();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64C8);
  v8 = swift_allocObject();
  if ((v7 & 1) != 0)
  {
    *(_OWORD *)(v8 + 16) = xmmword_227596540;
    sub_22758D728();
  }
  else
  {
    *(_OWORD *)(v8 + 16) = xmmword_227593AB0;
  }
  sub_22758D734();
  *(_QWORD *)(v6 - 104) = v8;
  sub_2273096F0(&qword_2558D64D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64D8);
  sub_22730BB7C(&qword_2558D64E0, &qword_2558D64D8, MEMORY[0x24BEE12C8]);
  sub_22758EACC();
  sub_22730BB7C(&qword_2558D64E8, &qword_2558D64B0, MEMORY[0x24BDF4750]);
  sub_22758DBD8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
  sub_22731A1A4(v2, &qword_2558D64B0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  swift_release();
  *(_BYTE *)(v6 - 104) = *(_BYTE *)(v6 - 81);
  sub_22731C680();
  *(_QWORD *)(v6 - 104) = v9;
  *(_QWORD *)(v6 - 96) = v10;
  v11 = sub_22731236C();
  sub_22758D4A0();
  swift_bridgeObjectRelease();
  sub_22731A1A4(v4, &qword_2558D64B8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  swift_release();
  *(_BYTE *)(v6 - 104) = *(_BYTE *)(v6 - 81);
  *(_QWORD *)(v6 - 104) = sub_22731C904();
  *(_QWORD *)(v6 - 96) = v12;
  v13 = *(_QWORD *)(v6 - 184);
  sub_22758D494();
  swift_bridgeObjectRelease();
  sub_22731A1A4(v3, &qword_2558D64B8);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(_QWORD *)(v6 - 192) = ObjCClassFromMetadata;
  v15 = (void *)objc_opt_self();
  *(_QWORD *)(v6 - 200) = v15;
  v16 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata);
  v17 = (void *)sub_22758E1B4();
  v18 = (void *)sub_22758E1B4();
  v19 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, 0, v18);

  v20 = sub_22758E1E4();
  v22 = v21;

  *(_QWORD *)(v6 - 104) = v20;
  *(_QWORD *)(v6 - 96) = v22;
  *(_QWORD *)(v6 - 208) = v11;
  v23 = sub_22758DAE8();
  v25 = v24;
  LOBYTE(v11) = v26 & 1;
  sub_22733AC68();
  *(_QWORD *)(v6 - 104) = v27;
  *(_QWORD *)(v6 - 96) = v28;
  v29 = sub_22758DAE8();
  v31 = v30;
  v33 = v32 & 1;
  sub_22758D488();
  sub_227335548(v29, v31, v33);
  swift_bridgeObjectRelease();
  sub_227335548(v23, v25, v11);
  swift_bridgeObjectRelease();
  sub_22731A1A4(v13, &qword_2558D64B8);
  v34 = objc_msgSend(*(id *)(v6 - 200), sel_bundleForClass_, *(_QWORD *)(v6 - 192));
  v35 = (void *)sub_22758E1B4();
  v36 = (void *)sub_22758E1B4();
  v37 = objc_msgSend(v34, sel_localizedStringForKey_value_table_, v35, 0, v36);

  v38 = sub_22758E1E4();
  v40 = v39;

  *(_QWORD *)(v6 - 104) = v38;
  *(_QWORD *)(v6 - 96) = v40;
  v41 = sub_22758DAE8();
  v43 = v42;
  LOBYTE(v31) = v44 & 1;
  sub_22733AC68();
  *(_QWORD *)(v6 - 104) = v45;
  *(_QWORD *)(v6 - 96) = v46;
  v47 = sub_22758DAE8();
  v49 = v48;
  LOBYTE(v19) = v50 & 1;
  v51 = *(_QWORD *)(v6 - 176);
  v52 = *(_QWORD *)(v6 - 160);
  sub_22758D488();
  sub_227335548(v47, v49, (char)v19);
  swift_bridgeObjectRelease();
  sub_227335548(v41, v43, v31);
  swift_bridgeObjectRelease();
  sub_22731A1A4(v52, &qword_2558D64B8);
  return sub_22731A160(v51, *(_QWORD *)(v6 - 168), &qword_2558D64B8);
}

void sub_22733B604(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char v86;
  void (*v87)(char *, uint64_t);
  id v88;
  uint64_t ObjCClassFromMetadata;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  char v94;
  void (*v95)(char *, uint64_t);
  id v96;
  char v97;
  id v98;
  uint64_t *v99;
  char v100;
  id v101;
  char v102;
  id v103;
  char v104;
  id v105;
  uint64_t KeyPath;
  uint64_t v107;
  _DWORD v108[4];
  uint64_t *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v136;
  unsigned __int8 v137;
  char *v138;
  unsigned __int8 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t *v144;
  unsigned __int8 v145;

  v130 = a2;
  v3 = sub_22758DD10();
  v119 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64F0);
  v14 = MEMORY[0x24BDAC7A8](v129, v10, v11, v12, v13);
  MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
  v121 = (char *)v108 - v19;
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D64F8);
  MEMORY[0x24BDAC7A8](v126, v20, v21, v22, v23);
  v128 = (char *)v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6500);
  MEMORY[0x24BDAC7A8](v127, v25, v26, v27, v28);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6508);
  MEMORY[0x24BDAC7A8](v124, v29, v30, v31, v32);
  v125 = (char *)v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  v39 = MEMORY[0x24BDAC7A8](v34, v35, v36, v37, v38);
  v132 = (uint64_t)v108 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v39, v41, v42, v43, v44);
  v122 = (uint64_t *)((char *)v108 - v46);
  MEMORY[0x24BDAC7A8](v45, v47, v48, v49, v50);
  v114 = (uint64_t)v108 - v51;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6510);
  v56 = MEMORY[0x24BDAC7A8](v123, v52, v53, v54, v55);
  v120 = (char *)v108 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56, v58, v59, v60, v61);
  v115 = (char *)v108 - v62;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6518);
  v67 = MEMORY[0x24BDAC7A8](v113, v63, v64, v65, v66);
  v116 = (char *)v108 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = MEMORY[0x24BDAC7A8](v67, v69, v70, v71, v72);
  MEMORY[0x24BDAC7A8](v73, v74, v75, v76, v77);
  v117 = (char *)v108 - v78;
  v134 = sub_22758D47C();
  v79 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134, v80, v81, v82, v83);
  v85 = (char *)v108 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  swift_release();
  v131 = v142;
  if (v142)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D194();
    swift_release();
    swift_release();
    swift_release();
    v118 = v142;
    if (v142)
    {
      type metadata accessor for MFReaderCustomThemeSelectionMenu(0);
      swift_retain();
      sub_22753F394((uint64_t)v85);
      v86 = sub_22758D470();
      v87 = *(void (**)(char *, uint64_t))(v79 + 8);
      v87(v85, v134);
      if ((v86 & 1) != 0)
      {
        v88 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v88, sel_bounds);

      }
      sub_22753F394((uint64_t)v85);
      v100 = sub_22758D470();
      v87(v85, v134);
      if ((v100 & 1) != 0)
      {
        v101 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v101, sel_bounds);

      }
      sub_22758DE9C();
      sub_22758D3C8();
      v132 = v136;
      LODWORD(v121) = v137;
      v120 = v138;
      LODWORD(v119) = v139;
      v112 = v140;
      v111 = v141;
      sub_22758DEFC();
      swift_retain();
      sub_22753F394((uint64_t)v85);
      v102 = sub_22758D470();
      v87(v85, v134);
      if ((v102 & 1) != 0)
      {
        v103 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v103, sel_bounds);

      }
      sub_22753F394((uint64_t)v85);
      v104 = sub_22758D470();
      v87(v85, v134);
      if ((v104 & 1) != 0)
      {
        v105 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v105, sel_bounds);

      }
      sub_22758DE9C();
      sub_22758D3C8();
      v134 = v142;
      v110 = v143;
      v109 = v144;
      v108[3] = v145;
      sub_22758DEFC();
      KeyPath = swift_getKeyPath();
      v107 = (uint64_t)v122;
      *v122 = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
      swift_storeEnumTagMultiPayload();
      sub_22733C7B8(v107, v114);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22758D194();
      swift_release();
      swift_release();
      swift_release();
      __asm { BR              X10 }
    }
    swift_release();
  }
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v90 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v91 = (void *)sub_22758E1B4();
  v92 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v91, v90);

  if (v92)
  {
    sub_22758DCF8();
    v93 = v119;
    (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v9, *MEMORY[0x24BDF3FD0], v3);
    sub_22758DD28();
    swift_release();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v9, v3);
    type metadata accessor for MFReaderCustomThemeSelectionMenu(0);
    sub_22753F394((uint64_t)v85);
    v94 = sub_22758D470();
    v95 = *(void (**)(char *, uint64_t))(v79 + 8);
    v95(v85, v134);
    if ((v94 & 1) != 0)
    {
      v96 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v96, sel_bounds);

    }
    sub_22753F394((uint64_t)v85);
    v97 = sub_22758D470();
    v95(v85, v134);
    if ((v97 & 1) != 0)
    {
      v98 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v98, sel_bounds);

    }
    v99 = v122;
    sub_22758DE9C();
    sub_22758D3C8();
    v134 = v142;
    LODWORD(v131) = v143;
    v122 = v144;
    *v99 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    swift_storeEnumTagMultiPayload();
    sub_22733C7B8((uint64_t)v99, v132);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D194();
    swift_release();
    swift_release();
    swift_release();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x22733C62CLL);
}

uint64_t sub_22733C654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[16];
  uint64_t v5;
  _BYTE v6[16];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  type metadata accessor for MFReaderTextFormatterModel(0);
  sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  sub_22758D458();
  swift_getKeyPath();
  sub_22758D464();
  swift_release();
  swift_release();
  v7 = v1;
  v5 = v1;
  return sub_227405188(1, 1, v8, v9, v10, 0, (void (*)(uint64_t))sub_22733C754, (uint64_t)v6, a1, 320.0, (void (*)(uint64_t))sub_22733C75C, (uint64_t)v4, 0, 0);
}

uint64_t sub_22733C754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227339AF8(*(_QWORD *)(v1 + 16), a1);
}

void sub_22733C75C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_22733AD64(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_22733C76C()
{
  unint64_t result;

  result = qword_2558D7660;
  if (!qword_2558D7660)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2558D7660);
  }
  return result;
}

uint64_t sub_22733C7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22733C7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MFReaderThemeSelectionOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22733C840()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D6528;
  if (!qword_2558D6528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D64F0);
    v2[0] = sub_22733C8C4();
    v2[1] = sub_22730BB7C(&qword_2558D6538, &qword_2558D6508, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D6528);
  }
  return result;
}

unint64_t sub_22733C8C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D77E0;
  if (!qword_2558D77E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D6530);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D77E0);
  }
  return result;
}

uint64_t sub_22733C928()
{
  return sub_22733C944(&qword_2558D6580, &qword_2558D6558, (uint64_t (*)(void))sub_22733C9B0);
}

uint64_t sub_22733C944(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22733C9B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D6588;
  if (!qword_2558D6588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D6550);
    v2[0] = sub_2273096F0(&qword_2558D6570, (uint64_t (*)(uint64_t))type metadata accessor for MFColorPicker, (uint64_t)&unk_227598A80);
    v2[1] = sub_2273096F0(&qword_2558D6590, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D6588);
  }
  return result;
}

uint64_t sub_22733CA4C()
{
  return sub_22730BB7C(&qword_2558D65A0, &qword_2558D65A8, (uint64_t)&protocol conformance descriptor for MFMenu<A, B>);
}

unint64_t sub_22733CA7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D65B0;
  if (!qword_2558D65B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D65B8);
    v2[0] = sub_22730BB7C(&qword_2558D65C0, &qword_2558D65C8, MEMORY[0x24BDED500]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D65B0);
  }
  return result;
}

void sub_22733CB04(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22733CB3C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

void sub_22733CD80(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22733CDB4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t *sub_22733CF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  const void *v17;
  uint64_t v18;
  _BYTE v19[280];
  uint64_t v20[39];
  _QWORD v21[35];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate;
  result = (uint64_t *)MEMORY[0x2276B3E34](v2);
  if (result)
  {
    v5 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle);
    v4 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle + 8);
    swift_bridgeObjectRetain();
    result = (uint64_t *)swift_unknownObjectRelease();
    if (v4)
    {
      if (MEMORY[0x2276B3E34](v2))
      {
        swift_unknownObjectRelease();
        if (qword_2540B87B8 != -1)
          swift_once();
        v6 = (_QWORD *)qword_2540BCDD0;
        swift_beginAccess();
        v7 = v6[6];
        v8 = v6[7];
        v21[0] = v6[5];
        v21[1] = v7;
        v21[2] = v8;
        v9 = qword_2540B9100;
        swift_bridgeObjectRetain();
        v10 = swift_bridgeObjectRetain();
        if (v9 != -1)
          v10 = swift_once();
        MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v20[0] + 16) && (v15 = sub_2274DE434(v5, v4), (v16 & 1) != 0))
        {
          v17 = (const void *)(*(_QWORD *)(v20[0] + 56) + 280 * v15);
          memcpy(v19, v17, sizeof(v19));
          memmove(v20, v17, 0x118uLL);
          CGRectMake(v20);
          sub_22730B838((uint64_t)v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_227338314((uint64_t)v20);
        }
        sub_227338344((uint64_t)v20, (uint64_t)v21);
        v18 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
        sub_227338344(v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v20);
        sub_227338344((uint64_t)v21, v18);
        return sub_22733F1C4(v20);
      }
      else
      {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_22733D1BC()
{
  void *v0;
  id v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_loadView);
  v1 = objc_msgSend(v0, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_22758E1B4();
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  sub_22758E1E4();
  v7 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v7);

}

uint64_t *sub_22733D350()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t *result;
  uint64_t *v9;
  uint64_t *v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView];
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  type metadata accessor for UIStepperLengthCell();
  v5 = swift_getObjCClassFromMetadata();
  v6 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, v5, v6);

  v7 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v7);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = (uint64_t *)objc_msgSend(v1, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    result = (uint64_t *)objc_msgSend(v1, sel_view);
    if (result)
    {
      v10 = result;
      sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
      swift_bridgeObjectRelease();

      return sub_22733CF3C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_22733D57C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  objc_class *ObjectType;
  objc_super v23;
  uint64_t v24;
  _BYTE v25[288];

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (uint64_t)&v3[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
  sub_227338314((uint64_t)v25);
  sub_227338344((uint64_t)v25, v5);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6 = v3;
  v7 = 0;
  v8 = MEMORY[0x24BEE4AF8];
  do
  {
    v11 = byte_24EF98580[v7 + 32];
    if (v11 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v24 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324650(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v24;
      }
      v10 = *(_QWORD *)(v8 + 16);
      v9 = *(_QWORD *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_227324650(v9 > 1, v10 + 1, 1);
        v8 = v24;
      }
      *(_QWORD *)(v8 + 16) = v10 + 1;
      *(_BYTE *)(v8 + v10 + 32) = v11;
    }
    ++v7;
  }
  while (v7 != 4);
  *(_QWORD *)&v6[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_availableDetectionFeedbacks] = v8;
  v12 = OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, sel_setClipsToBounds_, 0);
  v14 = (void *)objc_opt_self();
  v15 = v13;
  v16 = objc_msgSend(v14, sel_systemYellowColor);
  objc_msgSend(v15, sel_setTintColor_, v16);

  *(_QWORD *)&v6[v12] = v15;
  if (a2)
  {
    v17 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v23.receiver = v6;
  v23.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, v17, a3, a1);

  return v18;
}

id sub_22733D848(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  objc_class *ObjectType;
  objc_super v18;
  uint64_t v19;
  _BYTE v20[288];

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity];
  sub_227338314((uint64_t)v20);
  sub_227338344((uint64_t)v20, v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4 = v1;
  v5 = 0;
  v6 = MEMORY[0x24BEE4AF8];
  do
  {
    v9 = byte_24EF985A8[v5 + 32];
    if (v9 != 3)
      goto LABEL_10;
    if (qword_2558D4BA8 != -1)
      swift_once();
    if (byte_2558DAEE1 == 1)
    {
LABEL_10:
      v19 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324650(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v19;
      }
      v8 = *(_QWORD *)(v6 + 16);
      v7 = *(_QWORD *)(v6 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_227324650(v7 > 1, v8 + 1, 1);
        v6 = v19;
      }
      *(_QWORD *)(v6 + 16) = v8 + 1;
      *(_BYTE *)(v6 + v8 + 32) = v9;
    }
    ++v5;
  }
  while (v5 != 4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_availableDetectionFeedbacks] = v6;
  v10 = OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_tableView;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, sel_setClipsToBounds_, 0);
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, sel_systemYellowColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  *(_QWORD *)&v4[v10] = v13;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v18, sel_initWithCoder_, a1);

  return v15;
}

uint64_t type metadata accessor for ActivityObjectUnderstandingCustomizationViewController()
{
  return objc_opt_self();
}

id sub_22733DB40(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6620);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v7 = 3;
  switch(sub_22758CAC8())
  {
    case 0:
      v7 = 0;
      goto LABEL_8;
    case 1:
      v9 = (void *)sub_22758E1B4();
      v10 = (void *)sub_22758CA74();
      v11 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v9, v10);
      v7 = 1;
      goto LABEL_6;
    case 2:
      v9 = (void *)sub_22758E1B4();
      v10 = (void *)sub_22758CA74();
      v11 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v9, v10);
      v7 = 2;
LABEL_6:
      v12 = v11;

      sub_22733CF3C();
      goto LABEL_10;
    case 3:
      goto LABEL_8;
    case 4:
      v7 = 4;
LABEL_8:
      v8 = 0;
      break;
    default:
      v7 = 5;
      v8 = 1;
      break;
  }
  v13 = (void *)sub_22758E1B4();
  v14 = (void *)sub_22758CA74();
  v15 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

  sub_22733CF3C();
  if ((v8 & 1) == 0)
LABEL_10:
    __asm { BR              X10 }
  return v15;
}

uint64_t sub_22733E678(uint64_t a1, double a2)
{
  uint64_t result;

  result = MEMORY[0x2276B3E34](a1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate);
  if (result)
  {
    sub_2273EAFD4(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_22733E87C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(unint64_t, _QWORD))
{
  uint64_t v5;
  void *v6;

  sub_22733F328(a4, a5);
  if (v5)
  {
    v6 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

uint64_t sub_22733E8C4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unsigned __int8 v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  _BYTE v17[280];
  _BYTE v18[288];

  v2 = v1;
  result = (uint64_t)sub_22733CF3C();
  if (a1)
  {
    result = sub_22730A874((unint64_t)objc_msgSend(a1, sel_tag));
    if (result != 4)
    {
      v5 = result;
      v6 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
      sub_227338344(v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v17);
      sub_227338344((uint64_t)v17, (uint64_t)v18);
      result = sub_22733F118((uint64_t)v18);
      if ((_DWORD)result != 1)
      {
        v7 = *(char **)(v6 + 104);
        swift_bridgeObjectRetain();
        if (objc_msgSend(a1, sel_isOn))
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_2273A489C(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
          v9 = *((_QWORD *)v7 + 2);
          v8 = *((_QWORD *)v7 + 3);
          if (v9 >= v8 >> 1)
            v7 = sub_2273A489C((char *)(v8 > 1), v9 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v9 + 1;
          v7[v9 + 32] = v5;
          sub_22733EACC((uint64_t)v7);
          return swift_bridgeObjectRelease();
        }
        else
        {
          v10 = *((_QWORD *)v7 + 2);
          if (v10)
          {
            v11 = (unsigned __int8 *)(v7 + 32);
            v12 = MEMORY[0x24BEE4AF8];
            do
            {
              v16 = *v11++;
              v15 = v16;
              if (v16 != v5)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  sub_227324650(0, *(_QWORD *)(v12 + 16) + 1, 1);
                v14 = *(_QWORD *)(v12 + 16);
                v13 = *(_QWORD *)(v12 + 24);
                if (v14 >= v13 >> 1)
                  sub_227324650(v13 > 1, v14 + 1, 1);
                *(_QWORD *)(v12 + 16) = v14 + 1;
                *(_BYTE *)(v12 + v14 + 32) = v15;
              }
              --v10;
            }
            while (v10);
          }
          else
          {
            v12 = MEMORY[0x24BEE4AF8];
          }
          swift_bridgeObjectRelease();
          sub_22733EACC(v12);
          return swift_release();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22733EACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[280];
  _BYTE v7[288];
  uint64_t v8;

  sub_22733CF3C();
  v8 = a1;
  swift_bridgeObjectRetain();
  sub_2274652BC(&v8);
  v3 = v8;
  v4 = v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
  sub_227338344(v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v6);
  sub_227338344((uint64_t)v6, (uint64_t)v7);
  if (sub_22733F118((uint64_t)v7) == 1
    || sub_2274492D0(v3, *(_QWORD *)(v4 + 104))
    || !MEMORY[0x2276B3E34](v1 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate))
  {
    return swift_release();
  }
  sub_2273EB8AC(v3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_22733EC18(char *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  uint64_t result;
  id v8;
  char *v9;

  result = MEMORY[0x2276B3E34](&a1[OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate]);
  if (result)
  {
    if (a3)
    {
      v8 = a3;
      v9 = a1;
      a4(objc_msgSend(v8, sel_isOn));

      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_22733ECA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  char v26;
  void *v27;
  id v28;
  void (*v29)(char *, uint64_t);
  void *v30;
  id v31;
  double v32;
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  id v37;
  void *v38;
  _BYTE v39[280];
  _BYTE v40[288];

  v2 = v1;
  v4 = sub_22758CA44();
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758CAD4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13, v14, v15, v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22733CF3C();
  v19 = (void *)sub_22758CA74();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v19, 1);

  v20 = (void *)sub_22758CA74();
  v37 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v20);

  if (!v37)
    return;
  v21 = sub_22758CA98();
  if (v21)
  {
    if (v21 != 1)
    {
LABEL_23:

      return;
    }
    v35 = 1;
  }
  else
  {
    v35 = 0;
  }
  v22 = sub_22758CAC8();
  if (v22 >= 5)
    goto LABEL_23;
  v23 = v22;
  v24 = v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity;
  sub_227338344(v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_activity, (uint64_t)v39);
  sub_227338344((uint64_t)v39, (uint64_t)v40);
  if (sub_22733F118((uint64_t)v40) != 1)
  {
    v25 = *(unsigned __int8 *)(v24 + 59);
    v26 = v35;
    if (v35 != v25 && (v23 & 0x1F) == 1)
    {
      v34 = v2 + OBJC_IVAR____TtC16MagnifierSupport54ActivityObjectUnderstandingCustomizationViewController_delegate;
      if (MEMORY[0x2276B3E34]())
      {
        sub_2273E9BF4(v26);
        swift_unknownObjectRelease();
      }
      MEMORY[0x2276B0A98](0, 1);
      v27 = (void *)sub_22758CA74();
      v28 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v27);

      if (v28)
      {
        objc_msgSend(v28, sel_setAccessoryType_, 0);

      }
      v29 = *(void (**)(char *, uint64_t))(v12 + 8);
      v29(v18, v11);
      MEMORY[0x2276B0A98](1, 1);
      v30 = (void *)sub_22758CA74();
      v31 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v30);

      if (v31)
      {
        objc_msgSend(v31, sel_setAccessoryType_, 0);

      }
      v29(v18, v11);
      objc_msgSend(v37, sel_setAccessoryType_, 3);
      if (MEMORY[0x2276B3E34](v34))
      {
        v32 = 2.0;
        if (v35)
          v32 = 6.0;
        sub_2273EAFD4(v32);
        swift_unknownObjectRelease();
      }
      objc_msgSend(a1, sel_beginUpdates);
      v38 = &unk_24EF98710;
      sub_22733F130();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D50B0);
      sub_22733F178();
      sub_22758EACC();
      v33 = (void *)sub_22758CA38();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v4);
      objc_msgSend(a1, sel_reloadSections_withRowAnimation_, v33, 100);

      objc_msgSend(a1, sel_endUpdates);
    }
  }

}

uint64_t sub_22733F118(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

unint64_t sub_22733F130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5E20;
  if (!qword_2558D5E20)
  {
    v1 = sub_22758CA44();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDCF468], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5E20);
  }
  return result;
}

unint64_t sub_22733F178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5E30;
  if (!qword_2558D5E30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2558D50B0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2558D5E30);
  }
  return result;
}

uint64_t *sub_22733F1C4(uint64_t *a1)
{
  sub_22733F244(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_22733F244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22733F328(unint64_t a1, uint64_t (*a2)(unint64_t, _QWORD))
{
  if (a1 > 4)
    return 0;
  else
    return a2(a1, a2);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_22733F368()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_22733F38C(double a1)
{
  uint64_t v1;

  return sub_22733E678(*(_QWORD *)(v1 + 16), a1);
}

UISceneConfiguration __swiftcall MagnifierApplicationDelegate.application(_:configurationForConnecting:options:)(UIApplication *_, UISceneSession configurationForConnecting, UISceneConnectionOptions options)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = -[objc_class role](configurationForConnecting.super.isa, sel_role, options.super.isa);
  v4 = objc_allocWithZone(MEMORY[0x24BEBD8E8]);
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v4, sel_initWithName_sessionRole_, v5, v3);

  return (UISceneConfiguration)v6;
}

uint64_t sub_22733F50C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D66A8);
  v0[6] = v1;
  v0[7] = *(_QWORD *)(v1 - 8);
  v0[8] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D66B0);
  v0[9] = v2;
  v0[10] = *(_QWORD *)(v2 - 8);
  v0[11] = swift_task_alloc();
  v0[12] = sub_22758E49C();
  v0[13] = sub_22758E490();
  v0[14] = sub_22758E460();
  v0[15] = v3;
  return swift_task_switch();
}

uint64_t sub_22733F5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[8];
  type metadata accessor for MAGThermalMonitor();
  static MAGThermalMonitor.thermalEvents()(v1);
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  sub_22758E4F0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v0[16] = sub_22758E490();
  v5 = (_QWORD *)swift_task_alloc();
  v0[17] = v5;
  *v5 = v0;
  v5[1] = sub_22733F864;
  return sub_22758E4FC();
}

uint64_t sub_22733F864()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22733F8B8()
{
  uint64_t v0;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if (*(unsigned __int8 *)(v0 + 148) >> 1 <= 0x7EuLL)
  {
    v2 = *(unsigned int *)(v0 + 144) | ((unint64_t)*(unsigned __int8 *)(v0 + 148) << 32);
    v3 = *(unsigned int *)(v0 + 144);
    if ((((unint64_t)*(unsigned __int8 *)(v0 + 148) << 32) & 0x8000000000) != 0)
    {
      if (qword_2558D4AB0 != -1)
        swift_once();
      v8 = sub_22758CF9C();
      __swift_project_value_buffer(v8, (uint64_t)qword_2558D6338);
      v9 = sub_22758CF84();
      v10 = sub_22758E6DC();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_QWORD *)(v0 + 40) = v12;
        *(_DWORD *)v11 = 136315138;
        if ((v2 & 0x100000000) != 0)
          __asm { BR              X9 }
        *(_QWORD *)(v0 + 16) = 0x206E776F6E6B6E55;
        *(_QWORD *)(v0 + 24) = 0xE900000000000028;
        *(_DWORD *)(v0 + 152) = v3;
        sub_22758EE2C();
        sub_22758E2B0();
        swift_bridgeObjectRelease();
        sub_22758E2B0();
        *(_QWORD *)(v11 + 4) = sub_22733611C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t *)(v0 + 40));
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2272F4000, v9, v10, "Thermal pressure: %s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2276B3D50](v12, -1, -1);
        MEMORY[0x2276B3D50](v11, -1, -1);
      }

    }
    else
    {
      if (qword_2558D4AB0 != -1)
        swift_once();
      v4 = sub_22758CF9C();
      __swift_project_value_buffer(v4, (uint64_t)qword_2558D6338);
      v5 = sub_22758CF84();
      v6 = sub_22758E6DC();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = swift_slowAlloc();
        *(_DWORD *)v7 = 67109120;
        *(_DWORD *)(v7 + 4) = v3;
        _os_log_impl(&dword_2272F4000, v5, v6, "Thermal level: %d", (uint8_t *)v7, 8u);
        MEMORY[0x2276B3D50](v7, -1, -1);
      }

    }
    *(_QWORD *)(v0 + 128) = sub_22758E490();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    *v13 = v0;
    v13[1] = sub_22733F864;
    return sub_22758E4FC();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

UIInterfaceOrientationMask __swiftcall MagnifierApplicationDelegate.application(_:supportedInterfaceOrientationsFor:)(UIApplication *_, UIWindow_optional *supportedInterfaceOrientationsFor)
{
  if (qword_2558D4BA8 != -1)
    swift_once();
  if (byte_2558DAEE1)
    return 2;
  else
    return 30;
}

id MagnifierApplicationDelegate.rootViewForSimplifiedApplication.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_2558D4BC8 != -1)
    swift_once();
  v2 = (void *)qword_2558DCE20;
  *a1 = qword_2558DCE20;
  return v2;
}

id MagnifierApplicationDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MagnifierApplicationDelegate.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MagnifierApplicationDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_22733FEFC@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_2558D4BC8 != -1)
    swift_once();
  v2 = (void *)qword_2558DCE20;
  *a1 = qword_2558DCE20;
  return v2;
}

uint64_t _s16MagnifierSupport0A19ApplicationDelegateC11application_29didFinishLaunchingWithOptionsSbSo13UIApplicationC_SDySo0k6LaunchJ3KeyaypGSgtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v0, v1, v2, v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v8 = objc_msgSend(v7, sel_arguments);

  v9 = (_QWORD *)sub_22758E3DC();
  LOBYTE(v8) = sub_227367680(0xD000000000000017, 0x80000002275AFAD0, v9);
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    objc_msgSend((id)objc_opt_self(), sel_setAnimationsEnabled_, 0);
  sub_2273401E4();
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_appearance);
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v10, sel_setTintColor_, v11);

  v12 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_22758E49C();
  v13 = sub_22758E490();
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v15;
  sub_227367B10((uint64_t)v6, (uint64_t)&unk_2558D66A0, v14);
  swift_release();
  return 1;
}

uint64_t sub_227340124()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for MagnifierApplicationDelegate()
{
  return objc_opt_self();
}

unint64_t sub_227340158()
{
  unint64_t result;

  result = qword_2558D6688;
  if (!qword_2558D6688)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for ClarityUIRootView, &type metadata for ClarityUIRootView);
    atomic_store(result, (unint64_t *)&qword_2558D6688);
  }
  return result;
}

unint64_t sub_22734019C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D5350;
  if (!qword_2558D5350)
  {
    type metadata accessor for LaunchOptionsKey(255);
    result = MEMORY[0x2276B3C78](&unk_2275960F0, v1);
    atomic_store(result, (unint64_t *)&qword_2558D5350);
  }
  return result;
}

unint64_t sub_2273401E4()
{
  unint64_t result;

  result = qword_2540B9E70;
  if (!qword_2540B9E70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540B9E70);
  }
  return result;
}

uint64_t sub_227340220()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227340244()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227319F84;
  return sub_22733F50C();
}

uint64_t sub_2273402A8(uint64_t a1)
{
  return sub_2273403CC(a1, qword_2558D66B8);
}

uint64_t static Signpost.appEvents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227340338(&qword_2558D4AC8, (uint64_t)qword_2558D66B8, a1);
}

uint64_t sub_2273402F0(uint64_t a1)
{
  return sub_2273403CC(a1, qword_2558D66D0);
}

uint64_t static Signpost.detectors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227340338(&qword_2558D4AD0, (uint64_t)qword_2558D66D0, a1);
}

uint64_t sub_227340338@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_22758CF3C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_2273403A0(uint64_t a1)
{
  return sub_2273403CC(a1, qword_2558D66E8);
}

uint64_t sub_2273403CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_22758CF3C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_22758CF30();
}

uint64_t static Signpost.pointAndSpeak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227340338(&qword_2558D4AD8, (uint64_t)qword_2558D66E8, a1);
}

const char *static StaticString.MAGSceneBecameActive.getter()
{
  return "SceneBecameActive";
}

const char *static StaticString.MAGWillConnectSceneToSession.getter()
{
  return "SceneConnect";
}

const char *static StaticString.MAGSceneWillEnterForeground.getter()
{
  return "SceneEnterFG";
}

const char *static StaticString.MAGSceneOpenURLContexts.getter()
{
  return "SceneHandleURL";
}

const char *static StaticString.MAGSceneLaunchDetectionMode.getter()
{
  return "SceneLaunchDetectMode";
}

const char *static StaticString.MAGSceneLaunchActionButton.getter()
{
  return "SceneLaunchFromActionBtn";
}

const char *static StaticString.MAGStartARKitSession.getter()
{
  return "StartARKit";
}

const char *static StaticString.MAGStopARKitSession.getter()
{
  return "StopARKit";
}

const char *static StaticString.MAGARKitSessionInterrupted.getter()
{
  return "ARKitInterrupt";
}

const char *static StaticString.MAGARKitSessionInterruptFinished.getter()
{
  return "ARKitInterruptFinished";
}

const char *static StaticString.MAGStartObjectUnderstandingService.getter()
{
  return "StartObjUndrerstandService";
}

const char *static StaticString.MAGStopObjectUnderstandingService.getter()
{
  return "StopObjUndrerstandService";
}

const char *static StaticString.MAGDetectText.getter()
{
  return "DetectText";
}

const char *static StaticString.MAGDetectImageCaption.getter()
{
  return "ImageCaption";
}

const char *static StaticString.MAGHandPose.getter()
{
  return "HandPose";
}

const char *static StaticString.MAGAXTagLanguage.getter()
{
  return "AXTagLanguage";
}

const char *static StaticString.MAGCRTagLanguage.getter()
{
  return "CRTagLanguage";
}

ValueMetadata *type metadata accessor for Signpost()
{
  return &type metadata for Signpost;
}

uint64_t destroy for MFReaderBottomBar(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  v7 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MFReaderBottomBar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderBottomBar(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderBottomBar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderBottomBar()
{
  return &type metadata for MFReaderBottomBar;
}

uint64_t sub_227340838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_227340848@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _BYTE *v61;
  _BYTE *v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _BYTE v77[12];
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  char v100;
  unsigned __int8 v101;
  unsigned __int8 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  char v112;
  _QWORD v113[6];
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;

  v83 = a1;
  v84 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6708);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = &v77[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6710);
  MEMORY[0x24BDAC7A8](v85, v10, v11, v12, v13);
  v15 = &v77[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6718);
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  v22 = &v77[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6720);
  v27 = MEMORY[0x24BDAC7A8](v86, v23, v24, v25, v26);
  v29 = &v77[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27, v30, v31, v32, v33);
  v87 = &v77[-v34];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6728);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_227596570;
  v99 = *a1;
  swift_retain();
  sub_22743A5C0();
  sub_227335520((uint64_t)&v99);
  v36 = sub_22758DCB0();
  swift_release();
  *(_QWORD *)(v35 + 32) = v36;
  swift_retain();
  sub_22743A5C0();
  sub_227335520((uint64_t)&v99);
  v37 = sub_22758DCB0();
  swift_release();
  *(_QWORD *)(v35 + 40) = v37;
  swift_retain();
  sub_22743A5C0();
  v39 = v38;
  sub_227335520((uint64_t)&v99);
  *(_QWORD *)(v35 + 48) = v39;
  v113[0] = v35;
  sub_22758E3F4();
  v40 = v113[0];
  sub_22758DEE4();
  sub_22758DEF0();
  MEMORY[0x2276B1E48](v40);
  sub_22758D440();
  v41 = v88;
  v42 = v89;
  v43 = v90;
  v44 = v91;
  v45 = v92;
  sub_22758DE9C();
  sub_22758D3C8();
  LOBYTE(v40) = v94;
  v81 = v95;
  v82 = v93;
  LOBYTE(v35) = v96;
  v79 = v98;
  v80 = v97;
  v78 = sub_22758D998();
  sub_22758D2E4();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v102 = v40;
  v101 = v35;
  v100 = 0;
  *(_QWORD *)v9 = sub_22758D6C8();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6730);
  sub_227340DD0(v83, (uint64_t)&v9[*(int *)(v54 + 44)]);
  LOBYTE(v40) = sub_22758D998();
  sub_22731A11C((uint64_t)v9, (uint64_t)v15, &qword_2558D6708);
  v55 = &v15[*(int *)(v85 + 36)];
  *v55 = v40;
  *(_OWORD *)(v55 + 8) = 0u;
  *(_OWORD *)(v55 + 24) = 0u;
  v55[40] = 1;
  sub_22731A1A4((uint64_t)v9, &qword_2558D6708);
  v56 = sub_22758DE9C();
  sub_2274D4064(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v56, v57);
  sub_22731A1A4((uint64_t)v15, &qword_2558D6710);
  swift_retain();
  sub_22743A5C0();
  v59 = v58;
  sub_227335520((uint64_t)&v99);
  v60 = sub_22758D998();
  sub_22731A11C((uint64_t)v22, (uint64_t)v29, &qword_2558D6718);
  v61 = &v29[*(int *)(v86 + 36)];
  *(_QWORD *)v61 = v59;
  v61[8] = v60;
  sub_22731A1A4((uint64_t)v22, &qword_2558D6718);
  v62 = v87;
  sub_22731A160((uint64_t)v29, (uint64_t)v87, &qword_2558D6720);
  LOBYTE(v37) = v102;
  LODWORD(v85) = v102;
  v63 = v101;
  LODWORD(v86) = v101;
  LOBYTE(v59) = v100;
  sub_22731A11C((uint64_t)v62, (uint64_t)v29, &qword_2558D6720);
  v64 = v41;
  *(_QWORD *)&v103 = v41;
  *((_QWORD *)&v103 + 1) = v42;
  *(_QWORD *)&v104 = v43;
  *((_QWORD *)&v104 + 1) = v44;
  *(_QWORD *)&v105 = v45;
  v65 = v81;
  v66 = v82;
  *((_QWORD *)&v105 + 1) = v82;
  LOBYTE(v106) = v37;
  *((_QWORD *)&v106 + 1) = v81;
  LOBYTE(v107) = v63;
  v67 = v79;
  v68 = v80;
  *((_QWORD *)&v107 + 1) = v80;
  *(_QWORD *)&v108 = v79;
  *((_QWORD *)&v108 + 1) = 0x4034000000000000;
  LOBYTE(v109) = 0;
  LOBYTE(v37) = v78;
  BYTE8(v109) = v78;
  *(_QWORD *)&v110 = v47;
  *((_QWORD *)&v110 + 1) = v49;
  *(_QWORD *)&v111 = v51;
  *((_QWORD *)&v111 + 1) = v53;
  v112 = v59;
  v69 = (_OWORD *)v84;
  *(_BYTE *)(v84 + 144) = v59;
  v70 = v108;
  v69[4] = v107;
  v69[5] = v70;
  v71 = v106;
  v69[2] = v105;
  v69[3] = v71;
  v72 = v111;
  v73 = v109;
  v69[7] = v110;
  v69[8] = v72;
  v69[6] = v73;
  v74 = v104;
  *v69 = v103;
  v69[1] = v74;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6738);
  sub_22731A11C((uint64_t)v29, (uint64_t)v69 + *(int *)(v75 + 48), &qword_2558D6720);
  sub_227341A70((uint64_t)&v103);
  sub_22731A1A4((uint64_t)v87, &qword_2558D6720);
  sub_22731A1A4((uint64_t)v29, &qword_2558D6720);
  v113[0] = v64;
  v113[1] = v42;
  v113[2] = v43;
  v113[3] = v44;
  v113[4] = v45;
  v113[5] = v66;
  v114 = v85;
  v115 = v65;
  v116 = v86;
  v117 = v68;
  v118 = v67;
  v119 = 0x4034000000000000;
  v120 = 0;
  v121 = v37;
  v122 = v47;
  v123 = v49;
  v124 = v51;
  v125 = v53;
  v126 = v59;
  return sub_227341A98((uint64_t)v113);
}

uint64_t sub_227340DD0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  BOOL v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  void *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t result;
  uint64_t v120;
  char *v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _OWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t KeyPath;
  id v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  uint64_t v173;
  char *v174;
  _DWORD v175[2];
  _DWORD v176[2];
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  _OWORD v183[2];
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  _BYTE v192[7];
  uint64_t v193;
  uint64_t v194;
  char v195;
  _BYTE v196[7];
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  unsigned __int8 v202;
  _BYTE v203[7];
  _BYTE v204[7];
  unsigned __int8 v205;
  __int128 v206;
  _OWORD v207[2];

  v137 = type metadata accessor for MFReaderTextFormatterView();
  MEMORY[0x24BDAC7A8](v137, v4, v5, v6, v7);
  v127 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6740);
  MEMORY[0x24BDAC7A8](v139, v9, v10, v11, v12);
  v142 = (uint64_t)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6748);
  v18 = MEMORY[0x24BDAC7A8](v141, v14, v15, v16, v17);
  v173 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20, v21, v22, v23);
  v157 = (uint64_t)&v121 - v24;
  v25 = a1[1];
  v206 = *a1;
  v207[0] = v25;
  v26 = (char *)*((_QWORD *)&v25 + 1);
  v27 = *((_QWORD *)&v206 + 1);
  KeyPath = swift_getKeyPath();
  sub_227341B0C((uint64_t)v207);
  sub_227341B0C((uint64_t)&v206);
  v28 = type metadata accessor for MFReaderSpeechFormatterModel(0);
  v29 = sub_2273096F0(&qword_2558D6750, type metadata accessor for MFReaderSpeechFormatterModel, (uint64_t)&unk_22759F010);
  v174 = v26;
  v30 = v28;
  v31 = v29;
  v32 = sub_22758D44C();
  v163 = v33;
  v164 = v32;
  v34 = (void *)type metadata accessor for MFReaderTextFormatterModel(0);
  v35 = (void *)sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  v36 = sub_22758D44C();
  v161 = v37;
  v162 = v36;
  type metadata accessor for MFReaderBlockManager();
  sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
  v38 = sub_22758D584();
  v158 = v39;
  v159 = v38;
  v132 = a1;
  v40 = (void *)*((_QWORD *)a1 + 4);
  if (v40)
  {
    v160 = *((_QWORD *)a1 + 4);
    v172 = v40;
    v156 = sub_22758D134();
    v155 = sub_22758D9BC();
    sub_22758D2E4();
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v205 = 0;
    v202 = 0;
    LOBYTE(v177) = 0;
    sub_227341B0C((uint64_t)v207);
    sub_227341B0C((uint64_t)&v206);
    sub_22758DD34();
    v136 = v184;
    v154 = v185;
    v135 = sub_22758D44C();
    v153 = v49;
    v169 = v27;
    v166 = v35;
    v167 = v34;
    v134 = sub_22758D44C();
    v152 = v50;
    v140 = sub_22758D584();
    v133 = v51;
    swift_getKeyPath();
    swift_getKeyPath();
    v52 = v31;
    v168 = v30;
    v53 = v172;
    sub_22758D194();

    swift_release();
    swift_release();
    v54 = v184 < 1;
    v151 = swift_getKeyPath();
    v149 = swift_allocObject();
    *(_BYTE *)(v149 + 16) = v54;
    v55 = v53;
    v138 = sub_22758D134();
    sub_227341B0C((uint64_t)v207);
    sub_227341B0C((uint64_t)&v206);
    v130 = sub_22758D44C();
    v150 = v56;
    v129 = sub_22758D44C();
    v148 = v57;
    v146 = (id)sub_22758D584();
    v128 = v58;
    v145 = v55;
    v147 = sub_22758D134();
    LOBYTE(v177) = 1;
    sub_227341B0C((uint64_t)v207);
    sub_227341B0C((uint64_t)&v206);
    sub_22758DD34();
    v126 = v184;
    v172 = v185;
    v131 = v52;
    v125 = sub_22758D44C();
    v171 = v59;
    v124 = sub_22758D44C();
    v170 = v60;
    v61 = sub_22758D584();
    v123 = v62;
    swift_getKeyPath();
    swift_getKeyPath();
    v63 = (char *)v145;
    sub_22758D194();

    swift_release();
    swift_release();
    v64 = v184;
    v65 = &v63[OBJC_IVAR____TtC16MagnifierSupport20MFReaderBlockManager_blocks];
    swift_beginAccess();
    if (*(_QWORD *)v65 >> 62)
    {
      swift_bridgeObjectRetain();
      v120 = sub_22758ECE8();
      swift_bridgeObjectRelease();
      v67 = v120 - 1;
      if (!__OFSUB__(v120, 1))
        goto LABEL_4;
    }
    else
    {
      v66 = *(_QWORD *)((*(_QWORD *)v65 & 0xFFFFFFFFFFFFF8) + 0x10);
      v67 = v66 - 1;
      if (!__OFSUB__(v66, 1))
      {
LABEL_4:
        v122 = (_BYTE *)(a2 + 256);
        v68 = v64 >= v67;
        v145 = (id)swift_getKeyPath();
        v144 = swift_allocObject();
        *(_BYTE *)(v144 + 16) = v68;
        v121 = v63;
        v143 = sub_22758D134();
        v177 = v132[3];
        sub_227341B0C((uint64_t)v207);
        sub_227341B0C((uint64_t)&v206);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
        sub_22758DD58();
        v69 = v184;
        v70 = v185;
        v71 = v186;
        v72 = swift_getKeyPath();
        v73 = v137;
        v74 = *(int *)(v137 + 32);
        v132 = (_OWORD *)v61;
        v75 = (uint64_t)v127;
        *(_QWORD *)&v127[v74] = v72;
        __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)v75 = sub_22758D44C();
        *(_QWORD *)(v75 + 8) = v76;
        *(_QWORD *)(v75 + 16) = sub_22758D44C();
        *(_QWORD *)(v75 + 24) = v77;
        *(_QWORD *)(v75 + 32) = v69;
        *(_QWORD *)(v75 + 40) = v70;
        *(_BYTE *)(v75 + 48) = v71;
        *(_QWORD *)(v75 + 56) = sub_22758D584();
        *(_QWORD *)(v75 + 64) = v78;
        v79 = v75 + *(int *)(v73 + 36);
        LOBYTE(v177) = 0;
        sub_22758DD34();
        v80 = v185;
        *(_BYTE *)v79 = v184;
        *(_QWORD *)(v79 + 8) = v80;
        v81 = v75 + *(int *)(v73 + 40);
        LOBYTE(v177) = 0;
        sub_22758DD34();
        v82 = v185;
        *(_BYTE *)v81 = v184;
        *(_QWORD *)(v81 + 8) = v82;
        v174 = v121;
        v83 = sub_22758D134();
        v84 = v142;
        sub_227341B74(v75, v142);
        v85 = (uint64_t *)(v84 + *(int *)(v139 + 36));
        v86 = v160;
        *v85 = v83;
        v85[1] = v86;
        sub_227341BB8(v75);
        LOBYTE(v83) = sub_22758D9D4();
        sub_22758D2E4();
        v88 = v87;
        v90 = v89;
        v92 = v91;
        v94 = v93;
        v95 = v173;
        sub_22731A11C(v84, v173, &qword_2558D6740);
        v96 = v95 + *(int *)(v141 + 36);
        *(_BYTE *)v96 = v83;
        *(_QWORD *)(v96 + 8) = v88;
        *(_QWORD *)(v96 + 16) = v90;
        *(_QWORD *)(v96 + 24) = v92;
        *(_QWORD *)(v96 + 32) = v94;
        *(_BYTE *)(v96 + 40) = 0;
        sub_22731A1A4(v84, &qword_2558D6740);
        v97 = v157;
        sub_22731A160(v95, v157, &qword_2558D6748);
        LOBYTE(v84) = v205;
        LODWORD(v168) = v205;
        v176[0] = *(_DWORD *)v204;
        *(_DWORD *)((char *)v176 + 3) = *(_DWORD *)&v204[3];
        v175[0] = *(_DWORD *)v203;
        *(_DWORD *)((char *)v175 + 3) = *(_DWORD *)&v203[3];
        LOBYTE(v83) = v202;
        LODWORD(v169) = v202;
        sub_22731A11C(v97, v95, &qword_2558D6748);
        HIDWORD(v180) = *(_DWORD *)&v204[3];
        *(_DWORD *)((char *)&v180 + 9) = *(_DWORD *)v204;
        DWORD1(v182) = *(_DWORD *)&v203[3];
        *(_DWORD *)((char *)&v182 + 1) = *(_DWORD *)v203;
        v98 = v122;
        *v122 = 1;
        v98[80] = 1;
        v98[200] = 1;
        *(_BYTE *)(a2 + 136) = 1;
        *(_BYTE *)(a2 + 144) = v136;
        *(_QWORD *)(a2 + 160) = v135;
        *(_QWORD *)(a2 + 176) = v134;
        *(_QWORD *)(a2 + 200) = v133;
        *(_QWORD *)(a2 + 216) = sub_227341B54;
        *(_QWORD *)(a2 + 264) = v130;
        *(_QWORD *)(a2 + 280) = v129;
        v99 = v128;
        *(_BYTE *)(a2 + 344) = v126;
        v100 = v125;
        v101 = v124;
        *(_QWORD *)(a2 + 400) = v123;
        *(_QWORD *)(a2 + 416) = sub_227341D4C;
        *(_QWORD *)(a2 + 152) = v154;
        *(_QWORD *)(a2 + 168) = v153;
        *(_QWORD *)(a2 + 296) = v146;
        *(_QWORD *)(a2 + 304) = v99;
        *(_QWORD *)(a2 + 352) = v172;
        *(_QWORD *)(a2 + 360) = v100;
        *(_QWORD *)(a2 + 368) = v171;
        *(_QWORD *)(a2 + 376) = v101;
        *(_QWORD *)&v177 = v164;
        *((_QWORD *)&v177 + 1) = v163;
        *(_QWORD *)&v178 = v162;
        *((_QWORD *)&v178 + 1) = v161;
        *(_QWORD *)&v179 = v159;
        *((_QWORD *)&v179 + 1) = v158;
        *(_QWORD *)&v180 = KeyPath;
        BYTE8(v180) = v84;
        *(_QWORD *)&v181 = v156;
        *((_QWORD *)&v181 + 1) = v86;
        LOBYTE(v182) = v155;
        *((_QWORD *)&v182 + 1) = v42;
        *(_QWORD *)&v183[0] = v44;
        *((_QWORD *)&v183[0] + 1) = v46;
        *(_QWORD *)&v183[1] = v48;
        BYTE8(v183[1]) = v83;
        v102 = v177;
        v103 = v178;
        v104 = v180;
        *(_OWORD *)(a2 + 32) = v179;
        *(_OWORD *)(a2 + 48) = v104;
        *(_OWORD *)a2 = v102;
        *(_OWORD *)(a2 + 16) = v103;
        v105 = v181;
        v106 = v182;
        v107 = v183[0];
        *(_OWORD *)(a2 + 105) = *(_OWORD *)((char *)v183 + 9);
        *(_OWORD *)(a2 + 80) = v106;
        *(_OWORD *)(a2 + 96) = v107;
        *(_OWORD *)(a2 + 64) = v105;
        *(_QWORD *)(a2 + 128) = 0;
        v108 = v151;
        v109 = (void *)v140;
        *(_QWORD *)(a2 + 184) = v152;
        *(_QWORD *)(a2 + 192) = v109;
        *(_QWORD *)(a2 + 208) = v108;
        v110 = v150;
        v111 = v138;
        *(_QWORD *)(a2 + 224) = v149;
        *(_QWORD *)(a2 + 232) = v111;
        *(_QWORD *)(a2 + 240) = v86;
        *(_QWORD *)(a2 + 248) = 0;
        *(_QWORD *)(a2 + 272) = v110;
        *(_QWORD *)(a2 + 288) = v148;
        *(_QWORD *)(a2 + 312) = v147;
        *(_QWORD *)(a2 + 320) = v86;
        *(_QWORD *)(a2 + 328) = 0;
        v112 = v132;
        *(_QWORD *)(a2 + 384) = v170;
        *(_QWORD *)(a2 + 392) = v112;
        v113 = v144;
        *(_QWORD *)(a2 + 408) = v145;
        v114 = v143;
        *(_QWORD *)(a2 + 424) = v113;
        *(_QWORD *)(a2 + 432) = v114;
        *(_QWORD *)(a2 + 440) = v86;
        *(_QWORD *)(a2 + 448) = 0;
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6768);
        sub_22731A11C(v173, a2 + *(int *)(v115 + 160), &qword_2558D6748);
        sub_227341BF4((uint64_t)&v177);
        v167 = v112;
        swift_retain();
        swift_retain();
        swift_retain();
        v116 = v174;
        swift_retain();
        swift_retain();
        swift_retain();
        v174 = v109;
        swift_retain();
        swift_retain();
        swift_retain();
        v117 = v116;
        swift_retain();
        swift_retain();
        v166 = v146;
        swift_retain();
        v118 = v117;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_22731A1A4(v157, &qword_2558D6748);
        sub_22731A1A4(v173, &qword_2558D6748);
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        v184 = v164;
        v185 = v163;
        v186 = v162;
        v187 = v161;
        v188 = v159;
        v189 = v158;
        v190 = KeyPath;
        v191 = v168;
        *(_DWORD *)v192 = v176[0];
        *(_DWORD *)&v192[3] = *(_DWORD *)((char *)v176 + 3);
        v193 = v156;
        v194 = v160;
        v195 = v155;
        *(_DWORD *)v196 = v175[0];
        *(_DWORD *)&v196[3] = *(_DWORD *)((char *)v175 + 3);
        v197 = v42;
        v198 = v44;
        v199 = v46;
        v200 = v48;
        v201 = v169;
        return sub_227341C78((uint64_t)&v184);
      }
    }
    __break(1u);
  }
  result = sub_22758D578();
  __break(1u);
  return result;
}

uint64_t sub_227341A10@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v7[4];

  v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  *(_QWORD *)a1 = sub_22758D74C();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6700);
  return sub_227340848(v7, a1 + *(int *)(v5 + 44));
}

uint64_t sub_227341A70(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_227341A98(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227341AC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22758D5CC();
  *a1 = v3;
  return result;
}

uint64_t sub_227341AE8()
{
  return sub_22758D5D8();
}

uint64_t sub_227341B0C(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_227341B44()
{
  return swift_deallocObject();
}

_BYTE *sub_227341B54(_BYTE *a1)
{
  uint64_t v1;

  return sub_22750F1B8(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_227341B5C()
{
  return swift_deallocObject();
}

uint64_t sub_227341B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MFReaderTextFormatterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227341BB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MFReaderTextFormatterView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227341BF4(uint64_t a1)
{
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(void **)(a1 + 72);
  v5 = *(id *)(a1 + 32);
  swift_retain();
  swift_retain();
  sub_227341C6C(v2, v3);
  v6 = v4;
  swift_retain();
  return a1;
}

uint64_t sub_227341C6C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_227341C78(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  void *v5;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  v5 = *(void **)(a1 + 72);
  swift_release();
  swift_release();

  sub_227341CF0(v3, v4);
  swift_release();

  return a1;
}

uint64_t sub_227341CF0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_227341D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D6770;
  if (!qword_2558D6770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2558D6778);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_2558D6770);
  }
  return result;
}

uint64_t sub_227341D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  char v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v34[0] = sub_22758DF20();
  v2 = *(_QWORD *)(v34[0] - 8);
  MEMORY[0x24BDAC7A8](v34[0], v3, v4, v5, v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_22758E1B4();
  v12 = (void *)sub_22758E1B4();
  v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

  v14 = sub_22758E1E4();
  v16 = v15;

  v36 = v14;
  v37 = v16;
  sub_22731236C();
  v17 = sub_22758EA6C();
  v19 = v18;
  v20 = sub_2274E51C0();
  v21 = sub_2274E4250();
  v22 = sub_22756FD90();

  sub_2274E2410(v17, v19, v20, v22);
  swift_bridgeObjectRelease();

  v23 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  UIAccessibilitySpeakAndDoNotBeInterrupted();

  v24 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (v24)
  {
    v25 = objc_msgSend(v24, sel_scene);
    if (v25)
    {
      v26 = v25;
      sub_227368B60(v25);

    }
  }
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v36 == 1)
    sub_227419510();
  v27 = qword_2540BCDD8 + 64;
  swift_beginAccess();
  v35 = 1;
  if (qword_2540B9100 != -1)
    swift_once();
  v28 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v28, v29, v30, v31, v32);
  v34[-2] = &v35;
  v34[-1] = v27;
  sub_22758E7A8();
  (*(void (**)(char *, _QWORD))(v2 + 8))(v8, v34[0]);
  return swift_endAccess();
}

id sub_2273420C0()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id result;
  void *v9;
  double v10;
  double v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  _QWORD v28[2];

  v0 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v0, v1, v2, v3, v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2274E4250();
  result = objc_msgSend(v7, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_alpha);
    v11 = v10;

    if (v11 == 0.0)
    {
      type metadata accessor for MAGUtilities();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v14 = (void *)sub_22758E1B4();
      v15 = (void *)sub_22758E1B4();
      v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

      v17 = sub_22758E1E4();
      v19 = v18;

      v28[0] = v17;
      v28[1] = v19;
      sub_22731236C();
      v20 = sub_22758EA6C();
      v22 = v21;
      v23 = sub_2274E51C0();
      v24 = sub_2274E4250();
      v25 = sub_22756FD90();

      sub_2274E2410(v20, v22, v23, v25);
      swift_bridgeObjectRelease();

      v26 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      UIAccessibilitySpeakAndDoNotBeInterrupted();

    }
    v27 = &v6[v0[5]];
    type metadata accessor for MAGOutputEvent.EventType(0);
    *(_OWORD *)v27 = 0u;
    *((_OWORD *)v27 + 1) = 0u;
    *((_OWORD *)v27 + 2) = 0u;
    *((_OWORD *)v27 + 3) = 0u;
    *((_OWORD *)v27 + 4) = 0u;
    *((_OWORD *)v27 + 5) = 0u;
    *((_QWORD *)v27 + 12) = 0;
    swift_storeEnumTagMultiPayload();
    sub_22758C978();
    v6[v0[6]] = 1;
    v6[v0[7]] = 0;
    sub_2273C9264((uint64_t)v6);
    sub_227343994((uint64_t)v6);
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (LOBYTE(v28[0]) == 1)
      sub_227419510();
    return (id)sub_2273691FC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2273423F8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  *(_QWORD *)&v9 = MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8).n128_u64[0];
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(char **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService);
  v13 = *(void **)&v12[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  if (v13)
    objc_msgSend(v13, sel_updateWithFrame_, a2, v9);
  v14 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = objc_msgSend(a2, sel_camera);
  objc_msgSend(v15, sel_transform);
  v29 = v17;
  v30 = v16;
  v27 = v19;
  v28 = v18;

  sub_22758E49C();
  v20 = v12;
  v21 = sub_22758E490();
  v22 = swift_allocObject();
  v23 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v23;
  *(_QWORD *)(v22 + 32) = v20;
  v24 = v29;
  *(_OWORD *)(v22 + 48) = v30;
  *(_OWORD *)(v22 + 64) = v24;
  v25 = v27;
  *(_OWORD *)(v22 + 80) = v28;
  *(_OWORD *)(v22 + 96) = v25;
  sub_227367B10((uint64_t)v11, (uint64_t)&unk_2558D6798, v22);
  return swift_release();
}

uint64_t sub_227342558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch();
}

uint64_t sub_227342570()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_22758E49C();
  *(_QWORD *)(v0 + 104) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_2273425DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectedObjectView);
  *(_QWORD *)(v0 + 112) = v2;
  v3 = v2;
  return swift_task_switch();
}

uint64_t sub_227342634()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 112))
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService;
  *(_QWORD *)(v0 + 128) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_2273426C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v2 = v0[11];
  swift_release();
  v0[17] = *(_QWORD *)(v2 + v1);
  return swift_task_switch();
}

uint64_t sub_227342708()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(*(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v1
    && (v2 = objc_msgSend(*v1, sel_currentFrame), (*(_QWORD *)(v0 + 144) = v2) != 0))
  {
    *(_QWORD *)(v0 + 152) = sub_22758E490();
    sub_22758E460();
    return swift_task_switch();
  }
  else
  {

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2273427D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  *(_QWORD *)(v0 + 160) = v2;
  v3 = v2;
  return swift_task_switch();
}

uint64_t sub_227342828()
{
  uint64_t v0;
  void *v2;

  if (*(_QWORD *)(v0 + 160))
  {
    *(_QWORD *)(v0 + 168) = sub_22758E490();
    sub_22758E460();
    return swift_task_switch();
  }
  else
  {
    v2 = *(void **)(v0 + 112);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2273428B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_release();
  *(_QWORD *)(v0 + 176) = objc_msgSend(v1, sel_pointOfView);

  return swift_task_switch();
}

uint64_t sub_227342910()
{
  uint64_t v0;
  void *v2;

  if (*(_QWORD *)(v0 + 176))
  {
    *(_QWORD *)(v0 + 184) = sub_22758E490();
    sub_22758E460();
    return swift_task_switch();
  }
  else
  {
    v2 = *(void **)(v0 + 112);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22734299C()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 176);
  swift_release();
  objc_msgSend(v1, sel_simdPosition);
  *(_DWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 16) = v3;

  return swift_task_switch();
}

uint64_t sub_2273429F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService;
  *(_QWORD *)(v0 + 200) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227342A68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[24];
  v2 = v0[11];
  swift_release();
  v0[26] = *(_QWORD *)(v2 + v1);
  return swift_task_switch();
}

uint64_t sub_227342AB0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  float32x4_t v3;
  float32x4_t v4;
  __int128 v5;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;

  v1 = *(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject;
  if (*(_QWORD *)v1)
  {
    v11 = *(float32x4_t *)(v1 + 16);
    v10 = *(float32x4_t *)(v1 + 32);
    v9 = *(float32x4_t *)(v1 + 48);
    v8 = *(float32x4_t *)(v1 + 64);
    v2 = *(id *)v1;
    objc_msgSend(v2, sel_transform);
    v7 = v3;

    v4 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v11, v7.f32[0]), v10, *(float32x2_t *)v7.f32, 1), v9, v7, 2), v8, v7, 3);
    *(float32x4_t *)(v0 + 32) = v4;
    v4.i32[3] = 0;
    *(float32x4_t *)(v0 + 48) = v4;
    *(_QWORD *)(v0 + 216) = sub_22758E490();
  }
  else
  {
    v5 = *(_OWORD *)(MEMORY[0x24BDBF070] + 16);
    *(_OWORD *)(v0 + 240) = *MEMORY[0x24BDBF070];
    *(_OWORD *)(v0 + 256) = v5;
    *(_QWORD *)(v0 + 272) = sub_22758E490();
  }
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227342C04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();
  *(_QWORD *)(v0 + 224) = objc_msgSend(v1, sel_view);
  return swift_task_switch();
}

void sub_227342C60()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 224))
  {
    *(_QWORD *)(v0 + 232) = sub_22758E490();
    sub_22758E460();
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_227342CCC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(void **)(v0 + 224);
  swift_release();
  v2 = objc_msgSend(v1, sel_window);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_windowScene);

    v5 = *(void **)(v0 + 224);
    if (v4)
    {
      v3 = objc_msgSend(v4, sel_interfaceOrientation);

      v5 = v4;
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v5 = *(void **)(v0 + 224);
  }
  *(_QWORD *)(v0 + 296) = v3;

  return swift_task_switch();
}

uint64_t sub_227342D8C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();
  *(_QWORD *)(v0 + 280) = objc_msgSend(v1, sel_view);
  return swift_task_switch();
}

void sub_227342DE8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 280))
  {
    *(_QWORD *)(v0 + 288) = sub_22758E490();
    sub_22758E460();
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_227342E54()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(void **)(v0 + 280);
  swift_release();
  v2 = objc_msgSend(v1, sel_window);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_windowScene);

    v5 = *(void **)(v0 + 280);
    if (v4)
    {
      v3 = objc_msgSend(v4, sel_interfaceOrientation);

      v5 = v4;
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v5 = *(void **)(v0 + 280);
  }
  *(_QWORD *)(v0 + 376) = v3;

  return swift_task_switch();
}

uint64_t sub_227342F14()
{
  uint64_t v0;
  void *v1;
  _BOOL4 IsLandscape;
  __CVBuffer *v3;
  __CVBuffer *v4;
  size_t Width;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __CVBuffer *v9;
  __CVBuffer *v10;
  size_t Height;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;

  v1 = *(void **)(v0 + 144);
  IsLandscape = UIInterfaceOrientationIsLandscape(*(_QWORD *)(v0 + 296));
  v3 = (__CVBuffer *)objc_msgSend(v1, sel_capturedImage);
  v4 = v3;
  if (IsLandscape)
    Width = CVPixelBufferGetWidth(v3);
  else
    Width = CVPixelBufferGetHeight(v3);
  v6 = Width;
  *(_QWORD *)(v0 + 304) = Width;
  v7 = *(_QWORD *)(v0 + 296);
  v8 = *(void **)(v0 + 144);

  LODWORD(v7) = UIInterfaceOrientationIsLandscape(v7);
  v9 = (__CVBuffer *)objc_msgSend(v8, sel_capturedImage);
  v10 = v9;
  if ((_DWORD)v7)
    Height = CVPixelBufferGetHeight(v9);
  else
    Height = CVPixelBufferGetWidth(v9);
  v12 = Height;
  *(_QWORD *)(v0 + 312) = Height;
  v13 = *(_QWORD *)(v0 + 296);
  v22 = *(_OWORD *)(v0 + 48);
  v14 = *(void **)(v0 + 144);

  v15 = (double)v6;
  v16 = objc_msgSend(v14, sel_camera);
  objc_msgSend(v16, sel_projectPoint_orientation_viewportSize_, v13, *(double *)&v22, v15, (double)v12);
  v18 = v17;
  v20 = v19;

  *(_QWORD *)(v0 + 320) = v18;
  *(_QWORD *)(v0 + 328) = v20;
  *(_QWORD *)(v0 + 336) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227343084()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_release();
  *(_QWORD *)(v0 + 344) = objc_msgSend(v1, sel_view);
  return swift_task_switch();
}

void sub_2273430E0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 344))
  {
    *(_QWORD *)(v0 + 352) = sub_22758E490();
    sub_22758E460();
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22734314C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(void **)(v0 + 344);
  swift_release();
  v2 = objc_msgSend(v1, sel_window);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_windowScene);

    v5 = *(void **)(v0 + 344);
    if (v4)
    {
      v3 = objc_msgSend(v4, sel_interfaceOrientation);

      v5 = v4;
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v5 = *(void **)(v0 + 344);
  }
  *(_QWORD *)(v0 + 360) = v3;

  return swift_task_switch();
}

void sub_22734320C()
{
  float32x4_t *v0;
  float32x4_t v1;
  float32x4_t v2;
  float v3;

  v1 = vsubq_f32(v0[1], v0[2]);
  v2 = vmulq_f32(v1, v1);
  v2.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0]);
  v0[24].i32[2] = v2.i32[0];
  v3 = v2.f32[0] * 1000.0;
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -2147500000.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 2147500000.0)
  {
    v0[23].i64[0] = sub_22758E490();
    sub_22758E460();
    swift_task_switch();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2273432D8()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(float *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(double *)(v0 + 320);
  v3 = *(double *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  swift_release();
  *(_BYTE *)(v0 + 396) = sub_2274C9E24(v2, (int)(float)(v1 * 1000.0), v3 / (double)v5, ((double)v6 - v4) / (double)v6, 0.001, 0.001) & 1;
  return swift_task_switch();
}

uint64_t sub_22734337C()
{
  uint64_t v0;
  NSObject *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint8_t *v7;

  if (*(_BYTE *)(v0 + 396) == 1)
  {
    v1 = *(NSObject **)(v0 + 144);
    v2 = *(void **)(v0 + 112);
  }
  else
  {
    if (qword_2558D4A60 != -1)
      swift_once();
    v3 = sub_22758CF9C();
    __swift_project_value_buffer(v3, (uint64_t)qword_2558D6248);
    v1 = sub_22758CF84();
    v4 = sub_22758E6C4();
    v5 = os_log_type_enabled(v1, v4);
    v6 = *(void **)(v0 + 144);
    v2 = *(void **)(v0 + 112);
    if (v5)
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_2272F4000, v1, v4, "Unable to update OU interface", v7, 2u);
      MEMORY[0x2276B3D50](v7, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227343488()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 384) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_2273434E8()
{
  double *v0;
  uint64_t v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;

  v1 = *((_QWORD *)v0 + 47);
  v3 = v0[32];
  v2 = v0[33];
  v5 = v0[30];
  v4 = v0[31];
  swift_release();
  sub_2274C9E24(v1, 0, v5, v4, v3, v2);
  return swift_task_switch();
}

uint64_t sub_22734355C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227343594(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_objectUnderstandingService);
  v4 = (id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService)
            + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v4)
  {
    v5 = objc_msgSend(*v4, sel_currentFrame);
    if (v5)
    {
      v6 = v5;
      v7 = *(void **)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
      if (v7)
      {
        v8 = v7;
        swift_bridgeObjectRetain();
        if (a2 >> 62)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D6800);
          sub_22758ECD0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_22758EE68();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D6800);
        v9 = (void *)sub_22758E3C4();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_updateWithKeyframes_ouframe_, v9, v6);

      }
    }
  }
}

id sub_2273436E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = (int *)type metadata accessor for MAGOutputEvent(0);
  *(_QWORD *)&v10 = MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9).n128_u64[0];
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (result)
  {
    v14 = *(void **)a1;
    v16 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v17 = *(_QWORD *)(a1 + 32);
    v32 = *(_QWORD *)(a1 + 40);
    v33 = v15;
    v19 = *(_QWORD *)(a1 + 48);
    v18 = *(_QWORD *)(a1 + 56);
    v20 = *(_QWORD *)(a1 + 64);
    v30 = *(_QWORD *)(a1 + 72);
    v31 = v18;
    result = objc_msgSend(result, sel_pointOfView, v10);
    if (result)
    {
      v21 = result;
      objc_msgSend(result, sel_simdPosition);
      v29 = v22;

      v23 = &v12[v5[5]];
      *(_QWORD *)v23 = v14;
      *((_QWORD *)v23 + 1) = 0;
      v24 = v33;
      *((_QWORD *)v23 + 2) = v16;
      *((_QWORD *)v23 + 3) = v24;
      v25 = v32;
      *((_QWORD *)v23 + 4) = v17;
      *((_QWORD *)v23 + 5) = v25;
      v26 = v31;
      *((_QWORD *)v23 + 6) = v19;
      *((_QWORD *)v23 + 7) = v26;
      v27 = v30;
      *((_QWORD *)v23 + 8) = v20;
      *((_QWORD *)v23 + 9) = v27;
      *((_OWORD *)v23 + 5) = v29;
      *((_QWORD *)v23 + 12) = a2;
      type metadata accessor for MAGOutputEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      v28 = v14;
      swift_bridgeObjectRetain();
      sub_22758C978();
      v12[v5[6]] = 1;
      v12[v5[7]] = 0;
      sub_2273C9264((uint64_t)v12);
      return (id)sub_227343994((uint64_t)v12);
    }
  }
  return result;
}

id sub_22734385C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  __int128 v15;
  char *v16;
  __int128 v17;

  v5 = (int *)type metadata accessor for MAGOutputEvent(0);
  *(_QWORD *)&v10 = MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9).n128_u64[0];
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (result)
  {
    result = objc_msgSend(result, sel_pointOfView, v10);
    if (result)
    {
      v14 = result;
      objc_msgSend(result, sel_simdPosition);
      v17 = v15;

      v16 = &v12[v5[5]];
      *(_QWORD *)v16 = a1;
      *((_OWORD *)v16 + 1) = v17;
      *((_QWORD *)v16 + 4) = a2;
      type metadata accessor for MAGOutputEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22758C978();
      v12[v5[6]] = 1;
      v12[v5[7]] = 0;
      sub_2273C9264((uint64_t)v12);
      return (id)sub_227343994((uint64_t)v12);
    }
  }
  return result;
}

uint64_t sub_227343994(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MAGOutputEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2273439D0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758DF20();
  v36 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22758DF68();
  v17 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v18, v19, v20, v21);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSessionQueue);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v1;
  *(_QWORD *)(v25 + 24) = a1;
  aBlock[4] = sub_227343C84;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_6;
  v26 = _Block_copy(aBlock);
  v27 = v24;
  v28 = v1;
  v29 = a1;
  sub_22758DF44();
  v37 = MEMORY[0x24BEE4AF8];
  sub_22730DE58();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v23, v16, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v10);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v35);
  swift_release();
  v30 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = v28;
  v32 = v28;
  sub_227367F50((uint64_t)v9, (uint64_t)&unk_2558D6790, (uint64_t)v31);
  swift_release();
  return sub_227343D30((uint64_t)v9);
}

uint64_t sub_227343C58()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227343C84()
{
  uint64_t v0;

  return sub_2273423F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_227343CA4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227343CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227319F84;
  v3[11] = v2;
  return swift_task_switch();
}

uint64_t sub_227343D30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227343D70()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227343D9C(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;

  v4 = v1[1].n128_i64[0];
  v5 = v1[1].n128_i64[1];
  v6 = v1[2].n128_u64[0];
  v11 = v1[4];
  v12 = v1[3];
  v9 = v1[6];
  v10 = v1[5];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_227369A70(v12, v11, v10, v9, a1, v4, v5, v6);
}

uint64_t sub_227343E30(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  _QWORD v25[2];
  _QWORD aBlock[6];

  v3 = sub_22758DF20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758DF68();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13, v14, v15, v16);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSessionQueue);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v1;
  *(_QWORD *)(v20 + 24) = a1;
  aBlock[4] = sub_22734403C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_16;
  v21 = _Block_copy(aBlock);
  v22 = v19;
  v23 = v1;
  swift_bridgeObjectRetain();
  sub_22758DF44();
  v25[1] = MEMORY[0x24BEE4AF8];
  sub_22730DE58();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v18, v10, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return swift_release();
}

uint64_t sub_227344010()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22734403C()
{
  uint64_t v0;

  sub_227343594(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_227344050()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  double (**v5)(_QWORD, _QWORD);
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  objc_msgSend(v1, sel_contentOffset);
  v3 = v2;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  v5 = *(double (***)(_QWORD, _QWORD))(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8);
  v6 = v5[3](v4, v5);
  sub_227344344();
  v8 = v7;
  v9 = v5[6](v4, v5);
  if (v8 <= v9)
    v8 = v9;
  v10 = v5[7](v4, v5);
  if (v10 >= v8)
    v10 = v8;
  v11 = v3 + (v6 + v10) * 0.5;
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_contentOffset);
  return v11;
}

uint64_t sub_22734414C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v1 = sub_22758DF20();
  v22 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2, v3, v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22758DF68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v16 = (void *)sub_22758E79C();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v0;
  aBlock[4] = sub_227349CF4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_50;
  v18 = _Block_copy(aBlock);
  v19 = v0;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22730DE58();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v15, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
}

void sub_227344344()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  if (!(*(_QWORD *)v1 >> 62))
  {
    v2 = *(_QWORD *)((*(_QWORD *)v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v3 = v2 - 1;
    if (!__OFSUB__(v2, 1))
      goto LABEL_3;
LABEL_11:
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
    sub_22758ECE8();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v5 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  v3 = v5 - 1;
  if (__OFSUB__(v5, 1))
    goto LABEL_11;
LABEL_3:
  if (v3 < 1)
    return;
  objc_msgSend(v0, sel_bounds);
  if (*(_QWORD *)v1 >> 62)
    goto LABEL_12;
LABEL_5:
  (*(void (**)(void))(*(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8] + 24))();
  v4 = *(_QWORD *)v1;
  if (!(v4 >> 62))
  {
    if (!__OFSUB__(*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10), 1))
      return;
LABEL_15:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v6 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v6, 1))
    goto LABEL_15;
}

double sub_2273444CC()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v14;

  objc_msgSend(v0, sel_bounds);
  v4 = (unint64_t *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  v5 = *v4;
  if (!(*v4 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v6 - 1;
    if (!__OFSUB__(v6, 1))
      goto LABEL_3;
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v14 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  v7 = v14 - 1;
  if (__OFSUB__(v14, 1))
    goto LABEL_13;
LABEL_3:
  sub_227344344();
  v1 = v8;
  v9 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  v0 = *(char **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  v5 = *((_QWORD *)v9 + 1);
  v2 = (*(double (**)(char *, unint64_t))(v5 + 48))(v0, v5);
  v3 = (*(double (**)(char *, unint64_t))(v5 + 56))(v0, v5);
  v10 = *v4;
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_5;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  v11 = sub_22758ECE8();
  swift_bridgeObjectRelease();
LABEL_5:
  if (v1 > v2)
    v12 = v1;
  else
    v12 = v2;
  if (v3 < v12)
    v12 = v3;
  return v12 * (double)v7 + (*(double (**)(char *, unint64_t))(v5 + 24))(v0, v5) * (double)v11;
}

id sub_227344648()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox);
  }
  else
  {
    v4 = sub_2273446A4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2273446A4()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v1 = objc_msgSend(v0, sel_layer);
  if (qword_2540B8D38 != -1)
    swift_once();
  objc_msgSend(v1, sel_setCornerRadius_, *(double *)&qword_2540BCE10);

  v2 = objc_msgSend(v0, sel_layer);
  if (qword_2540B8D30 != -1)
    swift_once();
  objc_msgSend(v2, sel_setCornerCurve_, qword_2540BCE08);

  v3 = objc_msgSend(v0, sel_layer);
  if (qword_2540B8D20 != -1)
    swift_once();
  objc_msgSend(v3, sel_setBorderWidth_, *(double *)&qword_2540BCE00);

  v4 = objc_msgSend(v0, sel_layer);
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
  v6 = objc_msgSend(v5, sel_CGColor);

  objc_msgSend(v4, sel_setBorderColor_, v6);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  return v0;
}

id sub_227344890(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v24;
  objc_super v25;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  *(_QWORD *)v11 = &type metadata for LayoutConstants.FilterRow;
  *((_QWORD *)v11 + 1) = &off_24EF9FBC0;
  v12 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
  v13 = objc_allocWithZone(MEMORY[0x24BEBD918]);
  v14 = v4;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, sel_init);
  v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_shouldHighlight] = 0;
  v15 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_subscribers] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons] = MEMORY[0x24BEE4AF8];
  v16 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator;
  v17 = objc_msgSend((id)objc_opt_self(), sel_lightConfiguration);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD940]), sel_initWithConfiguration_, v17);

  objc_msgSend(v18, sel__setOutputMode_, 5);
  *(_QWORD *)&v14[v16] = v18;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___activeItemIndicator] = 0;

  v25.receiver = v14;
  v25.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v20 = (void *)objc_opt_self();
  v21 = v19;
  v22 = objc_msgSend(v20, sel_clearColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  sub_227344B50();
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  sub_227344D0C(v24);
  swift_bridgeObjectRelease();
  sub_227345314();
  sub_2273456C4();

  return v21;
}

void sub_227344B50()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView];
  objc_msgSend(v1, sel_setClipsToBounds_, 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView];
  objc_msgSend(v2, sel_setClipsToBounds_, 0);
  objc_msgSend(v2, sel_setContentInsetAdjustmentBehavior_, 2);
  objc_msgSend(v2, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v2, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(v2, sel_setDecelerationRate_, *MEMORY[0x24BEBE728]);
  objc_msgSend(v2, sel_setDelegate_, v0);
  objc_msgSend(v2, sel_setBounces_, 1);
  objc_msgSend(v2, sel_setBouncesVertically_, 0);
  objc_msgSend(v2, sel_setBouncesHorizontally_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceHorizontal_, 1);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v0, sel_didTapScrollView_);
  objc_msgSend(v3, sel_setNumberOfTapsRequired_, 1);
  objc_msgSend(v2, sel_addGestureRecognizer_, v3);
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v1, sel_addSubview_, v2);
  v4 = sub_227344648();
  objc_msgSend(v0, sel_addSubview_, v4);

}

void sub_227344D0C(uint64_t a1)
{
  void (**v1)(uint8_t *, char *, void *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  void (**v30)(uint8_t *, char *, void *);
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t i;
  id v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint8_t *v49;
  uint8_t *v50;
  unint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;

  v53 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v7 = MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v9 = (uint8_t *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10, v11, v12, v13);
  v15 = (char *)&v48 - v14;
  v16 = (_QWORD *)sub_22758C858();
  v17 = *(v16 - 1);
  v22 = MEMORY[0x24BDAC7A8](v16, v18, v19, v20, v21);
  v49 = (uint8_t *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v24, v25, v26, v27);
  v29 = (uint8_t *)&v48 - v28;
  v30 = v1;
  v31 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  v32 = *v31;
  v33 = (unint64_t)*v31 >> 62;
  v51 = (unint64_t *)v17;
  v52 = v16;
  v50 = v9;
  if (v33)
  {
    if (v32 < 0)
      v17 = v32;
    else
      v17 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v34 = sub_22758ECE8();
    if (v34)
      goto LABEL_3;
  }
  else
  {
    v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v34)
    {
LABEL_3:
      if (v34 < 1)
      {
        __break(1u);
        goto LABEL_43;
      }
      for (i = 0; i != v34; ++i)
      {
        if ((v32 & 0xC000000000000001) != 0)
          v36 = (id)MEMORY[0x2276B2BEC](i, v32);
        else
          v36 = *(id *)(v32 + 8 * i + 32);
        v37 = v36;
        objc_msgSend(v36, sel_removeFromSuperview);

      }
    }
  }
  swift_bridgeObjectRelease_n();
  *v31 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v34 = (uint64_t)v30;
  sub_22734414C();
  if (qword_2540B87B8 != -1)
    swift_once();
  v16 = &unk_2540BC000;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if ((v54 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if ((v54 & 1) != 0)
    {
      v41 = 0;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      v41 = v54;
    }
    goto LABEL_32;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D194();
  swift_release();
  swift_release();
  swift_release();
  v30 = (void (**)(uint8_t *, char *, void *))v51;
  v16 = v52;
  v17 = v51[6];
  if (((unsigned int (*)(char *, uint64_t, _QWORD *))v17)(v15, 1, v52) != 1)
  {
    v30[4](v29, v15, v16);
    if (qword_2558D4BE0 != -1)
      swift_once();
    v41 = sub_227389A24(v29);
    ((void (*)(uint8_t *, _QWORD *))v30[1])(v29, v16);
    goto LABEL_32;
  }
  sub_227349C90((uint64_t)v15);
  if (qword_2558D4BD8 != -1)
    goto LABEL_44;
  while (1)
  {
    v38 = sub_22738669C();
    v39 = (uint64_t)v50;
    if (*((_QWORD *)v38 + 2))
    {
      v30[2](v50, &v38[(*((unsigned __int8 *)v30 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v30 + 80)], v16);
      v40 = 0;
    }
    else
    {
      v40 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v30[7])(v39, v40, 1, v16);
    swift_bridgeObjectRelease();
    if (((unsigned int (*)(uint64_t, uint64_t, _QWORD *))v17)(v39, 1, v16) == 1)
    {
      sub_227349C90(v39);
      v41 = 0;
    }
    else
    {
      v42 = v49;
      v30[4](v49, (char *)v39, v16);
      if (qword_2558D4BE0 != -1)
        swift_once();
      v41 = sub_227389A24(v42);
      ((void (*)(uint8_t *, _QWORD *))v30[1])(v42, v16);
    }
LABEL_32:
    v30 = (void (**)(uint8_t *, char *, void *))v41;
    v17 = sub_227349454(v53, (uint64_t)v41);

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v43 = sub_22758ECE8();
      if (!v43)
        goto LABEL_41;
    }
    else
    {
      v43 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v43)
        goto LABEL_41;
    }
    if (v43 >= 1)
      break;
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
  }
  v44 = 0;
  v45 = *(void **)(v34 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  do
  {
    if ((v17 & 0xC000000000000001) != 0)
      v46 = (id)MEMORY[0x2276B2BEC](v44, v17);
    else
      v46 = *(id *)(v17 + 8 * v44 + 32);
    v47 = v46;
    ++v44;
    objc_msgSend(v45, sel_addSubview_, v46);

  }
  while (v43 != v44);
LABEL_41:
  swift_bridgeObjectRelease();
  *v31 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_22734414C();
  swift_bridgeObjectRelease();

}

void sub_227345314()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t);
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v1 = v0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = sub_227344648();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_22757580C(v1, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
  swift_bridgeObjectRelease();
  v3 = sub_227344648();
  v4 = objc_msgSend(v3, sel_leftAnchor);

  v5 = objc_msgSend(v1, sel_leftAnchor);
  if (qword_2540B8DD0 != -1)
    swift_once();
  v6 = *(double *)&qword_2540BCE70;
  if (qword_2540B8DE0 != -1)
    swift_once();
  v7 = v6 + *(double *)&qword_2540BCE78;
  if (qword_2540B8D20 != -1)
    swift_once();
  v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, v7 + *(double *)&qword_2540BCE00 - *(double *)&qword_2540BCE00);

  v9 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint;
  v10 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_227598070;
  v12 = *(void **)&v1[v9];
  if (v12)
  {
    v13 = (_QWORD *)v11;
    v14 = (void *)objc_opt_self();
    v13[4] = v12;
    v15 = v12;
    v16 = sub_227344648();
    v17 = objc_msgSend(v16, sel_centerYAnchor);

    v18 = objc_msgSend(v1, sel_centerYAnchor);
    v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

    v13[5] = v19;
    v20 = sub_227344648();
    v21 = objc_msgSend(v20, sel_widthAnchor);

    v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
    v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8];
    v24 = *(double (**)(uint64_t, uint64_t))(v23 + 24);
    v25 = objc_msgSend(v21, sel_constraintEqualToConstant_, v24(v22, v23) + *(double *)&qword_2540BCE00 + *(double *)&qword_2540BCE00);

    v13[6] = v25;
    v26 = sub_227344648();
    v27 = objc_msgSend(v26, sel_heightAnchor);

    v28 = objc_msgSend(v27, sel_constraintEqualToConstant_, v24(v22, v23) + *(double *)&qword_2540BCE00 + *(double *)&qword_2540BCE00);
    v13[7] = v28;
    sub_22758E3F4();
    sub_22730BA80(0, (unint64_t *)&qword_2540B9F00);
    v29 = (id)sub_22758E3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_activateConstraints_, v29);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2273456C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9A90);
  v111 = *(_QWORD *)(v0 - 8);
  v112 = v0;
  MEMORY[0x24BDAC7A8](v0, v1, v2, v3, v4);
  v110 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9AC0);
  v108 = *(_QWORD *)(v6 - 8);
  v109 = v6;
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v107 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9B38);
  v102 = *(_QWORD *)(v12 - 8);
  v103 = v12;
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  v101 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9750);
  v105 = *(_QWORD *)(v18 - 8);
  v106 = v18;
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v104 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_22758DF2C();
  v24 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88, v25, v26, v27, v28);
  v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_22758E784();
  v93 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95, v31, v32, v33, v34);
  v36 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9A48);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90, v37, v38, v39, v40);
  v42 = (char *)&v86 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B97F0);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v43, v44, v45, v46);
  v48 = (char *)&v86 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9788);
  v94 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97, v49, v50, v51, v52);
  v54 = (char *)&v86 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B94F0);
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98, v55, v56, v57, v58);
  v60 = (char *)&v86 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9508);
  v99 = *(_QWORD *)(v61 - 8);
  v100 = v61;
  MEMORY[0x24BDAC7A8](v61, v62, v63, v64, v65);
  v87 = (char *)&v86 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9B40);
  sub_22758D170();
  swift_endAccess();
  swift_release();
  sub_22758E778();
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v67 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v30, *MEMORY[0x24BEE5488], v88);
  v68 = (void *)sub_22758E7E4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v67);
  v113 = v68;
  sub_22730BB7C(&qword_2540B9A40, &qword_2540B9A48, MEMORY[0x24BDB9EE8]);
  sub_22731A2D8();
  v69 = v90;
  sub_22758D20C();

  (*(void (**)(char *, uint64_t))(v93 + 8))(v36, v95);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v69);
  sub_22730BB7C((unint64_t *)&unk_2540B97E0, (uint64_t *)&unk_2540B97F0, MEMORY[0x24BDB9988]);
  v70 = v92;
  sub_22758D1F4();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v48, v70);
  sub_22758C858();
  v71 = MEMORY[0x24BDB97F8];
  sub_22730BB7C((unint64_t *)&unk_2540B9778, &qword_2540B9788, MEMORY[0x24BDB97F8]);
  v72 = v97;
  sub_22758D1C4();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v54, v72);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9FF0);
  v73 = v87;
  v74 = v98;
  sub_22758D0E0();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v74);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B94F8, &qword_2540B9508, MEMORY[0x24BDB94C8]);
  v75 = v100;
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v73, v75);
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C30);
  v76 = v101;
  sub_22758D170();
  swift_endAccess();
  v77 = MEMORY[0x24BDB9EE8];
  sub_22730BB7C((unint64_t *)&unk_2540B9B28, &qword_2540B9B38, MEMORY[0x24BDB9EE8]);
  v78 = v103;
  v79 = v104;
  sub_22758D1F4();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v76, v78);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9740, &qword_2540B9750, v71);
  v80 = v106;
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v79, v80);
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9BA8);
  v81 = v107;
  sub_22758D170();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9AB0, (uint64_t *)&unk_2540B9AC0, v77);
  v82 = v109;
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v81, v82);
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9B80);
  v83 = v110;
  sub_22758D170();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22730BB7C((unint64_t *)&unk_2540B9A80, (uint64_t *)&unk_2540B9A90, v77);
  v84 = v112;
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v83, v84);
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2273460A0()
{
  unsigned __int8 v1;

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_227346140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227349C38(a1, a2);
}

id sub_227346148@<X0>(uint8_t *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  if (qword_2558D4BE0 != -1)
    swift_once();
  result = sub_227389A24(a1);
  *a2 = result;
  return result;
}

char *sub_2273461AC(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  BOOL v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v4 = sub_22758DF20();
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758DF68();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a1;
  swift_beginAccess();
  result = (char *)MEMORY[0x2276B3E34](a2 + 16);
  if (result)
  {
    v33 = result;
    v19 = &result[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
    swift_beginAccess();
    v20 = *(_QWORD *)v19;
    if (*(_QWORD *)v19 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v21 = sub_22758ECE8();
      if (v21)
        goto LABEL_4;
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v21)
      {
LABEL_4:
        result = (char *)sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
        v37 = result;
        if (v21 < 1)
        {
          __break(1u);
          return result;
        }
        v22 = 0;
        v34 = v20 & 0xC000000000000001;
        v35 = v21;
        v36 = v20;
        do
        {
          if (v34)
            v23 = (id)MEMORY[0x2276B2BEC](v22, v20);
          else
            v23 = *(id *)(v20 + 8 * v22 + 32);
          v24 = v23;
          v25 = v22 + 1;
          v26 = (void *)sub_22758E79C();
          v27 = (_QWORD *)swift_allocObject();
          v28 = v38;
          v27[2] = v24;
          v27[3] = v28;
          v27[4] = v22;
          aBlock[4] = sub_227349C2C;
          aBlock[5] = v27;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_227367AE4;
          aBlock[3] = &block_descriptor_32;
          v29 = _Block_copy(aBlock);
          v30 = v24;
          v31 = v28;
          swift_release();
          sub_22758DF44();
          aBlock[0] = MEMORY[0x24BEE4AF8];
          sub_22730DE58();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
          sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
          sub_22758EACC();
          MEMORY[0x2276B27CC](0, v17, v10, v29);
          _Block_release(v29);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v4);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);

          v22 = v25;
          v32 = v35 == v25;
          v20 = v36;
        }
        while (!v32);
      }
    }

    return (char *)swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_2273464E8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  int v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView);
  objc_msgSend(v5, sel_setImage_, a2);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  v6 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  if ((a3 & 0x8000000000000000) == 0 && v6 > (uint64_t)a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v13 + 16) <= a3)
    {
      __break(1u);
    }
    else
    {
      v7 = *(_BYTE *)(v13 + a3 + 32);
      swift_bridgeObjectRelease();
      v8 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
      *(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter) = v7;
      v9 = objc_msgSend(v5, sel_layer);
      v10 = *(unsigned __int8 *)(a1 + v8);
      if (v10 == 12)
      {
        v11 = 0;
      }
      else
      {
        sub_227418614(v10);
        sub_227575C00(v12);
        swift_bridgeObjectRelease();
        v11 = (void *)sub_22758E3C4();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v9, sel_setFilters_, v11);

    }
  }
}

BOOL sub_2273466D4()
{
  char v1;

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  return (v1 & 1) == 0;
}

uint64_t sub_22734677C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  int v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v24 = *a1;
  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x2276B3E34](v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = (unint64_t *)(result + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
    swift_beginAccess();
    v6 = *v5;
    swift_bridgeObjectRetain();

    if (v6 >> 62)
      goto LABEL_22;
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v7; v7 = sub_22758ECE8())
    {
      v8 = 0;
      v23 = v6 & 0xC000000000000001;
      v9 = &unk_227598158;
      v20 = MEMORY[0x24BEE4AD8] + 8;
      v21 = v7;
      v22 = v6;
      while (1)
      {
        v10 = v23 ? (char *)MEMORY[0x2276B2BEC](v8, v6) : (char *)*(id *)(v6 + 8 * v8 + 32);
        v11 = v10;
        if (__OFADD__(v8, 1))
          break;
        v26 = v8 + 1;
        v25 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView;
        objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView], sel_setImage_, v24);
        if (qword_2540B87B8 != -1)
          swift_once();
        swift_getKeyPath();
        swift_getKeyPath();
        v12 = v9;
        sub_22758D194();
        swift_release();
        swift_release();
        v13 = *(_QWORD *)(v27 + 16);
        swift_bridgeObjectRelease();
        if ((uint64_t)v8 >= v13)
        {

          v9 = v12;
          if (v26 == v7)
            return swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22758D194();
          swift_release();
          swift_release();
          if (v8 >= *(_QWORD *)(v27 + 16))
            goto LABEL_21;
          v14 = *(_BYTE *)(v27 + v8 + 32);
          swift_bridgeObjectRelease();
          v15 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
          v11[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter] = v14;
          v16 = objc_msgSend(*(id *)&v11[v25], sel_layer);
          v17 = v11[v15];
          if (v17 == 12)
          {
            v18 = 0;
          }
          else
          {
            sub_227418614(v17);
            sub_227575C00(v19);
            swift_bridgeObjectRelease();
            v18 = (void *)sub_22758E3C4();
            swift_bridgeObjectRelease();
          }
          v9 = v12;
          objc_msgSend(v16, sel_setFilters_, v18, v20);

          v7 = v21;
          v6 = v22;
          if (v26 == v21)
            return swift_bridgeObjectRelease_n();
        }
        ++v8;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_227346AA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v4 = sub_22758DF20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22758DF68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14, v15, v16, v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  swift_beginAccess();
  result = MEMORY[0x2276B3E34](a2 + 16);
  if (result)
  {
    v22 = (void *)result;
    sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
    v30 = sub_22758E79C();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = v20;
    aBlock[4] = sub_227349BBC;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227367AE4;
    aBlock[3] = &block_descriptor_7;
    v24 = _Block_copy(aBlock);
    v29 = v5;
    v25 = v24;
    v26 = v22;
    swift_bridgeObjectRetain();
    swift_release();
    sub_22758DF44();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22730DE58();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730BB7C((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0, MEMORY[0x24BEE12C8]);
    sub_22758EACC();
    v27 = (void *)v30;
    MEMORY[0x2276B27CC](0, v19, v11, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  return result;
}

void sub_227346CE4(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  uint64_t v12;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2276B3E34](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
    v7 = *(void **)(v4 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
    if ((objc_msgSend(v7, sel_isDragging) & 1) != 0 || objc_msgSend(v7, sel_isDecelerating))
      objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator], sel_selectionChanged);
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    v8 = sub_2274AB3E4(v2, v12);
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      v11 = *(void **)&v5[v6];
      if (!objc_msgSend(v11, sel_isDragging) || objc_msgSend(v11, sel_isDecelerating))
        sub_227346E64(v8, 1);
    }

  }
}

void sub_227346E64(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  double v11;
  double v12;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    v6 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) == 0 && v6 > a1)
  {
    swift_beginAccess();
    v7 = *v5;
    if ((*v5 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
      {
        __break(1u);
        return;
      }
      v8 = *(id *)(v7 + 8 * a1 + 32);
      goto LABEL_8;
    }
LABEL_12:
    v8 = (id)MEMORY[0x2276B2BEC](a1);
LABEL_8:
    v9 = v8;
    swift_endAccess();
    objc_msgSend(v9, sel_bounds);
    v10 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
    objc_msgSend(v9, sel_convertRect_toCoordinateSpace_, v10);
    v12 = v11;
    objc_msgSend(v10, sel_contentOffset);
    objc_msgSend(v10, sel_setContentOffset_animated_, a2 & 1, v12);

  }
}

void sub_227346FCC(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  int v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t ObjCClassFromMetadata;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  _BYTE *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  _QWORD *v27;

  v4 = *a1;
  type metadata accessor for ImageCell();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v6 = *(void **)&v5[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_imageView];
  objc_msgSend(v6, sel_setImage_, a2);
  v7 = OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
  v5[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter] = v4;
  v8 = objc_msgSend(v6, sel_layer);
  v9 = 0;
  v10 = v5[v7];
  if (v10 != 12)
  {
    sub_227418614(v10);
    sub_227575C00(v11);
    swift_bridgeObjectRelease();
    v9 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v8, sel_setFilters_, v9, a3);

  v12 = v5;
  sub_22758EE2C();
  sub_22758E2B0();
  swift_bridgeObjectRelease();
  sub_22758E2B0();
  sub_227418510(v4);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = (void *)sub_22758E1B4();
  v17 = (void *)sub_22758E1B4();
  v18 = objc_msgSend(v15, sel_localizedStringForKey_value_table_, v16, 0, v17);

  sub_22758E1E4();
  swift_bridgeObjectRelease();

  sub_22758E2B0();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityIdentifier_, v19);

  sub_227418510(v4);
  v20 = v12;
  v21 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = (void *)sub_22758E1B4();
  v23 = (void *)sub_22758E1B4();
  v24 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, 0, v23);

  sub_22758E1E4();
  swift_bridgeObjectRelease();

  v25 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setAccessibilityLabel_, v25);

  *v27 = v20;
}

void sub_227347360(uint64_t a1, char a2, char a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  unsigned __int8 v22;

  v7 = &v3[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  if (*(_QWORD *)v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  else
  {
    v8 = *(_QWORD *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) == 0 && v8 > a1)
  {
    swift_beginAccess();
    v9 = *(_QWORD *)v7;
    if ((*(_QWORD *)v7 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
      {
        __break(1u);
LABEL_26:
        swift_once();
LABEL_16:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        sub_227418510(v22);
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v15 = (void *)sub_22758E1B4();
        v16 = (void *)sub_22758E1B4();
        v17 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, v16);

        sub_22758E1E4();
        swift_bridgeObjectRelease();

        v18 = sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setAccessibilityValue_, v18);
        goto LABEL_21;
      }
      v10 = (unsigned __int8 *)*(id *)(v9 + 8 * a1 + 32);
LABEL_8:
      v11 = v10;
      swift_endAccess();
      v12 = v11[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

      if (v12 != 12)
      {
        if (qword_2540B87B8 != -1)
          swift_once();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        if (v22 != v12)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_22758D1A0();
          swift_getKeyPath();
          swift_getKeyPath();
          v22 = 1;
          swift_retain();
          sub_22758D1A0();
        }
      }
      if ((a2 & 1) != 0)
        sub_227346E64(a1, a3 & 1);
      if (qword_2540B87B8 == -1)
        goto LABEL_16;
      goto LABEL_26;
    }
LABEL_24:
    v10 = (unsigned __int8 *)MEMORY[0x2276B2BEC](a1);
    goto LABEL_8;
  }
  if (qword_2558D4A48 != -1)
    swift_once();
  v19 = sub_22758CF9C();
  __swift_project_value_buffer(v19, (uint64_t)qword_2558D6200);
  v18 = sub_22758CF84();
  v20 = sub_22758E6B8();
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 134217984;
    sub_22758EA48();
    _os_log_impl(&dword_2272F4000, v18, v20, "No filter cell at: %ld", v21, 0xCu);
    MEMORY[0x2276B3D50](v21, -1, -1);
  }
LABEL_21:

}

void sub_2273477F8()
{
  char *v0;
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v31;
  char v32;
  unsigned __int8 v33;
  uint64_t v34;
  objc_super v35;

  v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView];
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  if (qword_2540B8DD0 != -1)
    swift_once();
  v9 = *(double *)&qword_2540BCE70;
  if (qword_2540B8DE0 != -1)
    swift_once();
  v10 = v9 + *(double *)&qword_2540BCE78;
  if (qword_2540B8D20 != -1)
    swift_once();
  v11 = *(double *)&qword_2540BCE00;
  v12 = v4 + v10 + *(double *)&qword_2540BCE00;
  objc_msgSend(v2, sel_bounds);
  v13 = v11 + *(double *)&qword_2540BCE70 + *(double *)&qword_2540BCE78;
  v15 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView];
  objc_msgSend(v15, sel_setFrame_, v12, v6, v14 - v13, v8);
  objc_msgSend(v15, sel_frame);
  objc_msgSend(v15, sel_setContentInset_, 0.0, 0.0, 0.0, v16- (*(double (**)(void))(*(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8] + 24))());
  objc_msgSend(v15, sel_setContentSize_, sub_2273444CC());
  objc_msgSend(v15, sel_setScrollEnabled_, 1);
  v17 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint];
  if (v17)
    objc_msgSend(v17, sel_setConstant_, v13 - v11);
  sub_227347C34();
  sub_227347E2C();
  v18 = &v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons];
  swift_beginAccess();
  v19 = *(_QWORD *)v18;
  if (*(_QWORD *)v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_22758ECE8();
    if (v20)
      goto LABEL_11;
LABEL_21:
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
    goto LABEL_22;
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_21;
LABEL_11:
  v34 = MEMORY[0x24BEE4AF8];
  sub_227324808(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
    __break(1u);
    return;
  }
  v21 = 0;
  v22 = v34;
  do
  {
    if ((v19 & 0xC000000000000001) != 0)
      v23 = (_BYTE *)MEMORY[0x2276B2BEC](v21, v19);
    else
      v23 = *(id *)(v19 + 8 * v21 + 32);
    v24 = v23[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    v33 = v22;
    v26 = *(_QWORD *)(v22 + 16);
    v25 = *(_QWORD *)(v22 + 24);
    if (v26 >= v25 >> 1)
      sub_227324808(v25 > 1, v26 + 1, 1);
    ++v21;
    *(_QWORD *)(v22 + 16) = v26 + 1;
    *(_BYTE *)(v22 + v26 + 32) = v24;
  }
  while (v20 != v21);
  swift_bridgeObjectRelease();
LABEL_22:
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  v27 = *(_QWORD *)(v22 + 16);
  if (v27)
  {
    v28 = 0;
    while (1)
    {
      v29 = *(unsigned __int8 *)(v22 + v28 + 32);
      if (v29 != 12 && v29 == v33)
        break;
      if (v27 == ++v28)
        goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    v31 = v28;
    v32 = 0;
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease();
    v31 = 0;
    v32 = 1;
  }
  sub_227347360(v31, 1, v32);
}

uint64_t sub_227347C34()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v4;
  double (**v5)(uint64_t, uint64_t);
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double (*v12)(uint64_t, uint64_t);
  double v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  double v22;
  double v23;

  v1 = v0;
  sub_227344344();
  v3 = v2;
  v4 = v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  v5 = *(double (***)(uint64_t, uint64_t))(v4 + 8);
  v7 = v5[6](v6, (uint64_t)v5);
  if (v3 <= v7)
    v3 = v7;
  v8 = v5[7](v6, (uint64_t)v5);
  if (v8 >= v3)
    v9 = v3;
  else
    v9 = v8;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView), sel_bounds);
  v11 = v10;
  v12 = v5[3];
  v13 = v12(v6, (uint64_t)v5);
  v14 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  v15 = *v14;
  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v16)
      goto LABEL_8;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_22758ECE8();
  v16 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_8:
  if (v16 >= 1)
  {
    v18 = 0;
    v19 = (v11 - v13) * 0.5;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x2276B2BEC](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      v21 = v20;
      v22 = v9 * (double)v18 + v12(v6, (uint64_t)v5) * (double)v18;
      v23 = v12(v6, (uint64_t)v5);
      objc_msgSend(v21, sel_setFrame_, v22, v19, v23, v12(v6, (uint64_t)v5));

      ++v18;
    }
    while (v16 != v18);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_227347E2C()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  BOOL v28;
  BOOL v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView);
  objc_msgSend(v1, sel_bounds);
  if (v2 > 0.0)
  {
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v40, sel_setFrame_);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA330);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_227598080;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.0);
    v5 = objc_msgSend(v4, sel_CGColor);

    type metadata accessor for CGColor(0);
    v7 = v6;
    *(_QWORD *)(v3 + 56) = v6;
    *(_QWORD *)(v3 + 32) = v5;
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
    v9 = objc_msgSend(v8, sel_CGColor);

    *(_QWORD *)(v3 + 88) = v7;
    *(_QWORD *)(v3 + 64) = v9;
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
    v11 = objc_msgSend(v10, sel_CGColor);

    *(_QWORD *)(v3 + 120) = v7;
    *(_QWORD *)(v3 + 96) = v11;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.0);
    v13 = objc_msgSend(v12, sel_CGColor);

    *(_QWORD *)(v3 + 152) = v7;
    *(_QWORD *)(v3 + 128) = v13;
    v14 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setColors_, v14);

    if (qword_2540B8DD0 != -1)
      swift_once();
    v15 = *(double *)&qword_2540BCE70;
    v16 = *(double *)&qword_2540BCE70 + -4.0;
    objc_msgSend(v1, sel_bounds);
    v18 = v17;
    if (qword_2540B8DE0 != -1)
      swift_once();
    v19 = *(double *)&qword_2540BCE78;
    v20 = v16 / v18;
    if (qword_2540B8D20 != -1)
      swift_once();
    v21 = *(double *)&qword_2540BCE00;
    objc_msgSend(v1, sel_bounds);
    v23 = v22;
    v24 = sub_2273BA574();
    objc_msgSend(v1, sel_bounds);
    if (v20 > 0.0
      && ((v26 = (v15 + v19 + v21 - v21) / v23, v27 = 1.0 - v24 / v25, v20 < v26) ? (v28 = v26 < v27) : (v28 = 0),
          v28 ? (v29 = v27 < 1.0) : (v29 = 0),
          v29))
    {
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v20);
      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v26);
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v27);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_227598070;
      *(_QWORD *)(v33 + 32) = v30;
      *(_QWORD *)(v33 + 40) = v31;
      *(_QWORD *)(v33 + 48) = v32;
      sub_22730BA80(0, &qword_2540BA030);
      v34 = v30;
      v35 = v31;
      v36 = v32;
      *(_QWORD *)(v33 + 56) = sub_22758E934();
      sub_22758E3F4();
      v37 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_setLocations_, v37);

      objc_msgSend(v40, sel_setStartPoint_, 0.0, 0.5);
      objc_msgSend(v40, sel_setEndPoint_, 1.0, 0.5);
      v38 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v38, sel_setMask_, v40);

      v39 = v38;
    }
    else
    {
      v39 = v40;
    }

  }
}

uint64_t type metadata accessor for LensFiltersScrubber()
{
  return objc_opt_self();
}

void sub_227348418(void *a1)
{
  uint64_t v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  id v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView);
  objc_msgSend(a1, sel_locationInView_, v2);
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v2, sel_subviews);
  sub_22730BA80(0, (unint64_t *)&unk_2540B9FE0);
  v8 = sub_22758E3DC();

  v9 = v2;
  LOBYTE(v7) = sub_2273496D4(v8, (uint64_t)v9, v4, v6);
  swift_bridgeObjectRelease();

  if ((v7 & 1) != 0)
  {
    v10 = sub_227348564(v4);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
      swift_beginAccess();
      v13 = *v12;
      swift_bridgeObjectRetain();
      sub_2274AB448((uint64_t)v11, v13);
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
        sub_227347360(v15, 1, 1);

    }
  }
}

uint64_t sub_227348564(double a1)
{
  char *v1;
  void *v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;

  v2 = v1;
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView], sel_subviews);
  sub_22730BA80(0, (unint64_t *)&unk_2540B9FE0);
  v5 = sub_22758E3DC();

  v14 = MEMORY[0x24BEE4AF8];
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
LABEL_17:
    swift_bridgeObjectRelease();
    v12 = v2;
    v13 = sub_2273497F8(v11, (uint64_t)v12, a1);
    swift_bridgeObjectRelease();

    return v13;
  }
  swift_bridgeObjectRetain();
  result = sub_22758ECE8();
  v6 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x2276B2BEC](i, v5);
      else
        v9 = *(id *)(v5 + 8 * i + 32);
      v10 = v9;
      type metadata accessor for ImageCell();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x2276B23C4]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22758E400();
        sub_22758E424();
        sub_22758E3F4();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v11 = v14;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void *sub_2273487B0(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double (**v5)(_QWORD, _QWORD);
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *result;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config);
  v5 = *(double (***)(_QWORD, _QWORD))(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config + 8);
  v6 = v5[3](v4, v5);
  sub_227344344();
  v8 = v7;
  v9 = v5[6](v4, v5);
  if (v8 <= v9)
    v8 = v9;
  v10 = v5[7](v4, v5);
  if (v10 >= v8)
    v10 = v8;
  result = (void *)sub_227348564((v6 + v10) * 0.5 + a1);
  v12 = result;
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    objc_msgSend(v12, sel_convertRect_toCoordinateSpace_, *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView));
    v14 = v13;

    return (void *)v14;
  }
  return result;
}

void sub_2273488BC(void *a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;

  v3 = sub_227344050();
  v4 = sub_227348564(v3);
  if (v4)
  {
    v11 = (id)v4;
    sub_22730BA80(0, (unint64_t *)&qword_2540BA060);
    if ((sub_22758E94C() & 1) != 0
      && ((objc_msgSend(a1, sel_isDragging) & 1) != 0
       || objc_msgSend(a1, sel_isDecelerating, v11)))
    {
      v5 = (unint64_t *)(v1 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
      swift_beginAccess();
      v6 = *v5;
      swift_bridgeObjectRetain();
      sub_2274AB448((uint64_t)v11, v6);
      v8 = v7;
      v10 = v9;
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
        sub_227347360(v8, 0, 0);

    }
    else
    {

    }
  }
}

uint64_t sub_227348B98()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  uint64_t *v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned __int8 v25;
  uint64_t v26;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (uint64_t *)sub_22758E1B4();
  v4 = (void *)sub_22758E1B4();
  v5 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, v4);

  sub_22758E1E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_227596540;
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  v24 = v7;
  v8 = *v7;
  if (!(*v7 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v9 = sub_22758ECE8();
  if (!v9)
    goto LABEL_13;
LABEL_3:
  v26 = MEMORY[0x24BEE4AF8];
  result = sub_227324808(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v12 = v26;
    v3 = &OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v13 = (_BYTE *)MEMORY[0x2276B2BEC](v11, v8);
      else
        v13 = *(id *)(v8 + 8 * v11 + 32);
      v14 = v13[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

      v25 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
        sub_227324808(v15 > 1, v16 + 1, 1);
      ++v11;
      *(_QWORD *)(v12 + 16) = v16 + 1;
      *(_BYTE *)(v12 + v16 + 32) = v14;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_2540B87B8 != -1)
      swift_once();
    v17 = qword_2540BCDD0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    v18 = *(_QWORD *)(v12 + 16);
    if (v18)
    {
      v19 = 0;
      while (1)
      {
        v20 = *(unsigned __int8 *)(v12 + 32 + v19);
        if (v20 != 12 && v20 == v25)
          break;
        if (v18 == ++v19)
          goto LABEL_23;
      }
    }
    else
    {
LABEL_23:
      v19 = 0;
    }
    swift_bridgeObjectRelease();
    if (__OFADD__(v19, 1))
    {
      __break(1u);
    }
    else
    {
      v3 = (uint64_t *)MEMORY[0x24BEE1768];
      v17 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v6 + 64) = v17;
      *(_QWORD *)(v6 + 32) = v19 + 1;
      if (!(*v24 >> 62))
      {
        v22 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_27:
        *(_QWORD *)(v6 + 96) = v3;
        *(_QWORD *)(v6 + 104) = v17;
        *(_QWORD *)(v6 + 72) = v22;
        v23 = sub_22758E214();
        swift_bridgeObjectRelease();
        return v23;
      }
    }
    swift_bridgeObjectRetain();
    v22 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

void sub_227348F54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 v14;
  uint64_t v15;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_22758ECE8();
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x24BEE4AF8];
  sub_227324808(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    return;
  }
  v4 = 0;
  v5 = v15;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (_BYTE *)MEMORY[0x2276B2BEC](v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    v14 = v5;
    v9 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    if (v9 >= v8 >> 1)
      sub_227324808(v8 > 1, v9 + 1, 1);
    ++v4;
    *(_QWORD *)(v5 + 16) = v9 + 1;
    *(_BYTE *)(v5 + v9 + 32) = v7;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
LABEL_14:
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  v10 = *(_QWORD *)(v5 + 16);
  if (v10)
  {
    v11 = 0;
    while (1)
    {
      v12 = *(unsigned __int8 *)(v5 + 32 + v11);
      if (v12 != 12 && v12 == v14)
        break;
      if (v10 == ++v11)
        goto LABEL_23;
    }
  }
  else
  {
LABEL_23:
    v11 = 0;
  }
  swift_bridgeObjectRelease();
  sub_227347360(v11 - 1, 1, 1);
}

void sub_2273491C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 v14;
  uint64_t v15;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons);
  swift_beginAccess();
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_22758ECE8();
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x24BEE4AF8];
  sub_227324808(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
    goto LABEL_27;
  v4 = 0;
  v5 = v15;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (_BYTE *)MEMORY[0x2276B2BEC](v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6[OBJC_IVAR____TtC16MagnifierSupport9ImageCell_filter];

    v14 = v5;
    v9 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    if (v9 >= v8 >> 1)
      sub_227324808(v8 > 1, v9 + 1, 1);
    ++v4;
    *(_QWORD *)(v5 + 16) = v9 + 1;
    *(_BYTE *)(v5 + v9 + 32) = v7;
  }
  while (v3 != v4);
  swift_bridgeObjectRelease();
LABEL_14:
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  v10 = *(_QWORD *)(v5 + 16);
  if (v10)
  {
    v11 = 0;
    while (1)
    {
      v12 = *(unsigned __int8 *)(v5 + 32 + v11);
      if (v12 != 12 && v12 == v14)
        break;
      if (v10 == ++v11)
        goto LABEL_23;
    }
  }
  else
  {
LABEL_23:
    v11 = 0;
  }
  swift_bridgeObjectRelease();
  if (!__OFADD__(v11, 1))
  {
    sub_227347360(v11 + 1, 1, 1);
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_227349454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22758EC28();
    v8 = (unsigned __int8 *)(a1 + 32);
    while (1)
    {
      v9 = *v8++;
      v10 = v9;
      sub_227346FCC(&v10, a2, (uint64_t)&v11);
      if (v3)
        break;
      v3 = 0;
      sub_22758EC04();
      sub_22758EC34();
      sub_22758EC40();
      sub_22758EC10();
      if (!--v5)
        return v12;
    }
    return swift_release();
  }
  return result;
}

void sub_227349538()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = &v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_config];
  *v1 = &type metadata for LayoutConstants.FilterRow;
  v1[1] = &off_24EF9FBC0;
  v2 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD918]), sel_init);
  v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_shouldHighlight] = 0;
  v3 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_maskedView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_subscribers] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_buttons] = MEMORY[0x24BEE4AF8];
  v4 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_feedbackGenerator;
  v5 = objc_msgSend((id)objc_opt_self(), sel_lightConfiguration);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD940]), sel_initWithConfiguration_, v5);

  objc_msgSend(v6, sel__setOutputMode_, 5);
  *(_QWORD *)&v0[v4] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___overlayBox] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_overlayBoxLeadingAnchorConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber____lazy_storage___activeItemIndicator] = 0;

  sub_22758ECC4();
  __break(1u);
}

BOOL sub_2273496D4(unint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  _BOOL8 v13;
  CGPoint v15;
  CGRect v16;

  if (a1 >> 62)
    goto LABEL_12;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_22758ECE8())
  {
    v9 = 4;
    while (1)
    {
      v10 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2276B2BEC](v9 - 4, a1) : *(id *)(a1 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      objc_msgSend(v10, sel_bounds);
      objc_msgSend(v11, sel_convertRect_toCoordinateSpace_, a2);
      v15.x = a3;
      v15.y = a4;
      v13 = CGRectContainsPoint(v16, v15);

      if (!v13)
      {
        ++v9;
        if (v12 != v8)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v13 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_2273497F8(unint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  void *v8;
  unint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  uint64_t v31;
  CGRect v34;
  CGRect v35;

  if (a1 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x2276B2BEC](0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        v6 = *(id *)(a1 + 32);
      }
      v7 = v6;
      if (v4 == 1)
        break;
      v31 = OBJC_IVAR____TtC16MagnifierSupport19LensFiltersScrubber_scrollView;
      v9 = 1;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v10 = (id)MEMORY[0x2276B2BEC](v9, a1);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_22;
          if (v9 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_23;
          v10 = *(id *)(a1 + 8 * v9 + 32);
        }
        v8 = v10;
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v12 = v4;
        objc_msgSend(v10, sel_bounds);
        v13 = *(_QWORD *)(a2 + v31);
        objc_msgSend(v8, sel_convertRect_toCoordinateSpace_, v13);
        v15 = v14;
        v17 = v16;
        v19 = v18;
        v21 = v20;
        objc_msgSend(v7, sel_bounds);
        objc_msgSend(v7, sel_convertRect_toCoordinateSpace_, v13);
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;
        v34.origin.x = v15;
        v34.origin.y = v17;
        v34.size.width = v19;
        v34.size.height = v21;
        v30 = vabdd_f64(CGRectGetMidX(v34), a3);
        v35.origin.x = v23;
        v35.origin.y = v25;
        v35.size.width = v27;
        v35.size.height = v29;
        if (v30 < vabdd_f64(CGRectGetMidX(v35), a3))
        {

          v7 = v8;
          ++v9;
          v4 = v12;
          if (v11 == v12)
            goto LABEL_8;
        }
        else
        {

          ++v9;
          v4 = v12;
          if (v11 == v12)
            goto LABEL_7;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      result = sub_22758ECE8();
      v4 = result;
      if (!result)
        goto LABEL_25;
    }
LABEL_7:
    v8 = v7;
LABEL_8:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  return (uint64_t)v8;
}

uint64_t sub_227349A58()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t sub_227349B4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

char *sub_227349B70(void **a1)
{
  uint64_t v1;

  return sub_2273461AC(a1, v1);
}

uint64_t sub_227349B78(uint64_t *a1)
{
  uint64_t v1;

  return sub_22734677C(a1, v1);
}

uint64_t sub_227349B80(uint64_t *a1)
{
  uint64_t v1;

  return sub_227346AA8(a1, v1);
}

void sub_227349B88(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_227346CE4(a1, v1);
}

uint64_t sub_227349B90()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_227349BBC()
{
  uint64_t v0;

  sub_227344D0C(*(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_227349C00()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227349C2C()
{
  uint64_t v0;

  sub_2273464E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227349C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227349C90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227349CD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_227349CF4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setNeedsLayout);
}

id sub_227349D14()
{
  void *v0;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9[2];

  v9[1] = *(double *)MEMORY[0x24BDAC8D0];
  v8 = 0.0;
  v9[0] = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v9, &v8, &v7, &v6);
  if (v9[0] == v8 && v8 == v7)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithWhite_alpha_, v9[0], v6 * 0.8);
  v4 = 0.0;
  v5 = 0.0;
  v3 = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, &v5, &v4, &v3, &v6, v8);
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithHue_saturation_brightness_alpha_, v5, v4, v3, v6 * 0.8);
}

id sub_227349E40(void *a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v6;
  double v7[2];

  v7[1] = *(double *)MEMORY[0x24BDAC8D0];
  v6 = 0;
  v7[0] = 0.0;
  objc_msgSend(a1, sel_getWhite_alpha_, &v6, v7);
  v3 = objc_msgSend(a2, sel_userInterfaceStyle);
  v4 = 0.35;
  if (v3 == (id)2)
    v4 = 0.45;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithWhite_alpha_, v7[0], v7[0] * v4);
}

void sub_227349F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;

  v27[0] = sub_22758DF20();
  v0 = *(_QWORD *)(v27[0] - 8);
  MEMORY[0x24BDAC7A8](v27[0], v1, v2, v3, v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v9 = (void *)sub_22758E1B4();
  v10 = (void *)sub_22758E1B4();
  v11 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v9, 0, v10);

  v12 = sub_22758E1E4();
  v14 = v13;

  v29 = v12;
  v30 = v14;
  sub_22731236C();
  v15 = sub_22758EA6C();
  v17 = v16;
  v18 = sub_2274E51C0();
  v19 = sub_2274E5324();
  sub_2274E2410(v15, v17, v18, v19);
  swift_bridgeObjectRelease();

  v20 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  UIAccessibilitySpeakAndDoNotBeInterrupted();

  sub_22734A258();
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v29 == 1)
    sub_227419510();
  v21 = qword_2540BCDD8 + 40;
  swift_beginAccess();
  v28 = 1;
  if (qword_2540B9100 != -1)
    swift_once();
  v22 = sub_22758DF14();
  MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  v27[-2] = &v28;
  v27[-1] = v21;
  sub_22758E7A8();
  (*(void (**)(char *, _QWORD))(v0 + 8))(v6, v27[0]);
  swift_endAccess();
  if (*(_BYTE *)(qword_2540BCDD0
                + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorSignsAssetDownloaded) != 1
    || (*(_BYTE *)(qword_2540BCDD0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls_doorAttributesAssetDownloaded) & 1) == 0)
  {
    sub_22743607C();
  }
}

uint64_t sub_22734A258()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  _BYTE *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  id (*v40)();
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_22758DF20();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_22758DF68();
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v10, v11, v12, v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540B87B8 != -1)
    swift_once();
  v16 = (uint64_t *)(qword_2540BCDD0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedDoorDetectionFeedbacks);
  swift_beginAccess();
  v17 = v16[1];
  v18 = (uint64_t (*)(uint64_t))v16[2];
  aBlock = *v16;
  v37 = v17;
  v38 = v18;
  v19 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v20 = swift_bridgeObjectRetain();
  if (v19 != -1)
    v20 = swift_once();
  MEMORY[0x24BDAC7A8](v20, v21, v22, v23, v24);
  *(&v33 - 2) = (uint64_t)&aBlock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D50);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v42;
  v26 = sub_227367600(2, v42);
  v27 = sub_227367600(3, v25);
  v28 = sub_227367600(1, v25);
  swift_bridgeObjectRelease();
  v1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_useDoorSpeechFeedback] = v28;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v1;
  *(_BYTE *)(v29 + 24) = v26;
  *(_BYTE *)(v29 + 25) = v27;
  v40 = sub_22734EDB0;
  v41 = v29;
  aBlock = MEMORY[0x24BDAC760];
  v37 = 1107296256;
  v38 = sub_227367AE4;
  v39 = &block_descriptor_8;
  v30 = _Block_copy(&aBlock);
  v31 = v1;
  sub_22758DF44();
  v42 = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v15, v8, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v34);
  return swift_release();
}

void sub_22734A598()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  uint64_t ObjCClassFromMetadata;
  id v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  _QWORD v54[2];

  v1 = (int *)type metadata accessor for DetectedDoor(0);
  MEMORY[0x24BDAC7A8](v1, v2, v3, v4, v5);
  v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22734AA48();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectedPersonView))
  {
    v15 = *MEMORY[0x24BDBF090];
    v16 = *(_QWORD *)(MEMORY[0x24BDBF090] + 8);
    v17 = *(_QWORD *)(MEMORY[0x24BDBF090] + 16);
    v18 = *(_QWORD *)(MEMORY[0x24BDBF090] + 24);
    v19 = *MEMORY[0x24BDBEFB0];
    v20 = *(_QWORD *)(MEMORY[0x24BDBEFB0] + 8);
    sub_22758C978();
    v21 = &v7[v1[5]];
    *(_QWORD *)v21 = v15;
    *((_QWORD *)v21 + 1) = v16;
    *((_QWORD *)v21 + 2) = v17;
    *((_QWORD *)v21 + 3) = v18;
    v22 = &v7[v1[6]];
    *(_QWORD *)v22 = v15;
    *((_QWORD *)v22 + 1) = v16;
    *((_QWORD *)v22 + 2) = v17;
    *((_QWORD *)v22 + 3) = v18;
    v23 = &v7[v1[7]];
    *(_QWORD *)v23 = v19;
    *((_QWORD *)v23 + 1) = v20;
    v24 = &v7[v1[8]];
    *(_QWORD *)v24 = v19;
    *((_QWORD *)v24 + 1) = v20;
    *(_QWORD *)&v7[v1[9]] = 0;
    v25 = &v7[v1[10]];
    *(_DWORD *)v25 = 0;
    v25[4] = 1;
    v26 = &v7[v1[11]];
    *((_OWORD *)v26 + 4) = 0u;
    *((_OWORD *)v26 + 5) = 0u;
    *((_OWORD *)v26 + 2) = 0u;
    *((_OWORD *)v26 + 3) = 0u;
    *(_OWORD *)v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *(_QWORD *)&v7[v1[12]] = 0;
    v27 = (uint64_t)&v14[v8[5]];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6860);
    v29 = *(int *)(v28 + 48);
    v30 = *(int *)(v28 + 64);
    sub_22730DEEC((uint64_t)v7, v27, type metadata accessor for DetectedDoor);
    *(_QWORD *)(v27 + v29) = MEMORY[0x24BEE4AF8];
    *(_DWORD *)(v27 + v30) = 0;
    type metadata accessor for MAGOutputEvent.EventType(0);
    swift_storeEnumTagMultiPayload();
    sub_22758C978();
    v14[v8[6]] = 1;
    v14[v8[7]] = 0;
    sub_22730DFB0((uint64_t)v7, type metadata accessor for DetectedDoor);
    sub_2273C9264((uint64_t)v14);
    sub_22730DFB0((uint64_t)v14, type metadata accessor for MAGOutputEvent);
    v31 = (char *)sub_2274E4588();
    v32 = &v31[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0xE000000000000000;

    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor);
    v34 = OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator;
    objc_msgSend(*(id *)(v33 + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator), sel_setUseHapticFeedback_, 0);
    objc_msgSend(*(id *)(v33 + v34), sel_setUseSoundFeedback_, 0);
    v35 = sub_2274E4250();
    v36 = objc_msgSend(v35, sel_view);
    if (v36)
    {
      v37 = v36;
      objc_msgSend(v36, sel_alpha);
      v39 = v38;

      if (v39 == 0.0)
      {
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v41 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v42 = (void *)sub_22758E1B4();
        v43 = (void *)sub_22758E1B4();
        v44 = objc_msgSend(v41, sel_localizedStringForKey_value_table_, v42, 0, v43);

        v45 = sub_22758E1E4();
        v47 = v46;

        v54[0] = v45;
        v54[1] = v47;
        sub_22731236C();
        v48 = sub_22758EA6C();
        v50 = v49;
        v51 = sub_2274E51C0();
        v52 = sub_2274E5324();
        sub_2274E2410(v48, v50, v51, v52);
        swift_bridgeObjectRelease();

        v53 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        UIAccessibilitySpeakAndDoNotBeInterrupted();

      }
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if (LOBYTE(v54[0]) == 1)
        sub_22734AC9C();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_22734AA48()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v1 = sub_22758DF20();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3, v4, v5, v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22758DF68();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v17 = (void *)sub_22758E79C();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_22734B77C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_8;
  v19 = _Block_copy(aBlock);
  v20 = v0;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, v2, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v16, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v1);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  v21 = *(void **)&v20[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView];
  if (v21)
  {
    v22 = v21;
    v23 = (void *)sub_22758E3C4();
    objc_msgSend(v22, sel_setAccessibilityElements_, v23);

  }
}

uint64_t sub_22734AC9C()
{
  uint64_t v0;
  id *v1;
  id v2;
  void *v3;

  sub_22730BA80(0, &qword_2558D6868);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsFrameSemantics_, 8))
  {
    v1 = (id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arService)
              + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
    swift_beginAccess();
    if (*v1)
    {
      v2 = objc_msgSend(*v1, sel_configuration);
      if (v2)
      {
        v3 = v2;
        objc_msgSend(v2, sel_setFrameSemantics_, (unint64_t)objc_msgSend(v2, sel_frameSemantics) & 0xFFFFFFFFFFFFFFF7);

      }
    }
  }
  return sub_227419510();
}

uint64_t sub_22734AD7C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + 88) = a8;
  *(double *)(v8 + 32) = a1;
  *(double *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 16) = a6;
  *(_QWORD *)(v8 + 24) = a7;
  sub_22758E49C();
  *(_QWORD *)(v8 + 48) = sub_22758E490();
  *(_QWORD *)(v8 + 56) = sub_22758E460();
  *(_QWORD *)(v8 + 64) = v9;
  return swift_task_switch();
}

uint64_t sub_22734ADF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_22734AE58;
  return sub_22749C33C(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 88), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_22734AE58(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22734AEB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  if (v1)
  {
    sub_22734F160(*(_QWORD *)(v0 + 80), *(void **)(v0 + 24), *(_BYTE *)(v0 + 88));
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_22734AF04(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id result;
  void *v25;
  double v26;
  double v27;
  double MinY;
  double Height;
  void *v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  CGPathRef v39;
  id v40;
  id v41;
  id v42;
  id v43;
  double v44;
  double v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  double v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  CGPathRef v56;
  double v57;
  double v58;
  double v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v7 = v6;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5758]), sel_init);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5758]), sel_init);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  v15 = qword_2540B9100;
  v16 = swift_bridgeObjectRetain();
  if (v15 != -1)
    v16 = swift_once();
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v57, v58, v59, 1.0);
  v60.origin.x = a1;
  v60.origin.y = a2;
  v60.size.width = a3;
  v60.size.height = a4;
  v56 = CGPathCreateWithRoundedRect(v60, 16.0, 16.0, 0);
  if (qword_2558D4BA0 != -1)
    swift_once();
  v55 = v7;
  if (byte_2558DAEE0 != 1)
    goto LABEL_17;
  v22 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v23 = objc_msgSend(v22, sel_orientation);

  if (v23 == (id)4)
  {
    result = objc_msgSend(v7, sel_view);
    if (result)
    {
      v25 = result;
      objc_msgSend(result, sel_bounds);
      v27 = v26;

      v61.origin.x = a1;
      v61.origin.y = a2;
      v61.size.width = a3;
      v61.size.height = a4;
      MinY = CGRectGetMinY(v61);
      v62.origin.x = a1;
      v62.origin.y = a2;
      v62.size.width = a3;
      v62.size.height = a4;
      Height = CGRectGetHeight(v62);
      result = objc_msgSend(v7, sel_view);
      if (result)
      {
        v30 = result;
        v31 = v27 - MinY - Height;
LABEL_16:
        objc_msgSend(v30, sel_bounds);
        v35 = v34;

        v64.origin.x = a1;
        v64.origin.y = a2;
        v64.size.width = a3;
        v64.size.height = a4;
        v36 = v35 - CGRectGetMinX(v64);
        v65.origin.x = a1;
        v65.origin.y = a2;
        v65.size.width = a3;
        v65.size.height = a4;
        v37 = v36 - CGRectGetWidth(v65);
        v66.origin.x = a1;
        v66.origin.y = a2;
        v66.size.width = a3;
        v66.size.height = a4;
        v38 = CGRectGetHeight(v66);
        v67.origin.x = a1;
        v67.origin.y = a2;
        v67.size.width = a3;
        v67.size.height = a4;
        v68.size.height = CGRectGetWidth(v67);
        v68.origin.x = v31;
        v68.origin.y = v37;
        v68.size.width = v38;
        v39 = CGPathCreateWithRoundedRect(v68, 16.0, 16.0, 0);

        v56 = v39;
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (byte_2558DAEE0 == 1)
  {
    v32 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v33 = objc_msgSend(v32, sel_orientation);

    if (v33 == (id)3)
    {
      v63.origin.x = a1;
      v63.origin.y = a2;
      v63.size.width = a3;
      v63.size.height = a4;
      v31 = CGRectGetMinY(v63);
      result = objc_msgSend(v7, sel_view);
      if (result)
      {
        v30 = result;
        goto LABEL_16;
      }
LABEL_25:
      __break(1u);
      return result;
    }
  }
LABEL_17:
  objc_msgSend(v14, sel_setPath_, v56);
  v40 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v14, sel_setFillColor_, v40);

  v41 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v14, sel_setStrokeColor_, v41);

  v42 = v14;
  v43 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v42, sel_setBorderColor_, v43);

  if (a6)
    v44 = 1.5;
  else
    v44 = 5.0;
  objc_msgSend(v42, sel_setLineWidth_, v44);
  LODWORD(v45) = 1045220557;
  objc_msgSend(v42, sel_setOpacity_, v45);
  objc_msgSend(v42, sel_setCornerRadius_, 16.0);
  objc_msgSend(v54, sel_setPath_, v56);
  v46 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v47 = objc_msgSend(v46, sel_CGColor);

  objc_msgSend(v54, sel_setFillColor_, v47);
  v48 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v54, sel_setStrokeColor_, v48);

  v49 = v54;
  v50 = objc_msgSend(v21, sel_CGColor);
  objc_msgSend(v49, sel_setBorderColor_, v50);

  objc_msgSend(v49, sel_setLineWidth_, v44);
  LODWORD(v51) = 1.0;
  objc_msgSend(v49, sel_setOpacity_, v51);
  objc_msgSend(v49, sel_setCornerRadius_, 16.0);
  objc_msgSend(v13, sel_addSublayer_, v42);
  objc_msgSend(v13, sel_addSublayer_, v49);
  objc_msgSend(v13, sel_setDrawsAsynchronously_, 1);
  v52 = *(void **)&v55[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_detectionModeView];
  if (v52)
  {
    v53 = objc_msgSend(v52, sel_layer);
    objc_msgSend(v53, sel_insertSublayer_atIndex_, v13, 0);

    v49 = v21;
    v21 = v53;
  }

  return v13;
}

id sub_22734B614(uint64_t a1)
{
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t i;
  id v8;
  void *v9;

  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionDoorBoxLayers);
  swift_beginAccess();
  v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    *v3 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    return objc_msgSend(v2, sel_commit);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_22758ECE8();
  v5 = (uint64_t)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x2276B2BEC](i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, sel_removeFromSuperlayer);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22734B758()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_22734B77C()
{
  uint64_t v0;

  return sub_22734B614(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_22734B79C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v1 = sub_22758DF20();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v23 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3, v4, v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22758DF68();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v17 = (void *)sub_22758E79C();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_22734F3EC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_26;
  v19 = _Block_copy(aBlock);
  v20 = v0;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, v2, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v16, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

id sub_22734B998(char *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id result;
  uint64_t i;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v60;
  uint64_t v61;
  double *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  float v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  uint64_t v71;
  uint64_t v72;
  float v73;
  _QWORD *v74;
  CGFloat v75;
  double v76;
  char *v77;
  unint64_t v78;
  CGFloat *v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  void *v84;
  double v85;
  double v86;
  double v87;
  double v88;
  CGFloat tx;
  CGFloat ty;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  double x;
  double y;
  double width;
  double height;
  uint64_t v98;
  CGFloat v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  CGFloat *v111;
  char isUniquelyReferenced_nonNull_native;
  id v113;
  id v114;
  char *v115;
  void *v116;
  id v117;
  unint64_t v118;
  void *v119;
  uint64_t v120;
  char *v121;
  void *v122;
  void *v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  id *v129;
  id v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  CGFloat *v143;
  int v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, _QWORD, uint64_t, int *);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  double *v155;
  _QWORD *v156;
  int *v157;
  void *v158;
  float v159;
  __int128 v160;
  __int128 v161;
  CGAffineTransform v162;
  CGAffineTransform t2;
  CGAffineTransform t1;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  CGRect v169;
  CGRect v170;

  v144 = a4;
  v158 = a3;
  v147 = a2;
  v141 = type metadata accessor for MAGOutputEvent(0);
  MEMORY[0x24BDAC7A8](v141, v5, v6, v7, v8);
  v142 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DetectedDoor(0);
  v148 = *((_QWORD *)v10 - 1);
  v15 = MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v146 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17, v18, v19, v20);
  v22 = (char **)((char *)&v140 - v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6880);
  v28 = MEMORY[0x24BDAC7A8](v23, v24, v25, v26, v27);
  v156 = (uint64_t *)((char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v28, v30, v31, v32, v33);
  v155 = (double *)((char *)&v140 - v34);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6888);
  v40 = MEMORY[0x24BDAC7A8](v35, v36, v37, v38, v39);
  v145 = (char *)&v140 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v42, v43, v44, v45);
  v152 = (uint64_t)&v140 - v46;
  v47 = a1;
  v48 = &a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionDoorBoxLayers];
  swift_beginAccess();
  v49 = *(_QWORD *)v48;
  if (*(_QWORD *)v48 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_22758ECE8();
    v50 = (uint64_t)result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (!v50)
      goto LABEL_10;
  }
  if (v50 < 1)
  {
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  for (i = 0; i != v50; ++i)
  {
    if ((v49 & 0xC000000000000001) != 0)
      v53 = (id)MEMORY[0x2276B2BEC](i, v49);
    else
      v53 = *(id *)(v49 + 8 * i + 32);
    v54 = v53;
    objc_msgSend(v53, sel_removeFromSuperlayer);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  v55 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v48 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v168 = v55;
  v56 = v147;
  if (*(_QWORD *)(v147 + 16))
  {
    v57 = v148;
    v58 = v152;
    sub_22730DEEC(v147 + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80)), v152, type metadata accessor for DetectedDoor);
    v59 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v57 + 56);
    v60 = v58;
    v61 = 0;
  }
  else
  {
    v59 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v148 + 56);
    v60 = v152;
    v61 = 1;
  }
  v149 = v59;
  v59(v60, v61, 1, v10);
  v62 = v155;
  v166 = 0;
  v167 = 0;
  v165 = v56;
  v153 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDetectionService;
  v63 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorDecorationsCache;
  v154 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView;
  swift_bridgeObjectRetain();
  v64 = v156;
  sub_227446678(v156);
  sub_22731A160((uint64_t)v64, (uint64_t)v62, &qword_2558D6880);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CC0);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v62, 1, v65) != 1)
  {
    v72 = 0;
    v143 = (CGFloat *)&v47[v63];
    v73 = 3.4028e38;
    v151 = MEMORY[0x24BEE4AD8] + 8;
    v157 = v10;
    v150 = v48;
    while (1)
    {
      v159 = v73;
      v75 = *v62;
      sub_22730DFEC((uint64_t)v62 + *(int *)(v65 + 48), (uint64_t)v22, type metadata accessor for DetectedDoor);
      v77 = (char *)v22 + v10[10];
      if ((v77[4] & 1) != 0 || (LODWORD(v76) = *(_DWORD *)v77, *(float *)v77 > 4.0))
      {
        v78 = sub_22749E508(v158, *(CGFloat *)((char *)v22 + v10[6]), *(CGFloat *)((char *)v22 + v10[6] + 8), *(CGFloat *)((char *)v22 + v10[6] + 16), *(CGFloat *)((char *)v22 + v10[6] + 24));
        *(_DWORD *)v77 = v78;
        v77[4] = BYTE4(v78) & 1;
      }
      v79 = (CGFloat *)((char *)v22 + v10[6]);
      v80 = *v79;
      v81 = v79[1];
      v82 = v79[2];
      v83 = v79[3];
      result = objc_msgSend(v47, sel_view, v76);
      if (!result)
        goto LABEL_61;
      v84 = result;
      objc_msgSend(result, sel_bounds);
      v86 = v85;
      v88 = v87;

      objc_msgSend(v158, sel_displayTransformForOrientation_viewportSize_, 1, v86, v88);
      v161 = *(_OWORD *)&t1.a;
      v160 = *(_OWORD *)&t1.c;
      tx = t1.tx;
      ty = t1.ty;
      CGAffineTransformMakeScale(&t1, v86, v88);
      v91 = *(_OWORD *)&t1.a;
      v92 = *(_OWORD *)&t1.c;
      v93 = *(_OWORD *)&t1.tx;
      *(_OWORD *)&t1.a = v161;
      *(_OWORD *)&t1.c = v160;
      t1.tx = tx;
      t1.ty = ty;
      *(_OWORD *)&t2.a = v91;
      *(_OWORD *)&t2.c = v92;
      *(_OWORD *)&t2.tx = v93;
      CGAffineTransformConcat(&v162, &t1, &t2);
      t1 = v162;
      v169.origin.x = v80;
      v169.origin.y = v81;
      v169.size.width = v82;
      v169.size.height = v83;
      v170 = CGRectApplyAffineTransform(v169, &t1);
      x = v170.origin.x;
      y = v170.origin.y;
      width = v170.size.width;
      height = v170.size.height;
      if (AXIsInternalInstall())
      {
        sub_22734C744((uint64_t)v22, x, y, width, height);
        if (qword_2540B87B8 != -1)
          swift_once();
        v98 = qword_2540BCDD0
            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__doorDetectionDecorations;
        swift_beginAccess();
        v99 = *(double *)(v98 + 8);
        v100 = *(_BYTE *)(v98 + 16);
        t1.a = *(CGFloat *)v98;
        t1.b = v99;
        LOBYTE(t1.c) = v100;
        v101 = qword_2540B9100;
        v102 = swift_bridgeObjectRetain();
        if (v101 != -1)
          v102 = swift_once();
        MEMORY[0x24BDAC7A8](v102, v103, v104, v105, v106);
        *(&v140 - 2) = (uint64_t)&t1;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        if (LOBYTE(t2.a) == 1)
        {
          v107 = *(uint64_t *)((char *)v22 + v10[12]);
          if (v107)
          {
            if (*(_QWORD *)(v107 + 16))
            {
              t1.a = v75;
              swift_bridgeObjectRetain();
              v108 = sub_22758EE2C();
              v110 = v109;
              *(_QWORD *)&v161 = v72;
              v111 = v143;
              swift_beginAccess();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              t2.a = *v111;
              *v111 = -0.0;
              sub_227586D34(v107, v108, v110, isUniquelyReferenced_nonNull_native);
              *v111 = t2.a;
              v48 = v150;
              v72 = v161;
              v10 = v157;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
            }
          }
        }
      }
      if (qword_2540B87B8 != -1)
        swift_once();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if (LOBYTE(t1.a) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22734AA48();
        sub_22730DFB0((uint64_t)v22, type metadata accessor for DetectedDoor);
        v71 = v152;
        return (id)sub_22734F43C(v71);
      }
      v113 = sub_22734AF04(x, y, width, height, (uint64_t)v22, *(uint64_t *)&v75);
      swift_beginAccess();
      v114 = v113;
      MEMORY[0x2276B23C4]();
      if (*(_QWORD *)((*(_QWORD *)v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v48 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_22758E400();
      sub_22758E424();
      sub_22758E3F4();
      swift_endAccess();
      v115 = sub_22734D0F0(v22, x, y, width, height);
      MEMORY[0x2276B23C4]();
      if (*(_QWORD *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_22758E400();
      sub_22758E424();
      sub_22758E3F4();
      v116 = *(void **)&v47[v154];
      v73 = v159;
      if (v116)
      {
        v117 = v116;
        v118 = swift_bridgeObjectRetain();
        sub_227575E60(v118);
        swift_bridgeObjectRelease();
        v119 = (void *)sub_22758E3C4();
        v10 = v157;
        swift_bridgeObjectRelease();
        objc_msgSend(v117, sel_setAccessibilityElements_, v119);

      }
      if ((v77[4] & 1) != 0)
      {
        v66 = 3.4028e38;
        if (v73 > 3.4028e38)
          goto LABEL_51;
      }
      else
      {
        v66 = *(float *)v77;
        if (*(float *)v77 < v73)
        {
LABEL_51:
          v120 = v152;
          sub_22734F43C(v152);
          sub_22730DEEC((uint64_t)v22, v120, type metadata accessor for DetectedDoor);
          v149(v120, 0, 1, v10);
          v121 = (char *)sub_2274E4588();
          sub_22734F51C((uint64_t)v22);
          v123 = v122;
          v124 = objc_msgSend(v122, sel_string);

          v125 = sub_22758E1E4();
          v127 = v126;

          v10 = v157;
          v48 = v150;
          sub_22730DFB0((uint64_t)v22, type metadata accessor for DetectedDoor);
          v128 = (uint64_t *)&v121[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
          *v128 = v125;
          v128[1] = v127;

          swift_bridgeObjectRelease();
          v73 = v66;
          goto LABEL_24;
        }
      }
      sub_22730DFB0((uint64_t)v22, type metadata accessor for DetectedDoor);

      v66 = v73;
LABEL_24:
      v74 = v156;
      sub_227446678(v156);
      v62 = v155;
      sub_22731A160((uint64_t)v74, (uint64_t)v155, &qword_2558D6880);
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5CC0);
      if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v62, 1, v65) == 1)
        goto LABEL_15;
    }
  }
  v66 = 3.4028e38;
LABEL_15:
  swift_bridgeObjectRelease();
  result = (id)swift_bridgeObjectRelease();
  v67 = (uint64_t)v146;
  v68 = v152;
  v69 = (uint64_t)v145;
  if (v66 >= 3.4028e38)
  {
LABEL_20:
    sub_22734F3F4(v68, v69);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v148 + 48))(v69, 1, v10) == 1)
    {
      sub_22734F43C(v68);
      v71 = v69;
    }
    else
    {
      sub_22730DFEC(v69, v67, type metadata accessor for DetectedDoor);
      if ((v144 & 1) != 0)
      {
        v129 = (id *)(*(_QWORD *)&v47[v153]
                    + OBJC_IVAR____TtC16MagnifierSupport23MAGDoorDetectionService_openStateConfidenceThreshold);
        swift_beginAccess();
        v130 = *v129;
        sub_22758E58C();
        v132 = v131;

        v133 = v141;
        v134 = (uint64_t)v142;
        v135 = (uint64_t)&v142[*(int *)(v141 + 20)];
        v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6860);
        v137 = v68;
        v138 = *(int *)(v136 + 48);
        v139 = *(int *)(v136 + 64);
        sub_22730DEEC(v67, v135, type metadata accessor for DetectedDoor);
        *(_QWORD *)(v135 + v138) = v147;
        *(_DWORD *)(v135 + v139) = v132;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        sub_22758C978();
        *(_BYTE *)(v134 + *(int *)(v133 + 24)) = 1;
        *(_BYTE *)(v134 + *(int *)(v133 + 28)) = 0;
        sub_2273C9264(v134);
        sub_22730DFB0(v134, type metadata accessor for MAGOutputEvent);
        sub_22730DFB0(v67, type metadata accessor for DetectedDoor);
        v71 = v137;
      }
      else
      {
        sub_22730DFB0(v67, type metadata accessor for DetectedDoor);
        v71 = v68;
      }
    }
    return (id)sub_22734F43C(v71);
  }
  v70 = v66 * 1000.0;
  if ((~COERCE_INT(v66 * 1000.0) & 0x7F800000) == 0)
    goto LABEL_58;
  if (v70 <= -2147500000.0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v70 < 2147500000.0)
  {
    sub_2274C5E9C((int)v70);
    goto LABEL_20;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_22734C744(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t result;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double *v73;
  uint64_t *v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  double v94;
  double v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  int v112;
  int v113;
  unint64_t v114;
  int v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  _QWORD v140[12];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6890);
  v134 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v133 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6898);
  v22 = MEMORY[0x24BDAC7A8](v17, v18, v19, v20, v21);
  v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25, v26, v27, v28);
  v30 = (char *)&v105 - v29;
  v128 = sub_22758C930();
  v127 = *(_QWORD *)(v128 - 8);
  v35 = MEMORY[0x24BDAC7A8](v128, v31, v32, v33, v34);
  v126 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35, v37, v38, v39, v40);
  v135 = (char *)&v105 - v41;
  v42 = type metadata accessor for DoorAttributesCacheItem(0);
  v43 = *(_QWORD *)(v42 - 8);
  v48 = MEMORY[0x24BDAC7A8](v42, v44, v45, v46, v47);
  v50 = (char *)&v105 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48, v51, v52, v53, v54);
  v56 = (char *)&v105 - v55;
  result = type metadata accessor for DetectedDoor(0);
  v58 = (uint64_t *)(a1 + *(int *)(result + 44));
  v59 = v58[10];
  if (v59)
  {
    v131 = v11;
    v138 = v43;
    v130 = (uint64_t *)v30;
    v132 = v24;
    v110 = v58[9];
    v137 = v42;
    v136 = v5;
    v60 = v58[8];
    v109 = v58[7];
    v61 = v58[5];
    v62 = v58[6];
    v63 = v58[3];
    v64 = v58[4];
    v65 = *v58;
    v66 = v58[1];
    v114 = HIDWORD(*v58);
    v116 = HIDWORD(v66);
    v111 = v63;
    v105 = v58[2];
    v67 = v105;
    v117 = HIDWORD(v105);
    v118 = HIDWORD(v63);
    v120 = HIDWORD(v64);
    v121 = HIDWORD(v61);
    v122 = HIDWORD(v62);
    v108 = v62;
    v123 = (char *)HIDWORD(v109);
    v124 = HIDWORD(v60);
    v125 = HIDWORD(v110);
    v112 = v65 & 1;
    v113 = v64 & 1;
    v115 = v61 & 1;
    v119 = v60 & 1;
    v107 = v58[11];
    v106 = v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D28);
    v68 = swift_allocObject();
    v129 = v50;
    v69 = v68;
    *(_OWORD *)(v68 + 16) = xmmword_227593AB0;
    *(_OWORD *)(v68 + 32) = 0u;
    v140[0] = v65;
    v140[1] = v66;
    v140[2] = v67;
    LOBYTE(v67) = v111;
    v140[3] = v111;
    v140[4] = v64;
    v140[5] = v61;
    v140[6] = v62;
    LOBYTE(v65) = v109;
    v140[7] = v109;
    v140[8] = v60;
    LOBYTE(v62) = v110;
    v70 = v106;
    v140[9] = v110;
    v140[10] = v106;
    v71 = v107;
    v140[11] = v107;
    sub_22734F80C((uint64_t)v140);
    sub_22758C924();
    *v56 = v112;
    *((_DWORD *)v56 + 1) = v114;
    v56[8] = v66;
    *((_DWORD *)v56 + 3) = v116;
    v56[16] = v105;
    *((_DWORD *)v56 + 5) = v117;
    v56[24] = v67;
    *((_DWORD *)v56 + 7) = v118;
    v56[32] = v113;
    *((_DWORD *)v56 + 9) = v120;
    v56[40] = v115;
    *((_DWORD *)v56 + 11) = v121;
    v56[48] = v108;
    *((_DWORD *)v56 + 13) = v122;
    v56[56] = v65;
    *((_DWORD *)v56 + 15) = (_DWORD)v123;
    v56[64] = v119;
    *((_DWORD *)v56 + 17) = v124;
    v56[72] = v62;
    *((_DWORD *)v56 + 19) = v125;
    *((_QWORD *)v56 + 10) = v70;
    *((_QWORD *)v56 + 11) = v71;
    *((_OWORD *)v56 + 6) = 0u;
    *((_QWORD *)v56 + 14) = v69;
    v72 = (uint64_t)v129;
    v73 = (double *)&v56[*(int *)(v137 + 32)];
    *v73 = a2;
    v73[1] = a3;
    v73[2] = a4;
    v73[3] = a5;
    v123 = v56;
    sub_22730DEEC((uint64_t)v56, v72, type metadata accessor for DoorAttributesCacheItem);
    v74 = (uint64_t *)(v136 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_doorAttributesCache);
    swift_beginAccess();
    v75 = *v74;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v74 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_38:
      v75 = sub_2273A51FC(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
      *v74 = v75;
    }
    v78 = *(_QWORD *)(v75 + 16);
    v77 = *(_QWORD *)(v75 + 24);
    v79 = v138;
    if (v78 >= v77 >> 1)
    {
      v75 = sub_2273A51FC(v77 > 1, v78 + 1, 1, v75);
      *v74 = v75;
    }
    *(_QWORD *)(v75 + 16) = v78 + 1;
    v80 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    v81 = *(_QWORD *)(v79 + 72);
    sub_22730DFEC(v72, v75 + v80 + v81 * v78, type metadata accessor for DoorAttributesCacheItem);
    swift_endAccess();
    sub_22758C924();
    v82 = *v74;
    v72 = *(_QWORD *)(*v74 + 16);
    v138 = v80;
    v129 = (char *)(v82 + v80);
    v136 = v82;
    swift_bridgeObjectRetain();
    v83 = 0;
    v124 = 0;
    v125 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v72)
      {
        --v72;
        v84 = v132;
        v85 = v131;
        if (v72 >= *(_QWORD *)(v136 + 16))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v75 = (uint64_t)&v133[*(int *)(v131 + 48)];
        sub_22730DEEC((uint64_t)&v129[v72 * v81], v75, type metadata accessor for DoorAttributesCacheItem);
        v86 = v130;
        if (__OFADD__(v83, 1))
          goto LABEL_37;
        v87 = (uint64_t)v84 + *(int *)(v85 + 48);
        *v84 = v83;
        sub_22730DFEC(v75, v87, type metadata accessor for DoorAttributesCacheItem);
        v88 = 0;
        ++v83;
      }
      else
      {
        v88 = 1;
        v84 = v132;
        v86 = v130;
        v85 = v131;
      }
      v89 = v134;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v84, v88, 1, v85);
      sub_22731A160((uint64_t)v84, (uint64_t)v86, &qword_2558D6898);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v89 + 48))(v86, 1, v85) == 1)
        break;
      v90 = *v86;
      v75 = (uint64_t)v86 + *(int *)(v85 + 48);
      v91 = v127;
      v92 = v126;
      v93 = v128;
      (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v126, v75 + *(int *)(v137 + 28), v128);
      sub_22730DFB0(v75, type metadata accessor for DoorAttributesCacheItem);
      sub_22758C8A0();
      v95 = v94;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
      if (v95 > 1.0)
      {
        v96 = (_QWORD *)v125;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v96 = sub_2273A4D58(0, v96[2] + 1, 1, v96);
        v75 = v96[2];
        v97 = v96[3];
        if (v75 >= v97 >> 1)
          v96 = sub_2273A4D58((_QWORD *)(v97 > 1), v75 + 1, 1, v96);
        v96[2] = v75 + 1;
        v125 = (uint64_t)v96;
        v96[v75 + 4] = v90;
      }
    }
    swift_bridgeObjectRelease();
    v139 = v125;
    swift_bridgeObjectRetain();
    v98 = v124;
    sub_22734E3C8(&v139);
    if (v98)
      goto LABEL_40;
    swift_bridgeObjectRelease();
    v99 = v139;
    v75 = *(_QWORD *)(v139 + 16);
    if (v75)
    {
      while (1)
      {
        if (v75 > *(_QWORD *)(v99 + 16))
        {
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v72 = *(_QWORD *)(v99 + 24 + 8 * v75);
        swift_beginAccess();
        v100 = *v74;
        v101 = swift_isUniquelyReferenced_nonNull_native();
        *v74 = v100;
        if ((v101 & 1) == 0)
        {
          v100 = sub_22738D21C(v100);
          *v74 = v100;
        }
        v102 = *(_QWORD *)(v100 + 16);
        if (v72 >= v102)
          goto LABEL_35;
        v103 = v102 - 1;
        v104 = v100 + v138 + v72 * v81;
        sub_22730DFB0(v104, type metadata accessor for DoorAttributesCacheItem);
        if ((uint64_t)(v103 - v72) < 0)
          break;
        if (v81 > 0 || v104 >= v104 + v81 + (v103 - v72) * v81)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v81)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        --v75;
        *(_QWORD *)(v100 + 16) = v103;
        *v74 = v100;
        swift_endAccess();
        if (!v75)
          goto LABEL_32;
      }
      sub_22758ED24();
      __break(1u);
LABEL_40:
      result = swift_release();
      __break(1u);
      return result;
    }
LABEL_32:
    swift_release();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v135, v128);
    return sub_22730DFB0((uint64_t)v123, type metadata accessor for DoorAttributesCacheItem);
  }
  return result;
}

char *sub_22734D0F0(char **i, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char **v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  int64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  char **v78;
  char *v79;
  char **v80;
  char *v81;
  char *v82;
  id v83;
  char **v84;
  char *result;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  char *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  void *v110;
  unint64_t v111;
  int64_t v112;
  uint64_t v113;
  int64_t v114;
  void *v115;
  char v116;
  uint64_t v117;
  char v118;
  char v119;
  char v120;

  v11 = *(void **)(v5 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  v12 = objc_allocWithZone((Class)type metadata accessor for DoorUIAccessibilityElement());
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D68A0);
  v14 = objc_msgSend(v12, sel_initWithAccessibilityContainer_, sub_22758EE98());

  swift_unknownObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = (char *)v14;
  v17 = objc_msgSend(v15, sel_bezierPathWithRoundedRect_cornerRadius_, a2, a3, a4, a5, 16.0);
  objc_msgSend(v16, sel_setAccessibilityPath_, v17);

  sub_22734F484((uint64_t)i);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v20 = (void *)sub_22758E1B4();
  v21 = (void *)sub_22758E1B4();
  v22 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, 0, v21);

  sub_22758E1E4();
  swift_bridgeObjectRetain();
  sub_22758E2B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22758E2B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22734F51C((uint64_t)i);
  v24 = v23;
  if (qword_2540B87B8 != -1)
LABEL_54:
    swift_once();
  v110 = v24;
  swift_beginAccess();
  v25 = qword_2540B9100;
  v26 = swift_bridgeObjectRetain();
  if (v25 != -1)
    v26 = swift_once();
  MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  if ((v120 & 1) == 0)
  {
    v31 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
    swift_bridgeObjectRetain();
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if ((v119 & 1) == 0)
    {
      v36 = v16;
      v37 = (void *)sub_22758E1B4();
      objc_msgSend(v36, sel_setAccessibilityLabel_, v37);

      sub_22730BA80(0, (unint64_t *)&unk_2558D68A8);
      v38 = (void *)sub_22758E3C4();
      objc_msgSend(v36, sel_setAccessibilityCustomContent_, v38);

    }
  }
  v39 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v39, v40, v41, v42, v43);
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  v44 = v110;
  if (v118 == 1)
  {
    v45 = *(uint64_t *)((char *)i + *(int *)(type metadata accessor for DetectedDoor(0) + 48));
    if (v45)
    {
      v46 = v16;
      sub_22734F840(v45);
      sub_22730BA80(0, (unint64_t *)&unk_2558D68A8);
      v47 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setAccessibilityCustomContent_, v47);

      v48 = objc_allocWithZone(MEMORY[0x24BDD1688]);
      swift_bridgeObjectRetain();
      v49 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      v50 = objc_msgSend(v48, sel_initWithString_, v49);

      v51 = sub_2273503A8(v45);
      if ((uint64_t)objc_msgSend(v51, sel_length) >= 1)
      {
        v52 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v53 = (void *)sub_22758E1B4();
        v54 = objc_msgSend(v52, sel_initWithString_, v53);

        objc_msgSend(v50, sel_appendAttributedString_, v54);
        objc_msgSend(v50, sel_appendAttributedString_, v51);
      }
      objc_msgSend(v46, sel_setAccessibilityAttributedLabel_, v50);

      v44 = v110;
    }
  }
  v55 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v55, v56, v57, v58, v59);
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  if (v117 != 1)
    goto LABEL_46;
  v60 = &selRef_session_didUpdateDetectedObjects_;
  if (!*(char **)((char *)i + *(int *)(type metadata accessor for DetectedDoor(0) + 44) + 80))
  {
LABEL_43:
    v88 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v88, v89, v90, v91, v92);
    swift_bridgeObjectRetain();
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if (v116 == 1)
    {
      v93 = objc_allocWithZone(MEMORY[0x24BDD1688]);
      v94 = (void *)sub_22758E1B4();
      v95 = objc_msgSend(v93, v60[336], v94);

      v96 = objc_msgSend(v16, sel_accessibilityAttributedLabel);
      if (v96)
      {
        v97 = v96;
        swift_bridgeObjectRelease();
        v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_initWithAttributedString_, v97);
      }
      else
      {
        v99 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v97 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        v98 = objc_msgSend(v99, v60[336], v97);
      }
      v100 = v98;

      if ((uint64_t)objc_msgSend(v44, sel_length) >= 1)
      {
        v101 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v102 = (void *)sub_22758E1B4();
        v103 = objc_msgSend(v101, v60[336], v102);

        objc_msgSend(v100, sel_appendAttributedString_, v103);
        objc_msgSend(v100, sel_appendAttributedString_, v44);
        v104 = v16;
        objc_msgSend(v104, sel_setAccessibilityAttributedLabel_, v100);

      }
      goto LABEL_51;
    }
LABEL_46:
    swift_bridgeObjectRelease();
LABEL_51:
    v105 = objc_msgSend(v44, sel_string);
    v106 = sub_22758E1E4();
    v108 = v107;

    v109 = (uint64_t *)&v16[OBJC_IVAR____TtC16MagnifierSupport26DoorUIAccessibilityElement_textValue];
    *v109 = v106;
    v109[1] = v108;

    swift_bridgeObjectRelease();
    return v16;
  }
  v61 = sub_2274712A4();
  v24 = 0;
  v111 = v61 + 64;
  v62 = 1 << *(_BYTE *)(v61 + 32);
  v63 = -1;
  if (v62 < 64)
    v63 = ~(-1 << v62);
  v64 = v63 & *(_QWORD *)(v61 + 64);
  v112 = (unint64_t)(v62 + 63) >> 6;
  for (i = &selRef_session_didUpdateDetectedObjects_; ; i = v84)
  {
    if (v64)
    {
      v113 = (v64 - 1) & v64;
      v114 = (int64_t)v24;
    }
    else
    {
      v66 = (int64_t)v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      if (v66 >= v112)
        goto LABEL_42;
      v67 = *(_QWORD *)(v111 + 8 * v66);
      v68 = (int64_t)v24 + 1;
      if (!v67)
      {
        v68 = (int64_t)v24 + 2;
        if ((uint64_t)v24 + 2 >= v112)
          goto LABEL_42;
        v67 = *(_QWORD *)(v111 + 8 * v68);
        if (!v67)
        {
          v68 = (int64_t)v24 + 3;
          if ((uint64_t)v24 + 3 >= v112)
            goto LABEL_42;
          v67 = *(_QWORD *)(v111 + 8 * v68);
          if (!v67)
          {
            v69 = (uint64_t)v24 + 4;
            if ((uint64_t)v24 + 4 >= v112)
            {
LABEL_42:
              swift_release();
              v44 = v110;
              goto LABEL_43;
            }
            v67 = *(_QWORD *)(v111 + 8 * v69);
            if (!v67)
            {
              while (1)
              {
                v68 = v69 + 1;
                if (__OFADD__(v69, 1))
                  goto LABEL_53;
                if (v68 >= v112)
                  goto LABEL_42;
                v67 = *(_QWORD *)(v111 + 8 * v68);
                ++v69;
                if (v67)
                  goto LABEL_34;
              }
            }
            v68 = (int64_t)v24 + 4;
          }
        }
      }
LABEL_34:
      v113 = (v67 - 1) & v67;
      v114 = v68;
    }
    v70 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71 = (void *)sub_22758E1B4();
    v72 = objc_msgSend(v70, v60[336], v71);
    swift_bridgeObjectRelease();

    v73 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v74 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v75 = objc_msgSend(v73, v60[336], v74);

    v115 = v72;
    v76 = objc_msgSend((id)objc_opt_self(), sel_customContentWithAttributedLabel_attributedValue_, v72, v75);
    v77 = objc_msgSend(v16, i[346]);
    v78 = i;
    if (!v77)
    {
      sub_22730BA80(0, (unint64_t *)&unk_2558D68A8);
      v79 = v16;
      v77 = (id)sub_22758E3C4();
      objc_msgSend(v79, sel_setAccessibilityCustomContent_, v77);

    }
    v80 = v60;

    v81 = v16;
    v82 = v16;
    v83 = v76;
    v84 = v78;
    result = (char *)objc_msgSend(v82, (SEL)v78 + 3112);
    if (!result)
      break;
    v86 = result;
    sub_22730BA80(0, (unint64_t *)&unk_2558D68A8);
    v87 = sub_22758E3DC();

    v117 = v87;
    MEMORY[0x2276B23C4]();
    if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22758E400();
    sub_22758E424();
    sub_22758E3F4();
    if (v87)
    {
      v65 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v65 = 0;
    }
    v60 = v80;
    v24 = (void *)v114;
    v64 = v113;
    objc_msgSend(v82, sel_setAccessibilityCustomContent_, v65);

    v16 = v81;
  }
  __break(1u);
  return result;
}

uint64_t sub_22734DF5C(uint64_t a1)
{
  char *v2;
  char *v3;
  unsigned __int8 v5;

  sub_22734AA48();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor)+ OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator), sel_stopPulse);
  v2 = (char *)sub_2274E4588();
  v3 = &v2[OBJC_IVAR____TtC16MagnifierSupport17MFLivePreviewView_textValue];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;

  swift_bridgeObjectRelease();
  v5 = 2;
  return sub_2273D158C(&v5);
}

id sub_22734DFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t inited;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558DB0D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227593AB0;
  v9 = (void *)*MEMORY[0x24BEBDEE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBDEE0];
  v10 = *(unsigned __int8 *)(a5 + 48);
  if (v10 == 1)
  {
    v11 = v9;
    swift_bridgeObjectRetain();
    v12 = a3;
    v13 = a4;
  }
  else
  {
    v14 = (void *)objc_opt_self();
    v15 = v9;
    v16 = objc_msgSend(v14, sel_currentLanguageCode);
    v12 = sub_22758E1E4();
    v13 = v17;

  }
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = v13;
  sub_22731D264(inited);
  if ((sub_227438394(a3, a4, v10) & 1) != 0)
  {
    v18 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    sub_2273096F0((unint64_t *)&qword_2558D53F0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_2275963B4);
    v20 = (void *)sub_22758E10C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

id sub_22734E1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t inited;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558DB0D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227593AB0;
  v9 = (void *)*MEMORY[0x24BEBDEE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBDEE0];
  v10 = *(unsigned __int8 *)(a5 + *(int *)(type metadata accessor for DetectedTextBlock() + 32));
  if (v10 == 1)
  {
    v11 = v9;
    swift_bridgeObjectRetain();
    v12 = a3;
    v13 = a4;
  }
  else
  {
    v14 = (void *)objc_opt_self();
    v15 = v9;
    v16 = objc_msgSend(v14, sel_currentLanguageCode);
    v12 = sub_22758E1E4();
    v13 = v17;

  }
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = v13;
  sub_22731D264(inited);
  if ((sub_227438394(a3, a4, v10) & 1) != 0)
  {
    v18 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    sub_2273096F0((unint64_t *)&qword_2558D53F0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_2275963B4);
    v20 = (void *)sub_22758E10C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

uint64_t sub_22734E3C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_227467490(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_22734E430(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_22734E430(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_22758EE20();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_22734EAB8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_227467370((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_22758E418();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_227466C8C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_227466C8C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_22734EAB8((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_22758ECB8();
  __break(1u);
  return result;
}

uint64_t sub_22734EAB8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_2274670F8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_22758ED24();
  __break(1u);
  return result;
}

id sub_22734ED24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  id result;
  _OWORD v12[4];
  uint64_t v13;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v9;
  v13 = *(_QWORD *)(a2 + 64);
  v10 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v10;
  result = sub_22734DFFC(v5, v6, v7, v8, (uint64_t)v12);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_22734ED8C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_22734EDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pulseFeedbackProcessor);
  v3 = *(unsigned __int8 *)(v0 + 25);
  v4 = OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_doorToneGenerator), sel_setUseSoundFeedback_, v1);
  objc_msgSend(*(id *)(v2 + v4), sel_setUseHapticFeedback_, v3);
  return objc_msgSend(*(id *)(v2 + v4), sel_setDetectionType_, 1);
}

uint64_t sub_22734EE2C(void *a1, double a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  id v26;
  unsigned __int8 v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD v36[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (char *)&v36[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540B87B8 != -1)
    swift_once();
  v15 = (_QWORD *)(qword_2540BCDD0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedDoorDetectionFeedbacks);
  swift_beginAccess();
  v16 = v15[1];
  v17 = v15[2];
  v36[0] = *v15;
  v36[1] = v16;
  v36[2] = v17;
  v18 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  if (v18 != -1)
    v19 = swift_once();
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  *(&v35 - 2) = (uint64_t)v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D50);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = 1;
  v25 = sub_227367600(1, v36[3]);
  swift_bridgeObjectRelease();
  if (v25)
  {
    v26 = sub_2273CDCF0();
    v27 = objc_msgSend(v26, sel_isSpeaking);

    v24 = v27 ^ 1;
  }
  v28 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
  sub_22758E49C();
  v29 = v4;
  v30 = a1;
  v31 = sub_22758E490();
  v32 = swift_allocObject();
  v33 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = v33;
  *(_QWORD *)(v32 + 32) = v29;
  *(_QWORD *)(v32 + 40) = v30;
  *(double *)(v32 + 48) = a2;
  *(double *)(v32 + 56) = a3;
  *(_BYTE *)(v32 + 64) = v24;
  sub_227367B10((uint64_t)v14, (uint64_t)&unk_2558D6878, v32);
  return swift_release();
}

uint64_t sub_22734F098()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22734F0CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(double *)(v1 + 48);
  v9 = *(double *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_227319F84;
  return sub_22734AD7C(v8, v9, a1, v4, v5, v6, v7, v10);
}

uint64_t sub_22734F160(uint64_t a1, void *a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_22758DF20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22758DF68();
  v17 = *(_QWORD *)(v16 - 8);
  result = MEMORY[0x24BDAC7A8](v16, v18, v19, v20, v21);
  v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
      v31 = v9;
      swift_bridgeObjectRetain();
      v30 = sub_22758E79C();
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v4;
      *(_QWORD *)(v25 + 24) = a1;
      *(_QWORD *)(v25 + 32) = a2;
      *(_BYTE *)(v25 + 40) = a3 & 1;
      aBlock[4] = sub_22734F3DC;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227367AE4;
      aBlock[3] = &block_descriptor_20;
      v26 = _Block_copy(aBlock);
      v27 = v4;
      v28 = a2;
      swift_release();
      sub_22758DF44();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
      sub_22730DEA0();
      sub_22758EACC();
      v29 = (void *)v30;
      MEMORY[0x2276B27CC](0, v24, v15, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    }
    else
    {
      return sub_22734B79C();
    }
  }
  return result;
}

uint64_t sub_22734F3A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_22734F3DC()
{
  uint64_t v0;

  return sub_22734B998(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_22734F3EC()
{
  uint64_t v0;

  return sub_22734DF5C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22734F3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22734F43C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6888);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22734F484(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  float v5;

  v2 = type metadata accessor for DetectedDoor(0);
  result = 0;
  v4 = a1 + *(int *)(v2 + 40);
  if ((*(_BYTE *)(v4 + 4) & 1) == 0)
  {
    v5 = *(float *)v4 * 1000.0;
    if ((~LODWORD(v5) & 0x7F800000) != 0)
    {
      if (v5 > -2147500000.0)
      {
        if (v5 < 2147500000.0)
          return generateTextToDisplay(depth:longUnitStyle:)((int)v5, 0)._countAndFlagsBits;
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_22734F51C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  __int128 *v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v2 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  v5 = (__int128 *)(a1 + *(int *)(type metadata accessor for DetectedDoor(0) + 44));
  if (!*((_QWORD *)v5 + 10))
    return;
  v27 = *v5;
  v28 = v5[1];
  v29 = v5[2];
  v30 = v5[3];
  v31 = v5[4];
  v32 = *((_QWORD *)v5 + 10);
  v33 = *((_QWORD *)v5 + 11);
  v6 = sub_2274712A4();
  v7 = 0;
  v8 = v6 + 64;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v11 &= v11 - 1;
LABEL_23:
    v16 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    swift_bridgeObjectRetain();
    v17 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v16, sel_initWithString_, v17, v27, v28, v29, v30, v31, v32, v33);

    v19 = objc_msgSend(v4, sel_string);
    v20 = sub_22758E1E4();
    v22 = v21;

    if (!v20 && v22 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = sub_22758EE50();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        v24 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v25 = (void *)sub_22758E1B4();
        v26 = objc_msgSend(v24, sel_initWithString_, v25);

        objc_msgSend(v4, sel_appendAttributedString_, v26);
      }
    }
    objc_msgSend(v4, sel_appendAttributedString_, v18);

  }
  v13 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v12)
    goto LABEL_27;
  v14 = *(_QWORD *)(v8 + 8 * v13);
  ++v7;
  if (v14)
    goto LABEL_22;
  v7 = v13 + 1;
  if (v13 + 1 >= v12)
    goto LABEL_27;
  v14 = *(_QWORD *)(v8 + 8 * v7);
  if (v14)
    goto LABEL_22;
  v7 = v13 + 2;
  if (v13 + 2 >= v12)
    goto LABEL_27;
  v14 = *(_QWORD *)(v8 + 8 * v7);
  if (v14)
  {
LABEL_22:
    v11 = (v14 - 1) & v14;
    goto LABEL_23;
  }
  v15 = v13 + 3;
  if (v15 >= v12)
  {
LABEL_27:
    swift_release();
    return;
  }
  v14 = *(_QWORD *)(v8 + 8 * v15);
  if (v14)
  {
    v7 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v12)
      goto LABEL_27;
    v14 = *(_QWORD *)(v8 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_22734F80C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22734F840(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  id v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  uint64_t ObjCClassFromMetadata;
  id v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  _BYTE v94[16];
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  double v111;
  id v112;

  v2 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  v5 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v6 = (void *)sub_22758E1B4();
  v7 = objc_msgSend(v5, sel_initWithString_, v6);

  v8 = *(_QWORD *)(a1 + 16);
  v98 = v4;
  v99 = v7;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v97 = 0;
    v96 = a1;
    v9 = (id *)(a1 + 96);
    do
    {
      v13 = *((double *)v9 - 1);
      if (v13 <= 0.25)
      {
        v14 = (uint64_t)*(v9 - 8);
        v16 = (uint64_t)*(v9 - 7);
        v15 = (uint64_t)*(v9 - 6);
        v18 = (uint64_t)*(v9 - 5);
        v17 = (uint64_t)*(v9 - 4);
        v19 = (uint64_t)*(v9 - 3);
        v20 = *((_BYTE *)v9 - 16);
        v21 = *((unsigned __int8 *)v9 - 14);
        v22 = *v9;
        v23 = *((_BYTE *)v9 - 15);
        v100 = *v9;
        v101 = v14;
        swift_bridgeObjectRetain();
        if ((v23 & 1) != 0)
        {
          v24 = v99;
          v25 = (uint64_t)objc_msgSend(v99, sel_length);
          if (v25 >= 1)
          {
            v30 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v31 = (void *)sub_22758E1B4();
            v32 = objc_msgSend(v30, sel_initWithString_, v31);

            v4 = v98;
            objc_msgSend(v24, sel_appendAttributedString_, v32);

          }
          if (v21 == 4)
          {
            v33 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v34 = (void *)sub_22758E1B4();
            v12 = objc_msgSend(v33, sel_initWithString_, v34);
          }
          else
          {
            v102 = v101;
            v103 = v16;
            v104 = v15;
            v105 = v18;
            v106 = v17;
            v107 = v19;
            v108 = v20;
            v57 = v101;
            v109 = 1;
            v110 = v21;
            v111 = v13;
            v112 = v22;
            if (v101)
            {
              MEMORY[0x24BDAC7A8](v25, v26, v27, v28, v29);
              v95 = &v102;
              swift_bridgeObjectRetain();
              v58 = v97;
              v59 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_227350CB8, (uint64_t)v94, v57);
              v97 = v58;
              swift_bridgeObjectRelease();
              v34 = (void *)sub_22752A188(v59);
              swift_bridgeObjectRelease();
              sub_2274CB2B0();
              v60 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v61 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v12 = objc_msgSend(v60, sel_initWithString_, v61);

              sub_2274CB3AC(v21);
              v62 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v63 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v64 = objc_msgSend(v62, sel_initWithString_, v63);

              v65 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v66 = (void *)sub_22758E1B4();
              v67 = objc_msgSend(v65, sel_initWithString_, v66);

              objc_msgSend(v12, sel_appendAttributedString_, v67);
              objc_msgSend(v12, sel_appendAttributedString_, v34);
              v68 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v69 = (void *)sub_22758E1B4();
              v70 = objc_msgSend(v68, (SEL)&selRef_animateWithDuration_animations_completion_, v69);

              objc_msgSend(v12, sel_appendAttributedString_, v70);
              objc_msgSend(v12, sel_appendAttributedString_, v64);

            }
            else
            {
              sub_2274CB3AC(v21);
              v72 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v34 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v12 = objc_msgSend(v72, sel_initWithString_, v34);
            }
            v4 = v98;
          }

          objc_msgSend(v99, sel_appendAttributedString_, v12);
        }
        else
        {
          v35 = (uint64_t)objc_msgSend(v4, sel_length);
          if (v35 >= 1)
          {
            v40 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v41 = (void *)sub_22758E1B4();
            v42 = objc_msgSend(v40, sel_initWithString_, v41);

            objc_msgSend(v4, sel_appendAttributedString_, v42);
          }
          if (v21 == 4)
          {
            v10 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v11 = (void *)sub_22758E1B4();
            v12 = objc_msgSend(v10, sel_initWithString_, v11);
          }
          else
          {
            v102 = v101;
            v103 = v16;
            v104 = v15;
            v105 = v18;
            v106 = v17;
            v107 = v19;
            v108 = v20;
            v43 = v101;
            v109 = 0;
            v110 = v21;
            v111 = v13;
            v112 = v22;
            if (v101)
            {
              MEMORY[0x24BDAC7A8](v35, v36, v37, v38, v39);
              v95 = &v102;
              swift_bridgeObjectRetain();
              v44 = v97;
              v45 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_227350CB8, (uint64_t)v94, v43);
              v97 = v44;
              swift_bridgeObjectRelease();
              v11 = (void *)sub_22752A188(v45);
              swift_bridgeObjectRelease();
              sub_2274CB2B0();
              v46 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v47 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v12 = objc_msgSend(v46, sel_initWithString_, v47);

              sub_2274CB3AC(v21);
              v48 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v49 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v50 = objc_msgSend(v48, sel_initWithString_, v49);

              v51 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v52 = (void *)sub_22758E1B4();
              v53 = objc_msgSend(v51, sel_initWithString_, v52);

              objc_msgSend(v12, sel_appendAttributedString_, v53);
              objc_msgSend(v12, sel_appendAttributedString_, v11);
              v54 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v55 = (void *)sub_22758E1B4();
              v56 = objc_msgSend(v54, (SEL)&selRef_animateWithDuration_animations_completion_, v55);

              objc_msgSend(v12, sel_appendAttributedString_, v56);
              objc_msgSend(v12, sel_appendAttributedString_, v50);

            }
            else
            {
              sub_2274CB3AC(v21);
              v71 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v11 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v12 = objc_msgSend(v71, sel_initWithString_, v11);
            }
            v4 = v98;
          }

          objc_msgSend(v4, sel_appendAttributedString_, v12);
        }

        swift_bridgeObjectRelease();
      }
      v9 += 9;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v7 = v99;
  }
  v102 = MEMORY[0x24BEE4AF8];
  if ((uint64_t)objc_msgSend(v4, sel_length) >= 1)
  {
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v74 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v75 = v4;
    v76 = (void *)sub_22758E1B4();
    v77 = (void *)sub_22758E1B4();
    v78 = objc_msgSend(v74, sel_localizedStringForKey_value_table_, v76, 0, v77);

    sub_22758E1E4();
    v79 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v80 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v81 = objc_msgSend(v79, sel_initWithString_, v80);

    v82 = objc_msgSend((id)objc_opt_self(), sel_customContentWithAttributedLabel_attributedValue_, v81, v75);
    MEMORY[0x2276B23C4]();
    if (*(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22758E400();
    sub_22758E424();
    sub_22758E3F4();
    v4 = v98;
    v7 = v99;
  }
  if ((uint64_t)objc_msgSend(v7, sel_length) >= 1)
  {
    type metadata accessor for MAGUtilities();
    v83 = swift_getObjCClassFromMetadata();
    v84 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v83);
    v85 = (void *)sub_22758E1B4();
    v86 = v7;
    v87 = (void *)sub_22758E1B4();
    v88 = objc_msgSend(v84, sel_localizedStringForKey_value_table_, v85, 0, v87);

    sub_22758E1E4();
    v89 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v90 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v91 = objc_msgSend(v89, sel_initWithString_, v90);

    v92 = objc_msgSend((id)objc_opt_self(), sel_customContentWithAttributedLabel_attributedValue_, v91, v86);
    MEMORY[0x2276B23C4]();
    if (*(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22758E400();
    sub_22758E424();
    sub_22758E3F4();
    v4 = v98;
    v7 = v99;
  }

  return v102;
}

id sub_2273503A8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  char **v12;
  id *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  id v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  char **v79;
  void *v80;
  id v81;
  _BYTE v83[16];
  uint64_t *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  char v100;
  double v101;
  id v102;

  v2 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  v5 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v6 = (void *)sub_22758E1B4();
  v7 = objc_msgSend(v5, sel_initWithString_, v6);

  v8 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v9 = (void *)sub_22758E1B4();
  v10 = objc_msgSend(v8, sel_initWithString_, v9);

  v11 = *(_QWORD *)(a1 + 16);
  v12 = &selRef_session_didUpdateDetectedObjects_;
  if (v11)
  {
    v86 = v10;
    v89 = v7;
    swift_bridgeObjectRetain();
    v87 = 0;
    v85 = a1;
    v13 = (id *)(a1 + 96);
    v88 = v4;
    do
    {
      v18 = *((double *)v13 - 1);
      if (v18 <= 0.25)
      {
        v19 = (uint64_t)*(v13 - 8);
        v21 = (uint64_t)*(v13 - 7);
        v20 = (uint64_t)*(v13 - 6);
        v23 = (uint64_t)*(v13 - 5);
        v22 = (uint64_t)*(v13 - 4);
        v24 = (uint64_t)*(v13 - 3);
        v25 = *((_BYTE *)v13 - 16);
        v26 = *((unsigned __int8 *)v13 - 14);
        v27 = *v13;
        v28 = *((_BYTE *)v13 - 15);
        v90 = *v13;
        v91 = v19;
        swift_bridgeObjectRetain();
        if ((v28 & 1) != 0)
        {
          v29 = v89;
          v30 = (uint64_t)objc_msgSend(v89, sel_length);
          if (v30 >= 1)
          {
            v35 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v36 = (void *)sub_22758E1B4();
            v37 = objc_msgSend(v35, sel_initWithString_, v36);

            v4 = v88;
            objc_msgSend(v29, v12[337], v37);

          }
          if (v26 == 4)
          {
            v38 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v39 = (void *)sub_22758E1B4();
            v16 = objc_msgSend(v38, sel_initWithString_, v39);
          }
          else
          {
            v92 = v91;
            v93 = v21;
            v94 = v20;
            v95 = v23;
            v96 = v22;
            v97 = v24;
            v98 = v25;
            v62 = v91;
            v99 = 1;
            v100 = v26;
            v101 = v18;
            v102 = v27;
            if (v91)
            {
              MEMORY[0x24BDAC7A8](v30, v31, v32, v33, v34);
              v84 = &v92;
              swift_bridgeObjectRetain();
              v63 = v87;
              v64 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_227350C9C, (uint64_t)v83, v62);
              v87 = v63;
              swift_bridgeObjectRelease();
              v39 = (void *)sub_22752A188(v64);
              swift_bridgeObjectRelease();
              sub_2274CB2B0();
              v65 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v66 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v16 = objc_msgSend(v65, sel_initWithString_, v66);

              sub_2274CB3AC(v26);
              v12 = &selRef_session_didUpdateDetectedObjects_;
              v67 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v68 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v69 = objc_msgSend(v67, sel_initWithString_, v68);

              v70 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v71 = (void *)sub_22758E1B4();
              v72 = objc_msgSend(v70, sel_initWithString_, v71);

              objc_msgSend(v16, sel_appendAttributedString_, v72);
              objc_msgSend(v16, sel_appendAttributedString_, v39);
              v73 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v74 = (void *)sub_22758E1B4();
              v75 = objc_msgSend(v73, sel_initWithString_, v74);

              v4 = v88;
              objc_msgSend(v16, sel_appendAttributedString_, v75);

              objc_msgSend(v16, sel_appendAttributedString_, v69);
            }
            else
            {
              sub_2274CB3AC(v26);
              v77 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v39 = (void *)sub_22758E1B4();
              v4 = v88;
              swift_bridgeObjectRelease();
              v16 = objc_msgSend(v77, sel_initWithString_, v39);
            }
          }
          v17 = v90;

          objc_msgSend(v89, v12[337], v16, v85);
        }
        else
        {
          v40 = (uint64_t)objc_msgSend(v4, sel_length, v85);
          if (v40 >= 1)
          {
            v45 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v46 = (void *)sub_22758E1B4();
            v47 = objc_msgSend(v45, sel_initWithString_, v46);

            objc_msgSend(v4, v12[337], v47);
          }
          if (v26 == 4)
          {
            v14 = objc_allocWithZone(MEMORY[0x24BDD1458]);
            v15 = (void *)sub_22758E1B4();
            v16 = objc_msgSend(v14, sel_initWithString_, v15);
          }
          else
          {
            v92 = v91;
            v93 = v21;
            v94 = v20;
            v95 = v23;
            v96 = v22;
            v97 = v24;
            v98 = v25;
            v48 = v91;
            v99 = 0;
            v100 = v26;
            v101 = v18;
            v102 = v27;
            if (v91)
            {
              MEMORY[0x24BDAC7A8](v40, v41, v42, v43, v44);
              v84 = &v92;
              swift_bridgeObjectRetain();
              v49 = v87;
              v50 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_227350CB8, (uint64_t)v83, v48);
              v87 = v49;
              swift_bridgeObjectRelease();
              v15 = (void *)sub_22752A188(v50);
              swift_bridgeObjectRelease();
              sub_2274CB2B0();
              v51 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v52 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v16 = objc_msgSend(v51, sel_initWithString_, v52);

              sub_2274CB3AC(v26);
              v12 = &selRef_session_didUpdateDetectedObjects_;
              v53 = objc_allocWithZone(MEMORY[0x24BDD1688]);
              v54 = (void *)sub_22758E1B4();
              swift_bridgeObjectRelease();
              v55 = objc_msgSend(v53, sel_initWithString_, v54);

              v56 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v57 = (void *)sub_22758E1B4();
              v58 = objc_msgSend(v56, sel_initWithString_, v57);

              objc_msgSend(v16, sel_appendAttributedString_, v58);
              objc_msgSend(v16, sel_appendAttributedString_, v15);
              v59 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v60 = (void *)sub_22758E1B4();
              v61 = objc_msgSend(v59, sel_initWithString_, v60);

              v4 = v88;
              objc_msgSend(v16, sel_appendAttributedString_, v61);

              objc_msgSend(v16, sel_appendAttributedString_, v55);
            }
            else
            {
              sub_2274CB3AC(v26);
              v76 = objc_allocWithZone(MEMORY[0x24BDD1458]);
              v15 = (void *)sub_22758E1B4();
              v4 = v88;
              swift_bridgeObjectRelease();
              v16 = objc_msgSend(v76, sel_initWithString_, v15);
            }
          }
          v17 = v90;

          objc_msgSend(v4, v12[337], v16, v85);
        }

        swift_bridgeObjectRelease();
      }
      v13 += 9;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v7 = v89;
    v10 = v86;
  }
  objc_msgSend(v10, v12[337], v4, v85);
  if ((uint64_t)objc_msgSend(v7, sel_length) >= 1)
  {
    v78 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v79 = v12;
    v80 = (void *)sub_22758E1B4();
    v81 = objc_msgSend(v78, sel_initWithString_, v80);

    objc_msgSend(v10, (SEL)v79 + 332, v81);
    objc_msgSend(v10, (SEL)v79 + 332, v7);
  }

  return v10;
}

id sub_227350C9C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_22734ED24(a1, *(_QWORD *)(v2 + 16), a2);
}

id sub_227350CB8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_227350C9C(a1, a2);
}

uint64_t sub_227350CE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22758C984();
  v14 = *(_QWORD *)(v13 - 8);
  v19 = MEMORY[0x24BDAC7A8](v13, v15, v16, v17, v18);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(a1, 1, v13, v19) == 1)
  {
    sub_22731A1A4(a1, &qword_2558D5BA0);
    v22 = sub_2274DE604(a2);
    if ((v23 & 1) != 0)
    {
      v24 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = *v3;
      v31 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_227587C28();
        v26 = v31;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 32))(v12, *(_QWORD *)(v26 + 56) + *(_QWORD *)(v14 + 72) * v24, v13);
      sub_227337098(v24, v26);
      *v3 = v26;
      swift_bridgeObjectRelease();
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v27, 1, v13);
    return sub_22731A1A4((uint64_t)v12, &qword_2558D5BA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v21, a1, v13);
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_227586684((uint64_t)v21, a2, v28);
    *v3 = v31;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_227350EC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  float v5;
  char v6;
  uint64_t result;
  char v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  if ((a1 & 0x100000000) != 0)
  {
    result = sub_2274DE4F0(a2);
    if ((v8 & 1) == 0)
      return result;
    v9 = result;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_227588088();
      v11 = v13;
    }
    sub_227337434(v9, v11);
    *v3 = v11;
  }
  else
  {
    v5 = *(float *)&a1;
    v6 = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_227586A9C(a2, v6, v5);
    *v2 = v12;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_227350F94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SpatialTextBlock();
  v17 = MEMORY[0x24BDAC7A8](v13, v14, v13, v15, v16);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v20 + 48))(a1, 1, v17) == 1)
  {
    sub_22731A1A4(a1, &qword_2558D55A8);
    sub_2273369B0(a2, (uint64_t)v12);
    sub_22730DFB0(a2, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    return sub_22731A1A4((uint64_t)v12, &qword_2558D55A8);
  }
  else
  {
    sub_22730DFEC(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v3;
    *v3 = 0x8000000000000000;
    sub_227586E90((uint64_t)v19, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v24;
    swift_bridgeObjectRelease();
    return sub_22730DFB0(a2, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  }
}

uint64_t MAGPointAndSpeakService.__allocating_init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  MAGPointAndSpeakService.init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MAGPointAndSpeakService.init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = v5;
  v44 = a4;
  v45 = a5;
  v42 = a2;
  v43 = a3;
  v41 = a1;
  v40 = sub_22758E790();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v7, v8, v9, v10);
  v39 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22758E73C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12, v14, v15, v16, v17);
  v18 = sub_22758DF68();
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  sub_22758C924();
  sub_22758C924();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument) = 0;
  v23 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks) = MEMORY[0x24BEE4AF8];
  v24 = v23;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue) = 0;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) = 0;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutText) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur) = 0;
  v25 = v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  *(_QWORD *)v25 = 0;
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 1;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
  v26 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine;
  *(_QWORD *)(v6 + v26) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFE808]), sel_init);
  v27 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager;
  type metadata accessor for RotationRateManager();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
  *(_BYTE *)(v28 + 24) = 0;
  *(_QWORD *)(v6 + v27) = v28;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = 0;
  v37 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textQueue;
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  sub_22758DF5C();
  v46 = v24;
  v36[1] = sub_2273096F0((unint64_t *)&unk_2540B9EC0, v13, MEMORY[0x24BEE5698]);
  v36[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9E10);
  sub_22735D598((unint64_t *)&unk_2540B9E20, (uint64_t *)&unk_2540B9E10);
  sub_22758EACC();
  v29 = v39;
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v38 + 104);
  v31 = v40;
  v30(v39, *MEMORY[0x24BEE5750], v40);
  v32 = v29;
  *(_QWORD *)(v6 + v37) = sub_22758E7D8();
  v33 = v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_handsNode;
  v34 = sub_22758CFB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v38 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue;
  sub_22758DF50();
  v46 = MEMORY[0x24BEE4AF8];
  sub_22758EACC();
  v30(v32, *MEMORY[0x24BEE5758], v31);
  *(_QWORD *)(v6 + v38) = sub_22758E7D8();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_eventHandler) = v41;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService) = v42;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService) = v43;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine) = v44;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseFeedbackProcessor) = v45;
  return v6;
}

uint64_t sub_227351610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_227351628()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_2273516C4;
  return sub_22758EE80();
}

uint64_t sub_2273516C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227351730()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22735173C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227351770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v6 = sub_22758DF20();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22758DF68();
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F10);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20, v23, v24, v25, v26);
  v27 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[1] = *(_QWORD *)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v27, a1, v20);
  v28 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a2;
  *(_QWORD *)(v29 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v29 + v28, v27, v20);
  aBlock[4] = sub_22735E27C;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_142;
  v30 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22758DF44();
  v36 = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22735D598((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0);
  sub_22758EACC();
  MEMORY[0x2276B276C](0, v19, v12, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v6);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v34);
  return swift_release();
}

uint64_t sub_2273519E4(uint64_t a1)
{
  uint64_t v1;

  return sub_227351770(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2273519EC(uint64_t a1, uint64_t a2)
{
  id v2;

  v2 = *(id *)(a2 + 16);
  sub_227351B28(v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F10);
  return sub_22758E478();
}

uint64_t sub_227351B28(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_signpost_type_t v42;
  char v43;
  void (*v44)(char *, char *, uint64_t);
  uint8_t *v45;
  os_signpost_id_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  id v50;
  id v51;
  unsigned int v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  NSObject *v65;
  char *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  const char *v73;
  id v74;
  char *v76;
  uint8_t *v77;
  os_signpost_id_t v78;
  uint64_t (*v79)(char *, uint64_t);
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void *v88;
  id v89;
  id aBlock[7];

  v89 = a1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_22758CF48();
  v84 = *(_QWORD *)(v2 - 8);
  v85 = v2;
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v83 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22758CF18();
  v9 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v87 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v14, v16, v17, v18, v19);
  v22 = (char *)&v80 - v21;
  MEMORY[0x24BDAC7A8](v20, v23, v24, v25, v26);
  v28 = (char *)&v80 - v27;
  v29 = sub_22758DFBC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31, v32, v33, v34);
  v36 = (uint64_t *)((char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pointSpeakQueue];
  *v36 = v37;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v36, *MEMORY[0x24BEE5610], v29);
  v38 = v37;
  LOBYTE(v37) = sub_22758DFE0();
  (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v36, v29);
  if ((v37 & 1) != 0)
  {
    if (qword_2558D4AD8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v88 = v1;
  v39 = sub_22758CF3C();
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_2558D66E8);
  sub_22758CF0C();
  v41 = sub_22758CF24();
  v42 = sub_22758E808();
  v43 = sub_22758EA0C();
  v86 = v40;
  if ((v43 & 1) != 0)
  {
    v44 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v44(v22, v28, v8);
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    v46 = sub_22758CF00();
    _os_signpost_emit_with_name_impl(&dword_2272F4000, v41, v42, v46, "HandPose", "", v45, 2u);
    MEMORY[0x2276B3D50](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
    v47 = v44;
  }
  else
  {

    v47 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  }
  v82 = v47;
  v47(v22, v28, v8);
  sub_22758CF6C();
  swift_allocObject();
  v48 = sub_22758CF60();
  v49 = *(void (**)(char *, uint64_t))(v9 + 8);
  v49(v28, v8);
  v50 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v51 = objc_msgSend(v50, sel_orientation);

  if (v51 == (id)3)
    v52 = 1;
  else
    v52 = 6;
  if (v51 == (id)4)
    v53 = 3;
  else
    v53 = v52;
  v54 = v89;
  sub_22731DBA4(MEMORY[0x24BEE4AF8]);
  v55 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  type metadata accessor for VNImageOption(0);
  sub_2273096F0((unint64_t *)&qword_2558D5018, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2275949C0);
  v56 = (void *)sub_22758E10C();
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(v55, sel_initWithCVPixelBuffer_orientation_options_, v54, v53, v56);

  v58 = objc_allocWithZone(MEMORY[0x24BDF9B88]);
  aBlock[4] = sub_22735E1F8;
  aBlock[5] = v88;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_22735CF58;
  aBlock[3] = &block_descriptor_136;
  v59 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v60 = objc_msgSend(v58, sel_initWithCompletionHandler_, v59);
  _Block_release(v59);
  objc_msgSend(v60, sel_setMaximumHandCount_, 1);
  objc_msgSend(v60, sel_setRevision_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_227596560;
  *(_QWORD *)(v61 + 32) = v60;
  aBlock[0] = (id)v61;
  sub_22758E3F4();
  sub_22730BA80(0, &qword_2558D6F08);
  v62 = v60;
  v63 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  LODWORD(v55) = objc_msgSend(v57, sel_performRequests_error_, v63, aBlock);

  if ((_DWORD)v55)
  {
    v64 = aBlock[0];
    v65 = sub_22758CF24();
    v66 = v87;
    sub_22758CF54();
    LODWORD(v89) = sub_22758E7FC();
    if ((sub_22758EA0C() & 1) != 0)
    {
      swift_retain();
      v67 = (void *)v48;
      v68 = v83;
      sub_22758CF78();
      v88 = v67;
      swift_release();
      v70 = v84;
      v69 = v85;
      v71 = (*(uint64_t (**)(char *, uint64_t))(v84 + 88))(v68, v85);
      v72 = *MEMORY[0x24BEE7810];
      v81 = v49;
      if (v71 == v72)
      {
        v73 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
        v73 = "";
      }
      v76 = v87;
      v82(v22, v87, v8);
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      v78 = sub_22758CF00();
      _os_signpost_emit_with_name_impl(&dword_2272F4000, v65, (os_signpost_type_t)v89, v78, "HandPose", v73, v77, 2u);
      MEMORY[0x2276B3D50](v77, -1, -1);

      v79 = (uint64_t (*)(char *, uint64_t))v81;
      v81(v76, v8);
      swift_release();
      return v79(v22, v8);
    }
    else
    {

      v49(v66, v8);
      return swift_release();
    }
  }
  else
  {
    v74 = aBlock[0];
    sub_22758C75C();

    swift_willThrow();
    return swift_release();
  }
}

void sub_227352224(id a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **p_weak_ivar_lyt;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  _BYTE *v39;
  void *v40;
  _QWORD *v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  unint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  char v59;
  id v60;
  float v61;
  float v62;
  double v63;
  double v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  id v74;
  char v75;
  char v76;
  void *v77;
  id v78;
  unint64_t v79;
  char v80;
  void *v81;
  id v82;
  double *v83;
  double v84;
  double v85;
  id v86;
  void *v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  double v94;
  double v95;
  id v96;
  unint64_t v97;
  char v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  id v123;
  uint64_t v124;
  id aBlock[9];

  v3 = v2;
  aBlock[7] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = sub_22758DF20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8, v9, v10, v11);
  v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22758DF68();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16, v17, v18, v19);
  v122 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  v121 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_weak_ivar_lyt = &MAGTemp_SimpleTask.weak_ivar_lyt;
  if (a2)
  {
    v123 = a1;
    if (qword_2558D4A68 != -1)
      swift_once();
    v28 = sub_22758CF9C();
    __swift_project_value_buffer(v28, (uint64_t)qword_2558D6260);
    v29 = a2;
    v30 = a2;
    v31 = sub_22758CF84();
    v32 = sub_22758E6B8();
    if (os_log_type_enabled(v31, v32))
    {
      v118 = v13;
      v33 = swift_slowAlloc();
      v120 = v15;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v119 = v7;
      v36 = (_QWORD *)v35;
      v117 = v14;
      *(_DWORD *)v34 = 138412290;
      v37 = a2;
      v38 = v6;
      v39 = v3;
      v40 = (void *)_swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v40;
      v14 = v117;
      v13 = v118;
      sub_22758EA48();
      *v36 = v40;
      v3 = v39;
      v6 = v38;
      p_weak_ivar_lyt = (void **)(&MAGTemp_SimpleTask + 56);

      _os_log_impl(&dword_2272F4000, v31, v32, "Hand-pose request error : %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
      swift_arrayDestroy();
      v41 = v36;
      v7 = v119;
      MEMORY[0x2276B3D50](v41, -1, -1);
      v42 = v34;
      v15 = v120;
      MEMORY[0x2276B3D50](v42, -1, -1);
    }
    else
    {

    }
    a1 = v123;
  }
  if (!a1)
    goto LABEL_63;
  objc_opt_self();
  v43 = swift_dynamicCastObjCClass();
  if (!v43)
    goto LABEL_63;
  v44 = (void *)v43;
  v45 = a1;
  v46 = objc_msgSend(v44, sel_results);
  if (!v46)
    goto LABEL_62;
  v47 = v46;
  sub_22730BA80(0, &qword_2558D6ED8);
  v48 = sub_22758E3DC();

  if (!(v48 >> 62))
  {
    if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  v111 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  if (!v111)
  {
LABEL_61:
    swift_bridgeObjectRelease();
LABEL_62:

    goto LABEL_63;
  }
LABEL_13:
  v120 = v15;
  if ((v48 & 0xC000000000000001) != 0)
  {
    v49 = (id)MEMORY[0x2276B2BEC](0, v48);
  }
  else
  {
    if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_70;
    }
    v49 = *(id *)(v48 + 32);
  }
  v50 = v49;
  swift_bridgeObjectRelease();
  v51 = *MEMORY[0x24BDF9F30];
  aBlock[0] = 0;
  v52 = objc_msgSend(v50, sel_recognizedPointsForJointsGroupName_error_, v51, aBlock);
  v53 = aBlock[0];
  if (!v52)
  {
    v86 = aBlock[0];
    v87 = (void *)sub_22758C75C();

    swift_willThrow();
LABEL_63:
    if (p_weak_ivar_lyt[333] != (void *)-1)
      swift_once();
    v112 = sub_22758CF9C();
    __swift_project_value_buffer(v112, (uint64_t)qword_2558D6260);
    v113 = sub_22758CF84();
    v114 = sub_22758E6B8();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v115 = 0;
      _os_log_impl(&dword_2272F4000, v113, v114, "No hand pose points detected", v115, 2u);
      MEMORY[0x2276B3D50](v115, -1, -1);
    }

    sub_22735AAC8();
    return;
  }
  v54 = v52;
  v123 = v45;
  v117 = v14;
  v118 = v13;
  v119 = v7;
  type metadata accessor for JointName(0);
  sub_22730BA80(0, &qword_2558D6EE0);
  sub_2273096F0(&qword_2558D5370, (uint64_t (*)(uint64_t))type metadata accessor for JointName, (uint64_t)&unk_227596178);
  v55 = sub_22758E118();
  v56 = v53;

  if (!*(_QWORD *)(v55 + 16))
  {
LABEL_38:
    swift_bridgeObjectRelease();

    goto LABEL_63;
  }
  v57 = (id)*MEMORY[0x24BDF9EA0];
  v58 = sub_2274DE740((uint64_t)v57);
  if ((v59 & 1) == 0)
  {

    goto LABEL_38;
  }
  v60 = *(id *)(*(_QWORD *)(v55 + 56) + 8 * v58);

  objc_msgSend(v60, sel_confidence);
  v62 = v61;

  v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame] = 0;
  *(double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand] = *(double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand] + 1.0;
  sub_22741EBBC(0);
  v63 = COERCE_DOUBLE(sub_22752A9CC());
  v64 = 0.0;
  if ((v65 & 1) == 0)
  {
    v64 = v63;
    if (v63 >= 0.03)
    {
      if (v63 <= 0.6)
        goto LABEL_22;
      swift_bridgeObjectRelease();
      v88 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements];
      v89 = __OFADD__(v88, 1);
      v90 = v88 + 1;
      if (!v89)
      {
        *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements] = v90;
        v91 = sub_22758E4C0();
        v92 = (uint64_t)v121;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v121, 1, 1, v91);
        v93 = (_QWORD *)swift_allocObject();
        v93[2] = 0;
        v93[3] = 0;
        v93[4] = v3;
        swift_retain();
        sub_2274193DC(v92, (uint64_t)&unk_2558D6F00, (uint64_t)v93);

        swift_release();
        return;
      }
LABEL_70:
      __break(1u);
    }
  }
  v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback] = 0;
LABEL_22:
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer], sel_invalidate);
  if (v64 < 0.03)
    goto LABEL_39;
  v116 = v6;
  v66 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback;
  if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback] & 1) == 0
    && *(uint64_t *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage] >= 61
    && *(_QWORD *)(v55 + 16))
  {
    v67 = sub_22758E4C0();
    v68 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v121, 1, 1, v67);
    v69 = (_QWORD *)swift_allocObject();
    v69[2] = 0;
    v69[3] = 0;
    v69[4] = v3;
    swift_retain();
    sub_2274193DC(v68, (uint64_t)&unk_2558D6EF0, (uint64_t)v69);
    swift_release();
  }
  v3[v66] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage] = 0;
  v121 = *(char **)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textQueue];
  aBlock[4] = sub_22735E324;
  aBlock[5] = v3;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_121;
  v70 = _Block_copy(aBlock);
  swift_retain();
  v71 = v122;
  sub_22758DF44();
  v124 = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22735D598((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0);
  v72 = v118;
  v73 = v116;
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v71, v72, v70);
  _Block_release(v70);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v72, v73);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v71, v117);
  swift_release();
  if (!*(_QWORD *)(v55 + 16)
    || (v74 = v57, sub_2274DE740((uint64_t)v74), v76 = v75, v74, (v76 & 1) == 0))
  {
LABEL_39:

LABEL_40:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)(v55 + 16))
  {
    if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint + 16] & 1) == 0)
      goto LABEL_71;
    v77 = v50;
    goto LABEL_47;
  }
  v77 = v50;
  v78 = v74;
  v79 = sub_2274DE740((uint64_t)v78);
  if ((v80 & 1) == 0)
  {

    if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint + 16] & 1) == 0)
      goto LABEL_71;
LABEL_47:
    v81 = 0;
    goto LABEL_48;
  }
  v81 = *(void **)(*(_QWORD *)(v55 + 56) + 8 * v79);
  v82 = v81;

  v83 = (double *)&v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint];
  if ((v3[OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint + 16] & 1) == 0)
  {
    if (v82)
    {
      v84 = *v83;
      objc_msgSend(v82, sel_x);
      if (vabdd_f64(v84, v85) > 0.01)
      {
        if (v62 >= 0.67)
          goto LABEL_55;
        goto LABEL_54;
      }
      if (((_BYTE)v83[2] & 1) == 0)
      {
        v94 = v83[1];
        objc_msgSend(v82, sel_y);
        if (v62 >= 0.67 || vabdd_f64(v94, v95) <= 0.01)
          goto LABEL_55;
LABEL_54:

        goto LABEL_50;
      }
LABEL_72:
      __break(1u);
      return;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_48:
  if (v62 < 0.67)
  {

    v82 = v81;
LABEL_50:

    goto LABEL_40;
  }
LABEL_55:
  if (*(_QWORD *)(v55 + 16))
  {
    v96 = v74;
    v97 = sub_2274DE740((uint64_t)v96);
    if ((v98 & 1) != 0)
    {
      v99 = *(id *)(*(_QWORD *)(v55 + 56) + 8 * v97);
      swift_bridgeObjectRelease();

      objc_msgSend(v99, sel_x);
      v100 = CGRectMake(objc_msgSend(v99, sel_y));
      v102 = v101;
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6E60);
      MEMORY[0x24BDAC7A8](v103, v104, v105, v106, v107);
      v109 = (char *)&v116 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
      v110 = sub_22758CFCC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 1, 1, v110);
      sub_227355000(v100, v102, 0, 0, 0, 1, 0, (uint64_t)v109);

      sub_22731A1A4((uint64_t)v109, &qword_2558D6E60);
      return;
    }

  }
  swift_bridgeObjectRelease();

}

uint64_t sub_227352DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227352E28()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_227352EA0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_227352EA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227352F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227352F5C()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_227352EA0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_227352FD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = v1;
  v3 = sub_22758DF20();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v4 = sub_22758DF68();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227353080()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v20;

  if (qword_2558D4B68 != -1)
    swift_once();
  if (byte_2558D92C9 != 1)
    goto LABEL_11;
  if (qword_2558D4B60 != -1)
    swift_once();
  if (byte_2558D92C8 != 1)
    goto LABEL_11;
  *(_QWORD *)(v0 + 136) = &type metadata for MFFeatureFlags;
  *(_QWORD *)(v0 + 144) = sub_22735E01C();
  *(_BYTE *)(v0 + 112) = 2;
  v1 = sub_22758CB4C();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  if ((v1 & 1) == 0)
    goto LABEL_11;
  v2 = *(_QWORD *)(v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D68B8);
  v3 = swift_task_alloc();
  v4 = v2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_handsNode;
  sub_22731A11C(v2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_handsNode, v3, &qword_2558D68B8);
  v5 = sub_22758CFB4();
  *(_QWORD *)(v0 + 232) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 240) = v6;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(v3, 1, v5);
  sub_22731A1A4(v3, &qword_2558D68B8);
  swift_task_dealloc();
  if (v8 == 1)
    goto LABEL_11;
  v9 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 248) = objc_msgSend(v9, sel_capturedImage);
  v10 = objc_msgSend(v9, sel_camera);
  objc_msgSend(v10, sel_intrinsics);
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v12;
  *(_OWORD *)(v0 + 48) = v13;

  objc_msgSend(v9, sel_timestamp);
  sub_22758E8BC();
  v14 = sub_22758CFCC();
  *(_QWORD *)(v0 + 256) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v0 + 264) = v15;
  *(_QWORD *)(v0 + 272) = swift_task_alloc();
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D6E60) - 8)
                                    + 64);
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v16;
  v17 = swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v17;
  sub_22731A11C(v4, v17, &qword_2558D68B8);
  if (v7(v17, 1, v5))
  {
    sub_22731A1A4(v17, &qword_2558D68B8);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v16, 1, 1, v14);
    v18 = *(void **)(v0 + 248);
    sub_22731A1A4(*(_QWORD *)(v0 + 288), &qword_2558D6E60);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_22735AAC8();

LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  *(_QWORD *)(v0 + 304) = swift_task_alloc();
  (*(void (**)(void))(v6 + 16))();
  sub_22731A1A4(v17, &qword_2558D68B8);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v20;
  *v20 = v0;
  v20[1] = sub_227353434;
  return sub_22758CFA8();
}

uint64_t sub_227353434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2273534CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(void **)(v0 + 248);
    sub_22731A1A4(v1, &qword_2558D6E60);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_22735AAC8();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 272), v1, v2);
    swift_task_dealloc();
    *(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) = 0;
    *(double *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) = *(double *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) + 1.0;
    sub_22741EBBC(0);
    objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer), sel_invalidate);
    v7 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback;
    v8 = *(_QWORD *)(v0 + 168);
    if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback) & 1) == 0
      && *(uint64_t *)(v8
                    + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) >= 61)
    {
      v9 = *(_QWORD *)(v0 + 224);
      v10 = sub_22758E4C0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v11[3] = 0;
      v11[4] = v8;
      swift_retain();
      sub_2274193DC(v9, (uint64_t)&unk_2558D6ED0, (uint64_t)v11);
      swift_release();
      v8 = *(_QWORD *)(v0 + 168);
    }
    v12 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    *(_BYTE *)(v6 + v7) = 1;
    *(_QWORD *)(v8
              + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) = 0;
    *(_QWORD *)(v0 + 96) = sub_22735E060;
    *(_QWORD *)(v0 + 104) = v8;
    *(_QWORD *)(v0 + 64) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 72) = 1107296256;
    *(_QWORD *)(v0 + 80) = sub_227367AE4;
    *(_QWORD *)(v0 + 88) = &block_descriptor_111;
    v15 = _Block_copy((const void *)(v0 + 64));
    swift_retain();
    sub_22758DF44();
    *(_QWORD *)(v0 + 152) = MEMORY[0x24BEE4AF8];
    sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22735D598((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0);
    sub_22758EACC();
    MEMORY[0x2276B27CC](0, v12, v13, v15);
    _Block_release(v15);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v20);
    swift_release();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v16;
    *v16 = v0;
    v16[1] = sub_227353828;
    v17 = *(_QWORD *)(v0 + 160);
    v16[2] = *(_QWORD *)(v0 + 272);
    v16[3] = v17;
    return swift_task_switch();
  }
}

uint64_t sub_227353828(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(double *)(v3 + 336) = a1;
  *(double *)(v3 + 344) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22735387C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v12 = *(void **)(v0 + 248);
  sub_22758CFC0();
  v7 = v6;
  v9 = v8;
  v10 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  sub_227355000(v2, v1, 0, v9, v7, 0, 1, v10);

  sub_22731A1A4(v10, &qword_2558D6E60);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_2273539A8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (qword_2558D4A68 != -1)
    swift_once();
  v1 = sub_22758CF9C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2558D6260);
  v2 = sub_22758CF84();
  v3 = sub_22758E6C4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2272F4000, v2, v3, "Cannot handle handsNode prediction", v4, 2u);
    MEMORY[0x2276B3D50](v4, -1, -1);
  }
  v5 = *(void **)(v0 + 320);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_227353AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227353B38()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_227353BB0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_227353BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227353C14()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 24), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227353C5C()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 24), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227353CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  id *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65[3];

  v1 = v0;
  v2 = sub_22758C930();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DetectedTextBlock();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v16 = MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15).n128_u64[0];
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument)
    || (v20 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks,
        *(_QWORD *)(*(_QWORD *)(v0
                              + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks)
                  + 16)))
  {
    v21 = v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastImageCacheTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v21, v2);
    sub_22758C8DC();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    if (v23 < -0.5)
    {
      v24 = (id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
      swift_beginAccess();
      if (*v24)
      {
        v25 = objc_msgSend(*v24, sel_currentFrame);
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(v25, sel_capturedImage);
          v28 = objc_msgSend(v26, sel_camera);
          v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService);
          v30 = v27;
          swift_retain();
          v62 = v30;
          v63 = v29;
          swift_retain();
          v31 = v28;
          v64 = v26;
          sub_22731DBA4(MEMORY[0x24BEE4AF8]);
          v32 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
          type metadata accessor for VNImageOption(0);
          sub_2273096F0((unint64_t *)&qword_2558D5018, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2275949C0);
          v33 = (void *)sub_22758E10C();
          swift_bridgeObjectRelease();
          v34 = v62;
          v35 = objc_msgSend(v32, sel_initWithCVPixelBuffer_orientation_options_, v62, 6, v33);

          v36 = v34;
          v45 = sub_2273C6860(v35, 0);

          v46 = v45;
          v47 = v45;
          v48 = v64;
          sub_2273542A8(v47, v1, v36, v31, v64);

          swift_release();
          swift_release();
          sub_22758C924();
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v21, v9, v2);
          swift_endAccess();

LABEL_10:
        }
      }
    }
  }
  else
  {
    v37 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
    if (v37)
    {
      v38 = objc_msgSend(v37, sel_capturedImage, v16);
      if (v38)
      {
        v39 = v38;
        v63 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_textDetectionService);
        swift_retain();
        swift_retain();
        v40 = v39;
        sub_22731DBA4(MEMORY[0x24BEE4AF8]);
        v41 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
        type metadata accessor for VNImageOption(0);
        sub_2273096F0((unint64_t *)&qword_2558D5018, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2275949C0);
        v42 = (void *)sub_22758E10C();
        swift_bridgeObjectRelease();
        v43 = objc_msgSend(v41, sel_initWithCVPixelBuffer_orientation_options_, v40, 6, v42);

        v64 = v40;
        v44 = sub_2273C6860(v43, 0);

        v49 = *(void **)(v1 + v19);
        *(_QWORD *)(v1 + v19) = v44;
        v50 = v44;

        *(_QWORD *)(v1 + v20) = sub_22735D038(v50);
        swift_bridgeObjectRelease();
        v51 = *(_QWORD *)(v1 + v20);
        v52 = MEMORY[0x24BEE4B00];
        v65[0] = MEMORY[0x24BEE4B00];
        v53 = *(_QWORD *)(v51 + 16);
        if (v53)
        {
          v54 = v51 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          v55 = *(_QWORD *)(v11 + 72);
          swift_bridgeObjectRetain_n();
          do
          {
            v56 = sub_22730DEEC(v54, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v57 = (void *)MEMORY[0x2276B35C4](v56);
            sub_227354CAC(v1, (uint64_t)v18, (uint64_t)v65);
            objc_autoreleasePoolPop(v57);
            sub_22730DFB0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v54 += v55;
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease_n();
          v52 = v65[0];
        }
        *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = v52;
        swift_bridgeObjectRelease();
        v58 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
        v59 = (char *)objc_msgSend(v58, sel_orientation);

        if ((unint64_t)(v59 - 2) >= 3)
          v60 = 1;
        else
          v60 = qword_227598458[(_QWORD)(v59 - 2)];
        v31 = v64;
        *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = v60;
        swift_release();
        swift_release();

        goto LABEL_10;
      }
    }
  }
}

void sub_2273542A8(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  _QWORD v51[3];

  v10 = type metadata accessor for DetectedTextBlock();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v50 = a4;
    v18 = a1;
    v19 = sub_22735D038(v18);
    v20 = v19;
    v21 = MEMORY[0x24BEE4B00];
    v51[0] = MEMORY[0x24BEE4B00];
    v22 = *(_QWORD *)(v19 + 16);
    if (v22)
    {
      v48 = a5;
      v49 = v18;
      v23 = v19 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v24 = *(_QWORD *)(v11 + 72);
      swift_bridgeObjectRetain();
      do
      {
        v25 = sub_22730DEEC(v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        v26 = (void *)MEMORY[0x2276B35C4](v25);
        sub_227354CAC(a2, (uint64_t)v17, (uint64_t)v51);
        objc_autoreleasePoolPop(v26);
        sub_22730DFB0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        v23 += v24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      v21 = v51[0];
      a5 = v48;
      v18 = v49;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6EA8);
    v27 = swift_allocObject();
    v28 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v27 + 16) = xmmword_227598340;
    *(_QWORD *)(v27 + 56) = v28;
    *(_QWORD *)(v27 + 32) = 0x6675426C65786970;
    *(_QWORD *)(v27 + 40) = 0xEB00000000726566;
    type metadata accessor for CVBuffer(0);
    *(_QWORD *)(v27 + 64) = a3;
    *(_QWORD *)(v27 + 120) = v28;
    *(_QWORD *)(v27 + 88) = v29;
    *(_QWORD *)(v27 + 96) = 0x636F6C4274786574;
    *(_QWORD *)(v27 + 104) = 0xEA0000000000736BLL;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C60);
    *(_QWORD *)(v27 + 128) = v20;
    *(_QWORD *)(v27 + 184) = v28;
    *(_QWORD *)(v27 + 152) = v30;
    *(_QWORD *)(v27 + 160) = 0xD000000000000011;
    *(_QWORD *)(v27 + 168) = 0x80000002275B0460;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6E48);
    *(_QWORD *)(v27 + 192) = v21;
    *(_QWORD *)(v27 + 248) = v28;
    *(_QWORD *)(v27 + 216) = v31;
    *(_QWORD *)(v27 + 224) = 0x6172656D6163;
    *(_QWORD *)(v27 + 232) = 0xE600000000000000;
    v32 = sub_22730BA80(0, &qword_2558D6DD0);
    v33 = v50;
    *(_QWORD *)(v27 + 256) = v50;
    *(_QWORD *)(v27 + 312) = v28;
    *(_QWORD *)(v27 + 280) = v32;
    *(_QWORD *)(v27 + 288) = 0x7461746E6569726FLL;
    *(_QWORD *)(v27 + 296) = 0xEB000000006E6F69;
    v34 = (void *)objc_opt_self();
    v35 = a3;
    v36 = v33;
    v37 = objc_msgSend(v34, sel_currentDevice);
    v38 = (char *)objc_msgSend(v37, sel_orientation);

    if ((unint64_t)(v38 - 2) > 2)
      v39 = 1;
    else
      v39 = qword_227598458[(_QWORD)(v38 - 2)];
    type metadata accessor for UIInterfaceOrientation(0);
    *(_QWORD *)(v27 + 344) = v40;
    *(_QWORD *)(v27 + 320) = v39;
    sub_22730BA80(0, &qword_2558D6EB0);
    v41 = (void *)sub_22758E688();
    v42 = objc_msgSend(a5, sel_sceneDepth);
    if (v42)
    {
      v43 = v42;
      v44 = objc_msgSend(v42, sel_depthMap);

      if (v44)
      {
        v51[0] = 0x70614D6874706564;
        v51[1] = 0xE800000000000000;
        v45 = v44;
        objc_msgSend(v41, sel___swift_setObject_forKeyedSubscript_, v45, sub_22758EE98());
        swift_unknownObjectRelease();

      }
    }
    if (qword_2558D4B58 != -1)
      swift_once();
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
    v47 = v41;
    sub_2273F980C(v41, v46);

  }
}

uint64_t sub_2273546BC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  int v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  float v37;
  float *v38;
  uint64_t v39;
  uint64_t v40;
  float *v41;
  float v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  double v55;
  float v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  id v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  unint64_t v74;
  uint64_t v76;
  void *v77;
  int *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  char v84;
  char v85;
  uint64_t v86;

  v81 = a2;
  v8 = (int *)type metadata accessor for DetectedTextBlock();
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v21 = MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20).n128_u64[0];
  v23 = (char *)&v76 - v22;
  v24 = objc_msgSend(a1, sel_getLines, v21);
  v82 = sub_22730BA80(0, &qword_2558D6EA0);
  v25 = sub_22758E3DC();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
    goto LABEL_13;
LABEL_3:
  v86 = MEMORY[0x24BEE4AF8];
  sub_227324824(0, v26 & ~(v26 >> 63), 0);
  if (v26 < 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  v77 = a1;
  v78 = v8;
  v79 = v15;
  v80 = v9;
  v27 = 0;
  v28 = v86;
  do
  {
    if ((v25 & 0xC000000000000001) != 0)
      v29 = (id)MEMORY[0x2276B2BEC](v27, v25);
    else
      v29 = *(id *)(v25 + 8 * v27 + 32);
    v30 = v29;
    objc_msgSend(v29, sel_confidence);
    v32 = v31;

    v86 = v28;
    v34 = *(_QWORD *)(v28 + 16);
    v33 = *(_QWORD *)(v28 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_227324824(v33 > 1, v34 + 1, 1);
      v28 = v86;
    }
    ++v27;
    *(_QWORD *)(v28 + 16) = v34 + 1;
    *(_DWORD *)(v28 + 4 * v34 + 32) = v32;
  }
  while (v26 != v27);
  swift_bridgeObjectRelease();
  v15 = v79;
  v9 = v80;
  a1 = v77;
  v8 = v78;
LABEL_14:
  v35 = *(_QWORD *)(v28 + 16);
  v26 = v81;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    v6 = 0.0;
    goto LABEL_24;
  }
  if (v35 == 1)
  {
    v36 = 0;
    v37 = 0.0;
  }
  else
  {
    v36 = v35 & 0x7FFFFFFFFFFFFFFELL;
    v38 = (float *)(v28 + 36);
    v37 = 0.0;
    v39 = v35 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v37 = (float)(v37 + *(v38 - 1)) + *v38;
      v38 += 2;
      v39 -= 2;
    }
    while (v39);
    if (v35 == v36)
      goto LABEL_23;
  }
  v40 = v35 - v36;
  v41 = (float *)(v28 + 4 * v36 + 32);
  do
  {
    v42 = *v41++;
    v37 = v37 + v42;
    --v40;
  }
  while (v40);
LABEL_23:
  swift_bridgeObjectRelease();
  v6 = v37;
LABEL_24:
  sub_227412764();
  v80 = v43;
  objc_msgSend(a1, sel_boundingBox);
  v2 = v44;
  v3 = v45;
  v4 = v46;
  v5 = v47;
  v48 = objc_msgSend(a1, sel_getLines);
  v49 = sub_22758E3DC();

  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_22758ECE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v50)
  {
    v51 = objc_msgSend(a1, sel_getLines);
    v52 = sub_22758E3DC();

    if (!(v52 >> 62))
    {
      v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
      v54 = (unint64_t *)v26;
      swift_bridgeObjectRelease();
      v55 = v6 / (double)v53;
      goto LABEL_31;
    }
LABEL_42:
    swift_bridgeObjectRetain();
    v53 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v54 = (unint64_t *)v26;
  objc_msgSend(a1, sel_confidence);
  v55 = v56;
LABEL_31:
  v57 = a1;
  if (qword_2540B87B8 != -1)
    swift_once();
  v58 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectLanguages;
  swift_beginAccess();
  v59 = *(_QWORD *)(v58 + 8);
  v60 = *(_BYTE *)(v58 + 16);
  v83[0] = *(_QWORD *)v58;
  v83[1] = v59;
  v84 = v60;
  v61 = qword_2540B9100;
  v62 = swift_bridgeObjectRetain();
  if (v61 != -1)
    v62 = swift_once();
  MEMORY[0x24BDAC7A8](v62, v63, v64, v65, v66);
  *(&v76 - 2) = (uint64_t)v83;
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  v67 = v85;
  v68 = objc_msgSend(v57, sel_getCROutputRegion);
  sub_22758C978();
  v69 = v8[9];
  *(_QWORD *)&v23[v8[5]] = v80;
  v70 = &v23[v8[6]];
  *(_QWORD *)v70 = v2;
  *((_QWORD *)v70 + 1) = v3;
  *((_QWORD *)v70 + 2) = v4;
  *((_QWORD *)v70 + 3) = v5;
  *(double *)&v23[v8[7]] = v55;
  v23[v8[8]] = v67;
  *(_QWORD *)&v23[v69] = v68;
  sub_22730DEEC((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v71 = *v54;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v54 = v71;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v71 = sub_2273A5210(0, *(_QWORD *)(v71 + 16) + 1, 1, v71);
    *v54 = v71;
  }
  v74 = *(_QWORD *)(v71 + 16);
  v73 = *(_QWORD *)(v71 + 24);
  if (v74 >= v73 >> 1)
  {
    v71 = sub_2273A5210(v73 > 1, v74 + 1, 1, v71);
    *v54 = v71;
  }
  *(_QWORD *)(v71 + 16) = v74 + 1;
  sub_22730DFEC((uint64_t)v15, v71+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v74, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  return sub_22730DFB0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
}

void sub_227354CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  __CVBuffer *v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a3;
  v60 = a2;
  v4 = type metadata accessor for DetectedTextBlock();
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v59 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18, v19, v20, v21);
  v23 = (char *)&v55 - v22;
  v24 = type metadata accessor for SpatialTextBlock();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26, v27, v28, v29);
  v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v33 = (char *)objc_msgSend(v32, sel_orientation);

  if ((unint64_t)(v33 - 2) > 2)
    v34 = 1;
  else
    v34 = qword_227598458[(_QWORD)(v33 - 2)];
  v35 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  v36 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (v36)
  {
    v37 = objc_msgSend(v36, sel_camera);
    if (v37)
    {
      v38 = v37;
      v39 = *(void **)(a1 + v35);
      if (v39 && (v40 = objc_msgSend(v39, sel_capturedImage)) != 0)
      {
        v41 = v40;
        v42 = *(void **)(a1 + v35);
        if (v42)
        {
          v57 = v41;
          v43 = objc_msgSend(v42, sel_sceneDepth);
          if (v43
            && (v44 = v43,
                v45 = objc_msgSend(v43, sel_depthMap),
                v44,
                (v56 = v45) != 0))
          {
            v46 = v59;
            sub_22730DEEC(v60, v59, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v47 = v38;
            v48 = v57;
            v49 = v56;
            v57 = v47;
            v50 = v47;
            v51 = v48;
            v52 = (__CVBuffer *)v48;
            v53 = v49;
            sub_22756C324(v46, v50, v52, v49, v34, (uint64_t)v23);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
            {

              sub_22731A1A4((uint64_t)v23, &qword_2558D55A8);
            }
            else
            {
              sub_22730DFEC((uint64_t)v23, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
              sub_22730DEEC(v60, v46, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
              sub_22730DEEC((uint64_t)v31, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v16, 0, 1, v24);
              sub_227350F94((uint64_t)v16, v46);

              sub_22730DFB0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
            }
          }
          else
          {

          }
        }
        else
        {
          v54 = v41;

        }
      }
      else
      {

      }
    }
  }
}

void sub_227355000(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, char a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  double v78;
  double v79;
  uint64_t *v80;
  double v81;
  id v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  CGFloat v126;
  CGFloat v127;
  void *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  _BOOL4 v140;
  unint64_t v141;
  __int128 v142;
  int32x2_t v143;
  BOOL v144;
  unint64_t v145;
  id v146;
  BOOL v147;
  unint64_t v148;
  char *v149;
  char *v150;
  id v151;
  void *v152;
  unint64_t v153;
  id v154;
  id v155;
  id v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  CGFloat v160;
  CGFloat v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  _BOOL4 v174;
  void *v175;
  unint64_t v176;
  double *v177;
  double v178;
  double v179;
  double v180;
  double v181;
  id v182;
  id v183;
  uint64_t v184;
  double v185;
  double v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  float32x4_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  id v205;
  uint64_t v206;
  CGFloat v207;
  BOOL v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t i;
  void *v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  void *v225;
  void *v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t j;
  void *v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  float32x4_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  void *v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  double v259;
  BOOL v260;
  uint64_t v261;
  void (*v262)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  unint64_t v284;
  unint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  double v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  int v299;
  _BOOL4 v300;
  int v301;
  _QWORD *v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  double v310;
  unint64_t v311;
  _QWORD *v312;
  uint64_t v313;
  unint64_t v314;
  int v315;
  _BOOL4 v316;
  float32x4_t v317;
  float32x4_t v318;
  __int128 v319;
  id v320;
  int v321;
  unint64_t v322;
  unint64_t v323;
  _BOOL4 v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  float32x4_t v333;
  float32x4_t v334;
  float32x4_t v335;
  float32x4_t v336;
  char *v337;
  uint64_t *v338;
  double v339;
  unint64_t v340;
  id v341;
  void *v342;
  uint64_t v343;
  uint64_t v344;
  __int32 v345;
  uint64_t v346;
  uint64_t v347;
  int *v348;
  _OWORD v349[2];
  uint64_t v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  uint64_t v356;
  uint64_t v357;
  double v358;
  char v359[9];
  CGPoint v360;
  CGRect v361;

  v9 = v8;
  v339 = *(double *)&a8;
  LODWORD(v340) = a7;
  v341 = a5;
  v342 = (void *)a4;
  v14 = sub_22758C930();
  v308 = *(_QWORD *)(v14 - 8);
  v309 = v14;
  MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
  v20 = (char *)&v291 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  v330 = (uint64_t)&v291 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = type metadata accessor for SpatialTextBlock();
  v329 = *(_QWORD *)(v327 - 8);
  MEMORY[0x24BDAC7A8](v327, v27, v28, v29, v30);
  v325 = (uint64_t)&v291 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = (int *)type metadata accessor for DetectedTextBlock();
  v346 = *((_QWORD *)v348 - 1);
  MEMORY[0x24BDAC7A8](v348, v32, v33, v34, v35);
  v37 = (char *)&v291 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
  v343 = (uint64_t)&v291 - v43;
  MEMORY[0x24BDAC7A8](v44, v45, v46, v47, v48);
  v344 = (uint64_t)&v291 - v49;
  MEMORY[0x24BDAC7A8](v50, v51, v52, v53, v54);
  v347 = (uint64_t)&v291 - v55;
  MEMORY[0x24BDAC7A8](v56, v57, v58, v59, v60);
  v62 = (char *)&v291 - v61;
  v307 = v63;
  MEMORY[0x24BDAC7A8](v64, v65, v66, v67, v68);
  v70 = (char *)&v291 - v69;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v71, v72, v73, v74, v75);
  v77 = (char *)&v291 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return;
  v304 = v77;
  v345 = a6 & 1;
  v297 = a1;
  v298 = a2;
  v78 = *(double *)&a1;
  v79 = *(double *)&a2;
  v359[0] = 0;
  v80 = (uint64_t *)OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  if (sub_227529C50())
    v81 = *(double *)&a2;
  else
    v81 = 1.0 - *(double *)&a2;
  v357 = 0;
  v358 = 0.0;
  v82 = *(id *)(v9 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService);
  v83 = sub_227419BB4();

  v331 = v9;
  v328 = v62;
  v84 = v9;
  v295 = v20;
  v296 = v37;
  if (v83)
  {
    if ((v340 & 1) != 0)
    {
      v340 = (unint64_t)v80;
      v85 = sub_22758CFCC();
      v338 = &v291;
      v86 = *(_QWORD *)(v85 - 8);
      v87 = *(_QWORD *)(v86 + 64);
      MEMORY[0x24BDAC7A8](v85, v88, v89, v90, v91);
      v92 = (v87 + 15) & 0xFFFFFFFFFFFFFFF0;
      v337 = (char *)&v291 - v92;
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6E60);
      MEMORY[0x24BDAC7A8](v93, v94, v95, v96, v97);
      v99 = (char *)&v291 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_22731A11C(*(uint64_t *)&v339, (uint64_t)v99, &qword_2558D6E60);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v99, 1, v85) == 1)
      {
        sub_22731A1A4((uint64_t)v99, &qword_2558D6E60);
        v84 = v331;
      }
      else
      {
        v339 = *(double *)(v86 + 32);
        v104 = v337;
        (*(void (**)(char *, char *, uint64_t))&v339)(v337, v99, v85);
        v105 = sub_22758E4C0();
        v106 = (uint64_t)v304;
        v107 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v304, 1, 1, v105);
        v336.i64[0] = (uint64_t)&v291;
        v112 = MEMORY[0x24BDAC7A8](v107, v108, v109, v110, v111);
        v113 = (char *)&v291 - v92;
        v114 = (char *)&v291 - v92;
        v115 = v104;
        (*(void (**)(char *, char *, uint64_t, __n128))(v86 + 16))(v114, v104, v85, v112);
        v116 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        v117 = (v87 + v116 + 7) & 0xFFFFFFFFFFFFFFF8;
        v118 = swift_allocObject();
        v119 = v118 + v116;
        v62 = v328;
        *(_QWORD *)(v118 + 16) = 0;
        *(_QWORD *)(v118 + 24) = 0;
        (*(void (**)(unint64_t, char *, uint64_t))&v339)(v119, v113, v85);
        v120 = v331;
        *(_QWORD *)(v118 + v117) = v331;
        swift_retain();
        sub_2274193DC(v106, (uint64_t)&unk_2558D6E70, v118);
        swift_release();
        v84 = v120;
        (*(void (**)(char *, uint64_t))(v86 + 8))(v115, v85);
      }
      v80 = (uint64_t *)v340;
    }
    else
    {
      v100 = sub_22758E4C0();
      v101 = (uint64_t)v304;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v304, 1, 1, v100);
      v102 = swift_allocObject();
      *(_QWORD *)(v102 + 16) = 0;
      *(_QWORD *)(v102 + 24) = 0;
      v103 = v298;
      *(_QWORD *)(v102 + 32) = v297;
      *(_QWORD *)(v102 + 40) = v103;
      *(double *)(v102 + 48) = v81;
      *(_BYTE *)(v102 + 56) = 0;
      *(_QWORD *)(v102 + 64) = v9;
      swift_retain();
      sub_2274193DC(v101, (uint64_t)&unk_2558D6E58, v102);
      swift_release();
    }
  }
  if (*(_QWORD *)(v84 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument)
    && (v121 = *(_QWORD *)(v84 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks),
        (v122 = *(_QWORD *)(v121 + 16)) != 0))
  {
    v300 = v122 != 1;
    if (v122 == 1)
    {
      swift_bridgeObjectRetain();
      v301 = 0;
      v299 = 0;
    }
    else
    {
      v123 = swift_bridgeObjectRetain();
      v124 = sub_227575E74(v123);
      sub_2273D70E4(v124, 1, (char *)&v355);
      v125 = swift_bridgeObjectRelease();
      v299 = v355;
      v126 = CGRectMake(v125);
      sub_22735A2D8(v121, (double *)&v357, (char *)&v355, v126, v127);
      v301 = v355;
    }
    v131 = sub_2273A4888(v121);
    if (v131)
    {
      v132 = v131;
      v340 = (unint64_t)v80;
      v133 = 0;
      v134 = v121 + ((*(unsigned __int8 *)(v346 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v346 + 80));
      do
      {
        v135 = v133 + 1;
        if (__OFADD__(v133, 1))
        {
          __break(1u);
          JUMPOUT(0x227356C38);
        }
        v136 = sub_22730DEEC(v134 + *(_QWORD *)(v346 + 72) * v133, (uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        v137 = (void *)MEMORY[0x2276B35C4](v136);
        sub_2273580FC((uint64_t)v70, v331, (uint64_t)v342, (uint64_t)v341, v345, v359, v78, v79);
        objc_autoreleasePoolPop(v137);
        sub_22730DFB0((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        ++v133;
      }
      while (v135 != v132);
      swift_bridgeObjectRelease();
      v84 = v331;
      LODWORD(v128) = v300;
      LODWORD(v129) = v301;
      LODWORD(v130) = v299;
      v62 = v328;
      v80 = (uint64_t *)v340;
    }
    else
    {
      swift_bridgeObjectRelease();
      LODWORD(v128) = v300;
      LODWORD(v129) = v301;
      LODWORD(v130) = v299;
    }
  }
  else
  {
    LODWORD(v128) = 0;
    LODWORD(v129) = 0;
    LODWORD(v130) = 0;
  }
  if (qword_2558D4B58 != -1)
    goto LABEL_141;
LABEL_25:
  v138 = qword_2558F3CC8;
  swift_beginAccess();
  v323 = *(_QWORD *)(v138 + 24);
  if (v323 >> 62)
  {
    swift_bridgeObjectRetain();
    v139 = sub_22758ECE8();
    if (!v139)
    {
LABEL_143:
      swift_bridgeObjectRelease();
      v321 = 0;
      *(_QWORD *)&v355 = 0;
      *((_QWORD *)&v355 + 1) = 0xE000000000000000;
      v306 = 1;
      v290 = (char *)&loc_227356DD4 + *((int *)&off_227357AB0 + v130);
      v315 = v130;
      __asm { BR              X10 }
    }
  }
  else
  {
    v139 = *(_QWORD *)((v323 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v139)
      goto LABEL_143;
  }
  v293 = v79;
  v299 = v130;
  v300 = (int)v128;
  v301 = v129;
  v129 = (unint64_t)v80 + v84;
  v305 = v139;
  v80 = (uint64_t *)v323;
  v140 = sub_22741E3E0(v323);
  v315 = 0;
  v316 = v140;
  v321 = 0;
  v141 = 0;
  v302 = v80 + 4;
  *(float *)&v142 = *(float *)&v342 / 100.0;
  v319 = v142;
  *(float *)&v142 = *((float *)&v342 + 1) / 100.0;
  v306 = 1;
  v314 = 0xEA0000000000736BLL;
  v313 = MEMORY[0x24BEE4AD8] + 8;
  v311 = 0xEB00000000726566;
  v79 = -0.025;
  v339 = 1.05;
  v310 = 0.01;
  v332 = 0x80000002275B0460;
  *(float *)v143.i32 = *(float *)&v341 / 100.0;
  v317 = (float32x4_t)vdupq_lane_s32(v143, 0);
  v318 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v142, 0);
  v312 = (_QWORD *)v129;
  while (1)
  {
    v144 = v316;
    v145 = v141;
    sub_22755BFBC(v141, v316, (uint64_t)v80);
    if (v144)
      v146 = (id)v302[v145];
    else
      v146 = (id)MEMORY[0x2276B2BEC](v145, v80);
    v128 = v146;
    v147 = __OFADD__(v145, 1);
    v148 = v145 + 1;
    if (v147)
      goto LABEL_139;
    v322 = v148;
    v149 = (char *)sub_2273F9A4C(v146);
    if (!v149)
    {
      swift_bridgeObjectRelease();

      return;
    }
    v150 = v149;
    *(_QWORD *)&v353 = 0x636F6C4274786574;
    *((_QWORD *)&v353 + 1) = v314;
    v151 = objc_msgSend(v149, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v151)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
    }
    else
    {
      v353 = 0u;
      v354 = 0u;
    }
    sub_22731A160((uint64_t)&v353, (uint64_t)&v355, &qword_2540BA340);
    if (!v356)
    {

      sub_22731A1A4((uint64_t)&v355, &qword_2540BA340);
      goto LABEL_129;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5C60);
    if ((swift_dynamicCast() & 1) == 0)
    {

      goto LABEL_129;
    }
    v152 = v128;
    v153 = v351;
    *(_QWORD *)&v353 = 0x7461746E6569726FLL;
    *((_QWORD *)&v353 + 1) = 0xEB000000006E6F69;
    v154 = objc_msgSend(v150, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v154)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
    }
    else
    {
      v353 = 0u;
      v354 = 0u;
    }
    sub_22731A160((uint64_t)&v353, (uint64_t)&v355, &qword_2540BA340);
    if (!v356)
    {

      swift_bridgeObjectRelease();
      sub_22731A1A4((uint64_t)&v355, &qword_2540BA340);
      goto LABEL_129;
    }
    type metadata accessor for UIInterfaceOrientation(0);
    if ((swift_dynamicCast() & 1) == 0
      || (v303 = v351,
          *(_QWORD *)&v353 = 0x70614D6874706564,
          *((_QWORD *)&v353 + 1) = 0xE800000000000000,
          v155 = objc_msgSend(v150, sel___swift_objectForKeyedSubscript_, sub_22758EE98()),
          swift_unknownObjectRelease(),
          !v155))
    {

      swift_bridgeObjectRelease();
LABEL_129:
      swift_bridgeObjectRelease();
      return;
    }
    sub_22758EAB4();
    swift_unknownObjectRelease();
    sub_227320358(&v353, &v355);
    *(_QWORD *)&v351 = 0x6172656D6163;
    *((_QWORD *)&v351 + 1) = 0xE600000000000000;
    v156 = objc_msgSend(v150, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (v156)
    {
      sub_22758EAB4();
      swift_unknownObjectRelease();
    }
    else
    {
      v351 = 0u;
      v352 = 0u;
    }
    sub_22731A160((uint64_t)&v351, (uint64_t)&v353, &qword_2540BA340);
    v129 = v153;
    if (!*((_QWORD *)&v354 + 1))
    {

      swift_bridgeObjectRelease();
      sub_22731A1A4((uint64_t)&v353, &qword_2540BA340);
LABEL_134:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v355);
      goto LABEL_129;
    }
    sub_22730BA80(0, &qword_2558D6DD0);
    LODWORD(v130) = (_DWORD)v128;
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_134;
    }
    v338 = *(uint64_t **)&v349[0];
    *(_QWORD *)&v351 = 0x6675426C65786970;
    *((_QWORD *)&v351 + 1) = v311;
    v157 = objc_msgSend(v150, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
    swift_unknownObjectRelease();
    if (!v157)
    {

      swift_bridgeObjectRelease();
      goto LABEL_134;
    }
    sub_22758EAB4();
    swift_unknownObjectRelease();
    sub_227320358(&v351, &v353);
    if (sub_2273A4888(v129) < 1)
    {
      v306 = 0;
    }
    else
    {
      v158 = sub_227575E74(v129);
      sub_2273D70E4(v158, 1, (char *)&v351);
      v159 = swift_bridgeObjectRelease();
      v315 = v351;
      v160 = CGRectMake(v159);
      sub_22735A2D8(v129, &v358, (char *)&v351, v160, v161);
      v321 = v351;
    }
    v162 = v312;
    if (qword_2540B87B8 != -1)
      swift_once();
    v163 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
    swift_beginAccess();
    v164 = *(_QWORD *)(v163 + 8);
    v165 = *(_BYTE *)(v163 + 16);
    *(_QWORD *)&v351 = *(_QWORD *)v163;
    *((_QWORD *)&v351 + 1) = v164;
    LOBYTE(v352) = v165;
    v166 = qword_2540B9100;
    v167 = swift_bridgeObjectRetain();
    if (v166 != -1)
      v167 = swift_once();
    MEMORY[0x24BDAC7A8](v167, v168, v169, v170, v171);
    *(&v291 - 2) = (uint64_t)&v351;
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if (LOBYTE(v349[0]) == 1)
    {
      sub_22738B7E4(v129);
      v129 = v172;
    }
    v173 = *((_BYTE *)v162 + 16);
    v337 = v150;
    v320 = v152;
    if ((v173 & 1) != 0)
    {
      v174 = 1;
LABEL_64:
      v324 = v174;
      goto LABEL_66;
    }
    if (vabdd_f64(*(double *)v162, v78) > v310)
    {
      v174 = vabdd_f64(*((double *)v162 + 1), v293) > v310;
      goto LABEL_64;
    }
    v324 = 0;
LABEL_66:
    v342 = (void *)sub_2273A4888(v129);
    if (v342)
      break;
LABEL_28:

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v353);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v355);
    v141 = v322;
    v80 = (uint64_t *)v323;
    v84 = v331;
    if (v322 == v305)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v355 = 0;
      *((_QWORD *)&v355 + 1) = 0xE000000000000000;
      __asm { BR              X10 }
    }
  }
  v175 = (void *)objc_opt_self();
  v176 = 0;
  v326 = *(unsigned __int8 *)(v346 + 80);
  v292 = ~v326;
  v294 = (v326 + 32) & ~v326;
  v340 = v129 + v294;
  v341 = v175;
  while (1)
  {
    v130 = v129;
    sub_22755BF9C(v176, 1, v129);
    v128 = (void *)(v176 + 1);
    if (__OFADD__(v176, 1))
    {
      __break(1u);
      JUMPOUT(0x227356AD8);
    }
    sub_22730DEEC(v340 + *(_QWORD *)(v346 + 72) * v176, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v177 = (double *)&v62[v348[6]];
    v178 = *v177;
    v179 = v177[1];
    v180 = v177[2];
    v181 = v177[3];
    v182 = objc_msgSend(v341, sel_currentDevice);
    v183 = objc_msgSend(v182, sel_orientation);

    if (v183 == (id)3 || v183 == (id)4)
    {
      v178 = CGRectMake(v184);
      v180 = v186;
      v181 = v187;
    }
    else
    {
      v185 = 0.0;
      if (1.0 - v179 - v181 > 0.0)
        v185 = 1.0 - v179 - v181;
    }
    v188 = v178 + -0.025;
    v189 = v185 + -0.025;
    v190 = (v180 + 0.05) * v339;
    v191 = (v181 + 0.05) * v339;
    v192 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
    v193 = swift_beginAccess();
    v194 = *(_QWORD *)(v192 + 8);
    v195 = *(_BYTE *)(v192 + 16);
    *(_QWORD *)&v351 = *(_QWORD *)v192;
    *((_QWORD *)&v351 + 1) = v194;
    LOBYTE(v352) = v195;
    MEMORY[0x24BDAC7A8](v193, v196, v197, v198, v199);
    *(&v291 - 2) = (uint64_t)&v351;
    swift_bridgeObjectRetain();
    sub_22758E7B4();
    v200 = swift_bridgeObjectRelease();
    if (v345)
    {
      v360.x = CGRectMake(v200);
      v360.y = v207;
      v361.origin.x = v188;
      v361.origin.y = v189;
      v361.size.width = v190;
      v361.size.height = v191;
      v208 = CGRectContainsPoint(v361, v360);
      v206 = v347;
      v209 = sub_22730DEEC((uint64_t)v62, v347, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
      if (!v208)
        goto LABEL_107;
    }
    else
    {
      objc_msgSend(v338, sel_transform);
      v333 = v201;
      v334 = v202;
      v335 = v204;
      v336 = v203;
      *(_QWORD *)&v349[0] = 0xD000000000000011;
      *((_QWORD *)&v349[0] + 1) = v332;
      v205 = objc_msgSend(v337, sel___swift_objectForKeyedSubscript_, sub_22758EE98());
      swift_unknownObjectRelease();
      v206 = v347;
      if (v205)
      {
        sub_22758EAB4();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v349, 0, sizeof(v349));
      }
      sub_22731A160((uint64_t)v349, (uint64_t)&v351, &qword_2540BA340);
      if (!*((_QWORD *)&v352 + 1))
      {
        sub_22731A1A4((uint64_t)&v351, &qword_2540BA340);
LABEL_106:
        sub_22730DEEC((uint64_t)v62, v206, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
LABEL_107:
        sub_22730DFB0(v206, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        v249 = v344;
        sub_22730DEEC((uint64_t)v62, v344, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        sub_22730DFB0(v249, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
LABEL_108:
        v250 = v343;
        sub_22730DEEC((uint64_t)v62, v343, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
        goto LABEL_109;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6E48);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_106;
      v221 = v350;
      if (*(_QWORD *)(v350 + 16) && (v222 = sub_2274DE734((uint64_t)v62), (v223 & 1) != 0))
      {
        sub_22730DEEC(*(_QWORD *)(v221 + 56) + *(_QWORD *)(v329 + 72) * v222, v330, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
        v224 = 0;
      }
      else
      {
        v224 = 1;
      }
      v243 = v329;
      v242 = v330;
      v244 = v327;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v329 + 56))(v330, v224, 1, v327);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(v242, 1, v244) == 1)
      {
        sub_22731A1A4(v242, &qword_2558D55A8);
        v206 = v347;
        goto LABEL_106;
      }
      v245 = vaddq_f32(v335, vmlaq_f32(vmlaq_f32(vmulq_n_f32(v333, *(float *)&v319), v318, v334), v317, v336));
      v245.i32[3] = 0;
      v336 = v245;
      v246 = v242;
      v247 = v325;
      sub_22730DFEC(v246, v325, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
      v248 = sub_22756CB3C(v336);
      sub_22730DFB0(v247, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
      v206 = v347;
      if ((v248 & 0x100000000) != 0 || *(float *)&v248 >= 0.25)
        goto LABEL_106;
      v209 = sub_22730DEEC((uint64_t)v62, v347, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    }
    v214 = *(_QWORD *)(v206 + v348[5]);
    if (!v214)
      goto LABEL_107;
    v80 = &v291;
    MEMORY[0x24BDAC7A8](v209, v210, v211, v212, v213);
    *(&v291 - 2) = v206;
    swift_bridgeObjectRetain();
    v215 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_22735E2D8, (uint64_t)(&v291 - 4), v214);
    swift_bridgeObjectRelease();
    v216 = sub_22752B420(0);
    *(_QWORD *)&v351 = v216;
    v217 = sub_2273AFCD0(v215);
    if (v217)
    {
      v84 = v217;
      if (v217 < 1)
      {
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        swift_once();
        goto LABEL_25;
      }
      swift_bridgeObjectRetain();
      for (i = 0; i != v84; ++i)
      {
        v219 = *(void **)(v215 + 8 * i + 32);
        if (v219)
        {
          v220 = v219;
          MEMORY[0x2276B23C4]();
          v129 = *(_QWORD *)((v351 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_22752B4D4(v129);
          sub_22758E424();
          sub_22758E3F4();
        }
      }
      swift_bridgeObjectRelease();
      v216 = v351;
      v62 = v328;
    }
    sub_22752A688(8236, 0xE200000000000000, v216);
    v226 = v225;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v227 = objc_msgSend(v226, sel_string);

    sub_22730DFB0(v347, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v228 = v344;
    sub_22730DEEC((uint64_t)v62, v344, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v233 = v228;
    v234 = *(_QWORD *)(v228 + v348[5]);
    if (!v234)
      break;
    v80 = &v291;
    MEMORY[0x24BDAC7A8](v233, v229, v230, v231, v232);
    *(&v291 - 2) = v235;
    swift_bridgeObjectRetain();
    v236 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_22735DB30, (uint64_t)(&v291 - 4), v234);
    swift_bridgeObjectRelease();
    v237 = sub_22752B420(0);
    *(_QWORD *)&v351 = v237;
    v238 = sub_2273AFCD0(v236);
    if (v238)
    {
      v84 = v238;
      if (v238 < 1)
        goto LABEL_140;
      swift_bridgeObjectRetain();
      for (j = 0; j != v84; ++j)
      {
        v240 = *(void **)(v236 + 8 * j + 32);
        if (v240)
        {
          v241 = v240;
          MEMORY[0x2276B23C4]();
          sub_22752B4D4(*(_QWORD *)((v351 & 0xFFFFFFFFFFFFF8) + 0x10));
          sub_22758E424();
          sub_22758E3F4();
        }
      }
      swift_bridgeObjectRelease();
      v237 = v351;
      v62 = v328;
    }
    sub_22752A688(8236, 0xE200000000000000, v237);
    v252 = v251;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v253 = objc_msgSend(v252, sel_string);

    v254 = sub_22758E1E4();
    v256 = v255;

    if (!v254 && v256 == 0xE000000000000000)
    {
      sub_22730DFB0(v344, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    v258 = sub_22758EE50();
    sub_22730DFB0(v344, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    swift_bridgeObjectRelease();
    v250 = v343;
    sub_22730DEEC((uint64_t)v62, v343, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v257 = v326;
    if ((v258 & 1) == 0)
      goto LABEL_118;
LABEL_109:
    sub_22730DFB0(v250, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
LABEL_110:
    sub_22730DFB0((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v176 = (unint64_t)v128;
    v129 = v130;
    if (v128 == v342)
      goto LABEL_28;
  }
  sub_22730DFB0(v233, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v250 = v343;
  sub_22730DEEC((uint64_t)v62, v343, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v257 = v326;
LABEL_118:
  *(double *)v336.i64 = v190;
  v259 = *(double *)(v250 + v348[7]);
  sub_22730DFB0(v250, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v260 = v324;
  if (v259 <= 0.25)
    v260 = 0;
  if (!v260)
    goto LABEL_110;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v261 = sub_22758E4C0();
  v262 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v261 - 8) + 56);
  v263 = (uint64_t)v304;
  v262(v304, 1, 1, v261);
  v264 = (uint64_t)v296;
  sub_22730DEEC((uint64_t)v62, (uint64_t)v296, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v265 = v294;
  v347 = v307 + 7;
  v348 = (int *)(v257 | 7);
  v266 = (v294 + v307 + 7) & 0xFFFFFFFFFFFFFFF8;
  v267 = swift_allocObject();
  *(_QWORD *)(v267 + 16) = 0;
  *(_QWORD *)(v267 + 24) = 0;
  sub_22730DFEC(v264, v267 + v265, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v268 = v331;
  *(_QWORD *)(v267 + v266) = v331;
  swift_retain();
  sub_2274193DC(v263, (uint64_t)&unk_2558D6E30, v267);
  swift_release();
  v269 = v312;
  v270 = v298;
  *v312 = v297;
  v269[1] = v270;
  *((_BYTE *)v269 + 16) = 0;
  *(_QWORD *)(v268 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
  *(_BYTE *)(v268 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
  v271 = v295;
  sub_22758C924();
  v272 = v268 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v308 + 40))(v272, v271, v309);
  swift_endAccess();
  v273 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__outlinePointSpeak;
  v274 = swift_beginAccess();
  v275 = *(_QWORD *)(v273 + 8);
  v276 = *(_BYTE *)(v273 + 16);
  *(_QWORD *)&v351 = *(_QWORD *)v273;
  *((_QWORD *)&v351 + 1) = v275;
  LOBYTE(v352) = v276;
  MEMORY[0x24BDAC7A8](v274, v277, v278, v279, v280);
  *(&v291 - 2) = (uint64_t)&v351;
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  if (LOBYTE(v349[0]) == 1)
  {
    v262(v304, 1, 1, v261);
    v281 = (uint64_t)v296;
    sub_22730DEEC((uint64_t)v328, (uint64_t)v296, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    sub_22731A374((uint64_t)&v353, (uint64_t)&v351);
    sub_22731A374((uint64_t)&v355, (uint64_t)v349);
    v282 = (v326 + 64) & v292;
    v283 = (v282 + v347) & 0xFFFFFFFFFFFFFFF8;
    v284 = (v283 + 15) & 0xFFFFFFFFFFFFFFF8;
    v285 = (v284 + 39) & 0xFFFFFFFFFFFFFFF8;
    v286 = (v285 + 39) & 0xFFFFFFFFFFFFFFF8;
    v287 = swift_allocObject();
    *(_QWORD *)(v287 + 16) = 0;
    *(_QWORD *)(v287 + 24) = 0;
    *(double *)(v287 + 32) = v188;
    *(double *)(v287 + 40) = v189;
    *(_QWORD *)(v287 + 48) = v336.i64[0];
    *(double *)(v287 + 56) = v191;
    sub_22730DFEC(v281, v287 + v282, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
    v288 = v338;
    *(_QWORD *)(v287 + v283) = v338;
    sub_227320358(&v351, (_OWORD *)(v287 + v284));
    sub_227320358(v349, (_OWORD *)(v287 + v285));
    *(_QWORD *)(v287 + v286) = v303;
    *(_QWORD *)(v287 + ((v286 + 15) & 0xFFFFFFFFFFFFFFF8)) = v268;
    swift_retain();
    v289 = v288;
    sub_2274193DC((uint64_t)v304, (uint64_t)&unk_2558D6E40, v287);
    swift_release();
  }

  sub_22730DFB0((uint64_t)v328, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v353);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v355);
}

uint64_t sub_227357B80(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 32) = a8;
  *(_BYTE *)(v8 + 80) = a7;
  *(double *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 40) = type metadata accessor for DetectedTextBlock();
  *(_QWORD *)(v8 + 48) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v8 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227357C04()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v30;
  uint64_t v31;

  v1 = *(int **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v30 = *MEMORY[0x24BDBF090];
  v3 = *(_QWORD *)(MEMORY[0x24BDBF090] + 16);
  v4 = *(_QWORD *)(MEMORY[0x24BDBF090] + 24);
  sub_22758C978();
  v5 = v1[9];
  *(_QWORD *)(v2 + v1[5]) = 0;
  v6 = v2 + v1[6];
  *(_OWORD *)v6 = v30;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v2 + v1[7]) = 0;
  *(_BYTE *)(v2 + v1[8]) = 0;
  *(_QWORD *)(v2 + v5) = 0;
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v8 = (char *)objc_msgSend(v7, sel_orientation);

  if ((unint64_t)(v8 - 2) > 2)
    v10 = 1;
  else
    v10 = qword_227598458[(_QWORD)(v8 - 2)];
  v31 = v10;
  v11 = CGRectMake(v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD **)(v0 + 56);
  v20 = *(_BYTE *)(v0 + 80);
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_2558D55C0);
  v22 = (uint64_t)v19 + v21[12];
  v23 = v21[16];
  v24 = v21[20];
  v25 = v21[24];
  v26 = v21[28];
  v27 = v21[32];
  *(double *)v19 = v11;
  v19[1] = v13;
  v19[2] = v15;
  v19[3] = v17;
  sub_22730DEEC(v18, v22, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *(_QWORD *)((char *)v19 + v23) = 0;
  *(_QWORD *)((char *)v19 + v24) = 0;
  *(_QWORD *)((char *)v19 + v25) = 0;
  *(_QWORD *)((char *)v19 + v26) = v31;
  *((_BYTE *)v19 + v27) = v20;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  sub_22730DFB0(v18, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v28;
  *v28 = v0;
  v28[1] = sub_227357E08;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 56));
}

uint64_t sub_227357E08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227357E6C()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 56), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227357EBC()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 56), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227357F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227357F64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = v0[2];
  v3 = sub_22758CFCC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_227358008;
  return MAGPointAndSpeakEventHandler.send(_:)(v0[4]);
}

uint64_t sub_227358008()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22735806C()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 32), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2273580B4()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 32), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2273580FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int32 a5, _BYTE *a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  void *v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  __CVBuffer *v81;
  uint64_t v82;
  double v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  CGFloat v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  char *v136;
  uint64_t v137;
  float32x4_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  CGFloat *v165;
  float32x4_t v166;
  float32x4_t v167;
  float32x4_t v168;
  uint64_t v169;
  __CVBuffer *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  float32x4_t v186;
  float32x4_t v187;
  _QWORD v188[2];
  char v189;
  char v190[8];
  double v191;
  double v192;
  double v193;
  double v194;
  char v195;
  char v196;
  CGPoint v197;
  CGRect v198;

  v177 = a6;
  v186.i32[0] = a5;
  v173 = a4;
  v174 = a3;
  v180 = sub_22758C930();
  v179 = *(_QWORD *)(v180 - 8);
  MEMORY[0x24BDAC7A8](v180, v13, v14, v15, v16);
  v178 = (char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v181 = (char *)&v166 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DetectedTextBlock();
  v175 = *(_QWORD *)(v24 - 8);
  v29 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDAC7A8])(v24, v25, v26, v27, v28);
  v182 = (uint64_t)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDAC7A8])(v29, v31, v32, v33, v34);
  v184 = (char *)&v166 - v36;
  v176 = v37;
  MEMORY[0x24BDAC7A8](v35, v38, v39, v40, v41);
  v185 = (uint64_t)&v166 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDAC7A8])(v43, v44, v45, v46, v47);
  v50 = (char *)&v166 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48, v51, v52, v53, v54);
  v56 = (char *)&v166 - v55;
  v57 = type metadata accessor for SpatialTextBlock();
  v58 = *(_QWORD *)(v57 - 8);
  v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDAC7A8])(v57, v59, v60, v61, v62);
  v65 = (char *)&v166 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v63, v66, v67, v68, v69);
  v172 = (uint64_t)&v166 - v70;
  v183 = v24;
  v71 = sub_227529CAC(1, *(double *)(a1 + *(int *)(v24 + 24)));
  v75 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  v76 = *(void **)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (v76)
  {
    v77 = v71;
    v78 = v72;
    v79 = v73;
    v80 = v74;
    v81 = (__CVBuffer *)objc_msgSend(v76, sel_capturedImage);
    if (v81)
    {
      v170 = v81;
      v187.i64[0] = v8;
      if (qword_2540B87B8 != -1)
        swift_once();
      v171 = a2;
      v169 = a1;
      v82 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__pointSpeakFingerLocation;
      swift_beginAccess();
      v83 = *(double *)(v82 + 8);
      v84 = *(_BYTE *)(v82 + 16);
      v191 = *(double *)v82;
      v192 = v83;
      LOBYTE(v193) = v84;
      v85 = qword_2540B9100;
      v86 = swift_bridgeObjectRetain();
      if (v85 != -1)
        v86 = swift_once();
      MEMORY[0x24BDAC7A8](v86, v87, v88, v89, v90);
      *((_QWORD *)&v166 - 2) = &v191;
      v91 = v187.i64[0];
      sub_22758E7B4();
      v187.i64[0] = v91;
      swift_bridgeObjectRelease();
      v92 = v171;
      if ((v186.i8[0] & 1) == 0)
      {
        v93 = *(void **)(v171 + v75);
        if (v93)
        {
          v94 = objc_msgSend(v93, sel_camera);
          objc_msgSend(v94, sel_transform);
          v166 = v95;
          v167 = v96;
          v186 = v97;
          v168 = v98;

          v99 = *(_QWORD *)(v92
                          + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
          v100 = v169;
          if (!*(_QWORD *)(v99 + 16))
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, 1, 1, v57);
            v102 = (uint64_t)v184;
LABEL_33:
            sub_22731A1A4((uint64_t)v56, &qword_2558D55A8);
            v111 = v185;
LABEL_34:
            sub_22730DEEC(v100, v111, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            goto LABEL_35;
          }
          swift_bridgeObjectRetain();
          v101 = sub_2274DE734(v100);
          v102 = (uint64_t)v184;
          if ((v103 & 1) != 0)
          {
            sub_22730DEEC(*(_QWORD *)(v99 + 56) + *(_QWORD *)(v58 + 72) * v101, (uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
            v104 = 0;
          }
          else
          {
            v104 = 1;
          }
          v109 = v187.i64[0];
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, v104, 1, v57);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
            goto LABEL_33;
          v138 = vaddq_f32(v168, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v166, *(float *)&v174 / 100.0), v167, *((float *)&v174 + 1) / 100.0), v186, *(float *)&v173 / 100.0));
          v138.i32[3] = 0;
          v187 = v138;
          v139 = v172;
          sub_22730DFEC((uint64_t)v56, v172, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
          v140 = sub_22756CB3C(v187);
          sub_22730DFB0(v139, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
          v111 = v185;
          if ((v140 & 0x100000000) != 0 || *(float *)&v140 >= 0.25)
            goto LABEL_34;
          v114 = sub_22730DEEC(v100, v185, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
LABEL_20:
          v119 = *(_QWORD *)(v111 + *(int *)(v183 + 20));
          if (v119)
          {
            MEMORY[0x24BDAC7A8](v114, v115, v116, v117, v118);
            *((_QWORD *)&v166 - 2) = v111;
            swift_bridgeObjectRetain();
            v120 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_22735E2D8, (uint64_t)(&v166 - 2), v119);
            swift_bridgeObjectRelease();
            v121 = (void *)sub_22752A188(v120);
            swift_bridgeObjectRelease();
            v122 = objc_msgSend(v121, sel_string);

            sub_22730DFB0(v111, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v123 = sub_22730DEEC(v100, v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v128 = *(_QWORD *)(v102 + *(int *)(v183 + 20));
            if (v128)
            {
              MEMORY[0x24BDAC7A8](v123, v124, v125, v126, v127);
              *((_QWORD *)&v166 - 2) = v102;
              swift_bridgeObjectRetain();
              v129 = sub_227393760((void (*)(uint64_t *__return_ptr, _QWORD *))sub_22735E2D8, (uint64_t)(&v166 - 2), v128);
              swift_bridgeObjectRelease();
              v130 = (void *)sub_22752A188(v129);
              swift_bridgeObjectRelease();
              v131 = objc_msgSend(v130, sel_string);

              v132 = sub_22758E1E4();
              v134 = v133;

              if (!v132 && v134 == 0xE000000000000000)
              {
                sub_22730DFB0(v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
                swift_bridgeObjectRelease();
LABEL_42:

                return;
              }
              v143 = sub_22758EE50();
              sub_22730DFB0(v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
              swift_bridgeObjectRelease();
              v141 = (uint64_t)v181;
              v142 = v182;
              if ((v143 & 1) != 0)
                goto LABEL_42;
              v187.i64[0] = v109;
            }
            else
            {
              v187.i64[0] = v109;
              sub_22730DFB0(v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
              v141 = (uint64_t)v181;
              v142 = v182;
            }
            *v177 = 1;
            v144 = sub_22758E4C0();
            v186.i64[0] = *(_QWORD *)(*(_QWORD *)(v144 - 8) + 56);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v186.i64[0])(v141, 1, 1, v144);
            sub_22730DEEC(v169, v142, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v145 = *(unsigned __int8 *)(v175 + 80);
            v146 = (v145 + 32) & ~v145;
            v147 = v176 + 7;
            v148 = (v146 + v176 + 7) & 0xFFFFFFFFFFFFFFF8;
            v185 = v145 | 7;
            v149 = swift_allocObject();
            *(_QWORD *)(v149 + 16) = 0;
            *(_QWORD *)(v149 + 24) = 0;
            sub_22730DFEC(v142, v149 + v146, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
            v150 = v171;
            *(_QWORD *)(v149 + v148) = v171;
            swift_retain();
            sub_2274193DC(v141, (uint64_t)&unk_2558D6E80, v149);
            swift_release();
            v151 = v150 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
            *(double *)v151 = a7;
            *(double *)(v151 + 8) = a8;
            *(_BYTE *)(v151 + 16) = 0;
            *(_QWORD *)(v150 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = 0;
            *(_BYTE *)(v150 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback) = 0;
            v152 = v178;
            sub_22758C924();
            v153 = v150 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
            swift_beginAccess();
            (*(void (**)(uint64_t, char *, uint64_t))(v179 + 40))(v153, v152, v180);
            swift_endAccess();
            v154 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__outlinePointSpeak;
            v155 = swift_beginAccess();
            v156 = *(_QWORD *)(v154 + 8);
            v157 = *(_BYTE *)(v154 + 16);
            v188[0] = *(_QWORD *)v154;
            v188[1] = v156;
            v189 = v157;
            MEMORY[0x24BDAC7A8](v155, v158, v159, v160, v161);
            *((_QWORD *)&v166 - 2) = v188;
            swift_bridgeObjectRetain();
            sub_22758E7B4();
            swift_bridgeObjectRelease();
            if (v196 == 1)
            {
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v186.i64[0])(v141, 1, 1, v144);
              v162 = v182;
              sub_22730DEEC(v169, v182, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
              v163 = (v145 + 40) & ~v145;
              v164 = (_QWORD *)swift_allocObject();
              v164[2] = 0;
              v164[3] = 0;
              v164[4] = v150;
              sub_22730DFEC(v162, (uint64_t)v164 + v163, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
              v165 = (CGFloat *)((char *)v164 + ((v163 + v147) & 0xFFFFFFFFFFFFFFF8));
              *v165 = v77;
              v165[1] = v78;
              v165[2] = v79;
              v165[3] = v80;
              swift_retain();
              sub_2274193DC(v141, (uint64_t)&unk_2558D6E90, (uint64_t)v164);
              swift_release();
            }
            goto LABEL_42;
          }
LABEL_35:
          sub_22730DFB0(v111, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
          sub_22730DEEC(v100, v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);

          sub_22730DFB0(v102, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
          return;
        }
      }
      v105 = *(_QWORD *)(v171
                       + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
      v100 = v169;
      if (*(_QWORD *)(v105 + 16))
      {
        swift_bridgeObjectRetain();
        v106 = sub_2274DE734(v100);
        v102 = (uint64_t)v184;
        if ((v107 & 1) != 0)
        {
          sub_22730DEEC(*(_QWORD *)(v105 + 56) + *(_QWORD *)(v58 + 72) * v106, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
          v108 = 0;
        }
        else
        {
          v108 = 1;
        }
        v109 = v187.i64[0];
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v50, v108, 1, v57);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v50, 1, v57) != 1)
        {
          sub_22730DFEC((uint64_t)v50, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
          v135 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
          v136 = (char *)objc_msgSend(v135, sel_orientation);

          v111 = v185;
          if ((unint64_t)(v136 - 2) > 2)
            v137 = 1;
          else
            v137 = qword_227598458[(_QWORD)(v136 - 2)];
          sub_22735B180((uint64_t)v65, v170, v137, (uint64_t)v190);
          sub_22730DFB0((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
          v110 = sub_22731A160((uint64_t)v190, (uint64_t)&v191, &qword_2558D6E98);
          if ((v195 & 1) == 0)
          {
            v77 = v191;
            v78 = v192;
            v79 = v193;
            v80 = v194;
          }
LABEL_19:
          v197.x = CGRectMake(v110);
          v197.y = v112;
          v198.origin.x = v77;
          v198.origin.y = v78;
          v198.size.width = v79;
          v198.size.height = v80;
          v113 = CGRectContainsPoint(v198, v197);
          v114 = sub_22730DEEC(v100, v111, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
          if (!v113)
            goto LABEL_35;
          goto LABEL_20;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v50, 1, 1, v57);
        v109 = v187.i64[0];
        v102 = (uint64_t)v184;
      }
      v110 = sub_22731A1A4((uint64_t)v50, &qword_2558D55A8);
      v111 = v185;
      goto LABEL_19;
    }
  }
}

uint64_t sub_227358E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227358EE0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (uint64_t *)v0[4];
  v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55B8);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227593AB0;
  sub_22730DEEC(v2, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *v1 = v5;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_227358008;
  return MAGPointAndSpeakEventHandler.send(_:)(v0[4]);
}

uint64_t sub_227358FD4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(double *)(v9 + 48) = a3;
  *(double *)(v9 + 56) = a4;
  *(double *)(v9 + 32) = a1;
  *(double *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 16) = a8;
  *(_QWORD *)(v9 + 24) = a9;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v9 + 64) = swift_task_alloc();
  *(_QWORD *)(v9 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55A8);
  *(_QWORD *)(v9 + 80) = swift_task_alloc();
  v10 = type metadata accessor for SpatialTextBlock();
  *(_QWORD *)(v9 + 88) = v10;
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227359090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  id v36;
  id v37;
  __int128 v38;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    v3 = sub_2274DE734(v2);
    if ((v4 & 1) != 0)
    {
      sub_22730DEEC(*(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 96) + 72) * v3, *(_QWORD *)(v0 + 80), (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
      v5 = 0;
    }
    else
    {
      v5 = 1;
    }
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
    {
      v18 = *(_QWORD *)(v0 + 104);
      v19 = *(_QWORD *)(v0 + 64);
      sub_22730DFEC(*(_QWORD *)(v0 + 80), v18, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
      sub_22730DEEC(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
      type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
      swift_storeEnumTagMultiPayload();
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v20;
      *v20 = v0;
      v20[1] = sub_2273593A0;
      return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 64));
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 88));
  }
  v9 = *(_QWORD *)(v0 + 16);
  sub_22731A1A4(*(_QWORD *)(v0 + 80), &qword_2558D55A8);
  v10 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame;
  v11 = *(void **)(v9 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  if (!v11)
  {
    v36 = 0;
    v37 = 0;
LABEL_14:
    v35 = 0;
    goto LABEL_16;
  }
  v12 = objc_msgSend(v11, sel_camera);
  v13 = *(void **)(v9 + v10);
  v37 = v12;
  if (v13)
  {
    v14 = objc_msgSend(v13, sel_capturedImage);
    v15 = *(void **)(v9 + v10);
    v36 = v14;
    if (v15)
    {
      v16 = objc_msgSend(v15, sel_sceneDepth);
      if (v16)
      {
        v17 = v16;
        v35 = objc_msgSend(v16, sel_depthMap);

        goto LABEL_16;
      }
    }
    goto LABEL_14;
  }
  v35 = 0;
  v36 = 0;
LABEL_16:
  v22 = *(_QWORD *)(v0 + 72);
  v24 = *(_QWORD *)(v0 + 48);
  v23 = *(_QWORD *)(v0 + 56);
  v38 = *(_OWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 24);
  v26 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation);
  v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_2558D55C0);
  v28 = v22 + v27[12];
  v29 = v27[16];
  v30 = v27[20];
  v31 = v27[24];
  v32 = v27[28];
  v33 = v27[32];
  *(_OWORD *)v22 = v38;
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v23;
  sub_22730DEEC(v25, v28, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *(_QWORD *)(v22 + v29) = v37;
  *(_QWORD *)(v22 + v30) = v36;
  *(_QWORD *)(v22 + v31) = v35;
  *(_QWORD *)(v22 + v32) = v26;
  *(_BYTE *)(v22 + v33) = 0;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v34 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v34;
  *v34 = v0;
  v34[1] = sub_227359484;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 72));
}

uint64_t sub_2273593A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227359404()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  sub_22730DFB0(*(_QWORD *)(v0 + 64), type metadata accessor for MAGPointAndSpeakEvent);
  sub_22730DFB0(v1, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359484()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2273594E8()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 72), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359554()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  sub_22730DFB0(*(_QWORD *)(v0 + 64), type metadata accessor for MAGPointAndSpeakEvent);
  sub_22730DFB0(v1, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTextBlock);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2273595D4()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 72), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  v5[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227359698()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (uint64_t *)v0[4];
  v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D55B8);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227593AB0;
  sub_22730DEEC(v2, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *v1 = v5;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_22735978C;
  return MAGPointAndSpeakEventHandler.send(_:)(v0[4]);
}

uint64_t sub_22735978C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2273597F0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;

  *(_QWORD *)(v12 + 160) = a12;
  *(_QWORD *)(v12 + 168) = v14;
  *(_QWORD *)(v12 + 144) = a10;
  *(_QWORD *)(v12 + 152) = a11;
  *(_QWORD *)(v12 + 128) = a8;
  *(_QWORD *)(v12 + 136) = a9;
  *(double *)(v12 + 112) = a3;
  *(double *)(v12 + 120) = a4;
  *(double *)(v12 + 96) = a1;
  *(double *)(v12 + 104) = a2;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v12 + 176) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22735985C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  __int128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 128);
  v19 = *(void **)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v17 = *(_OWORD *)(v0 + 96);
  sub_22731A374(*(_QWORD *)(v0 + 144), v0 + 16);
  type metadata accessor for CVBuffer(0);
  swift_dynamicCast();
  v5 = *(_QWORD *)(v0 + 80);
  sub_22731A374(v2, v0 + 48);
  swift_dynamicCast();
  v6 = *(_QWORD *)(v0 + 88);
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_2558D55C0);
  v8 = v1 + v7[12];
  v9 = v7[16];
  v10 = v7[20];
  v11 = v7[24];
  v12 = v7[28];
  v13 = v7[32];
  *(_OWORD *)v1 = v17;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  sub_22730DEEC(v18, v8, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
  *(_QWORD *)(v1 + v9) = v19;
  *(_QWORD *)(v1 + v10) = v5;
  *(_QWORD *)(v1 + v11) = v6;
  *(_QWORD *)(v1 + v12) = v20;
  *(_BYTE *)(v1 + v13) = 0;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v14 = v19;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v15;
  *v15 = v0;
  v15[1] = sub_2273599F8;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 176));
}

uint64_t sub_2273599F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227359A5C()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 176), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359AA4()
{
  uint64_t v0;

  sub_22730DFB0(*(_QWORD *)(v0 + 176), type metadata accessor for MAGPointAndSpeakEvent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = type metadata accessor for MAGOutputEvent(0);
  *(_QWORD *)(v5 + 32) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227359B6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(uint64_t **)(v0 + 40);
  sub_22739E614();
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_22758E1B4();
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  v7 = sub_22758E1E4();
  v9 = v8;

  swift_bridgeObjectRelease();
  *v1 = v7;
  v1[1] = v9;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v10;
  *v10 = v0;
  v10[1] = sub_227359CDC;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 40));
}

uint64_t sub_227359CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_22730DFB0(v2, type metadata accessor for MAGPointAndSpeakEvent);
  return swift_task_switch();
}

uint64_t sub_227359D50()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  char v3;

  v2 = *(int **)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 80);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
  *(_BYTE *)(v1 + v2[5]) = v3;
  type metadata accessor for MAGOutputEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_22758C978();
  *(_BYTE *)(v1 + v2[6]) = 1;
  *(_BYTE *)(v1 + v2[7]) = 0;
  sub_22758E49C();
  *(_QWORD *)(v0 + 72) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227359E24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_2273C9264(v1);
  swift_release();
  sub_22730DFB0(v1, type metadata accessor for MAGOutputEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359E94()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227359ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = type metadata accessor for MAGOutputEvent(0);
  *(_QWORD *)(v5 + 32) = swift_task_alloc();
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227359F50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(uint64_t **)(v0 + 40);
  sub_22739E614();
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_22758E1B4();
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  v7 = sub_22758E1E4();
  v9 = v8;

  swift_bridgeObjectRelease();
  *v1 = v7;
  v1[1] = v9;
  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v10;
  *v10 = v0;
  v10[1] = sub_22735A0C0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 40));
}

uint64_t sub_22735A0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_22730DFB0(v2, type metadata accessor for MAGPointAndSpeakEvent);
  return swift_task_switch();
}

uint64_t sub_22735A134()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  char v3;

  v2 = *(int **)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 80);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
  *(_BYTE *)(v1 + v2[5]) = v3;
  type metadata accessor for MAGOutputEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_22758C978();
  *(_BYTE *)(v1 + v2[6]) = 1;
  *(_BYTE *)(v1 + v2[7]) = 0;
  sub_22758E49C();
  *(_QWORD *)(v0 + 72) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_22735A208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22735A260()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_227352EA0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 24));
}

void sub_22735A2D8(uint64_t a1@<X0>, double *a2@<X1>, char *a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double y;
  double v44;
  double v45;
  double v46;
  double MaxX;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double MaxY;
  double v55;
  double v56;
  double v57;
  BOOL v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  char *v65;
  double v66;
  double v67;
  double v68;
  double v69;
  int v70;
  double v71;
  double v72;
  double v73;
  double v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v10 = type metadata accessor for DetectedTextBlock();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v64 = a2;
    v65 = a3;
    v20 = (double *)&v18[*(int *)(v16 + 24)];
    v21 = (void *)objc_opt_self();
    v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v23 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v24 = 0;
    v62 = v19 - 1;
    v63 = a1;
    v25 = a1 + v22;
    v26 = 1;
    v74 = 1.79769313e308;
    v73 = -0.025;
    v72 = 0.05;
    v71 = 1.05;
    v27 = 0.0;
    v28 = 0.0;
    v29 = 0.0;
    v30 = 0.0;
    v61 = a1 + v22;
LABEL_3:
    v66 = v30;
    v67 = v29;
    v68 = v28;
    v69 = v27;
    v70 = v26;
    v31 = v25 + v23 * v24;
    do
    {
      sub_22730DEEC(v31, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
      v32 = *v20;
      v33 = v20[1];
      v34 = v20[2];
      v35 = v20[3];
      sub_22730DFB0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DetectedTextBlock);
      v36 = objc_msgSend(v21, sel_currentDevice);
      v37 = objc_msgSend(v36, sel_orientation);

      if (v37 == (id)3 || v37 == (id)4)
      {
        v32 = CGRectMake(v38);
        v34 = v40;
        v35 = v41;
      }
      else if (1.0 - v33 - v35 > 0.0)
      {
        v39 = 1.0 - v33 - v35;
      }
      else
      {
        v39 = 0.0;
      }
      v42 = v32 + v73;
      v44 = (v34 + v72) * v71;
      v45 = (v35 + v72) * v71;
      v75.origin.x = v42;
      v75.origin.y = v39 + v73;
      y = v75.origin.y;
      v75.size.width = v44;
      v75.size.height = v45;
      v46 = CGRectGetMinX(v75) - a4;
      v76.origin.x = v42;
      v76.origin.y = y;
      v76.size.width = v44;
      v76.size.height = v45;
      MaxX = CGRectGetMaxX(v76);
      if (v46 > 0.0)
        v48 = v46;
      else
        v48 = 0.0;
      v49 = a4;
      v50 = a4 - MaxX;
      if (v48 > v50)
        v51 = v48;
      else
        v51 = v50;
      v77.origin.x = v42;
      v77.origin.y = y;
      v77.size.width = v44;
      v77.size.height = v45;
      v52 = a5;
      v53 = CGRectGetMinY(v77) - a5;
      v78.origin.x = v42;
      v78.origin.y = y;
      v78.size.width = v44;
      v78.size.height = v45;
      MaxY = CGRectGetMaxY(v78);
      v55 = 0.0;
      if (v53 > 0.0)
        v55 = v53;
      a5 = v52;
      v56 = v52 - MaxY;
      if (v55 > v56)
        v56 = v55;
      v57 = sqrt(v51 * v51 + v56 * v56);
      if (v57 < v74)
      {
        v26 = 0;
        v27 = v42;
        v28 = y;
        v29 = v44;
        v30 = v45;
        v74 = v57;
        v58 = v62 == v24++;
        a4 = v49;
        v25 = v61;
        if (!v58)
          goto LABEL_3;
        swift_bridgeObjectRelease();
        a3 = v65;
        *v64 = v57;
        goto LABEL_28;
      }
      ++v24;
      v31 += v23;
      a4 = v49;
    }
    while (v19 != v24);
    swift_bridgeObjectRelease();
    a3 = v65;
    *v64 = v74;
    if ((v70 & 1) != 0)
      goto LABEL_31;
    y = v68;
    v42 = v69;
    v45 = v66;
    v44 = v67;
LABEL_28:
    v79.origin.x = v42;
    v79.origin.y = y;
    v79.size.width = v44;
    v79.size.height = v45;
    if (CGRectGetMinX(v79) > a4)
    {
      v59 = 6;
      goto LABEL_32;
    }
    v80.origin.x = v42;
    v80.origin.y = y;
    v80.size.width = v44;
    v80.size.height = v45;
    if (CGRectGetMaxX(v80) < a4)
    {
      v59 = 5;
      goto LABEL_32;
    }
    v81.origin.x = v42;
    v81.origin.y = y;
    v81.size.width = v44;
    v81.size.height = v45;
    if (CGRectGetMinY(v81) > a5)
    {
      v59 = 8;
      goto LABEL_32;
    }
    v82.origin.x = v42;
    v82.origin.y = y;
    v82.size.width = v44;
    v82.size.height = v45;
    if (CGRectGetMaxY(v82) < a5)
    {
      v59 = 3;
      goto LABEL_32;
    }
  }
  else
  {
    *a2 = 1.79769313e308;
  }
LABEL_31:
  v59 = 0;
LABEL_32:
  *a3 = v59;
}

void sub_22735A6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22758DF20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4, v5, v6, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758DF68();
  v41 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22758DF80();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19, v20, v21, v22);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v26, v27, v28, v29);
  v31 = (char *)&v37 - v30;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_startedPulseForOutOfFrame) = 1;
    v32 = objc_msgSend((id)objc_opt_self(), sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_playHandAbsentTone, 0, 1, 0.25);
    v33 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer) = v32;

    sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
    v39 = v3;
    v34 = sub_22758E79C();
    v40 = v10;
    v35 = (void *)v34;
    sub_22758DF74();
    MEMORY[0x2276B1FE0](v24, 2.0);
    v38 = *(void (**)(char *, uint64_t))(v18 + 8);
    v38(v24, v17);
    aBlock[4] = sub_22735D580;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227367AE4;
    aBlock[3] = &block_descriptor_33_0;
    v36 = _Block_copy(aBlock);
    swift_retain();
    sub_22758DF44();
    v42 = MEMORY[0x24BEE4AF8];
    sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22735D598((unint64_t *)&qword_2540B9E00, (uint64_t *)&unk_2540B9DF0);
    sub_22758EACC();
    MEMORY[0x2276B2754](v31, v16, v9, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v2);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v40);
    v38(v31, v17);
    swift_release();
  }
}

void sub_22735AAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];
  uint64_t v49[4];
  _QWORD v50[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22758E4C0();
  v48[0] = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48[0])(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  swift_retain();
  sub_2274193DC((uint64_t)v8, (uint64_t)&unk_2558D6DB8, (uint64_t)v10);
  swift_release();
  if (qword_2540B87B8 != -1)
    swift_once();
  v11 = (_QWORD *)(qword_2540BCDD0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
  swift_beginAccess();
  v12 = v11[1];
  v13 = v11[2];
  v50[0] = *v11;
  v50[1] = v12;
  v50[2] = v13;
  v14 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v15 = swift_bridgeObjectRetain();
  if (v14 != -1)
    v15 = swift_once();
  MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v48[-2] = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D18);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_227367600(2, v49[0]);
  swift_bridgeObjectRelease();
  if (v20)
    goto LABEL_22;
  v21 = (uint64_t *)(qword_2540BCDD0
                  + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
  v22 = swift_beginAccess();
  v23 = v21[1];
  v24 = v21[2];
  v49[0] = *v21;
  v49[1] = v23;
  v49[2] = v24;
  MEMORY[0x24BDAC7A8](v22, v25, v26, v27, v28);
  v48[-2] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = sub_227367600(3, v48[1]);
  swift_bridgeObjectRelease();
  if (v29)
  {
LABEL_22:
    v30 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand;
    if (*(double *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithHand) > 2.0)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48[0])(v8, 1, 1, v9);
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = 0;
      v31[3] = 0;
      v31[4] = v1;
      swift_retain();
      sub_227367B10((uint64_t)v8, (uint64_t)&unk_2558D6DC8, (uint64_t)v31);
      swift_release();
      *(_QWORD *)(v1 + v30) = 0;
    }
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandDetectedFeedback) = 0;
  v32 = v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastFingerPoint;
  *(_QWORD *)v32 = 0;
  *(_QWORD *)(v32 + 8) = 0;
  v33 = 1;
  *(_BYTE *)(v32 + 16) = 1;
  v34 = (id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
             + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  v35 = objc_msgSend(*v34, sel_currentFrame);
  v36 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedFrame) = v35;

  v37 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedDocument) = 0;

  v38 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedTextBlocks) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastUnobstructedSpatialTextBlocks) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v39 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v40 = (char *)objc_msgSend(v39, sel_orientation);

  if ((unint64_t)(v40 - 2) <= 2)
    v33 = qword_227598458[(_QWORD)(v40 - 2)];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastOrientation) = v33;
  v41 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue;
  v42 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue);
  v43 = __OFADD__(v42, 1);
  v44 = v42 + 1;
  if (v43)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForQueue) = v44;
  v45 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage);
  v43 = __OFADD__(v45, 1);
  v46 = v45 + 1;
  if (v43)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutHandPoseForMessage) = v46;
  if (v44 >= 3)
  {
    if (qword_2558D4B58 == -1)
    {
LABEL_15:
      v47 = qword_2558F3CC8;
      swift_beginAccess();
      *(_QWORD *)(v47 + 24) = v38;
      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(qword_2558F3CC8 + 16), sel_removeAllObjects);
      *(_QWORD *)(v1 + v41) = 0;
      goto LABEL_16;
    }
LABEL_19:
    swift_once();
    goto LABEL_15;
  }
LABEL_16:
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutDeviceDirectionMessage) = 0;
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithoutFingerDirectionMessage) = 0;
  sub_22741EBBC(2);
}

uint64_t sub_22735AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MAGPointAndSpeakEvent(0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22735B054()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for MAGPointAndSpeakEvent.PointAndSpeakEventType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_227352EA0;
  return MAGPointAndSpeakEventHandler.send(_:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_22735B0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_22735B0E4()
{
  uint64_t v0;

  sub_22758E49C();
  *(_QWORD *)(v0 + 24) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_22735B14C()
{
  uint64_t v0;

  swift_release();
  sub_22735A6EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22735B180(uint64_t a1@<X0>, __CVBuffer *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  int64_t Width;
  size_t Height;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  double v15;
  id v16;
  void *v17;
  double v18;
  id v19;
  id *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;

  v9 = type metadata accessor for SpatialTextBlock();
  v29 = *(_OWORD *)(a1 + *(int *)(v9 + 32));
  v30 = *(_OWORD *)(a1 + *(int *)(v9 + 24));
  if (UIInterfaceOrientationIsLandscape(a3))
  {
    Width = CVPixelBufferGetWidth(a2);
    Height = CVPixelBufferGetHeight(a2);
  }
  else
  {
    Width = CVPixelBufferGetHeight(a2);
    Height = CVPixelBufferGetWidth(a2);
  }
  v12 = Height;
  v13 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService;
  v14 = (id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_arService)
             + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  v15 = 0.0;
  if (!*v14)
    goto LABEL_9;
  v16 = objc_msgSend(*v14, sel_currentFrame);
  if (!v16)
    goto LABEL_9;
  v17 = v16;
  v18 = (double)Width;
  v19 = objc_msgSend(v16, sel_camera);

  objc_msgSend(v19, sel_projectPoint_orientation_viewportSize_, a3, *(double *)&v30, v18, (double)v12);
  v20 = (id *)(*(_QWORD *)(v4 + v13) + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (!*v20)
    goto LABEL_9;
  v21 = objc_msgSend(*v20, sel_currentFrame);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_camera);

    objc_msgSend(v23, sel_projectPoint_orientation_viewportSize_, a3, *(double *)&v29, v18, (double)v12);
    v15 = CGRectMake(v24);
    v28 = 0;
  }
  else
  {
LABEL_9:
    v28 = 1;
    v25 = 0;
    v26 = 0;
    v27 = 0;
  }
  *(double *)a4 = v15;
  *(_QWORD *)(a4 + 8) = v25;
  *(_QWORD *)(a4 + 16) = v26;
  *(_QWORD *)(a4 + 24) = v27;
  *(_BYTE *)(a4 + 32) = v28;
}

void sub_22735B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_shortSpeechAnnouncements) = v4;
    if (v4 >= 3)
      *(_QWORD *)(v0 + v1) = 0;
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v7 = (void *)sub_22758E1B4();
    v8 = (void *)sub_22758E1B4();
    v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

    sub_22758E1E4();
  }
}

uint64_t sub_22735B514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_22735B52C()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  int8x16_t *v11;
  _QWORD *v12;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine), sel_imageNode);

  if (!v1)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 24)+ OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager)+ 16), sel_deviceMotion);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_rotationRate);
    v5 = v4;
    v7 = v6;
    v9 = v8;

    if (sqrt(v9 * v9 + v5 * v5 + v7 * v7) > 1.75)
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  v11 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v11;
  v11[1] = vextq_s8(*(int8x16_t *)(v0 + 16), *(int8x16_t *)(v0 + 16), 8uLL);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v12;
  *v12 = v0;
  v12[1] = sub_22735B6A4;
  return sub_22758EE80();
}

uint64_t sub_22735B6A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22735B710()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_22735B720()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_22735B758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v13 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_engine), sel_imageNode, MEMORY[0x24BDAC7A8](v6, v9, v10, v11, v12).n128_f64[0]);
  if (v13)
  {
    v14 = v13;
    v15 = *(void **)(a3 + 16);
    v16 = objc_allocWithZone(MEMORY[0x24BDFE7F0]);
    v17 = v15;
    v18 = objc_msgSend(v16, sel_init);
    objc_msgSend(v18, sel_setDetectTraits_, 1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v19 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_22735CDC8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227497894;
    aBlock[3] = &block_descriptor_9;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_triggerWithPixelBuffer_exifOrientation_options_cacheKey_resultHandler_, v17, 6, v18, 0, v21);
    _Block_release(v21);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22735B92C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  id v24;
  uint64_t v26;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10, v11, v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = a1;
  *((_QWORD *)v23 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v22], (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v24 = a1;
  swift_retain();
  sub_227367B10((uint64_t)v20, (uint64_t)&unk_2558D6DA0, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_22735BA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[26] = a5;
  v6[27] = a6;
  v6[25] = a4;
  v6[28] = type metadata accessor for MAGOutputEvent(0);
  v6[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22735BAE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t ObjCClassFromMetadata;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  id v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v2 = *(void **)(v0 + 200);
  if (!v2)
    goto LABEL_49;
  v3 = objc_msgSend(v2, sel_blurFeatures);
  sub_22730BA80(0, &qword_2558D6DA8);
  v4 = sub_22758E3DC();

  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  v63 = sub_22758ECE8();
  swift_bridgeObjectRelease();
  if (!v63)
  {
LABEL_48:
    swift_bridgeObjectRelease();
LABEL_49:
    sub_2273203F0();
    v64 = swift_allocError();
    *(_QWORD *)(v65 + 8) = 0;
    *(_QWORD *)(v65 + 16) = 0;
    *(_QWORD *)v65 = 8;
    *(_BYTE *)(v65 + 24) = 4;
    *(_QWORD *)(v0 + 192) = v64;
    goto LABEL_50;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2276B2BEC](0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    v5 = *(id *)(v4 + 32);
  }
  v6 = v5;
  v7 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_blur);
  v9 = v8;
  *(double *)(v0 + 240) = v8;

  v10 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur;
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_consecutiveFramesWithBlur;
  if (v9 >= 0.85)
  {
    v11 = *(_QWORD *)(v7 + v10);
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (!v12)
    {
      *(_QWORD *)(v7 + v10) = v13;
      if (v13 < 31)
        goto LABEL_30;
      v66 = v0 + 16;
      v1 = v0 + 136;
      if (qword_2540B87B8 == -1)
      {
LABEL_11:
        v14 = (uint64_t *)(qword_2540BCDD0
                        + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPointSpeakFeedbacks);
        swift_beginAccess();
        v15 = *v14;
        v16 = v14[1];
        v17 = v14[2];
        *(_QWORD *)(v0 + 136) = v15;
        *(_QWORD *)(v0 + 144) = v16;
        *(_QWORD *)(v0 + 152) = v17;
        v18 = qword_2540B9100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18 != -1)
          swift_once();
        *(_QWORD *)(swift_task_alloc() + 16) = v1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D18);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v19 = sub_227367600(1, *(_QWORD *)(v0 + 160));
        swift_bridgeObjectRelease();
        v20 = (_QWORD *)(qword_2540BCDD0
                       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
        swift_beginAccess();
        v21 = v20[1];
        v22 = v20[2];
        *(_QWORD *)(v0 + 16) = *v20;
        *(_QWORD *)(v0 + 24) = v21;
        *(_QWORD *)(v0 + 32) = v22;
        *(_QWORD *)(swift_task_alloc() + 16) = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D70);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v67 = sub_227367604(1, *(_QWORD *)(v0 + 168));
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22758D194();
        swift_release();
        swift_release();
        if (*(_BYTE *)(v0 + 322) == 1
          && (swift_getKeyPath(),
              swift_getKeyPath(),
              sub_22758D194(),
              swift_release(),
              swift_release(),
              *(_BYTE *)(v0 + 321) == 1))
        {
          if (v19)
          {
            v23 = (uint64_t *)(qword_2540BCDD0
                            + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedTextDetectionFeedbacks);
            swift_beginAccess();
            v24 = *v23;
            v25 = v23[1];
            v26 = v23[2];
            *(_QWORD *)(v0 + 64) = v24;
            *(_QWORD *)(v0 + 72) = v25;
            *(_QWORD *)(v0 + 80) = v26;
            *(_QWORD *)(swift_task_alloc() + 16) = v0 + 64;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_22758E7B4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            LOBYTE(v26) = sub_227367604(1, *(_QWORD *)(v0 + 176));
            swift_bridgeObjectRelease();
            if ((v26 & 1) == 0 && (v67 & 1) != 0)
              goto LABEL_25;
            goto LABEL_22;
          }
          if ((v67 & 1) == 0)
            goto LABEL_25;
        }
        else
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22758D194();
          swift_release();
          swift_release();
          if (*(_BYTE *)(v0 + 320) != 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            sub_22758D194();
            swift_release();
            swift_release();
            if (*(_BYTE *)(v0 + 324) == 1)
            {
LABEL_22:
              sub_22735B3AC();
              goto LABEL_23;
            }
LABEL_25:
            v29 = 0;
            v30 = 0xE000000000000000;
            goto LABEL_26;
          }
        }
        v27 = sub_22735D364();
LABEL_23:
        v29 = v27;
        v30 = v28;
LABEL_26:
        v31 = *(_QWORD *)(v0 + 208);
        v32 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback;
        *(_QWORD *)(v0 + 256) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedHandTooCloseFeedback;
        if ((*(_BYTE *)(v31 + v32) & 1) != 0
          || (v33 = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback,
              *(_QWORD *)(v0 + 264) = OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_providedTextTooCloseFeedback,
              (*(_BYTE *)(v31 + v33) & 1) != 0))
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        if (UIAccessibilityIsVoiceOverRunning())
        {
          v36 = (void *)sub_22758E1B4();
          swift_bridgeObjectRelease();
          UIAccessibilitySpeakIfNotSpeaking();

          goto LABEL_29;
        }
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v38 = (void *)objc_opt_self();
        v39 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
        v40 = (void *)sub_22758E1B4();
        v41 = (void *)sub_22758E1B4();
        v42 = objc_msgSend(v39, sel_localizedStringForKey_value_table_, v40, 0, v41);

        v43 = sub_22758E1E4();
        v45 = v44;

        if (v29 == v43 && v30 == v45)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v46 = sub_22758EE50();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
          {
            v51 = objc_msgSend(v38, sel_bundleForClass_, ObjCClassFromMetadata);
            v52 = (void *)sub_22758E1B4();
            v53 = (void *)sub_22758E1B4();
            v54 = objc_msgSend(v51, sel_localizedStringForKey_value_table_, v52, 0, v53);

            v55 = sub_22758E1E4();
            v57 = v56;

            if (v29 == v55 && v30 == v57)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v58 = sub_22758EE50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v58 & 1) == 0)
              {
                v62 = *(int **)(v0 + 224);
                v61 = *(_QWORD *)(v0 + 232);
                *(_QWORD *)(v0 + 304) = *(_QWORD *)(*(_QWORD *)(v0 + 208)
                                                  + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
                *(_BYTE *)(v61 + v62[5]) = 12;
                type metadata accessor for MAGOutputEvent.EventType(0);
                swift_storeEnumTagMultiPayload();
                swift_retain();
                sub_22758C978();
                *(_BYTE *)(v61 + v62[6]) = 0;
                *(_BYTE *)(v61 + v62[7]) = 0;
                sub_22758E49C();
                *(_QWORD *)(v0 + 312) = sub_22758E490();
                sub_22758E460();
                return swift_task_switch();
              }
            }
            v60 = *(int **)(v0 + 224);
            v59 = *(_QWORD *)(v0 + 232);
            *(_QWORD *)(v0 + 288) = *(_QWORD *)(*(_QWORD *)(v0 + 208)
                                              + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
            *(_BYTE *)(v59 + v60[5]) = 10;
            type metadata accessor for MAGOutputEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            swift_retain();
            sub_22758C978();
            *(_BYTE *)(v59 + v60[6]) = 0;
            *(_BYTE *)(v59 + v60[7]) = 0;
            sub_22758E49C();
            *(_QWORD *)(v0 + 296) = sub_22758E490();
            sub_22758E460();
            return swift_task_switch();
          }
        }
        v48 = *(int **)(v0 + 224);
        v47 = *(_QWORD *)(v0 + 232);
        v49 = *(_QWORD *)(v0 + 208);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 272) = *(_QWORD *)(v49
                                          + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_outputEngine);
        *(_BYTE *)(v47 + v48[5]) = 11;
        type metadata accessor for MAGOutputEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_22758C978();
        *(_BYTE *)(v47 + v48[6]) = 0;
        *(_BYTE *)(v47 + v48[7]) = 0;
        sub_22758E49C();
        *(_QWORD *)(v0 + 280) = sub_22758E490();
        sub_22758E460();
        return swift_task_switch();
      }
LABEL_55:
      swift_once();
      goto LABEL_11;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
LABEL_29:
  *(_QWORD *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 248)) = 0;
LABEL_30:
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_2273203F0();
    v34 = swift_allocError();
    *(_QWORD *)(v35 + 8) = 0;
    *(_QWORD *)(v35 + 16) = 0;
    *(_QWORD *)v35 = 9;
    *(_BYTE *)(v35 + 24) = 4;
    *(_QWORD *)(v0 + 184) = v34;
LABEL_50:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E46C();
    goto LABEL_51;
  }
  *(_BYTE *)(v0 + 323) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
  sub_22758E478();
LABEL_51:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22735C604()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_2273C9264(v1);
  swift_release();
  sub_22730DFB0(v1, type metadata accessor for MAGOutputEvent);
  return swift_task_switch();
}

uint64_t sub_22735C664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 256)) = 1;
  *(_QWORD *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_2273203F0();
    v1 = swift_allocError();
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = 9;
    *(_BYTE *)(v2 + 24) = 4;
    *(_QWORD *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E46C();
  }
  else
  {
    *(_BYTE *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E478();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22735C740()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_2273C9264(v1);
  swift_release();
  sub_22730DFB0(v1, type metadata accessor for MAGOutputEvent);
  return swift_task_switch();
}

uint64_t sub_22735C7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_2273203F0();
    v1 = swift_allocError();
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = 9;
    *(_BYTE *)(v2 + 24) = 4;
    *(_QWORD *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E46C();
  }
  else
  {
    *(_BYTE *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E478();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22735C870()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_2273C9264(v1);
  swift_release();
  sub_22730DFB0(v1, type metadata accessor for MAGOutputEvent);
  return swift_task_switch();
}

uint64_t sub_22735C8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 264)) = 1;
  *(_QWORD *)(*(_QWORD *)(v0 + 208) + *(_QWORD *)(v0 + 248)) = 0;
  if (*(double *)(v0 + 240) >= 0.85)
  {
    sub_2273203F0();
    v1 = swift_allocError();
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = 9;
    *(_BYTE *)(v2 + 24) = 4;
    *(_QWORD *)(v0 + 184) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E46C();
  }
  else
  {
    *(_BYTE *)(v0 + 323) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
    sub_22758E478();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MAGPointAndSpeakService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastImageCacheTime;
  v2 = sub_22758C930();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  sub_22731A1A4(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_handsNode, &qword_2558D68B8);
  return v0;
}

uint64_t MAGPointAndSpeakService.__deallocating_deinit()
{
  MAGPointAndSpeakService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22735CB2C()
{
  return type metadata accessor for MAGPointAndSpeakService();
}

uint64_t type metadata accessor for MAGPointAndSpeakService()
{
  uint64_t result;

  result = qword_2558D68E8;
  if (!qword_2558D68E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22735CB70()
{
  unint64_t v0;
  unint64_t v1;

  sub_22758C930();
  if (v0 <= 0x3F)
  {
    sub_22735CCF4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MAGPointAndSpeakService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MAGPointAndSpeakService.__allocating_init(eventHandler:arService:textDetectionService:outputEngine:pulseFeedbackProcessor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 952))();
}

uint64_t dispatch thunk of MAGPointAndSpeakService.predictHandPose(fromPixelBufferWrapper:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 968) + *(_QWORD *)(*(_QWORD *)v1 + 968));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_227344044;
  return v6(a1);
}

void sub_22735CCF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2558D6910)
  {
    sub_22758CFB4();
    v0 = sub_22758EA30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2558D6910);
  }
}

void sub_22735CD48(uint64_t a1)
{
  uint64_t v1;

  sub_22735B758(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_22735CD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22735CDC8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90) - 8) + 80);
  return sub_22735B92C(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_22735CE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22735CEBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D6D90) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_227319F84;
  return sub_22735BA84(a1, v5, v6, v7, v8, v9);
}

void sub_22735CF58(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t sub_22735CFCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2273AB1F4(*(_QWORD **)(v1 + 16), a1);
}

id sub_22735CFE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = sub_22734E1D8(*a1, a1[1], a1[2], a1[3], a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_22735D038(void *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v1 = MEMORY[0x24BEE4AF8];
  v12 = MEMORY[0x24BEE4AF8];
  v2 = objc_msgSend(a1, sel_blocksWithTypes_inRegion_, 2, 0.0, 0.0, 1.0, 1.0);
  sub_22730BA80(0, (unint64_t *)&qword_2558DC3B0);
  v3 = sub_22758E3DC();

  v4 = sub_2273D6F00(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 >> 62)
      goto LABEL_12;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v5)
    {
      for (i = 4; ; ++i)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2276B2BEC](i - 4, v4) : *(id *)(v4 + 8 * i);
        v8 = v7;
        v9 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        v10 = (void *)MEMORY[0x2276B35C4]();
        sub_2273546BC(v8, (uint64_t)&v12);
        objc_autoreleasePoolPop(v10);

        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      v5 = sub_22758ECE8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v1;
}

uint64_t sub_22735D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_22735D1CC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  double v7;

  v1 = *(void **)(v0 + 24);
  v2 = objc_msgSend(v1, sel_camera);
  objc_msgSend(v2, sel_imageResolution);

  v3 = objc_msgSend(v1, sel_camera);
  objc_msgSend(v3, sel_imageResolution);

  sub_22758CFC0();
  v4 = objc_msgSend(v1, sel_camera);
  objc_msgSend(v4, sel_intrinsics);

  v5 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v5, sel_orientation);

  v7 = CGRectMake(v6);
  return (*(uint64_t (**)(double))(v0 + 8))(v7);
}

uint64_t sub_22735D364()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2558D4BA0 != -1)
    swift_once();
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t sub_22735D4A4()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D4AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_22735AFFC(a1, v4, v5, v6);
}

uint64_t sub_22735D518()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227344044;
  v3[2] = v2;
  return swift_task_switch();
}

id sub_22735D580()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_pulseTimer), sel_invalidate);
}

uint64_t sub_22735D598(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22735D5D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2274689B4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22735D5F0()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D5F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_22735A208(a1, v4, v5, v6);
}

uint64_t sub_22735D664()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227344044;
  return sub_227359ED0(a1, v4, v5, v6, v7);
}

uint64_t sub_22735D6E8()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D6F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227344044;
  return sub_227359ED0(a1, v4, v5, v6, v7);
}

uint64_t sub_22735D76C()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227344044;
  return sub_227359ED0(a1, v4, v5, v6, v7);
}

uint64_t sub_22735D7F0()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735D7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227344044;
  return sub_227359AEC(a1, v4, v5, v6, v7);
}

uint64_t sub_22735D878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_227344044;
  return sub_227359640(a1, v6, v7, v8, v9);
}

uint64_t sub_22735D91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for DetectedTextBlock();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  v6 = v0 + v3;
  v7 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v5);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22735DA14(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = *(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = v1[4];
  v12 = v1[5];
  v13 = v1[6];
  v14 = v1[7];
  v15 = (uint64_t)v1 + v5;
  v16 = *(_QWORD *)((char *)v1 + v6);
  v17 = (uint64_t)v1 + v7;
  v18 = (uint64_t)v1 + v8;
  v19 = *(_QWORD *)((char *)v1 + ((v8 + 39) & 0xFFFFFFFFFFFFFFF8));
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v20;
  *v20 = v2;
  v20[1] = sub_227344044;
  return sub_2273597F0(v11, v12, v13, v14, a1, v9, v10, v15, v16, v17, v18, v19);
}

id sub_22735DB30@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_22735CFE4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_22735DB4C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22735DB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 32);
  v7 = *(double *)(v1 + 40);
  v8 = *(double *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_227344044;
  return sub_227357B80(v6, v7, v8, a1, v4, v5, v9, v10);
}

uint64_t sub_22735DC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22758CFCC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22735DCA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_22758CFCC() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_227344044;
  return sub_227357F0C(a1, v6, v7, v8, v9);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for DetectedTextBlock();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22735DDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_227344044;
  return sub_227358E88(a1, v6, v7, v8, v9);
}

uint64_t sub_22735DE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for DetectedTextBlock();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  v4 = v0 + v3;
  v5 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22735DF4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for DetectedTextBlock() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (double *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_227344044;
  return sub_227358FD4(v11, v12, v13, v14, a1, v6, v7, v8, v9);
}

unint64_t sub_22735E01C()
{
  unint64_t result;

  result = qword_2558D6EB8;
  if (!qword_2558D6EB8)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFFeatureFlags, &type metadata for MFFeatureFlags);
    atomic_store(result, &qword_2558D6EB8);
  }
  return result;
}

uint64_t sub_22735E064()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735E06C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227319F84;
  return sub_227353AE0(a1, v4, v5, v6);
}

uint64_t sub_22735E0D8()
{
  return objectdestroy_20Tm();
}

uint64_t sub_22735E0E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_227352F04(a1, v4, v5, v6);
}

uint64_t sub_22735E14C()
{
  return objectdestroy_20Tm();
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22735E18C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_227352DD0(a1, v4, v5, v6);
}

uint64_t sub_22735E1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22735E27C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F10);
  return sub_2273519EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22735E2B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_22735CFCC(a1);
}

uint64_t sub_22735E2C4@<X0>(_BYTE *a1@<X8>)
{
  return sub_22735D5D8(a1);
}

id sub_22735E2D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_22735DB30(a1, a2);
}

id sub_22735E330(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id result;
  void *v25;
  id v26;
  objc_super v27;

  v3 = &v2[OBJC_IVAR____TtC16MagnifierSupport32ActivityOnboardingViewController_dismissAction];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  swift_retain();
  sub_2273382D0(0);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = (void *)sub_22758E1B4();
  v8 = (void *)sub_22758E1B4();
  v9 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v8);

  sub_22758E1E4();
  v10 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_22758E1B4();
  v12 = (void *)sub_22758E1B4();
  v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

  sub_22758E1E4();
  v14 = (void *)sub_22758E1B4();
  v15 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_, v14);

  if (v15)
  {
    v16 = (void *)objc_opt_self();
    v17 = v15;
    v18 = objc_msgSend(v16, sel_systemYellowColor);
    v19 = objc_msgSend(v17, sel_imageWithTintColor_, v18);

  }
  else
  {
    v19 = 0;
  }
  v20 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v21 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for ActivityOnboardingViewController();
  v22 = objc_msgSendSuper2(&v27, sel_initWithTitle_detailText_icon_contentLayout_, v20, v21, v19, 2);

  v23 = v22;
  result = objc_msgSend(v23, sel_view);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
    objc_msgSend(v25, sel_setTintColor_, v26);

    sub_22735E6A8();
    swift_release();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22735E6A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D78F0);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10, v11, v12, v13);
  v15 = (char *)&v30 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = (void *)sub_22758E1B4();
  v20 = (void *)sub_22758E1B4();
  v21 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, 0, v20);

  sub_22758E1E4();
  v22 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setTitle_forState_, v22, 0);

  v23 = v16;
  sub_22758E9E8();
  v24 = sub_22758E9DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v15, 1, v24))
  {
    sub_22735ED08((uint64_t)v15, (uint64_t)v8);
    sub_22758E9F4();

    sub_22735ED50((uint64_t)v15);
  }
  else
  {
    v25 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    sub_22758E9B8();
    sub_22758E9F4();

  }
  objc_msgSend(v23, sel_addTarget_action_forControlEvents_, v1, sel_didTapStart, 64);
  v26 = (void *)objc_opt_self();
  v27 = v23;
  v28 = objc_msgSend(v26, sel_systemYellowColor);
  objc_msgSend(v27, sel_setTintColor_, v28);

  v29 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v29, sel_addButton_, v27);

}

void sub_22735E988()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_22758DD34();
  sub_22758DD34();
  swift_release();
  v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F48));
  v3 = (void *)sub_22758D794();
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MFNavigationController()), sel_initWithRootViewController_, v3);

  objc_msgSend(v4, sel_setModalPresentationStyle_, 2);
  v5 = objc_msgSend(v4, sel_navigationBar);
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v5, sel_setTintColor_, v6);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);
}

void sub_22735EB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(void (**)(void))(v2 + OBJC_IVAR____TtC16MagnifierSupport32ActivityOnboardingViewController_dismissAction);
    sub_22735ECF8((uint64_t)v4);

    if (v4)
    {
      v4();
      sub_2273382D0((uint64_t)v4);
    }
  }
}

id sub_22735EC68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ActivityOnboardingViewController()
{
  return objc_opt_self();
}

uint64_t sub_22735ECCC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22735ECF0()
{
  uint64_t v0;

  sub_22735EB4C(v0);
}

uint64_t sub_22735ECF8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_22735ED08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D78F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22735ED50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D78F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MFRubberBand()
{
  return &type metadata for MFRubberBand;
}

double sub_22735EDA0(double result, double a2, double a3, double a4, double a5)
{
  if (a3 < result)
    return (1.0 - 1.0 / ((result - a3) / a4 * a5 + 1.0)) * a4 + a3;
  if (result < a2)
    return a2 - (1.0 - 1.0 / ((a2 - result) / a4 * a5 + 1.0)) * a4;
  return result;
}

uint64_t sub_22735EE00()
{
  type metadata accessor for MFReaderTextFormatterModel(0);
  swift_allocObject();
  return sub_22743AC84();
}

uint64_t sub_22735EE34()
{
  uint64_t v0;

  type metadata accessor for MFReaderSpeechFormatterModel(0);
  v0 = swift_allocObject();
  sub_227360800(1, 0xD000000000000022, 0x80000002275B0670, 0, 0);
  return v0;
}

uint64_t sub_22735EE9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  _OWORD *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  unint64_t v86;
  char *v87;
  char *v88;
  _OWORD *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t result;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE v168[7];
  char v169;
  char v170;

  v2 = v1;
  v159 = a1;
  v129 = sub_22758D83C();
  MEMORY[0x24BDAC7A8](v129, v3, v4, v5, v6);
  v127 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_22758D350();
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145, v8, v9, v10, v11);
  v142 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7030);
  *(_QWORD *)&v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148, v13, v14, v15, v16);
  *(_QWORD *)&v146 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for MFReaderTextDisplayView();
  MEMORY[0x24BDAC7A8](v125, v18, v19, v20, v21);
  v23 = (uint64_t *)((char *)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7038);
  MEMORY[0x24BDAC7A8](v136, v24, v25, v26, v27);
  v126 = (uint64_t)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7040);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139, v29, v30, v31, v32);
  v137 = (char *)&v124 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7048);
  v141 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143, v34, v35, v36, v37);
  v140 = (char *)&v124 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7050);
  MEMORY[0x24BDAC7A8](v135, v39, v40, v41, v42);
  v131 = (char *)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7058);
  MEMORY[0x24BDAC7A8](v150, v44, v45, v46, v47);
  v149 = (uint64_t)&v124 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7060);
  v157 = *(_QWORD *)(v49 - 8);
  v158 = v49;
  MEMORY[0x24BDAC7A8](v49, v50, v51, v52, v53);
  v155 = (char *)&v124 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7068);
  MEMORY[0x24BDAC7A8](v156, v55, v56, v57, v58);
  v154 = (char *)&v124 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7070);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153, v60, v61, v62, v63);
  v151 = (char *)&v124 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MFReaderSpeechFormatterModel(0);
  sub_2273096F0(&qword_2558D6750, type metadata accessor for MFReaderSpeechFormatterModel, (uint64_t)&unk_22759F010);
  sub_22758D374();
  v65 = *(_QWORD *)(v1 + 16);
  v66 = *(_QWORD *)(v1 + 24);
  v67 = *(unsigned __int8 *)(v1 + 32);
  v68 = type metadata accessor for MFReaderTextFormatterModel(0);
  v69 = sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  v134 = v65;
  v133 = v66;
  v132 = v67;
  sub_22758D374();
  KeyPath = swift_getKeyPath();
  v71 = v125;
  *(uint64_t *)((char *)v23 + *(int *)(v125 + 28)) = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  swift_storeEnumTagMultiPayload();
  *v23 = sub_22758D44C();
  v23[1] = v72;
  v130 = v68;
  v128 = v69;
  v23[2] = sub_22758D44C();
  v23[3] = v73;
  type metadata accessor for MFReaderBlockManager();
  sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
  v23[4] = sub_22758D584();
  v23[5] = v74;
  *(uint64_t *)((char *)v23 + *(int *)(v71 + 32)) = 0x3FC999999999999ALL;
  v75 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    v76 = v75;
    v77 = sub_22758D134();
    v78 = v126;
    sub_22730DEEC((uint64_t)v23, v126, (uint64_t (*)(_QWORD))type metadata accessor for MFReaderTextDisplayView);
    v79 = v136;
    v80 = (uint64_t *)(v78 + *(int *)(v136 + 36));
    *v80 = v77;
    v80[1] = (uint64_t)v75;
    sub_22730DFB0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for MFReaderTextDisplayView);
    v81 = (_OWORD *)swift_allocObject();
    v82 = *(_OWORD *)(v1 + 80);
    v81[5] = *(_OWORD *)(v1 + 64);
    v81[6] = v82;
    v83 = *(_OWORD *)(v1 + 112);
    v81[7] = *(_OWORD *)(v1 + 96);
    v81[8] = v83;
    v84 = *(_OWORD *)(v1 + 16);
    v81[1] = *(_OWORD *)v1;
    v81[2] = v84;
    v85 = *(_OWORD *)(v1 + 48);
    v81[3] = *(_OWORD *)(v1 + 32);
    v81[4] = v85;
    sub_227362C10(v1);
    v86 = sub_227362CC8();
    v87 = v137;
    sub_22758DB30();
    swift_release();
    sub_22731A1A4(v78, &qword_2558D7038);
    sub_22758D8B4();
    v88 = v142;
    sub_22758D338();
    v89 = (_OWORD *)swift_allocObject();
    v90 = *(_OWORD *)(v1 + 80);
    v89[5] = *(_OWORD *)(v1 + 64);
    v89[6] = v90;
    v91 = *(_OWORD *)(v1 + 112);
    v89[7] = *(_OWORD *)(v1 + 96);
    v89[8] = v91;
    v92 = *(_OWORD *)(v1 + 16);
    v89[1] = *(_OWORD *)v1;
    v89[2] = v92;
    v93 = *(_OWORD *)(v1 + 48);
    v89[3] = *(_OWORD *)(v1 + 32);
    v89[4] = v93;
    sub_227362C10(v1);
    sub_2273096F0(&qword_2558D7098, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
    sub_2273096F0(&qword_2558D70A0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
    v94 = v146;
    v95 = v145;
    sub_22758DE24();
    swift_release();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v88, v95);
    sub_22758D368();
    v160 = v79;
    v161 = v86;
    swift_getOpaqueTypeConformance2();
    sub_22730BB7C(&qword_2558D70A8, &qword_2558D7030, MEMORY[0x24BDED570]);
    v96 = v140;
    v97 = v139;
    v98 = v148;
    sub_22758DBB4();
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v94, v98);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v87, v97);
    v99 = sub_22758DE90();
    v101 = v100;
    v102 = (uint64_t)v131;
    v103 = (uint64_t)&v131[*(int *)(v135 + 36)];
    sub_22735FA14(v2, v103);
    v104 = (uint64_t *)(v103 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D70B0) + 36));
    *v104 = v99;
    v104[1] = v101;
    (*(void (**)(uint64_t, char *, uint64_t))(v141 + 32))(v102, v96, v143);
    v105 = sub_22758DE84();
    v107 = v106;
    v108 = sub_22758D6C8();
    sub_2273605D4(v2, (uint64_t)&v160);
    v109 = v160;
    v148 = v162;
    v147 = v163;
    v110 = v164;
    v111 = v166;
    v112 = v167;
    v146 = v165;
    v170 = 1;
    v169 = v161;
    v113 = v149;
    sub_22731A11C(v102, v149, &qword_2558D7050);
    v114 = v113 + *(int *)(v150 + 36);
    *(_QWORD *)v114 = v108;
    *(_QWORD *)(v114 + 8) = 0;
    *(_BYTE *)(v114 + 16) = v170;
    *(_DWORD *)(v114 + 17) = v160;
    *(_DWORD *)(v114 + 20) = *(_DWORD *)((char *)&v160 + 3);
    *(_QWORD *)(v114 + 24) = v109;
    *(_BYTE *)(v114 + 32) = v169;
    *(_DWORD *)(v114 + 33) = *(_DWORD *)v168;
    *(_DWORD *)(v114 + 36) = *(_DWORD *)&v168[3];
    *(_OWORD *)(v114 + 40) = v148;
    *(_OWORD *)(v114 + 56) = v147;
    *(_QWORD *)(v114 + 72) = v110;
    *(_OWORD *)(v114 + 80) = v146;
    *(_QWORD *)(v114 + 96) = v111;
    *(_QWORD *)(v114 + 104) = v112;
    *(_QWORD *)(v114 + 112) = v105;
    *(_QWORD *)(v114 + 120) = v107;
    sub_22731A1A4(v102, &qword_2558D7050);
    sub_227362DD4();
    v115 = v155;
    sub_22758DC44();
    sub_22731A1A4(v113, &qword_2558D7058);
    sub_22758D374();
    sub_22743A5C0();
    v117 = v116;
    swift_release();
    LOBYTE(v107) = sub_22758D998();
    v119 = v157;
    v118 = v158;
    v120 = (uint64_t)v154;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v154, v115, v158);
    v121 = v120 + *(int *)(v156 + 36);
    *(_QWORD *)v121 = v117;
    *(_BYTE *)(v121 + 8) = v107;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v115, v118);
    sub_227362F70();
    v122 = v151;
    sub_22758DBA8();
    sub_22731A1A4(v120, &qword_2558D7068);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v152 + 32))(v159, v122, v153);
  }
  else
  {
    result = sub_22758D578();
    __break(1u);
  }
  return result;
}

uint64_t sub_22735F904(uint64_t a1)
{
  __int128 v2;
  _BYTE v3[8];

  v2 = *(_OWORD *)(a1 + 96);
  sub_22731A160((uint64_t)&v2 + 8, (uint64_t)v3, (uint64_t *)&unk_2558D7180);
  sub_227363150((uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  sub_22758DD40();
  sub_22758DD4C();
  return sub_227335520((uint64_t)&v2);
}

uint64_t sub_22735F9A0()
{
  sub_22758D344();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  return sub_22758DD4C();
}

uint64_t sub_22735FA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  char v56;
  __int128 v57;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D70F8);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7100);
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(_OWORD *)(a1 + 80);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  sub_22758DD40();
  v53 = a2;
  if ((v54 & 1) != 0)
    goto LABEL_7;
  if (qword_2540B87B8 != -1)
    swift_once();
  v19 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__alwaysShowReaderModePlayer;
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 8);
  v21 = *(_BYTE *)(v19 + 16);
  *(_QWORD *)&v54 = *(_QWORD *)v19;
  *((_QWORD *)&v54 + 1) = v20;
  v55 = v21;
  v22 = qword_2540B9100;
  v23 = swift_bridgeObjectRetain();
  if (v22 != -1)
    v23 = swift_once();
  MEMORY[0x24BDAC7A8](v23, v24, v25, v26, v27);
  *(&v45 - 2) = (uint64_t)&v54;
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  if (v56 == 1)
  {
LABEL_7:
    v48 = v18;
    v49 = v11;
    v50 = v4;
    type metadata accessor for MFReaderTextFormatterModel(0);
    sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
    sub_22758D374();
    type metadata accessor for MFReaderSpeechFormatterModel(0);
    sub_2273096F0(&qword_2558D6750, type metadata accessor for MFReaderSpeechFormatterModel, (uint64_t)&unk_22759F010);
    sub_22758D374();
    v51 = sub_22758D44C();
    v52 = v28;
    v29 = sub_22758D44C();
    v46 = v30;
    v47 = v29;
    type metadata accessor for MFReaderBlockManager();
    sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
    v31 = sub_22758D584();
    v33 = v32;
    v56 = 1;
    sub_22758DD34();
    v34 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      v35 = v54;
      v36 = *((_QWORD *)&v54 + 1);
      v37 = v34;
      v38 = sub_22758D134();
      v54 = *(_OWORD *)(a1 + 96);
      sub_22758DD40();
      if ((v56 & 1) == 0 || (v54 = *(_OWORD *)(a1 + 112), sub_22758DD40(), v39 = 1.0, (v56 & 1) == 0))
        v39 = 0.0;
      v40 = v52;
      *(_QWORD *)v17 = v51;
      *((_QWORD *)v17 + 1) = v40;
      v41 = v46;
      *((_QWORD *)v17 + 2) = v47;
      *((_QWORD *)v17 + 3) = v41;
      *((_QWORD *)v17 + 4) = v31;
      *((_QWORD *)v17 + 5) = v33;
      v17[48] = v35;
      *((_QWORD *)v17 + 7) = v36;
      *((_QWORD *)v17 + 8) = v38;
      *((_QWORD *)v17 + 9) = v34;
      *((double *)v17 + 10) = v39;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7118);
      sub_22736301C();
      sub_22730BB7C(&qword_2558D7140, &qword_2558D70F8, MEMORY[0x24BDF4700]);
      return sub_22758D830();
    }
    else
    {
      result = sub_22758D578();
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)v10 = sub_22758D74C();
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 1;
    v43 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D7108) + 44)];
    *(_QWORD *)v43 = sub_22758D6C8();
    *((_QWORD *)v43 + 1) = 0;
    v43[16] = 1;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7110);
    sub_22735FF08(a1, &v43[*(int *)(v44 + 44)]);
    sub_22731A11C((uint64_t)v10, (uint64_t)v17, &qword_2558D70F8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7118);
    sub_22736301C();
    sub_22730BB7C(&qword_2558D7140, &qword_2558D70F8, MEMORY[0x24BDF4700]);
    sub_22758D830();
    return sub_22731A1A4((uint64_t)v10, &qword_2558D70F8);
  }
  return result;
}

uint64_t sub_22735FF08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t result;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  __int128 v115;
  __int128 v116;
  char v117;

  v114 = a2;
  v3 = sub_22758D56C();
  v112 = *(_QWORD *)(v3 - 8);
  v113 = v3;
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v111 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for MFReaderTextFormatterView();
  MEMORY[0x24BDAC7A8](v97, v9, v10, v11, v12);
  v14 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7148);
  MEMORY[0x24BDAC7A8](v100, v15, v16, v17, v18);
  v99 = (char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7150);
  MEMORY[0x24BDAC7A8](v101, v20, v21, v22, v23);
  v106 = (uint64_t)v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7158);
  MEMORY[0x24BDAC7A8](v104, v25, v26, v27, v28);
  v105 = (uint64_t)v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7160);
  MEMORY[0x24BDAC7A8](v103, v30, v31, v32, v33);
  v108 = (uint64_t)v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7168);
  MEMORY[0x24BDAC7A8](v102, v35, v36, v37, v38);
  v110 = (uint64_t)v95 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v41, v42, v43, v44);
  v107 = (char *)v95 - v45;
  MEMORY[0x24BDAC7A8](v46, v47, v48, v49, v50);
  v109 = (uint64_t)v95 - v51;
  type metadata accessor for MFReaderTextFormatterModel(0);
  sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  v95[2] = sub_22758D374();
  v96 = a1;
  type metadata accessor for MFReaderSpeechFormatterModel(0);
  sub_2273096F0(&qword_2558D6750, type metadata accessor for MFReaderSpeechFormatterModel, (uint64_t)&unk_22759F010);
  v95[1] = sub_22758D374();
  v115 = *(_OWORD *)(a1 + 80);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  sub_22758DD58();
  v52 = v116;
  v53 = v117;
  KeyPath = swift_getKeyPath();
  v55 = v97;
  *(_QWORD *)&v14[*(int *)(v97 + 32)] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v14 = sub_22758D44C();
  *((_QWORD *)v14 + 1) = v56;
  *((_QWORD *)v14 + 2) = sub_22758D44C();
  *((_QWORD *)v14 + 3) = v57;
  *((_OWORD *)v14 + 2) = v52;
  v14[48] = v53;
  v58 = (uint64_t)v99;
  type metadata accessor for MFReaderBlockManager();
  sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
  *((_QWORD *)v14 + 7) = sub_22758D584();
  *((_QWORD *)v14 + 8) = v59;
  v60 = &v14[*(int *)(v55 + 36)];
  LOBYTE(v115) = 0;
  sub_22758DD34();
  v61 = *((_QWORD *)&v116 + 1);
  *v60 = v116;
  *((_QWORD *)v60 + 1) = v61;
  v62 = &v14[*(int *)(v55 + 40)];
  LOBYTE(v115) = 0;
  sub_22758DD34();
  v63 = *((_QWORD *)&v116 + 1);
  *v62 = v116;
  *((_QWORD *)v62 + 1) = v63;
  v64 = sub_22758D9D4();
  sub_22758D2E4();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v72 = v71;
  sub_22730DEEC((uint64_t)v14, v58, (uint64_t (*)(_QWORD))type metadata accessor for MFReaderTextFormatterView);
  v73 = v58 + *(int *)(v100 + 36);
  *(_BYTE *)v73 = v64;
  *(_QWORD *)(v73 + 8) = v66;
  *(_QWORD *)(v73 + 16) = v68;
  *(_QWORD *)(v73 + 24) = v70;
  *(_QWORD *)(v73 + 32) = v72;
  *(_BYTE *)(v73 + 40) = 0;
  v74 = (uint64_t)v14;
  v75 = v96;
  sub_22730DFB0(v74, (uint64_t (*)(_QWORD))type metadata accessor for MFReaderTextFormatterView);
  v76 = *(void **)v75;
  if (*(_QWORD *)v75)
  {
    v77 = v76;
    v78 = sub_22758D134();
    v79 = v106;
    sub_22731A11C(v58, v106, &qword_2558D7148);
    v80 = (uint64_t *)(v79 + *(int *)(v101 + 36));
    *v80 = v78;
    v80[1] = (uint64_t)v76;
    sub_22731A1A4(v58, &qword_2558D7148);
    v116 = *(_OWORD *)(v75 + 96);
    sub_22758DD40();
    if ((_BYTE)v115)
      v81 = 1.0;
    else
      v81 = 0.0;
    v82 = v105;
    sub_22731A11C(v79, v105, &qword_2558D7150);
    *(double *)(v82 + *(int *)(v104 + 36)) = v81;
    sub_22731A1A4(v79, &qword_2558D7150);
    v83 = v108;
    sub_22731A11C(v82, v108, &qword_2558D7158);
    *(_BYTE *)(v83 + *(int *)(v103 + 36)) = 1;
    sub_22731A1A4(v82, &qword_2558D7158);
    v84 = v111;
    sub_22758D560();
    v85 = (uint64_t)v107;
    v86 = &v107[*(int *)(v102 + 36)];
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7170);
    v89 = v112;
    v88 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v86[*(int *)(v87 + 40)], v84, v113);
    *v86 = 0;
    sub_22731A11C(v83, v85, &qword_2558D7160);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v84, v88);
    sub_22731A1A4(v83, &qword_2558D7160);
    v90 = v109;
    sub_22731A160(v85, v109, &qword_2558D7168);
    v91 = v110;
    sub_22731A11C(v90, v110, &qword_2558D7168);
    v92 = v114;
    *v114 = 0;
    *((_BYTE *)v92 + 8) = 1;
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7178);
    sub_22731A11C(v91, (uint64_t)v92 + *(int *)(v93 + 48), &qword_2558D7168);
    sub_22731A1A4(v90, &qword_2558D7168);
    return sub_22731A1A4(v91, &qword_2558D7168);
  }
  else
  {
    result = sub_22758D578();
    __break(1u);
  }
  return result;
}

void sub_2273605D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  char v19;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  sub_22735ECF8(v4);
  type metadata accessor for MFReaderTextFormatterModel(0);
  sub_2273096F0(&qword_2558D64A8, type metadata accessor for MFReaderTextFormatterModel, (uint64_t)&unk_22759F048);
  sub_22758D374();
  type metadata accessor for MFReaderBlockManager();
  sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
  v6 = (void *)sub_22758D584();
  v17 = v7;
  v8 = sub_22758D44C();
  v10 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v11 = v8;
    v12 = v9;
    v18 = v10;
    v13 = sub_22758D134();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
    sub_22758DD40();
    v14 = 0.0;
    *(_QWORD *)a2 = 0;
    if (v19)
      v14 = 1.0;
    *(_BYTE *)(a2 + 8) = 1;
    *(_QWORD *)(a2 + 16) = v4;
    *(_QWORD *)(a2 + 24) = v5;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v17;
    *(_QWORD *)(a2 + 48) = v11;
    *(_QWORD *)(a2 + 56) = v12;
    *(_QWORD *)(a2 + 64) = v13;
    *(_QWORD *)(a2 + 72) = v10;
    *(double *)(a2 + 80) = v14;
    sub_22735ECF8(v4);
    v15 = v6;
    swift_retain();
    swift_retain();
    v16 = v18;
    sub_2273382D0(v4);

    swift_release();
    swift_release();

  }
  else
  {
    sub_22758D578();
    __break(1u);
  }
}

uint64_t sub_2273607B8@<X0>(uint64_t a1@<X8>)
{
  return sub_22735EE9C(a1);
}

uint64_t sub_227360800(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _DWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v27 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F50);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v28 = a2;
  v18 = (void *)sub_22758E1B4();
  v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    v25[7] = a1;
    v26 = a3;
    v20 = sub_22758C87C();
    v22 = v21;

    sub_22758C540();
    swift_allocObject();
    sub_22758C534();
    sub_227362428();
    sub_22758C528();
    swift_release();
    v29 = v30;
    sub_22758D164();
    sub_2273245E0(v20, v22);
    a3 = v26;
  }
  else
  {
    v30 = a1;
    sub_22758D164();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F58);
  sub_22758D170();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 24) = a3;
  sub_22730BB7C(&qword_2558D6F60, &qword_2558D6F50, MEMORY[0x24BDB9EE8]);
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_2558D4B90 != -1)
    swift_once();
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  return sub_2273382D0(a4);
}

uint64_t sub_227360B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a4;
  v28 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v29 = a2;
  v19 = (void *)sub_22758E1B4();
  v20 = objc_msgSend(v18, sel_dataForKey_, v19);

  if (v20)
  {
    v26[3] = a6;
    v21 = sub_22758C87C();
    v23 = v22;

    sub_22758C540();
    swift_allocObject();
    sub_22758C534();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FF8);
    sub_227362670(&qword_2558D7010, (uint64_t (*)(void))sub_22736262C, MEMORY[0x24BEE4AC0]);
    sub_22758C528();
    swift_release();
    v30 = v31;
    swift_retain();
    sub_22758D164();
    sub_2273245E0(v21, v23);
    swift_release();
  }
  else
  {
    v31 = a1;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FF8);
    sub_22758D164();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7000);
  sub_22758D170();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v29;
  *(_QWORD *)(v24 + 24) = a3;
  sub_22730BB7C(&qword_2558D7008, &qword_2558D6FF0, MEMORY[0x24BDB9EE8]);
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  if (qword_2558D4B90 != -1)
    swift_once();
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  sub_2273382D0(v27);
  return swift_release();
}

uint64_t sub_227360F8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _DWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v27 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FC8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v28 = a2;
  v18 = (void *)sub_22758E1B4();
  v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    v25[7] = a1;
    v26 = a3;
    v20 = sub_22758C87C();
    v22 = v21;

    sub_22758C540();
    swift_allocObject();
    sub_22758C534();
    sub_227362598();
    sub_22758C528();
    swift_release();
    v29 = v30;
    sub_22758D164();
    sub_2273245E0(v20, v22);
    a3 = v26;
  }
  else
  {
    v30 = a1;
    sub_22758D164();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FD0);
  sub_22758D170();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 24) = a3;
  sub_22730BB7C(&qword_2558D6FD8, &qword_2558D6FC8, MEMORY[0x24BDB9EE8]);
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_2558D4B90 != -1)
    swift_once();
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  return sub_2273382D0(a4);
}

uint64_t sub_227361328(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _DWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v27 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FA0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v28 = a2;
  v18 = (void *)sub_22758E1B4();
  v19 = objc_msgSend(v17, sel_dataForKey_, v18);

  if (v19)
  {
    v25[7] = a1;
    v26 = a3;
    v20 = sub_22758C87C();
    v22 = v21;

    sub_22758C540();
    swift_allocObject();
    sub_22758C534();
    sub_2273624E4();
    sub_22758C528();
    swift_release();
    v29 = v30;
    sub_22758D164();
    sub_2273245E0(v20, v22);
    a3 = v26;
  }
  else
  {
    v30 = a1;
    sub_22758D164();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FA8);
  sub_22758D170();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 24) = a3;
  sub_22730BB7C(&qword_2558D6FB0, &qword_2558D6FA0, MEMORY[0x24BDB9EE8]);
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  if (qword_2558D4B90 != -1)
    swift_once();
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  return sub_2273382D0(a4);
}

uint64_t sub_2273616C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a4;
  v45 = a5;
  v46 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F78);
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10, v11, v12, v13);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22758D47C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18, v19, v20, v21);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v25, v26, v27, v28);
  v30 = (char *)v40 - v29;
  v31 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v41 = a2;
  v42 = a3;
  v32 = (void *)sub_22758E1B4();
  v33 = objc_msgSend(v31, sel_dataForKey_, v32);

  if (v33)
  {
    v40[1] = a6;
    v34 = sub_22758C87C();
    v36 = v35;

    sub_22758C540();
    swift_allocObject();
    sub_22758C534();
    sub_2273096F0(&qword_2558D6F90, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
    sub_22758C528();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v30, v16);
    sub_22758D164();
    sub_2273245E0(v34, v36);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, v46, v16);
    sub_22758D164();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6F80);
  sub_22758D170();
  v37 = swift_allocObject();
  v38 = v42;
  *(_QWORD *)(v37 + 16) = v41;
  *(_QWORD *)(v37 + 24) = v38;
  sub_22730BB7C(&qword_2558D6F88, &qword_2558D6F78, MEMORY[0x24BDB9EE8]);
  sub_22758D248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v9);
  if (qword_2558D4B90 != -1)
    swift_once();
  swift_beginAccess();
  sub_22758D110();
  swift_endAccess();
  swift_release();
  sub_2273382D0(v44);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v46, v16);
}

void sub_227361B04()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  sub_22758C564();
  swift_allocObject();
  sub_22758C558();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6FF8);
  sub_227362670(&qword_2558D7020, (uint64_t (*)(void))sub_2273626D8, MEMORY[0x24BEE4AA8]);
  v0 = sub_22758C54C();
  v2 = v1;
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)sub_22758C870();
  v5 = (void *)sub_22758E1B4();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    v9 = (void *)sub_22758C870();
    v10 = (void *)sub_22758E1B4();
    objc_msgSend(v8, sel_setValue_forKey_, v9, v10);
    sub_2273245E0(v0, v2);

  }
  else
  {
    sub_2273245E0(v0, v2);
  }
}

void sub_227361D94(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;

  sub_22758C564();
  swift_allocObject();
  sub_22758C558();
  a4();
  v5 = sub_22758C54C();
  v7 = v6;
  swift_release();
  v8 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v9 = (void *)sub_22758C870();
  v10 = (void *)sub_22758E1B4();
  objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

  v11 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v12 = (void *)sub_22758E1B4();
  v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

  if (v13)
  {
    v14 = (void *)sub_22758C870();
    v15 = (void *)sub_22758E1B4();
    objc_msgSend(v13, sel_setValue_forKey_, v14, v15);
    sub_2273245E0(v5, v7);

  }
  else
  {
    sub_2273245E0(v5, v7);
  }
}

void sub_227362004()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  os_log_t oslog;

  sub_22758C564();
  swift_allocObject();
  sub_22758C558();
  sub_22758D47C();
  sub_2273096F0(&qword_2558D6F98, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v0 = sub_22758C54C();
  v2 = v1;
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)sub_22758C870();
  v5 = (void *)sub_22758E1B4();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    v9 = (void *)sub_22758C870();
    oslog = (os_log_t)sub_22758E1B4();
    objc_msgSend(v8, sel_setValue_forKey_, v9, oslog);
    sub_2273245E0(v0, v2);

  }
  else
  {
    sub_2273245E0(v0, v2);
  }
}

uint64_t sub_227362298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v18;
  uint64_t v19;

  type metadata accessor for MFReaderBlockManager();
  sub_2273096F0((unint64_t *)&qword_2558D6758, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderBlockManager, (uint64_t)&protocol conformance descriptor for MFReaderBlockManager);
  v9 = sub_22758D584();
  v11 = v10;
  sub_22758DD34();
  sub_22758DD34();
  result = sub_22758DD34();
  *(_QWORD *)a7 = v9;
  *(_QWORD *)(a7 + 8) = v11;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_BYTE *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = a3;
  *(_QWORD *)(a7 + 48) = a4;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = a5;
  *(_QWORD *)(a7 + 72) = a6;
  *(_BYTE *)(a7 + 80) = v18;
  *(_QWORD *)(a7 + 88) = v19;
  *(_BYTE *)(a7 + 96) = v18;
  *(_QWORD *)(a7 + 104) = v19;
  *(_BYTE *)(a7 + 112) = v18;
  *(_QWORD *)(a7 + 120) = v19;
  return result;
}

uint64_t sub_2273623D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2273623FC(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_227361D94(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(void))sub_22736246C);
}

unint64_t sub_227362428()
{
  unint64_t result;

  result = qword_2558D6F68;
  if (!qword_2558D6F68)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderPlaybackSpeed, &type metadata for MFReaderPlaybackSpeed);
    atomic_store(result, (unint64_t *)&qword_2558D6F68);
  }
  return result;
}

unint64_t sub_22736246C()
{
  unint64_t result;

  result = qword_2558D6F70;
  if (!qword_2558D6F70)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderPlaybackSpeed, &type metadata for MFReaderPlaybackSpeed);
    atomic_store(result, (unint64_t *)&qword_2558D6F70);
  }
  return result;
}

void sub_2273624B0()
{
  sub_227362004();
}

void sub_2273624B8(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_227361D94(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(void))sub_227362528);
}

unint64_t sub_2273624E4()
{
  unint64_t result;

  result = qword_2558D6FB8;
  if (!qword_2558D6FB8)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFont, &type metadata for MFReaderFont);
    atomic_store(result, (unint64_t *)&qword_2558D6FB8);
  }
  return result;
}

unint64_t sub_227362528()
{
  unint64_t result;

  result = qword_2558D6FC0;
  if (!qword_2558D6FC0)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFont, &type metadata for MFReaderFont);
    atomic_store(result, (unint64_t *)&qword_2558D6FC0);
  }
  return result;
}

void sub_22736256C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_227361D94(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(void))sub_2273625DC);
}

unint64_t sub_227362598()
{
  unint64_t result;

  result = qword_2558D6FE0;
  if (!qword_2558D6FE0)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFormatterTheme, &type metadata for MFReaderFormatterTheme);
    atomic_store(result, (unint64_t *)&qword_2558D6FE0);
  }
  return result;
}

unint64_t sub_2273625DC()
{
  unint64_t result;

  result = qword_2558D6FE8;
  if (!qword_2558D6FE8)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderFormatterTheme, &type metadata for MFReaderFormatterTheme);
    atomic_store(result, (unint64_t *)&qword_2558D6FE8);
  }
  return result;
}

void sub_227362620()
{
  sub_227361B04();
}

unint64_t sub_22736262C()
{
  unint64_t result;

  result = qword_2558D7018;
  if (!qword_2558D7018)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_2558D7018);
  }
  return result;
}

uint64_t sub_227362670(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D6FF8);
    v8 = a2();
    result = MEMORY[0x2276B3C78](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2273626D8()
{
  unint64_t result;

  result = qword_2558D7028;
  if (!qword_2558D7028)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_2558D7028);
  }
  return result;
}

uint64_t sub_22736271C()
{
  return swift_retain();
}

uint64_t destroy for MFReaderModeView(uint64_t a1)
{

  sub_227362784();
  sub_227362784();
  if (*(_QWORD *)(a1 + 64))
    swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_227362784()
{
  return swift_release();
}

uint64_t initializeWithCopy for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = v4;
  sub_22736271C();
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_22736271C();
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = *(_QWORD *)(a2 + 64);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  sub_22736271C();
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  sub_227362784();
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_22736271C();
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  sub_227362784();
  v13 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v13)
    {
      v15 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v13;
      *(_QWORD *)(a1 + 72) = v15;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for MFReaderModeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_227362784();
  v7 = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v7;
  sub_227362784();
  v8 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MFReaderModeView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 128))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderModeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MFReaderModeView()
{
  return &type metadata for MFReaderModeView;
}

uint64_t sub_227362BEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_227362C08()
{
  uint64_t v0;

  return sub_22735F904(v0 + 16);
}

uint64_t sub_227362C10(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(id *)a1;
  sub_22736271C();
  sub_22736271C();
  sub_22735ECF8(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_227362CC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D7078;
  if (!qword_2558D7078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7038);
    v2[0] = sub_2273096F0(&qword_2558D7080, (uint64_t (*)(uint64_t))type metadata accessor for MFReaderTextDisplayView, (uint64_t)&unk_2275A8848);
    v2[1] = sub_22730BB7C((unint64_t *)&qword_2558D7088, &qword_2558D7090, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D7078);
  }
  return result;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  sub_227362784();
  sub_227362784();
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227362DCC()
{
  return sub_22735F9A0();
}

unint64_t sub_227362DD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D70B8;
  if (!qword_2558D70B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7058);
    v2[0] = sub_227362E58();
    v2[1] = sub_22730BB7C(&qword_2558D70D0, &qword_2558D70D8, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D70B8);
  }
  return result;
}

unint64_t sub_227362E58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_2558D70C0;
  if (!qword_2558D70C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7050);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7040);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7030);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7038);
    sub_227362CC8();
    v4[2] = v2;
    v4[3] = v3;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = sub_22730BB7C(&qword_2558D70A8, &qword_2558D7030, MEMORY[0x24BDED570]);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22730BB7C(&qword_2558D70C8, &qword_2558D70B0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2558D70C0);
  }
  return result;
}

unint64_t sub_227362F70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_2558D70E0;
  if (!qword_2558D70E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7068);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7058);
    v2[3] = sub_227362DD4();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22730BB7C(&qword_2558D70E8, &qword_2558D70F0, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D70E0);
  }
  return result;
}

unint64_t sub_22736301C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D7120;
  if (!qword_2558D7120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7118);
    v2[0] = sub_227363088();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D7120);
  }
  return result;
}

unint64_t sub_227363088()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D7128;
  if (!qword_2558D7128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7130);
    v2[0] = sub_22736310C();
    v2[1] = sub_22730BB7C((unint64_t *)&qword_2558D7088, &qword_2558D7090, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D7128);
  }
  return result;
}

unint64_t sub_22736310C()
{
  unint64_t result;

  result = qword_2558D7138;
  if (!qword_2558D7138)
  {
    result = MEMORY[0x2276B3C78](&unk_227597EF4, &type metadata for MFReaderBottomBar);
    atomic_store(result, (unint64_t *)&qword_2558D7138);
  }
  return result;
}

uint64_t sub_227363150(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_227363178()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7068);
  sub_227362F70();
  return swift_getOpaqueTypeConformance2();
}

void sub_2273631D4()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  int v3;
  void *v4;
  id v5;
  id v6;

  if (v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] == 1)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v2 = objc_msgSend(v0, sel_traitCollection);
    v6 = sub_227349E40(v1, v2);

  }
  else
  {
    v3 = v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing];
    v4 = (void *)objc_opt_self();
    if (v3 == 1)
      v5 = objc_msgSend(v4, sel_systemYellowColor);
    else
      v5 = objc_msgSend(v4, sel_whiteColor);
    v6 = v5;
  }
  objc_msgSend(v0, sel_setTintColor_, v6);

}

id sub_2273632D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label);
  }
  else
  {
    v4 = sub_2273636B8(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_227363330()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton);
  }
  else
  {
    v4 = sub_22736338C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_22736338C()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;

  type metadata accessor for CameraTrayUIButton();
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  objc_msgSend(v0, sel_setContentMode_, 4);
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_whiteColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = v2;
  v5 = objc_msgSend(v1, sel_blackColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  v6 = objc_msgSend(v4, sel_layer);
  if (qword_2540B8D78 != -1)
    swift_once();
  objc_msgSend(v6, sel_setCornerRadius_, (*(double *)&qword_2540BCE38 + -10.0) * 0.5);

  v7 = objc_msgSend(v4, sel_layer);
  if (qword_2540B8D48 != -1)
    swift_once();
  objc_msgSend(v7, sel_setCornerCurve_, qword_2540BCE18);

  v8 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v8, sel_setMasksToBounds_, 1);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = sub_22736551C();
  objc_msgSend(v4, sel_setImage_forState_, v9, 0);

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = v4;
  v13 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = (void *)sub_22758E1B4();
  v15 = (void *)sub_22758E1B4();
  v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

  sub_22758E1E4();
  v17 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityLabel_, v17);

  return v12;
}

id sub_2273636B8(uint64_t a1)
{
  id v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control) == 15)
  {
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v5 = (void *)sub_22758E1B4();
    v6 = (void *)sub_22758E1B4();
    v7 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v5, 0, v6);

    sub_22758E1E4();
    v8 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setText_, v8);

  }
  objc_msgSend(v2, sel_setTextAlignment_, 0);
  objc_msgSend(v2, sel_setAlpha_, 0.0);
  v9 = objc_msgSend(v2, sel_layer);
  if (qword_2540B8D90 != -1)
    swift_once();
  objc_msgSend(v9, sel_setCornerRadius_, *(double *)&qword_2540BCE48);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE250]);
  objc_msgSend(v2, sel_setFont_, v10);

  objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
  LODWORD(v11) = 1.0;
  objc_msgSend(v2, sel__setHyphenationFactor_, v11);
  objc_msgSend(v2, sel_setIsAccessibilityElement_, 0);
  return v2;
}

id sub_227363954()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config;
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config);
    v7 = *(_QWORD *)(v5 + 8);
    v8 = objc_allocWithZone((Class)type metadata accessor for RoundButton());
    v9 = sub_22743DEAC(v6, v7);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_2273639E0()
{
  uint64_t v0;
  id v1;
  unsigned __int8 *v2;
  double v3;
  id v4;
  void *v5;
  double v6;
  id v7;

  v1 = sub_2273632D0();
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  v3 = 0.0;
  if (*v2 == 1)
  {
    v3 = 1.0;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed))
      v3 = 0.25;
  }
  objc_msgSend(v1, sel_setAlpha_, v3);

  v4 = sub_227363330();
  v5 = v4;
  v6 = 1.0;
  if (!*v2)
    v6 = 0.0;
  objc_msgSend(v4, sel_setAlpha_, v6);

  v7 = sub_227363330();
  objc_msgSend(v7, sel_setUserInteractionEnabled_, *v2);

}

void sub_227363ABC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  _BYTE *v4;
  double v5;
  id v6;

  v2 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed) = a1;
  v3 = sub_2273632D0();
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  v5 = 0.0;
  if (*v4 == 1)
  {
    v5 = 1.0;
    if (*(_BYTE *)(v1 + v2))
      v5 = 0.25;
  }
  objc_msgSend(v3, sel_setAlpha_, v5);

  sub_2273631D4();
  v6 = sub_227363330();
  objc_msgSend(v6, sel_setUserInteractionEnabled_, (*(_BYTE *)(v1 + v2) & 1) == 0);

}

id sub_227363B7C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  _QWORD *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  LOBYTE(a1) = *a1;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isOn] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_glowSubscription] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_expandsWithClickInteractionOnly] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] = 0;
  v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control] = (_BYTE)a1;
  v8 = &v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  *v8 = a2;
  v8[1] = a3;
  v11.receiver = v3;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_227363CAC();

  return v9;
}

void sub_227363CAC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v1 = v0;
  if (qword_2540B8D50 != -1)
    swift_once();
  objc_msgSend(v0, sel_setBackgroundColor_, qword_2540BCE20);
  v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v1, sel_setTintColor_, v2);

  sub_2274154A4();
  v4 = v3;
  v5 = sub_227363954();
  objc_msgSend(v5, sel_setImage_forState_, v4, 0);

  v6 = &v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
  swift_beginAccess();
  *v6 = 0;
  sub_2273639E0();
  v7 = objc_msgSend(v1, sel_layer);
  if (qword_2540B8DD0 != -1)
    swift_once();
  objc_msgSend(v7, sel_setCornerRadius_, *(double *)&qword_2540BCE70 * 0.5);

  v8 = objc_msgSend(v1, sel_layer);
  if (qword_2540B8D48 != -1)
    swift_once();
  objc_msgSend(v8, sel_setCornerCurve_, qword_2540BCE18);

  v9 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v9, sel_setMasksToBounds_, 1);

  v10 = sub_2273632D0();
  objc_msgSend(v10, sel_setAlpha_, 0.0);

  v11 = sub_227363954();
  v12 = objc_msgSend(v11, sel_layer);

  objc_msgSend(v12, sel_setCornerRadius_, (*(double (**)(void))(*(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config + 8] + 24))()* 0.5);
  v13 = sub_227363954();
  v14 = objc_msgSend(v13, sel_layer);

  objc_msgSend(v14, sel_setMasksToBounds_, 1);
  v15 = sub_227363954();
  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v1, sel_didTap_, 64);

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v1, sel_handleLabelTapWithSender_);
  objc_msgSend(v16, sel_setNumberOfTapsRequired_, 1);
  v17 = sub_2273632D0();
  objc_msgSend(v17, sel_addGestureRecognizer_, v16);

  v18 = sub_2273632D0();
  objc_msgSend(v1, sel_addSubview_, v18);

  v19 = sub_227363954();
  objc_msgSend(v1, sel_addSubview_, v19);

  v20 = sub_227363330();
  objc_msgSend(v1, sel_addSubview_, v20);

  v21 = sub_227363330();
  objc_msgSend(v1, sel_bringSubviewToFront_, v21);

  sub_227364240();
}

uint64_t sub_2273640B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;

  v6 = sub_227363954();
  sub_227365B94(a1, (uint64_t)v18);
  v7 = v19;
  if (v19)
  {
    v8 = __swift_project_boxed_opaque_existential_1(v18, v19);
    v9 = *(_QWORD *)(v7 - 8);
    v13 = MEMORY[0x24BDAC7A8](v8, v8, v10, v11, v12);
    v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v15, v13);
    v16 = sub_22758EE44();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v16, a2, a3);

  return swift_unknownObjectRelease();
}

void sub_227364240()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  _BYTE *v7;
  void *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v1 = sub_227363954();
  objc_msgSend(v1, sel_setIsAccessibilityElement_, 1);

  v2 = sub_227363954();
  sub_227415BCC();
  v3 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityLabel_, v3);

  v4 = sub_227363954();
  Control.rawValue.getter();
  v5 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  v6 = sub_227363954();
  v7 = (_BYTE *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  v8 = 0;
  if ((*v7 & 1) == 0)
  {
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v11 = (void *)sub_22758E1B4();
    v12 = (void *)sub_22758E1B4();
    v13 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, v12);

    sub_22758E1E4();
    v8 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v6, sel_setAccessibilityHint_, v8);

}

void sub_22736445C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double (*v5)(uint64_t, uint64_t);
  double v6;
  double v7;
  double v8;
  double v9;
  double (*v10)(uint64_t, uint64_t);
  double v11;
  double v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  objc_super v42;
  CGRect v43;

  v1 = v0;
  v42.receiver = v0;
  v42.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v42, sel_layoutSubviews);
  v2 = &v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_config];
  v4 = *((_QWORD *)v2 + 1);
  v5 = *(double (**)(uint64_t, uint64_t))(v4 + 24);
  v6 = v5(v3, v4);
  v7 = v5(v3, v4);
  objc_msgSend(v1, sel_bounds);
  v9 = v8;
  v10 = *(double (**)(uint64_t, uint64_t))(v4 + 40);
  v11 = v10(v3, v4);
  v12 = v10(v3, v4);
  v13 = &v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
  swift_beginAccess();
  if ((*v13 & 1) != 0)
  {
    v14 = sub_2273BA57C();
    v15 = sub_2273BA574();
    objc_msgSend(v1, sel_bounds);
    v17 = v16 - v6 - v14 - v15;
    v43.origin.x = 0.0;
    v43.origin.y = 0.0;
    v43.size.width = v6;
    v43.size.height = v7;
    v18 = v14 + CGRectGetMaxX(v43);
  }
  else
  {
    v17 = 0.0;
    v18 = 0.0;
  }
  v19 = sub_227363954();
  objc_msgSend(v19, sel_setFrame_, 0.0, 0.0, v6, v7);

  v20 = sub_2273632D0();
  objc_msgSend(v20, sel_setFrame_, v18, (v9 - v11) * 0.5, v17, v12);

  v21 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_227598070;
  v23 = sub_227363330();
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v1, sel_trailingAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, -5.0);

  *(_QWORD *)(v22 + 32) = v26;
  v27 = sub_227363330();
  v28 = objc_msgSend(v27, sel_centerYAnchor);

  v29 = objc_msgSend(v1, sel_centerYAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v22 + 40) = v30;
  v31 = sub_227363330();
  v32 = objc_msgSend(v31, sel_widthAnchor);

  v33 = sub_227363954();
  v34 = objc_msgSend(v33, sel_widthAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -10.0);
  *(_QWORD *)(v22 + 48) = v35;
  v36 = sub_227363330();
  v37 = objc_msgSend(v36, sel_heightAnchor);

  v38 = sub_227363954();
  v39 = objc_msgSend(v38, sel_widthAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -10.0);
  *(_QWORD *)(v22 + 56) = v40;
  sub_22758E3F4();
  sub_22730BA80(0, (unint64_t *)&qword_2540B9F00);
  v41 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_activateConstraints_, v41, v22);

}

uint64_t type metadata accessor for MultiControlButton()
{
  return objc_opt_self();
}

uint64_t sub_227364A34()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  return *v1;
}

void sub_227364A78(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded);
  swift_beginAccess();
  *v3 = a1;
  sub_2273639E0();
}

void (*sub_227364ACC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_227364B14;
}

void sub_227364B14(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2273639E0();
}

uint64_t sub_227364B44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed);
}

void sub_227364B58(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_control);
}

uint64_t sub_227364B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_227364BA8()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_227596560;
  *(_QWORD *)(v0 + 32) = sub_227363954();
  sub_22758E3F4();
  return v0;
}

void sub_227364C68(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  char *v8;
  int v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v2 = v1;
  v3 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction;
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v4)
  {
    sub_22730BA80(0, (unint64_t *)&qword_2558D7280);
    v6 = a1;
    v7 = v4;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      v8 = &v2[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded];
      swift_beginAccess();
      v9 = *v8;
      if (qword_2558D4A20 != -1)
        swift_once();
      v10 = sub_22758CF9C();
      __swift_project_value_buffer(v10, (uint64_t)qword_2558D6188);
      v11 = v2;
      v12 = sub_22758CF84();
      v13 = sub_22758E6B8();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        *(_DWORD *)v14 = 67109632;
        sub_22758EA48();
        *(_WORD *)(v14 + 8) = 1024;
        sub_22758EA48();
        *(_WORD *)(v14 + 14) = 1024;
        sub_22758EA48();

        _os_log_impl(&dword_2272F4000, v12, v13, "should begin: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v14, 0x14u);
        MEMORY[0x2276B3D50](v14, -1, -1);

        if (!v9)
          return;
      }
      else
      {

        if (!v9)
          return;
      }
      v15 = *(void **)&v2[v3];
      if (v15)
      {
        objc_msgSend(v15, sel_cancelInteraction);
        v16 = *(void **)&v2[v3];
        if (v16)
        {
          v17 = v16;
          sub_22736599C();

          if (*(_QWORD *)&v2[v3])
          {
            objc_msgSend(v11, sel_removeInteraction_);
            return;
          }
LABEL_16:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_16;
    }
  }
}

void sub_227364F20(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;

  v2 = v1;
  v3 = OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction;
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v4)
  {
    sub_22730BA80(0, (unint64_t *)&qword_2558D7280);
    v6 = a1;
    v7 = v4;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      if ((v2[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] & 1) == 0)
      {
        if (qword_2558D4A20 != -1)
          swift_once();
        v16 = sub_22758CF9C();
        __swift_project_value_buffer(v16, (uint64_t)qword_2558D6188);
        v12 = sub_22758CF84();
        v13 = sub_22758E6B8();
        if (!os_log_type_enabled(v12, v13))
          goto LABEL_17;
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        v15 = "will present";
        goto LABEL_16;
      }
      v8 = *(void **)&v2[v3];
      if (v8)
      {
        objc_msgSend(v8, sel_cancelInteraction);
        v9 = *(void **)&v2[v3];
        if (v9)
        {
          v10 = v9;
          sub_22736599C();

          if (*(_QWORD *)&v2[v3])
          {
            objc_msgSend(v2, sel_removeInteraction_);
            if (qword_2558D4A20 != -1)
              swift_once();
            v11 = sub_22758CF9C();
            __swift_project_value_buffer(v11, (uint64_t)qword_2558D6188);
            v12 = sub_22758CF84();
            v13 = sub_22758E6B8();
            if (!os_log_type_enabled(v12, v13))
              goto LABEL_17;
            v14 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v14 = 0;
            v15 = "will not present";
LABEL_16:
            _os_log_impl(&dword_2272F4000, v12, v13, v15, v14, 2u);
            MEMORY[0x2276B3D50](v14, -1, -1);
LABEL_17:

            return;
          }
          goto LABEL_20;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
}

id sub_227365208(void *a1, double a2, double a3)
{
  char *v3;
  void *v4;
  void *v5;
  id v9;
  id v10;
  id result;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v4 = v3;
  v5 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (!v5)
    return 0;
  sub_22730BA80(0, (unint64_t *)&qword_2558D7280);
  v9 = a1;
  v10 = v5;
  LOBYTE(a1) = sub_22758E94C();

  result = 0;
  if ((a1 & 1) != 0)
  {
    if (qword_2558D4A20 != -1)
      swift_once();
    v12 = sub_22758CF9C();
    __swift_project_value_buffer(v12, (uint64_t)qword_2558D6188);
    v13 = v4;
    v14 = sub_22758CF84();
    v15 = sub_22758E6B8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v20 = v17;
      *(_DWORD *)v16 = 136315650;
      v18 = MEMORY[0x2276B28EC](a2, a3);
      sub_22733611C(v18, v19, &v20);
      sub_22758EA48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 1024;
      swift_beginAccess();

      sub_22758EA48();
      *(_WORD *)(v16 + 18) = 1024;

      sub_22758EA48();
      _os_log_impl(&dword_2272F4000, v14, v15, "location: %s, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v16, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v17, -1, -1);
      MEMORY[0x2276B3D50](v16, -1, -1);

    }
    else
    {

    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA30]), sel_initWithView_, v13);
  }
  return result;
}

id sub_22736551C()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)sub_22758E1B4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (v1)
  {
    if (qword_2540B8D70 != -1)
      swift_once();
    v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, -1, *(double *)&qword_2540BCE30);
    v3 = objc_msgSend(v1, sel_imageByApplyingSymbolConfiguration_, v2);

    if (v3)
    {
      v1 = objc_msgSend(v3, sel_imageWithRenderingMode_, 1);

    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_227365658()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isOn] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isGlowing] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_glowSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_expandsWithClickInteractionOnly] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___keyboardButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___label] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton____lazy_storage___internalButton] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded] = 0;
  v0[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] = 0;

  sub_22758ECC4();
  __break(1u);
}

uint64_t sub_227365744(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_clickInteraction];
  if (v3)
  {
    sub_22730BA80(0, (unint64_t *)&qword_2558D7280);
    v5 = a1;
    v6 = v3;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      if (qword_2558D4A20 != -1)
        swift_once();
      v7 = sub_22758CF9C();
      __swift_project_value_buffer(v7, (uint64_t)qword_2558D6188);
      v8 = v2;
      v9 = sub_22758CF84();
      v10 = sub_22758E6B8();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        *(_DWORD *)v11 = 67109376;
        swift_beginAccess();
        sub_22758EA48();
        *(_WORD *)(v11 + 8) = 1024;
        sub_22758EA48();

        _os_log_impl(&dword_2272F4000, v9, v10, "expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v11, 0xEu);
        MEMORY[0x2276B3D50](v11, -1, -1);

      }
      else
      {

      }
      if (v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isDimmed] != 1
        || (v12 = &v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_isExpanded], swift_beginAccess(), *v12 == 1))
      {
        v13 = &v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate];
        if (MEMORY[0x2276B3E34](&v8[OBJC_IVAR____TtC16MagnifierSupport18MultiControlButton_delegate]))
        {
          v14 = *((_QWORD *)v13 + 1);
          ObjectType = swift_getObjectType();
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 8))(v8, &off_24EF9DC08, ObjectType, v14);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return 0;
}

void sub_22736599C()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;

  if (qword_2558D4A20 != -1)
    swift_once();
  v1 = sub_22758CF9C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2558D6188);
  v5 = v0;
  v2 = sub_22758CF84();
  v3 = sub_22758E6B8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    *(_DWORD *)v4 = 67109632;
    sub_22758EA48();
    *(_WORD *)(v4 + 8) = 1024;
    swift_beginAccess();
    sub_22758EA48();
    *(_WORD *)(v4 + 14) = 1024;
    sub_22758EA48();

    _os_log_impl(&dword_2272F4000, v2, v3, "was cancelled: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v4, 0x14u);
    MEMORY[0x2276B3D50](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_227365B54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227365B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_227365C38(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  char *v8;
  int v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;

  v2 = v1;
  v3 = OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction;
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v4)
  {
    sub_227366594();
    v6 = a1;
    v7 = v4;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      v8 = &v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isExpanded];
      swift_beginAccess();
      v9 = *v8;
      if (qword_2558D4A20 != -1)
        swift_once();
      v10 = sub_22758CF9C();
      __swift_project_value_buffer(v10, (uint64_t)qword_2558D6188);
      v11 = v2;
      v12 = sub_22758CF84();
      v13 = sub_22758E6B8();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        *(_DWORD *)v14 = 67109632;
        sub_22758EA48();
        *(_WORD *)(v14 + 8) = 1024;
        sub_22758EA48();
        *(_WORD *)(v14 + 14) = 1024;
        sub_22758EA48();

        _os_log_impl(&dword_2272F4000, v12, v13, "should begin: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v14, 0x14u);
        MEMORY[0x2276B3D50](v14, -1, -1);

        if (!v9)
          return;
      }
      else
      {

        if (!v9)
          return;
      }
      v15 = *(void **)&v2[v3];
      if (v15)
      {
        objc_msgSend(v15, sel_cancelInteraction);
        v16 = *(void **)&v2[v3];
        if (v16)
        {
          v17 = v16;
          sub_227366828();

          if (*(_QWORD *)&v2[v3])
          {
            objc_msgSend(v11, sel_removeInteraction_);
            if (v11[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_control] != 4)
              return;
            v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDBA8]), sel_initWithDelegate_, v11);
            v19 = *(void **)&v2[v3];
            *(_QWORD *)&v2[v3] = v18;

            if (*(_QWORD *)&v2[v3])
            {
              objc_msgSend(v11, sel_addInteraction_);
              return;
            }
LABEL_19:
            __break(1u);
            return;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_18;
    }
  }
}

void sub_227365F48(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;

  v2 = v1;
  v3 = OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction;
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v4)
  {
    sub_227366594();
    v6 = a1;
    v7 = v4;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      if ((v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isDimmed] & 1) == 0)
      {
        if (qword_2558D4A20 != -1)
          swift_once();
        v18 = sub_22758CF9C();
        __swift_project_value_buffer(v18, (uint64_t)qword_2558D6188);
        v14 = sub_22758CF84();
        v15 = sub_22758E6B8();
        if (!os_log_type_enabled(v14, v15))
          goto LABEL_20;
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = "will present";
        goto LABEL_19;
      }
      v8 = *(void **)&v2[v3];
      if (v8)
      {
        objc_msgSend(v8, sel_cancelInteraction);
        v9 = *(void **)&v2[v3];
        if (v9)
        {
          v10 = v9;
          sub_227366828();

          if (*(_QWORD *)&v2[v3])
          {
            objc_msgSend(v2, sel_removeInteraction_);
            if (v2[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_control] != 4)
            {
LABEL_10:
              if (qword_2558D4A20 != -1)
                swift_once();
              v13 = sub_22758CF9C();
              __swift_project_value_buffer(v13, (uint64_t)qword_2558D6188);
              v14 = sub_22758CF84();
              v15 = sub_22758E6B8();
              if (!os_log_type_enabled(v14, v15))
                goto LABEL_20;
              v16 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v16 = 0;
              v17 = "will not present";
LABEL_19:
              _os_log_impl(&dword_2272F4000, v14, v15, v17, v16, 2u);
              MEMORY[0x2276B3D50](v16, -1, -1);
LABEL_20:

              return;
            }
            v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDBA8]), sel_initWithDelegate_, v2);
            v12 = *(void **)&v2[v3];
            *(_QWORD *)&v2[v3] = v11;

            if (*(_QWORD *)&v2[v3])
            {
              objc_msgSend(v2, sel_addInteraction_);
              goto LABEL_10;
            }
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_23;
    }
  }
}

id sub_227366284(void *a1, double a2, double a3)
{
  char *v3;
  void *v4;
  void *v5;
  id v9;
  id v10;
  id result;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v4 = v3;
  v5 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (!v5)
    return 0;
  sub_227366594();
  v9 = a1;
  v10 = v5;
  LOBYTE(a1) = sub_22758E94C();

  result = 0;
  if ((a1 & 1) != 0)
  {
    if (qword_2558D4A20 != -1)
      swift_once();
    v12 = sub_22758CF9C();
    __swift_project_value_buffer(v12, (uint64_t)qword_2558D6188);
    v13 = v4;
    v14 = sub_22758CF84();
    v15 = sub_22758E6B8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v20 = v17;
      *(_DWORD *)v16 = 136315650;
      v18 = MEMORY[0x2276B28EC](a2, a3);
      sub_22733611C(v18, v19, &v20);
      sub_22758EA48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 1024;
      swift_beginAccess();

      sub_22758EA48();
      *(_WORD *)(v16 + 18) = 1024;

      sub_22758EA48();
      _os_log_impl(&dword_2272F4000, v14, v15, "location: %s, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v16, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v17, -1, -1);
      MEMORY[0x2276B3D50](v16, -1, -1);

    }
    else
    {

    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA30]), sel_initWithView_, v13);
  }
  return result;
}

unint64_t sub_227366594()
{
  unint64_t result;

  result = qword_2558D7280;
  if (!qword_2558D7280)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2558D7280);
  }
  return result;
}

uint64_t sub_2273665D0(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_clickInteraction];
  if (v3)
  {
    sub_227366594();
    v5 = a1;
    v6 = v3;
    LOBYTE(a1) = sub_22758E94C();

    if ((a1 & 1) != 0)
    {
      if (qword_2558D4A20 != -1)
        swift_once();
      v7 = sub_22758CF9C();
      __swift_project_value_buffer(v7, (uint64_t)qword_2558D6188);
      v8 = v2;
      v9 = sub_22758CF84();
      v10 = sub_22758E6B8();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        *(_DWORD *)v11 = 67109376;
        swift_beginAccess();
        sub_22758EA48();
        *(_WORD *)(v11 + 8) = 1024;
        sub_22758EA48();

        _os_log_impl(&dword_2272F4000, v9, v10, "expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v11, 0xEu);
        MEMORY[0x2276B3D50](v11, -1, -1);

      }
      else
      {

      }
      if (v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isDimmed] != 1
        || (v12 = &v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_isExpanded], swift_beginAccess(), *v12 == 1))
      {
        v13 = &v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_delegate];
        if (MEMORY[0x2276B3E34](&v8[OBJC_IVAR____TtC16MagnifierSupport12SliderButton_delegate]))
        {
          v14 = *((_QWORD *)v13 + 1);
          ObjectType = swift_getObjectType();
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 8))(v8, &off_24EFA3AB0, ObjectType, v14);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return 0;
}

void sub_227366828()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;

  if (qword_2558D4A20 != -1)
    swift_once();
  v1 = sub_22758CF9C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2558D6188);
  v5 = v0;
  v2 = sub_22758CF84();
  v3 = sub_22758E6B8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    *(_DWORD *)v4 = 67109632;
    sub_22758EA48();
    *(_WORD *)(v4 + 8) = 1024;
    swift_beginAccess();
    sub_22758EA48();
    *(_WORD *)(v4 + 14) = 1024;
    sub_22758EA48();

    _os_log_impl(&dword_2272F4000, v2, v3, "was cancelled: %{BOOL}d, expanded: %{BOOL}d, dimmed: %{BOOL}d", (uint8_t *)v4, 0x14u);
    MEMORY[0x2276B3D50](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t MFReaderPlaybackSpeed.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_22758C984();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22758C978();
  v8 = sub_22758C948();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  return v8;
}

uint64_t MFReaderPlaybackSpeed.localizedName.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (qword_2558D4CC0 != -1)
    swift_once();
  v0 = (void *)qword_2558F3F98;
  v1 = (void *)sub_22758E598();
  v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    v3 = sub_22758E1E4();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v8 = (void *)sub_22758E1B4();
  v9 = (void *)sub_22758E1B4();
  v10 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, 0, v9);

  sub_22758E1E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_227593AB0;
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 64) = sub_22732ECC8();
  v12 = 3157553;
  if (v5)
    v12 = v3;
  v13 = 0xE300000000000000;
  if (v5)
    v13 = v5;
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = sub_22758E1C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

float MFReaderPlaybackSpeed.rawValue.getter()
{
  char *v0;

  return flt_227598774[*v0];
}

MagnifierSupport::MFReaderPlaybackSpeed_optional __swiftcall MFReaderPlaybackSpeed.init(rawValue:)(Swift::Float rawValue)
{
  char *v1;
  char v2;
  char v3;
  MagnifierSupport::MFReaderPlaybackSpeed_optional result;

  if (rawValue == 0.75)
  {
    *v1 = 0;
  }
  else if (rawValue == 1.0)
  {
    *v1 = 1;
  }
  else if (rawValue == 1.25)
  {
    *v1 = 2;
  }
  else if (rawValue == 1.5)
  {
    *v1 = 3;
  }
  else
  {
    if (rawValue == 2.0)
      v2 = 5;
    else
      v2 = 6;
    if (rawValue == 1.75)
      v3 = 4;
    else
      v3 = v2;
    *v1 = v3;
  }
  return result;
}

void *static MFReaderPlaybackSpeed.allCases.getter()
{
  return &unk_24EF987C0;
}

uint64_t sub_227366D24()
{
  return sub_227411418();
}

uint64_t sub_227366D30()
{
  return sub_2274DC660();
}

uint64_t sub_227366D38()
{
  return sub_227411418();
}

MagnifierSupport::MFReaderPlaybackSpeed_optional sub_227366D40(Swift::Float *a1)
{
  return MFReaderPlaybackSpeed.init(rawValue:)(*a1);
}

float sub_227366D48@<S0>(float *a1@<X8>)
{
  char *v1;
  float result;

  result = flt_227598774[*v1];
  *a1 = result;
  return result;
}

void sub_227366D60(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF987C0;
}

BOOL sub_227366D70(char *a1, char *a2)
{
  return flt_227598774[*a1] == flt_227598774[*a2];
}

uint64_t sub_227366D94()
{
  sub_227367030();
  return sub_22758E3A0();
}

uint64_t sub_227366DF0()
{
  sub_227367030();
  return sub_22758E37C();
}

unint64_t sub_227366E40()
{
  unint64_t result;

  result = qword_2558D7290;
  if (!qword_2558D7290)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderPlaybackSpeed, &type metadata for MFReaderPlaybackSpeed);
    atomic_store(result, (unint64_t *)&qword_2558D7290);
  }
  return result;
}

unint64_t sub_227366E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D7298;
  if (!qword_2558D7298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D72A0);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2558D7298);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MFReaderPlaybackSpeed(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MFReaderPlaybackSpeed(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_227366FB0 + 4 * byte_2275985D5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_227366FE4 + 4 * byte_2275985D0[v4]))();
}

uint64_t sub_227366FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227366FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227366FF4);
  return result;
}

uint64_t sub_227367000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227367008);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22736700C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227367014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MFReaderPlaybackSpeed()
{
  return &type metadata for MFReaderPlaybackSpeed;
}

unint64_t sub_227367030()
{
  unint64_t result;

  result = qword_2558D72A8;
  if (!qword_2558D72A8)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for MFReaderPlaybackSpeed, &type metadata for MFReaderPlaybackSpeed);
    atomic_store(result, (unint64_t *)&qword_2558D72A8);
  }
  return result;
}

uint64_t sub_227367074()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PulseFrequencyGenerator()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of StillImageStore.saveAVCapturePhoto(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StillImageStore.imageURLs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StillImageStore.imageDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StillImageStore.thumbnailDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2273670D4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_227367608(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    goto LABEL_5;
  if (((((result & 1) == 0) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0)
    return 1;
  if (v2 != 1)
  {
    v4 = 33;
    while (1)
    {
      v5 = v4 - 31;
      if (__OFADD__(v4 - 32, 1))
        break;
      v3 = ((result & 1) == 0) ^ *(_BYTE *)(a2 + v4);
      if ((v3 & 1) == 0)
      {
        ++v4;
        if (v5 != v2)
          continue;
      }
      return v3 & 1;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  return result;
}

uint64_t sub_227367680(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_22758EE50();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_22758EE50() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_227367748(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2273677A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_22758E1E4();
  v5 = v4;
  if (v3 == sub_22758E1E4() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v8 = sub_22758EE50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = 5;
  while (1)
  {
    v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
      break;
    v12 = sub_22758E1E4();
    v14 = v13;
    if (v12 == sub_22758E1E4() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v17 = sub_22758EE50();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_7;
    ++v10;
    if (v11 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_2273678FC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_227367960(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_22758ECE8())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x2276B2BEC](0, a2);
LABEL_5:
      v6 = v5;
      sub_22730BA80(0, (unint64_t *)&unk_2540B9EB0);
      v7 = sub_22758E94C();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_22758E94C();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x2276B2BEC](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_22758E94C();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_227367AE4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_227367B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22758E4C0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22758E4B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22731A1A4(a1, &qword_2540B9E30);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22758E460();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_227367C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22758E4C0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22758E4B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22731A1A4(a1, &qword_2540B9E30);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22758E460();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7508);
  return swift_task_create();
}

uint64_t sub_227367DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22731A11C(a1, (uint64_t)v12, &qword_2540B9E30);
  v13 = sub_22758E4C0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_22731A1A4((uint64_t)v12, &qword_2540B9E30);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_22758E460();
      v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_22758E4B4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7508);
  if (v17 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v17;
  }
  return swift_task_create();
}

uint64_t sub_227367F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22731A11C(a1, (uint64_t)v12, &qword_2540B9E30);
  v13 = sub_22758E4C0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_22731A1A4((uint64_t)v12, &qword_2540B9E30);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_22758E460();
      v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_22758E4B4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  if (v17 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v17;
  }
  return swift_task_create();
}

void sub_2273680E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  float v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;

  v3 = a1 + 56;
  v4 = *(_BYTE *)(a1 + 32);
  v5 = 1 << v4;
  v6 = -1;
  if (1 << v4 < 64)
    v6 = ~(-1 << (1 << v4));
  v7 = v6 & *(_QWORD *)(a1 + 56);
  if (v7)
  {
    v31 = a2;
    v8 = 0;
    v9 = __clz(__rbit64(v7));
    v10 = (v7 - 1) & v7;
    v11 = (unint64_t)(v5 + 63) >> 6;
    while (2)
    {
      v12 = *(_QWORD *)(a1 + 48) + 96 * v9;
      v13 = *(void **)v12;
      v34 = *(_QWORD *)(v12 + 16);
      v35 = *(_QWORD *)(v12 + 24);
      v36 = *(_QWORD *)(v12 + 32);
      v37 = *(_QWORD *)(v12 + 40);
      v38 = *(_QWORD *)(v12 + 48);
      v14 = *(_QWORD *)(v12 + 64);
      v33 = *(_QWORD *)(v12 + 56);
      v15 = *(_QWORD *)(v12 + 72);
      v16 = *(_QWORD *)(v12 + 80);
      v17 = *(float *)(v12 + 88);
      swift_bridgeObjectRetain();
      v39 = v13;
      v40 = v16;
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_6:
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v8 << 6);
        goto LABEL_7;
      }
      while (1)
      {
        a2 = v8 + 1;
        if (__OFADD__(v8, 1))
          break;
        if (a2 >= v11)
          goto LABEL_27;
        v23 = *(_QWORD *)(v3 + 8 * a2);
        ++v8;
        if (!v23)
        {
          v8 = a2 + 1;
          if (a2 + 1 >= v11)
            goto LABEL_27;
          v23 = *(_QWORD *)(v3 + 8 * v8);
          if (!v23)
          {
            v8 = a2 + 2;
            if (a2 + 2 >= v11)
              goto LABEL_27;
            v23 = *(_QWORD *)(v3 + 8 * v8);
            if (!v23)
            {
              v8 = a2 + 3;
              if (a2 + 3 >= v11)
                goto LABEL_27;
              v23 = *(_QWORD *)(v3 + 8 * v8);
              if (!v23)
              {
                a2 += 4;
                if (a2 >= v11)
                {
LABEL_27:
                  swift_release();
                  *(_QWORD *)v31 = v39;
                  *(_QWORD *)(v31 + 8) = 0;
                  *(_QWORD *)(v31 + 16) = v34;
                  *(_QWORD *)(v31 + 24) = v35;
                  *(_QWORD *)(v31 + 32) = v36;
                  *(_QWORD *)(v31 + 40) = v37;
                  *(_QWORD *)(v31 + 48) = v38;
                  *(_QWORD *)(v31 + 56) = v33;
                  *(_QWORD *)(v31 + 64) = v14;
                  *(_QWORD *)(v31 + 72) = v15;
                  *(_QWORD *)(v31 + 80) = v40;
                  *(float *)(v31 + 88) = v17;
                  return;
                }
                v23 = *(_QWORD *)(v3 + 8 * a2);
                if (!v23)
                {
                  while (1)
                  {
                    v8 = a2 + 1;
                    if (__OFADD__(a2, 1))
                      break;
                    if (v8 >= v11)
                      goto LABEL_27;
                    v23 = *(_QWORD *)(v3 + 8 * v8);
                    ++a2;
                    if (v23)
                      goto LABEL_24;
                  }
                  __break(1u);
LABEL_44:
                  v28 = 0;
                  v29 = 6;
                  if (v11 > 6)
                    v29 = v11;
                  v30 = v29 - 6;
                  while (v30 != v28)
                  {
                    v27 = *(_QWORD *)(a1 + 104 + 8 * v28++);
                    if (v27)
                    {
                      v8 = v28 + 5;
                      goto LABEL_31;
                    }
                  }
                  goto LABEL_50;
                }
                v8 = a2;
              }
            }
          }
        }
LABEL_24:
        v18 = v23 - 1;
        v10 = (v23 - 1) & v23;
        v20 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_7:
        v21 = *(_QWORD *)(a1 + 48) + 96 * v20;
        v22 = *(float *)(v21 + 88);
        if (v22 < v17)
        {
          v24 = *(_QWORD *)(v21 + 72);
          v25 = *(_QWORD *)(v21 + 80);
          v32 = *(_QWORD *)(v21 + 64);
          v33 = *(_QWORD *)(v21 + 56);
          v37 = *(_QWORD *)(v21 + 40);
          v38 = *(_QWORD *)(v21 + 48);
          v35 = *(_QWORD *)(v21 + 24);
          v36 = *(_QWORD *)(v21 + 32);
          v34 = *(_QWORD *)(v21 + 16);
          v26 = *(id *)v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();

          v39 = v26;
          v40 = v25;
          v15 = v24;
          v14 = v32;
          v17 = v22;
          if (v10)
            goto LABEL_6;
        }
        else if (v10)
        {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_38:
      if (v18 >= 9)
      {
        v27 = *(_QWORD *)(a1 + 88);
        if (v27)
        {
          v8 = 4;
        }
        else
        {
          v27 = *(_QWORD *)(a1 + 96);
          if (!v27)
            goto LABEL_44;
          v8 = 5;
        }
LABEL_31:
        v10 = (v27 - 1) & v27;
        v9 = __clz(__rbit64(v27)) + (v8 << 6);
        continue;
      }
      break;
    }
  }
  else
  {
    v18 = v4 & 0x3F;
    if (v18 > 6)
    {
      v11 = (unint64_t)(v5 + 63) >> 6;
      v27 = *(_QWORD *)(a1 + 64);
      if (v27)
      {
        v31 = a2;
        v8 = 1;
        goto LABEL_31;
      }
      if (v18 >= 8)
      {
        v27 = *(_QWORD *)(a1 + 72);
        v31 = a2;
        if (v27)
        {
          v8 = 2;
        }
        else
        {
          v27 = *(_QWORD *)(a1 + 80);
          if (!v27)
            goto LABEL_38;
          v8 = 3;
        }
        goto LABEL_31;
      }
    }
  }
LABEL_50:
  *(_OWORD *)(a2 + 76) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
}

uint64_t sub_227368454()
{
  if ((sub_22758C960() & 1) != 0)
    return sub_22758C900();
  else
    return 0;
}

void sub_2273684A8(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_227368508()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  return *v1;
}

void sub_22736854C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_22736859C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MAGObjectUnderstandingService.__allocating_init(arService:eventHandler:pulseFeedbackProcessor:)(void *a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MAGObjectUnderstandingService.init(arService:eventHandler:pulseFeedbackProcessor:)(a1, a2, a3);
}

id MAGObjectUnderstandingService.init(arService:eventHandler:pulseFeedbackProcessor:)(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void **v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  objc_class *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  objc_super v41;

  v40 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache] = v13;
  v14 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants] = MEMORY[0x24BEE4B00];
  v15 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode;
  v16 = objc_allocWithZone(MEMORY[0x24BDE8250]);
  v17 = v3;
  *(_QWORD *)&v3[v15] = objc_msgSend(v16, sel_init);
  v18 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups] = v14;
  *(_DWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance] = 0;
  v19 = &v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject];
  *((_OWORD *)v19 + 3) = 0u;
  *((_OWORD *)v19 + 4) = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  *(_OWORD *)v19 = 0u;
  v20 = (void **)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode];
  *v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  v21 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer;
  v22 = objc_allocWithZone((Class)type metadata accessor for ObjectPointer());
  *(_QWORD *)&v17[v21] = ObjectPointer.init(length:)(3.0);
  v23 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pointerHitTestDebugNode;
  v24 = objc_msgSend((id)objc_opt_self(), sel_sphereWithRadius_, 0.05);
  v25 = objc_msgSend((id)objc_opt_self(), sel_nodeWithGeometry_, v24);

  *(_QWORD *)&v17[v23] = v25;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService] = a1;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_eventHandler] = v40;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor] = a3;
  swift_beginAccess();
  v26 = *v20;
  v27 = *(void **)&v17[v21];
  v28 = a1;
  swift_retain();
  v29 = a3;
  v30 = v26;
  v31 = v27;
  objc_msgSend(v30, sel_addChildNode_, v31);

  v32 = (objc_class *)type metadata accessor for MAGObjectUnderstandingService();
  v41.receiver = v17;
  v41.super_class = v32;
  v33 = objc_msgSendSuper2(&v41, sel_init);
  v34 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
  sub_22758E49C();
  v35 = v33;
  v36 = sub_22758E490();
  v37 = (_QWORD *)swift_allocObject();
  v38 = MEMORY[0x24BEE6930];
  v37[2] = v36;
  v37[3] = v38;
  v37[4] = v35;
  sub_227367B10((uint64_t)v12, (uint64_t)&unk_2558D7340, (uint64_t)v37);

  swift_release();
  swift_release();
  return v35;
}

uint64_t sub_227368968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_22758E49C();
  *(_QWORD *)(v4 + 48) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_2273689D4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v1 = *(char **)(v0 + 40);
  swift_release();
  v2 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService]
                 + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_eventHandler);
  swift_retain();
  v3 = v1;
  v4 = objc_msgSend(v3, sel_description);
  v5 = sub_22758E1E4();
  v7 = v6;

  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = &unk_2558D75D0;
  *(_QWORD *)(v9 + 24) = v8;
  swift_beginAccess();
  swift_retain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_227586EB4((uint64_t)&unk_2558DCCE0, v9, v5, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227368B60(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_signpost_type_t v32;
  uint8_t *v33;
  char *v34;
  void *v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  BOOL v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  id *v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  void *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  _QWORD *v75;
  id v76;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758CF18();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13, v14, v15, v16);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v25 = (char *)&v78 - v24;
  if (qword_2558D4A60 != -1)
    swift_once();
  v26 = sub_22758CF9C();
  __swift_project_value_buffer(v26, (uint64_t)qword_2558D6248);
  v27 = sub_22758CF84();
  v28 = sub_22758E6B8();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_2272F4000, v27, v28, "Starting object understanding service", v29, 2u);
    MEMORY[0x2276B3D50](v29, -1, -1);
  }

  if (qword_2558D4AC8 != -1)
    swift_once();
  v30 = sub_22758CF3C();
  __swift_project_value_buffer(v30, (uint64_t)qword_2558D66B8);
  sub_22758CF0C();
  v31 = sub_22758CF24();
  v32 = sub_22758E814();
  if ((sub_22758EA0C() & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v25, v11);
    v33 = (uint8_t *)swift_slowAlloc();
    v79 = v12;
    v34 = v10;
    v35 = a1;
    v36 = v33;
    *(_WORD *)v33 = 0;
    v37 = sub_22758CF00();
    _os_signpost_emit_with_name_impl(&dword_2272F4000, v31, v32, v37, "StartObjUndrerstandService", "", v36, 2u);
    v38 = v36;
    a1 = v35;
    v10 = v34;
    MEMORY[0x2276B3D50](v38, -1, -1);

    v39 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39(v25, v11);
    v39(v18, v11);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
  }
  if (qword_2540B87B8 != -1)
    swift_once();
  v40 = (_QWORD *)(qword_2540BCDD0
                 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedObjectUnderstandingFeedbacks);
  swift_beginAccess();
  v41 = v40[1];
  v42 = v40[2];
  v80[0] = *v40;
  v80[1] = v41;
  v80[2] = v42;
  v43 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v44 = swift_bridgeObjectRetain();
  if (v43 != -1)
    v44 = swift_once();
  MEMORY[0x24BDAC7A8](v44, v45, v46, v47, v48);
  *(&v78 - 2) = (uint64_t)v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D4F18);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor);
  v50 = v81;
  v51 = OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator;
  objc_msgSend(*(id *)(v49 + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator), sel_setUseHapticFeedback_, sub_227367748(3, v81));
  v52 = *(void **)(v49 + v51);
  v53 = sub_227367748(2, v50);
  v54 = v52;
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_setUseSoundFeedback_, v53);

  sub_2273697E4();
  v55 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene;
  v56 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene) = a1;
  v57 = a1;

  v58 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer), sel_removeFromParentNode);
  v59 = objc_allocWithZone((Class)type metadata accessor for ObjectPointer());
  v60 = ObjectPointer.init(length:)(3.0);
  v61 = *(void **)(v2 + v58);
  *(_QWORD *)(v2 + v58) = v60;

  v62 = (id *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  objc_msgSend(*v62, sel_addChildNode_, *(_QWORD *)(v2 + v58));
  v63 = *(void **)(v2 + v55);
  if (v63)
  {
    v64 = objc_msgSend(v63, sel_rootNode);
    objc_msgSend(v64, sel_addChildNode_, *v62);

    v65 = *(void **)(v2 + v55);
    if (v65)
    {
      v66 = objc_msgSend(v65, sel_rootNode);
      objc_msgSend(v66, sel_addChildNode_, *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode));

      v67 = *(void **)(v2 + v55);
      if (v67)
      {
        v68 = objc_msgSend(v67, sel_rootNode);
        objc_msgSend(v68, sel_addChildNode_, *(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode));

      }
    }
  }
  v69 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession))
  {
    v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E060]), sel_init_, 1);
    v71 = *(void **)(v2 + v69);
    *(_QWORD *)(v2 + v69) = v70;

    v72 = *(void **)(v2 + v69);
    if (v72)
      objc_msgSend(v72, sel_setDelegate_, v2);
  }
  v73 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v10, 1, 1, v73);
  v74 = *(void **)(v2 + v69);
  v75 = (_QWORD *)swift_allocObject();
  v75[2] = 0;
  v75[3] = 0;
  v75[4] = v74;
  v76 = v74;
  sub_227367DB0((uint64_t)v10, (uint64_t)&unk_2558D7358, (uint64_t)v75);
  swift_release();
  return sub_22731A1A4((uint64_t)v10, &qword_2540B9E30);
}

uint64_t sub_227369170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_227369188()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E058]), sel_init);
    objc_msgSend(v1, sel_runWithConfiguration_, v2);

  }
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2273691FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_signpost_type_t v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void **v51;
  void *v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  char *v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v76 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22758DF20();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v73 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22758DF68();
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22758CF18();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23, v24, v25, v26);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30, v31, v32, v33);
  v35 = (char *)&v70 - v34;
  if (qword_2558D4A60 != -1)
    swift_once();
  v36 = sub_22758CF9C();
  __swift_project_value_buffer(v36, (uint64_t)qword_2558D6248);
  v37 = sub_22758CF84();
  v38 = sub_22758E6B8();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_2272F4000, v37, v38, "Stopping object understanding service", v39, 2u);
    MEMORY[0x2276B3D50](v39, -1, -1);
  }

  if (qword_2558D4AC8 != -1)
    swift_once();
  v40 = sub_22758CF3C();
  __swift_project_value_buffer(v40, (uint64_t)qword_2558D66B8);
  sub_22758CF0C();
  v41 = sub_22758CF24();
  v42 = sub_22758E814();
  if ((sub_22758EA0C() & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v28, v35, v21);
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    v44 = sub_22758CF00();
    _os_signpost_emit_with_name_impl(&dword_2272F4000, v41, v42, v44, "StopObjUndrerstandService", "", v43, 2u);
    MEMORY[0x2276B3D50](v43, -1, -1);

    v45 = *(void (**)(char *, uint64_t))(v22 + 8);
    v45(v35, v21);
    v45(v28, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v21);
  }
  v46 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor];
  v47 = OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator;
  objc_msgSend(*(id *)(v46 + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator), sel_setUseHapticFeedback_, 0);
  objc_msgSend(*(id *)(v46 + v47), sel_setUseSoundFeedback_, 0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v48 = (void *)sub_22758E79C();
  v49 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode];
  v50 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode];
  v51 = (void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode];
  swift_beginAccess();
  v52 = *v51;
  v53 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pointerHitTestDebugNode];
  v54 = (_QWORD *)swift_allocObject();
  v54[2] = v49;
  v54[3] = v50;
  v54[4] = v52;
  v54[5] = v53;
  aBlock[4] = sub_227373C08;
  aBlock[5] = v54;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_10;
  v55 = _Block_copy(aBlock);
  v56 = v49;
  v57 = v50;
  v58 = v52;
  v59 = v53;
  swift_release();
  sub_22758DF44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  v60 = v73;
  v61 = v75;
  sub_22758EACC();
  MEMORY[0x2276B27CC](0, v20, v60, v55);
  _Block_release(v55);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v72);
  v62 = sub_22758E4C0();
  v63 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v76, 1, 1, v62);
  v64 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v1;
  v66 = (_QWORD *)swift_allocObject();
  v66[2] = 0;
  v66[3] = 0;
  v66[4] = v64;
  v66[5] = sub_227373C98;
  v66[6] = v65;
  v67 = v64;
  v68 = v1;
  sub_227367F50(v63, (uint64_t)&unk_2558D7368, (uint64_t)v66);
  swift_release();
  return sub_22731A1A4(v63, &qword_2540B9E30);
}

uint64_t sub_227369788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_2273697A4()
{
  uint64_t v0;

  (*(void (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), sel_stop));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2273697E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  _OWORD *v8;
  void *v9;
  void *v10;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  v3 = MEMORY[0x24BEE4B00];
  *v2 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode) = v4;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8250]), sel_init);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode) = v6;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups) = v1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups) = v3;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance) = 0;
  v8 = (_OWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  *v8 = 0u;
  v8[1] = 0u;

  v10 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession) = 0;

}

uint64_t sub_227369920(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  *(_QWORD *)&v8 = MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7).n128_u64[0];
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession];
  if (v11)
    objc_msgSend(v11, sel_updateWithFrame_, a1, v8);
  v12 = sub_22758E4C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  v13 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v13, sel_transform);
  v27 = v15;
  v28 = v14;
  v25 = v17;
  v26 = v16;

  sub_22758E49C();
  v18 = v1;
  v19 = sub_22758E490();
  v20 = swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v21;
  *(_QWORD *)(v20 + 32) = v18;
  v22 = v27;
  *(_OWORD *)(v20 + 48) = v28;
  *(_OWORD *)(v20 + 64) = v22;
  v23 = v25;
  *(_OWORD *)(v20 + 80) = v26;
  *(_OWORD *)(v20 + 96) = v23;
  sub_227367B10((uint64_t)v10, (uint64_t)&unk_2558D6798, v20);
  return swift_release();
}

uint64_t sub_227369A70(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  __n128 *v8;

  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  v8[22].n128_u64[1] = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  v8[23].n128_u64[0] = swift_task_alloc();
  v8[23].n128_u64[1] = sub_22758E49C();
  v8[24].n128_u64[0] = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

void sub_227369B0C()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  float32x4_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float v49;
  _DWORD *v50;
  uint64_t v51;
  float v52;
  float v53;
  float v54;
  float v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  unint64_t v108;
  id v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  float32x4_t v120;
  id v121;
  float32x4_t v122;
  int8x16_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void *v127;
  float v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  float v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  void *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  float32x4_t v153;
  int8x16_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  float32x4_t v166;
  id v167;
  id v168;
  float32x4_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  float v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int32x2_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  float32x4_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  __int128 v202;
  int v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __int128 v215;
  uint64_t v216;
  float32x4_t v217;
  __int128 v218;
  int v219;
  uint64_t v220;
  float32x4_t v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  float32x4_t v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  float32x4_t v230;
  void *v231[10];
  id v232[2];
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  int v242;

  v1 = *(_QWORD *)(v0 + 360);
  v222 = *(_OWORD *)(v0 + 192);
  v227 = *(_OWORD *)(v0 + 176);
  v215 = *(_OWORD *)(v0 + 224);
  v218 = *(_OWORD *)(v0 + 208);
  swift_release();
  v2 = (id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  objc_msgSend(*v2, sel_setSimdWorldTransform_, *(double *)&v227, *(double *)&v222, *(double *)&v218, *(double *)&v215);
  objc_msgSend(*v2, sel_simdPosition);
  v185 = v3;
  v4 = sub_22736FB88();
  v5 = (_QWORD *)&unk_2558D7000;
  v179 = (int32x2_t)vextq_s8((int8x16_t)v185, (int8x16_t)v185, 8uLL).u64[0];
  if (v4)
  {
    v6 = v4;
    v180 = v0;
    v7 = *(id *)(v0 + 360);
    v8 = sub_227374D90(v6, v185);
    swift_bridgeObjectRelease();

    v9 = v8[2];
    if (v9)
    {
      v10 = v8 + 8;
      v11 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        v18 = (_QWORD *)*(v10 - 4);
        v19 = *(v10 - 3);
        v20 = *(v10 - 2);
        v21 = *(v10 - 1);
        v23 = *v10;
        v22 = v10[1];
        v24 = v10[2];
        if ((v19 & 0x8000000000000000) == 0 || v18[2])
        {
          v219 = *((_DWORD *)v10 + 14);
          v223 = v10[6];
          v228 = v10[5];
          v209 = v10[4];
          v211 = v10[3];
          sub_2273769F0(v18, v19);
          v232[0] = v11;
          v213 = v24;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2273248EC(0, *((_QWORD *)v11 + 2) + 1, 1);
            v11 = (char *)v232[0];
          }
          v13 = *((_QWORD *)v11 + 2);
          v12 = *((_QWORD *)v11 + 3);
          v14 = v228;
          v15 = v223;
          v16 = v219;
          if (v13 >= v12 >> 1)
          {
            sub_2273248EC(v12 > 1, v13 + 1, 1);
            v16 = v219;
            v15 = v223;
            v14 = v228;
            v11 = (char *)v232[0];
          }
          *((_QWORD *)v11 + 2) = v13 + 1;
          v17 = &v11[96 * v13];
          *((_QWORD *)v17 + 4) = v18;
          *((_QWORD *)v17 + 5) = v19;
          *((_QWORD *)v17 + 6) = v20;
          *((_QWORD *)v17 + 7) = v21;
          *((_QWORD *)v17 + 8) = v23;
          *((_QWORD *)v17 + 9) = v22;
          *((_QWORD *)v17 + 10) = v213;
          *((_QWORD *)v17 + 11) = v211;
          *((_QWORD *)v17 + 12) = v209;
          *((_QWORD *)v17 + 13) = v14;
          *((_QWORD *)v17 + 14) = v15;
          *((_DWORD *)v17 + 30) = v16;
        }
        v10 += 12;
        --v9;
      }
      while (v9);
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v25 = *((_QWORD *)v11 + 2);
    if (v25)
    {
      v26 = *((_QWORD *)v11 + 5);
      v27 = *((_QWORD *)v11 + 10);
      v28 = *((_QWORD *)v11 + 11);
      v29 = v25 - 1;
      v182 = (uint64_t)v11;
      v229 = *((_QWORD *)v11 + 4);
      v210 = *((_QWORD *)v11 + 8);
      v212 = *((_QWORD *)v11 + 7);
      v208 = *((_QWORD *)v11 + 9);
      v220 = *((_QWORD *)v11 + 12);
      v224 = *((_QWORD *)v11 + 13);
      v216 = *((_QWORD *)v11 + 14);
      v173 = *((float *)v11 + 30);
      if (v25 == 1)
      {
        v30 = *((_QWORD *)v11 + 6);
        sub_2273769F0(*((void **)v11 + 4), v26);
      }
      else
      {
        v214 = *((_QWORD *)v11 + 6);
        swift_retain();
        v30 = v214;
        sub_2273769F0((void *)v229, v26);
        v49 = v173;
        v50 = v11 + 216;
        do
        {
          v51 = *((_QWORD *)v50 - 10);
          v52 = *(float *)v50;
          if (v51 >= 0)
            v53 = *(float *)v50;
          else
            LODWORD(v53) = *((_QWORD *)v50 - 10);
          v54 = v53;
          if (v26 >= 0)
            v55 = v49;
          else
            v55 = *(float *)&v26;
          if (v54 < v55)
          {
            v201 = *((_QWORD *)v50 - 1);
            v197 = *((_QWORD *)v50 - 2);
            v193 = *((_QWORD *)v50 - 3);
            v56 = *((_QWORD *)v50 - 6);
            v187 = *((_QWORD *)v50 - 5);
            v189 = *((_QWORD *)v50 - 4);
            v58 = *((_QWORD *)v50 - 8);
            v57 = *((_QWORD *)v50 - 7);
            v30 = *((_QWORD *)v50 - 9);
            v205 = v26;
            v59 = (void *)*((_QWORD *)v50 - 11);
            sub_2273769F0(v59, v51);
            sub_227376A18((void *)v229, v205);
            v229 = (uint64_t)v59;
            v26 = v51;
            v210 = v57;
            v212 = v58;
            v208 = v56;
            v27 = v187;
            v28 = v189;
            v220 = v193;
            v224 = v197;
            v216 = v201;
            v49 = v52;
          }
          v50 += 24;
          --v29;
        }
        while (v29);
        v173 = v49;
        swift_release();
      }
      v207 = v27;
      if ((v26 & 0x8000000000000000) == 0)
      {
        v60 = qword_2558D4A60;
        v61 = (id)v229;
        swift_bridgeObjectRetain();
        if (v60 != -1)
          swift_once();
        v62 = sub_22758CF9C();
        __swift_project_value_buffer(v62, (uint64_t)qword_2558D6248);
        v63 = sub_22758CF84();
        v64 = sub_22758E6B8();
        if (os_log_type_enabled(v63, v64))
        {
          v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v65 = 0;
          _os_log_impl(&dword_2272F4000, v63, v64, "Create single object contact event", v65, 2u);
          MEMORY[0x2276B3D50](v65, -1, -1);
        }

        if (qword_2540B87B8 != -1)
          swift_once();
        v190 = v61;
        v66 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
        swift_beginAccess();
        v67 = *(_QWORD *)(v66 + 8);
        v68 = *(_BYTE *)(v66 + 16);
        *(_QWORD *)(v180 + 312) = *(_QWORD *)v66;
        *(_QWORD *)(v180 + 320) = v67;
        *(_BYTE *)(v180 + 328) = v68;
        v69 = qword_2540B9100;
        swift_bridgeObjectRetain();
        if (v69 != -1)
          swift_once();
        *(_QWORD *)(swift_task_alloc() + 16) = v180 + 312;
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        if (*(_BYTE *)(v180 + 329))
        {
          v204 = (void *)sub_227375188(v182);
          swift_release();
          v177 = 0;
          v178 = 0;
          v186 = 0;
          v200 = 0;
          v175 = 0;
          v176 = 0;
          v184 = 0;
          v198 = 0;
          v70 = v30;
          v194 = 0;
          v181 = 2;
          v72 = v210;
          v71 = v212;
          v74 = v207;
          v73 = v208;
          v75 = v28;
          v76 = v220;
          v77 = v224;
          v78 = v216;
          v79 = v190;
        }
        else
        {
          swift_release();
          v89 = v61;
          v70 = v30;
          v78 = v216;
          swift_bridgeObjectRetain();
          v181 = 0;
          v204 = (void *)v229;
          v79 = v61;
          v72 = v210;
          v71 = v212;
          v186 = v212;
          v200 = v210;
          v74 = v207;
          v73 = v208;
          v177 = v208;
          v178 = v70;
          v75 = v28;
          v175 = v28;
          v176 = v207;
          v76 = v220;
          v184 = v220;
          v77 = v224;
          v198 = v224;
          v194 = v216;
        }
        v168 = v79;
        *(float *)&v159 = v173;
        v157 = v77;
        v158 = v78;
        v155 = v76;
        sub_227376A18((void *)v229, v26);
        v188 = 0;
        v90 = v71;
        v91 = v70;
        v92 = v72;
        v93 = v73;
        v174 = v74;
        v94 = v75;
        v95 = v76;
        v96 = v77;
        v97 = v90;
LABEL_70:
        v119 = *(_QWORD *)(v180 + 360);
        v120.i64[0] = v95;
        v120.i64[1] = v96;
        v166 = v120;
        v120.i64[0] = v174;
        v120.i64[1] = v94;
        v165 = v120;
        v172 = v92;
        v120.i64[0] = v92;
        v120.i64[1] = v93;
        v164 = v120;
        v120.i64[0] = v91;
        v120.i64[1] = v97;
        v163 = v120;
        v121 = v168;
        objc_msgSend(v121, sel_transform, v155, v157, v158, v159);
        v169 = v122;

        v123 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v163, v169.f32[0]), v164, *(float32x2_t *)v169.f32, 1), v165, v169, 2), v166, v169, 3);
        *(float32x2_t *)v123.i8 = vsub_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v185.f32, v179), (float32x2_t)vzip1_s32(*(int32x2_t *)v123.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL)));
        v124 = v96;
        v125 = v119 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject;
        v126 = *(void **)(v119 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
        v127 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 8);
        v128 = sqrtf(vaddv_f32(vmul_f32(*(float32x2_t *)v123.i8, *(float32x2_t *)v123.i8)));
        v130 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 16);
        v129 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 24);
        v132 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 32);
        v131 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 40);
        v134 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 48);
        v133 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 56);
        v136 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 64);
        v135 = *(void **)(v119
                        + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject
                        + 72);
        v161 = v124;
        v162 = v94;
        v160 = v119;
        v170 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance;
        if (v126)
        {
          v137 = *(float *)(v119
                          + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance);
          v231[0] = *(void **)(v119
                             + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetObject);
          v231[1] = v127;
          v231[2] = v130;
          v231[3] = v129;
          v231[4] = v132;
          v231[5] = v131;
          v231[6] = v134;
          v231[7] = v133;
          v231[8] = v136;
          v231[9] = v135;
          v232[0] = v121;
          v233 = v91;
          v234 = v97;
          v235 = v172;
          v236 = v93;
          v237 = v174;
          v238 = v94;
          v239 = v95;
          v240 = v124;
          v167 = v126;
          v138 = _s16MagnifierSupport14DetectedObjectV2eeoiySbAC_ACtFZ_0(v231, v232);
          v139 = v91;
          v140 = v26;
          v141 = v231[0];

          v26 = v140;
          v91 = v139;
          if ((v138 & 1) != 0 && vabds_f32(v137, v128) <= 0.3048)
          {

            sub_22737685C(v204, v188, v178, v186, v200, v177, v176, v175, v184, v198, v194, v181);
            sub_227376A18((void *)v229, v26);
            v204 = 0;
            v42 = 0;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            v46 = 0;
            v47 = 0;
            v48 = 0;
            v183 = 0;
            v196 = 0;
            v192 = 0;
            v41 = -1;
            v0 = v180;
            v5 = (_QWORD *)&unk_2558D7000;
            goto LABEL_77;
          }
        }
        else
        {
          *(_QWORD *)(v180 + 16) = 0;
          *(_QWORD *)(v180 + 24) = v127;
          *(_QWORD *)(v180 + 32) = v130;
          *(_QWORD *)(v180 + 40) = v129;
          *(_QWORD *)(v180 + 48) = v132;
          *(_QWORD *)(v180 + 56) = v131;
          *(_QWORD *)(v180 + 64) = v134;
          *(_QWORD *)(v180 + 72) = v133;
          *(_QWORD *)(v180 + 80) = v136;
          *(_QWORD *)(v180 + 88) = v135;
          *(_QWORD *)(v180 + 96) = v121;
          *(_QWORD *)(v180 + 104) = 0;
          *(_QWORD *)(v180 + 112) = v91;
          *(_QWORD *)(v180 + 120) = v97;
          *(_QWORD *)(v180 + 128) = v172;
          *(_QWORD *)(v180 + 136) = v93;
          *(_QWORD *)(v180 + 144) = v174;
          *(_QWORD *)(v180 + 152) = v94;
          *(_QWORD *)(v180 + 160) = v95;
          *(_QWORD *)(v180 + 168) = v124;
          v142 = v121;
          sub_227376A40(v180 + 16);
        }
        *(float *)(v160 + v170) = v128;
        v143 = *(void **)v125;
        *(_QWORD *)v125 = v121;
        *(_QWORD *)(v125 + 8) = 0;
        *(_QWORD *)(v125 + 16) = v91;
        *(_QWORD *)(v125 + 24) = v97;
        *(_QWORD *)(v125 + 32) = v172;
        *(_QWORD *)(v125 + 40) = v93;
        *(_QWORD *)(v125 + 48) = v174;
        *(_QWORD *)(v125 + 56) = v162;
        *(_QWORD *)(v125 + 64) = v95;
        *(_QWORD *)(v125 + 72) = v161;

        sub_227376A18((void *)v229, v26);
        v41 = v181;
        v40 = v194;
        v39 = v198;
        v38 = v184;
        sub_2273768B8(v204, v188, v178, v186, v200, v177, v176, v175, v184, v198, v194, v181);
        v0 = v180;
LABEL_76:
        v144 = *(_QWORD *)(v0 + 368);
        v145 = *(void **)(v0 + 360);
        v146 = sub_22758E4C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v144, 1, 1, v146);
        v225 = v145;
        v192 = v40;
        v196 = v39;
        v183 = v38;
        sub_2273768B8(v204, v188, v178, v186, v200, v177, v176, v175, v38, v39, v40, v41);
        v147 = sub_22758E490();
        v148 = swift_allocObject();
        v149 = MEMORY[0x24BEE6930];
        *(_QWORD *)(v148 + 16) = v147;
        *(_QWORD *)(v148 + 24) = v149;
        *(_QWORD *)(v148 + 32) = v225;
        *(_QWORD *)(v148 + 48) = v204;
        *(_QWORD *)(v148 + 56) = v188;
        *(_QWORD *)(v148 + 64) = v178;
        *(_QWORD *)(v148 + 72) = v186;
        *(_QWORD *)(v148 + 80) = v200;
        *(_QWORD *)(v148 + 88) = v177;
        *(_QWORD *)(v148 + 96) = v176;
        *(_QWORD *)(v148 + 104) = v175;
        *(_QWORD *)(v148 + 112) = v38;
        *(_QWORD *)(v148 + 120) = v39;
        *(_QWORD *)(v148 + 128) = v40;
        *(_BYTE *)(v148 + 136) = v41;
        sub_2274193DC(v144, (uint64_t)&unk_2558D7598, v148);
        v156 = v38;
        v44 = v186;
        v42 = v188;
        v43 = v178;
        v45 = v200;
        sub_22737685C(v204, v188, v178, v186, v200, v177, v176, v175, v156, v39, v40, v41);
        swift_release();
        v5 = &unk_2558D7000;
        v46 = v177;
        v47 = v176;
        v48 = v175;
        goto LABEL_77;
      }
      if (qword_2558D4A60 != -1)
        swift_once();
      v80 = sub_22758CF9C();
      __swift_project_value_buffer(v80, (uint64_t)qword_2558D6248);
      v81 = sub_22758CF84();
      v82 = sub_22758E6B8();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v83 = 0;
        _os_log_impl(&dword_2272F4000, v81, v82, "Create multi-object contact event", v83, 2u);
        MEMORY[0x2276B3D50](v83, -1, -1);
      }

      if (qword_2540B87B8 != -1)
        swift_once();
      v84 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
      swift_beginAccess();
      v85 = *(_QWORD *)(v84 + 8);
      v86 = *(_BYTE *)(v84 + 16);
      *(_QWORD *)(v180 + 336) = *(_QWORD *)v84;
      *(_QWORD *)(v180 + 344) = v85;
      *(_BYTE *)(v180 + 352) = v86;
      v87 = qword_2540B9100;
      swift_bridgeObjectRetain();
      if (v87 != -1)
        swift_once();
      *(_QWORD *)(swift_task_alloc() + 16) = v180 + 336;
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v0 = v229;
      if (*(_BYTE *)(v180 + 330))
      {
        v204 = (void *)sub_227375188(v182);
        swift_release();
        v88 = 0;
        v181 = 2;
LABEL_68:
        v188 = v88;
        sub_2273680E8(v229, (uint64_t)v232);
        v115 = v232[0];
        if (!v232[0])
        {
          __break(1u);
          return;
        }
        v203 = v242;
        v97 = v234;
        v171 = v233;
        v116 = v235;
        v93 = v236;
        v117 = v237;
        v94 = v238;
        v95 = v239;
        v96 = v240;
        v118 = v241;
        v168 = v232[0];
        LODWORD(v159) = v203;
        v157 = v96;
        v158 = v118;
        v155 = v95;
        v91 = v171;
        v174 = v117;
        sub_227376A70(v115);
        v92 = v116;
        v177 = 0;
        v178 = 0;
        v186 = 0;
        v200 = 0;
        v175 = 0;
        v176 = 0;
        v184 = 0;
        v198 = 0;
        v194 = 0;
        goto LABEL_70;
      }
      swift_release();
      v98 = *(_QWORD *)(v229 + 16);
      v99 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (!v98)
      {
LABEL_67:
        v204 = (void *)sub_227374C50((uint64_t)v99);
        swift_bridgeObjectRelease();
        v114 = sub_22736AF4C(v229);
        v88 = sub_227374FB8(v114);
        swift_bridgeObjectRelease();
        v181 = 1;
        goto LABEL_68;
      }
      v206 = v26;
      v232[0] = (id)MEMORY[0x24BEE4AF8];
      sub_2273248D0(0, v98, 0);
      v99 = v232[0];
      v100 = sub_2273AB310(v229);
      v102 = v101;
      v104 = v103 & 1;
      while ((v100 & 0x8000000000000000) == 0 && v100 < 1 << *(_BYTE *)(v229 + 32))
      {
        if (((*(_QWORD *)(v229 + 56 + (((unint64_t)v100 >> 3) & 0xFFFFFFFFFFFFF8)) >> v100) & 1) == 0)
          goto LABEL_82;
        if (*(_DWORD *)(v229 + 36) != (_DWORD)v102)
          goto LABEL_83;
        v105 = *(_QWORD *)(v229 + 48) + 96 * v100;
        v106 = *(void **)v105;
        v199 = *(_OWORD *)(v105 + 32);
        v202 = *(_OWORD *)(v105 + 16);
        v191 = *(_OWORD *)(v105 + 64);
        v195 = *(_OWORD *)(v105 + 48);
        v232[0] = v99;
        v108 = v99[2];
        v107 = v99[3];
        v109 = v106;
        if (v108 >= v107 >> 1)
        {
          sub_2273248D0(v107 > 1, v108 + 1, 1);
          v99 = v232[0];
        }
        v99[2] = v108 + 1;
        v110 = &v99[10 * v108];
        v110[4] = v109;
        *((_OWORD *)v110 + 3) = v202;
        *((_OWORD *)v110 + 4) = v199;
        *((_OWORD *)v110 + 5) = v195;
        *((_OWORD *)v110 + 6) = v191;
        v111 = sub_2273AB3B4(v100, v102, v104 & 1, v229);
        v100 = v111;
        v102 = v112;
        v104 = v113 & 1;
        if (!--v98)
        {
          sub_22737675C(v111, v112, v113 & 1);
          v26 = v206;
          goto LABEL_67;
        }
      }
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    swift_release();
    v0 = v180;
    v5 = &unk_2558D7000;
  }
  v31 = *(_QWORD *)(v0 + 360);
  v32 = v31 + v5[95];
  if (*(_QWORD *)v32)
  {
    *(_DWORD *)(v31 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTargetDistance) = 0;
    v33 = *(void **)v32;
    *(_OWORD *)(v32 + 32) = 0u;
    *(_OWORD *)(v32 + 48) = 0u;
    *(_OWORD *)(v32 + 64) = 0u;
    *(_OWORD *)v32 = 0u;
    *(_OWORD *)(v32 + 16) = 0u;

    if (qword_2558D4A60 == -1)
    {
LABEL_19:
      v34 = sub_22758CF9C();
      __swift_project_value_buffer(v34, (uint64_t)qword_2558D6248);
      v35 = sub_22758CF84();
      v36 = sub_22758E6B8();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_2272F4000, v35, v36, "Create empty contact event", v37, 2u);
        MEMORY[0x2276B3D50](v37, -1, -1);
      }

      v204 = 0;
      v186 = 0;
      v188 = 0;
      v177 = 0;
      v178 = 0;
      v200 = 0;
      v175 = 0;
      v176 = 0;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      v41 = 3;
      goto LABEL_76;
    }
LABEL_84:
    swift_once();
    goto LABEL_19;
  }
  v204 = 0;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v48 = 0;
  v183 = 0;
  v196 = 0;
  v192 = 0;
  v41 = -1;
LABEL_77:
  v150 = *(_QWORD *)(v0 + 360);
  v151 = v150 + v5[95];
  if (*(_QWORD *)v151)
  {
    v230 = *(float32x4_t *)(v151 + 16);
    v226 = *(float32x4_t *)(v151 + 32);
    v221 = *(float32x4_t *)(v151 + 48);
    v217 = *(float32x4_t *)(v151 + 64);
    v152 = *(id *)v151;
    objc_msgSend(v152, sel_transform);
    v154 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v230, v153.f32[0]), v226, *(float32x2_t *)v153.f32, 1), v221, v153, 2), v217, v153, 3);
    *(float32x2_t *)v154.i8 = vsub_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v185.f32, v179), (float32x2_t)vzip1_s32(*(int32x2_t *)v154.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v154, v154, 8uLL)));
    sub_2274C665C(sqrtf(vaddv_f32(vmul_f32(*(float32x2_t *)v154.i8, *(float32x2_t *)v154.i8))));
  }
  else
  {
    v152 = objc_retain(*(id *)(*(_QWORD *)(v150
                                         + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_pulseFeedbackProcessor)
                             + OBJC_IVAR____TtC16MagnifierSupport25MAGPulseFeedbackProcessor_objectUnderstandingToneGenerator));
    objc_msgSend(v152, sel_stopPulse);
  }
  sub_227376834(v204, v42, v43, v44, v45, v46, v47, v48, v183, v196, v192, v41);

  swift_task_dealloc();
  (*(void (**)(void))(v0 + 8))();
}

void sub_22736ADA8(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  type metadata accessor for OU3DObjectType(0);
  sub_2273096F0(&qword_2558D5380, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_227596028);
  v2 = 0;
  v13[1] = (id)sub_22758E5C8();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_22745AC20(v13, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_22736AF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_2273A3398(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_22736B0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[14] = a4;
  v5[15] = a5;
  sub_22758E49C();
  v5[16] = sub_22758E490();
  v5[17] = sub_22758E460();
  v5[18] = v6;
  return swift_task_switch();
}

uint64_t sub_22736B134()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;

  if (qword_2558D4A60 != -1)
    swift_once();
  v1 = sub_22758CF9C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2558D6248);
  v2 = sub_22758CF84();
  v3 = sub_22758E6B8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2272F4000, v2, v3, "Dispatch contact event", v4, 2u);
    MEMORY[0x2276B3D50](v4, -1, -1);
  }
  v5 = *(_OWORD **)(v0 + 120);

  v6 = v5[1];
  *(_OWORD *)(v0 + 16) = *v5;
  *(_OWORD *)(v0 + 32) = v6;
  v8 = v5[3];
  v7 = v5[4];
  v9 = v5[2];
  *(_OWORD *)(v0 + 89) = *(_OWORD *)((char *)v5 + 73);
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v7;
  *(_OWORD *)(v0 + 48) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v10;
  *v10 = v0;
  v10[1] = sub_22736B268;
  return MAGOUEventHandler.send(_:)(v0 + 16);
}

uint64_t sub_22736B268()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22736B2CC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22736B300()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22736B334(unint64_t a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v3 = (id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService)
            + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
  swift_beginAccess();
  if (*v3)
  {
    v4 = objc_msgSend(*v3, sel_currentFrame);
    if (v4)
    {
      v5 = v4;
      v6 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_ouSession);
      if (v6)
      {
        v7 = v6;
        swift_bridgeObjectRetain();
        if (a1 >> 62)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D6800);
          sub_22758ECD0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_22758EE68();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D6800);
        v8 = (void *)sub_22758E3C4();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_updateWithKeyframes_ouframe_, v8, v5);

      }
    }
  }
}

id sub_22736B474(uint64_t a1, unint64_t a2)
{
  return sub_2273753B4(a2);
}

uint64_t sub_22736B4F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void *v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void **v89;
  void *v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  id v97;
  uint64_t v98;
  int64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  void (*v109)(char *, uint64_t);
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  char v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t result;
  _QWORD v164[2];
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  int64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  void (*v185)(char *, uint64_t, uint64_t, uint64_t);
  char *v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, char *, uint64_t);
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD aBlock[6];

  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7528);
  MEMORY[0x24BDAC7A8](v177, v3, v4, v5, v6);
  v181 = (char *)v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v176 = (char *)v164 - v13;
  MEMORY[0x24BDAC7A8](v14, v15, v16, v17, v18);
  v180 = (uint64_t)v164 - v19;
  MEMORY[0x24BDAC7A8](v20, v21, v22, v23, v24);
  v175 = (char *)v164 - v25;
  MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
  v174 = (uint64_t)v164 - v31;
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7530);
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173, v32, v33, v34, v35);
  v183 = (uint64_t)v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_22758C984();
  v193 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v38, v39, v40, v41);
  v191 = (char *)v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43, v44, v45, v46, v47);
  v49 = (char *)v164 - v48;
  MEMORY[0x24BDAC7A8](v50, v51, v52, v53, v54);
  v192 = (char *)v164 - v55;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v56, v57, v58, v59, v60);
  v184 = (char *)v164 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62, v63, v64, v65, v66);
  v186 = (char *)v164 - v67;
  v68 = sub_22758DF20();
  v190 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v69, v70, v71, v72);
  v74 = (char *)v164 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_22758DF68();
  v188 = *(_QWORD *)(v75 - 8);
  v189 = (void (*)(uint64_t, char *, uint64_t))v75;
  MEMORY[0x24BDAC7A8](v75, v76, v77, v78, v79);
  v81 = (char *)v164 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v187 = sub_22758E79C();
  v168 = v1;
  v82 = *(void **)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsRootNode);
  v83 = swift_allocObject();
  *(_QWORD *)(v83 + 16) = a1;
  *(_QWORD *)(v83 + 24) = v82;
  aBlock[4] = sub_227376698;
  aBlock[5] = v83;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227367AE4;
  aBlock[3] = &block_descriptor_35_0;
  v84 = _Block_copy(aBlock);
  v85 = v82;
  swift_bridgeObjectRetain();
  swift_release();
  sub_22758DF44();
  v86 = MEMORY[0x24BEE4AF8];
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2273096F0((unint64_t *)&qword_2540B9C50, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
  sub_22730DEA0();
  sub_22758EACC();
  v87 = (void *)v187;
  MEMORY[0x2276B27CC](0, v81, v74, v84);
  _Block_release(v84);

  (*(void (**)(char *, uint64_t))(v190 + 8))(v74, v68);
  (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v188 + 8))(v81, v189);
  v88 = *(_QWORD *)(a1 + 16);
  v165 = a1;
  if (v88)
  {
    aBlock[0] = v86;
    sub_22758EC28();
    v89 = (void **)(a1 + 32);
    do
    {
      v90 = *v89;
      v89 += 10;
      v91 = v90;
      sub_22758EC04();
      sub_22758EC34();
      sub_22758EC40();
      sub_22758EC10();
      --v88;
    }
    while (v88);
    v86 = aBlock[0];
  }
  v92 = v193;
  v93 = v184;
  v94 = (char *)objc_opt_self();
  v95 = sub_22730BA80(0, &qword_2558D7538);
  v170 = v86;
  v166 = v95;
  v96 = (void *)sub_22758E3C4();
  v169 = v94;
  v97 = objc_msgSend(v94, sel_storageGroupsForObjects_, v96);

  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7540);
  v98 = sub_22758E3DC();

  v99 = *(_QWORD *)(v98 + 16);
  v100 = v192;
  if (v99)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_227324970(0, v99, 0);
    v164[1] = v98;
    v178 = v98 + 32;
    v189 = (void (*)(uint64_t, char *, uint64_t))sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v101 = 0;
    v102 = v186;
    v171 = v99;
    do
    {
      v103 = *(_QWORD *)(v178 + 8 * (_QWORD)v101);
      swift_bridgeObjectRetain();
      v104 = sub_22758E5C8();
      v188 = *(_QWORD *)(v103 + 16);
      v182 = v103;
      if (v188)
      {
        v179 = v101;
        v105 = 0;
        v187 = v103 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
        v106 = *(_QWORD *)(v92 + 72);
        v107 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
        v107(v102, v187, v37);
        while (1)
        {
          v110 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56);
          v110(v102, 0, 1, v37);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v102, 1, v37) == 1)
          {
            v99 = v171;
            v101 = v179;
            goto LABEL_22;
          }
          v185 = v110;
          v190 = v105;
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v100, v102, v37);
          swift_bridgeObjectRetain();
          v111 = sub_22758E130();
          v112 = -1 << *(_BYTE *)(v104 + 32);
          v113 = v111 & ~v112;
          if (((*(_QWORD *)(v104 + 56 + ((v113 >> 3) & 0xFFFFFFFFFFFFF8)) >> v113) & 1) != 0)
          {
            v114 = ~v112;
            while (1)
            {
              v107(v49, *(_QWORD *)(v104 + 48) + v113 * v106, v37);
              sub_2273096F0((unint64_t *)&unk_2558D7550, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v115 = sub_22758E190();
              v109 = *(void (**)(char *, uint64_t))(v193 + 8);
              v109(v49, v37);
              if ((v115 & 1) != 0)
                break;
              v113 = (v113 + 1) & v114;
              if (((*(_QWORD *)(v104 + 56 + ((v113 >> 3) & 0xFFFFFFFFFFFFF8)) >> v113) & 1) == 0)
                goto LABEL_9;
            }
            swift_bridgeObjectRelease();
            v100 = v192;
            v92 = v193;
          }
          else
          {
LABEL_9:
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v100 = v192;
            v107(v49, (uint64_t)v192, v37);
            v194 = v104;
            sub_227460F18((uint64_t)v49, v113, isUniquelyReferenced_nonNull_native);
            v104 = v194;
            swift_bridgeObjectRelease();
            v92 = v193;
            v109 = *(void (**)(char *, uint64_t))(v193 + 8);
          }
          v105 = v190 + 1;
          v109(v100, v37);
          v102 = v186;
          if (v105 == v188)
            break;
          v107(v186, v187 + v106 * v105, v37);
        }
        v99 = v171;
        v101 = v179;
        v185(v186, 1, 1, v37);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v102, 1, 1, v37);
      }
LABEL_22:
      swift_bridgeObjectRelease();
      v116 = aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324970(0, *(_QWORD *)(v116 + 16) + 1, 1);
        v102 = v186;
        v116 = aBlock[0];
      }
      v118 = *(_QWORD *)(v116 + 16);
      v117 = *(_QWORD *)(v116 + 24);
      v119 = v118 + 1;
      if (v118 >= v117 >> 1)
      {
        sub_227324970(v117 > 1, v118 + 1, 1);
        v119 = v118 + 1;
        v102 = v186;
        v116 = aBlock[0];
      }
      ++v101;
      *(_QWORD *)(v116 + 16) = v119;
      *(_QWORD *)(v116 + 8 * v118 + 32) = v104;
    }
    while (v101 != (char *)v99);
    swift_bridgeObjectRelease();
    v93 = v184;
  }
  else
  {
    swift_bridgeObjectRelease();
    v116 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v168 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups) = v116;
  swift_bridgeObjectRelease();
  v120 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  v121 = objc_msgSend(v169, sel_tableChairGroupsForObjects_, v120);

  v190 = sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v122 = sub_22758E118();

  v123 = *(char **)(v122 + 16);
  if (v123)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v169 = v123;
    sub_227324944(0, (int64_t)v123, 0);
    v124 = sub_227373D80(v122);
    v126 = v125;
    v179 = 0;
    v128 = v127 & 1;
    v170 = v122 + 64;
    v171 = v122;
    while (1)
    {
      v129 = v177;
      v130 = *(int *)(v177 + 48);
      v131 = v174;
      v185 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v124;
      v182 = v126;
      v132 = sub_227373E08(v174, v124, v126, v128 & 1, v122);
      *(_QWORD *)(v131 + v130) = v132;
      v133 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
      v134 = (uint64_t)v175;
      v133(v175, v131, v37);
      *(_QWORD *)(v134 + *(int *)(v129 + 48)) = v132;
      v135 = v180;
      sub_22731A160(v134, v180, &qword_2558D7528);
      swift_bridgeObjectRetain();
      sub_22731A1A4(v131, &qword_2558D7528);
      v136 = *(int *)(v129 + 48);
      v137 = v176;
      v133(v176, v135, v37);
      v138 = *(_QWORD *)(v135 + v136);
      *(_QWORD *)&v137[v136] = v138;
      v189 = *(void (**)(uint64_t, char *, uint64_t))(v92 + 32);
      v189(v183, v137, v37);
      v139 = *(int *)(v129 + 48);
      v140 = v181;
      v133(v181, v135, v37);
      *(_QWORD *)&v140[v139] = v138;
      swift_bridgeObjectRetain();
      v141 = sub_22758E5C8();
      v188 = *(_QWORD *)(v138 + 16);
      if (v188)
      {
        v142 = 0;
        v143 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
        v178 = v138;
        v187 = v138 + v143;
        v144 = *(_QWORD *)(v92 + 72);
        v145 = v191;
        do
        {
          v133(v93, v187 + v144 * (_QWORD)v142, v37);
          v186 = *(char **)(v92 + 56);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v186)(v93, 0, 1, v37);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v93, 1, v37) == 1)
          {
            v122 = v171;
            v153 = (uint64_t)v185;
            goto LABEL_45;
          }
          v192 = v142;
          v189((uint64_t)v145, v93, v37);
          swift_bridgeObjectRetain();
          v148 = sub_22758E130();
          v149 = -1 << *(_BYTE *)(v141 + 32);
          v150 = v148 & ~v149;
          if (((*(_QWORD *)(v141 + 56 + ((v150 >> 3) & 0xFFFFFFFFFFFFF8)) >> v150) & 1) != 0)
          {
            v151 = ~v149;
            while (1)
            {
              v133(v49, *(_QWORD *)(v141 + 48) + v150 * v144, v37);
              sub_2273096F0((unint64_t *)&unk_2558D7550, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v152 = sub_22758E190();
              v147 = *(void (**)(char *, uint64_t))(v193 + 8);
              v147(v49, v37);
              if ((v152 & 1) != 0)
                break;
              v150 = (v150 + 1) & v151;
              if (((*(_QWORD *)(v141 + 56 + ((v150 >> 3) & 0xFFFFFFFFFFFFF8)) >> v150) & 1) == 0)
                goto LABEL_33;
            }
            swift_bridgeObjectRelease();
            v92 = v193;
            v145 = v191;
          }
          else
          {
LABEL_33:
            swift_bridgeObjectRelease();
            v146 = swift_isUniquelyReferenced_nonNull_native();
            v145 = v191;
            v133(v49, (uint64_t)v191, v37);
            v194 = v141;
            sub_227460F18((uint64_t)v49, v150, v146);
            v141 = v194;
            swift_bridgeObjectRelease();
            v92 = v193;
            v147 = *(void (**)(char *, uint64_t))(v193 + 8);
          }
          v142 = v192 + 1;
          v147(v145, v37);
          v93 = v184;
        }
        while (v142 != (char *)v188);
        v122 = v171;
        v153 = (uint64_t)v185;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v186)(v184, 1, 1, v37);
      }
      else
      {
        v122 = v171;
        v153 = (uint64_t)v185;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, 1, 1, v37);
      }
LABEL_45:
      swift_bridgeObjectRelease();
      v154 = *(int *)(v173 + 48);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v181, v37);
      *(_QWORD *)(v183 + v154) = v141;
      sub_22731A1A4(v180, &qword_2558D7528);
      v155 = aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227324944(0, *(_QWORD *)(v155 + 16) + 1, 1);
        v155 = aBlock[0];
      }
      v157 = *(_QWORD *)(v155 + 16);
      v156 = *(_QWORD *)(v155 + 24);
      if (v157 >= v156 >> 1)
      {
        sub_227324944(v156 > 1, v157 + 1, 1);
        v155 = aBlock[0];
      }
      *(_QWORD *)(v155 + 16) = v157 + 1;
      sub_22731A160(v183, v155+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(_QWORD *)(v172 + 72) * v157, &qword_2558D7530);
      if (v153 < 0 || v153 >= -(-1 << *(_BYTE *)(v122 + 32)))
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      if (((*(_QWORD *)(v170 + (((unint64_t)v153 >> 3) & 0xFFFFFFFFFFFFF8)) >> v153) & 1) == 0)
        goto LABEL_61;
      if (*(_DWORD *)(v122 + 36) != (_DWORD)v182)
        goto LABEL_62;
      v158 = v179 + 1;
      v159 = sub_22758EAE4();
      if (v158 == v169)
        break;
      v124 = v159;
      v179 = v158;
      v128 = 0;
      v126 = *(unsigned int *)(v122 + 36);
      v92 = v193;
    }
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v155 + 16))
      goto LABEL_58;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_58:
      v160 = MEMORY[0x24BEE4B00];
      goto LABEL_59;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7548);
  v160 = sub_22758ED18();
LABEL_59:
  aBlock[0] = v160;
  v161 = swift_bridgeObjectRetain();
  sub_2273722D0(v161, 1, aBlock);
  swift_bridgeObjectRelease();
  v162 = v168;
  *(_QWORD *)(v168 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups) = aBlock[0];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v162 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache) = v165;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22736C434(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v41;
  char *v42;
  char v43;
  id v44;
  id v45;
  void *v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t result;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  id v75[2];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v4 = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9);
  v70 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758C984();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13, v14, v15, v16);
  v73 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v23 = MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22).n128_u64[0];
  v72 = (char *)&v62 - v24;
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    v26 = v12;
    swift_bridgeObjectRetain();
    v27 = (id *)(a1 + 48);
    v28 = v25;
    do
    {
      v30 = *((_OWORD *)v27 + 2);
      v29 = *((_OWORD *)v27 + 3);
      v32 = *(_OWORD *)v27;
      v31 = *((_OWORD *)v27 + 1);
      v75[0] = *(v27 - 2);
      v76 = v32;
      v77 = v31;
      v78 = v30;
      v79 = v29;
      v33 = v75[0];
      sub_22736C8B8((uint64_t)v75, (uint64_t)a2);

      v27 += 10;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    v12 = v26;
  }
  v34 = objc_msgSend(a2, sel_childNodes, v23);
  sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
  v35 = sub_22758E3DC();

  if (v35 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    v36 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    if (!v36)
      return swift_bridgeObjectRelease_n();
  }
  else
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v36)
      return swift_bridgeObjectRelease_n();
  }
  v37 = 0;
  v67 = v35 & 0xC000000000000001;
  v63 = v35 + 32;
  v71 = v11;
  v66 = v25;
  v65 = v35;
  v64 = v36;
  while (1)
  {
LABEL_10:
    if (v67)
      v39 = (id)MEMORY[0x2276B2BEC](v37, v35);
    else
      v39 = *(id *)(v63 + 8 * v37);
    v74 = v39;
    if (__OFADD__(v37++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25)
      break;
LABEL_9:
    v38 = v74;
    objc_msgSend(v74, sel_removeFromParentNode);

    if (v37 == v36)
      return swift_bridgeObjectRelease_n();
  }
  v68 = v37;
  v69 = v4;
  swift_bridgeObjectRetain();
  v41 = 32;
  v42 = v70;
  while (1)
  {
    v44 = *(id *)(a1 + v41);
    v45 = objc_msgSend(v44, sel_identifier);
    if (!v45)
    {
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v42, 1, 1, v11);
LABEL_31:
      __break(1u);
      return result;
    }
    v46 = v45;
    v47 = v73;
    sub_22758C96C();

    v48 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v48(v42, v47, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v42, 0, 1, v11);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v42, 1, v11);
    if ((_DWORD)result == 1)
      goto LABEL_31;
    v50 = v72;
    v48(v72, v42, v11);

    v51 = sub_22758C948();
    v53 = v52;
    v54 = v11;
    v55 = v12;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v50, v54);
    v56 = objc_msgSend(v74, sel_name);
    if (!v56)
    {

      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v57 = v56;
    v58 = a1;
    v59 = sub_22758E1E4();
    v61 = v60;

    if (v51 == v59 && v53 == v61)
      break;
    v43 = sub_22758EE50();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v58;
    v42 = v70;
    v12 = v55;
    if ((v43 & 1) != 0)
      goto LABEL_25;
LABEL_17:
    v41 += 80;
    --v25;
    v11 = v71;
    if (!v25)
    {
      swift_bridgeObjectRelease();
      v37 = v68;
      v4 = v69;
      v25 = v66;
      v35 = v65;
      v36 = v64;
      goto LABEL_9;
    }
  }

  swift_bridgeObjectRelease_n();
  a1 = v58;
  v12 = v55;
LABEL_25:

  swift_bridgeObjectRelease();
  v36 = v64;
  v37 = v68;
  v4 = v69;
  v11 = v71;
  v25 = v66;
  v35 = v65;
  if (v68 != v64)
    goto LABEL_10;
  return swift_bridgeObjectRelease_n();
}

void sub_22736C8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  float32x4_t v25;
  float32x4_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  float v41;
  float v42;
  float v43;
  id v44;
  __int128 v45;
  char v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  float v92;
  float v93;
  float v94;
  float32x4_t v95;
  float32x4_t v96;
  double v97;
  double v98;
  double v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float v104[8];
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  id v111[2];
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;

  v106.i64[0] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22758C984();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v105.i64[0] = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18, v19, v20, v21);
  v23 = (char *)&v95 - v22;
  v24 = *(void **)a1;
  v25 = *(float32x4_t *)(a1 + 32);
  v107 = *(float32x4_t *)(a1 + 16);
  v108 = v25;
  v26 = *(float32x4_t *)(a1 + 64);
  v109 = *(float32x4_t *)(a1 + 48);
  v110 = v26;
  v27 = v24;
  v28 = objc_msgSend(v27, sel_type);
  if (!v28)
  {
    __break(1u);
    goto LABEL_42;
  }
  v29 = v28;

  v30 = sub_22758E1E4();
  v32 = v31;
  if (v30 == sub_22758E1E4() && v32 == v33)
    goto LABEL_9;
  v35 = sub_22758EE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
LABEL_10:

LABEL_11:
    objc_msgSend(v27, sel_dimensions);
    *(_OWORD *)v104 = v40;
    objc_msgSend(v27, sel_dimensions);
    objc_msgSend(v27, sel_dimensions);
    sub_22758E658();
    v44 = objc_msgSend((id)objc_opt_self(), sel_boxWithWidth_height_length_chamferRadius_, v41, v42, v43, 0.0);
    v100 = *(float32x4_t *)MEMORY[0x24BDAEE00];
    v101 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
    v102 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
    v103 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
    objc_msgSend(v27, sel_dimensions);
    *(float *)&v45 = vmuls_lane_f32(0.05, *(float32x2_t *)&v45, 1);
    *(_OWORD *)v104 = v45;
    objc_msgSend(v27, sel_dimensions);
    v46 = 0;
    v48 = vmulq_f32(v100, (float32x4_t)0);
    v49 = vmlaq_f32(vmlaq_f32(vaddq_f32(v101, v48), (float32x4_t)0, v102), (float32x4_t)0, v103);
    v50 = vmlaq_f32(vaddq_f32(v102, vmlaq_f32(v48, (float32x4_t)0, v101)), (float32x4_t)0, v103);
    v51 = vaddq_f32(v103, vmlaq_n_f32(vmlaq_n_f32(v48, v101, v104[0]), v102, vmuls_lane_f32(0.05, v47, 2)));
    v52 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v100, (float32x4_t)0, v101), (float32x4_t)0, v102), (float32x4_t)0, v103);
    *(_QWORD *)v104 = v52.i64[1];
    v103.i64[0] = v52.i64[0];
    v102.i64[0] = v49.i64[1];
    v99 = *(double *)v49.i64;
    v101.i64[0] = v50.i64[1];
    v98 = *(double *)v50.i64;
    v100.i64[0] = v51.i64[1];
    v97 = *(double *)v51.i64;
    goto LABEL_12;
  }
  v36 = sub_22758E1E4();
  v38 = v37;
  if (v36 == sub_22758E1E4() && v38 == v39)
    goto LABEL_9;
  v76 = sub_22758EE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
    goto LABEL_10;
  v77 = sub_22758E1E4();
  v79 = v78;
  if (v77 == sub_22758E1E4() && v79 == v80)
    goto LABEL_9;
  v81 = sub_22758EE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v81 & 1) != 0)
    goto LABEL_10;
  v82 = sub_22758E1E4();
  v84 = v83;
  if (v82 == sub_22758E1E4() && v84 == v85)
  {
LABEL_9:
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v86 = sub_22758EE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v86 & 1) != 0)
    goto LABEL_10;
  v87 = sub_22758E1E4();
  v89 = v88;
  if (v87 == sub_22758E1E4() && v89 == v90)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v91 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v91 & 1) != 0)
    goto LABEL_11;
  objc_msgSend(v27, sel_dimensions);
  sub_22758E664();
  v44 = objc_msgSend((id)objc_opt_self(), sel_boxWithWidth_height_length_chamferRadius_, v92, v93, v94, 0.0);
  v103.i64[0] = 0;
  *(_QWORD *)v104 = 0;
  v99 = 0.0;
  v102.i64[0] = 0;
  v98 = 0.0;
  v101.i64[0] = 0;
  v97 = 0.0;
  v100.i64[0] = 0;
  v46 = 1;
LABEL_12:
  v53 = v27;
  v54 = objc_msgSend(v53, sel_identifier);
  if (!v54)
  {
LABEL_42:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_43;
  }
  v55 = v54;
  v56 = v105.i64[0];
  sub_22758C96C();

  v57 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v57(v9, v56, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v57(v23, (uint64_t)v9, v10);

    sub_22758C948();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
    v58 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v59 = objc_msgSend((id)v106.i64[0], sel_childNodeWithName_recursively_, v58, 0);

    if (v59)
    {
      objc_msgSend(v59, sel_setGeometry_, v44);
      objc_msgSend(v59, sel_setOpacity_, 0.0);
      v60 = objc_msgSend(v59, sel_physicsBody);
      if (v60)
      {
        v61 = v60;
        v62 = objc_msgSend((id)objc_opt_self(), sel_shapeWithGeometry_options_, v44, 0);
        objc_msgSend(v61, sel_setPhysicsShape_, v62);

      }
      v63 = v53;
      objc_msgSend(v63, sel_transform);
      v95 = v64;
      v96 = v65;
      v105 = v66;
      v106 = v67;

      objc_msgSend(v59, sel_setSimdTransform_, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v95.f32[0]), v108, *(float32x2_t *)v95.f32, 1), v109, v95, 2), v110, v95, 3).i64, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v96.f32[0]), v108, *(float32x2_t *)v96.f32, 1), v109, v96, 2), v110, v96,
                     3).i64,
        *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v105.f32[0]), v108, *(float32x2_t *)v105.f32, 1), v109, v105, 2), v110, v105, 3).i64, *(double *)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v106.f32[0]), v108, *(float32x2_t *)v106.f32, 1), v109, v106, 2), v110, v106, 3).i64);
      if ((v46 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
      v111[0] = v53;
      v112 = v107;
      v113 = v108;
      v114 = v109;
      v115 = v110;
      v68 = v53;
      v69 = SCNNode.init(_:)((uint64_t)v111);
      if (!v69)
        goto LABEL_20;
      v59 = (id)v69;
      v70 = objc_msgSend((id)objc_opt_self(), sel_shapeWithGeometry_options_, v44, 0);
      v71 = objc_msgSend((id)objc_opt_self(), sel_bodyWithType_shape_, 2, v70);

      objc_msgSend(v59, sel_setPhysicsBody_, v71);
      v72 = objc_msgSend(v59, sel_physicsBody);
      if (v72)
      {
        v73 = v72;
        objc_msgSend(v72, sel_setCategoryBitMask_, 2);

      }
      objc_msgSend(v59, sel_setCategoryBitMask_, 2);
      v111[0] = v68;
      v112 = v107;
      v113 = v108;
      v114 = v109;
      v115 = v110;
      if ((sub_227520300() & 1) != 0)
      {
        v74 = objc_msgSend(v59, sel_physicsBody);
        if (v74)
        {
          v75 = v74;
          objc_msgSend(v74, sel_setContactTestBitMask_, 4);

        }
      }
      objc_msgSend((id)v106.i64[0], sel_addChildNode_, v59);
      if ((v46 & 1) != 0)
      {
LABEL_19:

LABEL_20:
        return;
      }
    }
    objc_msgSend(v59, sel_setSimdPivot_, *(double *)v103.i64, v99, v98, v97);
    goto LABEL_19;
  }
LABEL_43:
  __break(1u);
}

void sub_22736D2C4(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v64 = a2;
  v62 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v5, v6, v7, v8, v9);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22758C984();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14, v15, v16, v17);
  v61 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v60 = (char *)v50 - v25;
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v58 = v24;
    v59 = v11;
    v51 = a3;
    swift_bridgeObjectRetain_n();
    v50[1] = v26;
    v28 = (uint64_t *)(v26 + 48);
    v29 = v59;
    while (1)
    {
      v63 = v27;
      v30 = (void *)*(v28 - 2);
      v31 = *v28;
      v32 = v28[1];
      v33 = v28[3];
      v55 = v28[2];
      v56 = v31;
      v34 = v28[4];
      v35 = v28[5];
      v57 = v28[7];
      v53 = v28[6];
      v54 = v34;
      v36 = v30;
      v37 = objc_msgSend(v36, sel_identifier);
      if (!v37)
        break;
      v38 = v37;
      v52 = v35;
      v39 = v61;
      sub_22758C96C();

      v40 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v41 = v58;
      v40(v29, v39, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v41);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v29, 1, v41) == 1)
        goto LABEL_19;
      v42 = v60;
      v40(v60, v29, v41);

      v43 = sub_22758C948();
      v45 = v44;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v42, v41);
      if (v64)
      {
        if (v43 == v62 && v45 == v64)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
LABEL_16:
          v47 = v51;
          *v51 = v36;
          v47[1] = 0;
          v47[2] = v56;
          v47[3] = v32;
          v47[4] = v55;
          v47[5] = v33;
          v48 = v52;
          v47[6] = v54;
          v47[7] = v48;
          v49 = v57;
          v47[8] = v53;
          v47[9] = v49;
          return;
        }
        v46 = sub_22758EE50();
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v28 += 10;
      v27 = v63 - 1;
      if (v63 == 1)
      {
        swift_bridgeObjectRelease_n();
        a3 = v51;
        goto LABEL_13;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v59, 1, 1, v58);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_13:
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
}

void sub_22736D5BC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v1[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene];
  if (v10)
  {
    v11 = sub_22758E4C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_22758E49C();
    v12 = v10;
    v13 = v1;
    swift_bridgeObjectRetain();
    v14 = sub_22758E490();
    v15 = (_QWORD *)swift_allocObject();
    v16 = MEMORY[0x24BEE6930];
    v15[2] = v14;
    v15[3] = v16;
    v15[4] = v13;
    v15[5] = a1;
    v15[6] = v12;
    sub_227367B10((uint64_t)v9, (uint64_t)&unk_2558D7388, (uint64_t)v15);

    swift_release();
  }
}

uint64_t sub_22736D6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  v7 = type metadata accessor for SpatialPersonDetection();
  v6[30] = v7;
  v6[31] = *(_QWORD *)(v7 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v8 = sub_22758C930();
  v6[35] = v8;
  v6[36] = *(_QWORD *)(v8 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  sub_22758E49C();
  v6[39] = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_22736D7C4()
{
  _QWORD *v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  float32x4_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  id v78;
  void *v79;
  id v80;
  float32x2_t v81;
  float32x2_t v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  float v88;
  float v89;
  float v90;
  float v91;
  float v92;
  uint64_t v93;
  simd_quatf v94;
  float32x4_t v95;
  float v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  _BOOL4 v105;
  uint64_t v106;
  uint64_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint8_t *v113;
  uint64_t v114;
  _QWORD *v115;
  BOOL v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void *v127;
  id v128;
  int64_t v129;
  uint64_t v130;
  int64_t v131;
  void *v132;
  id v133;
  void *v134;
  id v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  char **v139;
  id v140;
  void *v141;
  id v142;
  void *v143;
  void *v144;
  id v145;
  uint64_t inited;
  id v147;
  void *v148;
  id v149;
  unint64_t v150;
  uint64_t i;
  id v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t);
  id v157;
  uint64_t v158;
  uint64_t v159;
  int64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  float32x2_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  simd_quatf v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;

  v1 = v0[27];
  v2 = v0 + 11;
  v3 = v0[38];
  v4 = v0[36];
  v5 = v0[37];
  v6 = v0[35];
  v179 = v0 + 27;
  v7 = v0[28];
  swift_release();
  sub_22758C90C();
  sub_22758C8C4();
  v156 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v156(v5, v6);
  swift_beginAccess();
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v3;
  v9 = swift_bridgeObjectRetain();
  sub_227373F80(v9, (void (*)(char *, uint64_t))sub_2273767A4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v10 = *(_QWORD *)(v7 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  v160 = v10;
  v178 = v0;
  if (v10)
  {
    v174 = v0 + 11;
    v12 = v0[31];
    v13 = v0[28];
    v181 = MEMORY[0x24BEE4AF8];
    sub_22732471C(0, v10, 0);
    v14 = v13 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v15 = *(_QWORD *)(v12 + 72);
    v11 = v181;
    v16 = v10;
    do
    {
      v17 = v178[34];
      sub_22730DEEC(v14, v17, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
      v18 = sub_22758C948();
      v20 = v19;
      sub_22730DFB0(v17, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22732471C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v181;
      }
      v22 = *(_QWORD *)(v11 + 16);
      v21 = *(_QWORD *)(v11 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_22732471C(v21 > 1, v22 + 1, 1);
        v11 = v181;
      }
      *(_QWORD *)(v11 + 16) = v22 + 1;
      v23 = v11 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v20;
      v14 += v15;
      --v16;
    }
    while (v16);
    v2 = v174;
  }
  v24 = (void *)v178[29];
  v175 = sub_22737523C(v11);
  swift_bridgeObjectRelease();
  v25 = (unint64_t)objc_msgSend(v24, sel_rootNode);
  v178[15] = sub_22736EA88;
  v178[16] = 0;
  v178[11] = MEMORY[0x24BDAC760];
  v178[12] = 1107296256;
  v178[13] = sub_22736EAD8;
  v178[14] = &block_descriptor_39_0;
  v26 = _Block_copy(v2);
  swift_release();
  v27 = objc_msgSend((id)v25, sel_childNodesPassingTest_, v26);

  _Block_release(v26);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    result = sub_22758ECE8();
    v28 = result;
    if (result)
      goto LABEL_12;
LABEL_27:
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_28;
  }
  sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
  v25 = sub_22758E3DC();

  if (v25 >> 62)
    goto LABEL_26;
  v28 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v28)
    goto LABEL_27;
LABEL_12:
  if (v28 < 1)
  {
    __break(1u);
    return result;
  }
  v30 = 0;
  v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if ((v25 & 0xC000000000000001) != 0)
      v32 = (id)MEMORY[0x2276B2BEC](v30, v25);
    else
      v32 = *(id *)(v25 + 8 * v30 + 32);
    v33 = v32;
    v34 = objc_msgSend(v32, sel_name);
    if (v34)
    {
      v35 = v34;
      v36 = sub_22758E1E4();
      v38 = v37;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_2273A499C(0, v31[2] + 1, 1, v31);
      v40 = v31[2];
      v39 = v31[3];
      if (v40 >= v39 >> 1)
        v31 = sub_2273A499C((_QWORD *)(v39 > 1), v40 + 1, 1, v31);
      v31[2] = v40 + 1;
      v41 = &v31[2 * v40];
      v41[4] = v36;
      v41[5] = v38;
    }
    else
    {

    }
    ++v30;
  }
  while (v28 != v30);
LABEL_28:
  swift_bridgeObjectRelease_n();
  v42 = sub_22737523C((uint64_t)v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v46 = sub_227373044(v42, v175, v43, v44, v45);
  if (*(_QWORD *)(v42 + 16) <= *(_QWORD *)(v175 + 16) >> 3)
  {
    v181 = v175;
    swift_bridgeObjectRetain();
    sub_22737276C(v42);
    v166 = v175;
  }
  else
  {
    swift_bridgeObjectRetain();
    v166 = sub_227372900(v42, v175);
  }
  v47 = v160;
  if (*(_QWORD *)(v175 + 16) <= *(_QWORD *)(v42 + 16) >> 3)
  {
    v181 = v42;
    swift_bridgeObjectRetain();
    sub_22737276C(v175);
    swift_bridgeObjectRelease();
    v48 = v42;
  }
  else
  {
    swift_bridgeObjectRetain();
    v48 = sub_227372900(v175, v42);
    swift_bridgeObjectRelease();
  }
  v180 = v48;
  v157 = (id)objc_opt_self();
  objc_msgSend(v157, sel_begin);
  if (v160)
  {
    v49 = v178[31];
    v172 = v178[28] + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    v176 = v178[30];
    v170 = *(_QWORD *)(v49 + 72);
    v169 = v42 + 56;
    swift_bridgeObjectRetain();
    v50 = 0;
    __asm
    {
      FMOV            V14.2S, #0.75
      FMOV            V15.2S, #0.25
    }
    v158 = v42;
    v162 = v46;
    while (1)
    {
      v59 = v178[33];
      sub_22730DEEC(v172 + v50 * v170, v59, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
      v60 = *(float32x4_t *)(v59 + *(int *)(v176 + 20));
      if (vmulq_laneq_f32(vmulq_lane_f32(v60, *(float32x2_t *)v60.f32, 1), v60, 2).f32[0] >= 0.02)
      {
        v74 = sub_22732FAE0(0.0);
        v75 = sub_22758C948();
        v77 = sub_2274456D8(v75, v76, v46);
        swift_bridgeObjectRelease();
        if ((v77 & 1) != 0
          && (v78 = objc_msgSend((id)v178[29], sel_rootNode),
              sub_22758C948(),
              v79 = (void *)sub_22758E1B4(),
              swift_bridgeObjectRelease(),
              v80 = objc_msgSend(v78, sel_childNodeWithName_recursively_, v79, 0),
              v79,
              v78,
              v80))
        {
          objc_msgSend(v80, sel_simdWorldPosition);
          v164 = v81;
          objc_msgSend(v74, sel_simdWorldPosition);
          objc_msgSend(v80, sel_setSimdWorldPosition_, COERCE_DOUBLE(vadd_f32(vmul_f32(v164, _D14), vmul_f32(v82, _D15))));
          v83 = objc_msgSend(v80, sel_geometry);
          if (v83)
          {
            v84 = v83;
            v85 = v74;
            objc_opt_self();
            v86 = (void *)swift_dynamicCastObjCClass();
            if (v86)
            {
              v87 = v86;
              objc_msgSend(v86, sel_width);
              objc_msgSend(v87, sel_height);
              objc_msgSend(v87, sel_length);
              sub_22758E64C();
              sub_22758E658();
              sub_22758E664();
              sub_22758E658();
              sub_22758E658();
              v89 = v88;
              v91 = v90;
              objc_msgSend(v87, sel_setWidth_, v92);
              objc_msgSend(v87, sel_setHeight_, v89);
              objc_msgSend(v87, sel_setLength_, v91);
            }

            v74 = v85;
          }
          v93 = v178[33];
          objc_msgSend(v80, sel_simdOrientation);
          v168 = v94;
          objc_msgSend(v74, sel_simdOrientation);
          simd_slerp((float32x4_t)v168, v95, v96);
          objc_msgSend(v80, sel_setSimdOrientation_);

          v58 = v93;
        }
        else
        {
          v97 = sub_22758C948();
          v99 = sub_2274456D8(v97, v98, v166);
          swift_bridgeObjectRelease();
          if ((v99 & 1) == 0)
          {
            if (qword_2558D4A60 != -1)
              swift_once();
            v101 = v178[32];
            v100 = v178[33];
            v102 = sub_22758CF9C();
            __swift_project_value_buffer(v102, (uint64_t)qword_2558D6248);
            sub_22730DEEC(v100, v101, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
            v103 = sub_22758CF84();
            v104 = sub_22758E6C4();
            v105 = os_log_type_enabled(v103, v104);
            v106 = v178[32];
            v107 = v178[33];
            if (v105)
            {
              v108 = (uint8_t *)swift_slowAlloc();
              v109 = swift_slowAlloc();
              v181 = v109;
              *(_DWORD *)v108 = 136315138;
              v110 = sub_22758C948();
              *(v179 - 1) = sub_22733611C(v110, v111, &v181);
              sub_22758EA48();
              swift_bridgeObjectRelease();
              sub_22730DFB0(v106, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
              _os_log_impl(&dword_2272F4000, v103, v104, "Person %s should have been added or updated in objectUnderstanding scene, but was not.", v108, 0xCu);
              swift_arrayDestroy();
              v112 = v109;
              v47 = v160;
              MEMORY[0x2276B3D50](v112, -1, -1);
              v113 = v108;
              v42 = v158;
              MEMORY[0x2276B3D50](v113, -1, -1);

            }
            else
            {

              sub_22730DFB0(v106, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
            }
            sub_22730DFB0(v107, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
            v46 = v162;
            goto LABEL_38;
          }
          v56 = v178[33];
          v57 = objc_msgSend((id)v178[29], sel_rootNode);
          objc_msgSend(v57, sel_addChildNode_, v74);

          v58 = v56;
        }
      }
      else
      {
        v61 = sub_22758C948();
        v63 = v62;
        if (!*(_QWORD *)(v42 + 16))
          goto LABEL_70;
        v64 = v61;
        sub_22758EF4C();
        sub_22758E274();
        v65 = sub_22758EF88();
        v66 = -1 << *(_BYTE *)(v42 + 32);
        v67 = v65 & ~v66;
        if (((*(_QWORD *)(v169 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
          goto LABEL_70;
        v68 = *(_QWORD *)(v42 + 48);
        v69 = (_QWORD *)(v68 + 16 * v67);
        _ZF = *v69 == v64 && v69[1] == v63;
        if (!_ZF && (sub_22758EE50() & 1) == 0)
        {
          v114 = ~v66;
          while (1)
          {
            v67 = (v67 + 1) & v114;
            if (((*(_QWORD *)(v169 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
              break;
            v115 = (_QWORD *)(v68 + 16 * v67);
            v116 = *v115 == v64 && v115[1] == v63;
            if (v116 || (sub_22758EE50() & 1) != 0)
              goto LABEL_47;
          }
LABEL_70:
          v117 = v178[33];
          swift_bridgeObjectRelease();
          v58 = v117;
          goto LABEL_37;
        }
LABEL_47:
        v71 = v178[33];
        swift_bridgeObjectRelease();
        v72 = sub_22758C948();
        sub_22745C250(&v181, v72, v73);
        swift_bridgeObjectRelease();
        v58 = v71;
      }
LABEL_37:
      sub_22730DFB0(v58, (uint64_t (*)(_QWORD))type metadata accessor for SpatialPersonDetection);
LABEL_38:
      if (++v50 == v47)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v48 = v180;
        goto LABEL_73;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
LABEL_73:
  swift_bridgeObjectRelease();
  v118 = 0;
  v119 = v48 + 56;
  v120 = -1;
  v121 = -1 << *(_BYTE *)(v48 + 32);
  if (-v121 < 64)
    v120 = ~(-1 << -(char)v121);
  v122 = v120 & *(_QWORD *)(v48 + 56);
  v123 = (unint64_t)(63 - v121) >> 6;
  v124 = (uint64_t)&selRef_session_didUpdateDetectedObjects_;
  while (1)
  {
    if (v122)
    {
      v122 &= v122 - 1;
      goto LABEL_77;
    }
    v129 = v118 + 1;
    if (__OFADD__(v118, 1))
    {
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (v129 >= v123)
      goto LABEL_93;
    v130 = *(_QWORD *)(v119 + 8 * v129);
    ++v118;
    if (!v130)
    {
      v118 = v129 + 1;
      if (v129 + 1 >= v123)
        goto LABEL_93;
      v130 = *(_QWORD *)(v119 + 8 * v118);
      if (!v130)
      {
        v118 = v129 + 2;
        if (v129 + 2 >= v123)
          goto LABEL_93;
        v130 = *(_QWORD *)(v119 + 8 * v118);
        if (!v130)
          break;
      }
    }
LABEL_92:
    v122 = (v130 - 1) & v130;
LABEL_77:
    v125 = (void *)v178[29];
    swift_bridgeObjectRetain();
    v126 = objc_msgSend(v125, sel_rootNode);
    v127 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    v128 = objc_msgSend(v126, sel_childNodeWithName_recursively_, v127, 0);

    objc_msgSend(v128, sel_removeFromParentNode);
  }
  v131 = v129 + 3;
  if (v131 < v123)
  {
    v130 = *(_QWORD *)(v119 + 8 * v131);
    if (!v130)
    {
      while (1)
      {
        v118 = v131 + 1;
        if (__OFADD__(v131, 1))
          break;
        if (v118 >= v123)
          goto LABEL_93;
        v130 = *(_QWORD *)(v119 + 8 * v118);
        ++v131;
        if (v130)
          goto LABEL_92;
      }
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    v118 = v131;
    goto LABEL_92;
  }
LABEL_93:
  v132 = (void *)v178[29];
  swift_release();
  objc_msgSend(v157, sel_commit);
  v133 = objc_msgSend(v132, sel_rootNode);
  v178[21] = sub_22736EA88;
  v178[22] = 0;
  v178[17] = MEMORY[0x24BDAC760];
  v178[18] = 1107296256;
  v178[19] = sub_22736EAD8;
  v178[20] = &block_descriptor_42;
  v134 = _Block_copy(v179 - 10);
  swift_release();
  v135 = objc_msgSend(v133, sel_childNodesPassingTest_, v134);

  _Block_release(v134);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_124;
  v124 = sub_22758E3DC();

  if (!((unint64_t)v124 >> 62))
  {
    v136 = *(_QWORD *)((v124 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_96;
  }
LABEL_125:
  swift_bridgeObjectRetain();
  v136 = sub_22758ECE8();
  swift_bridgeObjectRelease();
LABEL_96:
  if (v136)
  {
    v137 = 0;
    v173 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene;
    v177 = *v179;
    v138 = v124 & 0xC000000000000001;
    v159 = v124 + 32;
    v161 = v124 & 0xFFFFFFFFFFFFFF8;
    v171 = (void *)*MEMORY[0x24BDE82E8];
    v139 = &selRef_session_didUpdateDetectedObjects_;
    v167 = v124;
    v163 = v124 & 0xC000000000000001;
    v165 = v136;
    while (1)
    {
      if (v138)
      {
        v140 = (id)MEMORY[0x2276B2BEC](v137, v124);
      }
      else
      {
        if (v137 >= *(_QWORD *)(v161 + 16))
          goto LABEL_121;
        v140 = *(id *)(v159 + 8 * v137);
      }
      v141 = v140;
      if (__OFADD__(v137++, 1))
      {
        __break(1u);
        goto LABEL_120;
      }
      v142 = objc_msgSend(v140, v139[247]);
      if (v142)
        break;
LABEL_100:

      if (v137 == v136)
        goto LABEL_118;
    }
    v143 = v142;
    v144 = *(void **)(v177 + v173);
    if (!v144)
    {
LABEL_99:

      goto LABEL_100;
    }
    v145 = objc_msgSend(v144, sel_physicsWorld);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D7390);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_227593AB0;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 32) = v171;
    *(_QWORD *)(inited + 40) = 2;
    v147 = v171;
    sub_22731DBC0(inited);
    type metadata accessor for TestOption(0);
    sub_2273096F0(&qword_2558D5028, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594A04);
    v148 = (void *)sub_22758E10C();
    swift_bridgeObjectRelease();
    v149 = objc_msgSend(v145, sel_contactTestWithBody_options_, v143, v148);

    sub_22730BA80(0, (unint64_t *)&unk_2558D73A0);
    v150 = sub_22758E3DC();

    if (v150 >> 62)
    {
      swift_bridgeObjectRetain();
      v124 = sub_22758ECE8();
      swift_bridgeObjectRelease();
      if (v124)
        goto LABEL_110;
    }
    else
    {
      v124 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v124)
      {
LABEL_110:
        if (v124 < 1)
          goto LABEL_123;
        for (i = 0; i != v124; ++i)
        {
          if ((v150 & 0xC000000000000001) != 0)
            v152 = (id)MEMORY[0x2276B2BEC](i, v150);
          else
            v152 = *(id *)(v150 + 8 * i + 32);
          v153 = v152;
          sub_22736F348(v152);

        }
      }
    }
    swift_bridgeObjectRelease();
    v124 = v167;
    v138 = v163;
    v136 = v165;
    v139 = &selRef_session_didUpdateDetectedObjects_;
    goto LABEL_99;
  }
LABEL_118:
  v154 = v178[38];
  v155 = v178[35];
  swift_bridgeObjectRelease();
  v156(v154, v155);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v178[1])();
}

uint64_t sub_22736E958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;

  v8 = sub_22758C984();
  v9 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 16))(v16, a1, v8, v14);
  v24 = a4;
  swift_bridgeObjectRetain();
  v19 = sub_227373700((uint64_t)sub_2273767E0, (uint64_t)v23, a2, v17, v18);
  v20 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v20;
  *v20 = 0x8000000000000000;
  sub_227586EC0(v19, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
  *v20 = v25;
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v16, v8);
  return swift_endAccess();
}

id sub_22736EA8C(void *a1)
{
  id result;
  void *v2;
  unint64_t v3;

  result = objc_msgSend(a1, sel_physicsBody);
  if (result)
  {
    v2 = result;
    v3 = (unint64_t)objc_msgSend(result, sel_categoryBitMask);

    return (id)((v3 >> 2) & 1);
  }
  return result;
}

uint64_t sub_22736EAD8(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_22736EB1C(id *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  void *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  id v63;
  id v64;
  void *v65;
  char *v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v77 = a2;
  v76 = type metadata accessor for Occupant();
  MEMORY[0x24BDAC7A8](v76, v4, v5, v6, v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v75 = (uint64_t)&v71 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  v78 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  v28 = (char *)&v71 - v27;
  v29 = sub_22758C984();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31, v32, v33, v34);
  v73 = (char *)&v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v37, v38, v39, v40);
  v42 = (char *)&v71 - v41;
  MEMORY[0x24BDAC7A8](v43, v44, v45, v46, v47);
  v49 = (char *)&v71 - v48;
  v50 = *a1;
  v51 = objc_msgSend(v50, sel_identifier);
  if (!v51)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_11;
  }
  v52 = v51;
  sub_22758C96C();

  v53 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v53(v28, v42, v29);
  v74 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v74(v28, 0, 1, v29);
  v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v72(v28, 1, v29) == 1)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    result = v74(v78, 1, 1, v29);
    goto LABEL_13;
  }
  v53(v49, v28, v29);

  v54 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  v55 = *v54;
  v56 = *(_QWORD *)(*v54 + 16);
  swift_bridgeObjectRetain();
  if (v56 && (v57 = sub_2274DE7E0((uint64_t)v49), (v58 & 1) != 0))
  {
    v59 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v57);
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  v80 = v59;
  v60 = v49;
  v61 = *(void (**)(char *, uint64_t))(v30 + 8);
  v61(v60, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, v77, v29);
  sub_22758C90C();
  v62 = v75;
  sub_22745BFD8(v75, (uint64_t)v9);
  sub_22730DFB0(v62, (uint64_t (*)(_QWORD))type metadata accessor for Occupant);
  v63 = v50;
  v64 = objc_msgSend(v63, sel_identifier);
  if (!v64)
    goto LABEL_12;
  v65 = v64;
  sub_22758C96C();

  v66 = v78;
  v53(v78, v42, v29);
  v74(v66, 0, 1, v29);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v72)(v66, 1, v29);
  if ((_DWORD)result != 1)
  {
    v68 = (uint64_t)v73;
    v53(v73, v66, v29);

    v69 = v80;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79 = *v54;
    *v54 = 0x8000000000000000;
    sub_227586EC0(v69, v68, isUniquelyReferenced_nonNull_native);
    *v54 = v79;
    swift_bridgeObjectRelease();
    v61((char *)v68, v29);
    return swift_endAccess();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_22736EF14(id *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  void *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  id v63;
  id v64;
  void *v65;
  char *v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v77 = a2;
  v76 = type metadata accessor for Occupant();
  MEMORY[0x24BDAC7A8](v76, v4, v5, v6, v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7520);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v75 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  v78 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  v28 = (char *)&v71 - v27;
  v29 = sub_22758C984();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31, v32, v33, v34);
  v74 = (char *)&v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v37, v38, v39, v40);
  v42 = (char *)&v71 - v41;
  MEMORY[0x24BDAC7A8](v43, v44, v45, v46, v47);
  v49 = (char *)&v71 - v48;
  v50 = *a1;
  v51 = objc_msgSend(v50, sel_identifier);
  if (!v51)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_12;
  }
  v52 = v51;
  sub_22758C96C();

  v53 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v53(v28, v42, v29);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v54(v28, 0, 1, v29);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v73(v28, 1, v29) == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v53(v49, v28, v29);

  v55 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  swift_beginAccess();
  v56 = *v55;
  if (*(_QWORD *)(*v55 + 16))
  {
    swift_bridgeObjectRetain();
    v57 = sub_2274DE7E0((uint64_t)v49);
    if ((v58 & 1) != 0)
    {
      v72 = v54;
      v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60 = v49;
      v61 = *(void (**)(char *, uint64_t))(v30 + 8);
      v61(v60, v29);
      v80 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, v77, v29);
      sub_22758C90C();
      v62 = v75;
      sub_22745CDC4(v75);
      sub_22730DFB0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Occupant);
      sub_22731A1A4(v62, &qword_2558D7520);
      v63 = v50;
      v64 = objc_msgSend(v63, sel_identifier);
      if (v64)
      {
        v65 = v64;
        sub_22758C96C();

        v66 = v78;
        v53(v78, v42, v29);
        v72(v66, 0, 1, v29);
        result = ((uint64_t (*)(char *, uint64_t, uint64_t))v73)(v66, 1, v29);
        if ((_DWORD)result != 1)
        {
          v68 = (uint64_t)v74;
          v53(v74, v66, v29);

          v69 = v80;
          swift_beginAccess();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v79 = *v55;
          *v55 = 0x8000000000000000;
          sub_227586EC0(v69, v68, isUniquelyReferenced_nonNull_native);
          *v55 = v79;
          swift_bridgeObjectRelease();
          v61((char *)v68, v29);
          return swift_endAccess();
        }
        goto LABEL_14;
      }
LABEL_13:
      result = v72(v78, 1, 1, v29);
LABEL_14:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v49, v29);
}

void sub_22736F348(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  id v57;
  id v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _OWORD *v65;
  void *v66;
  id v67;
  char *v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char v79;
  char v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  id v86;
  uint64_t v87;
  double v88;
  id v89;
  id v90;
  void *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void (*v96)(uint64_t, char *);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *);
  char *v100;
  uint64_t v101;
  char *v102;
  _OWORD *v103;
  id v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  id v118[2];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v106 = (char *)&v100 - v15;
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  v107 = (char *)&v100 - v21;
  MEMORY[0x24BDAC7A8](v22, v23, v24, v25, v26);
  v28 = (char *)&v100 - v27;
  v29 = sub_22758C984();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31, v32, v33, v34);
  v36 = (char *)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v38, v39, v40, v41);
  v43 = (char *)&v100 - v42;
  MEMORY[0x24BDAC7A8](v44, v45, v46, v47, v48);
  v117 = (char *)&v100 - v49;
  *(_QWORD *)&v55 = MEMORY[0x24BDAC7A8](v50, v51, v52, v53, v54).n128_u64[0];
  v116 = (char *)&v100 - v56;
  v57 = objc_msgSend(a1, sel_nodeA, v55);
  v58 = objc_msgSend(v57, sel_physicsBody);

  if (!v58)
    return;
  v59 = objc_msgSend(v58, sel_categoryBitMask);

  if ((v59 & 4) == 0)
    return;
  v105 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache);
  swift_bridgeObjectRetain();
  v104 = a1;
  v60 = objc_msgSend(a1, sel_nodeB);
  v61 = objc_msgSend(v60, sel_name);

  if (v61)
  {
    v62 = sub_22758E1E4();
    v114 = v63;
    v115 = v62;

  }
  else
  {
    v114 = 0;
    v115 = 0;
  }
  v64 = *(_QWORD *)(v105 + 16);
  if (!v64)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v103 = v9;
  v100 = v36;
  v102 = v43;
  v101 = v1;
  v65 = (_OWORD *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    v66 = (void *)*((_QWORD *)v65 - 2);
    v110 = *v65;
    v111 = v65[1];
    v112 = v65[2];
    v113 = v65[3];
    v67 = v66;
    v68 = (char *)objc_msgSend(v67, sel_identifier);
    if (!v68)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v36 = v68;
    v69 = v117;
    sub_22758C96C();

    v70 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v70(v28, v69, v29);
    v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    v109(v28, 0, 1, v29);
    v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v71(v28, 1, v29) == 1)
      goto LABEL_41;
    v72 = v116;
    v70(v116, v28, v29);

    v73 = sub_22758C948();
    v74 = v29;
    v75 = v73;
    v36 = v76;
    v77 = v72;
    v78 = (char *)v74;
    v108 = *(void (**)(char *, uint64_t))(v30 + 8);
    v108(v77, v74);
    if (v114)
      break;

    swift_bridgeObjectRelease();
LABEL_9:
    v65 += 5;
    --v64;
    v29 = (uint64_t)v78;
    if (!v64)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  if (v75 == v115 && v114 == v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v79 = sub_22758EE50();
  swift_bridgeObjectRelease();
  if ((v79 & 1) == 0)
  {

    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_21:
  v36 = v78;
  v118[0] = v67;
  v119 = v110;
  v120 = v111;
  v121 = v112;
  v122 = v113;
  v80 = sub_227520300();
  v65 = v103;
  if ((v80 & 1) == 0)
    goto LABEL_30;
  v81 = objc_msgSend(v104, sel_nodeA);
  v82 = objc_msgSend(v81, sel_name);

  if (v82)
  {
    sub_22758E1E4();

  }
  v83 = (uint64_t)v107;
  v84 = (uint64_t)v106;
  sub_22758C93C();
  swift_bridgeObjectRelease();
  v85 = v71((char *)v84, 1, (uint64_t)v36);
  v86 = v104;
  if (v85)
  {
    sub_22731A1A4(v84, &qword_2558D5BA0);
    v109((char *)v83, 1, 1, (uint64_t)v36);
LABEL_27:

    sub_22731A1A4(v83, &qword_2558D5BA0);
    return;
  }
  v70((char *)v83, (char *)v84, (uint64_t)v36);
  v109((char *)v83, 0, 1, (uint64_t)v36);
  if (v71((char *)v83, 1, (uint64_t)v36) == 1)
    goto LABEL_27;
  v87 = (uint64_t)v102;
  v70(v102, (char *)v83, (uint64_t)v36);
  objc_msgSend(v86, sel_penetrationDistance);
  if (v88 > 0.05)
  {
    v118[0] = v67;
    v119 = v110;
    v120 = v111;
    v121 = v112;
    v122 = v113;
    sub_22736EB1C(v118, v87);
    v108((char *)v87, (uint64_t)v36);
LABEL_30:

    return;
  }
  v89 = v67;
  v90 = objc_msgSend(v89, sel_identifier);
  if (!v90)
  {
LABEL_42:
    v109((char *)v65, 1, 1, (uint64_t)v36);
    goto LABEL_43;
  }
  v91 = v90;
  v92 = v117;
  sub_22758C96C();

  v70((char *)v65, v92, (uint64_t)v36);
  v109((char *)v65, 0, 1, (uint64_t)v36);
  if (v71((char *)v65, 1, (uint64_t)v36) != 1)
  {
    v93 = (uint64_t)v100;
    v70(v100, (char *)v65, (uint64_t)v36);

    v94 = v101 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v94 + 16))
    {
      swift_bridgeObjectRetain();
      sub_2274DE7E0(v93);
      if ((v95 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v96 = (void (*)(uint64_t, char *))v108;
        v108((char *)v93, (uint64_t)v36);
        swift_bridgeObjectRelease();
        v118[0] = v89;
        v119 = v110;
        v120 = v111;
        v121 = v112;
        v122 = v113;
        v97 = (uint64_t)v102;
        sub_22736EF14(v118, (uint64_t)v102);
        v96(v97, v36);
LABEL_39:

        return;
      }
      swift_bridgeObjectRelease();
    }
    v98 = v93;
    v99 = (void (*)(char *, char *))v108;
    v108((char *)v98, (uint64_t)v36);
    v99(v102, v36);
    goto LABEL_39;
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_22736FB88()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t inited;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer), sel_physicsBody);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
  if (!v3)
  {

    return 0;
  }
  v4 = objc_msgSend(v3, sel_physicsWorld);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D7390);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227593AB0;
  v6 = (void *)*MEMORY[0x24BDE82E8];
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = 2;
  v7 = v6;
  sub_22731DBC0(inited);
  type metadata accessor for TestOption(0);
  sub_2273096F0(&qword_2558D5028, (uint64_t (*)(uint64_t))type metadata accessor for TestOption, (uint64_t)&unk_227594A04);
  v8 = (void *)sub_22758E10C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_contactTestWithBody_options_, v2, v8);

  sub_22730BA80(0, (unint64_t *)&unk_2558D73A0);
  v10 = sub_22758E3DC();

  return v10;
}

void sub_22736FD10(void *a1@<X0>, _OWORD *a2@<X8>, float32x4_t a3@<Q0>)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  float v29;
  float v30;
  int v31;
  float v32;
  double v33;
  double v34;
  double v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  int *v67;
  unint64_t v68;
  int v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float v78;
  float *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  float v85;
  unint64_t v86;
  float *v87;
  float v88;
  float v89;
  float v90;
  uint64_t v91;
  _OWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  float32x4_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;

  v4 = v3;
  v97 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22758C984();
  v15 = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x24BDAC7A8](v14, v16, v17, v18, v19);
  v108 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22, v23, v24, v25);
  v107 = (char *)&v93 - v26;
  v27 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer];
  sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
  v28 = v27;
  sub_22758E7F0();
  v29 = *(float *)&v115;
  sub_22758E7F0();
  v30 = (float)(v29 + *((float *)&v115 + 3)) * 0.5;
  sub_22758E7F0();
  v31 = v116;
  sub_22758E7F0();
  v32 = *((float *)&v115 + 2);
  sub_22758E7F0();
  *(float *)&v33 = (float)(v32 + *((float *)&v116 + 1)) * 0.5;
  *(float *)&v34 = v30;
  LODWORD(v35) = v31;
  objc_msgSend(v28, sel_convertPosition_toNode_, 0, v34, v35, v33);

  v36 = objc_msgSend(a1, sel_nodeB);
  LOBYTE(v28) = sub_2273744BC(v36);

  if ((v28 & 1) != 0)
    goto LABEL_18;
  v37 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache;
  v98 = *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsCache];
  swift_bridgeObjectRetain();
  v38 = objc_msgSend(a1, sel_nodeB);
  v39 = objc_msgSend(v38, sel_name);

  if (v39)
  {
    v109 = sub_22758E1E4();
    v106 = v40;

  }
  else
  {
    v109 = 0;
    v106 = 0;
  }
  v41 = *(_QWORD *)(v98 + 16);
  if (!v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    *a2 = xmmword_227598910;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
    *(_OWORD *)((char *)a2 + 76) = 0u;
    return;
  }
  v94 = v37;
  v95 = v4;
  v96 = a2;
  v42 = swift_bridgeObjectRetain() + 48;
  while (1)
  {
    v115 = *(_OWORD *)(v42 - 16);
    v44 = *(_OWORD *)v42;
    v45 = *(_OWORD *)(v42 + 16);
    v46 = *(_OWORD *)(v42 + 48);
    v118 = *(_OWORD *)(v42 + 32);
    v119 = v46;
    v116 = v44;
    v117 = v45;
    v47 = *(_QWORD *)(v42 - 16);
    v105 = *(_QWORD *)(v42 + 8);
    v101 = *(_QWORD *)v42;
    v104 = *(_QWORD *)(v42 + 24);
    v100 = *(_QWORD *)(v42 + 16);
    v48 = *(_QWORD *)(v42 + 48);
    v103 = *(_QWORD *)(v42 + 40);
    v99 = *(_QWORD *)(v42 + 32);
    v102 = *(_QWORD *)(v42 + 56);
    v49 = (void *)v115;
    sub_227375754((id *)&v115);
    sub_227375754((id *)&v115);
    v50 = objc_msgSend(v49, sel_identifier);
    if (!v50)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_37:
      __break(1u);
      return;
    }
    v51 = v50;
    v52 = v108;
    sub_22758C96C();

    v53 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v53(v13, v52, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      goto LABEL_37;
    v54 = v107;
    v53(v107, v13, v14);
    sub_22737577C((id *)&v115);
    v55 = sub_22758C948();
    v57 = v56;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v54, v14);
    if (!v106)
    {
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    if (v55 == v109 && v106 == v57)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v43 = sub_22758EE50();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
      break;
LABEL_8:
    sub_22737577C((id *)&v115);
    v42 += 80;
    if (!--v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a2 = v96;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_20:
  v58 = v95;
  v59 = *(_QWORD *)&v95[v94];
  v60 = *(_QWORD *)&v95[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedStorageGroups];
  v61 = *(_QWORD *)&v95[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedTableChairGroups];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62 = sub_22737054C((id *)&v115, v60, v61, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v62)
  {
    v72 = (uint64_t *)&v58[OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants];
    swift_beginAccess();
    v73 = *v72;
    v112 = v117;
    v113 = v118;
    v114 = v119;
    v111 = v116;
    v110 = v115;
    sub_227375754((id *)&v115);
    swift_bridgeObjectRetain();
    v74 = Dictionary<>.occupants(of:)((id *)&v110, v73);
    swift_bridgeObjectRelease();
    v112 = v117;
    v113 = v118;
    v114 = v119;
    v111 = v116;
    v110 = v115;
    sub_2275206E8(v97);
    v76 = vsubq_f32(v97, v75);
    v77 = vmulq_f32(v76, v76);
    v78 = sqrtf(vaddq_f32(v77, (float32x4_t)vdupq_laneq_s32((int32x4_t)v77, 2)).f32[0]);
    sub_22737577C((id *)&v115);
    v79 = (float *)v96;
    *v96 = v47;
    *((_QWORD *)v79 + 1) = 0;
    v80 = v105;
    *((_QWORD *)v79 + 2) = v101;
    *((_QWORD *)v79 + 3) = v80;
    v81 = v104;
    *((_QWORD *)v79 + 4) = v100;
    *((_QWORD *)v79 + 5) = v81;
    v82 = v103;
    *((_QWORD *)v79 + 6) = v99;
    *((_QWORD *)v79 + 7) = v82;
    v83 = v102;
    *((_QWORD *)v79 + 8) = v48;
    *((_QWORD *)v79 + 9) = v83;
    *((_QWORD *)v79 + 10) = v74;
    v79[22] = v78;
    return;
  }
  v63 = v58;
  v64 = sub_227374254((uint64_t)v62, (uint64_t)v63, v97);
  swift_bridgeObjectRelease();

  v65 = *(_QWORD *)(v64 + 16);
  if (v65)
  {
    *(_QWORD *)&v110 = MEMORY[0x24BEE4AF8];
    sub_227324824(0, v65, 0);
    v66 = v110;
    v67 = (int *)(v64 + 120);
    v68 = *(_QWORD *)(v110 + 16);
    do
    {
      v69 = *v67;
      *(_QWORD *)&v110 = v66;
      v70 = *(_QWORD *)(v66 + 24);
      v71 = v68 + 1;
      if (v68 >= v70 >> 1)
      {
        sub_227324824(v70 > 1, v68 + 1, 1);
        v66 = v110;
      }
      *(_QWORD *)(v66 + 16) = v71;
      *(_DWORD *)(v66 + 4 * v68 + 32) = v69;
      v67 += 24;
      ++v68;
      --v65;
    }
    while (v65);
  }
  else
  {
    v66 = MEMORY[0x24BEE4AF8];
    v71 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v71)
    {
      swift_bridgeObjectRelease();
      sub_22737577C((id *)&v115);
      swift_bridgeObjectRelease();
      v92 = v96;
      *(_OWORD *)v96 = xmmword_227598910;
      v92[1] = 0u;
      v92[2] = 0u;
      v92[3] = 0u;
      v92[4] = 0u;
      *(_OWORD *)((char *)v92 + 76) = 0u;
      return;
    }
  }
  v84 = v96;
  v85 = *(float *)(v66 + 32);
  v86 = v71 - 1;
  if (v71 != 1)
  {
    v87 = (float *)(v66 + 36);
    v88 = *(float *)(v66 + 32);
    do
    {
      v89 = *v87++;
      v90 = v89;
      if (v89 < v88)
      {
        v85 = v90;
        v88 = v90;
      }
      --v86;
    }
    while (v86);
  }
  swift_bridgeObjectRelease();
  v91 = sub_227374CE8(v64);
  swift_bridgeObjectRelease();
  sub_22737577C((id *)&v115);
  *v84 = v91;
  v84[1] = LODWORD(v85) | 0x8000000000000000;
  *((_OWORD *)v84 + 1) = 0u;
  *((_OWORD *)v84 + 2) = 0u;
  *((_OWORD *)v84 + 3) = 0u;
  *((_OWORD *)v84 + 4) = 0u;
  *(_OWORD *)((char *)v84 + 76) = 0u;
}

id sub_22737054C(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v8 = *a1;
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v10 = result;
  sub_22737577C(a1);
  v11 = sub_22758E1E4();
  v13 = v12;
  if (v11 == sub_22758E1E4() && v13 == v14)
    goto LABEL_10;
  v16 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    return (id)sub_227371450(a1, a2, a4);
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
    goto LABEL_33;
  v10 = result;
  sub_22737577C(a1);
  v17 = sub_22758E1E4();
  v19 = v18;
  if (v17 == sub_22758E1E4() && v19 == v20)
    goto LABEL_10;
  v21 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    return (id)sub_227371450(a1, a2, a4);
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
    goto LABEL_34;
  v10 = result;
  sub_22737577C(a1);
  v22 = sub_22758E1E4();
  v24 = v23;
  if (v22 == sub_22758E1E4() && v24 == v25)
    goto LABEL_10;
  v26 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    return (id)sub_227371450(a1, a2, a4);
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  v10 = result;
  sub_22737577C(a1);
  v27 = sub_22758E1E4();
  v29 = v28;
  if (v27 == sub_22758E1E4() && v29 == v30)
  {
LABEL_10:

    swift_bridgeObjectRelease_n();
    return (id)sub_227371450(a1, a2, a4);
  }
  v31 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    return (id)sub_227371450(a1, a2, a4);
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
    goto LABEL_36;
  v32 = result;
  sub_22737577C(a1);
  v33 = sub_22758E1E4();
  v35 = v34;
  if (v33 == sub_22758E1E4() && v35 == v36)
    goto LABEL_24;
  v37 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    return (id)sub_227371868((uint64_t)a1, a3, a4);
  sub_227375754(a1);
  result = objc_msgSend(v8, sel_type);
  if (!result)
    goto LABEL_37;
  v32 = result;
  sub_22737577C(a1);
  v38 = sub_22758E1E4();
  v40 = v39;
  if (v38 == sub_22758E1E4() && v40 == v41)
  {
LABEL_24:

    swift_bridgeObjectRelease_n();
    return (id)sub_227371868((uint64_t)a1, a3, a4);
  }
  v42 = sub_22758EE50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v42 & 1) != 0)
    return (id)sub_227371868((uint64_t)a1, a3, a4);
  return 0;
}

uint64_t sub_2273709B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = a2;
  v4 = sub_22758C984();
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(_BYTE *)(v2 + 96) = *(_BYTE *)(a1 + 16);
  sub_22758E49C();
  *(_QWORD *)(v2 + 88) = sub_22758E490();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227370A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  unint64_t v39;
  char *v40;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1 + 16);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = *(unsigned __int8 *)(v0 + 96);
    v50 = v0;
    if (v4 != 4)
    {
      if (v4 == 3)
      {
        v39 = *(_QWORD *)(v0 + 80);
        v40 = (char *)*(id *)(v0 + 72);
        sub_2273757A4(v39);
      }
      else
      {
        if (v4 != 2)
        {
LABEL_36:

          goto LABEL_37;
        }
        v5 = *(char **)(v0 + 72);
        v6 = *(_QWORD *)(v0 + 80);
        v44 = v5;
        if (v6 >> 62)
          goto LABEL_40;
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v8 = v5;
        swift_bridgeObjectRetain();
        for (; v7; v7 = sub_22758ECE8())
        {
          v9 = 0;
          v10 = *(_QWORD *)(v50 + 80) & 0xC000000000000001;
          v48 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
          while (1)
          {
            v11 = v10 ? (id)MEMORY[0x2276B2BEC](v9, v6) : *(id *)(v6 + 8 * v9 + 32);
            v12 = v11;
            v13 = v9 + 1;
            if (__OFADD__(v9, 1))
              break;
            objc_opt_self();
            v14 = swift_dynamicCastObjCClass();
            if (!v14)
            {

              goto LABEL_29;
            }
            v15 = (void *)v14;
            objc_allocWithZone((Class)type metadata accessor for Plane());
            v16 = v12;
            v17 = sub_227522844(v15);
            objc_msgSend(v16, sel_transform);
            objc_msgSend(v17, sel_setSimdTransform_);
            objc_msgSend(*(id *)&v3[v48], sel_addChildNode_, v17);

            ++v9;
            if (v13 == v7)
              goto LABEL_29;
          }
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          v42 = v5;
          swift_bridgeObjectRetain();
        }
LABEL_29:
        swift_bridgeObjectRelease();
        v40 = v44;
        v0 = v50;
      }
LABEL_35:

      v3 = v40;
      goto LABEL_36;
    }
    v18 = *(char **)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 80);
    v44 = v18;
    if (v19 >> 62)
    {
      v43 = v18;
      swift_bridgeObjectRetain();
      v20 = sub_22758ECE8();
      if (v20)
      {
LABEL_17:
        v22 = 0;
        v46 = *(_QWORD *)(v0 + 56);
        v47 = *(_QWORD *)(v0 + 80) & 0xC000000000000001;
        v45 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
        while (1)
        {
          if (v47)
            v23 = (id)MEMORY[0x2276B2BEC](v22, v19);
          else
            v23 = *(id *)(v19 + 8 * v22 + 32);
          v24 = v23;
          v6 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_39;
          objc_opt_self();
          v25 = swift_dynamicCastObjCClass();
          if (!v25)
            break;
          v26 = (void *)v25;
          v49 = v22 + 1;
          v27 = v20;
          v28 = v3;
          v29 = v19;
          v30 = *(_QWORD *)(v0 + 64);
          v31 = *(_QWORD *)(v0 + 48);
          v32 = v28;
          v33 = *(void **)&v28[v45];
          v34 = v24;
          v35 = v33;
          v36 = objc_msgSend(v26, sel_identifier);
          sub_22758C96C();

          sub_22758C948();
          (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v30, v31);
          v37 = (void *)sub_22758E1B4();
          swift_bridgeObjectRelease();
          v24 = objc_msgSend(v35, sel_childNodeWithName_recursively_, v37, 0);

          if (!v24)
          {
            v24 = v34;
LABEL_32:
            v3 = v32;

            v0 = v50;
            break;
          }
          type metadata accessor for Plane();
          v38 = (void *)swift_dynamicCastClass();
          v19 = v29;
          if (!v38)
          {

            goto LABEL_32;
          }
          objc_msgSend(v38, sel_removeFromParentNode);

          ++v22;
          v20 = v27;
          v3 = v32;
          v0 = v50;
          if (v49 == v27)
            goto LABEL_34;
        }

      }
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = v18;
      swift_bridgeObjectRetain();
      if (v20)
        goto LABEL_17;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    v40 = v44;
    goto LABEL_35;
  }
LABEL_37:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227370E90(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  id v15;

  v3 = v2;
  if (a2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v5 = sub_22758ECE8();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
      v7 = 4;
      do
      {
        v8 = v7 - 4;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v9 = (id)MEMORY[0x2276B2BEC](v7 - 4, a2);
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
            goto LABEL_13;
        }
        else
        {
          v9 = *(id *)(a2 + 8 * v7);
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        v15 = v9;
        objc_opt_self();
        v11 = swift_dynamicCastObjCClass();
        if (!v11)
        {
          swift_bridgeObjectRelease();

          return;
        }
        v12 = (void *)v11;
        objc_allocWithZone((Class)type metadata accessor for Plane());
        v13 = v15;
        v14 = sub_227522844(v12);
        objc_msgSend(v13, sel_transform);
        objc_msgSend(v14, sel_setSimdTransform_);
        objc_msgSend(*(id *)(v3 + v6), sel_addChildNode_, v14);

        ++v7;
      }
      while (v10 != v5);
    }
  }
  swift_bridgeObjectRelease();
}

void sub_227371030(uint64_t a1, unint64_t a2)
{
  sub_2273757A4(a2);
}

void sub_227371038(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = sub_22758C984();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
    goto LABEL_19;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_22758ECE8())
  {
    v24 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
    v25 = a2 & 0xC000000000000001;
    v11 = 4;
    while (1)
    {
      v12 = v25 ? (id)MEMORY[0x2276B2BEC](v11 - 4, a2) : *(id *)(a2 + 8 * v11);
      v13 = v12;
      v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
        break;
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      v16 = (void *)v15;
      v17 = *(void **)(v28 + v24);
      v13 = v13;
      v18 = v17;
      v19 = objc_msgSend(v16, sel_identifier);
      sub_22758C96C();

      sub_22758C948();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
      v20 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v18, sel_childNodeWithName_recursively_, v20, 0);

      if (!v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      type metadata accessor for Plane();
      v22 = (void *)swift_dynamicCastClass();
      if (!v22)
      {
        swift_bridgeObjectRelease();

LABEL_16:
LABEL_17:

        return;
      }
      objc_msgSend(v22, sel_removeFromParentNode);

      ++v11;
      if (v14 == v10)
        goto LABEL_20;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
}

id MAGObjectUnderstandingService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MAGObjectUnderstandingService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MAGObjectUnderstandingService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAGObjectUnderstandingService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227371450(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47[2];
  char *v48;
  id *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22758C984();
  v54 = *(_QWORD *)(v13 - 8);
  v18 = MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21, v22, v23, v24);
  v55 = (char *)v47 - v25;
  v50 = *(_QWORD *)(a2 + 16);
  if (v50)
  {
    v47[0] = a3;
    v47[1] = a2;
    v51 = *a1;
    v52 = a2 + 32;
    swift_bridgeObjectRetain();
    v26 = 0;
    v48 = v12;
    v49 = a1;
    while (1)
    {
      v27 = *(_QWORD *)(v52 + 8 * v26);
      swift_bridgeObjectRetain();
      sub_227375754(a1);
      v28 = objc_msgSend(v51, sel_identifier);
      if (!v28)
      {
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v12, 1, 1, v13);
LABEL_23:
        __break(1u);
        return result;
      }
      v29 = v28;
      v53 = v26;
      sub_22758C96C();

      v30 = v54;
      v31 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      v31(v12, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v12, 0, 1, v13);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, v13);
      if ((_DWORD)result == 1)
        goto LABEL_23;
      v31(v55, v12, v13);
      sub_22737577C(a1);
      if (*(_QWORD *)(v27 + 16))
      {
        sub_2273096F0((unint64_t *)&qword_2558D5D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v33 = sub_22758E130();
        v34 = -1 << *(_BYTE *)(v27 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v27 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
      }
LABEL_3:
      v26 = v53 + 1;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v13);
      swift_bridgeObjectRelease();
      a1 = v49;
      v12 = v48;
      if (v26 == v50)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    v36 = ~v34;
    v37 = *(_QWORD *)(v54 + 72);
    v38 = *(void (**)(char *, unint64_t, uint64_t))(v54 + 16);
    while (1)
    {
      v38(v20, *(_QWORD *)(v27 + 48) + v37 * v35, v13);
      sub_2273096F0((unint64_t *)&unk_2558D7550, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v39 = sub_22758E190();
      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v20, v13);
      if ((v39 & 1) != 0)
        break;
      v35 = (v35 + 1) & v36;
      if (((*(_QWORD *)(v27 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
        goto LABEL_3;
    }
    v40(v55, v13);
    swift_bridgeObjectRelease();
    v41 = sub_227371D3C(v27, v47[0]);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v41 + 16))
    {
      v42 = sub_227374C50(v41);
      swift_bridgeObjectRelease();
      return v42;
    }
    swift_bridgeObjectRelease();
    if (qword_2558D4A60 != -1)
      swift_once();
    v43 = sub_22758CF9C();
    __swift_project_value_buffer(v43, (uint64_t)qword_2558D6248);
    v44 = sub_22758CF84();
    v45 = sub_22758E6C4();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_2272F4000, v44, v45, "Warning: group of found objects is unexpectedly empty", v46, 2u);
      MEMORY[0x2276B3D50](v46, -1, -1);
    }

  }
  return 0;
}

uint64_t sub_227371868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  void *v58;
  __int128 v59;
  __int128 v60;
  id v61;
  id v62;
  void *v63;
  uint64_t result;
  char v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v80 = a3;
  *(_QWORD *)&v84 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22758C984();
  v12 = *(_QWORD *)(v11 - 8);
  v17 = MEMORY[0x24BDAC7A8](v11, v13, v14, v15, v16);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20, v21, v22, v23);
  v25 = (char *)&v77 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7568);
  MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
  v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7570);
  v34 = *(_QWORD *)(v33 - 8);
  v39 = MEMORY[0x24BDAC7A8](v33, v35, v36, v37, v38);
  v85 = (uint64_t)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39, v41, v42, v43, v44);
  v46 = (char *)&v77 - v45;
  v86 = a1;
  sub_2274DD194(v84, (uint64_t (*)(char *, uint64_t))sub_227376784, (uint64_t)v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    v47 = &qword_2558D7568;
    v48 = (uint64_t)v32;
    goto LABEL_16;
  }
  v49 = *(int *)(v33 + 48);
  v50 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v50(v46, v32, v11);
  v51 = *(_QWORD *)&v32[v49];
  *(_QWORD *)&v46[v49] = v51;
  v52 = *(int *)(v33 + 48);
  v53 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v85, v46, v11);
  v54 = v51;
  *(_QWORD *)(v53 + v52) = v51;
  v55 = v80;
  v56 = *(_QWORD *)(v80 + 16);
  if (!v56)
  {
    swift_bridgeObjectRetain_n();
LABEL_11:
    sub_22731A1A4(v85, &qword_2558D7570);
    swift_bridgeObjectRelease();
    if (qword_2558D4A60 != -1)
      swift_once();
    v66 = sub_22758CF9C();
    __swift_project_value_buffer(v66, (uint64_t)qword_2558D6248);
    v67 = sub_22758CF84();
    v68 = sub_22758E6C4();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_2272F4000, v67, v68, "Warning: could not find DetectedObject expected to match given ID", v69, 2u);
      MEMORY[0x2276B3D50](v69, -1, -1);
    }

    v47 = &qword_2558D7570;
    v48 = (uint64_t)v46;
LABEL_16:
    sub_22731A1A4(v48, v47);
    return 0;
  }
  v78 = v54;
  v79 = v46;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v57 = (_OWORD *)(v55 + 48);
  while (1)
  {
    v58 = (void *)*((_QWORD *)v57 - 2);
    v59 = *v57;
    v83 = v57[1];
    v84 = v59;
    v60 = v57[2];
    v81 = v57[3];
    v82 = v60;
    v61 = v58;
    v62 = objc_msgSend(v61, sel_identifier);
    if (!v62)
      break;
    v63 = v62;
    sub_22758C96C();

    v50(v10, v19, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if ((_DWORD)result == 1)
      goto LABEL_20;
    v50(v25, v10, v11);

    v65 = sub_22758C960();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
    if ((v65 & 1) != 0)
    {
      v71 = v80;
      swift_bridgeObjectRelease();
      sub_22731A1A4(v85, &qword_2558D7570);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5D08);
      v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_227593AB0;
      *(_QWORD *)(v72 + 32) = v61;
      v73 = v83;
      *(_OWORD *)(v72 + 48) = v84;
      *(_OWORD *)(v72 + 64) = v73;
      v74 = v81;
      *(_OWORD *)(v72 + 80) = v82;
      *(_OWORD *)(v72 + 96) = v74;
      v75 = v61;
      v76 = sub_227371D3C(v78, v71);
      swift_bridgeObjectRelease();
      v87 = v72;
      sub_2273A3B58(v76);
      v70 = sub_227374C50(v87);

      swift_bridgeObjectRelease();
      sub_22731A1A4((uint64_t)v79, &qword_2558D7570);
      return v70;
    }

    v57 += 5;
    if (!--v56)
    {
      swift_bridgeObjectRelease();
      v46 = v79;
      goto LABEL_11;
    }
  }
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_227371D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v12 = a2;
  v10[2] = &v12;
  v3 = sub_227393B54((void (*)(_QWORD *__return_ptr, char *))sub_227376768, (uint64_t)v10, a1);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 != *(_QWORD *)(a1 + 16))
  {
    if (qword_2558D4A60 != -1)
      swift_once();
    v5 = sub_22758CF9C();
    __swift_project_value_buffer(v5, (uint64_t)qword_2558D6248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_22758CF84();
    v7 = sub_22758E6C4();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      *(_DWORD *)v8 = 134218496;
      v11 = *(_QWORD *)(a1 + 16) - v4;
      sub_22758EA48();
      *(_WORD *)(v8 + 12) = 2048;
      v11 = *(_QWORD *)(a1 + 16);
      sub_22758EA48();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      v11 = v4;
      sub_22758EA48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2272F4000, v6, v7, "Warning: %ld/%ld object IDs did not have a corresponding DetectedObject. Continuing with %ld found objects.", (uint8_t *)v8, 0x20u);
      MEMORY[0x2276B3D50](v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

uint64_t sub_227371F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;

  v4 = v3;
  v60 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22758C984();
  v15 = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x24BDAC7A8](v14, v16, v17, v18, v19);
  v61 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v20, v22, v23, v24, v25);
  v59 = (char *)v48 - v27;
  v28 = *(_QWORD *)(a2 + 16);
  if (v28)
  {
    v58 = v13;
    v49 = a3;
    v50 = v4;
    swift_bridgeObjectRetain();
    v48[1] = a2;
    v29 = (uint64_t *)(a2 + 48);
    v30 = v58;
    while (1)
    {
      v31 = (void *)*(v29 - 2);
      v32 = v29[1];
      v33 = *v29;
      v34 = v29[4];
      v56 = v29[3];
      v57 = v32;
      v52 = v29[2];
      v53 = v33;
      v35 = v29[5];
      v54 = v29[7];
      v55 = v35;
      v51 = v29[6];
      v36 = v31;
      v37 = objc_msgSend(v36, sel_identifier);
      if (!v37)
        break;
      v38 = v37;
      v39 = v61;
      sub_22758C96C();

      v40 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v40(v30, v39, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v30, 1, v14);
      if ((_DWORD)result == 1)
        goto LABEL_11;
      v41 = v59;
      v40(v59, v30, v14);

      v42 = sub_22758C960();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);
      if ((v42 & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v43 = v49;
        *v49 = v36;
        v43[1] = 0;
        v44 = v57;
        v43[2] = v53;
        v43[3] = v44;
        v45 = v56;
        v43[4] = v52;
        v43[5] = v45;
        v46 = v55;
        v43[6] = v34;
        v43[7] = v46;
        v47 = v54;
        v43[8] = v51;
        v43[9] = v47;
        return result;
      }

      v29 += 10;
      if (!--v28)
      {
        result = swift_bridgeObjectRelease();
        a3 = v49;
        goto LABEL_8;
      }
    }
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v58, 1, 1, v14);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for MAGObjectUnderstandingService()
{
  return objc_opt_self();
}

uint64_t sub_2273721B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227319F84;
  return sub_227368968(a1, v4, v5, v6);
}

uint64_t sub_227372220(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_227372284;
  return v6(a1);
}

uint64_t sub_227372284()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2273722D0(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  void *v38;
  id v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, char *, uint64_t);
  uint64_t v73;
  unint64_t v74;
  id v75;

  v7 = sub_22758C984();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9, v10, v11, v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7530);
  MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v68) = a2;
  v65 = v3;
  v25 = *(int *)(v20 + 48);
  v64 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = a1 + v64;
  v70 = *(_QWORD *)(v21 + 72);
  v67 = a1;
  swift_bridgeObjectRetain();
  sub_22731A11C(v26, (uint64_t)v23, &qword_2558D7530);
  v66 = v8;
  v27 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v71 = v7;
  v72 = v27;
  v27((unint64_t)v14, v23, v7);
  v69 = v25;
  v28 = *(_QWORD *)&v23[v25];
  v29 = (_QWORD *)*a3;
  v31 = sub_2274DE7E0((uint64_t)v14);
  v32 = v29[2];
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (__OFADD__(v32, v33))
    goto LABEL_24;
  v35 = v30;
  if (v29[3] >= v34)
  {
    if ((v68 & 1) != 0)
    {
      if ((v30 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2275885A8();
      if ((v35 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v42 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
    v43 = v42[6];
    v68 = *(_QWORD *)(v66 + 72);
    v44 = v71;
    v72(v43 + v68 * v31, v14, v71);
    *(_QWORD *)(v42[7] + 8 * v31) = v28;
    v45 = v42[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v42[2] = v47;
    v48 = v24 - 1;
    if (v24 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v49 = v67 + v70 + v64;
    while (1)
    {
      sub_22731A11C(v49, (uint64_t)v23, &qword_2558D7530);
      v72((unint64_t)v14, v23, v44);
      v50 = *(_QWORD *)&v23[v69];
      v51 = (_QWORD *)*a3;
      v53 = sub_2274DE7E0((uint64_t)v14);
      v54 = v51[2];
      v55 = (v52 & 1) == 0;
      v56 = v54 + v55;
      if (__OFADD__(v54, v55))
        break;
      v57 = v52;
      if (v51[3] < v56)
      {
        sub_227582450(v56, 1);
        v58 = sub_2274DE7E0((uint64_t)v14);
        if ((v57 & 1) != (v59 & 1))
          goto LABEL_26;
        v53 = v58;
      }
      if ((v57 & 1) != 0)
        goto LABEL_10;
      v60 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v53 >> 6) + 64) |= 1 << v53;
      v44 = v71;
      v72(v60[6] + v68 * v53, v14, v71);
      *(_QWORD *)(v60[7] + 8 * v53) = v50;
      v61 = v60[2];
      v46 = __OFADD__(v61, 1);
      v62 = v61 + 1;
      if (v46)
        goto LABEL_25;
      v60[2] = v62;
      v49 += v70;
      if (!--v48)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_227582450(v34, v68 & 1);
  v36 = sub_2274DE7E0((uint64_t)v14);
  if ((v35 & 1) == (v37 & 1))
  {
    v31 = v36;
    if ((v35 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v38 = (void *)swift_allocError();
    swift_willThrow();
    v75 = v38;
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5828);
    v40 = swift_dynamicCast();
    v41 = v71;
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v41);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_22758EEB0();
  __break(1u);
LABEL_27:
  v73 = 0;
  v74 = 0xE000000000000000;
  sub_22758EBB0();
  sub_22758E2B0();
  sub_22758ECAC();
  sub_22758E2B0();
  sub_22758ECC4();
  __break(1u);
}

uint64_t sub_22737276C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22745D010(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_227372900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  size_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;

  v2 = a2;
  v47 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v41 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v39 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v40 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v40)
          goto LABEL_47;
        v13 = *(_QWORD *)(v41 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v40)
            goto LABEL_47;
          v13 = *(_QWORD *)(v41 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v40)
              goto LABEL_47;
            v13 = *(_QWORD *)(v41 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v40)
                goto LABEL_47;
              v13 = *(_QWORD *)(v41 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v40)
                {
LABEL_47:
                  sub_2273767D8();
                  return v2;
                }
                v13 = *(_QWORD *)(v41 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v40)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v41 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_22758EF4C();
      swift_bridgeObjectRetain();
      sub_22758E274();
      v19 = sub_22758EF88();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_22758EE50() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v42 = a1;
      v43 = v41;
      v44 = v39;
      v45 = v9;
      v46 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_22758EE50() & 1) == 0);
      v42 = a1;
      v43 = v41;
      v44 = v39;
      v45 = v9;
      v46 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v33 = *(_BYTE *)(v2 + 32);
    v34 = (unint64_t)((1 << v33) + 63) >> 6;
    v35 = 8 * v34;
    if ((v33 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v29, v30, v31, v32);
      memcpy((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v35);
      v36 = sub_227372D68((uint64_t)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v2, v21, &v42);
      swift_release();
      sub_2273767D8();
    }
    else
    {
      v37 = (void *)swift_slowAlloc();
      memcpy(v37, (const void *)(v2 + 56), v35);
      v36 = sub_227372D68((uint64_t)v37, v34, v2, v21, &v42);
      swift_release();
      sub_2273767D8();
      MEMORY[0x2276B3D50](v37, -1, -1);
    }
    return v36;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_227372D68(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_2273B804C(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_22758EF4C();
        swift_bridgeObjectRetain();
        sub_22758E274();
        v22 = sub_22758EF88();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_22758EE50() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_22758EE50() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_227373044(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a2 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2, a3, a4, a5);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_2273731C4((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a2, v6);
    swift_release();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    v10 = sub_2273731C4((uint64_t)v11, v8, a2, v6);
    swift_release();
    MEMORY[0x2276B3D50](v11, -1, -1);
  }
  return v10;
}

uint64_t sub_2273731C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_22758EF4C();
        swift_bridgeObjectRetain();
        sub_22758E274();
        v20 = sub_22758EF88();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_22758EE50() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_22758EE50() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_22758EF4C();
    swift_bridgeObjectRetain();
    sub_22758E274();
    v47 = sub_22758EF88();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_22758EE50() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_2273B804C(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_22758EE50() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_227373700(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v7)(char *);
  char v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v7 = (uint64_t (*)(char *))isStackAllocationSafe;
  v16[1] = *MEMORY[0x24BDAC8D0];
  v8 = *(_BYTE *)(a3 + 32);
  v9 = (unint64_t)((1 << v8) + 63) >> 6;
  v10 = 8 * v9;
  if ((v8 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2, a3, a4, a5);
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_22737387C((_QWORD *)((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a3, v7);
    v12 = v11;
    swift_release();
    if (v5)
      swift_willThrow();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    sub_22737387C((unint64_t *)v13, v9, a3, v7);
    v12 = v14;
    swift_release();
    MEMORY[0x2276B3D50](v13, -1, -1);
  }
  return v12;
}

void sub_22737387C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t (*v33)(char *);
  uint64_t v34;

  v33 = a4;
  v28 = a2;
  v29 = a1;
  v6 = type metadata accessor for Occupant();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8, v9, v10, v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v34 = a3;
  v15 = *(_QWORD *)(a3 + 56);
  v30 = 0;
  v31 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v32 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v19 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v20 = v19 | (v14 << 6);
LABEL_17:
    sub_22730DEEC(*(_QWORD *)(v34 + 48) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Occupant);
    v24 = v33(v13);
    sub_22730DFB0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Occupant);
    if (v4)
      return;
    if ((v24 & 1) != 0)
    {
      *(unint64_t *)((char *)v29 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = __OFADD__(v30++, 1);
      if (v21)
        goto LABEL_30;
    }
  }
  v21 = __OFADD__(v14++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v14 >= v32)
    goto LABEL_27;
  v22 = *(_QWORD *)(v31 + 8 * v14);
  if (v22)
  {
LABEL_16:
    v18 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v14 << 6);
    goto LABEL_17;
  }
  v23 = v14 + 1;
  if (v14 + 1 >= v32)
    goto LABEL_27;
  v22 = *(_QWORD *)(v31 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 2;
  if (v14 + 2 >= v32)
    goto LABEL_27;
  v22 = *(_QWORD *)(v31 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 3;
  if (v14 + 3 >= v32)
  {
LABEL_27:
    v25 = v28;
    v26 = v30;
    v27 = v34;
    swift_retain();
    sub_2273B82E0(v29, v25, v26, v27);
    return;
  }
  v22 = *(_QWORD *)(v31 + 8 * v23);
  if (v22)
  {
LABEL_15:
    v14 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v32)
      goto LABEL_27;
    v22 = *(_QWORD *)(v31 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_227373AD0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2274138C0(*a1, a1[1], a1[2]);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_227373B04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_2274138C0(**(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227373B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227344044;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_227373BCC()
{
  id *v0;

  return swift_deallocObject();
}

id sub_227373C08()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = (void *)v0[2];
  v2 = (void *)v0[3];
  v4 = (void *)v0[4];
  v3 = (void *)v0[5];
  objc_msgSend(v1, sel_removeFromParentNode);
  objc_msgSend(v2, sel_removeFromParentNode);
  objc_msgSend(v4, sel_removeFromParentNode);
  return objc_msgSend(v3, sel_removeFromParentNode);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_227373C74()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227373C98()
{
  sub_2273697E4();
}

uint64_t sub_227373CB8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227373CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_227344044;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_227373D54()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227373D80(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_227373E08(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 48);
    v8 = sub_22758C984();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a2, v8);
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_227373EAC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_227373F14;
  return v5(v2 + 32);
}

uint64_t sub_227373F14()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_227373F64(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_227376484, (uint64_t)&type metadata for ObjectUnderstandingFeedback, (void (*)(char *, _QWORD))sub_22745AC0C);
}

uint64_t sub_227373F80(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7588);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_5;
    }
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v16;
    if (!v23)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v27)
        return swift_release();
      v23 = *(_QWORD *)(v26 + 8 * v16);
      if (!v23)
      {
        v16 = v22 + 2;
        if (v22 + 2 >= v27)
          return swift_release();
        v23 = *(_QWORD *)(v26 + 8 * v16);
        if (!v23)
        {
          v16 = v22 + 3;
          if (v22 + 3 >= v27)
            return swift_release();
          v23 = *(_QWORD *)(v26 + 8 * v16);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v14 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_5:
    v19 = *(_QWORD *)(a1 + 48);
    v20 = sub_22758C984();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v10, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v20);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v18);
    *(_QWORD *)&v10[*(int *)(v4 + 48)] = v21;
    swift_bridgeObjectRetain();
    a2(v10, v21);
    result = sub_22731A1A4((uint64_t)v10, &qword_2558D7588);
  }
  v24 = v22 + 4;
  if (v24 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v16 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v27)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v16);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2273741B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for OU3DObjectType(0);
  sub_2273096F0(&qword_2558D5380, (uint64_t (*)(uint64_t))type metadata accessor for OU3DObjectType, (uint64_t)&unk_227596028);
  result = sub_22758E5C8();
  v7 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_22745AC20(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_227374254(uint64_t a1, uint64_t a2, float32x4_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  float32x4_t v18;
  unint64_t v19;
  unint64_t v20;
  float32x4_t v21;
  float32x4_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  float32x4_t v27;
  char v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (!v3)
    return v4;
  v39 = MEMORY[0x24BEE4AF8];
  sub_227324918(0, v3, 0);
  v4 = v39;
  v7 = sub_2273AB310(a1);
  v9 = v8;
  v11 = v10 & 1;
  v26 = (uint64_t *)(a2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedObjectsOccupants);
  result = swift_beginAccess();
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_14;
    v28 = v11;
    v13 = *(_QWORD *)(a1 + 48) + 80 * v7;
    v32 = *(_OWORD *)(v13 + 32);
    v33 = *(_OWORD *)(v13 + 16);
    v30 = *(_OWORD *)(v13 + 64);
    v31 = *(_OWORD *)(v13 + 48);
    v14 = v4;
    v15 = *v26;
    v34 = *(id *)v13;
    v35 = v33;
    v36 = v32;
    v37 = v31;
    v38 = v30;
    v16 = v34;
    swift_bridgeObjectRetain();
    v17 = Dictionary<>.occupants(of:)(&v34, v15);
    swift_bridgeObjectRelease();
    v34 = v16;
    v35 = v33;
    v36 = v32;
    v37 = v31;
    v38 = v30;
    sub_2275206E8(a3);
    v4 = v14;
    v27 = v18;

    v39 = v14;
    v20 = *(_QWORD *)(v14 + 16);
    v19 = *(_QWORD *)(v14 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_227324918(v19 > 1, v20 + 1, 1);
      v4 = v39;
    }
    v21 = vsubq_f32(a3, v27);
    v22 = vmulq_f32(v21, v21);
    *(_QWORD *)(v4 + 16) = v20 + 1;
    v23 = v4 + 96 * v20;
    *(_QWORD *)(v23 + 32) = v16;
    *(_OWORD *)(v23 + 48) = v33;
    *(_OWORD *)(v23 + 64) = v32;
    *(_OWORD *)(v23 + 80) = v31;
    *(_OWORD *)(v23 + 96) = v30;
    *(_QWORD *)(v23 + 112) = v17;
    *(float *)(v23 + 120) = sqrtf(vaddq_f32(v22, (float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2)).f32[0]);
    result = sub_2273AB3B4(v7, v9, v28 & 1, a1);
    v7 = result;
    v9 = v24;
    v11 = v25 & 1;
    if (!--v3)
    {
      sub_22737675C(result, v24, v25 & 1);
      return v4;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2273744BC(void *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  double v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t result;
  id v52;
  void *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  char v65;
  id v66;
  id v67;
  id v68;
  char v69;
  id v70;
  id v71;
  unsigned __int8 v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  float v82;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA2C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227596570;
  *(_QWORD *)(inited + 32) = sub_22758E1E4();
  *(_QWORD *)(inited + 40) = v4;
  v5 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 18;
  *(_QWORD *)(inited + 80) = sub_22758E1E4();
  *(_QWORD *)(inited + 88) = v6;
  *(_QWORD *)(inited + 120) = v5;
  *(_QWORD *)(inited + 96) = 1;
  *(_QWORD *)(inited + 128) = sub_22758E1E4();
  *(_QWORD *)(inited + 136) = v7;
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 144) = 0;
  sub_22731D950(inited);
  if (qword_2540B87B8 != -1)
    goto LABEL_32;
  while (1)
  {
    v8 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape;
    swift_beginAccess();
    v79 = *(_QWORD *)v8;
    v80 = *(_QWORD *)(v8 + 8);
    LOBYTE(v81) = *(_BYTE *)(v8 + 16);
    v9 = qword_2540B9100;
    v10 = swift_bridgeObjectRetain();
    if (v9 != -1)
      v10 = swift_once();
    MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if (v77 > 1u)
    {
      objc_msgSend(a1, sel_position);
      v21 = v26;
      v23 = v27;
      v25 = v28;
    }
    else
    {
      v15 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer);
      sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
      v16 = v15;
      sub_22758E7F0();
      sub_22758E7F0();
      sub_22758E7F0();
      sub_22758E7F0();
      sub_22758E7F0();
      *(float *)&v17 = (float)(*(float *)&v80 + v82) * 0.5;
      *(float *)&v18 = (float)(*(float *)&v79 + *((float *)&v80 + 1)) * 0.5;
      LODWORD(v19) = v81;
      objc_msgSend(v16, sel_convertPosition_toNode_, 0, v18, v19, v17);
      v21 = v20;
      v23 = v22;
      v25 = v24;

    }
    v29 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_scene);
    if (!v29)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return 0;
    }
    v30 = objc_msgSend(v29, sel_rootNode);
    v31 = *(void **)(v2 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointer);
    sub_22730BA80(0, (unint64_t *)&qword_2558DD0E0);
    v32 = v31;
    sub_22758E7F0();
    sub_22758E7F0();
    sub_22758E7F0();
    sub_22758E7F0();
    sub_22758E7F0();
    *(float *)&v33 = (float)(*(float *)&v80 + v82) * 0.5;
    *(float *)&v34 = (float)(*(float *)&v79 + *((float *)&v80 + 1)) * 0.5;
    LODWORD(v35) = HIDWORD(v79);
    objc_msgSend(v32, sel_convertPosition_toNode_, 0, v34, v35, v33);
    v37 = v36;
    v39 = v38;
    v41 = v40;

    v42 = (void *)sub_22758E10C();
    swift_bridgeObjectRelease();
    LODWORD(v43) = v37;
    LODWORD(v44) = v39;
    LODWORD(v45) = v41;
    LODWORD(v46) = v21;
    LODWORD(v47) = v23;
    LODWORD(v48) = v25;
    v49 = objc_msgSend(v30, sel_hitTestWithSegmentFromPoint_toPoint_options_, v42, v43, v44, v45, v46, v47, v48);

    sub_22730BA80(0, (unint64_t *)&unk_2558D7578);
    v2 = sub_22758E3DC();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_22758ECE8();
      v50 = result;
      if (!result)
      {
LABEL_34:
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    else
    {
      v50 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v50)
        goto LABEL_34;
    }
    if ((v2 & 0xC000000000000001) != 0)
    {
      v52 = (id)MEMORY[0x2276B2BEC](0, v2);
    }
    else
    {
      if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v52 = *(id *)(v2 + 32);
    }
    v53 = v52;
    swift_bridgeObjectRelease();
    v54 = (uint64_t *)(qword_2540BCDD0
                    + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__objectPointerShape);
    v55 = swift_beginAccess();
    v77 = *v54;
    MEMORY[0x24BDAC7A8](v55, v56, v57, v58, v59);
    swift_bridgeObjectRetain();
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    if (!v78)
      break;
    v75 = v53;
    sub_22730BA80(0, (unint64_t *)&qword_2540BA060);
    v60 = 4;
    while (1)
    {
      v61 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2276B2BEC](v60 - 4, v2) : *(id *)(v2 + 8 * v60);
      v62 = v61;
      v63 = v60 - 3;
      if (__OFADD__(v60 - 4, 1))
        break;
      v64 = objc_msgSend(v61, sel_node);
      v65 = sub_22758E94C();

      if ((v65 & 1) != 0)
      {

        goto LABEL_23;
      }
      v66 = objc_msgSend(v62, sel_node);
      v67 = objc_msgSend(v66, sel_categoryBitMask);

      if (v67 != (id)16)
      {
        ++v60;
        if (v63 != v50)
          continue;
      }

      swift_bridgeObjectRelease();
      return 1;
    }
    __break(1u);
LABEL_32:
    swift_once();
  }
  swift_bridgeObjectRelease();
  sub_22730BA80(0, (unint64_t *)&qword_2540BA060);
  v68 = objc_msgSend(v53, sel_node);
  v69 = sub_22758E94C();

  if ((v69 & 1) != 0)
  {

    return 0;
  }
  v70 = objc_msgSend(v53, sel_node);
  v71 = objc_msgSend(v70, sel_physicsBody);

  if (v71 && (v72 = objc_msgSend(v71, sel_categoryBitMask), v71, (v72 & 2) != 0))
  {

    return 1;
  }
  else
  {
    v73 = objc_msgSend(v53, sel_node, v75);
    v74 = objc_msgSend(v73, sel_categoryBitMask);

    return v74 == (id)16;
  }
}

uint64_t sub_227374C50(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  id v8[11];
  uint64_t v9;
  _OWORD v10[5];

  v2 = *(_QWORD *)(a1 + 16);
  sub_2273766A0();
  result = sub_22758E5C8();
  v9 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[3];
      v10[2] = v4[2];
      v10[3] = v5;
      v10[4] = v4[4];
      v7 = *v4;
      v6 = v4[1];
      v4 += 5;
      v10[0] = v7;
      v10[1] = v6;
      sub_227375754((id *)v10);
      sub_22745AE48((uint64_t)v8, (id *)v10);

      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_227374CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  _OWORD v9[5];
  uint64_t v10;
  __int128 v11[4];
  _OWORD v12[2];

  v2 = *(_QWORD *)(a1 + 16);
  sub_2273766E4();
  result = sub_22758E5C8();
  v10 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[3];
      v11[2] = v4[2];
      v11[3] = v5;
      v12[0] = v4[4];
      *(_OWORD *)((char *)v12 + 12) = *(__int128 *)((char *)v4 + 76);
      v6 = *v4;
      v7 = v4[1];
      v4 += 6;
      v11[0] = v6;
      v11[1] = v7;
      sub_227376728((id *)v11);
      sub_22745BB84(v9, v11);
      v8 = *(void **)&v9[0];
      swift_bridgeObjectRelease();

      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

_QWORD *sub_227374D90(unint64_t a1, float32x4_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  _QWORD *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int v30;
  uint64_t v31;

  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_22758ECE8())
  {
    v4 = a1 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v6 = 4;
    v31 = v3;
    while (1)
    {
      v8 = v4 ? (id)MEMORY[0x2276B2BEC](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      sub_22736FD10(v8, &v24, a2);

      if ((unint64_t)v25 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        v22 = v25;
        v11 = v24;
        v20 = v27;
        v21 = v26;
        v18 = v29;
        v19 = v28;
        v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_2273A5344(0, v5[2] + 1, 1, v5);
        v14 = v5[2];
        v13 = v5[3];
        v15 = v22;
        if (v14 >= v13 >> 1)
        {
          v16 = sub_2273A5344((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
          v15 = v22;
          v5 = v16;
        }
        v5[2] = v14 + 1;
        v7 = &v5[12 * v14];
        v7[4] = v11;
        *(_OWORD *)(v7 + 5) = v15;
        *(_OWORD *)(v7 + 7) = v21;
        *(_OWORD *)(v7 + 9) = v20;
        *(_OWORD *)(v7 + 11) = v19;
        *(_OWORD *)(v7 + 13) = v18;
        *((_DWORD *)v7 + 30) = v12;
        v3 = v31;
        v4 = a1 & 0xC000000000000001;
      }
      ++v6;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_227374F80(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_2273765E4, (uint64_t)&type metadata for TextDetectionFeedback, (void (*)(char *, _QWORD))sub_22745B19C);
}

uint64_t sub_227374F9C(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_2273764C8, (uint64_t)&type metadata for DoorDetectionFeedback, (void (*)(char *, _QWORD))sub_22745B1B0);
}

uint64_t sub_227374FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v2 = sub_22758C984();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v9 = MEMORY[0x24BDAC7A8](v2, v5, v6, v7, v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12, v13, v14, v15);
  v17 = (char *)&v30 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5BA0);
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a1 + 16);
  sub_2273096F0((unint64_t *)&qword_2558D5D40, v3, MEMORY[0x24BDCEA88]);
  v31 = sub_22758E5C8();
  if (v25)
  {
    v26 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v30 = *(_QWORD *)(v4 + 72);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v27(v24, v26, v2);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v28(v24, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v24, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v24, v2);
      sub_22745B928((uint64_t)v17, v11);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v2);
      v26 += v30;
      if (!--v25)
        goto LABEL_7;
    }
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v28(v24, 1, 1, v2);
  }
  return v31;
}

uint64_t sub_227375188(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void *v5[2];
  uint64_t v6;
  _BYTE v7[96];

  v2 = *(_QWORD *)(a1 + 16);
  sub_227376A9C();
  result = sub_22758E5C8();
  v6 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      sub_227376AE0(v4, (uint64_t)v7);
      sub_227376B1C((uint64_t)v7);
      sub_22745B1C4((uint64_t)v5, (uint64_t)v7);
      sub_227376A18(v5[0], (uint64_t)v5[1]);
      v4 += 96;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_22737523C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_22758E5C8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_22745C250(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2273752D0(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_227376628, (uint64_t)&type metadata for DetectionModePauseFeedback, (void (*)(char *, _QWORD))sub_22745C3FC);
}

uint64_t sub_2273752EC(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_22737650C, (uint64_t)&type metadata for DetectionFeedback, (void (*)(char *, _QWORD))sub_22745C410);
}

uint64_t sub_227375308(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_227376440, (uint64_t)&type metadata for ImageCaptionFeedback, (void (*)(char *, _QWORD))sub_22745C424);
}

uint64_t sub_227375324(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_22758E5C8();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_227375398(uint64_t a1)
{
  return sub_227375324(a1, (void (*)(void))sub_2273763FC, (uint64_t)&type metadata for PointSpeakFeedback, (void (*)(char *, _QWORD))sub_22745C588);
}

id sub_2273753B4(unint64_t a1)
{
  uint64_t v1;
  id result;
  id *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  unint64_t v22;
  unint64_t v23;
  float32x4_t *v24;
  id v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  char v34;

  if (qword_2540B87B8 != -1)
    goto LABEL_19;
  while (1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    result = (id)swift_release();
    if ((v34 & 1) != 0)
      return result;
    v4 = (id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_arService)
              + OBJC_IVAR____TtC16MagnifierSupport12MAGARService_arSession);
    swift_beginAccess();
    result = *v4;
    if (!*v4)
      return result;
    result = objc_msgSend(result, sel_currentFrame);
    if (!result)
      return result;
    v5 = result;
    if (a1 >> 62)
    {
      v25 = result;
      swift_bridgeObjectRetain();
      v6 = sub_22758ECE8();
      if (!v6)
      {
LABEL_21:
        v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_22:

        swift_bridgeObjectRelease();
        sub_22736B4F4((uint64_t)v8);

        return (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v7 = result;
      swift_bridgeObjectRetain();
      if (!v6)
        goto LABEL_21;
    }
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v9 = 4;
    while (1)
    {
      v10 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2276B2BEC](v9 - 4, a1) : *(id *)(a1 + 8 * v9);
      v11 = v10;
      v1 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v12 = v5;
      v13 = v11;
      objc_msgSend(v12, sel_referenceOriginTransform);
      v29 = v14;
      v30 = v15;
      v32 = v16;
      v33 = v17;
      ARVisionToRenderingCoordinateTransform();
      v26 = v18;
      v27 = v19;
      v28 = v20;
      v31 = v21;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_2273A5464(0, v8[2] + 1, 1, v8);
      v23 = v8[2];
      v22 = v8[3];
      if (v23 >= v22 >> 1)
        v8 = sub_2273A5464((_QWORD *)(v22 > 1), v23 + 1, 1, v8);
      v8[2] = v23 + 1;
      v24 = (float32x4_t *)&v8[10 * v23];
      v24[2].i64[0] = (uint64_t)v13;
      v24[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v26.f32[0]), v30, *(float32x2_t *)v26.f32, 1), v32, v26, 2), v33, v26, 3);
      v24[4] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v27.f32[0]), v30, *(float32x2_t *)v27.f32, 1), v32, v27, 2), v33, v27, 3);
      v24[5] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v28.f32[0]), v30, *(float32x2_t *)v28.f32, 1), v32, v28, 2), v33, v28, 3);
      v24[6] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v31.f32[0]), v30, *(float32x2_t *)v31.f32, 1), v32, v31, 2), v33, v31, 3);
      ++v9;
      if (v1 == v6)
        goto LABEL_22;
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
}

uint64_t sub_227375698()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2273756D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_227344044;
  return sub_22736D6D8(a1, v4, v5, v6, v7, v8);
}

id *sub_227375754(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_22737577C(id *a1)
{

  return a1;
}

void sub_2273757A4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  _BYTE *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  float v38;
  float v39;
  id v40;
  float v41;
  float v42;
  id v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _BYTE *v47;
  int v48;
  _BYTE v49[4];
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  __int128 v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = sub_22758E694();
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v66 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22758C984();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v62 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v14 = sub_22758ECE8();
    if (v14)
      goto LABEL_3;
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      v60 = OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_detectedPlanesRootNode;
      v61 = a1 & 0xC000000000000001;
      v58 = *MEMORY[0x24BEDF2B8];
      v56 = *MEMORY[0x24BEDF2C8];
      v55 = *MEMORY[0x24BEDF2D0];
      v54 = *MEMORY[0x24BEDF2E8];
      v53 = *MEMORY[0x24BEDF2D8];
      v15 = 4;
      v52 = *MEMORY[0x24BEDF2C0];
      v51 = *MEMORY[0x24BEDF2E0];
      v50 = *MEMORY[0x24BEDF2B0];
      v59 = a1;
      while (1)
      {
        if (v61)
          v18 = (id)MEMORY[0x2276B2BEC](v15 - 4, a1);
        else
          v18 = *(id *)(a1 + 8 * v15);
        v19 = v18;
        if (__OFADD__(v15 - 4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        objc_opt_self();
        v20 = swift_dynamicCastObjCClass();
        if (!v20)
        {
          swift_bridgeObjectRelease();

          return;
        }
        v21 = (void *)v20;
        v69 = v15 - 3;
        v22 = v14;
        v23 = *(void **)(v65 + v60);
        v24 = v19;
        v25 = v23;
        v26 = objc_msgSend(v21, sel_identifier);
        v27 = v62;
        sub_22758C96C();

        sub_22758C948();
        (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v27, v64);
        v28 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(v25, sel_childNodeWithName_recursively_, v28, 0);

        if (!v29)
        {
          swift_bridgeObjectRelease();
LABEL_31:

          return;
        }
        type metadata accessor for Plane();
        v30 = swift_dynamicCastClass();
        if (!v30)
        {
          swift_bridgeObjectRelease();

          goto LABEL_31;
        }
        v31 = (char *)v30;
        v32 = OBJC_IVAR____TtC16MagnifierSupport5Plane_extentNode;
        v33 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v30
                                                                    + OBJC_IVAR____TtC16MagnifierSupport5Plane_extentNode), sel_geometry));
        if (v33)
        {
          v34 = v33;
          objc_opt_self();
          v35 = swift_dynamicCastObjCClass();
          if (v35)
          {
            v36 = (void *)v35;
            v37 = objc_msgSend(v21, sel_planeExtent);
            objc_msgSend(v37, sel_width);
            v39 = v38;

            objc_msgSend(v36, sel_setWidth_, v39);
            v40 = objc_msgSend(v21, sel_planeExtent);
            objc_msgSend(v40, sel_height);
            v42 = v41;

            objc_msgSend(v36, sel_setHeight_, v42);
            v43 = *(id *)&v31[v32];
            objc_msgSend(v21, sel_center);
            v45 = v44;
            HIDWORD(v45) = HIDWORD(v57);
            v57 = v45;
            objc_msgSend(v43, sel_setSimdPosition_, *(double *)&v44);

            v34 = v43;
          }
          v14 = v22;

        }
        v46 = v69;
        v47 = v66;
        sub_22758E6A0();
        v48 = (*(uint64_t (**)(_BYTE *, uint64_t))(v67 + 88))(v47, v68);
        if (v48 == v58)
          goto LABEL_4;
        if (v48 == v56)
        {
          v16 = 16;
          goto LABEL_6;
        }
        v16 = 16;
        if (v48 == v55 || v48 == v54)
          goto LABEL_6;
        if (v48 != v53)
          break;
LABEL_5:
        v16 = 1;
LABEL_6:
        objc_msgSend(*(id *)&v31[v32], sel_setCategoryBitMask_, v16);
        v17 = v29;
        objc_msgSend(v24, sel_transform);
        objc_msgSend(v31, sel_setSimdTransform_);

        ++v15;
        a1 = v59;
        if (v46 == v14)
          goto LABEL_35;
      }
      v16 = 1;
      if (v48 == v52)
        goto LABEL_6;
      v16 = 16;
      if (v48 == v51 || v48 == v50)
        goto LABEL_6;
LABEL_4:
      (*(void (**)(_BYTE *, uint64_t))(v67 + 8))(v66, v68);
      goto LABEL_5;
    }
  }
LABEL_35:
  swift_bridgeObjectRelease();
}

id sub_227375D08@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC16MagnifierSupport29MAGObjectUnderstandingService_objectPointerParentNode);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for MAGObjectUnderstandingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.objectPointerParentNode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.objectPointerParentNode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.objectPointerParentNode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.__allocating_init(arService:eventHandler:pulseFeedbackProcessor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.startService(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x210))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.stopService()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x218))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.understandObjects(frame:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x228))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.understandObjects(spatialMappingPointClouds:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x230))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.session(_:didUpdateDetectedObjects:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x238))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.findObject(named:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x248))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.updateSeatOccupancy(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x250))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.checkContactsWithObjectPointer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x278))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.handleContactWithObject(contact:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x280))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.addAnchors(_:anchors:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x298))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.updateAnchors(_:anchors:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of MAGObjectUnderstandingService.removeAnchors(_:anchors:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2A8))();
}

uint64_t *sub_227375F14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22758C984();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22758C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_227375FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_22758C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_227376018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22758C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_227376094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22758C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_227376110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22758C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_22737618C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22758C984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22758C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_227376208()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227376214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_22758C984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_22758C930();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_227376288()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227376294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_22758C984();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_22758C930();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for Occupant()
{
  uint64_t result;

  result = qword_2558D7490;
  if (!qword_2558D7490)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22737634C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22758C984();
  if (v1 <= 0x3F)
  {
    result = sub_22758C930();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2273763D0()
{
  return sub_2273096F0(&qword_2558D74C8, (uint64_t (*)(uint64_t))type metadata accessor for Occupant, (uint64_t)&unk_22759884C);
}

unint64_t sub_2273763FC()
{
  unint64_t result;

  result = qword_2558D74D0;
  if (!qword_2558D74D0)
  {
    result = MEMORY[0x2276B3C78](&unk_22759E26C, &type metadata for PointSpeakFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D74D0);
  }
  return result;
}

unint64_t sub_227376440()
{
  unint64_t result;

  result = qword_2558D74D8;
  if (!qword_2558D74D8)
  {
    result = MEMORY[0x2276B3C78](&unk_22759E6F0, &type metadata for ImageCaptionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D74D8);
  }
  return result;
}

unint64_t sub_227376484()
{
  unint64_t result;

  result = qword_2558D74E0;
  if (!qword_2558D74E0)
  {
    result = MEMORY[0x2276B3C78](&unk_227594074, &type metadata for ObjectUnderstandingFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D74E0);
  }
  return result;
}

unint64_t sub_2273764C8()
{
  unint64_t result;

  result = qword_2558D74E8;
  if (!qword_2558D74E8)
  {
    result = MEMORY[0x2276B3C78](&unk_2275971B0, &type metadata for DoorDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D74E8);
  }
  return result;
}

unint64_t sub_22737650C()
{
  unint64_t result;

  result = qword_2558D74F0;
  if (!qword_2558D74F0)
  {
    result = MEMORY[0x2276B3C78](&unk_227598F80, &type metadata for DetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D74F0);
  }
  return result;
}

uint64_t sub_227376550()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227376574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227344044;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2558D74F8 + dword_2558D74F8))(a1, v4);
}

unint64_t sub_2273765E4()
{
  unint64_t result;

  result = qword_2558D7510;
  if (!qword_2558D7510)
  {
    result = MEMORY[0x2276B3C78](&unk_227596900, &type metadata for TextDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D7510);
  }
  return result;
}

unint64_t sub_227376628()
{
  unint64_t result;

  result = qword_2558D7518;
  if (!qword_2558D7518)
  {
    result = MEMORY[0x2276B3C78](&unk_22759B024, &type metadata for DetectionModePauseFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D7518);
  }
  return result;
}

uint64_t sub_22737666C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227376698()
{
  uint64_t v0;

  return sub_22736C434(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_2273766A0()
{
  unint64_t result;

  result = qword_2558DD0F0;
  if (!qword_2558DD0F0)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for DetectedObject, &type metadata for DetectedObject);
    atomic_store(result, (unint64_t *)&qword_2558DD0F0);
  }
  return result;
}

unint64_t sub_2273766E4()
{
  unint64_t result;

  result = qword_2558D7560;
  if (!qword_2558D7560)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for DetectedFurniture, &type metadata for DetectedFurniture);
    atomic_store(result, (unint64_t *)&qword_2558D7560);
  }
  return result;
}

id *sub_227376728(id *a1)
{
  id v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22737675C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_227376768@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_227371F08(a1, **(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_227376784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2274DDF24(a1, a2, *(id **)(v2 + 16));
}

uint64_t sub_22737678C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_227523244(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2273767A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22736E958(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void simd_slerp(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v3;
  float32x4_t v4;
  int8x16_t v5;

  v3 = vmulq_f32(a1, a2);
  v4 = (float32x4_t)vextq_s8((int8x16_t)v3, (int8x16_t)v3, 8uLL);
  *(float32x2_t *)v3.f32 = vadd_f32(*(float32x2_t *)v3.f32, *(float32x2_t *)v4.f32);
  v3.f32[0] = vaddv_f32(*(float32x2_t *)v3.f32);
  v4.i32[0] = 0;
  v5 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v3, v4)), 0);
  _simd_slerp_internal(a1, (float32x4_t)vbslq_s8(v5, (int8x16_t)vnegq_f32(a2), (int8x16_t)a2), *(float *)v5.i32);
}

uint64_t sub_2273767D8()
{
  return swift_release();
}

uint64_t sub_2273767E0()
{
  type metadata accessor for Occupant();
  return sub_22758C8B8() & 1;
}

void *sub_227376834(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  if (a12 != 255)
    return sub_22737685C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return result;
}

void *sub_22737685C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (a12 != 2)
  {
    if (a12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (a12)
        return result;

    }
  }
  return (void *)swift_bridgeObjectRelease();
}

void *sub_2273768B8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  id v12;

  if (a12 != 2)
  {
    if (a12 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      if (a12)
        return result;
      v12 = result;
    }
  }
  return (void *)swift_bridgeObjectRetain();
}

uint64_t sub_227376914()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  sub_22737685C(*(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  return swift_deallocObject();
}

uint64_t sub_227376974(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227344044;
  return sub_22736B0C8(a1, v4, v5, v6, (uint64_t)(v1 + 6));
}

uint64_t sub_2273769F0(void *a1, uint64_t a2)
{
  id v2;

  if ((a2 & 0x8000000000000000) == 0)
    v2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_227376A18(void *a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)

  return swift_bridgeObjectRelease();
}

uint64_t sub_227376A40(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 80);

  return a1;
}

void *sub_227376A70(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_227376A9C()
{
  unint64_t result;

  result = qword_2558D75A0;
  if (!qword_2558D75A0)
  {
    result = MEMORY[0x2276B3C78](&protocol conformance descriptor for FurnitureDetectionResult, &type metadata for FurnitureDetectionResult);
    atomic_store(result, (unint64_t *)&qword_2558D75A0);
  }
  return result;
}

uint64_t sub_227376AE0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy92_16(a2, a1);
  return a2;
}

uint64_t sub_227376B1C(uint64_t a1)
{
  sub_2273769F0(*(void **)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_227376B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227344044;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2558D75A8 + dword_2558D75A8))(a1, v4);
}

uint64_t sub_227376BE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227376C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_227344044;
  return sub_2273709B4(a1, v1);
}

void _simd_slerp_internal(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v4;
  int8x16_t v5;
  float32x4_t v6;
  int8x16_t v7;
  float v8;
  float v9;
  float v10;

  v4 = vsubq_f32(a1, a2);
  v5 = (int8x16_t)vmulq_f32(v4, v4);
  v6 = vaddq_f32(a1, a2);
  v7 = (int8x16_t)vmulq_f32(v6, v6);
  v8 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v5.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)))));
  v9 = v8 + v8;
  if ((float)(v8 + v8) != 0.0)
    sinf(v9);
  if ((float)(v9 * 0.75) != 0.0)
    sinf(v9 * 0.75);
  v10 = v9 * 0.25;
  if (v10 != 0.0)
    sinf(v10);
}

uint64_t sub_227376DB8@<X0>(_BYTE *a1@<X8>)
{
  return sub_22737678C(a1);
}

uint64_t sub_227376DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v45 = a1;
  v3 = type metadata accessor for MFColorPicker();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6, v7, v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7718);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12, v13, v14, v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7720);
  MEMORY[0x24BDAC7A8](v18, v19, v20, v21, v22);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22737922C(v2, (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26 = swift_allocObject();
  sub_227379340((uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  v46 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7728);
  sub_22730BB7C((unint64_t *)&unk_2558D7730, &qword_2558D7728, MEMORY[0x24BDF4700]);
  sub_22758DD64();
  v27 = sub_22758DCA4();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v17, v10);
  *(_QWORD *)&v24[*(int *)(v18 + 36)] = v27;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  v28 = *(_QWORD *)(v2 + 24);
  LOBYTE(v47) = *(_BYTE *)(v2 + 16);
  *((_QWORD *)&v47 + 1) = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  sub_22758DD58();
  v29 = v49;
  v30 = v50;
  v44 = v51;
  v31 = *(_QWORD *)(v2 + 48);
  v47 = *(_OWORD *)(v2 + 32);
  v48 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7640);
  sub_22758DDDC();
  v32 = v49;
  v33 = v50;
  v34 = v51;
  v35 = *(_QWORD *)(v2 + 8);
  v43 = *(_QWORD *)v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v36 = sub_22758DE9C();
  v38 = v37;
  v39 = v45;
  sub_22731A11C((uint64_t)v24, v45, &qword_2558D7720);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v40 = v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2558D7740) + 36);
  *(_QWORD *)v40 = v29;
  *(_QWORD *)(v40 + 8) = v30;
  *(_BYTE *)(v40 + 16) = v44;
  *(_QWORD *)(v40 + 24) = v32;
  *(_QWORD *)(v40 + 32) = v33;
  *(_QWORD *)(v40 + 40) = v34;
  *(_BYTE *)(v40 + 48) = 1;
  *(_QWORD *)(v40 + 56) = v43;
  *(_QWORD *)(v40 + 64) = v35;
  *(_QWORD *)(v40 + 72) = v36;
  *(_QWORD *)(v40 + 80) = v38;
  return sub_22731A1A4((uint64_t)v24, &qword_2558D7720);
}

uint64_t sub_2273770E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D6760);
  return sub_22758DD4C();
}

uint64_t sub_227377134@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_22758D74C();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7748);
  return sub_227377180(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_227377180@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7750);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v17 = (char *)&v22 - v16;
  *(_QWORD *)v17 = sub_22758D6C8();
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7758);
  sub_22737729C(a1, (uint64_t)&v17[*(int *)(v18 + 44)]);
  sub_22731A11C((uint64_t)v17, (uint64_t)v10, &qword_2558D7750);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7760);
  sub_22731A11C((uint64_t)v10, a2 + *(int *)(v19 + 48), &qword_2558D7750);
  v20 = a2 + *(int *)(v19 + 64);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  sub_22731A1A4((uint64_t)v17, &qword_2558D7750);
  return sub_22731A1A4((uint64_t)v10, &qword_2558D7750);
}

void sub_22737729C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  id v63;
  uint64_t ObjCClassFromMetadata;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  void (*v74)(uint64_t, uint64_t);
  id v75;
  char v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD v119[3];
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int16 v147;
  __int128 v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160;
  unsigned __int8 v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  unsigned __int8 v165;
  uint64_t v166;
  uint64_t v167;

  v123 = a2;
  v3 = sub_22758DD10();
  v121 = *(_QWORD *)(v3 - 8);
  v122 = v3;
  MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
  v120 = (char *)v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22758D47C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v130 = (uint64_t)v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7768);
  MEMORY[0x24BDAC7A8](v127, v16, v17, v18, v19);
  v21 = (char *)v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7770);
  v22 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128, v23, v24, v25, v26);
  v28 = (char *)v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7778);
  MEMORY[0x24BDAC7A8](v125, v29, v30, v31, v32);
  v34 = (char *)v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D7780);
  MEMORY[0x24BDAC7A8](v126, v35, v36, v37, v38);
  v40 = (char *)v119 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v42, v43, v44, v45);
  v133 = (uint64_t)v119 - v46;
  v129 = a1;
  v47 = *a1;
  v48 = a1[1];
  *(_QWORD *)&v148 = v47;
  *((_QWORD *)&v148 + 1) = v48;
  sub_22731236C();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v148 = sub_22758DAE8();
  *((_QWORD *)&v148 + 1) = v49;
  LOBYTE(v149) = v50 & 1;
  v150 = v51;
  v52 = *MEMORY[0x24BDECF38];
  v124 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v21, v52, v9);
  sub_2273793B8();
  v132 = v9;
  if ((sub_22758E190() & 1) != 0)
  {
    sub_22730BB7C(&qword_2558D7798, &qword_2558D7768, MEMORY[0x24BEE2C50]);
    sub_22758DB60();
    sub_22731A1A4((uint64_t)v21, &qword_2558D7768);
    sub_227335548(v148, *((uint64_t *)&v148 + 1), v149);
    swift_bridgeObjectRelease();
    v53 = v128;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v34, v28, v128);
    *(_WORD *)&v34[*(int *)(v125 + 36)] = 256;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v53);
    KeyPath = swift_getKeyPath();
    sub_22731A11C((uint64_t)v34, (uint64_t)v40, &qword_2558D7778);
    v55 = &v40[*(int *)(v126 + 36)];
    *(_QWORD *)v55 = KeyPath;
    v55[8] = 0;
    sub_22731A1A4((uint64_t)v34, &qword_2558D7778);
    sub_22731A160((uint64_t)v40, v133, (uint64_t *)&unk_2558D7780);
    v56 = v129[6];
    v148 = *((_OWORD *)v129 + 2);
    v149 = v56;
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7640);
    MEMORY[0x2276B1DD0](&v134, v57);
    v58 = v134;
    v131 = v40;
    if (v134)
    {
      type metadata accessor for MFColorPicker();
      swift_retain();
      v59 = v130;
      sub_22753F394(v130);
      v60 = sub_22758D470();
      v61 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v62 = v132;
      v61(v59, v132);
      if ((v60 & 1) != 0)
      {
        v63 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v63, sel_bounds);

      }
      sub_22753F394(v59);
      v76 = sub_22758D470();
      v61(v59, v62);
      if ((v76 & 1) != 0)
      {
        v77 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v77, sel_bounds);

      }
      sub_22758DE9C();
      sub_22758D3C8();
      v78 = v162;
      v79 = v163;
      v80 = v164;
      v81 = v165;
      v82 = v166;
      v83 = v167;
      v84 = sub_22758D9D4();
      sub_22758D2E4();
      v134 = v58;
      v135 = 256;
      v136 = v78;
      v137 = v79;
      v138 = v80;
      v139 = v81;
      v140 = v82;
      v141 = v83;
      v142 = v84;
      v143 = v85;
      v144 = v86;
      v145 = v87;
      v146 = v88;
      v147 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D77A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D77A8);
      sub_22733C944(&qword_2558D77B0, &qword_2558D77A0, (uint64_t (*)(void))sub_227379408);
      sub_22733C944(&qword_2558D77D8, &qword_2558D77A8, (uint64_t (*)(void))sub_22733C8C4);
      sub_22758D830();
      swift_release();
LABEL_14:
      v132 = *((_QWORD *)&v148 + 1);
      v103 = v148;
      v105 = v149;
      v104 = v150;
      v106 = v151;
      v107 = v152;
      v109 = v153;
      v108 = v154;
      v129 = v156;
      v130 = v155;
      v127 = v158;
      v128 = v157;
      v126 = v159;
      LODWORD(v125) = v160;
      LODWORD(v124) = v161;
      v110 = (uint64_t)v131;
      sub_22731A11C(v133, (uint64_t)v131, (uint64_t *)&unk_2558D7780);
      v111 = v110;
      v112 = v123;
      sub_22731A11C(v111, v123, (uint64_t *)&unk_2558D7780);
      v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D77F0);
      v114 = v112 + *(int *)(v113 + 48);
      *(_QWORD *)v114 = 0;
      *(_BYTE *)(v114 + 8) = 1;
      v115 = v112 + *(int *)(v113 + 64);
      v121 = v105;
      v122 = v103;
      v116 = v132;
      *(_QWORD *)v115 = v103;
      *(_QWORD *)(v115 + 8) = v116;
      v132 = v116;
      *(_QWORD *)(v115 + 16) = v105;
      *(_QWORD *)(v115 + 24) = v104;
      v119[2] = v106;
      v120 = v104;
      *(_QWORD *)(v115 + 32) = v106;
      *(_QWORD *)(v115 + 40) = v107;
      *(_QWORD *)(v115 + 48) = v109;
      *(_QWORD *)(v115 + 56) = v108;
      v119[1] = v108;
      v117 = v129;
      *(_QWORD *)(v115 + 64) = v130;
      *(_QWORD *)(v115 + 72) = v117;
      v118 = v127;
      *(_QWORD *)(v115 + 80) = v128;
      *(_QWORD *)(v115 + 88) = v118;
      *(_QWORD *)(v115 + 96) = v126;
      *(_BYTE *)(v115 + 104) = v125;
      *(_BYTE *)(v115 + 105) = v124;
      j__swift_retain();
      sub_22731A1A4(v133, (uint64_t *)&unk_2558D7780);
      j__swift_release();
      sub_22731A1A4((uint64_t)v131, (uint64_t *)&unk_2558D7780);
      return;
    }
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v65 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v66 = (void *)sub_22758E1B4();
    v67 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v66, v65);

    v68 = v132;
    v69 = v130;
    if (v67)
    {
      sub_22758DCF8();
      v70 = v120;
      v71 = v121;
      v72 = v122;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v120, *MEMORY[0x24BDF3FD0], v122);
      v128 = sub_22758DD28();
      swift_release();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
      type metadata accessor for MFColorPicker();
      sub_22753F394(v69);
      v73 = sub_22758D470();
      v74 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v74(v69, v68);
      if ((v73 & 1) != 0)
      {
        v75 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v75, sel_bounds);

      }
      sub_22753F394(v69);
      v89 = sub_22758D470();
      v74(v69, v68);
      if ((v89 & 1) != 0)
      {
        v90 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v90, sel_bounds);

      }
      v91 = v128;
      sub_22758DE9C();
      sub_22758D3C8();
      v92 = v162;
      v93 = v163;
      v94 = v164;
      v95 = v165;
      v96 = v166;
      v97 = v167;
      v98 = sub_22758D9D4();
      sub_22758D2E4();
      v134 = v91;
      v135 = v92;
      v136 = v93;
      v137 = v94;
      v138 = v95;
      v139 = v96;
      v140 = v97;
      v141 = v98;
      v142 = v99;
      v143 = v100;
      v144 = v101;
      v145 = v102;
      v146 = 0;
      v147 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D77A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D77A8);
      sub_22733C944(&qword_2558D77B0, &qword_2558D77A0, (uint64_t (*)(void))sub_227379408);
      sub_22733C944(&qword_2558D77D8, &qword_2558D77A8, (uint64_t (*)(void))sub_22733C8C4);
      sub_22758D830();
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t View.colorPickerSheet(isPresented:selection:supportsAlpha:title:)()
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22758DE9C();
  sub_227377DC4();
  sub_22758DB0C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t sub_227377DC4()
{
  unint64_t result;

  result = qword_2558D75E0;
  if (!qword_2558D75E0)
  {
    result = MEMORY[0x2276B3C78](&unk_2275989D4, &type metadata for MFColorPickerView);
    atomic_store(result, (unint64_t *)&qword_2558D75E0);
  }
  return result;
}

id sub_227377E08()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  char v3;
  objc_class *v4;
  _BYTE *v5;
  char *v6;
  char *v7;
  __int128 v9;
  objc_super v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v11 = *(__int128 *)((char *)v0 + 24);
  v12 = *((_QWORD *)v0 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7640);
  sub_22758DDDC();
  v9 = v13;
  v1 = v14;
  v11 = *v0;
  LOBYTE(v12) = *((_BYTE *)v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7648);
  sub_22758DDDC();
  v2 = v13;
  v3 = v14;
  v4 = (objc_class *)type metadata accessor for MFColorPickerView.Coordinator();
  v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtCV16MagnifierSupportP33_128412983A29D0B4093EE0414FDFF2BF17MFColorPickerView11Coordinator_didPresent] = 0;
  v6 = &v5[OBJC_IVAR____TtCV16MagnifierSupportP33_128412983A29D0B4093EE0414FDFF2BF17MFColorPickerView11Coordinator__selection];
  *(_OWORD *)v6 = v9;
  *((_QWORD *)v6 + 2) = v1;
  v7 = &v5[OBJC_IVAR____TtCV16MagnifierSupportP33_128412983A29D0B4093EE0414FDFF2BF17MFColorPickerView11Coordinator__isPresented];
  *(_OWORD *)v7 = v2;
  v7[16] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_227378058()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFColorPickerView.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MFColorPickerView.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_227378110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7628);
  v2 = sub_22758D4D0();
  v4[0] = v1;
  v4[1] = sub_22730BB7C(&qword_2558D7630, &qword_2558D7628, MEMORY[0x24BDEF370]);
  return MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for MFColorPickerView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MFColorPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MFColorPickerView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MFColorPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MFColorPickerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MFColorPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MFColorPickerView()
{
  return &type metadata for MFColorPickerView;
}

void sub_22737848C(void *a1, uint64_t a2)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  char v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  __int128 v37;
  uint64_t v38;
  unsigned __int8 v39[16];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D7650);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8, v9, v10, v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *v2;
  LOBYTE(v38) = *((_BYTE *)v2 + 16);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7648);
  MEMORY[0x2276B1DD0](v39, v14);
  v15 = v39[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, a2, v6);
  if (v15 == 1)
  {
    sub_22758D8E4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v16 = *(_BYTE *)(v37
                   + OBJC_IVAR____TtCV16MagnifierSupportP33_128412983A29D0B4093EE0414FDFF2BF17MFColorPickerView11Coordinator_didPresent);

    if ((v16 & 1) == 0)
    {
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4C8]), sel_init);
      v37 = *(__int128 *)((char *)v3 + 24);
      v38 = *((_QWORD *)v3 + 5);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7640);
      MEMORY[0x2276B1DD0](v39, v18);
      if (*(_QWORD *)v39)
      {
        sub_22733C76C();
        swift_retain();
        v19 = (void *)sub_22758E904();
        objc_msgSend(v17, sel_setSelectedColor_, v19);
        swift_release();

      }
      objc_msgSend(v17, sel_setSupportsAlpha_, *((unsigned __int8 *)v3 + 48));
      sub_22731A160((uint64_t)v3 + 56, (uint64_t)v39, &qword_2540B9CB0);
      sub_22731A160((uint64_t)v39, (uint64_t)&v37, &qword_2540B9CB0);
      v20 = (void *)*((_QWORD *)&v37 + 1);
      if (*((_QWORD *)&v37 + 1))
      {
        v21 = v17;
        v20 = (void *)sub_22758E1B4();
      }
      else
      {
        v22 = v17;
      }
      objc_msgSend(v17, sel_setTitle_, v20);

      sub_22758D8E4();
      v23 = v36;
      objc_msgSend(v17, sel_setDelegate_, v36);

      v24 = qword_2558D4BA0;
      v25 = v17;
      if (v24 != -1)
        swift_once();
      if (byte_2558DAEE0)
        v26 = 2;
      else
        v26 = 7;
      objc_msgSend(v25, sel_setModalPresentationStyle_, v26);

      v27 = objc_msgSend(v25, sel_presentationController);
      if (v27)
      {
        v28 = v27;
        sub_22758D8E4();
        v29 = v36;
        objc_msgSend(v28, sel_setDelegate_, v36);

      }
      v30 = objc_msgSend(a1, sel_window);
      v31 = v30;
      if (v30)
      {
        v32 = objc_msgSend(v30, sel_rootViewController);

        if (v32)
        {
          v33 = objc_msgSend(v32, sel_presentedViewController);
          if (v33)
          {
            do
            {
              v31 = v33;

              v33 = objc_msgSend(v31, sel_presentedViewController);
              v32 = v31;
            }
            while (v33);
          }
          else
          {
            v31 = v32;
          }
          objc_msgSend(v31, sel_presentViewController_animated_completion_, v25, 1, 0);
        }
        else
        {
          v31 = 0;
        }
      }
      sub_22758D8E4();

      v34 = v36;
      *((_BYTE *)v36
      + OBJC_IVAR____TtCV16MagnifierSupportP33_128412983A29D0B4093EE0414FDFF2BF17MFColorPickerView11Coordinator_didPresent) = 1;

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
}

id sub_227378858()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  objc_msgSend(v0, sel_setHidden_, 1);
  return v0;
}

void sub_2273788A0(void *a1, uint64_t a2)
{
  sub_22737848C(a1, a2);
}

id sub_2273788E8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_227377E08();
  *a1 = result;
  return result;
}

uint64_t sub_227378934()
{
  return sub_22758D7B8();
}

uint64_t sub_227378974()
{
  return MEMORY[0x24BDF5560];
}

uint64_t sub_227378980()
{
  sub_227378A44();
  return sub_22758D818();
}

uint64_t sub_2273789D0()
{
  sub_227378A44();
  return sub_22758D7C4();
}

void sub_227378A20()
{
  sub_227378A44();
  sub_22758D80C();
  __break(1u);
}

unint64_t sub_227378A44()
{
  unint64_t result;

  result = qword_2558D7638;
  if (!qword_2558D7638)
  {
    result = MEMORY[0x2276B3C78](&unk_227598944, &type metadata for MFColorPickerView);
    atomic_store(result, (unint64_t *)&qword_2558D7638);
  }
  return result;
}

uint64_t sub_227378A88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = a2[6];
    v8 = *(int *)(a3 + 28);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22758D47C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_227378BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_22758D47C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_227378C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22758D47C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_227378D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_22731A1A4(a1 + v6, qword_2558D6380);
    __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22758D47C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_227378E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_22758D47C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_227378F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_22731A1A4(a1 + v7, qword_2558D6380);
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22758D47C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_227379048()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227379054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_2273790D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2273790E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MFColorPicker()
{
  uint64_t result;

  result = qword_2558D76D0;
  if (!qword_2558D76D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_227379194()
{
  unint64_t v0;

  sub_2273392C4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22737921C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22737922C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MFColorPicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227379270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MFColorPicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(qword_2558D6380);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22758D47C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_227379340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MFColorPicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227379384()
{
  type metadata accessor for MFColorPicker();
  return sub_2273770E0();
}

uint64_t sub_2273793B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227377134(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_2273793B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D7790;
  if (!qword_2558D7790)
  {
    v1 = sub_22758D47C();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDECF78], v1);
    atomic_store(result, (unint64_t *)&qword_2558D7790);
  }
  return result;
}

unint64_t sub_227379408()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D77B8;
  if (!qword_2558D77B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D77C0);
    v2[0] = sub_22730BB7C(&qword_2558D77C8, &qword_2558D77D0, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D77B8);
  }
  return result;
}

unint64_t sub_227379498()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D77F8;
  if (!qword_2558D77F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7740);
    v2[0] = sub_22737951C();
    v2[1] = sub_22730BB7C(&qword_2558D7630, &qword_2558D7628, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D77F8);
  }
  return result;
}

unint64_t sub_22737951C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2558D7800;
  if (!qword_2558D7800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558D7720);
    v2[0] = sub_22730BB7C(&qword_2558D7808, &qword_2558D7718, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22730BB7C(&qword_2558D7810, &qword_2558D7818, MEMORY[0x24BDF0710]);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2558D7800);
  }
  return result;
}

uint64_t sub_2273795B8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

uint64_t *sub_2273796C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  const void *v17;
  uint64_t v18;
  _BYTE v19[280];
  uint64_t v20[39];
  _QWORD v21[35];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_delegate;
  result = (uint64_t *)MEMORY[0x2276B3E34](v2);
  if (result)
  {
    v5 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle);
    v4 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle + 8);
    swift_bridgeObjectRetain();
    result = (uint64_t *)swift_unknownObjectRelease();
    if (v4)
    {
      if (MEMORY[0x2276B3E34](v2))
      {
        swift_unknownObjectRelease();
        if (qword_2540B87B8 != -1)
          swift_once();
        v6 = (_QWORD *)qword_2540BCDD0;
        swift_beginAccess();
        v7 = v6[6];
        v8 = v6[7];
        v21[0] = v6[5];
        v21[1] = v7;
        v21[2] = v8;
        v9 = qword_2540B9100;
        swift_bridgeObjectRetain();
        v10 = swift_bridgeObjectRetain();
        if (v9 != -1)
          v10 = swift_once();
        MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
        sub_22758E7B4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v20[0] + 16) && (v15 = sub_2274DE434(v5, v4), (v16 & 1) != 0))
        {
          v17 = (const void *)(*(_QWORD *)(v20[0] + 56) + 280 * v15);
          memcpy(v19, v17, sizeof(v19));
          memmove(v20, v17, 0x118uLL);
          CGRectMake(v20);
          sub_22730B838((uint64_t)v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_227338314((uint64_t)v20);
        }
        sub_227338344((uint64_t)v20, (uint64_t)v21);
        v18 = v1 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity;
        sub_227338344(v1 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity, (uint64_t)v20);
        sub_227338344((uint64_t)v21, v18);
        return sub_22733F1C4(v20);
      }
      else
      {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t *sub_227379940()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  uint64_t *result;
  uint64_t *v6;
  uint64_t *v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_tableView];
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  sub_22737AEE4();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = (uint64_t *)objc_msgSend(v1, sel_view);
  if (result)
  {
    v6 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    result = (uint64_t *)objc_msgSend(v1, sel_view);
    if (result)
    {
      v7 = result;
      sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
      swift_bridgeObjectRelease();

      return sub_2273796C8();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_227379ACC(char a1)
{
  void *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

}

id sub_227379C7C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  objc_super v19;
  _BYTE v20[280];

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity];
  sub_227338314((uint64_t)v20);
  sub_227338344((uint64_t)v20, v8);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_availablePauseDetectionModeFeedbacks] = &unk_24EF987E8;
  v9 = OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_tableView;
  v10 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_systemYellowColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  objc_msgSend(v14, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v4[v9] = v14;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_speechFeedbackSubscription] = 0;

  if (a2)
  {
    v16 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v11;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v16, a3);

  return v17;
}

id sub_227379E90(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;
  _BYTE v16[280];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = (uint64_t)&v2[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity];
  sub_227338314((uint64_t)v16);
  sub_227338344((uint64_t)v16, v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_availablePauseDetectionModeFeedbacks] = &unk_24EF98810;
  v6 = OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_tableView;
  v7 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v8 = v2;
  v9 = objc_msgSend(v7, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_systemYellowColor);
  objc_msgSend(v11, sel_setTintColor_, v12);

  objc_msgSend(v11, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v2[v6] = v11;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_speechFeedbackSubscription] = 0;

  v15.receiver = v8;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  return v13;
}

uint64_t type metadata accessor for ActivityDetectionModeUniversalSettingsViewController()
{
  return objc_opt_self();
}

id sub_22737A104(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  id v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v1;
  v5 = (void *)sub_22758E1B4();
  v6 = (void *)sub_22758CA74();
  v7 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v5, v6);

  v8 = v7;
  v9 = sub_22758CAC8();
  if (v9 == 1)
    v10 = 1;
  else
    v10 = 2;
  if (v9)
    v11 = v10;
  else
    v11 = 0;
  sub_2273796C8();
  if (v11 == 2)
  {
LABEL_17:

    return v8;
  }
  if (!v11)
  {
    v12 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_availablePauseDetectionModeFeedbacks);
    v13 = sub_22758CA98();
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)(v12 + 16))
    {
      v12 = *(unsigned __int8 *)(v12 + v13 + 32);
      v14 = objc_msgSend(v8, sel_textLabel);
      if (v14)
      {
        v15 = v14;
        sub_2273BAFFC();
        v16 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setText_, v16);

      }
      v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
      if (qword_2540B87B8 == -1)
        goto LABEL_14;
      goto LABEL_28;
    }
    __break(1u);
LABEL_28:
    swift_once();
LABEL_14:
    v17 = (uint64_t *)(qword_2540BCDD0
                    + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__selectedPauseDetectionModeFeedbacks);
    swift_beginAccess();
    v48 = *v17;
    v50 = v17[1];
    v53 = v17[2];
    v18 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v19 = swift_bridgeObjectRetain();
    if (v18 != -1)
      v19 = swift_once();
    MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9D90);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = sub_227367600(v12, v54);
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setOn_, v24, v48, v50, v53);
    objc_msgSend(v2, sel_setTag_, v12);
    objc_msgSend(v2, sel_addTarget_action_forControlEvents_, v3, sel_didToggleFeedbackSwitch_, 4096);
    objc_msgSend(v8, sel_setAccessoryView_, v2);
    objc_msgSend(v8, sel_setAccessoryType_, 0);

    goto LABEL_17;
  }
  v25 = objc_msgSend(v8, sel_textLabel);
  if (v25)
  {
    v26 = v25;
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v28 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v29 = (void *)sub_22758E1B4();
    v30 = (void *)sub_22758E1B4();
    v31 = objc_msgSend(v28, sel_localizedStringForKey_value_table_, v29, 0, v30);

    sub_22758E1E4();
    v32 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setText_, v32);

  }
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
  if (qword_2540B87B8 != -1)
    swift_once();
  v34 = qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__detectLanguages;
  swift_beginAccess();
  v49 = *(_QWORD *)v34;
  v51 = *(_QWORD *)(v34 + 8);
  LOBYTE(v52) = *(_BYTE *)(v34 + 16);
  v35 = qword_2540B9100;
  v36 = swift_bridgeObjectRetain();
  if (v35 != -1)
    v36 = swift_once();
  MEMORY[0x24BDAC7A8](v36, v37, v38, v39, v40);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setOn_, v54, v49, v51, v52);
  objc_msgSend(v33, sel_addTarget_action_forControlEvents_, v3, sel_didToggleDetectLanguagesSwitch_, 4096);
  objc_msgSend(v8, sel_setAccessoryView_, v33);
  objc_msgSend(v8, sel_setAccessoryType_, 0);
  type metadata accessor for MAGUtilities();
  v41 = swift_getObjCClassFromMetadata();
  v42 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v41);
  v43 = (void *)sub_22758E1B4();
  v44 = (void *)sub_22758E1B4();
  v45 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, 0, v44);

  sub_22758E1E4();
  v46 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessibilityLabel_, v46);

  return v8;
}

id sub_22737A848(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  unsigned __int8 v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  _BYTE v17[280];
  _BYTE v18[288];

  v2 = v1;
  sub_2273796C8();
  result = objc_msgSend(a1, sel_tag);
  if ((unint64_t)result <= 2)
  {
    v5 = result;
    v6 = v2 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity;
    sub_227338344(v2 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity, (uint64_t)v17);
    sub_227338344((uint64_t)v17, (uint64_t)v18);
    result = (id)sub_22733F118((uint64_t)v18);
    if ((_DWORD)result != 1)
    {
      v7 = *(char **)(v6 + 192);
      swift_bridgeObjectRetain();
      if (objc_msgSend(a1, sel_isOn))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2273A5584(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v9 = *((_QWORD *)v7 + 2);
        v8 = *((_QWORD *)v7 + 3);
        if (v9 >= v8 >> 1)
          v7 = sub_2273A5584((char *)(v8 > 1), v9 + 1, 1, v7);
        *((_QWORD *)v7 + 2) = v9 + 1;
        v7[v9 + 32] = v5;
        sub_22737AA44((uint64_t)v7);
        return (id)swift_bridgeObjectRelease();
      }
      else
      {
        v10 = *((_QWORD *)v7 + 2);
        if (v10)
        {
          v11 = (unsigned __int8 *)(v7 + 32);
          v12 = MEMORY[0x24BEE4AF8];
          do
          {
            v16 = *v11++;
            v15 = v16;
            if (v16 != v5)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                sub_22732499C(0, *(_QWORD *)(v12 + 16) + 1, 1);
              v14 = *(_QWORD *)(v12 + 16);
              v13 = *(_QWORD *)(v12 + 24);
              if (v14 >= v13 >> 1)
                sub_22732499C(v13 > 1, v14 + 1, 1);
              *(_QWORD *)(v12 + 16) = v14 + 1;
              *(_BYTE *)(v12 + v14 + 32) = v15;
            }
            --v10;
          }
          while (v10);
        }
        else
        {
          v12 = MEMORY[0x24BEE4AF8];
        }
        swift_bridgeObjectRelease();
        sub_22737AA44(v12);
        return (id)swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_22737AA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[280];
  _BYTE v7[288];
  uint64_t v8;

  sub_2273796C8();
  v8 = a1;
  swift_bridgeObjectRetain();
  sub_22746536C(&v8);
  v3 = v8;
  v4 = v1 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity;
  sub_227338344(v1 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_activity, (uint64_t)v6);
  sub_227338344((uint64_t)v6, (uint64_t)v7);
  if (sub_22733F118((uint64_t)v7) == 1
    || sub_2274492D0(*(_QWORD *)(v4 + 192), v3)
    || !MEMORY[0x2276B3E34](v1 + OBJC_IVAR____TtC16MagnifierSupport52ActivityDetectionModeUniversalSettingsViewController_delegate))
  {
    return swift_release();
  }
  sub_2273EF008(v3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_22737ADEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;

  if (a1)
    return 0;
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_22758E1B4();
  v5 = (void *)sub_22758E1B4();
  v6 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, v5);

  v1 = sub_22758E1E4();
  return v1;
}

unint64_t sub_22737AEE4()
{
  unint64_t result;

  result = qword_2558D50D0;
  if (!qword_2558D50D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2558D50D0);
  }
  return result;
}

id sub_22737AF20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[280];
  uint64_t v37[39];
  _QWORD v38[36];

  v3 = v0;
  if (qword_2540B87B8 != -1)
    swift_once();
  v4 = (_QWORD *)qword_2540BCDD0;
  v5 = sub_22758CA98();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities];
  if (v5 >= *(_QWORD *)(v6 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 + 16 * v5;
  v2 = *(_QWORD *)(v7 + 32);
  v1 = *(_QWORD *)(v7 + 40);
  swift_beginAccess();
  v8 = v4[6];
  v9 = v4[7];
  v38[0] = v4[5];
  v38[1] = v8;
  v38[2] = v9;
  v10 = qword_2540B9100;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  if (v10 != -1)
LABEL_15:
    v11 = swift_once();
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v37[0] + 16) && (v16 = sub_2274DE434(v2, v1), (v17 & 1) != 0))
  {
    v18 = (const void *)(*(_QWORD *)(v37[0] + 56) + 280 * v16);
    memcpy(v36, v18, sizeof(v36));
    memmove(v37, v18, 0x118uLL);
    CGRectMake(v37);
    sub_22730B838((uint64_t)v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227338314((uint64_t)v37);
  }
  sub_227338344((uint64_t)v37, (uint64_t)v38);
  v19 = (uint64_t)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityToBeDuped];
  sub_227338344((uint64_t)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityToBeDuped], (uint64_t)v37);
  sub_227338344((uint64_t)v38, v19);
  sub_22733F1C4(v37);
  v20 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton;
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton])
  {
    v21 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
    v22 = *(void **)&v3[v20];
    *(_QWORD *)&v3[v20] = v21;

    v23 = *(void **)&v3[v20];
    v24 = *(void **)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController];
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v26 = (void *)objc_opt_self();
    v27 = v23;
    v28 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    v29 = (void *)sub_22758E1B4();
    v30 = (void *)sub_22758E1B4();
    v31 = objc_msgSend(v28, sel_localizedStringForKey_value_table_, v29, 0, v30);

    v32 = sub_22758E1E4();
    v34 = v33;

    sub_22737B2D4(v23, v24, v32, v34, (uint64_t)sel__commitAndDismiss, 1);
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(v3, sel_presentViewController_animated_completion_, *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController], 1, 0);
}

void sub_22737B2D4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;

  v7 = v6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D78F0);
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v25 = (char *)&v33 - v24;
  if (a1)
  {
    v26 = (void *)sub_22758E1B4();
    objc_msgSend(a1, sel_setTitle_forState_, v26, 0);

    sub_22758E9E8();
    v27 = sub_22758E9DC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v25, 1, v27))
    {
      sub_22735ED08((uint64_t)v25, (uint64_t)v18);
      sub_22758E9F4();
      sub_22735ED50((uint64_t)v25);
    }
    else
    {
      v28 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
      sub_22758E9B8();
      sub_22758E9F4();
    }
    objc_msgSend(a1, sel_addTarget_action_forControlEvents_, v7, a5, 64);
    v29 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
    objc_msgSend(a1, sel_setTintColor_, v29);

    v30 = a1;
    v31 = objc_msgSend(a2, sel_buttonTray);
    objc_msgSend(v31, sel_addButton_, v30);

    if ((a6 & 1) != 0)
    {
      v32 = *(void **)(v7
                     + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton);
      if (v32)
        objc_msgSend(v32, sel_setEnabled_, 0);
    }

  }
}

id sub_22737B4EC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController];
  v2 = OBJC_IVAR____TtC16MagnifierSupport32ActivityNameOnBoardingController_activityNameTextField;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport32ActivityNameOnBoardingController_activityNameTextField), sel_resignFirstResponder);
  v3 = *(id *)(v1 + v2);
  v4 = (void *)sub_22758E1B4();
  objc_msgSend(v3, sel_setText_, v4);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport32ActivityNameOnBoardingController_activityNameTakenLabel), sel_setHidden_, 1);
  v5 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton];
  if (v5)
    objc_msgSend(v5, sel_setEnabled_, 0);
  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_22737B5F4()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  void *v5;
  id result;
  void *v7;
  void *v8;
  uint64_t v9;
  objc_super v10;

  v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView];
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  sub_22730BA80(0, (unint64_t *)&qword_2558D50D0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  v5 = (void *)sub_22758E1B4();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v5);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    result = objc_msgSend(v1, sel_view);
    if (result)
    {
      v8 = result;
      sub_22757580C(result, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
      swift_bridgeObjectRelease();

      sub_22737B7F8();
      v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController];
      *(_QWORD *)(v9 + OBJC_IVAR____TtC16MagnifierSupport32ActivityNameOnBoardingController_createActivityDelegate + 8) = &off_24EF9E2B8;
      swift_unknownObjectWeakAssign();
      *(_QWORD *)(v9 + OBJC_IVAR____TtC16MagnifierSupport32ActivityNameOnBoardingController_delegate + 8) = &off_24EF9E288;
      return (id)swift_unknownObjectWeakAssign();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_22737B7F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13[4];

  v1 = v0;
  if (qword_2540B87B8 != -1)
    swift_once();
  v2 = (_QWORD *)qword_2540BCDD0;
  swift_beginAccess();
  v3 = v2[6];
  v4 = v2[7];
  v13[0] = v2[5];
  v13[1] = v3;
  v13[2] = v4;
  v5 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  if (v5 != -1)
    v6 = swift_once();
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_2273A6400(v13[3]);
  swift_bridgeObjectRelease();
  v13[0] = (uint64_t)v11;
  swift_retain();
  sub_2273FA264(v13);
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities) = v13[0];
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView), sel_reloadData);
}

id sub_22737B9CC(char a1)
{
  char *v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_22758E1B4();
  v7 = (void *)sub_22758E1B4();
  v8 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, v7);

  sub_22758E1E4();
  v9 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v9);

  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView], sel_reloadData);
}

id sub_22737BB94(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v30;
  objc_class *ObjectType;
  objc_super v33;
  _BYTE v34[288];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities] = MEMORY[0x24BEE4AF8];
  v4 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView;
  v5 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v6 = v3;
  v7 = objc_msgSend(v5, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)objc_opt_self();
  v9 = v7;
  v10 = objc_msgSend(v8, sel_systemYellowColor);
  objc_msgSend(v9, sel_setTintColor_, v10);

  objc_msgSend(v9, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v3[v4] = v9;
  *(_QWORD *)&v6[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton] = 0;
  v30 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController;
  type metadata accessor for ActivityNameOnBoardingController();
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = (void *)sub_22758E1B4();
  v15 = (void *)sub_22758E1B4();
  v16 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, 0, v15);

  sub_22758E1E4();
  v17 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v18 = (void *)sub_22758E1B4();
  v19 = (void *)sub_22758E1B4();
  v20 = objc_msgSend(v17, sel_localizedStringForKey_value_table_, v18, 0, v19);

  sub_22758E1E4();
  v21 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v22 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v21, sel_initWithTitle_detailText_icon_, v22, v23, 0);

  *(_QWORD *)&v6[v30] = v24;
  v25 = (uint64_t)&v6[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityToBeDuped];
  sub_227338314((uint64_t)v34);
  sub_227338344((uint64_t)v34, v25);

  if (a2)
  {
    v26 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v33.receiver = v6;
  v33.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v33, sel_initWithNibName_bundle_, v26, a3);

  return v27;
}

id sub_22737BFA8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  objc_class *ObjectType;
  objc_super v30;
  _BYTE v31[288];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities] = MEMORY[0x24BEE4AF8];
  v3 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView;
  v4 = objc_allocWithZone(MEMORY[0x24BEBD9F0]);
  v5 = v2;
  v6 = objc_msgSend(v4, sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_systemYellowColor);
  objc_msgSend(v8, sel_setTintColor_, v9);

  objc_msgSend(v8, sel_setClipsToBounds_, 0);
  *(_QWORD *)&v2[v3] = v8;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton] = 0;
  v27 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityNameOnBoardingController;
  type metadata accessor for ActivityNameOnBoardingController();
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v13 = (void *)sub_22758E1B4();
  v14 = (void *)sub_22758E1B4();
  v15 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, 0, v14);

  sub_22758E1E4();
  v16 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v17 = (void *)sub_22758E1B4();
  v18 = (void *)sub_22758E1B4();
  v19 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, 0, v18);

  sub_22758E1E4();
  v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v21 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v22 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithTitle_detailText_icon_, v21, v22, 0);

  *(_QWORD *)&v5[v27] = v23;
  v24 = (uint64_t)&v5[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityToBeDuped];
  sub_227338314((uint64_t)v31);
  sub_227338344((uint64_t)v31, v24);

  v30.receiver = v5;
  v30.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v30, sel_initWithCoder_, a1);

  return v25;
}

uint64_t type metadata accessor for ActivitiesCustomizationViewController()
{
  return objc_opt_self();
}

id sub_22737C400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  __int128 v37;
  char v38;
  __int128 v39;
  __int128 v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[7];
  _BYTE v62[280];
  _BYTE v63[280];
  _BYTE v64[280];
  _BYTE v65[280];
  _BYTE v66[8];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  int v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  char v92;
  uint64_t v93;
  char v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  char v102;
  char v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;

  sub_227338344(v2 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activityToBeDuped, (uint64_t)v65);
  sub_227338344((uint64_t)v65, (uint64_t)v66);
  result = (id)sub_22733F118((uint64_t)v66);
  if ((_DWORD)result != 1)
  {
    v58 = a1;
    v59 = a2;
    v60 = v2;
    v56 = v107;
    v57 = v106;
    v54 = v102;
    v55 = v103;
    v52 = v100;
    v53 = v101;
    v50 = v98;
    v51 = v97;
    v49 = v99;
    v47 = v92;
    v48 = v94;
    v45 = v90;
    v46 = v91;
    v43 = v88;
    v44 = v87;
    v6 = v89;
    v41 = v86;
    v7 = v84;
    v8 = v83;
    v9 = v81;
    v38 = v80;
    v35 = v78;
    v36 = v79;
    v33 = v77;
    v10 = v76;
    v11 = v75;
    v12 = v74;
    v13 = v73;
    v14 = v72;
    v15 = v70;
    v16 = v69;
    v17 = v68;
    v18 = v67;
    v19 = v66[1];
    v42 = v105;
    v39 = v96;
    v40 = v104;
    v37 = v95;
    v34 = v93;
    v32 = v85;
    v20 = v82;
    v21 = v71;
    sub_227338344((uint64_t)v65, (uint64_t)v62);
    sub_22730B838((uint64_t)v62);
    if (qword_2540B87B8 != -1)
      swift_once();
    v63[0] = 0;
    v63[1] = v19;
    *(_QWORD *)&v63[8] = v18;
    *(_QWORD *)&v63[16] = v17;
    *(_QWORD *)&v63[24] = v16;
    v63[32] = v15;
    *(_QWORD *)&v63[40] = v21;
    *(_DWORD *)&v63[48] = v14;
    v63[52] = v13;
    v63[53] = v12;
    v63[54] = v11;
    v63[55] = v10;
    v63[56] = v33;
    v63[57] = v35;
    v63[58] = v36;
    v63[59] = v38;
    *(_QWORD *)&v63[64] = v9;
    *(_QWORD *)&v63[72] = v20;
    *(_QWORD *)&v63[80] = v8;
    *(_QWORD *)&v63[88] = v7;
    *(_OWORD *)&v63[96] = v32;
    v63[112] = v41;
    *(_QWORD *)&v63[120] = v44;
    *(_QWORD *)&v63[128] = v43;
    *(_QWORD *)&v63[136] = v6;
    v63[144] = v45;
    v63[145] = v46;
    v63[146] = v47;
    *(_QWORD *)&v63[152] = v34;
    v63[160] = v48;
    *(_OWORD *)&v63[168] = v37;
    *(_OWORD *)&v63[184] = v39;
    *(_QWORD *)&v63[200] = v51;
    *(_QWORD *)&v63[208] = v50;
    *(_QWORD *)&v63[216] = v49;
    v63[224] = v52;
    v63[225] = v53;
    v63[226] = v54;
    v63[227] = v55;
    *(_OWORD *)&v63[232] = v40;
    *(_OWORD *)&v63[248] = v42;
    *(_QWORD *)&v63[264] = v57;
    *(_QWORD *)&v63[272] = v56;
    memcpy(v64, v63, sizeof(v64));
    sub_2274469C4(v58, v59, (uint64_t)v64);
    sub_22730B91C((uint64_t)v63);
    v22 = (_QWORD *)qword_2540BCDD0;
    sub_227447028(v58, v59);
    swift_beginAccess();
    v23 = v22[6];
    v24 = v22[7];
    v61[0] = v22[5];
    v61[1] = v23;
    v61[2] = v24;
    v25 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v26 = swift_bridgeObjectRetain();
    if (v25 != -1)
      v26 = swift_once();
    MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = sub_2273A6400(v61[3]);
    swift_bridgeObjectRelease();
    v61[0] = (uint64_t)v31;
    swift_retain();
    sub_2273FA264(v61);
    swift_release();
    *(_QWORD *)(v60 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities) = v61[0];
    swift_bridgeObjectRelease();
    return objc_msgSend(*(id *)(v60 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView), sel_reloadData);
  }
  return result;
}

id sub_22737C870(uint64_t a1, uint64_t a2)
{
  return sub_22737C880(a1, a2, 1);
}

id sub_22737C878(uint64_t a1, uint64_t a2)
{
  return sub_22737C880(a1, a2, 0);
}

id sub_22737C880(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  id result;

  result = *(id *)(v3 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_commitActivityButton);
  if (result)
    return objc_msgSend(result, sel_setEnabled_, a3 & 1);
  return result;
}

void sub_22737CA98(void *a1)
{
  char *v1;
  void *v2;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;

  v2 = v1;
  v4 = (void *)sub_22758CA74();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v4, 1);

  if (sub_22758CAC8() != 1)
    return;
  v5 = sub_22758CA98();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities];
  if (v5 >= *(_QWORD *)(v6 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  v7 = v6 + 16 * v5;
  v9 = *(_QWORD *)(v7 + 32);
  v8 = *(_QWORD *)(v7 + 40);
  v10 = objc_allocWithZone((Class)type metadata accessor for ActivityControlsViewController());
  swift_bridgeObjectRetain();
  v14 = (char *)objc_msgSend(v10, sel_init);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_activityCreatedDelegate + 8] = &off_24EF9E2A8;
  swift_unknownObjectWeakAssign();
  v11 = &v14[OBJC_IVAR____TtC16MagnifierSupport30ActivityControlsViewController_nameTitle];
  *(_QWORD *)v11 = v9;
  *((_QWORD *)v11 + 1) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v2, sel_navigationController);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_pushViewController_animated_, v14, 1);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }

}

void sub_22737CCB8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t aBlock;
  uint64_t v58;
  void (*v59)(uint64_t, void *);
  void *v60;
  void (*v61)(uint64_t);
  char *v62;

  v2 = v1;
  v4 = sub_22758CAD4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7, v8, v9, v10);
  v11 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities;
  v12 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities]
                  + 16);
  if (sub_22758CA98() < v12)
  {
    v13 = sub_22758CA98();
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v14 = *(_QWORD *)&v2[v11];
      if (v13 < *(_QWORD *)(v14 + 16))
      {
        v15 = v14 + 16 * v13;
        v53 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
        v54 = v4;
        v17 = *(_QWORD *)(v15 + 40);
        v51 = *(_QWORD *)(v15 + 32);
        v16 = v51;
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v19 = (void *)objc_opt_self();
        v55 = v19;
        swift_bridgeObjectRetain();
        v52 = ObjCClassFromMetadata;
        v20 = objc_msgSend(v19, sel_bundleForClass_, ObjCClassFromMetadata);
        v21 = sub_22758E1B4();
        v56 = v2;
        v22 = (void *)v21;
        v23 = (void *)sub_22758E1B4();
        v24 = objc_msgSend(v20, sel_localizedStringForKey_value_table_, v22, 0, v23);

        sub_22758E1E4();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_227593AB0;
        *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v25 + 64) = sub_22732ECC8();
        *(_QWORD *)(v25 + 32) = v16;
        *(_QWORD *)(v25 + 40) = v17;
        v50 = v17;
        swift_bridgeObjectRetain();
        sub_22758E1C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        v27 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v26, 0, 1);

        v28 = objc_msgSend(v55, sel_bundleForClass_, ObjCClassFromMetadata);
        v29 = (void *)sub_22758E1B4();
        v30 = (void *)sub_22758E1B4();
        v31 = objc_msgSend(v28, sel_localizedStringForKey_value_table_, v29, 0, v30);

        sub_22758E1E4();
        v32 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v34 = v53;
        v33 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v53, a1, v54);
        v35 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        v36 = (char *)swift_allocObject();
        v37 = v50;
        *((_QWORD *)v36 + 2) = v51;
        *((_QWORD *)v36 + 3) = v37;
        *((_QWORD *)v36 + 4) = v32;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v36[v35], v34, v33);
        swift_retain();
        v38 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        v61 = sub_22737EFCC;
        v62 = v36;
        aBlock = MEMORY[0x24BDAC760];
        v58 = 1107296256;
        v59 = sub_2273F7520;
        v60 = &block_descriptor_19;
        v39 = _Block_copy(&aBlock);
        swift_release();
        v40 = (void *)objc_opt_self();
        v41 = objc_msgSend(v40, sel_actionWithTitle_style_handler_, v38, 2, v39);
        _Block_release(v39);
        swift_release();

        v42 = objc_msgSend(v55, sel_bundleForClass_, v52);
        v43 = (void *)sub_22758E1B4();
        v44 = (void *)sub_22758E1B4();
        v45 = objc_msgSend(v42, sel_localizedStringForKey_value_table_, v43, 0, v44);

        sub_22758E1E4();
        v46 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        v61 = (void (*)(uint64_t))CGRectMake;
        v62 = 0;
        aBlock = MEMORY[0x24BDAC760];
        v58 = 1107296256;
        v59 = sub_2273F7520;
        v60 = &block_descriptor_22;
        v47 = _Block_copy(&aBlock);
        swift_release();
        v48 = objc_msgSend(v40, sel_actionWithTitle_style_handler_, v46, 1, v47);
        _Block_release(v47);

        objc_msgSend(v27, sel_addAction_, v41);
        objc_msgSend(v27, sel_addAction_, v48);
        objc_msgSend(v56, sel_presentViewController_animated_completion_, v27, 1, 0);

        return;
      }
    }
    __break(1u);
  }
}

void sub_22737D290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29[4];

  v8 = a4 + 16;
  if (qword_2540B87B8 != -1)
    swift_once();
  v9 = (_QWORD *)qword_2540BCDD0;
  sub_22744866C(a2, a3);
  swift_beginAccess();
  v10 = MEMORY[0x2276B3E34](v8);
  if (v10)
  {
    v11 = (char *)v10;
    swift_beginAccess();
    v12 = v9[6];
    v13 = v9[7];
    v29[0] = v9[5];
    v29[1] = v12;
    v29[2] = v13;
    v14 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    if (v14 != -1)
      v15 = swift_once();
    MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = sub_2273A6400(v29[3]);
    swift_bridgeObjectRelease();
    v29[0] = (uint64_t)v20;
    swift_retain();
    sub_2273FA264(v29);
    swift_release();
    *(_QWORD *)&v11[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities] = v29[0];

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v21 = MEMORY[0x2276B3E34](v8);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = *(id *)(v21 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D50E0);
    v24 = sub_22758CAD4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_227593AB0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 16))(v27 + v26, a5, v24);
    v28 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_deleteRowsAtIndexPaths_withRowAnimation_, v28, 0);

  }
}

uint64_t sub_22737D53C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x2276B3E34](v6);
  if (v7)
  {
    v8 = (char *)v7;
    sub_22737AF20();
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_tableView], sel_reloadData);

  }
  return a3(1);
}

void sub_22737D5CC(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_22737F034, v8);
  swift_release();
  swift_release();

}

uint64_t sub_22737D67C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v8 = a5 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x2276B3E34](v8);
  if (v9)
  {
    v10 = (void *)v9;
    sub_22737CCB8(a6);

  }
  return a3(1);
}

uint64_t sub_22737D838()
{
  uint64_t v0;
  uint64_t result;
  id v2;

  result = MEMORY[0x2276B3E34](v0 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_delegate);
  if (result)
  {
    v2 = sub_2274E445C();
    sub_22738BCA0();

    sub_2274F0D0C(1);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_22737D898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  _QWORD v61[36];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = v0;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD9F8]);
  v4 = (void *)sub_22758E1B4();
  v5 = objc_msgSend(v3, sel_initWithStyle_reuseIdentifier_, 1, v4);

  v6 = v5;
  v7 = sub_22758CAC8();
  if (v7 != 1)
  {
    if (!v7)
    {
      v8 = objc_msgSend(v6, sel_textLabel);
      if (v8)
      {
        v9 = v8;
        type metadata accessor for MAGUtilities();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v12 = (void *)sub_22758E1B4();
        v13 = (void *)sub_22758E1B4();
        v14 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, 0, v13);

        sub_22758E1E4();
        v15 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_setText_, v15);

      }
      v16 = objc_msgSend(v6, sel_textLabel);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, sel_setNumberOfLines_, 0);

      }
      v18 = objc_msgSend(v6, sel_textLabel);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, sel_setLineBreakMode_, 0);

      }
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9B8]), sel_init);
      if (qword_2540B87B8 != -1)
        swift_once();
      v21 = (uint64_t *)(qword_2540BCDD0 + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__mainControls);
      swift_beginAccess();
      v22 = v21[1];
      v23 = v21[2];
      v63 = *v21;
      v64 = v22;
      v65 = v23;
      v24 = qword_2540B9100;
      swift_bridgeObjectRetain();
      v25 = swift_bridgeObjectRetain();
      if (v24 != -1)
        v25 = swift_once();
      MEMORY[0x24BDAC7A8](v25, v26, v27, v28, v29);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D8140);
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = sub_227367600(0, v62);
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setOn_, v30);
      objc_msgSend(v20, sel_addTarget_action_forControlEvents_, v2, sel_didToggleActivitySwitch_, 4096);
      objc_msgSend(v6, sel_setAccessoryView_, v20);
      objc_msgSend(v6, sel_setAccessoryType_, 0);

    }
LABEL_29:

    return v6;
  }
  v31 = sub_22758CA98();
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities);
  if (v31 >= *(_QWORD *)(v32 + 16))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_19;
  }
  v33 = v32 + 16 * v31;
  v1 = *(_QWORD *)(v33 + 32);
  v2 = *(_QWORD *)(v33 + 40);
  swift_bridgeObjectRetain();
  v34 = objc_msgSend(v6, sel_textLabel);
  if (v34)
  {
    v35 = v34;
    type metadata accessor for MAGUtilities();
    v36 = swift_getObjCClassFromMetadata();
    v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v36);
    v38 = (void *)sub_22758E1B4();
    v39 = (void *)sub_22758E1B4();
    v40 = objc_msgSend(v37, sel_localizedStringForKey_value_table_, v38, 0, v39);

    sub_22758E1E4();
    v41 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v35, sel_setText_, v41);

  }
  if (qword_2540B87B8 != -1)
    goto LABEL_33;
LABEL_19:
  v42 = (_QWORD *)qword_2540BCDD0;
  swift_beginAccess();
  v43 = v42[6];
  v44 = v42[7];
  v61[0] = v42[5];
  v61[1] = v43;
  v61[2] = v44;
  v45 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v46 = swift_bridgeObjectRetain();
  if (v45 != -1)
    v46 = swift_once();
  MEMORY[0x24BDAC7A8](v46, v47, v48, v49, v50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v62 + 16))
  {
    v51 = sub_2274DE434(v1, v2);
    if ((v52 & 1) != 0)
    {
      memcpy(v61, (const void *)(*(_QWORD *)(v62 + 56) + 280 * v51), 0x118uLL);
      sub_22730B838((uint64_t)v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = objc_msgSend(v6, sel_detailTextLabel);
      sub_22730B91C((uint64_t)v61);
      if (v53)
      {
        if ((v61[0] & 1) != 0)
        {
          type metadata accessor for MAGUtilities();
          v54 = swift_getObjCClassFromMetadata();
          v55 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v54);
          v56 = (void *)sub_22758E1B4();
          v57 = (void *)sub_22758E1B4();
          v58 = objc_msgSend(v55, sel_localizedStringForKey_value_table_, v56, 0, v57);

          sub_22758E1E4();
        }
        v59 = (void *)sub_22758E1B4();
        swift_bridgeObjectRelease();
        objc_msgSend(v53, sel_setText_, v59);

      }
      objc_msgSend(v6, sel_setAccessoryType_, 1);
      goto LABEL_29;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22737E060(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if (a1 != 1)
    return 0;
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (void *)sub_22758E1B4();
  v4 = (void *)sub_22758E1B4();
  v5 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, v4);

  v6 = sub_22758E1E4();
  return v6;
}

uint64_t sub_22737E160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  if (qword_2540B87B8 != -1)
    goto LABEL_42;
  while (1)
  {
    swift_beginAccess();
    v2 = qword_2540B9100;
    swift_bridgeObjectRetain();
    v3 = swift_bridgeObjectRetain();
    if (v2 != -1)
      v3 = swift_once();
    MEMORY[0x24BDAC7A8](v3, v4, v5, v6, v7);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558D8140);
    sub_22758E7B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = (char *)v34;
    v35 = (char *)v34;
    result = (uint64_t)objc_msgSend((id)a1, sel_isOn);
    if ((_DWORD)result)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        goto LABEL_44;
      goto LABEL_6;
    }
    v12 = *(_QWORD *)(v34 + 16);
    if (!v12)
    {
      a1 = 0;
      goto LABEL_24;
    }
    if (!*(_BYTE *)(v34 + 32))
      break;
    if (v12 == 1)
    {
      a1 = 1;
LABEL_24:
      sub_2273D58D8(a1, v12);
      v8 = v35;
      goto LABEL_25;
    }
LABEL_19:
    v14 = 33;
    while (1)
    {
      a1 = v14 - 32;
      if (!v8[v14])
        goto LABEL_15;
      v15 = v14 - 31;
      if (__OFADD__(a1, 1))
        break;
      ++v14;
      if (v15 == v12)
      {
        a1 = v12;
        goto LABEL_24;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
  }
  a1 = 0;
LABEL_15:
  v13 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    return result;
  }
  if (v13 == v12)
  {
LABEL_17:
    if ((uint64_t)v12 >= a1)
      goto LABEL_24;
    __break(1u);
    goto LABEL_19;
  }
  v27 = a1 + 33;
  while (1)
  {
    if (v13 < 0)
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v27 - 32 >= v12)
      goto LABEL_39;
    v29 = v8[v27];
    if (v29)
      break;
LABEL_27:
    v28 = v27 - 31;
    ++v27;
    if (v28 == v12)
      goto LABEL_17;
  }
  if (v27 - 32 == a1)
  {
LABEL_36:
    if (__OFADD__(a1++, 1))
      goto LABEL_40;
    v12 = *((_QWORD *)v8 + 2);
    goto LABEL_27;
  }
  if (a1 < v12)
  {
    v30 = v8[a1 + 32];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22738D244((uint64_t)v8);
      v8 = (char *)result;
    }
    v8[a1 + 32] = v29;
    v8[v27] = v30;
    v35 = v8;
    goto LABEL_36;
  }
  __break(1u);
LABEL_44:
  v8 = sub_2273A5590(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
LABEL_6:
  v11 = *((_QWORD *)v8 + 2);
  v10 = *((_QWORD *)v8 + 3);
  if (v11 >= v10 >> 1)
    v8 = sub_2273A5590((char *)(v10 > 1), v11 + 1, 1, v8);
  *((_QWORD *)v8 + 2) = v11 + 1;
  v8[v11 + 32] = 0;
LABEL_25:
  v16 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v16, v17, v18, v19, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DB0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v21, v22, v23, v24, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = (_QWORD *)sub_2274474F0();
  sub_2274476D0((uint64_t)v8, v32, v33, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_22737E5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  id v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[6];
  _QWORD v88[36];

  v2 = v1;
  v86 = a1;
  v3 = sub_22758CAD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6, v7, v8, v9);
  v10 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v84 = (id)objc_opt_self();
  v85 = ObjCClassFromMetadata;
  v12 = objc_msgSend(v84, sel_bundleForClass_, ObjCClassFromMetadata);
  v13 = (void *)sub_22758E1B4();
  v14 = (void *)sub_22758E1B4();
  v15 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, 0, v14);

  v16 = v2;
  sub_22758E1E4();

  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v83(v10, v86, v3);
  v18 = *(unsigned __int8 *)(v4 + 80);
  v19 = (v18 + 24) & ~v18;
  v81 = v18 | 7;
  v82 = v19 + v5;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v73 = v10;
  v74 = v3;
  v80 = v21;
  v21(v20 + v19, v10, v3);
  swift_retain();
  v22 = (void *)sub_22758E1B4();
  swift_bridgeObjectRelease();
  v88[4] = sub_22737EE30;
  v88[5] = v20;
  v88[0] = MEMORY[0x24BDAC760];
  v88[1] = 1107296256;
  v88[2] = sub_22737D5CC;
  v88[3] = &block_descriptor_11;
  v23 = _Block_copy(v88);
  v79 = (id)objc_opt_self();
  v24 = objc_msgSend(v79, sel_contextualActionWithStyle_title_handler_, 0, v22, v23);

  _Block_release(v23);
  swift_release();
  swift_release();
  v78 = (id)objc_opt_self();
  v25 = objc_msgSend(v78, sel_systemBlueColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_227596560;
  *(_QWORD *)(v26 + 32) = v24;
  v88[0] = v26;
  sub_22758E3F4();
  v27 = sub_22730BA80(0, (unint64_t *)&unk_2558D78E0);
  v28 = v24;
  v77 = v27;
  v29 = (void *)sub_22758E3C4();
  swift_bridgeObjectRelease();
  v75 = (id)objc_opt_self();
  v30 = objc_msgSend(v75, sel_configurationWithActions_, v29);

  objc_msgSend(v30, sel_setPerformsFirstActionWithFullSwipe_, 0);
  v31 = OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities;
  v32 = *(_QWORD *)(*(_QWORD *)(v16
                              + OBJC_IVAR____TtC16MagnifierSupport37ActivitiesCustomizationViewController_activities)
                  + 16);
  v33 = v86;
  if (sub_22758CA98() >= v32)
  {

    return v30;
  }
  v34 = sub_22758CA98();
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v35 = *(_QWORD *)(v16 + v31);
  if (v34 >= *(_QWORD *)(v35 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v71 = v16;
  v72 = v28;
  v36 = v35 + 16 * v34;
  v33 = *(_QWORD *)(v36 + 32);
  v28 = *(id *)(v36 + 40);
  v37 = qword_2540B87B8;
  swift_bridgeObjectRetain();
  if (v37 != -1)
LABEL_17:
    swift_once();
  v70 = v19;
  v38 = (_QWORD *)qword_2540BCDD0;
  swift_beginAccess();
  v39 = v38[6];
  v40 = v38[7];
  v88[0] = v38[5];
  v88[1] = v39;
  v88[2] = v40;
  v41 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v42 = swift_bridgeObjectRetain();
  if (v41 != -1)
    v42 = swift_once();
  MEMORY[0x24BDAC7A8](v42, v43, v44, v45, v46);
  *(&v69 - 2) = (uint64_t)v88;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = v87[0];
  if (*(_QWORD *)(v87[0] + 16) && (v48 = sub_2274DE434(v33, (uint64_t)v28), (v49 & 1) != 0))
  {
    memcpy(v88, (const void *)(*(_QWORD *)(v47 + 56) + 280 * v48), 0x118uLL);
    sub_22730B838((uint64_t)v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22730B91C((uint64_t)v88);
    if ((v88[0] & 0x100) != 0)
    {
      v50 = objc_msgSend(v84, sel_bundleForClass_, v85);
      v51 = (void *)sub_22758E1B4();
      v52 = (void *)sub_22758E1B4();
      v53 = objc_msgSend(v50, sel_localizedStringForKey_value_table_, v51, 0, v52);

      sub_22758E1E4();
      v54 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v56 = v73;
      v55 = v74;
      v83(v73, v86, v74);
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = v54;
      v80(v57 + v70, v56, v55);
      swift_retain();
      v58 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      v87[4] = sub_22737EECC;
      v87[5] = v57;
      v87[0] = MEMORY[0x24BDAC760];
      v87[1] = 1107296256;
      v87[2] = sub_22737D5CC;
      v87[3] = &block_descriptor_12_0;
      v59 = _Block_copy(v87);
      v60 = objc_msgSend(v79, sel_contextualActionWithStyle_title_handler_, 1, v58, v59);

      _Block_release(v59);
      swift_release();
      swift_release();
      v61 = objc_msgSend(v78, sel_systemRedColor);
      objc_msgSend(v60, sel_setBackgroundColor_, v61);

      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_227596550;
      v63 = v72;
      *(_QWORD *)(v62 + 32) = v60;
      *(_QWORD *)(v62 + 40) = v63;
      v87[0] = v62;
      sub_22758E3F4();
      v64 = v63;
      v65 = v60;
      v66 = (void *)sub_22758E3C4();
      swift_bridgeObjectRelease();
      v67 = objc_msgSend(v75, sel_configurationWithActions_, v66);

      v30 = v67;
      objc_msgSend(v30, sel_setPerformsFirstActionWithFullSwipe_, 0);

    }
    else
    {

    }
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v30;
}

uint64_t sub_22737EE08()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22737EE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22737EED8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_22737D53C);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22758CAD4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22737EECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22737EED8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_22737D67C);
}

uint64_t sub_22737EED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_22758CAD4() - 8) + 80);
  return a5(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), v5 + ((v10 + 24) & ~v10));
}

uint64_t sub_22737EF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22758CAD4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_22737EFCC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_22758CAD4() - 8) + 80);
  sub_22737D290(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_22737F010()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_22737F034(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_22737F048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2274689EC(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_22737F060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_227467384(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_22737F078@<X0>(uint64_t *a1@<X8>)
{
  return sub_22737F060(a1);
}

uint64_t sub_22737F08C@<X0>(uint64_t *a1@<X8>)
{
  return sub_22737F048(a1);
}

uint64_t sub_22737F0BC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_22737F1E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22737F228()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_22737F368(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98838;
}

uint64_t sub_22737F378()
{
  sub_22738072C();
  return sub_22758E3AC();
}

uint64_t sub_22737F3D4()
{
  sub_22738072C();
  return sub_22758E388();
}

uint64_t sub_22737F420()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_22737F538(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98860;
}

uint64_t sub_22737F548()
{
  sub_2273806E8();
  return sub_22758E3AC();
}

uint64_t sub_22737F5A4()
{
  sub_2273806E8();
  return sub_22758E388();
}

void sub_22737F5F0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22737F63C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_22737F760(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98888;
}

uint64_t sub_22737F770()
{
  sub_227380770();
  return sub_22758E3AC();
}

uint64_t sub_22737F7CC()
{
  sub_227380770();
  return sub_22758E388();
}

uint64_t sub_22737F818()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t *sub_22737F968@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_22737F980(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF988B0;
}

uint64_t sub_22737F990()
{
  sub_2273806A4();
  return sub_22758E3AC();
}

uint64_t sub_22737F9EC()
{
  sub_2273806A4();
  return sub_22758E388();
}

void sub_22737FA38(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF988D8;
}

uint64_t sub_22737FA48()
{
  sub_2273807B4();
  return sub_22758E3AC();
}

uint64_t sub_22737FAA4()
{
  sub_2273807B4();
  return sub_22758E388();
}

_QWORD *sub_22737FAF0@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_22737FB04(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_22737FB0C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EF98900;
}

uint64_t sub_22737FB1C()
{
  sub_227380660();
  return sub_22758E3AC();
}

uint64_t sub_22737FB78()
{
  sub_227380660();
  return sub_22758E388();
}

uint64_t sub_22737FBC4()
{
  uint64_t v0;

  sub_22731A1A4(v0 + OBJC_IVAR____TtC16MagnifierSupport21DetectionRecordedFile_url, &qword_2540B7B10);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22737FC10()
{
  return type metadata accessor for DetectionRecordedFile();
}

uint64_t type metadata accessor for DetectionRecordedFile()
{
  uint64_t result;

  result = qword_2540B9138;
  if (!qword_2540B9138)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22737FC54()
{
  unint64_t v0;

  sub_22737FCD4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22737FCD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540B7B18)
  {
    sub_22758C858();
    v0 = sub_22758EA30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540B7B18);
  }
}

uint64_t storeEnumTagSinglePayload for DetectionRecording(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22737FD68 + 4 * byte_227598C30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22737FD88 + 4 * byte_227598C35[v4]))();
}

_BYTE *sub_22737FD68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22737FD88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22737FD90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22737FD98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22737FDA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22737FDA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DetectionRecording()
{
  return &type metadata for DetectionRecording;
}

uint64_t storeEnumTagSinglePayload for DetectionDebugOverlayOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22737FE10 + 4 * byte_227598C3F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22737FE44 + 4 * byte_227598C3A[v4]))();
}

uint64_t sub_22737FE44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22737FE4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22737FE54);
  return result;
}

uint64_t sub_22737FE60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22737FE68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22737FE6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22737FE74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectionDebugOverlayOption()
{
  return &type metadata for DetectionDebugOverlayOption;
}

ValueMetadata *type metadata accessor for InternalPeopleDetectionFeedback()
{
  return &type metadata for InternalPeopleDetectionFeedback;
}

ValueMetadata *type metadata accessor for InternalDetectionSection()
{
  return &type metadata for InternalDetectionSection;
}

uint64_t _s16MagnifierSupport17DetectionFeedbackOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22737FF0C + 4 * byte_227598C49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22737FF40 + 4 * byte_227598C44[v4]))();
}

uint64_t sub_22737FF40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22737FF48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22737FF50);
  return result;
}

uint64_t sub_22737FF5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22737FF64);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22737FF68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22737FF70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectionFeedback()
{
  return &type metadata for DetectionFeedback;
}

uint64_t _s16MagnifierSupport13DetectionUnitOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22737FFD8 + 4 * byte_227598C53[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22738000C + 4 * byte_227598C4E[v4]))();
}

uint64_t sub_22738000C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227380014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22738001CLL);
  return result;
}

uint64_t sub_227380028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227380030);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227380034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22738003C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectionUnit()
{
  return &type metadata for DetectionUnit;
}

uint64_t sub_227380058()
{
  return sub_2273802E0(&qword_2558D78F8, &qword_2558D7900);
}

unint64_t sub_227380080()
{
  unint64_t result;

  result = qword_2558D7908;
  if (!qword_2558D7908)
  {
    result = MEMORY[0x2276B3C78](&unk_227598E50, &type metadata for DetectionUnit);
    atomic_store(result, (unint64_t *)&qword_2558D7908);
  }
  return result;
}

unint64_t sub_2273800C8()
{
  unint64_t result;

  result = qword_2558D7910;
  if (!qword_2558D7910)
  {
    result = MEMORY[0x2276B3C78](&unk_227598FC0, &type metadata for DetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D7910);
  }
  return result;
}

uint64_t sub_22738010C()
{
  return sub_2273802E0(&qword_2558D7918, &qword_2540B9CF8);
}

uint64_t sub_227380130()
{
  return sub_2273802E0(&qword_2558D7920, &qword_2558D7928);
}

unint64_t sub_227380158()
{
  unint64_t result;

  result = qword_2558D7930;
  if (!qword_2558D7930)
  {
    result = MEMORY[0x2276B3C78](&unk_2275990E8, &type metadata for InternalDetectionSection);
    atomic_store(result, (unint64_t *)&qword_2558D7930);
  }
  return result;
}

unint64_t sub_2273801A0()
{
  unint64_t result;

  result = qword_2558D7938;
  if (!qword_2558D7938)
  {
    result = MEMORY[0x2276B3C78](&unk_227599258, &type metadata for InternalPeopleDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D7938);
  }
  return result;
}

uint64_t sub_2273801E4()
{
  return sub_2273802E0(&qword_2558D7940, &qword_2558D7948);
}

uint64_t sub_227380208()
{
  return sub_2273802E0(&qword_2558D7950, &qword_2558D7958);
}

unint64_t sub_227380230()
{
  unint64_t result;

  result = qword_2558D7960;
  if (!qword_2558D7960)
  {
    result = MEMORY[0x2276B3C78](&unk_227599380, &type metadata for DetectionDebugOverlayOption);
    atomic_store(result, (unint64_t *)&qword_2558D7960);
  }
  return result;
}

unint64_t sub_227380278()
{
  unint64_t result;

  result = qword_2558D7968;
  if (!qword_2558D7968)
  {
    result = MEMORY[0x2276B3C78](&unk_2275994F0, &type metadata for DetectionRecording);
    atomic_store(result, (unint64_t *)&qword_2558D7968);
  }
  return result;
}

uint64_t sub_2273802BC()
{
  return sub_2273802E0(&qword_2558D7970, &qword_2540B9D10);
}

uint64_t sub_2273802E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2276B3C78](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227380320(uint64_t *a1, uint64_t *a2)
{
  return sub_22738032C(*a1, *a2);
}

uint64_t sub_22738032C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  int v39;
  int v40;
  char v41;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_22758C858();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6, v7, v8, v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558D7978);
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27, v28, v29, v30);
  v32 = (char *)&v43 - v31;
  v43 = a1;
  v33 = a1 + OBJC_IVAR____TtC16MagnifierSupport21DetectionRecordedFile_url;
  swift_beginAccess();
  sub_227349C38(v33, (uint64_t)v32);
  v44 = a2;
  v34 = a2 + OBJC_IVAR____TtC16MagnifierSupport21DetectionRecordedFile_url;
  swift_beginAccess();
  v35 = (uint64_t)&v18[*(int *)(v12 + 48)];
  sub_227349C38((uint64_t)v32, (uint64_t)v18);
  sub_227349C38(v34, v35);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v36((uint64_t)v18, 1, v4) != 1)
  {
    sub_227349C38((uint64_t)v18, (uint64_t)v25);
    if (v36(v35, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v11, v35, v4);
      sub_227380618();
      v37 = sub_22758E190();
      v38 = *(void (**)(char *, uint64_t))(v5 + 8);
      v38(v11, v4);
      sub_22731A1A4((uint64_t)v32, &qword_2540B7B10);
      v38(v25, v4);
      sub_22731A1A4((uint64_t)v18, &qword_2540B7B10);
      if ((v37 & 1) != 0)
        goto LABEL_8;
LABEL_14:
      v41 = 0;
      return v41 & 1;
    }
    sub_22731A1A4((uint64_t)v32, &qword_2540B7B10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v4);
LABEL_6:
    sub_22731A1A4((uint64_t)v18, &qword_2558D7978);
    goto LABEL_14;
  }
  sub_22731A1A4((uint64_t)v32, &qword_2540B7B10);
  if (v36(v35, 1, v4) != 1)
    goto LABEL_6;
  sub_22731A1A4((uint64_t)v18, &qword_2540B7B10);
LABEL_8:
  v39 = *(unsigned __int8 *)(v43 + OBJC_IVAR____TtC16MagnifierSupport21DetectionRecordedFile_isLive);
  v40 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC16MagnifierSupport21DetectionRecordedFile_isLive);
  v41 = v40 == 2 && v39 == 2;
  if (v39 != 2 && v40 != 2)
    v41 = ((v39 & 1) == 0) ^ v40;
  return v41 & 1;
}

unint64_t sub_227380618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558D7980;
  if (!qword_2558D7980)
  {
    v1 = sub_22758C858();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDCDB00], v1);
    atomic_store(result, (unint64_t *)&qword_2558D7980);
  }
  return result;
}

unint64_t sub_227380660()
{
  unint64_t result;

  result = qword_2558D7988;
  if (!qword_2558D7988)
  {
    result = MEMORY[0x2276B3C78](&unk_227599478, &type metadata for DetectionRecording);
    atomic_store(result, (unint64_t *)&qword_2558D7988);
  }
  return result;
}

unint64_t sub_2273806A4()
{
  unint64_t result;

  result = qword_2558D7990;
  if (!qword_2558D7990)
  {
    result = MEMORY[0x2276B3C78](&unk_227599308, &type metadata for DetectionDebugOverlayOption);
    atomic_store(result, (unint64_t *)&qword_2558D7990);
  }
  return result;
}

unint64_t sub_2273806E8()
{
  unint64_t result;

  result = qword_2558D7998;
  if (!qword_2558D7998)
  {
    result = MEMORY[0x2276B3C78](&unk_2275991E0, &type metadata for InternalPeopleDetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2558D7998);
  }
  return result;
}

unint64_t sub_22738072C()
{
  unint64_t result;

  result = qword_2558D79A0;
  if (!qword_2558D79A0)
  {
    result = MEMORY[0x2276B3C78](&unk_227599070, &type metadata for InternalDetectionSection);
    atomic_store(result, (unint64_t *)&qword_2558D79A0);
  }
  return result;
}

unint64_t sub_227380770()
{
  unint64_t result;

  result = qword_2540B9068;
  if (!qword_2540B9068)
  {
    result = MEMORY[0x2276B3C78](&unk_227598F48, &type metadata for DetectionFeedback);
    atomic_store(result, (unint64_t *)&qword_2540B9068);
  }
  return result;
}

unint64_t sub_2273807B4()
{
  unint64_t result;

  result = qword_2540B7EC0;
  if (!qword_2540B7EC0)
  {
    result = MEMORY[0x2276B3C78](&unk_227598DD8, &type metadata for DetectionUnit);
    atomic_store(result, (unint64_t *)&qword_2540B7EC0);
  }
  return result;
}

uint64_t sub_227380818(uint64_t a1, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t result;

  type metadata accessor for AssistiveAccessViewController();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v4 = OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView;
  v5 = *(id *)&v3[OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView];
  v6 = objc_msgSend(v5, sel_layer);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {

    swift_unknownObjectWeakAssign();
    v7 = *(void **)(a2 + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_captureSession);
    v8 = *(id *)&v3[v4];
    v9 = v7;
    v10 = objc_msgSend(v8, sel_layer);
    objc_opt_self();
    v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      objc_msgSend(v11, sel_setSession_, v9);

      return (uint64_t)v3;
    }

  }
  else
  {

  }
  result = sub_22758ECC4();
  __break(1u);
  return result;
}

void sub_2273809A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v3 = *(void **)(a3 + OBJC_IVAR____TtC16MagnifierSupport17MAGCaptureService_captureSession);
  v4 = *(id *)(a1 + OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView);
  v7 = v3;
  v5 = objc_msgSend(v4, sel_layer);
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    objc_msgSend(v6, sel_setSession_, v7);

  }
  else
  {

    sub_22758ECC4();
    __break(1u);
  }
}

uint64_t sub_227380A98(uint64_t a1)
{
  uint64_t *v1;

  return sub_227380818(a1, *v1);
}

void sub_227380AA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2273809A8(a1, a2, *v2);
}

uint64_t sub_227380AB4()
{
  return sub_22758D920();
}

uint64_t sub_227380AEC()
{
  sub_227381974();
  return sub_22758D95C();
}

uint64_t sub_227380B3C()
{
  sub_227381974();
  return sub_22758D92C();
}

void sub_227380B8C()
{
  sub_227381974();
  sub_22758D950();
  __break(1u);
}

id sub_227380C88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  CGRect v42;
  CGRect v43;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = result;
  objc_msgSend(result, sel_addSubview_, *(_QWORD *)&v1[v2]);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227598070;
  v6 = objc_msgSend(*(id *)&v1[v2], sel_widthAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_widthAnchor);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v9 = result;
  objc_msgSend(result, sel_frame);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v42.origin.x = v11;
  v42.origin.y = v13;
  v42.size.width = v15;
  v42.size.height = v17;
  v18 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, CGRectGetWidth(v42) * 0.5);

  *(_QWORD *)(v5 + 32) = v18;
  v19 = objc_msgSend(*(id *)&v1[v2], sel_heightAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = result;
  v21 = objc_msgSend(result, sel_heightAnchor);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = result;
  objc_msgSend(result, sel_frame);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v43.origin.x = v24;
  v43.origin.y = v26;
  v43.size.width = v28;
  v43.size.height = v30;
  v31 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, CGRectGetHeight(v43) * 0.5);

  *(_QWORD *)(v5 + 40) = v31;
  v32 = objc_msgSend(*(id *)&v1[v2], sel_centerXAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v33 = result;
  v34 = objc_msgSend(result, sel_centerXAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
  *(_QWORD *)(v5 + 48) = v35;
  v36 = objc_msgSend(*(id *)&v1[v2], sel_centerYAnchor);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v37 = result;
    v38 = (void *)objc_opt_self();
    v39 = objc_msgSend(v37, sel_centerYAnchor);

    v40 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v39);
    *(_QWORD *)(v5 + 56) = v40;
    sub_22758E3F4();
    sub_22730BA80(0, (unint64_t *)&qword_2540B9F00);
    v41 = (void *)sub_22758E3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel_activateConstraints_, v41);

    objc_msgSend(*(id *)&v1[v2], sel_setAccessibilityIgnoresInvertColors_, 1);
    objc_msgSend(*(id *)&v1[v2], sel_setAccessibilityTraits_, *MEMORY[0x24BEBDF10]);
    return objc_msgSend(*(id *)&v1[v2], sel_setIsAccessibilityElement_, 1);
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_22738116C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *oslog;
  uint64_t v19;

  v1 = _sSo22UIInterfaceOrientationV16MagnifierSupportE6windowABvgZ_0();
  v2 = *(id *)(v0 + OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView);
  v3 = objc_msgSend(v2, sel_layer);
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;

    v6 = objc_msgSend(v5, sel_connection);
    if (v6)
    {
      if ((unint64_t)(v1 - 1) >= 4)
      {
        if (qword_2558D4AA0 != -1)
          swift_once();
        v8 = sub_22758CF9C();
        __swift_project_value_buffer(v8, (uint64_t)qword_2558D6308);
        v9 = sub_22758CF84();
        v10 = sub_22758E6C4();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v11 = 0;
          _os_log_impl(&dword_2272F4000, v9, v10, "Unable to get valid video rotation angle.", v11, 2u);
          MEMORY[0x2276B3D50](v11, -1, -1);
        }

        v7 = 0.0;
      }
      else
      {
        v7 = dbl_227599678[v1 - 1];
      }
      objc_msgSend(v6, sel_setVideoRotationAngle_, v7);

    }
    if (qword_2558D4AA0 != -1)
      swift_once();
    v12 = sub_22758CF9C();
    __swift_project_value_buffer(v12, (uint64_t)qword_2558D6308);
    oslog = sub_22758CF84();
    v13 = sub_22758E6DC();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      type metadata accessor for UIInterfaceOrientation(0);
      v16 = sub_22758E238();
      sub_22733611C(v16, v17, &v19);
      sub_22758EA48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2272F4000, oslog, v13, "Updating AVCaptureVideoPreviewLayer orientation to %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v15, -1, -1);
      MEMORY[0x2276B3D50](v14, -1, -1);

    }
    else
    {

    }
  }
  else
  {

    sub_22758ECC4();
    __break(1u);
  }
}

id sub_2273814B0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  objc_super v12;

  v6 = OBJC_IVAR____TtC16MagnifierSupport29AssistiveAccessViewController_cameraVideoPreviewView;
  v7 = objc_allocWithZone((Class)type metadata accessor for AssistiveAccessLivePreviewView());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    v9 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for AssistiveAccessViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_227381694()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssistiveAccessViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AssistiveAccessViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AssistiveAccessLivePreviewView()
{
  return objc_opt_self();
}

uint64_t sub_227381830()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for MAGUtilities();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_22758E1B4();
  v3 = (void *)sub_22758E1B4();
  v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

  v5 = sub_22758E1E4();
  return v5;
}

ValueMetadata *type metadata accessor for AssistiveAccessPreviewViewRepresentable()
{
  return &type metadata for AssistiveAccessPreviewViewRepresentable;
}

unint64_t sub_227381930()
{
  unint64_t result;

  result = qword_2558D7A08;
  if (!qword_2558D7A08)
  {
    result = MEMORY[0x2276B3C78](&unk_2275995A8, &type metadata for AssistiveAccessPreviewViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_2558D7A08);
  }
  return result;
}

unint64_t sub_227381974()
{
  unint64_t result;

  result = qword_2558D7A10;
  if (!qword_2558D7A10)
  {
    result = MEMORY[0x2276B3C78](&unk_2275995F8, &type metadata for AssistiveAccessPreviewViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_2558D7A10);
  }
  return result;
}

uint64_t type metadata accessor for MFActivityViewController()
{
  return objc_opt_self();
}

unint64_t sub_227381ACC()
{
  unint64_t result;

  result = qword_2558D7A40;
  if (!qword_2558D7A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2558D7A40);
  }
  return result;
}

uint64_t type metadata accessor for ControlTrayView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ControlSubset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227381C28 + 4 * byte_2275996C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227381C5C + 4 * asc_2275996C0[v4]))();
}

uint64_t sub_227381C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227381C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227381C6CLL);
  return result;
}

uint64_t sub_227381C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227381C80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227381C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227381C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlSubset()
{
  return &type metadata for ControlSubset;
}

unint64_t sub_227381CAC()
{
  unint64_t result;

  result = qword_2558D7A80;
  if (!qword_2558D7A80)
  {
    result = MEMORY[0x2276B3C78](&unk_227599730, &type metadata for ControlSubset);
    atomic_store(result, &qword_2558D7A80);
  }
  return result;
}

uint64_t sub_227381CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 624) = a2;
  v4 = sub_22758C930();
  *(_QWORD *)(v2 + 632) = v4;
  *(_QWORD *)(v2 + 640) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 648) = swift_task_alloc();
  *(_QWORD *)(v2 + 656) = swift_task_alloc();
  v5 = sub_22758DF20();
  *(_QWORD *)(v2 + 664) = v5;
  *(_QWORD *)(v2 + 672) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 680) = swift_task_alloc();
  v6 = sub_22758DF68();
  *(_QWORD *)(v2 + 688) = v6;
  *(_QWORD *)(v2 + 696) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 704) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9E30);
  *(_QWORD *)(v2 + 712) = swift_task_alloc();
  *(_OWORD *)(v2 + 720) = *(_OWORD *)a1;
  *(_BYTE *)(v2 + 957) = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(v2 + 736) = sub_22758E49C();
  *(_QWORD *)(v2 + 744) = sub_22758E490();
  *(_QWORD *)(v2 + 752) = sub_22758E460();
  *(_QWORD *)(v2 + 760) = v7;
  return swift_task_switch();
}

uint64_t sub_227381E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 624) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1);
  *(_QWORD *)(v0 + 768) = v2;
  if (v2)
    __asm { BR              X10 }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2273838D8()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 784);
  swift_setDeallocating();

  swift_release();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_227383970()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  double v11;
  double v12;
  void (*v13)(uint64_t, uint64_t);
  void *v14;
  id v15;
  uint64_t inited;
  _QWORD *v17;
  void *v19;
  void **v20;
  void (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;

  v1 = *(void **)(v0 + 728);
  sub_22755DC98(v1);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (*(_BYTE *)(v0 + 285) == 1)
  {
    v2 = *(_QWORD *)(v0 + 768);
    v3 = *(void **)(v0 + 728);
    v4 = *(_QWORD *)(v0 + 648);
    v5 = *(_QWORD *)(v0 + 640);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService;
    *(_QWORD *)(v0 + 800) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService;
    v8 = *(_QWORD *)(v2 + v7)
       + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
    swift_beginAccess();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 808) = v9;
    v9(v4, v8, v6);
    v10 = v3;
    sub_22758C8DC();
    v12 = v11;
    v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v0 + 816) = v13;
    v13(v4, v6);
    if (v12 < -5.0)
    {
      v14 = *(void **)(v0 + 728);
      *(_QWORD *)(v0 + 824) = *(_QWORD *)(v2 + v7);
      swift_retain();
      v15 = objc_msgSend(v14, sel_capturedImage);
      type metadata accessor for MAGCVPixelBufferWrapper();
      inited = swift_initStackObject();
      *(_QWORD *)(v0 + 832) = inited;
      *(_QWORD *)(inited + 16) = v15;
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 840) = v17;
      *v17 = v0;
      v17[1] = sub_227383CF0;
      return sub_22735B514(inited);
    }
    if (qword_2558D4B60 != -1)
      swift_once();
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(_QWORD *)(v0 + 648);
    v25 = *(_QWORD *)(v0 + 632);
    if (byte_2558D92C8)
      v26 = 0.01;
    else
      v26 = 0.25;
    v27 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
    *(_QWORD *)(v0 + 856) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
    v28 = v23 + v27;
    swift_beginAccess();
    v22(v24, v28, v25);
    sub_22758C8DC();
    v30 = v29;
    v21(v24, v25);
    if (v26 < -v30)
    {
      *(_QWORD *)(v0 + 864) = *(_QWORD *)(*(_QWORD *)(v0 + 768) + *(_QWORD *)(v0 + 800));
      v31 = *(_QWORD *)(v0 + 728);
      swift_retain();
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 872) = v32;
      *v32 = v0;
      v32[1] = sub_227383F40;
      return sub_227352FD4(v31);
    }
    v20 = (void **)(v0 + 728);
    v33 = *(void **)(v0 + 768);
    v34 = *(void **)(v0 + 720);
    swift_release();

  }
  else
  {
    v19 = *(void **)(v0 + 768);
    swift_release();

    v20 = (void **)(v0 + 720);
  }
  v35 = *v20;
  v36 = *(void **)(v0 + 728);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227383CF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 848) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(_QWORD *)(v2 + 832);
    swift_setDeallocating();

    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_227383D84()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v14;
  void *v15;
  void *v16;

  if (qword_2558D4B60 != -1)
    swift_once();
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 648);
  v5 = *(_QWORD *)(v0 + 632);
  if (byte_2558D92C8)
    v6 = 0.01;
  else
    v6 = 0.25;
  v7 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
  *(_QWORD *)(v0 + 856) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
  v8 = v3 + v7;
  swift_beginAccess();
  v2(v4, v8, v5);
  sub_22758C8DC();
  v10 = v9;
  v1(v4, v5);
  if (v6 >= -v10)
  {
    v14 = *(void **)(v0 + 768);
    v15 = *(void **)(v0 + 720);
    swift_release();

    v16 = *(void **)(v0 + 728);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 864) = *(_QWORD *)(*(_QWORD *)(v0 + 768) + *(_QWORD *)(v0 + 800));
    v11 = *(_QWORD *)(v0 + 728);
    swift_retain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v12;
    *v12 = v0;
    v12[1] = sub_227383F40;
    return sub_227352FD4(v11);
  }
}

uint64_t sub_227383F40(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 958) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_227383FA8()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v9;
  id v10;
  uint64_t v11;

  if ((*(_BYTE *)(v0 + 958) & 1) != 0)
  {
    swift_release();
    v1 = *(char **)(v0 + 768);
    v2 = *(void **)(v0 + 720);
    v3 = *(_QWORD *)(v0 + 648);
    v4 = *(_QWORD *)(v0 + 640);
    v5 = *(_QWORD *)(v0 + 632);
    v6 = &v1[*(_QWORD *)(v0 + 856)];
    sub_22758C924();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 40))(v6, v3, v5);
    swift_endAccess();

    v7 = *(void **)(v0 + 728);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(void **)(v0 + 728);
    *(_QWORD *)(v0 + 880) = *(_QWORD *)(*(_QWORD *)(v0 + 768) + *(_QWORD *)(v0 + 800));
    swift_retain();
    v10 = objc_msgSend(v9, sel_capturedImage);
    type metadata accessor for MAGCVPixelBufferWrapper();
    v11 = swift_allocObject();
    *(_QWORD *)(v0 + 888) = v11;
    *(_QWORD *)(v11 + 16) = v10;
    return swift_task_switch();
  }
}

uint64_t sub_227384120()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 896) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 880);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 904) = v2;
  *v2 = v0;
  v2[1] = sub_2273841B8;
  return sub_22758EE80();
}

uint64_t sub_2273841B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 912) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227384224()
{
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22738426C()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;

  swift_release();
  v1 = *(char **)(v0 + 768);
  v2 = *(void **)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 648);
  v4 = *(_QWORD *)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 632);
  v6 = &v1[*(_QWORD *)(v0 + 856)];
  sub_22758C924();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 40))(v6, v3, v5);
  swift_endAccess();

  v7 = *(void **)(v0 + 728);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227384360()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 912);
  swift_release();
  swift_release();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2273843C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[115];
  v2 = v0[108];
  v3 = swift_task_alloc();
  v0[116] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[117] = v4;
  *v4 = v0;
  v4[1] = sub_22738446C;
  return sub_22758EE80();
}

uint64_t sub_22738446C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 944) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2273844D8()
{
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_227384520()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 944);
  swift_release();
  swift_release();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227384588()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  double v11;
  double v12;
  void (*v13)(uint64_t, uint64_t);
  void *v14;
  id v15;
  uint64_t inited;
  _QWORD *v17;
  id *v19;
  void (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  void *v33;

  v1 = *(void **)(v0 + 728);
  sub_22755DC98(v1);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (*(_BYTE *)(v0 + 285) == 1)
  {
    v2 = *(_QWORD *)(v0 + 768);
    v3 = *(void **)(v0 + 728);
    v4 = *(_QWORD *)(v0 + 648);
    v5 = *(_QWORD *)(v0 + 640);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService;
    *(_QWORD *)(v0 + 800) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService;
    v8 = *(_QWORD *)(v2 + v7)
       + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_lastPointSpeakAnnouncementTime;
    swift_beginAccess();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 808) = v9;
    v9(v4, v8, v6);
    v10 = v3;
    sub_22758C8DC();
    v12 = v11;
    v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v0 + 816) = v13;
    v13(v4, v6);
    if (v12 < -5.0)
    {
      v14 = *(void **)(v0 + 728);
      *(_QWORD *)(v0 + 824) = *(_QWORD *)(v2 + v7);
      swift_retain();
      v15 = objc_msgSend(v14, sel_capturedImage);
      type metadata accessor for MAGCVPixelBufferWrapper();
      inited = swift_initStackObject();
      *(_QWORD *)(v0 + 832) = inited;
      *(_QWORD *)(inited + 16) = v15;
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 840) = v17;
      *v17 = v0;
      v17[1] = sub_227383CF0;
      return sub_22735B514(inited);
    }
    if (qword_2558D4B60 != -1)
      swift_once();
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
    v22 = *(_QWORD *)(v0 + 768);
    v23 = *(_QWORD *)(v0 + 648);
    v24 = *(_QWORD *)(v0 + 632);
    if (byte_2558D92C8)
      v25 = 0.01;
    else
      v25 = 0.25;
    v26 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
    *(_QWORD *)(v0 + 856) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
    v27 = v22 + v26;
    swift_beginAccess();
    v21(v23, v27, v24);
    sub_22758C8DC();
    v29 = v28;
    v20(v23, v24);
    if (v25 < -v29)
    {
      *(_QWORD *)(v0 + 864) = *(_QWORD *)(*(_QWORD *)(v0 + 768) + *(_QWORD *)(v0 + 800));
      v30 = *(_QWORD *)(v0 + 728);
      swift_retain();
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 872) = v31;
      *v31 = v0;
      v31[1] = sub_227383F40;
      return sub_227352FD4(v30);
    }
    v19 = (id *)(v0 + 728);
    v32 = *(void **)(v0 + 720);

    swift_release();
  }
  else
  {

    swift_release();
    v19 = (id *)(v0 + 720);
  }
  v33 = *(void **)(v0 + 728);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227384910()
{
  uint64_t v0;
  id *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void *v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  void *v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  id v34;
  char v35;
  void (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v50;
  void *v51;
  _QWORD *v52;

  v1 = (id *)(v0 + 616);
  v2 = *(void **)(v0 + 848);
  v3 = *(_QWORD *)(v0 + 832);
  swift_setDeallocating();

  swift_release();
  *(_QWORD *)(v0 + 616) = v2;
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D5828);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_16;
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(unsigned __int8 *)(v0 + 280);
  if (v8 != 4)
    goto LABEL_15;
  v9 = v7 | v6;
  if (v5 == 8 && !v9)
  {
    if (qword_2558D4A70 != -1)
      swift_once();
    v10 = sub_22758CF9C();
    __swift_project_value_buffer(v10, (uint64_t)qword_2558D6278);
    v11 = sub_22758CF84();
    v12 = sub_22758E6B8();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(void **)(v0 + 848);
    if (v13)
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_2272F4000, v11, v12, "No Blur Value Generated", v15, 2u);
      MEMORY[0x2276B3D50](v15, -1, -1);

    }
    else
    {

    }
    v34 = *v1;
    goto LABEL_23;
  }
  if (v5 != 9 || v9)
  {
LABEL_15:
    sub_227386414(v5, v6, v7, v8);
LABEL_16:

    if (qword_2558D4A70 != -1)
      swift_once();
    v22 = *(void **)(v0 + 848);
    v23 = sub_22758CF9C();
    __swift_project_value_buffer(v23, (uint64_t)qword_2558D6278);
    v24 = v22;
    v25 = v22;
    v26 = sub_22758CF84();
    v27 = sub_22758E6B8();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(void **)(v0 + 848);
    if (!v28)
    {

LABEL_24:
      v35 = 0;
      goto LABEL_25;
    }
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138412290;
    v32 = v29;
    v33 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 568) = v33;
    sub_22758EA48();
    *v31 = v33;

    _os_log_impl(&dword_2272F4000, v26, v27, "Blur Error %@", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v31, -1, -1);
    MEMORY[0x2276B3D50](v30, -1, -1);

    v34 = v29;
LABEL_23:

    goto LABEL_24;
  }
  if (qword_2558D4A70 != -1)
    swift_once();
  v16 = sub_22758CF9C();
  __swift_project_value_buffer(v16, (uint64_t)qword_2558D6278);
  v17 = sub_22758CF84();
  v18 = sub_22758E6B8();
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(void **)(v0 + 848);
  if (v19)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2272F4000, v17, v18, "Blur Detected", v21, 2u);
    MEMORY[0x2276B3D50](v21, -1, -1);

  }
  else
  {

  }
  v35 = 1;
LABEL_25:
  if (qword_2558D4B60 != -1)
    swift_once();
  v36 = *(void (**)(uint64_t, uint64_t))(v0 + 816);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
  v38 = *(_QWORD *)(v0 + 768);
  v39 = *(_QWORD *)(v0 + 648);
  v40 = *(_QWORD *)(v0 + 632);
  if (byte_2558D92C8)
    v41 = 0.01;
  else
    v41 = 0.25;
  v42 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
  *(_QWORD *)(v0 + 856) = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_lastHandPoseTime;
  v43 = v38 + v42;
  swift_beginAccess();
  v37(v39, v43, v40);
  sub_22758C8DC();
  v45 = v44;
  v36(v39, v40);
  if (v41 >= -v45)
  {
    v50 = *(void **)(v0 + 720);

    swift_release();
    v51 = *(void **)(v0 + 728);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 864) = *(_QWORD *)(*(_QWORD *)(v0 + 768) + *(_QWORD *)(v0 + 800));
    v46 = *(void **)(v0 + 728);
    swift_retain();
    if ((v35 & 1) != 0)
    {
      v47 = objc_msgSend(v46, sel_capturedImage);
      type metadata accessor for MAGCVPixelBufferWrapper();
      v48 = swift_allocObject();
      *(_QWORD *)(v0 + 920) = v48;
      *(_QWORD *)(v48 + 16) = v47;
      return swift_task_switch();
    }
    else
    {
      v52 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 872) = v52;
      *v52 = v0;
      v52[1] = sub_227383F40;
      return sub_227352FD4((uint64_t)v46);
    }
  }
}

uint64_t sub_227384F38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227384F5C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_22758E49C();
  v0[3] = sub_22758E490();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_227384FC0;
  return sub_22730E868();
}

uint64_t sub_227384FC0()
{
  swift_task_dealloc();
  sub_22758E460();
  return swift_task_switch();
}

uint64_t sub_227385030()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227385060(void *a1, void *a2)
{
  char *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t result;

  swift_getKeyPath();
  swift_getKeyPath();
  v4 = a1;
  sub_22758D1A0();
  v5 = sub_2274E4588();
  v6 = objc_msgSend(v5, sel_layer);
  objc_opt_self();
  v7 = (void *)swift_dynamicCastObjCClass();
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setAutomaticallyDimsOverCaptureRegion_, 0);

    objc_msgSend(v8, sel_setSession_, 0);
    type metadata accessor for RotationRateManager();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
    *(_BYTE *)(v9 + 24) = 0;
    v10 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager;
    *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager] = v9;
    swift_release();
    v11 = *(_QWORD *)&v4[v10];
    if (v11 && (*(_BYTE *)(v11 + 24) & 1) == 0)
    {
      v12 = *(void **)(v11 + 16);
      swift_retain();
      objc_msgSend(v12, sel_startDeviceMotionUpdates);
      *(_BYTE *)(v11 + 24) = 1;
      swift_release();
    }
    v13 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService]
                    + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager);
    if ((*(_BYTE *)(v13 + 24) & 1) == 0)
    {
      v14 = *(void **)(v13 + 16);
      swift_retain();
      objc_msgSend(v14, sel_startDeviceMotionUpdates);
      *(_BYTE *)(v13 + 24) = 1;
      swift_release();
    }
    v15 = objc_msgSend(objc_allocWithZone((Class)ARFrameLuminanceManager), sel_init);
    v16 = *(void **)&v4[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager];
    *(_QWORD *)&v4[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager] = v15;

    objc_msgSend(a2, sel_setAlpha_, 0.1);
    objc_msgSend(a2, sel_setHidden_, 0);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = v4;
    v18 = v4;
    v19 = a2;
    sub_2274F2074(0, (uint64_t)sub_2273865B8, v17, 0.1);
    return swift_release();
  }
  else
  {

    result = sub_22758ECC4();
    __break(1u);
  }
  return result;
}

void sub_227385320(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;

  objc_msgSend(a1, sel_setAlpha_, 1.0);
  v3 = *(void **)(a2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  v4 = *(void **)(a2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_currentLiveView);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_currentLiveView) = v3;
  v5 = v3;

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_beginAccess();
  v6 = qword_2540B9100;
  v7 = swift_bridgeObjectRetain();
  if (v6 != -1)
    v7 = swift_once();
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  if (v12 > 0.0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D1A0();
  }
  sub_22743067C();
}

void sub_2273854DC()
{
  id v0;
  unsigned int v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14[0] = 0;
  v1 = objc_msgSend(v0, sel_setActive_withOptions_error_, 0, 1, v14);

  if (v1)
  {
    v2 = v14[0];
  }
  else
  {
    v3 = v14[0];
    v4 = (void *)sub_22758C75C();

    swift_willThrow();
    if (qword_2558D4A70 != -1)
      swift_once();
    v5 = sub_22758CF9C();
    __swift_project_value_buffer(v5, (uint64_t)qword_2558D6278);
    v6 = v4;
    v7 = v4;
    v8 = sub_22758CF84();
    v9 = sub_22758E6B8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v4;
      v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v14[0] = v13;
      sub_22758EA48();
      *v11 = v13;

      _os_log_impl(&dword_2272F4000, v8, v9, "Cannot configure audio session: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v11, -1, -1);
      MEMORY[0x2276B3D50](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_227385760(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  char v15;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2276B3E34](v3);
  if (result)
  {
    v5 = (char *)result;
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D1A0();
    if (qword_2558D4A18 != -1)
      swift_once();
    v6 = sub_22758CF9C();
    __swift_project_value_buffer(v6, (uint64_t)qword_2558D6170);
    v7 = sub_22758CF84();
    v8 = sub_22758E6B8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_2272F4000, v7, v8, "Restarting capture session...", v9, 2u);
      MEMORY[0x2276B3D50](v9, -1, -1);
    }

    v10 = *(void **)&v5[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_captureService];
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v5;
    *(_QWORD *)(v11 + 24) = a2;
    *(_BYTE *)(v11 + 32) = v15;
    v12 = v10;
    v13 = v5;
    v14 = a2;
    sub_2274A58AC((uint64_t)sub_2273865FC, v11);

    return swift_release();
  }
  return result;
}

uint64_t sub_227385990(char a1, void *a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  const void *v27;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void *v39;
  uint64_t v40;

  v8 = sub_22758DF20();
  v32 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_22758DF68();
  v15 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v16, v17, v18, v19);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22730BA80(0, (unint64_t *)&qword_2540B9EF0);
  v22 = (void *)sub_22758E79C();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a2;
  if ((a1 & 1) != 0)
  {
    *(_QWORD *)(v23 + 24) = a3;
    *(_BYTE *)(v23 + 32) = a4 & 1;
    v39 = sub_227386634;
    v40 = v23;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_227367AE4;
    v38 = &block_descriptor_120;
    v24 = _Block_copy(&aBlock);
    v25 = a2;
    v26 = a3;
    sub_22758DF44();
    v34 = MEMORY[0x24BEE4AF8];
    sub_22730DE58();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730DEA0();
    sub_22758EACC();
    MEMORY[0x2276B27CC](0, v21, v14, v24);
    v27 = v24;
  }
  else
  {
    v39 = sub_22738662C;
    v40 = v23;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_227367AE4;
    v38 = &block_descriptor_114;
    v28 = _Block_copy(&aBlock);
    v29 = a2;
    sub_22758DF44();
    v34 = MEMORY[0x24BEE4AF8];
    sub_22730DE58();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9DF0);
    sub_22730DEA0();
    sub_22758EACC();
    MEMORY[0x2276B27CC](0, v21, v14, v28);
    v27 = v28;
  }
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v8);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v33);
  return swift_release();
}

void sub_227385C58()
{
  id v0;
  id v1;

  v0 = sub_2274E445C();
  v1 = sub_2274808D4();

  objc_msgSend(v1, sel_setUserInteractionEnabled_, 1);
}

uint64_t sub_227385CA8(char *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;

  v6 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager;
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_rotationRateManager];
  if (v7 && *(_BYTE *)(v7 + 24) == 1)
  {
    v8 = *(void **)(v7 + 16);
    swift_retain();
    objc_msgSend(v8, sel_stopDeviceMotionUpdates);
    *(_BYTE *)(v7 + 24) = 0;
    swift_release();
  }
  v9 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_pointAndSpeakService]
                 + OBJC_IVAR____TtC16MagnifierSupport23MAGPointAndSpeakService_rotationRateManager);
  if (*(_BYTE *)(v9 + 24) == 1)
  {
    v10 = *(void **)(v9 + 16);
    swift_retain();
    objc_msgSend(v10, sel_stopDeviceMotionUpdates);
    *(_BYTE *)(v9 + 24) = 0;
    swift_release();
  }
  *(_QWORD *)&a1[v6] = 0;
  swift_release();
  v11 = *(void **)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager];
  *(_QWORD *)&a1[OBJC_IVAR____TtC16MagnifierSupport17AppViewController_luminanceManager] = 0;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_BYTE *)(v12 + 32) = a3 & 1;
  v13 = a1;
  v14 = a2;
  sub_2274F2074(0, (uint64_t)sub_227386640, v12, 1.0);
  return swift_release();
}

void sub_227385DE8(uint64_t a1, void *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v4 = sub_2274E4588();
  v5 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_currentLiveView);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_currentLiveView) = v4;

  objc_msgSend(a2, sel_setHidden_, 1);
  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22758D1A0();
  v6 = OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView;
  v7 = *(void **)(a1 + OBJC_IVAR____TtC16MagnifierSupport17AppViewController_arOverlayView);
  if (v7)
  {
    objc_msgSend(v7, sel_removeFromSuperview);
    v8 = *(void **)(a1 + v6);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(a1 + v6) = 0;

  v9 = sub_2274E445C();
  v10 = sub_2274808D4();

  objc_msgSend(v10, sel_setUserInteractionEnabled_, 1);
}

void sub_227385F28(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  __CVBuffer *oslog;

  v1 = objc_msgSend(a1, sel_currentFrame);
  if (v1
    && (v2 = v1,
        oslog = (__CVBuffer *)objc_msgSend(v1, sel_capturedImage),
        v2,
        oslog))
  {
    sub_22755FEC4(oslog);
    if (qword_2540B87B8 != -1)
      swift_once();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22758D1A0();
  }
  else
  {
    if (qword_2558D4A08 != -1)
      swift_once();
    v3 = sub_22758CF9C();
    __swift_project_value_buffer(v3, (uint64_t)qword_2558D6140);
    oslog = (__CVBuffer *)sub_22758CF84();
    v4 = sub_22758E6B8();
    if (os_log_type_enabled((os_log_t)oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_22758EA48();
      _os_log_impl(&dword_2272F4000, (os_log_t)oslog, v4, "%ld No pixel buffer for current frame available", v5, 0xCu);
      MEMORY[0x2276B3D50](v5, -1, -1);
    }
  }

}

void sub_2273861F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_2274F1D40(0, 0, 0);

  }
}

void sub_22738624C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2276B3E34](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_2274F2074(1, 0, 0, 0.15);

  }
}

void sub_2273862B4()
{
  uint64_t v0;

  sub_22738624C(v0);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_2273862D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_227386350(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_22758D1A0();
}

void sub_2273863CC()
{
  uint64_t v0;

  sub_2273861F0(v0);
}

uint64_t sub_227386414(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4 || a4 == 3 || a4 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_22738643C()
{
  uint64_t v0;

  sub_227385F28(*(void **)(v0 + 16));
}

id sub_227386444(id result, void *a2, char a3)
{
  id v3;
  id v4;

  switch(a3)
  {
    case 0:
      v4 = result;
      result = a2;
      break;
    case 1:
    case 2:
    case 3:
    case 4:
      v3 = result;
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2273864B0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2273864DC()
{
  uint64_t v0;

  return sub_227385760(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2273864E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227386510()
{
  uint64_t v0;

  return sub_227385060(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227386518()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227386544()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227319F84;
  return sub_227384F5C();
}

void sub_2273865B8()
{
  uint64_t v0;

  sub_227385320(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2273865D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2273865FC(char a1)
{
  uint64_t v1;

  return sub_227385990(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_227386608()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22738662C()
{
  sub_227385C58();
}

uint64_t sub_227386634()
{
  uint64_t v0;

  return sub_227385CA8(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_227386640()
{
  uint64_t v0;

  sub_227385DE8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

char *sub_22738669C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  char *result;
  void *v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;

  v1 = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B08);
  v7 = MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v66 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9, v10, v11, v12);
  v14 = (char *)&v59 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_22758C858();
  v23 = *(_QWORD *)(v22 - 8);
  v28 = MEMORY[0x24BDAC7A8](v22, v24, v25, v26, v27);
  v65 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30, v31, v32, v33);
  v70 = (char *)&v59 - v34;
  v35 = v0[6];
  v36 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  v71 = (char *)MEMORY[0x24BEE4AF8];
  v64 = *(_QWORD *)(v37 + 16);
  if (v64)
  {
    v38 = 0;
    v62 = (void *)*MEMORY[0x24BDBCC48];
    v61 = xmmword_227593AB0;
    v63 = v21;
    while (v38 < *(_QWORD *)(v37 + 16))
    {
      v39 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v40 = *(_QWORD *)(v23 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v21, v37 + v39 + v40 * v38, v22);
      v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v60(v21, 0, 1, v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
        goto LABEL_24;
      v67 = v40;
      v68 = v39;
      v69 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v69(v70, v21, v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA2D0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v61;
      v42 = v62;
      *(_QWORD *)(inited + 32) = v62;
      v43 = v42;
      sub_227327424(inited);
      swift_setDeallocating();
      type metadata accessor for URLResourceKey(0);
      swift_arrayDestroy();
      sub_22758C7BC();
      swift_bridgeObjectRelease();
      if (v1)
      {

        v44 = sub_22758C6C0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v14, 1, 1, v44);
        v1 = 0;
      }
      else
      {
        v44 = sub_22758C6C0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v14, 0, 1, v44);
      }
      v45 = v66;
      sub_22731A11C((uint64_t)v14, v66, &qword_2540B7B08);
      sub_22758C6C0();
      v46 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v44) == 1)
      {
        sub_22731A1A4((uint64_t)v14, &qword_2540B7B08);
        sub_22731A1A4(v45, &qword_2540B7B08);
        v47 = 0;
      }
      else
      {
        v48 = sub_22758C6B4();
        v59 = 0;
        v49 = v23;
        v50 = v37;
        v51 = v22;
        v52 = v48;
        v54 = v53;
        sub_22731A1A4((uint64_t)v14, &qword_2540B7B08);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v44);
        if ((v54 & 1) != 0)
          v47 = 0;
        else
          v47 = v52;
        v22 = v51;
        v37 = v50;
        v23 = v49;
        v1 = v59;
      }
      v21 = v63;
      if ((double)v47 * 0.000000953674316 <= 0.0)
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v70, v22);
      }
      else
      {
        v69(v65, v70, v22);
        v55 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_227324738(0, *((_QWORD *)v55 + 2) + 1, 1);
          v55 = v71;
        }
        v57 = *((_QWORD *)v55 + 2);
        v56 = *((_QWORD *)v55 + 3);
        if (v57 >= v56 >> 1)
        {
          sub_227324738(v56 > 1, v57 + 1, 1);
          v55 = v71;
        }
        *((_QWORD *)v55 + 2) = v57 + 1;
        v69(&v55[v68 + v57 * v67], v65, v22);
        v71 = v55;
      }
      if (v64 == ++v38)
      {
        v60(v21, 1, 1, v22);
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_24:
    swift_bridgeObjectRelease();
    sub_22731A1A4((uint64_t)v21, &qword_2540B7B10);
    swift_retain();
    sub_227387DD0((_QWORD **)&v71);
    if (!v1)
    {
      swift_release();
      return v71;
    }
  }
  result = (char *)swift_release();
  __break(1u);
  return result;
}

id sub_227386B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22731A11C(a1, (uint64_t)v10, &qword_2540B7B10);
  v11 = sub_22758C858();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v14 = (void *)sub_22758C7EC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = objc_msgSend(*(id *)(v2 + 64), sel_objectForKey_, v14);
    if (qword_2558D4A30 != -1)
      swift_once();
    v15 = sub_22758CF9C();
    __swift_project_value_buffer(v15, (uint64_t)qword_2558D61B8);
    v16 = v13;
    v17 = v14;
    v18 = v16;
    v19 = v17;
    v20 = sub_22758CF84();
    v21 = sub_22758E6B8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v33 = v31;
      *(_DWORD *)v22 = 136315650;
      v32 = sub_22733611C(0x7069726373627573, 0xED0000293A5F2874, &v33);
      sub_22758EA48();
      *(_WORD *)(v22 + 12) = 2080;
      v32 = (uint64_t)v13;
      v24 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA000);
      v25 = sub_22758E238();
      v32 = sub_22733611C(v25, v26, &v33);
      sub_22758EA48();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2112;
      v32 = (uint64_t)v19;
      v27 = v19;
      sub_22758EA48();
      *v23 = v19;

      _os_log_impl(&dword_2272F4000, v20, v21, "%s: get %s from %@", (uint8_t *)v22, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v23, -1, -1);
      v28 = v31;
      swift_arrayDestroy();
      MEMORY[0x2276B3D50](v28, -1, -1);
      MEMORY[0x2276B3D50](v22, -1, -1);

    }
    else
    {

    }
  }
  return v13;
}

uint64_t sub_227386EF8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v6, v7, v8, v9, v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22731A11C(a2, (uint64_t)v12, &qword_2540B7B10);
  v13 = sub_22758C858();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v15 = a1;
    goto LABEL_12;
  }
  v15 = (id)sub_22758C7EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  if (!a1)
    goto LABEL_12;
  v16 = a1;
  objc_msgSend(v16, sel_size);
  v19 = v17 * v18 * 0.25;
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (qword_2558D4A30 != -1)
LABEL_16:
    swift_once();
  v20 = (uint64_t)v19;
  v21 = sub_22758CF9C();
  __swift_project_value_buffer(v21, (uint64_t)qword_2558D61B8);
  v22 = v16;
  v23 = v15;
  v15 = v22;
  v24 = v23;
  v25 = sub_22758CF84();
  v26 = sub_22758E6B8();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v40 = v3;
    v28 = v27;
    v37 = (_QWORD *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v42 = v38;
    *(_DWORD *)v28 = 136315906;
    v39 = (uint64_t)v19;
    v41 = sub_22733611C(0x7069726373627573, 0xED0000293A5F2874, &v42);
    sub_22758EA48();
    *(_WORD *)(v28 + 12) = 2080;
    v41 = (uint64_t)a1;
    v29 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540BA000);
    v30 = sub_22758E238();
    v41 = sub_22733611C(v30, v31, &v42);
    sub_22758EA48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2112;
    v41 = (uint64_t)v24;
    v32 = v24;
    v20 = v39;
    sub_22758EA48();
    v33 = v37;
    *v37 = v24;

    *(_WORD *)(v28 + 32) = 2048;
    v41 = v20;
    sub_22758EA48();
    _os_log_impl(&dword_2272F4000, v25, v26, "%s: set %s to %@, cost: %ld", (uint8_t *)v28, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558D57F0);
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v33, -1, -1);
    v34 = v38;
    swift_arrayDestroy();
    MEMORY[0x2276B3D50](v34, -1, -1);
    v35 = v28;
    v3 = v40;
    MEMORY[0x2276B3D50](v35, -1, -1);

  }
  else
  {

  }
  objc_msgSend(*(id *)(v3 + 64), sel_setObject_forKey_cost_, v15, v24, v20);

LABEL_12:
  return sub_22731A1A4(a2, &qword_2540B7B10);
}

uint64_t sub_227387318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL4 v31;
  char v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  _QWORD v38[3];

  v0 = sub_22758C858();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)&v38[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22758C7F8();
  v8 = sub_22758C7E0();
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v7, v0);
  sub_22758C7F8();
  v12 = sub_22758C7E0();
  v14 = v13;
  result = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  v16 = HIBYTE(v10) & 0xF;
  v17 = v8 & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0)
    v18 = HIBYTE(v10) & 0xF;
  else
    v18 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    v20 = (uint64_t)sub_227389208(v8, v10, 10);
    LOBYTE(v8) = v36;
    goto LABEL_44;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    v38[0] = v8;
    v38[1] = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v8 == 43)
    {
      if (!v16)
        goto LABEL_59;
      if (v16 == 1 || (BYTE1(v8) - 48) > 9u)
        goto LABEL_31;
      v20 = (BYTE1(v8) - 48);
      if (v16 != 2)
      {
        if ((BYTE2(v8) - 48) > 9u)
          goto LABEL_31;
        v20 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
        v22 = v16 - 3;
        if (v22)
        {
          v23 = (unsigned __int8 *)v38 + 3;
          while (1)
          {
            v24 = *v23 - 48;
            if (v24 > 9)
              goto LABEL_31;
            v25 = 10 * v20;
            if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
              goto LABEL_31;
            v20 = v25 + v24;
            if (__OFADD__(v25, v24))
              goto LABEL_31;
            LOBYTE(v8) = 0;
            ++v23;
            if (!--v22)
              goto LABEL_44;
          }
        }
      }
    }
    else
    {
      if (v8 == 45)
      {
        if (v16)
        {
          if (v16 != 1 && (BYTE1(v8) - 48) <= 9u)
          {
            if (v16 == 2)
            {
              LOBYTE(v8) = 0;
              v20 = -(uint64_t)(BYTE1(v8) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(v8) - 48) <= 9u)
            {
              v20 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
              v30 = v16 - 3;
              if (!v30)
                goto LABEL_43;
              v33 = (unsigned __int8 *)v38 + 3;
              while (1)
              {
                v34 = *v33 - 48;
                if (v34 > 9)
                  break;
                v35 = 10 * v20;
                if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
                  break;
                v20 = v35 - v34;
                if (__OFSUB__(v35, v34))
                  break;
                LOBYTE(v8) = 0;
                ++v33;
                if (!--v30)
                  goto LABEL_44;
              }
            }
          }
LABEL_31:
          v20 = 0;
          LOBYTE(v8) = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_59:
        __break(1u);
        return result;
      }
      if (!v16 || (v8 - 48) > 9u)
        goto LABEL_31;
      v20 = (v8 - 48);
      if (v16 != 1)
      {
        if ((BYTE1(v8) - 48) > 9u)
          goto LABEL_31;
        v20 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
        v26 = v16 - 2;
        if (v26)
        {
          v27 = (unsigned __int8 *)v38 + 2;
          while (1)
          {
            v28 = *v27 - 48;
            if (v28 > 9)
              goto LABEL_31;
            v29 = 10 * v20;
            if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
              goto LABEL_31;
            v20 = v29 + v28;
            if (__OFADD__(v29, v28))
              goto LABEL_31;
            LOBYTE(v8) = 0;
            ++v27;
            if (!--v26)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    LOBYTE(v8) = 0;
    goto LABEL_44;
  }
  if ((v8 & 0x1000000000000000) != 0)
    v19 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v19 = (unsigned __int8 *)sub_22758EBF8();
  v20 = (uint64_t)sub_2273892EC(v19, v17, 10);
  LOBYTE(v8) = v21 & 1;
LABEL_44:
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return 0;
  }
  v31 = v20 < sub_2273876B4(v12, v14);
  return (v32 & 1) == 0 && v31;
}

uint64_t sub_2273876B4(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_22758EBF8();
      v7 = (uint64_t)sub_2273892EC(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_227389208(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_227387900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v22)(char *, uint64_t);
  unsigned int v23;
  void *v24;
  id v25;
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v4, v5, v6, v7, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12, v13, v14, v15);
  v17 = (char *)&v26 - v16;
  sub_22731A11C(a1, (uint64_t)v10, &qword_2540B7B10);
  v18 = sub_22758C858();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v10, 1, v18) == 1)
  {
    sub_22731A1A4((uint64_t)v10, &qword_2540B7B10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    return 0;
  }
  sub_22758C798();
  v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  v22(v10, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  v23 = v20(v17, 1, v18);
  result = 0;
  if (v23 != 1)
  {
    v24 = (void *)sub_22758C7EC();
    v22(v17, v18);
    v25 = objc_msgSend(*(id *)(v2 + 64), sel_objectForKey_, v24);

    if (!v25)
      return 0;

    return 1;
  }
  return result;
}

uint64_t sub_227387A98@<X0>(uint64_t a1@<X8>)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v8 = 0;
  v6 = 16;
  v7 = 0;
  if (sysctlbyname("kern.boottime", &v7, &v6, 0, 0))
    v2 = 0;
  else
    v2 = v6 == 16;
  if (v2)
  {
    sub_22758C8E8();
    v5 = sub_22758C930();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 0, 1, v5);
  }
  else
  {
    v3 = sub_22758C930();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
}

uint64_t sub_227387B94()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageCache()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ImageCache.CacheType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227387C2C + 4 * byte_227599B25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227387C60 + 4 * byte_227599B20[v4]))();
}

uint64_t sub_227387C60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227387C68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227387C70);
  return result;
}

uint64_t sub_227387C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227387C84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227387C88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227387C90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageCache.CacheType()
{
  return &type metadata for ImageCache.CacheType;
}

unint64_t sub_227387CB0()
{
  unint64_t result;

  result = qword_2558D7AA8;
  if (!qword_2558D7AA8)
  {
    result = MEMORY[0x2276B3C78](&unk_227599BA8, &type metadata for ImageCache.CacheType);
    atomic_store(result, (unint64_t *)&qword_2558D7AA8);
  }
  return result;
}

_QWORD *sub_227387CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558D60A8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_227387D58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_22758E310();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2276B22EC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_227387DD0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_22758C858() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_227467404(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_227387E50(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_227387E50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char v159;
  char v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  char *v163;
  void (*v164)(char *, uint64_t, uint64_t);
  char *v165;
  uint64_t v166;
  unint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  char *v173;
  unint64_t v174;
  void (*v175)(char *, uint64_t);
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  _QWORD *v199;
  uint64_t v200;

  v3 = sub_22758C858();
  v4 = *(_QWORD *)(v3 - 8);
  v9 = MEMORY[0x24BDAC7A8](v3, v5, v6, v7, v8);
  v192 = (char *)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v9, v11, v12, v13, v14);
  v195 = (char *)&v177 - v16;
  v21 = MEMORY[0x24BDAC7A8](v15, v17, v18, v19, v20);
  v23 = (char *)&v177 - v22;
  v28 = MEMORY[0x24BDAC7A8](v21, v24, v25, v26, v27);
  v30 = (char *)&v177 - v29;
  v35 = MEMORY[0x24BDAC7A8](v28, v31, v32, v33, v34);
  v37 = (char *)&v177 - v36;
  v42 = MEMORY[0x24BDAC7A8](v35, v38, v39, v40, v41);
  v44 = (char *)&v177 - v43;
  v49 = MEMORY[0x24BDAC7A8](v42, v45, v46, v47, v48);
  v182 = (char *)&v177 - v50;
  MEMORY[0x24BDAC7A8](v49, v51, v52, v53, v54);
  v181 = (char *)&v177 - v55;
  v198 = a1;
  v56 = a1[1];
  result = sub_22758EE20();
  if (result >= v56)
  {
    if (v56 < 0)
      goto LABEL_150;
    if (v56)
      return sub_2273889EC(0, v56, 1, v198);
    return result;
  }
  if (v56 >= 0)
    v58 = v56;
  else
    v58 = v56 + 1;
  if (v56 < -1)
    goto LABEL_159;
  v200 = v3;
  v180 = result;
  if (v56 < 2)
  {
    v61 = (_QWORD *)v4;
    v60 = MEMORY[0x24BEE4AF8];
    v196 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v56 != 1)
    {
      v96 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v63 = (char *)MEMORY[0x24BEE4AF8];
      v64 = v1;
      goto LABEL_113;
    }
    v184 = v44;
    v185 = v37;
    v189 = v30;
    v190 = v23;
  }
  else
  {
    v184 = v44;
    v185 = v37;
    v189 = v30;
    v190 = v23;
    v59 = v58 >> 1;
    v60 = sub_22758E418();
    *(_QWORD *)(v60 + 16) = v59;
    v61 = (_QWORD *)v4;
    v196 = v60 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  }
  v62 = 0;
  v63 = (char *)MEMORY[0x24BEE4AF8];
  v183 = v60;
  v64 = v1;
  v65 = v182;
  v199 = v61;
  while (1)
  {
    v193 = v56;
    v191 = v63;
    if (v62 + 1 >= v56)
    {
      v74 = v62 + 1;
      v82 = v200;
LABEL_22:
      v81 = v193;
      goto LABEL_39;
    }
    v66 = *v198;
    v67 = v61[9];
    v188 = v62 + 1;
    v68 = (void (*)(char *, uint64_t, uint64_t))v61[2];
    v69 = v200;
    v70 = v61;
    v68(v181, v66 + v67 * (v62 + 1), v200);
    v186 = v66;
    v194 = v67;
    v71 = v66 + v67 * v62;
    v72 = v181;
    v68(v65, v71, v69);
    LODWORD(v197) = sub_227387318();
    if (v64)
    {
      v176 = (void (*)(char *, uint64_t))v70[1];
      v176(v65, v69);
      v176(v72, v69);
      goto LABEL_126;
    }
    v73 = (void (*)(char *, uint64_t))v70[1];
    v73(v65, v69);
    v73(v72, v69);
    v74 = v62 + 2;
    if (v62 + 2 < v193)
    {
      v179 = v62;
      v75 = v186;
      v187 = v194 * v74;
      v188 *= v194;
      while (1)
      {
        v76 = v74;
        v77 = v184;
        v78 = v200;
        v68(v184, v75 + v187, v200);
        v79 = v185;
        v68(v185, v75 + v188, v78);
        v80 = sub_227387318();
        v73(v79, v78);
        v73(v77, v78);
        if (((v197 ^ v80) & 1) != 0)
          break;
        v74 = v76 + 1;
        v75 += v194;
        if (v193 == v76 + 1)
        {
          v81 = v193;
          v74 = v193;
          v64 = 0;
          v62 = v179;
          goto LABEL_25;
        }
      }
      v74 = v76;
      v64 = 0;
      v62 = v179;
    }
    v81 = v193;
LABEL_25:
    v83 = v191;
    v61 = v199;
    if ((v197 & 1) == 0)
    {
      v82 = v200;
      goto LABEL_39;
    }
    if (v74 < v62)
      goto LABEL_154;
    v82 = v200;
    if (v62 < v74)
    {
      v84 = 0;
      v85 = v194 * (v74 - 1);
      v86 = v74 * v194;
      v87 = v62;
      v179 = v62;
      v88 = v62 * v194;
      do
      {
        if (v87 != v74 + v84 - 1)
        {
          v197 = v64;
          v90 = v186;
          if (!v186)
            goto LABEL_157;
          v91 = v74;
          v92 = v186 + v88;
          v188 = v186 + v85;
          v187 = v61[4];
          ((void (*)(char *, uint64_t, uint64_t, char *))v187)(v192, v186 + v88, v200, v83);
          if (v88 < v85 || v92 >= v90 + v86)
          {
            v89 = v188;
            v82 = v200;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v82 = v200;
            v89 = v188;
            if (v88 != v85)
              swift_arrayInitWithTakeBackToFront();
          }
          ((void (*)(uint64_t, char *, uint64_t))v187)(v89, v192, v82);
          v61 = v199;
          v83 = v191;
          v74 = v91;
          v64 = v197;
        }
        ++v87;
        --v84;
        v85 -= v194;
        v86 -= v194;
        v88 += v194;
      }
      while (v87 < v74 + v84);
      v62 = v179;
      goto LABEL_22;
    }
LABEL_39:
    if (v74 >= v81)
      goto LABEL_48;
    if (__OFSUB__(v74, v62))
      goto LABEL_151;
    if (v74 - v62 >= v180)
    {
LABEL_48:
      if (v74 < v62)
        goto LABEL_149;
      goto LABEL_49;
    }
    if (__OFADD__(v62, v180))
      goto LABEL_152;
    v93 = v62 + v180 >= v81 ? v81 : v62 + v180;
    if (v93 < v62)
      break;
    if (v74 == v93)
      goto LABEL_48;
    v197 = v64;
    v145 = (char *)v61[2];
    v186 = v61[9];
    v187 = (uint64_t)v145;
    v146 = v186 * (v74 - 1);
    v147 = v74 * v186;
    v179 = v62;
    v178 = v93;
    do
    {
      v148 = 0;
      v193 = v74;
      v188 = v147;
      while (1)
      {
        v194 = v62;
        v151 = *v198;
        v152 = v147 + v148 + *v198;
        v153 = v189;
        v154 = (void (*)(char *, uint64_t, uint64_t))v187;
        ((void (*)(char *, uint64_t, uint64_t))v187)(v189, v152, v82);
        v155 = v146;
        v156 = v146 + v148 + v151;
        v157 = v190;
        v154(v190, v156, v82);
        v158 = v197;
        v159 = sub_227387318();
        v197 = v158;
        if (v158)
        {
          v175 = (void (*)(char *, uint64_t))v199[1];
          v175(v157, v82);
          v175(v153, v82);
          swift_bridgeObjectRelease();
          v60 = v183;
          goto LABEL_128;
        }
        v160 = v159;
        v161 = (void (*)(char *, uint64_t))v199[1];
        v161(v157, v82);
        v161(v153, v82);
        if ((v160 & 1) == 0)
          break;
        v162 = *v198;
        v147 = v188;
        if (!*v198)
          goto LABEL_156;
        v146 = v155;
        v163 = (char *)(v162 + v155 + v148);
        v164 = (void (*)(char *, uint64_t, uint64_t))v199[4];
        v164(v195, v162 + v188 + v148, v200);
        swift_arrayInitWithTakeFrontToBack();
        v149 = v163;
        v82 = v200;
        v164(v149, (uint64_t)v195, v200);
        v148 -= v186;
        v150 = v193;
        v62 = v194 + 1;
        if (v193 == v194 + 1)
          goto LABEL_106;
      }
      v150 = v193;
      v146 = v155;
      v147 = v188;
LABEL_106:
      v74 = v150 + 1;
      v146 += v186;
      v147 += v186;
      v62 = v179;
    }
    while (v74 != v178);
    v74 = v178;
    v64 = v197;
    if (v178 < v179)
      goto LABEL_149;
LABEL_49:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v63 = v191;
    else
      v63 = sub_227466C8C(0, *((_QWORD *)v191 + 2) + 1, 1, v191);
    v95 = *((_QWORD *)v63 + 2);
    v94 = *((_QWORD *)v63 + 3);
    v96 = v95 + 1;
    v61 = v199;
    if (v95 >= v94 >> 1)
    {
      v165 = sub_227466C8C((char *)(v94 > 1), v95 + 1, 1, v63);
      v61 = v199;
      v63 = v165;
    }
    *((_QWORD *)v63 + 2) = v96;
    v97 = v63 + 32;
    v98 = &v63[16 * v95 + 32];
    *(_QWORD *)v98 = v62;
    *((_QWORD *)v98 + 1) = v74;
    v193 = v74;
    if (v95)
    {
LABEL_54:
      v99 = v96 - 1;
      if (v96 >= 4)
      {
        v104 = &v97[16 * v96];
        v105 = *((_QWORD *)v104 - 8);
        v106 = *((_QWORD *)v104 - 7);
        v110 = __OFSUB__(v106, v105);
        v107 = v106 - v105;
        if (v110)
          goto LABEL_134;
        v109 = *((_QWORD *)v104 - 6);
        v108 = *((_QWORD *)v104 - 5);
        v110 = __OFSUB__(v108, v109);
        v102 = v108 - v109;
        v103 = v110;
        if (v110)
          goto LABEL_135;
        v111 = v96 - 2;
        v112 = &v97[16 * v96 - 32];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v110 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v110)
          goto LABEL_137;
        v110 = __OFADD__(v102, v115);
        v116 = v102 + v115;
        if (v110)
          goto LABEL_140;
        if (v116 >= v107)
        {
          v134 = &v97[16 * v99];
          v136 = *(_QWORD *)v134;
          v135 = *((_QWORD *)v134 + 1);
          v110 = __OFSUB__(v135, v136);
          v137 = v135 - v136;
          if (v110)
            goto LABEL_144;
          v127 = v102 < v137;
        }
        else
        {
LABEL_67:
          if ((v103 & 1) != 0)
            goto LABEL_136;
          v111 = v96 - 2;
          v117 = &v97[16 * v96 - 32];
          v119 = *(_QWORD *)v117;
          v118 = *((_QWORD *)v117 + 1);
          v120 = __OFSUB__(v118, v119);
          v121 = v118 - v119;
          v122 = v120;
          if (v120)
            goto LABEL_139;
          v123 = &v97[16 * v99];
          v125 = *(_QWORD *)v123;
          v124 = *((_QWORD *)v123 + 1);
          v110 = __OFSUB__(v124, v125);
          v126 = v124 - v125;
          if (v110)
            goto LABEL_142;
          if (__OFADD__(v121, v126))
            goto LABEL_143;
          if (v121 + v126 < v102)
            goto LABEL_79;
          v127 = v102 < v126;
        }
        if (v127)
          v99 = v111;
      }
      else
      {
        if (v96 == 3)
        {
          v101 = *((_QWORD *)v63 + 4);
          v100 = *((_QWORD *)v63 + 5);
          v110 = __OFSUB__(v100, v101);
          v102 = v100 - v101;
          v103 = v110;
          goto LABEL_67;
        }
        v128 = *((_QWORD *)v63 + 4);
        v129 = *((_QWORD *)v63 + 5);
        v110 = __OFSUB__(v129, v128);
        v121 = v129 - v128;
        v122 = v110;
LABEL_79:
        if ((v122 & 1) != 0)
          goto LABEL_138;
        v130 = &v97[16 * v99];
        v132 = *(_QWORD *)v130;
        v131 = *((_QWORD *)v130 + 1);
        v110 = __OFSUB__(v131, v132);
        v133 = v131 - v132;
        if (v110)
          goto LABEL_141;
        if (v133 < v121)
          goto LABEL_96;
      }
      v138 = v99 - 1;
      if (v99 - 1 >= v96)
      {
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
        break;
      }
      if (!*v198)
        goto LABEL_155;
      v139 = v63;
      v140 = &v97[16 * v138];
      v141 = *(_QWORD *)v140;
      v142 = &v97[16 * v99];
      v143 = *((_QWORD *)v142 + 1);
      sub_227388C60(*v198 + v61[9] * *(_QWORD *)v140, *v198 + v61[9] * *(_QWORD *)v142, (char *)(*v198 + v61[9] * v143), v196);
      if (v64)
      {
LABEL_125:
        swift_bridgeObjectRelease();
        v60 = v183;
        goto LABEL_128;
      }
      if (v143 < v141)
        goto LABEL_131;
      if (v99 > *((_QWORD *)v139 + 2))
        goto LABEL_132;
      *(_QWORD *)v140 = v141;
      *(_QWORD *)&v97[16 * v138 + 8] = v143;
      v144 = *((_QWORD *)v139 + 2);
      if (v99 >= v144)
        goto LABEL_133;
      v96 = v144 - 1;
      memmove(&v97[16 * v99], v142 + 16, 16 * (v144 - 1 - v99));
      v63 = v139;
      *((_QWORD *)v139 + 2) = v144 - 1;
      v61 = v199;
      if (v144 <= 2)
        goto LABEL_96;
      goto LABEL_54;
    }
    v96 = 1;
LABEL_96:
    v56 = v198[1];
    v62 = v193;
    v65 = v182;
    v60 = v183;
    if (v193 >= v56)
    {
LABEL_113:
      if (v96 >= 2)
      {
        v166 = *v198;
        v183 = v60;
        do
        {
          v167 = v96 - 2;
          if (v96 < 2)
            goto LABEL_145;
          if (!v166)
            goto LABEL_158;
          v168 = v63;
          v169 = *(_QWORD *)&v63[16 * v167 + 32];
          v170 = *(_QWORD *)&v63[16 * v96 + 24];
          v171 = v61;
          v172 = v166;
          sub_227388C60(v166 + v61[9] * v169, v166 + v61[9] * *(_QWORD *)&v63[16 * v96 + 16], (char *)(v166 + v61[9] * v170), v196);
          if (v64)
            goto LABEL_125;
          if (v170 < v169)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v168 = sub_227467370((uint64_t)v168);
          if (v167 >= *((_QWORD *)v168 + 2))
            goto LABEL_147;
          v173 = &v168[16 * v167 + 32];
          *(_QWORD *)v173 = v169;
          *((_QWORD *)v173 + 1) = v170;
          v174 = *((_QWORD *)v168 + 2);
          if (v96 > v174)
            goto LABEL_148;
          memmove(&v168[16 * v96 + 16], &v168[16 * v96 + 32], 16 * (v174 - v96));
          v63 = v168;
          *((_QWORD *)v168 + 2) = v174 - 1;
          v96 = v174 - 1;
          v60 = v183;
          v61 = v171;
          v166 = v172;
        }
        while (v174 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
LABEL_128:
      *(_QWORD *)(v60 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  result = sub_22758ECB8();
  __break(1u);
  return result;
}

uint64_t sub_2273889EC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(char *, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v8 = sub_22758C858();
  v9 = *(_QWORD **)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v8, v10, v11, v12, v13);
  v58 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v14, v16, v17, v18, v19);
  v22 = (char *)&v46 - v21;
  result = MEMORY[0x24BDAC7A8](v20, v23, v24, v25, v26);
  v48 = a2;
  if (a3 != a2)
  {
    v53 = (char *)&v46 - v28;
    v29 = (void (*)(char *, uint64_t, uint64_t))v9[2];
    v51 = v9[9];
    v52 = v29;
    v59 = v51 * (a3 - 1);
    v30 = v51 * a3;
    v47 = a1;
    v49 = v22;
    v50 = a4;
    v57 = v9;
    while (2)
    {
      v31 = 0;
      v54 = v30;
      v55 = a3;
      while (1)
      {
        v56 = a1;
        v33 = *a4;
        v34 = v30 + v31 + *a4;
        v35 = v52;
        v36 = v53;
        v52(v53, v34, v8);
        v35(v22, v59 + v31 + v33, v8);
        v37 = v60;
        v38 = sub_227387318();
        v60 = v37;
        if (v37)
        {
          v45 = (void (*)(char *, uint64_t))v9[1];
          v45(v22, v8);
          return ((uint64_t (*)(char *, uint64_t))v45)(v36, v8);
        }
        v39 = v38;
        v40 = (void (*)(char *, uint64_t))v9[1];
        v40(v22, v8);
        result = ((uint64_t (*)(char *, uint64_t))v40)(v36, v8);
        if ((v39 & 1) == 0)
          break;
        v41 = v50;
        v42 = *v50;
        if (!*v50)
        {
          __break(1u);
          return result;
        }
        v30 = v54;
        v43 = v42 + v59 + v31;
        v44 = (void (*)(char *, uint64_t, uint64_t))v57[4];
        v44(v58, v42 + v54 + v31, v8);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v44)(v43, v58, v8);
        v31 -= v51;
        v32 = v55;
        a1 = v56 + 1;
        a4 = v41;
        v9 = v57;
        v22 = v49;
        if (v55 == v56 + 1)
          goto LABEL_10;
      }
      v30 = v54;
      v32 = v55;
      v9 = v57;
      v22 = v49;
      a4 = v50;
LABEL_10:
      a3 = v32 + 1;
      v59 += v51;
      v30 += v51;
      a1 = v47;
      if (a3 != v48)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_227388C60(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v45)(char *, unint64_t, uint64_t);
  char v46;
  char v47;
  void (*v48)(char *, uint64_t);
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, unint64_t, uint64_t);
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  char v63;
  unint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void (*v73)(uint64_t, unint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;

  v5 = v4;
  v10 = sub_22758C858();
  v15 = MEMORY[0x24BDAC7A8](v10, v11, v12, v13, v14);
  v20 = MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v77 = (char *)&v70 - v21;
  v26 = MEMORY[0x24BDAC7A8](v20, v22, v23, v24, v25);
  v28 = (char *)&v70 - v27;
  MEMORY[0x24BDAC7A8](v26, v29, v30, v31, v32);
  v36 = (char *)&v70 - v35;
  v79 = *(_QWORD *)(v34 + 72);
  if (!v79)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v37 = v34;
  if (a2 - a1 == 0x8000000000000000 && v79 == -1)
    goto LABEL_66;
  v38 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v79 == -1)
    goto LABEL_67;
  v39 = (uint64_t)(a2 - a1) / v79;
  v82 = a1;
  v81 = a4;
  v40 = (uint64_t)v38 / v79;
  if (v39 >= (uint64_t)v38 / v79)
  {
    if ((v40 & 0x8000000000000000) == 0)
    {
      v42 = v40 * v79;
      v74 = v33;
      if (a4 < a2 || a2 + v42 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v52 = a4 + v42;
      v80 = a4 + v42;
      v82 = a2;
      if (v42 >= 1 && a1 < a2)
      {
        v71 = a1;
        v72 = a4;
        v75 = -v79;
        v76 = v10;
        v73 = *(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16);
        v54 = v77;
        v78 = v37;
        while (1)
        {
          v55 = a2;
          v56 = (unint64_t)a3;
          v57 = v75;
          v58 = v73;
          v73((uint64_t)v54, v52 + v75, v10);
          v79 = v55;
          v59 = v55 + v57;
          v60 = v54;
          v61 = v74;
          v58(v74, v59, v10);
          v62 = sub_227387318();
          if (v5)
            break;
          v63 = v62;
          v77 = 0;
          v64 = v56 + v57;
          v65 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
          v65(v61, v10);
          v65((uint64_t)v60, v10);
          v54 = v60;
          if ((v63 & 1) != 0)
          {
            if (v56 < v79 || v56 + v57 >= v79)
            {
              v64 = v56 + v57;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v64 = v56 + v57;
              if (v56 != v79)
                swift_arrayInitWithTakeBackToFront();
            }
            v82 += v75;
          }
          else
          {
            v59 = v79;
            v66 = v80;
            v80 += v57;
            if (v56 < v66 || v64 >= v66)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v56 != v66)
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v5 = v77;
          v52 = v80;
          if (v80 > v72)
          {
            a2 = v59;
            a3 = (char *)v64;
            v10 = v76;
            if (v59 > v71)
              continue;
          }
          goto LABEL_64;
        }
        v68 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
        v68(v61, v10);
        v68((uint64_t)v60, v10);
      }
      goto LABEL_64;
    }
  }
  else
  {
    v77 = a3;
    if ((v39 & 0x8000000000000000) == 0)
    {
      v41 = v39 * v79;
      v78 = v34;
      if (a4 < a1 || a1 + v41 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v43 = a4 + v41;
      v80 = a4 + v41;
      if (v41 >= 1 && a2 < (unint64_t)v77)
      {
        v45 = *(void (**)(char *, unint64_t, uint64_t))(v78 + 16);
        while (1)
        {
          v45(v36, a2, v10);
          v45(v28, a4, v10);
          v46 = sub_227387318();
          if (v4)
            break;
          v47 = v46;
          v48 = *(void (**)(char *, uint64_t))(v78 + 8);
          v48(v28, v10);
          v48(v36, v10);
          v49 = v82;
          if ((v47 & 1) != 0)
          {
            v50 = a2 + v79;
            if (v82 < a2 || v82 >= v50)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v82 == a2)
            {
              v49 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            v51 = v81 + v79;
            if (v82 < v81 || v82 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v82 != v81)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v81 = v51;
            v50 = a2;
          }
          v82 = v49 + v79;
          a4 = v81;
          if (v81 < v43)
          {
            a2 = v50;
            if (v50 < (unint64_t)v77)
              continue;
          }
          goto LABEL_64;
        }
        v67 = *(void (**)(char *, uint64_t))(v78 + 8);
        v67(v28, v10);
        v67(v36, v10);
      }
LABEL_64:
      sub_227466F8C(&v82, &v81, (uint64_t *)&v80);
      return 1;
    }
  }
LABEL_68:
  result = sub_22758ED24();
  __break(1u);
  return result;
}

unsigned __int8 *sub_227389208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_22758E328();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_227389568();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_22758EBF8();
  }
LABEL_7:
  v11 = sub_2273892EC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2273892EC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_227389568()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_22758E334();
  v4 = sub_2273895E4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2273895E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_227389728(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_227387CF4(v9, 0);
      v12 = sub_227389814((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2276B2274](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2276B2274);
LABEL_9:
      sub_22758EBF8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2276B2274]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_227389728(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_227387D58(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_227387D58(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_22758E2EC();
  }
  __break(1u);
  return result;
}

unint64_t sub_227389814(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_227387D58(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_22758E2F8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_22758EBF8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_227387D58(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_22758E2D4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_227389A24(uint8_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  _BYTE *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  _BYTE *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  NSObject *v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  uint8_t *v95;
  char *v96;
  char *v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  char *v101;
  uint8_t *v102;
  _BYTE *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  v7 = MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v100 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v7, v9, v10, v11, v12);
  v101 = (char *)&v95 - v14;
  MEMORY[0x24BDAC7A8](v13, v15, v16, v17, v18);
  v20 = (char *)&v95 - v19;
  v21 = sub_22758C858();
  v22 = *(_QWORD *)(v21 - 8);
  v27 = MEMORY[0x24BDAC7A8](v21, v23, v24, v25, v26);
  v29 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v27, v30, v31, v32, v33);
  v36 = (char *)&v95 - v35;
  v41 = MEMORY[0x24BDAC7A8](v34, v37, v38, v39, v40);
  v43 = (char *)&v95 - v42;
  MEMORY[0x24BDAC7A8](v41, v44, v45, v46, v47);
  v49 = (char *)&v95 - v48;
  v102 = a1;
  sub_22758C798();
  v50 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v104 = v49;
  v50(v20, v49, v21);
  v51 = *(char **)(v22 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v51)(v20, 0, 1, v21);
  v52 = v103;
  v53 = sub_227386B90((uint64_t)v20);
  sub_22731A1A4((uint64_t)v20, &qword_2540B7B10);
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v104, v21);
  }
  else
  {
    v98 = v43;
    v99 = (void (*)(_QWORD, _QWORD, _QWORD))v50;
    v96 = v36;
    v97 = v29;
    v54 = v22;
    v55 = (uint64_t)v101;
    v56 = (uint64_t)v102;
    sub_22758C798();
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v51)(v55, 0, 1, v21);
    v57 = sub_227386B90(v55);
    sub_22731A1A4(v55, &qword_2540B7B10);
    if (v57)
    {
      v103 = v57;
      v58 = v104;
      v59 = v54;
      v60 = (void (*)(char *, char *, uint64_t))v99;
      if (qword_2558D4A30 != -1)
        swift_once();
      v61 = sub_22758CF9C();
      __swift_project_value_buffer(v61, (uint64_t)qword_2558D61B8);
      v62 = v98;
      v60(v98, v58, v21);
      v63 = sub_22758CF84();
      v64 = sub_22758E6B8();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = swift_slowAlloc();
        v106 = v66;
        *(_DWORD *)v65 = 136315138;
        v102 = v65 + 4;
        sub_22738A11C();
        v67 = sub_22758EE2C();
        v105 = sub_22733611C(v67, v68, &v106);
        sub_22758EA48();
        swift_bridgeObjectRelease();
        v69 = *(void (**)(char *, uint64_t))(v59 + 8);
        v69(v62, v21);
        _os_log_impl(&dword_2272F4000, v63, v64, "CACHE HIT (%s)", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2276B3D50](v66, -1, -1);
        MEMORY[0x2276B3D50](v65, -1, -1);
      }
      else
      {
        v69 = *(void (**)(char *, uint64_t))(v59 + 8);
        v69(v62, v21);
      }

      v53 = v103;
    }
    else
    {
      v70 = v52;
      v101 = v51;
      v58 = v104;
      v71 = v54;
      v72 = (void (*)(char *, char *, uint64_t))v99;
      if (qword_2558D4A30 != -1)
        swift_once();
      v73 = sub_22758CF9C();
      v74 = __swift_project_value_buffer(v73, (uint64_t)qword_2558D61B8);
      v75 = v96;
      v72(v96, v58, v21);
      v98 = (char *)v74;
      v76 = sub_22758CF84();
      v77 = sub_22758E6B8();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc();
        v79 = swift_slowAlloc();
        v106 = v79;
        *(_DWORD *)v78 = 136315138;
        v95 = v78 + 4;
        sub_22738A11C();
        v80 = sub_22758EE2C();
        v105 = sub_22733611C(v80, v81, &v106);
        v58 = v104;
        sub_22758EA48();
        swift_bridgeObjectRelease();
        v69 = *(void (**)(char *, uint64_t))(v71 + 8);
        v69(v75, v21);
        _os_log_impl(&dword_2272F4000, v76, v77, "CACHE MISS (%s)", v78, 0xCu);
        swift_arrayDestroy();
        v82 = v79;
        v56 = (uint64_t)v102;
        MEMORY[0x2276B3D50](v82, -1, -1);
        MEMORY[0x2276B3D50](v78, -1, -1);
      }
      else
      {
        v69 = *(void (**)(char *, uint64_t))(v71 + 8);
        v69(v75, v21);
      }

      v83 = (uint64_t)v100;
      v84 = v97;
      if ((v70[16] & 1) != 0)
      {
        v85 = sub_22754FB38(v56);
        if (!v85)
        {
          v99(v84, v56, v21);
          v86 = sub_22758CF84();
          v87 = sub_22758E6B8();
          if (os_log_type_enabled(v86, (os_log_type_t)v87))
          {
            v88 = (uint8_t *)swift_slowAlloc();
            v89 = swift_slowAlloc();
            v106 = v89;
            *(_DWORD *)v88 = 136315138;
            v90 = sub_22758C840();
            v105 = sub_22733611C(v90, v91, &v106);
            sub_22758EA48();
            swift_bridgeObjectRelease();
            v69(v84, v21);
            _os_log_impl(&dword_2272F4000, v86, (os_log_type_t)v87, "Read nil thumbnail from: %s", v88, 0xCu);
            swift_arrayDestroy();
            v92 = v89;
            v83 = (uint64_t)v100;
            MEMORY[0x2276B3D50](v92, -1, -1);
            v58 = v104;
            MEMORY[0x2276B3D50](v88, -1, -1);
          }
          else
          {
            v69(v84, v21);
          }

          v85 = 0;
        }
      }
      else
      {
        v85 = sub_22754F558(v56);
      }
      sub_22758C798();
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v101)(v83, 0, 1, v21);
      v93 = v85;
      sub_227386EF8(v85, v83);
      v53 = v85;
    }
    v69(v58, v21);
  }
  return v53;
}

unint64_t sub_22738A11C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558DDA60;
  if (!qword_2558DDA60)
  {
    v1 = sub_22758C858();
    result = MEMORY[0x2276B3C78](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2558DDA60);
  }
  return result;
}

uint64_t sub_22738A164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  _QWORD v38[2];

  v0 = sub_22758C858();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v8, v9, v10, v11, v12);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16, v17, v18, v19);
  v21 = (char *)v38 - v20;
  if (qword_2558D4A30 != -1)
    swift_once();
  v22 = sub_22758CF9C();
  __swift_project_value_buffer(v22, (uint64_t)qword_2558D61B8);
  v23 = sub_22758CF84();
  v24 = sub_22758E6B8();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_2272F4000, v23, v24, "Permanently deleting assets and emptying caches...", v25, 2u);
    MEMORY[0x2276B3D50](v25, -1, -1);
  }

  if (qword_2558D4BD8 != -1)
    swift_once();
  objc_msgSend(*(id *)(qword_2558F3F40 + 64), sel_removeAllObjects);
  if (qword_2558D4BE0 != -1)
    swift_once();
  objc_msgSend(*(id *)(qword_2558F3F48 + 64), sel_removeAllObjects);
  v26 = sub_22738669C();
  v27 = *((_QWORD *)v26 + 2);
  v38[1] = v26;
  if (v27)
  {
    v28 = &v26[(*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)];
    v29 = *(_QWORD *)(v1 + 72);
    v30 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    while (1)
    {
      v30(v21, v28, v0);
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v31(v21, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v21, 1, v0) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v7, v21, v0);
      sub_2275501FC((uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
      v28 += v29;
      if (!--v27)
        goto LABEL_15;
    }
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
LABEL_15:
    v31(v21, 1, 1, v0);
  }
  swift_bridgeObjectRelease();
  v32 = sub_22738669C();
  v33 = *((_QWORD *)v32 + 2);
  if (v33)
  {
    v34 = &v32[(*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)];
    v35 = *(_QWORD *)(v1 + 72);
    v36 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    while (1)
    {
      v36(v14, v34, v0);
      v31(v14, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v14, 1, v0) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v7, v14, v0);
      sub_2275501FC((uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
      v34 += v35;
      if (!--v33)
        goto LABEL_20;
    }
  }
  else
  {
LABEL_20:
    v31(v14, 1, 1, v0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22738A4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  double v59;
  double v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unsigned __int8 *v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 *v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 *v83;
  unsigned int v84;
  uint64_t v85;
  id v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  char v107;
  id v108;
  char *v109;
  void *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(unint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v121;
  char *v122;
  char *v123;
  unint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  void (*v140)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v141;
  _QWORD v142[4];

  v0 = sub_22758C858();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v134 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8, v9, v10, v11);
  v138 = (char *)&v121 - v12;
  MEMORY[0x24BDAC7A8](v13, v14, v15, v16, v17);
  v139 = (char *)&v121 - v18;
  MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
  v133 = (char *)&v121 - v24;
  MEMORY[0x24BDAC7A8](v25, v26, v27, v28, v29);
  v132 = (char *)&v121 - v30;
  MEMORY[0x24BDAC7A8](v31, v32, v33, v34, v35);
  v37 = (uint64_t)&v121 - v36;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540B7B10);
  MEMORY[0x24BDAC7A8](v38, v39, v40, v41, v42);
  v44 = (unint64_t)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45, v46, v47, v48, v49);
  v51 = (char *)&v121 - v50;
  MEMORY[0x24BDAC7A8](v52, v53, v54, v55, v56);
  v58 = (char *)&v121 - v57;
  sub_22758C8F4();
  v60 = round(v59 * 1000.0);
  if ((~*(_QWORD *)&v60 & 0x7FF0000000000000) == 0)
    goto LABEL_100;
  if (v60 <= -9.22337204e18)
  {
LABEL_101:
    __break(1u);
  }
  else if (v60 < 9.22337204e18)
  {
    if (qword_2558D4BD8 == -1)
      goto LABEL_5;
    goto LABEL_103;
  }
  __break(1u);
LABEL_103:
  swift_once();
LABEL_5:
  v124 = v44;
  v137 = (uint64_t)v60;
  v61 = sub_22738669C();
  v62 = v61;
  v131 = *((_QWORD *)v61 + 2);
  if (v131)
  {
    v63 = 0;
    v130 = 0;
    v125 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v129 = &v61[v125];
    v122 = (char *)v142 + 2;
    v123 = (char *)v142 + 3;
    v141 = MEMORY[0x24BEE4AF8];
    v126 = v58;
    v127 = v37;
    v128 = v61;
    while (1)
    {
      if (v63 >= *((_QWORD *)v62 + 2))
      {
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      v64 = *(_QWORD *)(v1 + 72);
      v65 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
      v65(v58, &v129[v64 * v63], v0);
      v140 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v140(v58, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v58, 1, v0) == 1)
        goto LABEL_74;
      v135 = *(_QWORD *)(v1 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v135)(v37, v58, v0);
      v44 = (unint64_t)v132;
      sub_22758C7F8();
      v37 = sub_22758C7E0();
      v67 = v66;
      v58 = *(char **)(v1 + 8);
      ((void (*)(unint64_t, uint64_t))v58)(v44, v0);
      v68 = HIBYTE(v67) & 0xF;
      v69 = v37 & 0xFFFFFFFFFFFFLL;
      if ((v67 & 0x2000000000000000) != 0)
        v70 = HIBYTE(v67) & 0xF;
      else
        v70 = v37 & 0xFFFFFFFFFFFFLL;
      v136 = v58;
      if (!v70)
      {
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      if ((v67 & 0x1000000000000000) != 0)
      {
        v72 = (uint64_t)sub_227389208(v37, v67, 10);
        LOBYTE(v37) = v90;
      }
      else if ((v67 & 0x2000000000000000) != 0)
      {
        v142[0] = v37;
        v142[1] = v67 & 0xFFFFFFFFFFFFFFLL;
        if (v37 == 43)
        {
          if (!v68)
            goto LABEL_99;
          if (v68 == 1 || (BYTE1(v37) - 48) > 9u)
            goto LABEL_41;
          v72 = (BYTE1(v37) - 48);
          if (v68 != 2)
          {
            if ((BYTE2(v37) - 48) > 9u)
              goto LABEL_41;
            v72 = 10 * (BYTE1(v37) - 48) + (BYTE2(v37) - 48);
            v74 = v68 - 3;
            if (v74)
            {
              v75 = (unsigned __int8 *)v123;
              while (1)
              {
                v76 = *v75 - 48;
                if (v76 > 9)
                  goto LABEL_41;
                v77 = 10 * v72;
                if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63)
                  goto LABEL_41;
                v72 = v77 + v76;
                if (__OFADD__(v77, v76))
                  goto LABEL_41;
                LOBYTE(v37) = 0;
                ++v75;
                if (!--v74)
                  goto LABEL_44;
              }
            }
          }
        }
        else if (v37 == 45)
        {
          if (!v68)
            goto LABEL_98;
          if (v68 == 1 || (BYTE1(v37) - 48) > 9u)
            goto LABEL_41;
          if (v68 == 2)
          {
            LOBYTE(v37) = 0;
            v72 = -(uint64_t)(BYTE1(v37) - 48);
            goto LABEL_44;
          }
          if ((BYTE2(v37) - 48) > 9u)
            goto LABEL_41;
          v72 = -10 * (BYTE1(v37) - 48) - (BYTE2(v37) - 48);
          v82 = v68 - 3;
          if (v82)
          {
            v83 = (unsigned __int8 *)v123;
            while (1)
            {
              v84 = *v83 - 48;
              if (v84 > 9)
                break;
              v85 = 10 * v72;
              if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63)
                break;
              v72 = v85 - v84;
              if (__OFSUB__(v85, v84))
                break;
              LOBYTE(v37) = 0;
              ++v83;
              if (!--v82)
                goto LABEL_44;
            }
LABEL_41:
            v72 = 0;
            LOBYTE(v37) = 1;
            goto LABEL_44;
          }
        }
        else
        {
          if (!v68 || (v37 - 48) > 9u)
            goto LABEL_41;
          v72 = (v37 - 48);
          if (v68 != 1)
          {
            if ((BYTE1(v37) - 48) > 9u)
              goto LABEL_41;
            v72 = 10 * (v37 - 48) + (BYTE1(v37) - 48);
            v78 = v68 - 2;
            if (v78)
            {
              v79 = (unsigned __int8 *)v122;
              while (1)
              {
                v80 = *v79 - 48;
                if (v80 > 9)
                  goto LABEL_41;
                v81 = 10 * v72;
                if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63)
                  goto LABEL_41;
                v72 = v81 + v80;
                if (__OFADD__(v81, v80))
                  goto LABEL_41;
                LOBYTE(v37) = 0;
                ++v79;
                if (!--v78)
                  goto LABEL_44;
              }
            }
          }
        }
        LOBYTE(v37) = 0;
      }
      else
      {
        if ((v37 & 0x1000000000000000) != 0)
          v71 = (unsigned __int8 *)((v67 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v71 = (unsigned __int8 *)sub_22758EBF8();
        v44 = (unint64_t)v130;
        v72 = (uint64_t)sub_2273892EC(v71, v69, 10);
        v130 = (char *)v44;
        LOBYTE(v37) = v73 & 1;
      }
LABEL_44:
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        if (v72 < v137)
          goto LABEL_65;
        goto LABEL_7;
      }
LABEL_64:
      if (v137 > 0)
      {
LABEL_65:
        v86 = *(id *)(qword_2558F3F40 + 64);
        v37 = v127;
        v87 = (void *)sub_22758C7EC();
        objc_msgSend(v86, sel_removeObjectForKey_, v87);

        v65(v133, (char *)v37, v0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v141 = sub_2273A55B0(0, *(_QWORD *)(v141 + 16) + 1, 1, v141);
        v44 = *(_QWORD *)(v141 + 16);
        v88 = *(_QWORD *)(v141 + 24);
        v58 = v126;
        v62 = v128;
        if (v44 >= v88 >> 1)
          v141 = sub_2273A55B0(v88 > 1, v44 + 1, 1, v141);
        v89 = v141;
        *(_QWORD *)(v141 + 16) = v44 + 1;
        ((void (*)(unint64_t, char *, uint64_t))v135)(v89 + v125 + v44 * v64, v133, v0);
        goto LABEL_8;
      }
LABEL_7:
      v37 = v127;
      v62 = v128;
      v58 = v126;
LABEL_8:
      ++v63;
      ((void (*)(uint64_t, uint64_t))v136)(v37, v0);
      if (v63 == v131)
        goto LABEL_73;
    }
  }
  v130 = 0;
  v140 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  v141 = MEMORY[0x24BEE4AF8];
LABEL_73:
  v140(v58, 1, 1, v0);
LABEL_74:
  swift_bridgeObjectRelease();
  v91 = v51;
  if (qword_2558D4BE0 != -1)
    swift_once();
  v92 = sub_22738669C();
  v93 = *((_QWORD *)v92 + 2);
  v135 = v1;
  v132 = v92;
  if (v93)
  {
    v133 = (char *)((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v94 = &v133[(_QWORD)v92];
    v95 = v1;
    v96 = *(_QWORD *)(v1 + 72);
    v136 = *(char **)(v95 + 16);
    ((void (*)(char *, char *, uint64_t))v136)(v51, &v133[(_QWORD)v92], v0);
    while (1)
    {
      v140(v91, 0, 1, v0);
      v98 = v135;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v91, 1, v0) == 1)
        goto LABEL_91;
      v99 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
      v100 = v91;
      v99(v139, v91, v0);
      v101 = v138;
      sub_22758C7F8();
      v102 = sub_22758C7E0();
      v104 = v103;
      v105 = *(void (**)(char *, uint64_t))(v98 + 8);
      v105(v101, v0);
      v106 = sub_2273876B4(v102, v104);
      if ((v107 & 1) != 0)
      {
        if (v137 <= 0)
          goto LABEL_79;
      }
      else if (v106 >= v137)
      {
        goto LABEL_79;
      }
      v108 = *(id *)(qword_2558F3F48 + 64);
      v109 = v139;
      v110 = (void *)sub_22758C7EC();
      objc_msgSend(v108, sel_removeObjectForKey_, v110);

      ((void (*)(char *, char *, uint64_t))v136)(v134, v109, v0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v141 = sub_2273A55B0(0, *(_QWORD *)(v141 + 16) + 1, 1, v141);
      v112 = *(_QWORD *)(v141 + 16);
      v111 = *(_QWORD *)(v141 + 24);
      if (v112 >= v111 >> 1)
        v141 = sub_2273A55B0(v111 > 1, v112 + 1, 1, v141);
      v97 = v141;
      *(_QWORD *)(v141 + 16) = v112 + 1;
      v99(&v133[v97 + v112 * v96], v134, v0);
LABEL_79:
      v105(v139, v0);
      v94 += v96;
      --v93;
      v91 = v100;
      if (!v93)
        break;
      ((void (*)(char *, char *, uint64_t))v136)(v100, v94, v0);
    }
  }
  v140(v91, 1, 1, v0);
LABEL_91:
  swift_bridgeObjectRelease();
  v113 = *(_QWORD *)(v141 + 16);
  v114 = v124;
  v115 = v135;
  if (v113)
  {
    v116 = v141 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    v117 = *(_QWORD *)(v135 + 72);
    v118 = *(void (**)(unint64_t, uint64_t, uint64_t))(v135 + 16);
    v119 = (uint64_t)v138;
    while (1)
    {
      v118(v114, v116, v0);
      v140((char *)v114, 0, 1, v0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v115 + 48))(v114, 1, v0) == 1)
        break;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v115 + 32))(v119, v114, v0);
      sub_2275501FC(v119);
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v119, v0);
      v116 += v117;
      if (!--v113)
        goto LABEL_95;
    }
  }
  else
  {
LABEL_95:
    v140((char *)v114, 1, 1, v0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MFLivePreviewView()
{
  return objc_opt_self();
}

void sub_22738B128()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  char v22;
  char v23;
  char v24;

  if (qword_2540B87B8 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v24 == 1)
  {
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v2 = (void *)sub_22758E1B4();
    v3 = (void *)sub_22758E1B4();
    v4 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, v3);

    sub_22758E1E4();
    v5 = (void *)sub_22758E1B4();
    swift_bridgeObjectRelease();
    UIAccessibilitySpeak();

    sub_227469C74(0);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22758D194();
    swift_release();
    swift_release();
    if (v23 == 1)
    {
      type metadata accessor for MAGUtilities();
      v6 = swift_getObjCClassFromMetadata();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v6);
      v8 = (void *)sub_22758E1B4();
      v9 = (void *)sub_22758E1B4();
      v10 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, 0, v9);

      sub_22758E1E4();
      v11 = (id)*MEMORY[0x24BEBAE28];
      v12 = (void *)sub_22758E1B4();
      v13 = (id)AXAttributedStringForBetterPronuciation();

      if (!v13)
      {
        __break(1u);
        return;
      }
      sub_22758E1E4();
      swift_bridgeObjectRelease();

      v14 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      UIAccessibilitySpeak();

      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22758D194();
      swift_release();
      swift_release();
      if (v22 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = sub_22758EE50();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
          return;
      }
      type metadata accessor for MAGUtilities();
      v16 = swift_getObjCClassFromMetadata();
      v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v16);
      v18 = (void *)sub_22758E1B4();
      v19 = (void *)sub_22758E1B4();
      v20 = objc_msgSend(v17, sel_localizedStringForKey_value_table_, v18, 0, v19);

      sub_22758E1E4();
      v21 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      UIAccessibilitySpeak();

      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
    }
  }
  sub_22758D1A0();
}

unint64_t sub_22738B7A8()
{
  unint64_t result;

  result = qword_2540B9FB0;
  if (!qword_2540B9FB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540B9FB0);
  }
  return result;
}

void sub_22738B7E4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for DetectedTextBlock();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3, v4, v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10, v11, v12, v13);
  v23 = (uint64_t)&v22 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 < 2)
    return;
  v16 = 0;
  v17 = v15 >> 1;
  for (i = v15 - 1; ; --i)
  {
    if (v16 == i)
      goto LABEL_4;
    v19 = *(_QWORD *)(a1 + 16);
    if (v16 >= v19)
      break;
    v20 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v21 = *(_QWORD *)(v22 + 72);
    sub_22738D654(a1 + v20 + v21 * v16, v23);
    if (i >= v19)
      goto LABEL_14;
    sub_22738D654(a1 + v20 + v21 * i, (uint64_t)v8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a1 = sub_22738D230(a1);
    if (v16 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    sub_22738D698((uint64_t)v8, a1 + v20 + v21 * v16);
    if (i >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    sub_22738D698(v23, a1 + v20 + v21 * i);
LABEL_4:
    if (v17 == ++v16)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_22738B964(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 16 * v2 + 16;
  v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v8 = v1[2];
    if (v4 >= v8)
      break;
    if (v6 >= v8)
      goto LABEL_13;
    v10 = v1[v3 + 4];
    v9 = v1[v3 + 5];
    v12 = *(_QWORD *)((char *)v1 + v7);
    v11 = *(_QWORD *)((char *)v1 + v7 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_22738D258(v1);
    v13 = &v1[v3];
    result = swift_bridgeObjectRelease();
    v13[4] = v12;
    v13[5] = v11;
    if (v6 >= v1[2])
      goto LABEL_14;
    v14 = (_QWORD *)((char *)v1 + v7);
    result = swift_bridgeObjectRelease();
    *v14 = v10;
    v14[1] = v9;
    v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 2;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_22738BA88(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v15 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    v3 = sub_22758ECE8();
    swift_bridgeObjectRelease();
    swift_release();
    v14 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v14 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v6 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x2276B2BEC](v5, v15);
          v10 = (id)MEMORY[0x2276B2BEC](v3 - (v5 + 1), v15);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v7)
            goto LABEL_34;
          v8 = *(id *)(v15 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v7)
            goto LABEL_37;
          v9 = (uint64_t)v8;
          v10 = *(id *)(v15 + 32 + 8 * v1);
        }
        v11 = v10;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v15 & 0x8000000000000000) != 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_22738D26C(v15);
        }
        v12 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v12 + 32) = v11;
        sub_22758E3F4();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v15 & 0x8000000000000000) != 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_22738D26C(v15);
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;

        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v9;
        sub_22758E3F4();
      }
      v5 = v6;
      if (v4 == v6)
        return v15;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_2273A64E4(v1);
    v15 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

void sub_22738BCA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  const void *v42;
  int v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  _QWORD *v52;
  void *v53;
  id v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  const void *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  void *v80;
  id v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  char *v104;
  void *v105;
  id v106;
  void *v107;
  uint64_t v108;
  char *v109;
  id v110;
  char v111;
  uint64_t v112;
  char *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  id v124;
  void *v125;
  id v126;
  id v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v131;
  id v132;
  void *v133;
  void *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  void *v140;
  id v141;
  void *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t ObjCClassFromMetadata;
  uint64_t v152;
  id v153;
  void *v154;
  id v155;
  uint64_t v156;
  id v157;
  char *v158;
  uint64_t v159;
  uint64_t v160[35];
  _BYTE v161[280];
  _QWORD v162[38];
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  _QWORD v168[35];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174[36];

  v0 = sub_22758DF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2, v3, v4, v5);
  v7 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540B87B8 != -1)
    swift_once();
  v8 = (_QWORD *)qword_2540BCDD0;
  swift_beginAccess();
  v9 = v8[6];
  v10 = v8[7];
  v174[0] = v8[5];
  v174[1] = v9;
  v174[2] = v10;
  v11 = qword_2540B9100;
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  if (v11 != -1)
    v12 = swift_once();
  MEMORY[0x24BDAC7A8](v12, v13, v14, v15, v16);
  v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540B9C80);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_2273A6400(v169);
  swift_bridgeObjectRelease();
  v174[0] = (uint64_t)v17;
  swift_retain();
  sub_2273FA264(v174);
  swift_release();
  v18 = v174[0];
  if (!*(_QWORD *)(v174[0] + 16))
  {
    swift_beginAccess();
    v170 = 0;
    v169 = 0;
    v19 = sub_22758DF14();
    MEMORY[0x24BDAC7A8](v19, v20, v21, v22, v23);
    sub_22758E7A8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v24 = sub_22738B964(v18);
  v25 = MEMORY[0x24BEE4AF8];
  v173 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(v24 + 16);
  v148 = v26;
  v149 = v24;
  if (v26)
  {
    v27 = v24;
    v153 = (id)objc_opt_self();
    v152 = sub_22730BA80(0, (unint64_t *)&unk_2540BA070);
    type metadata accessor for MAGUtilities();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v150 = (id)objc_opt_self();
    swift_bridgeObjectRetain();
    v158 = (char *)(v26 - 1);
    v28 = (uint64_t *)(v27 + 40);
    while (1)
    {
      v30 = (void *)*(v28 - 1);
      v29 = *v28;
      v31 = (_QWORD *)qword_2540BCDD0;
      v32 = swift_beginAccess();
      v33 = v31[6];
      v34 = v31[7];
      v169 = v31[5];
      v170 = v33;
      v171 = v34;
      MEMORY[0x24BDAC7A8](v32, v35, v36, v37, v38);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v168[0];
      if (!*(_QWORD *)(v168[0] + 16))
        goto LABEL_12;
      v40 = sub_2274DE434((uint64_t)v30, v29);
      if ((v41 & 1) != 0)
      {
        v42 = (const void *)(*(_QWORD *)(v39 + 56) + 280 * v40);
        memcpy(v168, v42, sizeof(v168));
        memmove(&v169, v42, 0x118uLL);
        CGRectMake(&v169);
        sub_22730B838((uint64_t)v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_227338314((uint64_t)v168);
        sub_227338344((uint64_t)v168, (uint64_t)&v169);
      }
      sub_227338344((uint64_t)&v169, (uint64_t)&v166);
      sub_227338344((uint64_t)&v166, (uint64_t)v168);
      v43 = sub_22733F118((uint64_t)v168);
      v156 = (uint64_t)v28;
      if (v43 == 1)
      {
        sub_227469C98((uint64_t)v174);
        swift_bridgeObjectRetain();
        sub_22730B91C((uint64_t)v174);
      }
      else
      {
        sub_227338344((uint64_t)&v169, (uint64_t)&v163);
        swift_bridgeObjectRetain();
        sub_22733F1C4(&v163);
      }
      v44 = (void *)sub_22758E1B4();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend(v153, sel_systemImageNamed_, v44);

      v46 = v150;
      v47 = objc_msgSend(v150, sel_bundleForClass_, ObjCClassFromMetadata);
      v48 = (void *)sub_22758E1B4();
      v49 = (void *)sub_22758E1B4();
      v50 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v48, 0, v49);

      sub_22758E1E4();
      v51 = objc_msgSend(v46, sel_mainBundle);
      sub_22758C69C();
      swift_bridgeObjectRelease();

      v52 = (_QWORD *)swift_allocObject();
      v53 = v154;
      v52[2] = v154;
      v52[3] = v30;
      v155 = v30;
      v52[4] = v29;
      swift_bridgeObjectRetain();
      v157 = v45;
      v54 = v53;
      v55 = (void *)sub_22758E97C();
      v56 = (_QWORD *)qword_2540BCDD0;
      v57 = swift_beginAccess();
      v58 = v56[6];
      v59 = v56[7];
      v163 = v56[5];
      v164 = v58;
      v165 = v59;
      MEMORY[0x24BDAC7A8](v57, v60, v61, v62, v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22758E7B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v162[0];
      if (*(_QWORD *)(v162[0] + 16) && (v65 = sub_2274DE434((uint64_t)v155, v29), (v66 & 1) != 0))
      {
        v67 = (const void *)(*(_QWORD *)(v64 + 56) + 280 * v65);
        memcpy(v162, v67, 0x118uLL);
        memmove(&v163, v67, 0x118uLL);
        CGRectMake(&v163);
        sub_22730B838((uint64_t)v162);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_227338314((uint64_t)v162);
        sub_227338344((uint64_t)v162, (uint64_t)&v163);
      }
      v69 = v157;
      v68 = v158;
      sub_227338344((uint64_t)&v163, (uint64_t)v161);
      sub_227338344((uint64_t)v161, (uint64_t)v162);
      if (sub_22733F118((uint64_t)v162) == 1)
      {
        v70 = 0;
      }
      else
      {
        v70 = v163;
        sub_227338344((uint64_t)&v163, (uint64_t)v160);
        sub_22733F1C4(v160);
      }
      objc_msgSend(v55, sel_setState_, v70, v148, v149);
      v71 = v55;
      MEMORY[0x2276B23C4]();
      if (*(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v173 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_22758E400();
      sub_22758E424();
      sub_22758E3F4();

      if (!v68)
        break;
      v28 = (uint64_t *)(v156 + 16);
      v158 = v68 - 1;
    }
    swift_bridgeObjectRelease();
    v25 = v173;
  }
  if (v25 >> 62)
  {
    sub_22730BA80(0, (unint64_t *)&unk_2540B9E48);
    swift_bridgeObjectRetain();
    sub_22758ECD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22758EE68();
    sub_22730BA80(0, (unint64_t *)&unk_2540B9E48);
  }
  swift_bridgeObjectRelease();
  v72 = sub_22730BA80(0, (unint64_t *)&unk_2540B9FD0);
  v159 = sub_22758E8C8();
  v73 = sub_22730BA80(0, (unint64_t *)&unk_2540BA070);
  type metadata accessor for MAGUtilities();
  v74 = (void *)swift_getObjCClassFromMetadata();
  v155 = (id)objc_opt_self();
  v75 = objc_msgSend(v155, sel_bundleForClass_, v74);
  v76 = (void *)sub_22758E1B4();
  v77 = (void *)sub_22758E1B4();
  v78 = objc_msgSend(v75, sel_localizedStringForKey_value_table_, v76, 0, v77);

  sub_22758E1E4();
  sub_2274C4B44();
  v79 = swift_allocObject();
  v80 = v154;
  *(_QWORD *)(v79 + 16) = v154;
  v81 = v80;
  v156 = v73;
  v82 = (char *)sub_22758E97C();
  swift_bridgeObjectRelease();
  if (!v148)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_227596560;
    *(_QWORD *)(v103 + 32) = v82;
    v169 = v103;
    sub_22758E3F4();
    v104 = v82;
    v105 = (void *)sub_22758E8C8();
    v106 = sub_2274808C0();
    objc_msgSend(v106, sel_setMenu_, v105);
    v107 = (void *)v159;
    goto LABEL_42;
  }
  v153 = v74;
  v157 = (id)v72;
  v158 = v82;
  v83 = (_QWORD *)qword_2540BCDD0;
  v84 = swift_beginAccess();
  v85 = v83[10];
  v86 = v83[11];
  v87 = v83[12];
  v169 = v83[9];
  v170 = v85;
  v171 = v86;
  v172 = v87;
  MEMORY[0x24BDAC7A8](v84, v88, v89, v90, v91);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540B9CB0);
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = v167;
  if (!v167)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v108 = swift_allocObject();
    *(_OWORD *)(v108 + 16) = xmmword_227596550;
    v82 = v158;
    v107 = (void *)v159;
    *(_QWORD *)(v108 + 32) = v158;
    *(_QWORD *)(v108 + 40) = v107;
    v169 = v108;
    sub_22758E3F4();
    v109 = v82;
    v110 = v107;
LABEL_41:
    v105 = (void *)sub_22758E8C8();
    v106 = sub_2274808C0();
    objc_msgSend(v106, sel_setMenu_, v105);
    goto LABEL_42;
  }
  v154 = v166;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22758D194();
  swift_release();
  swift_release();
  if (v169 != 1)
  {
LABEL_40:
    v107 = (void *)v159;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
    v112 = swift_allocObject();
    *(_OWORD *)(v112 + 16) = xmmword_227596550;
    v82 = v158;
    *(_QWORD *)(v112 + 32) = v158;
    *(_QWORD *)(v112 + 40) = v107;
    v169 = v112;
    sub_22758E3F4();
    v113 = v82;
    v114 = v107;
    goto LABEL_41;
  }
  v93 = (_QWORD *)qword_2540BCDD0;
  v94 = swift_beginAccess();
  v95 = v93[10];
  v96 = v93[11];
  v97 = v93[12];
  v169 = v93[9];
  v170 = v95;
  v171 = v96;
  v172 = v97;
  MEMORY[0x24BDAC7A8](v94, v98, v99, v100, v101);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v102 = v153;
  if (v164)
  {
    if (v163 == 0xD000000000000010 && v164 == 0x80000002275B1670)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    v111 = sub_22758EE50();
    swift_bridgeObjectRelease();
    if ((v111 & 1) != 0)
      goto LABEL_40;
  }
  v126 = v155;
  v127 = objc_msgSend(v155, sel_bundleForClass_, v102, v148);
  v128 = (void *)sub_22758E1B4();
  v129 = (void *)sub_22758E1B4();
  v130 = objc_msgSend(v127, sel_localizedStringForKey_value_table_, v128, 0, v129);

  v152 = sub_22758E1E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA310);
  v131 = swift_allocObject();
  *(_OWORD *)(v131 + 16) = xmmword_227593AB0;
  v132 = objc_msgSend(v126, sel_bundleForClass_, v153);
  v133 = (void *)sub_22758E1B4();
  v134 = (void *)sub_22758E1B4();
  v135 = objc_msgSend(v132, sel_localizedStringForKey_value_table_, v133, 0, v134);

  v136 = sub_22758E1E4();
  v138 = v137;

  *(_QWORD *)(v131 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v131 + 64) = sub_22732ECC8();
  *(_QWORD *)(v131 + 32) = v136;
  *(_QWORD *)(v131 + 40) = v138;
  sub_22758E214();
  swift_bridgeObjectRelease();
  sub_2274C4B54();
  v139 = (_QWORD *)swift_allocObject();
  v140 = v154;
  v139[2] = v81;
  v139[3] = v140;
  v139[4] = v92;
  v141 = v81;
  v142 = (void *)sub_22758E97C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540BA320);
  v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = xmmword_227599CC0;
  v144 = v158;
  v107 = (void *)v159;
  *(_QWORD *)(v143 + 32) = v158;
  *(_QWORD *)(v143 + 40) = v142;
  *(_QWORD *)(v143 + 48) = v107;
  v169 = v143;
  sub_22758E3F4();
  v145 = v144;
  v146 = v142;
  v147 = v107;
  v105 = (void *)sub_22758E8C8();
  v82 = v144;
  v106 = sub_2274808C0();
  objc_msgSend(v106, sel_setMenu_, v105);

LABEL_42:
  v115 = qword_2540BCDD0
       + OBJC_IVAR____TtCV16MagnifierSupport13MFEnvironment12UserControls__activityInstructionsDisplayed;
  v116 = swift_beginAccess();
  v117 = *(_QWORD *)(v115 + 8);
  v118 = *(_BYTE *)(v115 + 16);
  v163 = *(_QWORD *)v115;
  v164 = v117;
  LOBYTE(v165) = v118;
  MEMORY[0x24BDAC7A8](v116, v119, v120, v121, v122);
  swift_bridgeObjectRetain();
  sub_22758E7B4();
  swift_bridgeObjectRelease();
  v123 = LOBYTE(v162[0]);
  v124 = sub_2274808C0();
  v125 = v124;
  if (v123 == 1)
    objc_msgSend(v124, sel_setShowsMenuAsPrimaryAction_, 1);
  else
    objc_msgSend(v124, sel_addTarget_action_forControlEvents_, v81, sel_didTapActivitiesButton_, 64);

  sub_2274808FC();
}

