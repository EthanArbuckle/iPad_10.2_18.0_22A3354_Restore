BOOL NTPBPersonalizationWhitelistReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  NTPBScoredTagID *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addOptionalTags:", v18);
        goto LABEL_25;
      }
      if ((_DWORD)v17 == 1)
      {
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addDefaultTags:", v18);
LABEL_25:
        if (!PBReaderPlaceMark() || (NTPBScoredTagIDReadFrom((uint64_t)v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
LABEL_28:

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_30:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = (NTPBScoredTagID *)objc_claimAutoreleasedReturnValue();
    if (v18)
      objc_msgSend(a1, "addDisabledPortraitTags:", v18);
    goto LABEL_28;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBBundleIDMappingReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBBundleIDMappingBundleID *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBBundleIDMappingBundleID);
        objc_msgSend(a1, "addBundleIds:", v17);
        if (!PBReaderPlaceMark() || !NTPBBundleIDMappingBundleIDReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBBundleIDMappingBundleIDReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBScoredTagID *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (NTPBScoredTagID *)a1[1];
        a1[1] = v17;
        goto LABEL_28;
      case 2u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addTopicTags:", v18);
        goto LABEL_25;
      case 3u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addChannelTags:", v18);
        goto LABEL_25;
      case 4u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addSectionTags:", v18);
LABEL_25:
        if (PBReaderPlaceMark() && (NTPBScoredTagIDReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_29;
    }
  }
}

uint64_t NTPBKeyValueStoreReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  NTPBKeyValuePair *v29;
  void *Data;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_40;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_42:
        v31 = 16;
        goto LABEL_47;
      case 1u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_46:
        v31 = 8;
LABEL_47:
        *(_QWORD *)(a1 + v31) = v19;
        goto LABEL_48;
      case 2u:
        v29 = objc_alloc_init(NTPBKeyValuePair);
        objc_msgSend((id)a1, "addKeyValuePairs:", v29);

        if (PBReaderPlaceMark() && (NTPBKeyValuePairReadFrom((uint64_t)v29, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_48:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 3u:
        Data = (void *)PBReaderReadData();

        *(_QWORD *)(a1 + 32) = Data;
        goto LABEL_48;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_48;
    }
  }
}

uint64_t NTPBKeyValuePairReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *Data;
  void *v27;
  NTPBDate *v28;
  uint64_t result;
  NTPBCacheCoordinatorHints *v30;
  void *v31;
  NTPBReadingHistoryItem *v32;
  NTPBNetworkSessionList *v33;
  NTPBPersonalizationLocalData *v34;
  NTPBAppConfigurationResource *v35;
  NTPBPrivateDataControllerSyncState *v36;
  NTPBIssueReadingHistoryItem *v37;
  NTPBAsset *v38;
  NTPBAudioPlaylistItem *v39;
  NTPBAVAsset *v40;
  NTPBAVAssetKey *v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 80;
        goto LABEL_38;
      case 1u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 140) |= 1u;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              v14 = v21++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v22) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 136) = v22;
        goto LABEL_69;
      case 2u:
        Data = (void *)PBReaderReadData();

        v18 = Data;
        v19 = 56;
        goto LABEL_38;
      case 3u:
        v27 = (void *)PBReaderReadString();

        v18 = v27;
        v19 = 128;
        goto LABEL_38;
      case 4u:
        v28 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 64) = v28;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v28, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 6u:
        v30 = objc_alloc_init(NTPBCacheCoordinatorHints);

        *(_QWORD *)(a1 + 48) = v30;
        if (!PBReaderPlaceMark() || (NTPBCacheCoordinatorHintsReadFrom((uint64_t)v30, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 7u:
        v31 = (void *)PBReaderReadData();

        v18 = v31;
        v19 = 120;
LABEL_38:
        *(_QWORD *)(a1 + v19) = v18;
        goto LABEL_69;
      case 8u:
        v32 = objc_alloc_init(NTPBReadingHistoryItem);

        *(_QWORD *)(a1 + 112) = v32;
        if (!PBReaderPlaceMark() || (NTPBReadingHistoryItemReadFrom((uint64_t)v32, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0xAu:
        v33 = objc_alloc_init(NTPBNetworkSessionList);

        *(_QWORD *)(a1 + 88) = v33;
        if (!PBReaderPlaceMark() || (NTPBNetworkSessionListReadFrom(v33, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0xDu:
        v34 = objc_alloc_init(NTPBPersonalizationLocalData);

        *(_QWORD *)(a1 + 96) = v34;
        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationLocalDataReadFrom((id *)&v34->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0xEu:
        v35 = objc_alloc_init(NTPBAppConfigurationResource);

        *(_QWORD *)(a1 + 8) = v35;
        if (!PBReaderPlaceMark() || (NTPBAppConfigurationResourceReadFrom((uint64_t)v35, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0xFu:
        v36 = objc_alloc_init(NTPBPrivateDataControllerSyncState);

        *(_QWORD *)(a1 + 104) = v36;
        if (!PBReaderPlaceMark()
          || (NTPBPrivateDataControllerSyncStateReadFrom((uint64_t)v36, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0x10u:
        v37 = objc_alloc_init(NTPBIssueReadingHistoryItem);

        *(_QWORD *)(a1 + 72) = v37;
        if (!PBReaderPlaceMark()
          || (NTPBIssueReadingHistoryItemReadFrom((id *)&v37->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_68;
      case 0x11u:
        v38 = objc_alloc_init(NTPBAsset);

        *(_QWORD *)(a1 + 16) = v38;
        if (!PBReaderPlaceMark() || (NTPBAssetReadFrom((uint64_t)v38, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0x12u:
        v39 = objc_alloc_init(NTPBAudioPlaylistItem);

        *(_QWORD *)(a1 + 24) = v39;
        if (!PBReaderPlaceMark() || (NTPBAudioPlaylistItemReadFrom((uint64_t)v39, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0x13u:
        v40 = objc_alloc_init(NTPBAVAsset);

        *(_QWORD *)(a1 + 32) = v40;
        if (!PBReaderPlaceMark() || (NTPBAVAssetReadFrom((uint64_t)v40, a2) & 1) == 0)
          return 0;
        goto LABEL_68;
      case 0x14u:
        v41 = objc_alloc_init(NTPBAVAssetKey);

        *(_QWORD *)(a1 + 40) = v41;
        if (PBReaderPlaceMark() && (NTPBAVAssetKeyReadFrom((id *)&v41->super.super.isa, a2) & 1) != 0)
        {
LABEL_68:
          PBReaderRecallMark();
LABEL_69:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_69;
    }
  }
}

uint64_t NTPBAssetReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  void *Data;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 5)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_41:
        v31 = 12;
      }
      else
      {
        if ((_DWORD)v17 != 3)
        {
          if ((_DWORD)v17 == 2)
          {
            Data = (void *)PBReaderReadData();

            *(_QWORD *)(a1 + 16) = Data;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v25 = 0;
        v26 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v21 |= (unint64_t)(v29 & 0x7F) << v25;
          if ((v29 & 0x80) == 0)
            goto LABEL_43;
          v25 += 7;
          v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_45:
        v31 = 8;
      }
      *(_DWORD *)(a1 + v31) = v21;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCacheCoordinatorHintsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  NTPBCacheHint *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v23 = objc_alloc_init(NTPBCacheHint);
        objc_msgSend((id)a1, "addCacheHints:", v23);

        if (!PBReaderPlaceMark() || (NTPBCacheHintReadFrom((uint64_t)v23, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCacheHintReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  void *String;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_39;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_41;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_41:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else if ((_DWORD)v17 == 2)
      {
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 28) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0)
            goto LABEL_43;
          v25 += 7;
          v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v27) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_45:
        *(_DWORD *)(a1 + 24) = v27;
      }
      else if ((_DWORD)v17)
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkSessionListReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBNetworkSession *v17;
  NTPBNetworkEvent *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 1)
      {
        v18 = objc_alloc_init(NTPBNetworkEvent);
        objc_msgSend(a1, "addNetworkEvents:", v18);

        if (!PBReaderPlaceMark() || (NTPBNetworkEventReadFrom((uint64_t)v18, a2) & 1) == 0)
          return 0;
      }
      else
      {
        if ((v10 >> 3))
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v17 = objc_alloc_init(NTPBNetworkSession);
        objc_msgSend(a1, "addNetworkSessions:", v17);

        if (!PBReaderPlaceMark() || (NTPBNetworkSessionReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *String;
  id v71;
  uint64_t v72;
  void *v73;
  void *v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 0u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x100u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_110;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_112;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_110:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_112:
          v86 = 72;
          goto LABEL_154;
        case 1u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_116:
          v86 = 16;
          goto LABEL_154;
        case 2u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_120:
          v86 = 8;
          goto LABEL_154;
        case 3u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x10u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_124:
          v86 = 40;
          goto LABEL_154;
        case 4u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x20u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_128:
          v86 = 48;
          goto LABEL_154;
        case 5u:
          v44 = 0;
          v45 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x40u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_132:
          v86 = 56;
          goto LABEL_154;
        case 6u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_WORD *)(a1 + 124) |= 0x200u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v51) = 0;
LABEL_136:
          v87 = 80;
          goto LABEL_149;
        case 7u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 8u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v19 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_140:
          v86 = 32;
          goto LABEL_154;
        case 8u:
          v60 = 0;
          v61 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 4u;
          while (2)
          {
            v62 = *v3;
            v63 = *(_QWORD *)(a2 + v62);
            if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
              *(_QWORD *)(a2 + v62) = v63 + 1;
              v19 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                v14 = v61++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_144;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_144:
          v86 = 24;
          goto LABEL_154;
        case 9u:
          v65 = 0;
          v66 = 0;
          v51 = 0;
          *(_WORD *)(a1 + 124) |= 0x400u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v51 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                v14 = v66++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v51) = 0;
LABEL_148:
          v87 = 104;
LABEL_149:
          *(_DWORD *)(a1 + v87) = v51;
          continue;
        case 0xAu:
          String = (void *)PBReaderReadString();

          v71 = String;
          v72 = 112;
          goto LABEL_94;
        case 0xBu:
          v73 = (void *)PBReaderReadString();

          v71 = v73;
          v72 = 88;
          goto LABEL_94;
        case 0xCu:
          v74 = (void *)PBReaderReadString();

          v71 = v74;
          v72 = 96;
LABEL_94:
          *(_QWORD *)(a1 + v72) = v71;
          continue;
        case 0xDu:
          v75 = 0;
          v76 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x80u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v19 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_153:
          v86 = 64;
LABEL_154:
          *(_QWORD *)(a1 + v86) = v19;
          continue;
        case 0xEu:
          v80 = 0;
          v81 = 0;
          v82 = 0;
          *(_WORD *)(a1 + 124) |= 0x800u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v83 = *v3;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v82 |= (unint64_t)(v85 & 0x7F) << v80;
        if ((v85 & 0x80) == 0)
          goto LABEL_158;
        v80 += 7;
        v14 = v81++ >= 9;
        if (v14)
        {
          v82 = 0;
          goto LABEL_160;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_158:
      if (*(_BYTE *)(a2 + *v5))
        v82 = 0;
LABEL_160:
      *(_BYTE *)(a1 + 120) = v82 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNetworkSessionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            break;
          v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0)
            goto LABEL_49;
          v24 += 7;
          v14 = v25++ >= 9;
          if (v14)
          {
            LODWORD(v26) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 16) = v26;
      }
      else if ((_DWORD)v17 == 1)
      {
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_BYTE *)(a1 + 24) |= 4u;
        while (1)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            break;
          v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0)
            goto LABEL_53;
          v30 += 7;
          v14 = v31++ >= 9;
          if (v14)
          {
            v32 = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          v32 = 0;
LABEL_55:
        *(_BYTE *)(a1 + 20) = v32 != 0;
      }
      else if ((_DWORD)v17)
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_45;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_47:
        *(_QWORD *)(a1 + 8) = v20;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBVanityURLMappingReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBVanityURLPath *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBVanityURLPath);
        objc_msgSend(a1, "addPaths:", v17);
        if (!PBReaderPlaceMark() || !NTPBVanityURLPathReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBVanityURLPathReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 8;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBURLMappingReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBURLMappingDomain *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBURLMappingDomain);
        objc_msgSend(a1, "addDomains:", v17);
        if (!PBReaderPlaceMark() || (NTPBURLMappingDomainReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBURLMappingDomainReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NTPBURLMappingPath *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v24 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v24 = 0;
        }
        a1[1] = v24;
      }
      else if ((_DWORD)v19 == 2)
      {
        v25 = objc_alloc_init(NTPBURLMappingPath);
        objc_msgSend(a1, "addPaths:", v25);
        if (!PBReaderPlaceMark() || !NTPBURLMappingPathReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((_DWORD)v19 == 1)
      {
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = (void *)a1[2];
        a1[2] = v20;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPublisherFavorabilityScoresReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBScoredTagID *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addScores:", v17);
        if (!PBReaderPlaceMark() || (NTPBScoredTagIDReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBURLMappingPathReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBScoredTagID *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (NTPBScoredTagID *)a1[2];
        a1[2] = v17;
        goto LABEL_28;
      case 2u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addTopicTags:", v18);
        goto LABEL_25;
      case 3u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addChannelTags:", v18);
        goto LABEL_25;
      case 4u:
        v18 = objc_alloc_init(NTPBScoredTagID);
        objc_msgSend(a1, "addSectionTags:", v18);
LABEL_25:
        if (PBReaderPlaceMark() && (NTPBScoredTagIDReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_29;
    }
  }
}

uint64_t NTPBScoredTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v23 = 0;
        }
        *(_DWORD *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v19;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPurchaseLookupRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[2] = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_31;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              v20 = String;
              v21 = 1;
              goto LABEL_30;
            case 3u:
              v22 = PBReaderReadString();
              if (v22)
                objc_msgSend(a1, "addChannelTagIDs:", v22);
              goto LABEL_31;
            case 4u:
              v23 = PBReaderReadString();
              if (v23)
                objc_msgSend(a1, "addBundleChannelTagIDs:", v23);
              goto LABEL_31;
            case 5u:
              v24 = (void *)PBReaderReadString();

              v20 = v24;
              v21 = 4;
LABEL_30:
              a1[v21] = v20;
              goto LABEL_31;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_31:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScoresReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *v17;
  uint64_t v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        objc_msgSend(a1, "addTopicCohorts:", v17);
        goto LABEL_25;
      case 2u:
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        v18 = 8;
        goto LABEL_24;
      case 3u:
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
        v18 = 16;
LABEL_24:
        objc_storeStrong((id *)&a1[v18], v17);
LABEL_25:
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_34;
        }
        goto LABEL_30;
      case 4u:
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicCohortScore);
        objc_msgSend(a1, "addTopicCohortScores:", v17);
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicCohortScoreReadFrom((uint64_t)v17, a2))
        {
LABEL_30:
          PBReaderRecallMark();

LABEL_31:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_31;
    }
  }
}

uint64_t NTPBArticleRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  NTPBRecordBase *v18;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  NTPBDate *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  void *v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  void *v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  void *v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  void *v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  void *v157;
  void *v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  void *v165;
  void *v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  void *v173;
  void *v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  NTPBArticleTopic *v181;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *v182;
  uint64_t v183;
  void *v184;
  void *v185;
  void *v186;
  uint64_t result;
  uint64_t v188;
  void *v189;
  void *v190;
  void *v191;
  uint64_t v192;
  void *v193;
  void *v194;
  char v195;
  unsigned int v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  char v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  unsigned int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  void *v222;
  void *v223;
  void *v224;
  void *v225;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  void *v232;
  void *v233;
  void *v234;
  void *v235;
  uint64_t v236;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata *v237;
  char v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  void *v244;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration *v245;
  uint64_t v246;
  unint64_t v247;
  void *v248;
  void *Data;
  void *v250;
  char v251;
  unsigned int v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  char v256;
  void *v257;
  void *v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  BOOL v263;
  uint64_t v264;
  uint64_t v265;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(NTPBRecordBase);

        *(_QWORD *)(a1 + 192) = v18;
        if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2) & 1) != 0)
          goto LABEL_291;
        return 0;
      case 2u:
        String = (void *)PBReaderReadString();

        v20 = String;
        v21 = 456;
        goto LABEL_308;
      case 3u:
        v22 = (void *)PBReaderReadString();

        v20 = v22;
        v21 = 688;
        goto LABEL_308;
      case 4u:
        v23 = (void *)PBReaderReadString();

        v20 = v23;
        v21 = 552;
        goto LABEL_308;
      case 5u:
        v24 = (void *)PBReaderReadString();

        v20 = v24;
        v21 = 504;
        goto LABEL_308;
      case 6u:
        v25 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 440) = v25;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v25, a2) & 1) == 0)
          return 0;
        goto LABEL_291;
      case 7u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x80u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              v15 = v27++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_314:
        v261 = 64;
        goto LABEL_417;
      case 8u:
        v33 = 0;
        v34 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 1u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v37;
            v28 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              v15 = v34++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_318;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_318:
        v261 = 8;
        goto LABEL_417;
      case 9u:
        v39 = (void *)PBReaderReadString();

        v20 = v39;
        v21 = 584;
        goto LABEL_308;
      case 0xAu:
        v40 = 0;
        v41 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x800u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v44;
            v28 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_322;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_322:
        v261 = 96;
        goto LABEL_417;
      case 0xBu:
        v46 = (void *)PBReaderReadString();

        v20 = v46;
        v21 = 432;
        goto LABEL_308;
      case 0xCu:
        v47 = (void *)PBReaderReadString();

        v20 = v47;
        v21 = 256;
        goto LABEL_308;
      case 0xDu:
        v48 = (void *)PBReaderReadString();

        v20 = v48;
        v21 = 488;
        goto LABEL_308;
      case 0xEu:
        v49 = (void *)PBReaderReadString();

        v20 = v49;
        v21 = 160;
        goto LABEL_308;
      case 0xFu:
        v50 = (void *)PBReaderReadString();

        v20 = v50;
        v21 = 240;
        goto LABEL_308;
      case 0x10u:
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x80000u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v15 = v52++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_326;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v53) = 0;
LABEL_326:
        v262 = 232;
        goto LABEL_395;
      case 0x11u:
        v58 = (void *)PBReaderReadString();

        v20 = v58;
        v21 = 224;
        goto LABEL_308;
      case 0x12u:
        v59 = (void *)PBReaderReadString();

        v20 = v59;
        v21 = 280;
        goto LABEL_308;
      case 0x13u:
        v60 = PBReaderReadString();
        if (v60)
          objc_msgSend((id)a1, "addFlintFontResourceIDs:", v60);
        goto LABEL_418;
      case 0x14u:
        v61 = (void *)PBReaderReadString();

        v20 = v61;
        v21 = 744;
        goto LABEL_308;
      case 0x15u:
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 760) |= 0x400000u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v15 = v63++ >= 9;
              if (v15)
              {
                v64 = 0;
                goto LABEL_330;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v64 = 0;
LABEL_330:
        v263 = v64 != 0;
        v264 = 752;
        goto LABEL_404;
      case 0x16u:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 760) |= 0x1000000u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v15 = v70++ >= 9;
              if (v15)
              {
                v71 = 0;
                goto LABEL_334;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_334:
        v263 = v71 != 0;
        v264 = 754;
        goto LABEL_404;
      case 0x17u:
        v76 = 0;
        v77 = 0;
        v78 = 0;
        *(_DWORD *)(a1 + 760) |= 0x8000000u;
        while (2)
        {
          v79 = *v3;
          v80 = *(_QWORD *)(a2 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
            *(_QWORD *)(a2 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v15 = v77++ >= 9;
              if (v15)
              {
                v78 = 0;
                goto LABEL_338;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v78 = 0;
LABEL_338:
        v263 = v78 != 0;
        v264 = 757;
        goto LABEL_404;
      case 0x18u:
        v83 = PBReaderReadString();
        if (v83)
          objc_msgSend((id)a1, "addIAdCategories:", v83);
        goto LABEL_418;
      case 0x19u:
        v84 = PBReaderReadString();
        if (v84)
          objc_msgSend((id)a1, "addIAdKeywords:", v84);
        goto LABEL_418;
      case 0x1Au:
        v85 = PBReaderReadString();
        if (v85)
          objc_msgSend((id)a1, "addIAdSectionIDs:", v85);
        goto LABEL_418;
      case 0x1Bu:
        v86 = PBReaderReadString();
        if (v86)
          objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v86);
        goto LABEL_418;
      case 0x1Cu:
        v87 = PBReaderReadString();
        if (v87)
          objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v87);
        goto LABEL_418;
      case 0x1Du:
        v88 = 0;
        v89 = 0;
        v90 = 0;
        *(_DWORD *)(a1 + 760) |= 0x800000u;
        while (2)
        {
          v91 = *v3;
          v92 = *(_QWORD *)(a2 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
            *(_QWORD *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              v15 = v89++ >= 9;
              if (v15)
              {
                v90 = 0;
                goto LABEL_342;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v90 = 0;
LABEL_342:
        v263 = v90 != 0;
        v264 = 753;
        goto LABEL_404;
      case 0x1Eu:
        v95 = PBReaderReadString();
        if (v95)
          objc_msgSend((id)a1, "addRelatedArticleIDs:", v95);
        goto LABEL_418;
      case 0x1Fu:
        v96 = PBReaderReadString();
        if (v96)
          objc_msgSend((id)a1, "addMoreFromPublisherArticleIDs:", v96);
        goto LABEL_418;
      case 0x20u:
        v97 = (void *)PBReaderReadString();

        v20 = v97;
        v21 = 624;
        goto LABEL_308;
      case 0x21u:
        v98 = 0;
        v99 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x2000u;
        while (2)
        {
          v100 = *v3;
          v101 = *(_QWORD *)(a2 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
            *(_QWORD *)(a2 + v100) = v102;
            v28 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              v15 = v99++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_346:
        v261 = 112;
        goto LABEL_417;
      case 0x22u:
        v104 = 0;
        v105 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x200u;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v108;
            v28 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v15 = v105++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_350:
        v261 = 80;
        goto LABEL_417;
      case 0x23u:
        v110 = (void *)PBReaderReadString();

        v20 = v110;
        v21 = 592;
        goto LABEL_308;
      case 0x24u:
        v111 = 0;
        v112 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x1000u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v115;
            v28 |= (unint64_t)(v116 & 0x7F) << v111;
            if (v116 < 0)
            {
              v111 += 7;
              v15 = v112++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_354:
        v261 = 104;
        goto LABEL_417;
      case 0x25u:
        v117 = (void *)PBReaderReadString();

        v20 = v117;
        v21 = 576;
        goto LABEL_308;
      case 0x26u:
        v118 = 0;
        v119 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x400u;
        while (2)
        {
          v120 = *v3;
          v121 = *(_QWORD *)(a2 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
            *(_QWORD *)(a2 + v120) = v122;
            v28 |= (unint64_t)(v123 & 0x7F) << v118;
            if (v123 < 0)
            {
              v118 += 7;
              v15 = v119++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_358:
        v261 = 88;
        goto LABEL_417;
      case 0x27u:
        v124 = (void *)PBReaderReadString();

        v20 = v124;
        v21 = 632;
        goto LABEL_308;
      case 0x28u:
        v125 = 0;
        v126 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x4000u;
        while (2)
        {
          v127 = *v3;
          v128 = *(_QWORD *)(a2 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
            *(_QWORD *)(a2 + v127) = v129;
            v28 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              v15 = v126++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_362:
        v261 = 120;
        goto LABEL_417;
      case 0x29u:
        v131 = 0;
        v132 = 0;
        v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x200000u;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v135;
            v53 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              v15 = v132++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v53) = 0;
LABEL_366:
        v262 = 544;
        goto LABEL_395;
      case 0x2Au:
        v137 = 0;
        v138 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 2u;
        while (2)
        {
          v139 = *v3;
          v140 = *(_QWORD *)(a2 + v139);
          v141 = v140 + 1;
          if (v140 == -1 || v141 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v142 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v140);
            *(_QWORD *)(a2 + v139) = v141;
            v28 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              v15 = v138++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_370:
        v261 = 16;
        goto LABEL_417;
      case 0x2Bu:
        v143 = 0;
        v144 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x40u;
        while (2)
        {
          v145 = *v3;
          v146 = *(_QWORD *)(a2 + v145);
          v147 = v146 + 1;
          if (v146 == -1 || v147 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v146);
            *(_QWORD *)(a2 + v145) = v147;
            v28 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              v15 = v144++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_374;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_374:
        v261 = 56;
        goto LABEL_417;
      case 0x2Cu:
        v149 = (void *)PBReaderReadString();

        v20 = v149;
        v21 = 248;
        goto LABEL_308;
      case 0x2Du:
        v150 = 0;
        v151 = 0;
        v152 = 0;
        *(_DWORD *)(a1 + 760) |= 0x4000000u;
        while (2)
        {
          v153 = *v3;
          v154 = *(_QWORD *)(a2 + v153);
          v155 = v154 + 1;
          if (v154 == -1 || v155 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
            *(_QWORD *)(a2 + v153) = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              v15 = v151++ >= 9;
              if (v15)
              {
                v152 = 0;
                goto LABEL_378;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v152 = 0;
LABEL_378:
        v263 = v152 != 0;
        v264 = 756;
        goto LABEL_404;
      case 0x2Eu:
        v157 = (void *)PBReaderReadString();

        v20 = v157;
        v21 = 664;
        goto LABEL_308;
      case 0x2Fu:
        v158 = (void *)PBReaderReadString();

        v20 = v158;
        v21 = 656;
        goto LABEL_308;
      case 0x30u:
        v159 = 0;
        v160 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x10000u;
        while (2)
        {
          v161 = *v3;
          v162 = *(_QWORD *)(a2 + v161);
          v163 = v162 + 1;
          if (v162 == -1 || v163 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
            *(_QWORD *)(a2 + v161) = v163;
            v28 |= (unint64_t)(v164 & 0x7F) << v159;
            if (v164 < 0)
            {
              v159 += 7;
              v15 = v160++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_382:
        v261 = 136;
        goto LABEL_417;
      case 0x31u:
        v165 = (void *)PBReaderReadString();

        v20 = v165;
        v21 = 680;
        goto LABEL_308;
      case 0x32u:
        v166 = (void *)PBReaderReadString();

        v20 = v166;
        v21 = 672;
        goto LABEL_308;
      case 0x33u:
        v167 = 0;
        v168 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x20000u;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          v171 = v170 + 1;
          if (v170 == -1 || v171 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v171;
            v28 |= (unint64_t)(v172 & 0x7F) << v167;
            if (v172 < 0)
            {
              v167 += 7;
              v15 = v168++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_386:
        v261 = 144;
        goto LABEL_417;
      case 0x34u:
        v173 = (void *)PBReaderReadString();

        v20 = v173;
        v21 = 648;
        goto LABEL_308;
      case 0x35u:
        v174 = (void *)PBReaderReadString();

        v20 = v174;
        v21 = 640;
        goto LABEL_308;
      case 0x36u:
        v175 = 0;
        v176 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x8000u;
        while (2)
        {
          v177 = *v3;
          v178 = *(_QWORD *)(a2 + v177);
          v179 = v178 + 1;
          if (v178 == -1 || v179 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
            *(_QWORD *)(a2 + v177) = v179;
            v28 |= (unint64_t)(v180 & 0x7F) << v175;
            if (v180 < 0)
            {
              v175 += 7;
              v15 = v176++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_390:
        v261 = 128;
        goto LABEL_417;
      case 0x37u:
        v181 = objc_alloc_init(NTPBArticleTopic);
        objc_msgSend((id)a1, "addTopics:", v181);

        if (!PBReaderPlaceMark() || (NTPBArticleTopicReadFrom((uint64_t)v181, a2) & 1) == 0)
          return 0;
        goto LABEL_291;
      case 0x38u:
        v182 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        v183 = 496;
        goto LABEL_210;
      case 0x39u:
        v182 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        v183 = 312;
LABEL_210:
        *(_QWORD *)(a1 + v183) = v182;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v182, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_291;
      case 0x3Au:
        v184 = (void *)PBReaderReadString();

        v20 = v184;
        v21 = 696;
        goto LABEL_308;
      case 0x3Bu:
        v185 = (void *)PBReaderReadString();

        v20 = v185;
        v21 = 712;
        goto LABEL_308;
      case 0x3Cu:
        v186 = (void *)PBReaderReadString();

        v20 = v186;
        v21 = 720;
        goto LABEL_308;
      case 0x3Eu:
        v188 = PBReaderReadString();
        if (v188)
          objc_msgSend((id)a1, "addPublisherSpecifiedArticleIDs:", v188);
        goto LABEL_418;
      case 0x3Fu:
        v189 = (void *)PBReaderReadString();

        v20 = v189;
        v21 = 520;
        goto LABEL_308;
      case 0x40u:
        v190 = (void *)PBReaderReadString();

        v20 = v190;
        v21 = 528;
        goto LABEL_308;
      case 0x41u:
        v191 = (void *)PBReaderReadString();

        v20 = v191;
        v21 = 536;
        goto LABEL_308;
      case 0x42u:
        v192 = PBReaderReadString();
        if (v192)
          objc_msgSend((id)a1, "addExperimentalTitles:", v192);
        goto LABEL_418;
      case 0x43u:
        v193 = (void *)PBReaderReadString();

        v20 = v193;
        v21 = 424;
        goto LABEL_308;
      case 0x44u:
        v194 = (void *)PBReaderReadString();

        v20 = v194;
        v21 = 352;
        goto LABEL_308;
      case 0x45u:
        v195 = 0;
        v196 = 0;
        v53 = 0;
        *(_DWORD *)(a1 + 760) |= 0x100000u;
        while (2)
        {
          v197 = *v3;
          v198 = *(_QWORD *)(a2 + v197);
          v199 = v198 + 1;
          if (v198 == -1 || v199 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v200 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v198);
            *(_QWORD *)(a2 + v197) = v199;
            v53 |= (unint64_t)(v200 & 0x7F) << v195;
            if (v200 < 0)
            {
              v195 += 7;
              v15 = v196++ >= 9;
              if (v15)
              {
                LODWORD(v53) = 0;
                goto LABEL_394;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v53) = 0;
LABEL_394:
        v262 = 472;
LABEL_395:
        *(_DWORD *)(a1 + v262) = v53;
        goto LABEL_418;
      case 0x46u:
        v201 = 0;
        v202 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 8u;
        while (2)
        {
          v203 = *v3;
          v204 = *(_QWORD *)(a2 + v203);
          v205 = v204 + 1;
          if (v204 == -1 || v205 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v206 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v204);
            *(_QWORD *)(a2 + v203) = v205;
            v28 |= (unint64_t)(v206 & 0x7F) << v201;
            if (v206 < 0)
            {
              v201 += 7;
              v15 = v202++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_399:
        v261 = 32;
        goto LABEL_417;
      case 0x47u:
        v207 = PBReaderReadString();
        if (v207)
          objc_msgSend((id)a1, "addLinkedArticleIDs:", v207);
        goto LABEL_418;
      case 0x48u:
        v208 = PBReaderReadString();
        if (v208)
          objc_msgSend((id)a1, "addLinkedIssueIDs:", v208);
        goto LABEL_418;
      case 0x49u:
        v209 = 0;
        v210 = 0;
        v211 = 0;
        *(_DWORD *)(a1 + 760) |= 0x2000000u;
        while (2)
        {
          v212 = *v3;
          v213 = *(_QWORD *)(a2 + v212);
          v214 = v213 + 1;
          if (v213 == -1 || v214 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
            *(_QWORD *)(a2 + v212) = v214;
            v211 |= (unint64_t)(v215 & 0x7F) << v209;
            if (v215 < 0)
            {
              v209 += 7;
              v15 = v210++ >= 9;
              if (v15)
              {
                v211 = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v211 = 0;
LABEL_403:
        v263 = v211 != 0;
        v264 = 755;
LABEL_404:
        *(_BYTE *)(a1 + v264) = v263;
        goto LABEL_418;
      case 0x4Au:
        v216 = 0;
        v217 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 4u;
        while (2)
        {
          v218 = *v3;
          v219 = *(_QWORD *)(a2 + v218);
          v220 = v219 + 1;
          if (v219 == -1 || v220 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v221 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
            *(_QWORD *)(a2 + v218) = v220;
            v28 |= (unint64_t)(v221 & 0x7F) << v216;
            if (v221 < 0)
            {
              v216 += 7;
              v15 = v217++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_408;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_408:
        v261 = 24;
        goto LABEL_417;
      case 0x4Fu:
        v222 = (void *)PBReaderReadString();

        v20 = v222;
        v21 = 400;
        goto LABEL_308;
      case 0x50u:
        v223 = (void *)PBReaderReadString();

        v20 = v223;
        v21 = 392;
        goto LABEL_308;
      case 0x51u:
        v224 = (void *)PBReaderReadString();

        v20 = v224;
        v21 = 408;
        goto LABEL_308;
      case 0x52u:
        v225 = (void *)PBReaderReadString();

        v20 = v225;
        v21 = 416;
        goto LABEL_308;
      case 0x53u:
        v226 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        v227 = 208;
        goto LABEL_265;
      case 0x54u:
        v226 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        v227 = 320;
LABEL_265:
        *(_QWORD *)(a1 + v227) = v226;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v226, a2))
        {
          return 0;
        }
        goto LABEL_291;
      case 0x55u:
        v228 = (void *)PBReaderReadString();

        v20 = v228;
        v21 = 360;
        goto LABEL_308;
      case 0x56u:
        *(_DWORD *)(a1 + 760) |= 0x20u;
        v229 = *v3;
        v230 = *(_QWORD *)(a2 + v229);
        if (v230 <= 0xFFFFFFFFFFFFFFF7 && v230 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v231 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v230);
          *(_QWORD *)(a2 + v229) = v230 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v231 = 0;
        }
        v265 = 48;
        goto LABEL_424;
      case 0x57u:
        v232 = (void *)PBReaderReadString();

        v20 = v232;
        v21 = 608;
        goto LABEL_308;
      case 0x58u:
        v233 = (void *)PBReaderReadString();

        v20 = v233;
        v21 = 568;
        goto LABEL_308;
      case 0x59u:
        v234 = (void *)PBReaderReadString();

        v20 = v234;
        v21 = 616;
        goto LABEL_308;
      case 0x5Au:
        v235 = (void *)PBReaderReadString();

        v20 = v235;
        v21 = 560;
        goto LABEL_308;
      case 0x5Bu:
        v236 = PBReaderReadString();
        if (v236)
          objc_msgSend((id)a1, "addAuthors:", v236);
        goto LABEL_418;
      case 0x5Cu:
        v237 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);

        *(_QWORD *)(a1 + 216) = v237;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v237, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_291;
      case 0x5Du:
        v238 = 0;
        v239 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x10u;
        while (2)
        {
          v240 = *v3;
          v241 = *(_QWORD *)(a2 + v240);
          v242 = v241 + 1;
          if (v241 == -1 || v242 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v243 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v241);
            *(_QWORD *)(a2 + v240) = v242;
            v28 |= (unint64_t)(v243 & 0x7F) << v238;
            if (v243 < 0)
            {
              v238 += 7;
              v15 = v239++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_412;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_412:
        v261 = 40;
        goto LABEL_417;
      case 0x5Eu:
        v244 = (void *)PBReaderReadString();

        v20 = v244;
        v21 = 728;
        goto LABEL_308;
      case 0x5Fu:
        v245 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration);

        *(_QWORD *)(a1 + 272) = v245;
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom((uint64_t)v245, a2) & 1) != 0)
        {
LABEL_291:
          PBReaderRecallMark();
LABEL_418:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x60u:
        *(_DWORD *)(a1 + 760) |= 0x40000u;
        v246 = *v3;
        v247 = *(_QWORD *)(a2 + v246);
        if (v247 <= 0xFFFFFFFFFFFFFFF7 && v247 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v231 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v247);
          *(_QWORD *)(a2 + v246) = v247 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v231 = 0;
        }
        v265 = 152;
LABEL_424:
        *(_QWORD *)(a1 + v265) = v231;
        goto LABEL_418;
      case 0x61u:
        v248 = (void *)PBReaderReadString();

        v20 = v248;
        v21 = 480;
        goto LABEL_308;
      case 0x62u:
        Data = (void *)PBReaderReadData();

        v20 = Data;
        v21 = 304;
        goto LABEL_308;
      case 0x63u:
        v250 = (void *)PBReaderReadData();

        v20 = v250;
        v21 = 296;
        goto LABEL_308;
      case 0x64u:
        v251 = 0;
        v252 = 0;
        v28 = 0;
        *(_DWORD *)(a1 + 760) |= 0x100u;
        while (2)
        {
          v253 = *v3;
          v254 = *(_QWORD *)(a2 + v253);
          v255 = v254 + 1;
          if (v254 == -1 || v255 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v256 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v254);
            *(_QWORD *)(a2 + v253) = v255;
            v28 |= (unint64_t)(v256 & 0x7F) << v251;
            if (v256 < 0)
            {
              v251 += 7;
              v15 = v252++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_416;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_416:
        v261 = 72;
LABEL_417:
        *(_QWORD *)(a1 + v261) = v28;
        goto LABEL_418;
      case 0x65u:
        v257 = (void *)PBReaderReadString();

        v20 = v257;
        v21 = 176;
        goto LABEL_308;
      case 0x66u:
        v258 = (void *)PBReaderReadData();

        v20 = v258;
        v21 = 600;
        goto LABEL_308;
      case 0x67u:
        v259 = (void *)PBReaderReadString();

        v20 = v259;
        v21 = 736;
LABEL_308:
        *(_QWORD *)(a1 + v21) = v20;
        goto LABEL_418;
      case 0x68u:
        v260 = PBReaderReadString();
        if (v260)
          objc_msgSend((id)a1, "addSportsEventIDs:", v260);
        goto LABEL_418;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_418;
    }
  }
}

uint64_t NTPBArticleTopicReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *String;
  uint64_t result;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo *v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 64) = String;
        goto LABEL_147;
      case 2u:
        v20 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        *(_QWORD *)(a1 + 40) = v20;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v20, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_88;
      case 3u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_WORD *)(a1 + 80) |= 0x200u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                v23 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_106:
        v93 = v23 != 0;
        v94 = 77;
        goto LABEL_139;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_WORD *)(a1 + 80) |= 0x40u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_110:
        v93 = v30 != 0;
        v94 = 74;
        goto LABEL_139;
      case 5u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_WORD *)(a1 + 80) |= 0x100u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v37 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_114:
        v93 = v37 != 0;
        v94 = 76;
        goto LABEL_139;
      case 6u:
        v42 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        *(_QWORD *)(a1 + 56) = v42;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v42, a2))
        {
          return 0;
        }
        goto LABEL_88;
      case 7u:
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 80) |= 0x80u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v15 = v44++ >= 9;
              if (v15)
              {
                v45 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v45 = 0;
LABEL_118:
        v93 = v45 != 0;
        v94 = 75;
        goto LABEL_139;
      case 8u:
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_WORD *)(a1 + 80) |= 0x400u;
        while (2)
        {
          v53 = *v3;
          v54 = *(_QWORD *)(a2 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v15 = v51++ >= 9;
              if (v15)
              {
                v52 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v52 = 0;
LABEL_122:
        v93 = v52 != 0;
        v94 = 78;
        goto LABEL_139;
      case 9u:
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_WORD *)(a1 + 80) |= 0x800u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v15 = v58++ >= 9;
              if (v15)
              {
                v59 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
LABEL_126:
        v93 = v59 != 0;
        v94 = 79;
        goto LABEL_139;
      case 0xAu:
        *(_WORD *)(a1 + 80) |= 1u;
        v64 = *v3;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v66 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v65);
          *(_QWORD *)(a2 + v64) = v65 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v66 = 0;
        }
        v95 = 8;
        goto LABEL_146;
      case 0xBu:
        *(_WORD *)(a1 + 80) |= 8u;
        v67 = *v3;
        v68 = *(_QWORD *)(a2 + v67);
        if (v68 <= 0xFFFFFFFFFFFFFFF7 && v68 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v66 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v68);
          *(_QWORD *)(a2 + v67) = v68 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v66 = 0;
        }
        v95 = 32;
        goto LABEL_146;
      case 0xCu:
        *(_WORD *)(a1 + 80) |= 4u;
        v69 = *v3;
        v70 = *(_QWORD *)(a2 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v66 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v70);
          *(_QWORD *)(a2 + v69) = v70 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v66 = 0;
        }
        v95 = 24;
LABEL_146:
        *(_QWORD *)(a1 + v95) = v66;
        goto LABEL_147;
      case 0xDu:
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_WORD *)(a1 + 80) |= 2u;
        while (2)
        {
          v74 = *v3;
          v75 = *(_QWORD *)(a2 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v75);
            *(_QWORD *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v15 = v72++ >= 9;
              if (v15)
              {
                v73 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v73 = 0;
LABEL_130:
        *(_QWORD *)(a1 + 16) = v73;
        goto LABEL_147;
      case 0xEu:
        v78 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo);

        *(_QWORD *)(a1 + 48) = v78;
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom((uint64_t)v78, a2))
        {
LABEL_88:
          PBReaderRecallMark();
LABEL_147:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0xFu:
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_WORD *)(a1 + 80) |= 0x20u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v15 = v80++ >= 9;
              if (v15)
              {
                v81 = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_134:
        v93 = v81 != 0;
        v94 = 73;
        goto LABEL_139;
      case 0x10u:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_WORD *)(a1 + 80) |= 0x10u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              v15 = v87++ >= 9;
              if (v15)
              {
                v88 = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_138:
        v93 = v88 != 0;
        v94 = 72;
LABEL_139:
        *(_BYTE *)(a1 + v94) = v93;
        goto LABEL_147;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_147;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohort *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohort);
        objc_msgSend(a1, "addCohorts:", v17);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 44) |= 0x10u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_45;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_47:
          *(_DWORD *)(a1 + 40) = v20;
          continue;
        case 2u:
          *(_BYTE *)(a1 + 44) |= 1u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v40 = 8;
          goto LABEL_58;
        case 3u:
          *(_BYTE *)(a1 + 44) |= 2u;
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v40 = 16;
          goto LABEL_58;
        case 4u:
          v31 = 0;
          v32 = 0;
          v33 = 0;
          *(_BYTE *)(a1 + 44) |= 8u;
          break;
        case 5u:
          *(_BYTE *)(a1 + 44) |= 4u;
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v40 = 24;
LABEL_58:
          *(_QWORD *)(a1 + v40) = v28;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v34 = *v3;
        v35 = *(_QWORD *)(a2 + v34);
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
        *(_QWORD *)(a2 + v34) = v36;
        v33 |= (unint64_t)(v37 & 0x7F) << v31;
        if ((v37 & 0x80) == 0)
          goto LABEL_49;
        v31 += 7;
        v15 = v32++ >= 9;
        if (v15)
        {
          v33 = 0;
          goto LABEL_51;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
      if (*(_BYTE *)(a2 + *v5))
        v33 = 0;
LABEL_51:
      *(_QWORD *)(a1 + 32) = v33;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

NTPBRecordBase *NTPBReadBaseFromRecordData(void *a1)
{
  id v1;
  _BYTE *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  NTPBRecordBase *v16;
  NTPBRecordBase *v17;

  v1 = a1;
  v2 = (_BYTE *)objc_msgSend(objc_alloc(MEMORY[0x24BE7AEF8]), "initWithData:", v1);
  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  v6 = (int *)MEMORY[0x24BE7AF30];
  while (1)
  {
    while (1)
    {
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4] || v2[*v5])
        goto LABEL_24;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v3;
        v11 = *(_QWORD *)&v2[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&v2[*v4])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v11);
        *(_QWORD *)&v2[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          LODWORD(v9) = 0;
          v14 = v2[*v5];
          goto LABEL_14;
        }
      }
      v2[*v5] = 1;
LABEL_12:
      v14 = v2[*v5];
      if (v2[*v5])
        LODWORD(v9) = 0;
LABEL_14:
      if (v14 || (v9 & 7) == 4)
      {
LABEL_24:
        v16 = 0;
LABEL_25:
        v16 = v16;
        v17 = v16;
        goto LABEL_27;
      }
      if ((v9 & 0x7FFF8) == 8)
        break;
      PBReaderSkipValueWithTag();
    }
    v16 = objc_alloc_init(NTPBRecordBase);
    if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v16, (uint64_t)v2) & 1) == 0)
      break;
    PBReaderRecallMark();
    if (v16)
      goto LABEL_25;
  }
  v17 = 0;
LABEL_27:

  return v17;
}

uint64_t NTPBRecordBaseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  NTPBDate *v22;
  NTPBDate *v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 40;
        goto LABEL_23;
      case 2u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 24;
LABEL_23:
        *(_QWORD *)(a1 + v19) = v18;
        goto LABEL_66;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 48) = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
          goto LABEL_26;
        return 0;
      case 4u:
        v23 = objc_alloc_init(NTPBDate);

        v24 = 32;
        goto LABEL_50;
      case 5u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 64) |= 4u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v27 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
LABEL_56:
        *(_BYTE *)(a1 + 60) = v27 != 0;
        goto LABEL_66;
      case 6u:
        v31 = 0;
        v32 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v33) = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v33) = 0;
LABEL_60:
        v42 = 16;
        goto LABEL_65;
      case 7u:
        v37 = 0;
        v38 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v33 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v33) = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v33) = 0;
LABEL_64:
        v42 = 56;
LABEL_65:
        *(_DWORD *)(a1 + v42) = v33;
        goto LABEL_66;
      case 8u:
        v23 = objc_alloc_init(NTPBDate);

        v24 = 8;
LABEL_50:
        *(_QWORD *)(a1 + v24) = v23;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v23, a2) & 1) != 0)
        {
LABEL_26:
          PBReaderRecallMark();
LABEL_66:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_66;
    }
  }
}

uint64_t NTPBDateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        *(_BYTE *)(a1 + 16) |= 1u;
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        *(_QWORD *)(a1 + 8) = v21;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpiration *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 3)
      {
        v23 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpiration);
        objc_msgSend((id)a1, "addTagsExpirationList:", v23);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpirationReadFrom((uint64_t)v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  NTPBRecordBase *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *String;
  id v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  void *v51;
  uint64_t result;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NTPBFeedConfiguration *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void *v65;
  void *v66;
  void *v67;
  void *Data;
  void *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  NTPBPurchaseOfferableConfiguration *v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void *v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  NTPBPublisherPaidDescriptionStrings *v132;
  void *v133;
  void *v134;
  void *v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  void *v155;
  uint64_t v156;
  void *v157;
  NTPBDate *v158;
  void *v159;
  uint64_t v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  void *v175;
  void *v176;
  void *v177;
  char v178;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  uint64_t v198;
  unint64_t v199;
  void *v200;
  uint64_t v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  char v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  BOOL v214;
  uint64_t v215;
  uint64_t v216;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(NTPBRecordBase);

        *(_QWORD *)(a1 + 112) = v18;
        if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2) & 1) != 0)
          goto LABEL_183;
        return 0;
      case 2u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 648) |= 0x400u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_249:
        v212 = 632;
        goto LABEL_298;
      case 3u:
        String = (void *)PBReaderReadString();

        v27 = String;
        v28 = 272;
        goto LABEL_236;
      case 4u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 2u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          v34 = v33 + 1;
          if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_253:
        v213 = 16;
        goto LABEL_320;
      case 5u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 648) |= 0x10000u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v15 = v37++ >= 9;
              if (v15)
              {
                v38 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v38 = 0;
LABEL_257:
        v214 = v38 != 0;
        v215 = 641;
        goto LABEL_315;
      case 6u:
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 648) |= 0x1000u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v15 = v44++ >= 9;
              if (v15)
              {
                v45 = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v45 = 0;
LABEL_261:
        v214 = v45 != 0;
        v215 = 637;
        goto LABEL_315;
      case 7u:
        v50 = (void *)PBReaderReadString();

        v27 = v50;
        v28 = 504;
        goto LABEL_236;
      case 8u:
        v51 = (void *)PBReaderReadString();

        v27 = v51;
        v28 = 408;
        goto LABEL_236;
      case 0xEu:
        v53 = (void *)PBReaderReadString();

        v27 = v53;
        v28 = 400;
        goto LABEL_236;
      case 0xFu:
        v54 = (void *)PBReaderReadString();

        v27 = v54;
        v28 = 256;
        goto LABEL_236;
      case 0x10u:
        v55 = PBReaderReadString();
        if (v55)
          objc_msgSend((id)a1, "addIAdCategories:", v55);
        goto LABEL_237;
      case 0x11u:
        v56 = PBReaderReadString();
        if (v56)
          objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v56);
        goto LABEL_237;
      case 0x12u:
        v57 = PBReaderReadString();
        if (v57)
          objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v57);
        goto LABEL_237;
      case 0x13u:
        v58 = objc_alloc_init(NTPBFeedConfiguration);

        *(_QWORD *)(a1 + 184) = v58;
        goto LABEL_81;
      case 0x15u:
        v59 = 0;
        v60 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x80u;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
            *(_QWORD *)(a2 + v61) = v63;
            v31 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v15 = v60++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_265;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_265:
        v213 = 64;
        goto LABEL_320;
      case 0x16u:
        v65 = (void *)PBReaderReadString();

        v27 = v65;
        v28 = 360;
        goto LABEL_236;
      case 0x17u:
        v66 = (void *)PBReaderReadString();

        v27 = v66;
        v28 = 304;
        goto LABEL_236;
      case 0x18u:
        v67 = (void *)PBReaderReadString();

        v27 = v67;
        v28 = 328;
        goto LABEL_236;
      case 0x19u:
        Data = (void *)PBReaderReadData();

        v27 = Data;
        v28 = 352;
        goto LABEL_236;
      case 0x1Au:
        v69 = (void *)PBReaderReadString();

        v27 = v69;
        v28 = 152;
        goto LABEL_236;
      case 0x1Bu:
        v70 = (void *)PBReaderReadString();

        v27 = v70;
        v28 = 624;
        goto LABEL_236;
      case 0x1Cu:
        v71 = PBReaderReadString();
        if (v71)
          objc_msgSend((id)a1, "addChannelSectionIDs:", v71);
        goto LABEL_237;
      case 0x1Du:
        v72 = (void *)PBReaderReadString();

        v27 = v72;
        v28 = 128;
        goto LABEL_236;
      case 0x1Eu:
        v58 = objc_alloc_init(NTPBFeedConfiguration);
        objc_msgSend((id)a1, "addChannelSectionFeedConfigurations:", v58);

LABEL_81:
        if (!PBReaderPlaceMark() || !NTPBFeedConfigurationReadFrom((uint64_t)v58, a2))
          return 0;
        goto LABEL_183;
      case 0x20u:
        v73 = 0;
        v74 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 4u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
            *(_QWORD *)(a2 + v75) = v77;
            v31 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v15 = v74++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_269:
        v213 = 24;
        goto LABEL_320;
      case 0x21u:
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 648) |= 0x2000u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v15 = v80++ >= 9;
              if (v15)
              {
                v81 = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_273:
        v214 = v81 != 0;
        v215 = 638;
        goto LABEL_315;
      case 0x22u:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 648) |= 0x8000u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              v15 = v87++ >= 9;
              if (v15)
              {
                v88 = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_277:
        v214 = v88 != 0;
        v215 = 640;
        goto LABEL_315;
      case 0x23u:
        v93 = (void *)PBReaderReadString();

        v27 = v93;
        v28 = 416;
        goto LABEL_236;
      case 0x24u:
        v94 = (void *)PBReaderReadString();

        v27 = v94;
        v28 = 448;
        goto LABEL_236;
      case 0x25u:
        v95 = (void *)PBReaderReadString();

        v27 = v95;
        v28 = 456;
        goto LABEL_236;
      case 0x26u:
        v96 = PBReaderReadString();
        if (v96)
          objc_msgSend((id)a1, "addPublisherPaidFeldsparablePurchaseIDs:", v96);
        goto LABEL_237;
      case 0x27u:
        v97 = PBReaderReadString();
        if (v97)
          objc_msgSend((id)a1, "addPublisherPaidBundlePurchaseIDs:", v97);
        goto LABEL_237;
      case 0x28u:
        v98 = objc_alloc_init(NTPBPurchaseOfferableConfiguration);
        objc_msgSend((id)a1, "addPurchaseOfferableConfiguration:", v98);

        if (!PBReaderPlaceMark()
          || (NTPBPurchaseOfferableConfigurationReadFrom((uint64_t)v98, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_183;
      case 0x29u:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        *(_DWORD *)(a1 + 648) |= 0x40000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v15 = v100++ >= 9;
              if (v15)
              {
                v101 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v101 = 0;
LABEL_281:
        v214 = v101 != 0;
        v215 = 643;
        goto LABEL_315;
      case 0x2Au:
        v106 = 0;
        v107 = 0;
        v108 = 0;
        *(_DWORD *)(a1 + 648) |= 0x80000u;
        while (2)
        {
          v109 = *v3;
          v110 = *(_QWORD *)(a2 + v109);
          v111 = v110 + 1;
          if (v110 == -1 || v111 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v110);
            *(_QWORD *)(a2 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if (v112 < 0)
            {
              v106 += 7;
              v15 = v107++ >= 9;
              if (v15)
              {
                v108 = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v108 = 0;
LABEL_285:
        v214 = v108 != 0;
        v215 = 644;
        goto LABEL_315;
      case 0x2Bu:
        v113 = 0;
        v114 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 8u;
        while (2)
        {
          v115 = *v3;
          v116 = *(_QWORD *)(a2 + v115);
          v117 = v116 + 1;
          if (v116 == -1 || v117 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v116);
            *(_QWORD *)(a2 + v115) = v117;
            v31 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              v15 = v114++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_289:
        v213 = 32;
        goto LABEL_320;
      case 0x2Cu:
        *(_DWORD *)(a1 + 648) |= 0x10u;
        v119 = *v3;
        v120 = *(_QWORD *)(a2 + v119);
        if (v120 <= 0xFFFFFFFFFFFFFFF7 && v120 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v121 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v120);
          *(_QWORD *)(a2 + v119) = v120 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v121 = 0;
        }
        v216 = 40;
        goto LABEL_325;
      case 0x2Du:
        v122 = PBReaderReadString();
        if (v122)
          objc_msgSend((id)a1, "addIAdKeywords:", v122);
        goto LABEL_237;
      case 0x2Eu:
        v123 = (void *)PBReaderReadString();

        v27 = v123;
        v28 = 344;
        goto LABEL_236;
      case 0x2Fu:
        v124 = (void *)PBReaderReadString();

        v27 = v124;
        v28 = 336;
        goto LABEL_236;
      case 0x30u:
        v125 = 0;
        v126 = 0;
        v127 = 0;
        *(_DWORD *)(a1 + 648) |= 0x800u;
        while (2)
        {
          v128 = *v3;
          v129 = *(_QWORD *)(a2 + v128);
          v130 = v129 + 1;
          if (v129 == -1 || v130 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v130;
            v127 |= (unint64_t)(v131 & 0x7F) << v125;
            if (v131 < 0)
            {
              v125 += 7;
              v15 = v126++ >= 9;
              if (v15)
              {
                v127 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v127 = 0;
LABEL_293:
        v214 = v127 != 0;
        v215 = 636;
        goto LABEL_315;
      case 0x31u:
        v132 = objc_alloc_init(NTPBPublisherPaidDescriptionStrings);

        *(_QWORD *)(a1 + 432) = v132;
        if (!PBReaderPlaceMark()
          || (NTPBPublisherPaidDescriptionStringsReadFrom((uint64_t)v132, a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_183;
      case 0x32u:
        v133 = (void *)PBReaderReadString();

        v27 = v133;
        v28 = 280;
        goto LABEL_236;
      case 0x33u:
        v134 = (void *)PBReaderReadString();

        v27 = v134;
        v28 = 296;
        goto LABEL_236;
      case 0x34u:
        v135 = (void *)PBReaderReadData();

        v27 = v135;
        v28 = 288;
        goto LABEL_236;
      case 0x35u:
        v136 = 0;
        v137 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 648) |= 0x200u;
        while (2)
        {
          v138 = *v3;
          v139 = *(_QWORD *)(a2 + v138);
          v140 = v139 + 1;
          if (v139 == -1 || v140 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v140;
            v21 |= (unint64_t)(v141 & 0x7F) << v136;
            if (v141 < 0)
            {
              v136 += 7;
              v15 = v137++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_297:
        v212 = 208;
LABEL_298:
        *(_DWORD *)(a1 + v212) = v21;
        goto LABEL_237;
      case 0x36u:
        v142 = 0;
        v143 = 0;
        v144 = 0;
        *(_DWORD *)(a1 + 648) |= 0x4000u;
        while (2)
        {
          v145 = *v3;
          v146 = *(_QWORD *)(a2 + v145);
          v147 = v146 + 1;
          if (v146 == -1 || v147 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v146);
            *(_QWORD *)(a2 + v145) = v147;
            v144 |= (unint64_t)(v148 & 0x7F) << v142;
            if (v148 < 0)
            {
              v142 += 7;
              v15 = v143++ >= 9;
              if (v15)
              {
                v144 = 0;
                goto LABEL_302;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v144 = 0;
LABEL_302:
        v214 = v144 != 0;
        v215 = 639;
        goto LABEL_315;
      case 0x37u:
        v149 = 0;
        v150 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 1u;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          v153 = v152 + 1;
          if (v152 == -1 || v153 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v153;
            v31 |= (unint64_t)(v154 & 0x7F) << v149;
            if (v154 < 0)
            {
              v149 += 7;
              v15 = v150++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_306;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_306:
        v213 = 8;
        goto LABEL_320;
      case 0x38u:
        v155 = (void *)PBReaderReadData();

        v27 = v155;
        v28 = 104;
        goto LABEL_236;
      case 0x39u:
        v156 = PBReaderReadString();
        if (v156)
          objc_msgSend((id)a1, "addPublisherSpecifiedArticleIDs:", v156);
        goto LABEL_237;
      case 0x3Au:
        v157 = (void *)PBReaderReadString();

        v27 = v157;
        v28 = 592;
        goto LABEL_236;
      case 0x3Bu:
        v158 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 472) = v158;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v158, a2) & 1) != 0)
        {
LABEL_183:
          PBReaderRecallMark();
LABEL_237:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x3Cu:
        v159 = (void *)PBReaderReadString();

        v27 = v159;
        v28 = 200;
        goto LABEL_236;
      case 0x3Du:
        v160 = PBReaderReadString();
        if (v160)
          objc_msgSend((id)a1, "addLatestIssueIDs:", v160);
        goto LABEL_237;
      case 0x3Eu:
        v161 = (void *)PBReaderReadString();

        v27 = v161;
        v28 = 96;
        goto LABEL_236;
      case 0x3Fu:
        v162 = (void *)PBReaderReadString();

        v27 = v162;
        v28 = 240;
        goto LABEL_236;
      case 0x40u:
        v163 = (void *)PBReaderReadString();

        v27 = v163;
        v28 = 264;
        goto LABEL_236;
      case 0x42u:
        v164 = (void *)PBReaderReadString();

        v27 = v164;
        v28 = 392;
        goto LABEL_236;
      case 0x43u:
        v165 = (void *)PBReaderReadString();

        v27 = v165;
        v28 = 584;
        goto LABEL_236;
      case 0x44u:
        v166 = (void *)PBReaderReadString();

        v27 = v166;
        v28 = 608;
        goto LABEL_236;
      case 0x45u:
        v167 = (void *)PBReaderReadString();

        v27 = v167;
        v28 = 616;
        goto LABEL_236;
      case 0x46u:
        v168 = 0;
        v169 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x20u;
        while (2)
        {
          v170 = *v3;
          v171 = *(_QWORD *)(a2 + v170);
          v172 = v171 + 1;
          if (v171 == -1 || v172 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v171);
            *(_QWORD *)(a2 + v170) = v172;
            v31 |= (unint64_t)(v173 & 0x7F) << v168;
            if (v173 < 0)
            {
              v168 += 7;
              v15 = v169++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_310:
        v213 = 48;
        goto LABEL_320;
      case 0x47u:
        v174 = PBReaderReadString();
        if (v174)
          objc_msgSend((id)a1, "addRecentIssueIDs:", v174);
        goto LABEL_237;
      case 0x48u:
        v175 = (void *)PBReaderReadString();

        v27 = v175;
        v28 = 320;
        goto LABEL_236;
      case 0x49u:
        v176 = (void *)PBReaderReadString();

        v27 = v176;
        v28 = 312;
        goto LABEL_236;
      case 0x4Au:
        v177 = (void *)PBReaderReadString();

        v27 = v177;
        v28 = 600;
        goto LABEL_236;
      case 0x4Bu:
        v178 = 0;
        v179 = 0;
        v180 = 0;
        *(_DWORD *)(a1 + 648) |= 0x20000u;
        while (2)
        {
          v181 = *v3;
          v182 = *(_QWORD *)(a2 + v181);
          v183 = v182 + 1;
          if (v182 == -1 || v183 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v184 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v182);
            *(_QWORD *)(a2 + v181) = v183;
            v180 |= (unint64_t)(v184 & 0x7F) << v178;
            if (v184 < 0)
            {
              v178 += 7;
              v15 = v179++ >= 9;
              if (v15)
              {
                v180 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v180 = 0;
LABEL_314:
        v214 = v180 != 0;
        v215 = 642;
LABEL_315:
        *(_BYTE *)(a1 + v215) = v214;
        goto LABEL_237;
      case 0x4Cu:
        v185 = (void *)PBReaderReadData();

        v27 = v185;
        v28 = 568;
        goto LABEL_236;
      case 0x4Du:
        v186 = (void *)PBReaderReadString();

        v27 = v186;
        v28 = 216;
        goto LABEL_236;
      case 0x4Eu:
        v187 = (void *)PBReaderReadString();

        v27 = v187;
        v28 = 560;
        goto LABEL_236;
      case 0x4Fu:
        v188 = (void *)PBReaderReadString();

        v27 = v188;
        v28 = 544;
        goto LABEL_236;
      case 0x50u:
        v189 = (void *)PBReaderReadString();

        v27 = v189;
        v28 = 552;
        goto LABEL_236;
      case 0x51u:
        v190 = (void *)PBReaderReadString();

        v27 = v190;
        v28 = 512;
        goto LABEL_236;
      case 0x52u:
        v191 = (void *)PBReaderReadString();

        v27 = v191;
        v28 = 576;
        goto LABEL_236;
      case 0x53u:
        v192 = (void *)PBReaderReadString();

        v27 = v192;
        v28 = 384;
        goto LABEL_236;
      case 0x54u:
        v193 = (void *)PBReaderReadString();

        v27 = v193;
        v28 = 176;
        goto LABEL_236;
      case 0x55u:
        v194 = (void *)PBReaderReadString();

        v27 = v194;
        v28 = 368;
        goto LABEL_236;
      case 0x56u:
        v195 = (void *)PBReaderReadString();

        v27 = v195;
        v28 = 160;
        goto LABEL_236;
      case 0x57u:
        v196 = (void *)PBReaderReadString();

        v27 = v196;
        v28 = 376;
        goto LABEL_236;
      case 0x58u:
        v197 = (void *)PBReaderReadString();

        v27 = v197;
        v28 = 168;
        goto LABEL_236;
      case 0x59u:
        *(_DWORD *)(a1 + 648) |= 0x100u;
        v198 = *v3;
        v199 = *(_QWORD *)(a2 + v198);
        if (v199 <= 0xFFFFFFFFFFFFFFF7 && v199 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v121 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v199);
          *(_QWORD *)(a2 + v198) = v199 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v121 = 0;
        }
        v216 = 72;
LABEL_325:
        *(_QWORD *)(a1 + v216) = v121;
        goto LABEL_237;
      case 0x5Au:
        v200 = (void *)PBReaderReadString();

        v27 = v200;
        v28 = 480;
        goto LABEL_236;
      case 0x5Bu:
        v201 = PBReaderReadString();
        if (v201)
          objc_msgSend((id)a1, "addAdTargetingKeywords:", v201);
        goto LABEL_237;
      case 0x5Cu:
        v202 = (void *)PBReaderReadString();

        v27 = v202;
        v28 = 192;
        goto LABEL_236;
      case 0x5Du:
        v203 = (void *)PBReaderReadString();

        v27 = v203;
        v28 = 536;
        goto LABEL_236;
      case 0x5Eu:
        v204 = (void *)PBReaderReadString();

        v27 = v204;
        v28 = 520;
        goto LABEL_236;
      case 0x5Fu:
        v205 = (void *)PBReaderReadString();

        v27 = v205;
        v28 = 528;
LABEL_236:
        *(_QWORD *)(a1 + v28) = v27;
        goto LABEL_237;
      case 0x60u:
        v206 = 0;
        v207 = 0;
        v31 = 0;
        *(_DWORD *)(a1 + 648) |= 0x40u;
        while (2)
        {
          v208 = *v3;
          v209 = *(_QWORD *)(a2 + v208);
          v210 = v209 + 1;
          if (v209 == -1 || v210 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v211 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v209);
            *(_QWORD *)(a2 + v208) = v210;
            v31 |= (unint64_t)(v211 & 0x7F) << v206;
            if (v211 < 0)
            {
              v206 += 7;
              v15 = v207++ >= 9;
              if (v15)
              {
                v31 = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_319:
        v213 = 56;
LABEL_320:
        *(_QWORD *)(a1 + v213) = v31;
        goto LABEL_237;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_237;
    }
  }
}

BOOL NTPBFeedConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int *v17;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) >= 6)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
      }
      else
      {
        v17 = off_24CD50A00[(int)(v10 >> 3)];
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v17) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPurchaseOfferableConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  int *v20;
  void *String;
  id v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  BOOL v48;
  uint64_t v49;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___NTPBArticleHostViewExposure__moduleItemPosition;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v5))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 0u:
          v19 = v2;
          v20 = v8;
          String = (void *)PBReaderReadString();

          v22 = String;
          v8 = v20;
          v2 = v19;
          *(_QWORD *)(a1 + 8) = v22;
          continue;
        case 1u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + v8[786]) |= 2u;
          while (2)
          {
            v27 = *v4;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v16 = v25++ >= 9;
                if (v16)
                {
                  v26 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v26 = 0;
LABEL_53:
          v48 = v26 != 0;
          v49 = 17;
          goto LABEL_66;
        case 2u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[786]) |= 1u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v16 = v31++ >= 9;
                if (v16)
                {
                  v32 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v32 = 0;
LABEL_57:
          v48 = v32 != 0;
          v49 = 16;
          goto LABEL_66;
        case 3u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + v8[786]) |= 4u;
          while (2)
          {
            v39 = *v4;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v16 = v37++ >= 9;
                if (v16)
                {
                  v38 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v38 = 0;
LABEL_61:
          v48 = v38 != 0;
          v49 = 18;
          goto LABEL_66;
        case 4u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + v8[786]) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v45 = *v4;
        v46 = *(_QWORD *)(a2 + v45);
        if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v5))
          break;
        v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
        *(_QWORD *)(a2 + v45) = v46 + 1;
        v44 |= (unint64_t)(v47 & 0x7F) << v42;
        if ((v47 & 0x80) == 0)
          goto LABEL_63;
        v42 += 7;
        v16 = v43++ >= 9;
        if (v16)
        {
          v44 = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v6))
        v44 = 0;
LABEL_65:
      v48 = v44 != 0;
      v49 = 19;
LABEL_66:
      *(_BYTE *)(a1 + v49) = v48;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleTagMetadataReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);
        objc_msgSend(a1, "addTopicTagMetadata:", v17);
      }
      else
      {
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
          continue;
        }
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);
        objc_storeStrong(a1 + 1, v17);
      }
      if (!PBReaderPlaceMark()
        || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v17, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo *v33;
  uint64_t v34;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        *(_BYTE *)(a1 + 32) |= 1u;
        v18 = *v3;
        v19 = *(_QWORD *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v19 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 16;
        goto LABEL_50;
      case 2u:
        *(_BYTE *)(a1 + 32) |= 8u;
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 28;
        goto LABEL_50;
      case 3u:
        *(_BYTE *)(a1 + 32) |= 4u;
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 24;
LABEL_50:
        *(_DWORD *)(a1 + v34) = v20;
        goto LABEL_51;
      case 4u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              v15 = v27++ >= 9;
              if (v15)
              {
                LODWORD(v28) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 20) = v28;
        goto LABEL_51;
      case 5u:
        v33 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo);
        objc_storeStrong((id *)(a1 + 8), v33);
        if (PBReaderPlaceMark()
          && COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom((uint64_t)v33, a2))
        {
          PBReaderRecallMark();

LABEL_51:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_51;
    }
  }
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__contentRating;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLContentAndRelevanceInfo__relevanceRating;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  NTPBRecordBase *v18;
  uint64_t String;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t result;
  void *v31;
  void *v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  void *v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  NTPBDate *v61;
  uint64_t v62;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScores *v63;
  void *v64;
  uint64_t v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  void *v79;
  uint64_t v80;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStats *v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(NTPBRecordBase);

        *(_QWORD *)(a1 + 56) = v18;
        if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v18, a2) & 1) != 0)
          goto LABEL_101;
        return 0;
      case 2u:
        String = PBReaderReadString();
        if (String)
          objc_msgSend((id)a1, "addAllArticleIDs:", String);
        goto LABEL_129;
      case 3u:
        v20 = PBReaderReadString();
        if (v20)
          objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v20);
        goto LABEL_129;
      case 4u:
        v21 = PBReaderReadString();
        if (v21)
          objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v21);
        goto LABEL_129;
      case 5u:
        v22 = (void *)PBReaderReadString();

        v23 = v22;
        v24 = 80;
        goto LABEL_97;
      case 6u:
        v25 = (void *)PBReaderReadString();

        v23 = v25;
        v24 = 104;
        goto LABEL_97;
      case 7u:
        *(_BYTE *)(a1 + 248) |= 1u;
        v26 = *v3;
        v27 = *(_QWORD *)(a2 + v26);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v28 = 0;
        }
        v88 = 8;
        goto LABEL_128;
      case 8u:
        v29 = (void *)PBReaderReadString();

        v23 = v29;
        v24 = 120;
        goto LABEL_97;
      case 0xBu:
        v31 = (void *)PBReaderReadString();

        v23 = v31;
        v24 = 128;
        goto LABEL_97;
      case 0xCu:
        v32 = (void *)PBReaderReadString();

        v23 = v32;
        v24 = 144;
        goto LABEL_97;
      case 0xDu:
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 248) |= 2u;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              v15 = v34++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
LABEL_105:
        v85 = 16;
        goto LABEL_123;
      case 0xEu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 248) |= 0x20u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                v42 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
LABEL_109:
        v86 = v42 != 0;
        v87 = 244;
        goto LABEL_114;
      case 0xFu:
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_BYTE *)(a1 + 248) |= 0x40u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v15 = v48++ >= 9;
              if (v15)
              {
                v49 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v49 = 0;
LABEL_113:
        v86 = v49 != 0;
        v87 = 245;
LABEL_114:
        *(_BYTE *)(a1 + v87) = v86;
        goto LABEL_129;
      case 0x10u:
        v54 = (void *)PBReaderReadString();

        v23 = v54;
        v24 = 152;
        goto LABEL_97;
      case 0x11u:
        v55 = (void *)PBReaderReadString();

        v23 = v55;
        v24 = 160;
        goto LABEL_97;
      case 0x12u:
        *(_BYTE *)(a1 + 248) |= 4u;
        v56 = *v3;
        v57 = *(_QWORD *)(a2 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v57);
          *(_QWORD *)(a2 + v56) = v57 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v28 = 0;
        }
        v88 = 24;
LABEL_128:
        *(_QWORD *)(a1 + v88) = v28;
        goto LABEL_129;
      case 0x13u:
        v58 = (void *)PBReaderReadString();

        v23 = v58;
        v24 = 168;
        goto LABEL_97;
      case 0x14u:
        v59 = (void *)PBReaderReadString();

        v23 = v59;
        v24 = 176;
        goto LABEL_97;
      case 0x15u:
        v60 = (void *)PBReaderReadString();

        v23 = v60;
        v24 = 184;
        goto LABEL_97;
      case 0x17u:
        v61 = objc_alloc_init(NTPBDate);

        v62 = 200;
        goto LABEL_99;
      case 0x18u:
        v63 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScores);

        *(_QWORD *)(a1 + 208) = v63;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScoresReadFrom((char *)v63, a2))
        {
          return 0;
        }
        goto LABEL_101;
      case 0x19u:
        v64 = (void *)PBReaderReadString();

        v23 = v64;
        v24 = 224;
        goto LABEL_97;
      case 0x1Au:
        v65 = PBReaderReadString();
        if (v65)
          objc_msgSend((id)a1, "addTopicTagIDs:", v65);
        goto LABEL_129;
      case 0x1Bu:
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_BYTE *)(a1 + 248) |= 0x10u;
        while (2)
        {
          v69 = *v3;
          v70 = *(_QWORD *)(a2 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
            *(_QWORD *)(a2 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v15 = v67++ >= 9;
              if (v15)
              {
                LODWORD(v68) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v68) = 0;
LABEL_118:
        *(_DWORD *)(a1 + 240) = v68;
        goto LABEL_129;
      case 0x1Cu:
        v73 = 0;
        v74 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 248) |= 8u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
            *(_QWORD *)(a2 + v75) = v77;
            v35 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v15 = v74++ >= 9;
              if (v15)
              {
                v35 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
LABEL_122:
        v85 = 32;
LABEL_123:
        *(_QWORD *)(a1 + v85) = v35;
        goto LABEL_129;
      case 0x1Du:
        v79 = (void *)PBReaderReadString();

        v23 = v79;
        v24 = 192;
        goto LABEL_97;
      case 0x1Eu:
        v80 = PBReaderReadString();
        if (v80)
          objc_msgSend((id)a1, "addBundleFeaturedArticleIDs:", v80);
        goto LABEL_129;
      case 0x23u:
        v81 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStats);

        *(_QWORD *)(a1 + 88) = v81;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStatsReadFrom((char *)v81, a2))
        {
          return 0;
        }
        goto LABEL_101;
      case 0x24u:
        v82 = (void *)PBReaderReadString();

        v23 = v82;
        v24 = 112;
        goto LABEL_97;
      case 0x25u:
        v83 = (void *)PBReaderReadString();

        v23 = v83;
        v24 = 136;
        goto LABEL_97;
      case 0x26u:
        v84 = (void *)PBReaderReadString();

        v23 = v84;
        v24 = 96;
LABEL_97:
        *(_QWORD *)(a1 + v24) = v23;
        goto LABEL_129;
      case 0x27u:
        v61 = objc_alloc_init(NTPBDate);

        v62 = 216;
LABEL_99:
        *(_QWORD *)(a1 + v62) = v61;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v61, a2) & 1) != 0)
        {
LABEL_101:
          PBReaderRecallMark();
LABEL_129:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_129;
    }
  }
}

uint64_t NTPBJSONRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBRecordBase *v17;
  void *Data;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        Data = (void *)PBReaderReadData();

        *(_QWORD *)(a1 + 16) = Data;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBRecordBase);

        *(_QWORD *)(a1 + 8) = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleConversionStatsReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *v18;
  uint64_t v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
        v19 = 8;
        goto LABEL_26;
      }
      if ((_DWORD)v17 == 1)
      {
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStats);
        objc_msgSend(a1, "addTopicConversionStats:", v18);
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStatsReadFrom((uint64_t)v18, a2))
        {
          goto LABEL_33;
        }
LABEL_28:
        PBReaderRecallMark();

        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_30:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
    v19 = 16;
LABEL_26:
    objc_storeStrong((id *)&a1[v19], v18);
    if (!PBReaderPlaceMark()
      || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v18, a2))
    {
LABEL_33:

      return 0;
    }
    goto LABEL_28;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        *(_BYTE *)(a1 + 24) |= 1u;
        v18 = *v3;
        v19 = *(_QWORD *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v19 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v23 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats__conversions;
LABEL_32:
        *(_QWORD *)(a1 + *v23) = v20;
        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_33:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    *(_BYTE *)(a1 + 24) |= 2u;
    v21 = *v3;
    v22 = *(_QWORD *)(a2 + v21);
    if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v22);
      *(_QWORD *)(a2 + v21) = v22 + 8;
    }
    else
    {
      *(_BYTE *)(a2 + *v5) = 1;
      v20 = 0;
    }
    v23 = &OBJC_IVAR___COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats__impressions;
    goto LABEL_32;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBForYouConfigRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  void *String;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_35;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              v19 = String;
              v20 = 2;
              goto LABEL_34;
            case 3u:
              v21 = (void *)PBReaderReadString();

              v19 = v21;
              v20 = 8;
              goto LABEL_34;
            case 5u:
              v23 = PBReaderReadString();
              if (v23)
                objc_msgSend(a1, "addEditorialArticleListIDs:", v23);
              goto LABEL_35;
            case 6u:
              v24 = PBReaderReadString();
              if (v24)
                objc_msgSend(a1, "addEditorialSectionTagIDs:", v24);
              goto LABEL_35;
            case 0xCu:
              v25 = (void *)PBReaderReadString();

              v19 = v25;
              v20 = 5;
              goto LABEL_34;
            case 0xDu:
              v26 = PBReaderReadString();
              if (v26)
                objc_msgSend(a1, "addTodayFeedTopStoriesArticleIDs:", v26);
              goto LABEL_35;
            case 0xEu:
              v27 = (void *)PBReaderReadString();

              v19 = v27;
              v20 = 6;
LABEL_34:
              a1[v20] = v19;
              goto LABEL_35;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_35:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBResourceRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_28;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              v20 = String;
              v21 = 3;
              goto LABEL_27;
            case 3u:
              v22 = (void *)PBReaderReadString();

              v20 = v22;
              v21 = 2;
              goto LABEL_27;
            case 4u:
              v23 = (void *)PBReaderReadString();

              v20 = v23;
              v21 = 4;
LABEL_27:
              a1[v21] = v20;
              goto LABEL_28;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_28:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationLocalDataReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBPersonalizationAggregateDelta *v17;
  uint64_t result;
  NTPBPersonalizationChangeGroup *v19;
  void *Data;
  id v21;
  uint64_t v22;
  void *String;
  NTPBPersonalizationAggregate *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBPersonalizationAggregateDelta);
        objc_msgSend(a1, "addOpenChangeGroupDeltas:", v17);

        if (PBReaderPlaceMark() && (NTPBPersonalizationAggregateDeltaReadFrom((uint64_t)v17, a2) & 1) != 0)
          goto LABEL_32;
        return 0;
      case 2u:
        v19 = objc_alloc_init(NTPBPersonalizationChangeGroup);
        objc_msgSend(a1, "addClosedChangeGroups:", v19);

        if (!PBReaderPlaceMark() || (NTPBPersonalizationChangeGroupReadFrom((uint64_t)v19, a2) & 1) == 0)
          return 0;
        goto LABEL_32;
      case 3u:
        Data = (void *)PBReaderReadData();

        v21 = Data;
        v22 = 5;
        goto LABEL_29;
      case 4u:
        String = (void *)PBReaderReadString();

        v21 = String;
        v22 = 3;
LABEL_29:
        a1[v22] = v21;
        goto LABEL_33;
      case 5u:
        v24 = objc_alloc_init(NTPBPersonalizationAggregate);
        objc_msgSend(a1, "addAggregates:", v24);

        if (PBReaderPlaceMark() && (NTPBPersonalizationAggregateReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_33;
    }
  }
}

uint64_t NTPBAudioConfigRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[1] = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_33;
              }
              return 0;
            case 2u:
              String = (void *)PBReaderReadString();

              v20 = String;
              v21 = 2;
              goto LABEL_32;
            case 3u:
              v22 = (void *)PBReaderReadString();

              v20 = v22;
              v21 = 4;
              goto LABEL_32;
            case 4u:
              v23 = (void *)PBReaderReadString();

              v20 = v23;
              v21 = 5;
              goto LABEL_32;
            case 5u:
              v24 = PBReaderReadString();
              if (v24)
                objc_msgSend(a1, "addHeroArticleIDs:", v24);
              goto LABEL_33;
            case 6u:
              v25 = (void *)PBReaderReadString();

              v20 = v25;
              v21 = 8;
              goto LABEL_32;
            case 7u:
              v26 = (void *)PBReaderReadString();

              v20 = v26;
              v21 = 6;
              goto LABEL_32;
            case 8u:
              v27 = (void *)PBReaderReadString();

              v20 = v27;
              v21 = 3;
LABEL_32:
              a1[v21] = v20;
              goto LABEL_33;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_33:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationAggregateReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  uint64_t v20;
  int *v21;
  void *String;
  id v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = &OBJC_IVAR___NTPBPersonalizationTreatment__decayFactor;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v6))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v4;
        v14 = *(_QWORD *)(a2 + v13);
        v15 = v14 + 1;
        if (v14 == -1 || v15 > *(_QWORD *)(a2 + *v5))
          break;
        v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v15;
        v12 |= (unint64_t)(v16 & 0x7F) << v10;
        if ((v16 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v17 = v11++ >= 9;
        if (v17)
        {
          v12 = 0;
          v18 = *(unsigned __int8 *)(a2 + *v6);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
      v18 = *(unsigned __int8 *)(a2 + *v6);
      if (*(_BYTE *)(a2 + *v6))
        v12 = 0;
LABEL_14:
      if (v18 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 0u:
          v20 = v2;
          v21 = v8;
          String = (void *)PBReaderReadString();

          v23 = String;
          v8 = v21;
          v2 = v20;
          *(_QWORD *)(a1 + 40) = v23;
          continue;
        case 1u:
          *(_BYTE *)(a1 + v8[522]) |= 1u;
          v25 = *v4;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)(a2 + *v5))
          {
            v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v6) = 1;
            v27 = 0;
          }
          v44 = 8;
          goto LABEL_55;
        case 2u:
          *(_BYTE *)(a1 + v8[522]) |= 4u;
          v28 = *v4;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v5))
          {
            v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v6) = 1;
            v27 = 0;
          }
          v44 = 24;
LABEL_55:
          *(_QWORD *)(a1 + v44) = v27;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[522]) |= 2u;
          while (2)
          {
            v33 = *v4;
            v34 = *(_QWORD *)(a2 + v33);
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)(a2 + *v5))
            {
              *(_BYTE *)(a2 + *v6) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v34);
              *(_QWORD *)(a2 + v33) = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if (v36 < 0)
              {
                v30 += 7;
                v17 = v31++ >= 9;
                if (v17)
                {
                  v32 = 0;
                  goto LABEL_45;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v6))
            v32 = 0;
LABEL_45:
          v43 = 16;
          goto LABEL_50;
        case 4u:
          v37 = 0;
          v38 = 0;
          v32 = 0;
          *(_BYTE *)(a1 + v8[522]) |= 8u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v4;
        v40 = *(_QWORD *)(a2 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v5))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v40);
        *(_QWORD *)(a2 + v39) = v41;
        v32 |= (unint64_t)(v42 & 0x7F) << v37;
        if ((v42 & 0x80) == 0)
          goto LABEL_47;
        v37 += 7;
        v17 = v38++ >= 9;
        if (v17)
        {
          v32 = 0;
          goto LABEL_49;
        }
      }
      *(_BYTE *)(a2 + *v6) = 1;
LABEL_47:
      if (*(_BYTE *)(a2 + *v6))
        v32 = 0;
LABEL_49:
      v43 = 32;
LABEL_50:
      *(_QWORD *)(a1 + v43) = v32;
    }
    while (*(_QWORD *)(a2 + *v4) < *(_QWORD *)(a2 + *v5));
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t NTPBPublisherPaidDescriptionStringsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t result;
  NTPBPaywallDescription *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = objc_alloc_init(NTPBPaywallDescription);

        *(_QWORD *)(a1 + 8) = v18;
        if (!PBReaderPlaceMark() || !NTPBPaywallDescriptionReadFrom((uint64_t)v18, a2))
          return 0;
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBPaywallDescriptionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int *v17;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) >= 4)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
      }
      else
      {
        v17 = off_24CD52CA0[(int)(v10 >> 3)];
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v17) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPuzzleRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  NTPBDate *v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBRecordBase);

        *(_QWORD *)(a1 + 48) = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        goto LABEL_39;
      case 2u:
        String = (void *)PBReaderReadString();

        v20 = String;
        v21 = 136;
        goto LABEL_63;
      case 3u:
        v22 = (void *)PBReaderReadString();

        v20 = v22;
        v21 = 88;
        goto LABEL_63;
      case 4u:
        v23 = (void *)PBReaderReadString();

        v20 = v23;
        v21 = 96;
        goto LABEL_63;
      case 5u:
        v24 = (void *)PBReaderReadString();

        v20 = v24;
        v21 = 64;
        goto LABEL_63;
      case 6u:
        v25 = PBReaderReadString();
        if (v25)
          objc_msgSend((id)a1, "addAuthors:", v25);
        goto LABEL_111;
      case 7u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 148) |= 0x20u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                v28 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_88:
        v68 = v28 != 0;
        v69 = 146;
        goto LABEL_110;
      case 8u:
        v32 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 80) = v32;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v32, a2) & 1) != 0)
        {
LABEL_39:
          PBReaderRecallMark();
LABEL_111:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 9u:
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 148) |= 2u;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              v14 = v34++ >= 9;
              if (v14)
              {
                v35 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
LABEL_92:
        v70 = 16;
        goto LABEL_101;
      case 0xAu:
        v39 = (void *)PBReaderReadString();

        v20 = v39;
        v21 = 120;
        goto LABEL_63;
      case 0xBu:
        v40 = (void *)PBReaderReadString();

        v20 = v40;
        v21 = 128;
        goto LABEL_63;
      case 0xCu:
        v41 = (void *)PBReaderReadString();

        v20 = v41;
        v21 = 72;
        goto LABEL_63;
      case 0xDu:
        v42 = PBReaderReadString();
        if (v42)
          objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v42);
        goto LABEL_111;
      case 0xEu:
        v43 = PBReaderReadString();
        if (v43)
          objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v43);
        goto LABEL_111;
      case 0xFu:
        v44 = 0;
        v45 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 148) |= 4u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 1;
            v35 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                v35 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
LABEL_96:
        v70 = 24;
        goto LABEL_101;
      case 0x10u:
        v49 = (void *)PBReaderReadString();

        v20 = v49;
        v21 = 112;
        goto LABEL_63;
      case 0x11u:
        v50 = (void *)PBReaderReadString();

        v20 = v50;
        v21 = 104;
LABEL_63:
        *(_QWORD *)(a1 + v21) = v20;
        goto LABEL_111;
      case 0x12u:
        v51 = 0;
        v52 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 148) |= 1u;
        while (2)
        {
          v53 = *v3;
          v54 = *(_QWORD *)(a2 + v53);
          if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 1;
            v35 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v51 += 7;
              v14 = v52++ >= 9;
              if (v14)
              {
                v35 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v35 = 0;
LABEL_100:
        v70 = 8;
LABEL_101:
        *(_QWORD *)(a1 + v70) = v35;
        goto LABEL_111;
      case 0x13u:
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_BYTE *)(a1 + 148) |= 8u;
        while (2)
        {
          v59 = *v3;
          v60 = *(_QWORD *)(a2 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
            *(_QWORD *)(a2 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v14 = v57++ >= 9;
              if (v14)
              {
                v58 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v58 = 0;
LABEL_105:
        v68 = v58 != 0;
        v69 = 144;
        goto LABEL_110;
      case 0x14u:
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_BYTE *)(a1 + 148) |= 0x10u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v14 = v63++ >= 9;
              if (v14)
              {
                v64 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v64 = 0;
LABEL_109:
        v68 = v64 != 0;
        v69 = 145;
LABEL_110:
        *(_BYTE *)(a1 + v69) = v68;
        goto LABEL_111;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_111;
    }
  }
}

uint64_t NTPBPuzzleTypeRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(NTPBRecordBase);

          *(_QWORD *)(a1 + 24) = v17;
          if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          String = (void *)PBReaderReadString();

          v20 = String;
          v21 = 104;
          goto LABEL_59;
        case 3u:
          v22 = (void *)PBReaderReadString();

          v20 = v22;
          v21 = 48;
          goto LABEL_59;
        case 4u:
          v23 = (void *)PBReaderReadString();

          v20 = v23;
          v21 = 200;
          goto LABEL_59;
        case 5u:
          v24 = PBReaderReadString();
          if (v24)
            objc_msgSend((id)a1, "addLatestPuzzleIDs:", v24);
          continue;
        case 6u:
          v25 = PBReaderReadString();
          if (v25)
            objc_msgSend((id)a1, "addPromotedPuzzleIDs:", v25);
          continue;
        case 7u:
          v26 = (void *)PBReaderReadString();

          v20 = v26;
          v21 = 88;
          goto LABEL_59;
        case 8u:
          v27 = PBReaderReadString();
          if (v27)
            objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v27);
          continue;
        case 9u:
          v28 = PBReaderReadString();
          if (v28)
            objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v28);
          continue;
        case 0xAu:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 216) |= 1u;
          break;
        case 0xBu:
          v35 = (void *)PBReaderReadString();

          v20 = v35;
          v21 = 136;
          goto LABEL_59;
        case 0xCu:
          v36 = (void *)PBReaderReadString();

          v20 = v36;
          v21 = 112;
          goto LABEL_59;
        case 0xDu:
          v37 = (void *)PBReaderReadString();

          v20 = v37;
          v21 = 120;
          goto LABEL_59;
        case 0xEu:
          v38 = (void *)PBReaderReadString();

          v20 = v38;
          v21 = 128;
          goto LABEL_59;
        case 0xFu:
          v39 = (void *)PBReaderReadString();

          v20 = v39;
          v21 = 40;
          goto LABEL_59;
        case 0x10u:
          v40 = (void *)PBReaderReadString();

          v20 = v40;
          v21 = 64;
          goto LABEL_59;
        case 0x11u:
          v41 = (void *)PBReaderReadString();

          v20 = v41;
          v21 = 56;
          goto LABEL_59;
        case 0x12u:
          v42 = (void *)PBReaderReadString();

          v20 = v42;
          v21 = 208;
          goto LABEL_59;
        case 0x13u:
          v43 = (void *)PBReaderReadString();

          v20 = v43;
          v21 = 72;
          goto LABEL_59;
        case 0x14u:
          v44 = (void *)PBReaderReadString();

          v20 = v44;
          v21 = 184;
          goto LABEL_59;
        case 0x15u:
          v45 = (void *)PBReaderReadString();

          v20 = v45;
          v21 = 168;
          goto LABEL_59;
        case 0x16u:
          v46 = (void *)PBReaderReadString();

          v20 = v46;
          v21 = 176;
          goto LABEL_59;
        case 0x17u:
          v47 = (void *)PBReaderReadString();

          v20 = v47;
          v21 = 160;
          goto LABEL_59;
        case 0x18u:
          v48 = (void *)PBReaderReadString();

          v20 = v48;
          v21 = 144;
          goto LABEL_59;
        case 0x19u:
          v49 = (void *)PBReaderReadString();

          v20 = v49;
          v21 = 152;
          goto LABEL_59;
        case 0x1Au:
          v50 = (void *)PBReaderReadString();

          v20 = v50;
          v21 = 80;
LABEL_59:
          *(_QWORD *)(a1 + v21) = v20;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v32 = *v3;
        v33 = *(_QWORD *)(a2 + v32);
        if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
        *(_QWORD *)(a2 + v32) = v33 + 1;
        v31 |= (unint64_t)(v34 & 0x7F) << v29;
        if ((v34 & 0x80) == 0)
          goto LABEL_63;
        v29 += 7;
        v14 = v30++ >= 9;
        if (v14)
        {
          v31 = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        v31 = 0;
LABEL_65:
      *(_QWORD *)(a1 + 8) = v31;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemInventoryReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  NTPBDate *v29;
  NTPBFeedItem *v30;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] >= *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
    return a2[*v5] == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (a2[*v5])
      return a2[*v5] == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)&a2[v11];
      if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
      *(_QWORD *)&a2[v11] = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    v15 = a2[*v5];
    if (a2[*v5])
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return a2[*v5] == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)&a2[v20];
          if (v21 == -1 || v21 >= *(_QWORD *)&a2[*v4])
            break;
          v22 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v21);
          *(_QWORD *)&a2[v20] = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_42;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_44;
          }
        }
        a2[*v5] = 1;
LABEL_42:
        if (a2[*v5])
          LODWORD(v19) = 0;
LABEL_44:
        v31 = 24;
        goto LABEL_49;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)&a2[v26];
          if (v27 == -1 || v27 >= *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v27);
            *(_QWORD *)&a2[v26] = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          LODWORD(v19) = 0;
LABEL_48:
        v31 = 8;
LABEL_49:
        *(_DWORD *)(a1 + v31) = v19;
        goto LABEL_50;
      case 3u:
        v29 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 32) = v29;
        if (!PBReaderPlaceMark() || (NTPBDateReadFrom((uint64_t)v29, (uint64_t)a2) & 1) == 0)
          return 0;
        goto LABEL_40;
      case 4u:
        v30 = objc_alloc_init(NTPBFeedItem);
        objc_msgSend((id)a1, "addFeedItems:", v30);

        if (PBReaderPlaceMark() && (NTPBFeedItemReadFrom((uint64_t)v30, a2) & 1) != 0)
        {
LABEL_40:
          PBReaderRecallMark();
LABEL_50:
          if (*(_QWORD *)&a2[*v3] >= *(_QWORD *)&a2[*v4])
            return a2[*v5] == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicConversionStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *v17;
  uint64_t v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v17 = *(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v18;
LABEL_24:

    goto LABEL_26;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *String;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 0u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_51;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_53;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_51:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_53:
          v41 = 8;
          goto LABEL_66;
        case 1u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_57:
          v41 = 16;
          goto LABEL_66;
        case 2u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_61:
          *(_DWORD *)(a1 + 32) = v31;
          continue;
        case 3u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 40) = String;
          continue;
        case 4u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 48) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0)
          goto LABEL_63;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_65;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_65:
      v41 = 24;
LABEL_66:
      *(_QWORD *)(a1 + v41) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAVAssetReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  void *Data;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          String = (void *)PBReaderReadString();

          v18 = String;
          v19 = 32;
          goto LABEL_24;
        case 2u:
          v21 = (void *)PBReaderReadString();

          v18 = v21;
          v19 = 40;
          goto LABEL_24;
        case 3u:
          Data = (void *)PBReaderReadData();

          v18 = Data;
          v19 = 16;
LABEL_24:
          *(_QWORD *)(a1 + v19) = v18;
          continue;
        case 4u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 5u:
          v29 = PBReaderReadString();
          if (v29)
            objc_msgSend((id)a1, "addContentKeyIdentifiers:", v29);
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v26 = *v3;
        v27 = *(_QWORD *)(a2 + v26);
        if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          break;
        v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
        *(_QWORD *)(a2 + v26) = v27 + 1;
        v25 |= (unint64_t)(v28 & 0x7F) << v23;
        if ((v28 & 0x80) == 0)
          goto LABEL_35;
        v23 += 7;
        v14 = v24++ >= 9;
        if (v14)
        {
          v25 = 0;
          goto LABEL_37;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
      if (*(_BYTE *)(a2 + *v5))
        v25 = 0;
LABEL_37:
      *(_QWORD *)(a1 + 8) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBRecommendationProviderReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBTagRecommendation *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (NTPBTagRecommendation *)a1[1];
        a1[1] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(NTPBTagRecommendation);
    objc_msgSend(a1, "addTagRecommendations:", v18);
    if (!PBReaderPlaceMark() || (NTPBTagRecommendationReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleSessionResignReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_38;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_38;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 5u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_38:
          v32 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_46:
      *(_QWORD *)(a1 + 8) = v28;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBAppSessionResumeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  v6 = (int *)MEMORY[0x24BE7AF30];
  while (1)
  {
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
      return v7 == 0;
    if (*(_BYTE *)(a2 + *v5))
    {
      v7 = 1;
      return v7 == 0;
    }
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      LOBYTE(v10) = 0;
LABEL_14:
    if (v7)
      v15 = 1;
    else
      v15 = (v10 & 7) == 4;
    if (v15)
      return v7 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

uint64_t NTPBArticleSessionResumeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_38;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 48) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_38;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        case 5u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_38:
          v32 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_46:
      *(_QWORD *)(a1 + 8) = v28;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBAppSessionResignReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  v6 = (int *)MEMORY[0x24BE7AF30];
  while (1)
  {
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
      return v7 == 0;
    if (*(_BYTE *)(a2 + *v5))
    {
      v7 = 1;
      return v7 == 0;
    }
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      LOBYTE(v10) = 0;
LABEL_14:
    if (v7)
      v15 = 1;
    else
      v15 = (v10 & 7) == 4;
    if (v15)
      return v7 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

BOOL NTPBAlternateHeadlineReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentState;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___NTPBAlternateHeadline__articleHeadlineTreatmentId;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBScoringCohortReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  int *v5;
  int *v6;
  unint64_t v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  void *String;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = (int *)MEMORY[0x24BE7AF60];
  v5 = (int *)MEMORY[0x24BE7AF50];
  v6 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v8 = 0x254B48000uLL;
    v9 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v6))
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v4;
          v14 = *(_QWORD *)(a2 + v13);
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)(a2 + *v5))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
          *(_QWORD *)(a2 + v13) = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v6);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v6) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v6);
        if (*(_BYTE *)(a2 + *v6))
          v12 = 0;
LABEL_14:
        if (v18)
          v19 = 1;
        else
          v19 = (v12 & 7) == 4;
        if (!v19)
        {
          switch((v12 >> 3))
          {
            case 1u:
              v20 = v2;
              v21 = v8;
              String = (void *)PBReaderReadString();

              v23 = String;
              v8 = v21;
              v2 = v20;
              *(_QWORD *)(a1 + 32) = v23;
              goto LABEL_38;
            case 2u:
              *(_BYTE *)(a1 + *(int *)(v8 + 1240)) |= 1u;
              v30 = *v4;
              v31 = *(_QWORD *)(a2 + v30);
              if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)(a2 + *v5))
              {
                v26 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v31);
                *(_QWORD *)(a2 + v30) = v31 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v6) = 1;
                v26 = 0;
              }
              v32 = 8;
              goto LABEL_37;
            case 3u:
              *(_BYTE *)(a1 + *(int *)(v8 + 1240)) |= 4u;
              v24 = *v4;
              v25 = *(_QWORD *)(a2 + v24);
              if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v5))
              {
                v26 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v6) = 1;
                v26 = 0;
              }
              v32 = 24;
              goto LABEL_37;
            case 4u:
              *(_BYTE *)(a1 + *(int *)(v8 + 1240)) |= 2u;
              v27 = *v4;
              v28 = *(_QWORD *)(a2 + v27);
              if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)(a2 + *v5))
              {
                v26 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v28);
                *(_QWORD *)(a2 + v27) = v28 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v6) = 1;
                v26 = 0;
              }
              v32 = 16;
LABEL_37:
              *(_QWORD *)(a1 + v32) = v26;
              goto LABEL_38;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_38:
              if (*(_QWORD *)(a2 + *v4) >= *(_QWORD *)(a2 + *v5))
                return *(_BYTE *)(a2 + *v6) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v6) == 0;
}

uint64_t NTPBVideoGroupsConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 60) |= 0x100u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_85;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_87;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_87:
          v67 = v19 != 0;
          v68 = 57;
          goto LABEL_104;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 60) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_91:
          v69 = 32;
          goto LABEL_122;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_95:
          v69 = 40;
          goto LABEL_122;
        case 4u:
          v35 = 0;
          v36 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 60) |= 1u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v26 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_99:
          v69 = 8;
          goto LABEL_122;
        case 5u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 60) |= 0x80u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  v42 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_103:
          v67 = v42 != 0;
          v68 = 56;
LABEL_104:
          *(_BYTE *)(a1 + v68) = v67;
          continue;
        case 6u:
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_WORD *)(a1 + 60) |= 0x40u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v48) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v48) = 0;
LABEL_108:
          v70 = 52;
          goto LABEL_113;
        case 7u:
          v52 = 0;
          v53 = 0;
          v48 = 0;
          *(_WORD *)(a1 + 60) |= 0x20u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v48 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v48) = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v48) = 0;
LABEL_112:
          v70 = 48;
LABEL_113:
          *(_DWORD *)(a1 + v70) = v48;
          continue;
        case 8u:
          v57 = 0;
          v58 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 60) |= 4u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v26 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_117:
          v69 = 24;
          goto LABEL_122;
        case 9u:
          v62 = 0;
          v63 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 60) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v64 = *v3;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
          break;
        v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
        *(_QWORD *)(a2 + v64) = v65 + 1;
        v26 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0)
          goto LABEL_119;
        v62 += 7;
        v14 = v63++ >= 9;
        if (v14)
        {
          v26 = 0;
          goto LABEL_121;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_119:
      if (*(_BYTE *)(a2 + *v5))
        v26 = 0;
LABEL_121:
      v69 = 16;
LABEL_122:
      *(_QWORD *)(a1 + v69) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBHeadlineBackingElementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 16;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSportsEventRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBRecordBase *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *String;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(NTPBRecordBase);

          *(_QWORD *)(a1 + 24) = v17;
          if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 100) |= 1u;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_54;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              v21 = 0;
              goto LABEL_56;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_56:
          *(_QWORD *)(a1 + 8) = v21;
          continue;
        case 3u:
          String = (void *)PBReaderReadString();

          v26 = String;
          v27 = 88;
          goto LABEL_39;
        case 4u:
          v28 = PBReaderReadString();
          if (v28)
            objc_msgSend((id)a1, "addEventCompetitorTagIDs:", v28);
          continue;
        case 5u:
          v29 = (void *)PBReaderReadString();

          v26 = v29;
          v27 = 64;
          goto LABEL_39;
        case 6u:
          v30 = (void *)PBReaderReadString();

          v26 = v30;
          v27 = 40;
          goto LABEL_39;
        case 7u:
          v31 = (void *)PBReaderReadString();

          v26 = v31;
          v27 = 72;
          goto LABEL_39;
        case 8u:
          v32 = (void *)PBReaderReadString();

          v26 = v32;
          v27 = 80;
          goto LABEL_39;
        case 9u:
          v33 = (void *)PBReaderReadString();

          v26 = v33;
          v27 = 56;
LABEL_39:
          *(_QWORD *)(a1 + v27) = v26;
          continue;
        case 0xAu:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 100) |= 2u;
          break;
        case 0xBu:
          v40 = PBReaderReadString();
          if (v40)
            objc_msgSend((id)a1, "addBlockedStorefrontIDs:", v40);
          continue;
        case 0xCu:
          v41 = PBReaderReadString();
          if (v41)
            objc_msgSend((id)a1, "addAllowedStorefrontIDs:", v41);
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v36 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          goto LABEL_58;
        v34 += 7;
        v14 = v35++ >= 9;
        if (v14)
        {
          v36 = 0;
          goto LABEL_60;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_58:
      if (*(_BYTE *)(a2 + *v5))
        v36 = 0;
LABEL_60:
      *(_BYTE *)(a1 + 96) = v36 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTopOfFeedModuleExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_48:
          v37 = 16;
          goto LABEL_57;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_52:
          v37 = 36;
          goto LABEL_57;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        case 4u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_44;
        case 5u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 8;
LABEL_44:
          v36 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v31 = *v3;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          break;
        v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
        *(_QWORD *)(a2 + v31) = v32 + 1;
        v19 |= (unint64_t)(v33 & 0x7F) << v29;
        if ((v33 & 0x80) == 0)
          goto LABEL_54;
        v29 += 7;
        v14 = v30++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      v37 = 32;
LABEL_57:
      *(_DWORD *)(a1 + v37) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBInAppWebEmbedExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_90;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_92;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_90:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_92:
          v67 = 44;
          goto LABEL_125;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x80u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_96:
          v67 = 64;
          goto LABEL_125;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_100:
          v67 = 56;
          goto LABEL_125;
        case 4u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 48;
          goto LABEL_60;
        case 5u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_60;
        case 6u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x100u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_104:
          v67 = 80;
          goto LABEL_125;
        case 7u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_60;
        case 8u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 0x40u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_108:
          v67 = 60;
          goto LABEL_125;
        case 9u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 72;
LABEL_60:
          v46 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        case 0xAu:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 8u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_112:
          v67 = 40;
          goto LABEL_125;
        case 0xBu:
          v52 = 0;
          v53 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 4u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_116:
          v67 = 28;
          goto LABEL_125;
        case 0xCu:
          v57 = 0;
          v58 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 2u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_120:
          v67 = 24;
          goto LABEL_125;
        case 0xDu:
          v62 = 0;
          v63 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 84) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v64 = *v3;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
          break;
        v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
        *(_QWORD *)(a2 + v64) = v65 + 1;
        v19 |= (unint64_t)(v66 & 0x7F) << v62;
        if ((v66 & 0x80) == 0)
          goto LABEL_122;
        v62 += 7;
        v14 = v63++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_124;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_122:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_124:
      v67 = 8;
LABEL_125:
      *(_DWORD *)(a1 + v67) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPurchaseOffersItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBWeightedTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v23 = 0;
        }
        *(_DWORD *)(a1 + 16) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLocationRecommendationMappingReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NTPBRecommendationProvider *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v22 = objc_alloc_init(NTPBRecommendationProvider);
        objc_msgSend(a1, "addRecommendationProviders:", v22);
        if (!PBReaderPlaceMark() || !NTPBRecommendationProviderReadFrom(v22, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        if ((_DWORD)v18 == 2)
        {
          a1[32] |= 2u;
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v21 = 0;
          }
          v26 = 16;
        }
        else
        {
          if ((_DWORD)v18 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          a1[32] |= 1u;
          v19 = *v3;
          v20 = *(_QWORD *)(a2 + v19);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
            *(_QWORD *)(a2 + v19) = v20 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v21 = 0;
          }
          v26 = 8;
        }
        *(_QWORD *)&a1[v26] = v21;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  NTPBContentAndRelevanceInfo *v33;
  uint64_t v34;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        *(_BYTE *)(a1 + 32) |= 1u;
        v18 = *v3;
        v19 = *(_QWORD *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v19 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 16;
        goto LABEL_50;
      case 2u:
        *(_BYTE *)(a1 + 32) |= 8u;
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 28;
        goto LABEL_50;
      case 3u:
        *(_BYTE *)(a1 + 32) |= 4u;
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v34 = 24;
LABEL_50:
        *(_DWORD *)(a1 + v34) = v20;
        goto LABEL_51;
      case 4u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              v15 = v27++ >= 9;
              if (v15)
              {
                LODWORD(v28) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_43:
        *(_DWORD *)(a1 + 20) = v28;
        goto LABEL_51;
      case 5u:
        v33 = objc_alloc_init(NTPBContentAndRelevanceInfo);
        objc_storeStrong((id *)(a1 + 8), v33);
        if (PBReaderPlaceMark() && NTPBContentAndRelevanceInfoReadFrom((uint64_t)v33, a2))
        {
          PBReaderRecallMark();

LABEL_51:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_51;
    }
  }
}

BOOL NTPBSectionSlotCostInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 5)
      {
        *(_BYTE *)(a1 + 32) |= 2u;
        v22 = *v3;
        v23 = *(_QWORD *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__sectionFooterSlotCost;
        goto LABEL_38;
      }
      if ((_DWORD)v18 == 4)
        break;
      if ((_DWORD)v18 == 1)
      {
        *(_BYTE *)(a1 + 32) |= 4u;
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__sectionTitleSlotCost;
LABEL_38:
        *(_QWORD *)(a1 + *v26) = v21;
        goto LABEL_39;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_39:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    *(_BYTE *)(a1 + 32) |= 1u;
    v24 = *v3;
    v25 = *(_QWORD *)(a2 + v24);
    if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v4))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v25);
      *(_QWORD *)(a2 + v24) = v25 + 8;
    }
    else
    {
      *(_BYTE *)(a2 + *v5) = 1;
      v21 = 0;
    }
    v26 = &OBJC_IVAR___NTPBSectionSlotCostInfo__headlineSlotCost;
    goto LABEL_38;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLRUCacheEntryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *Data;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0)
            goto LABEL_34;
          v21 += 7;
          v14 = v22++ >= 9;
          if (v14)
          {
            v23 = 0;
            goto LABEL_36;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_36:
        *(_QWORD *)(a1 + 8) = v23;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          Data = (void *)PBReaderReadData();

          v19 = Data;
          v20 = 24;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = (void *)PBReaderReadData();

          v19 = v18;
          v20 = 16;
        }
        *(_QWORD *)(a1 + v20) = v19;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleViewWatchReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_40;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 8) = v19;
          continue;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_31;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
LABEL_31:
          v26 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 5u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v30 = *v3;
        v31 = *(_QWORD *)(a2 + v30);
        if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          break;
        v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
        *(_QWORD *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
          goto LABEL_44;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          v29 = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        v29 = 0;
LABEL_46:
      *(_BYTE *)(a1 + 40) = v29 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionStartWatchReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBAbsolutePersonalizedSectionPresenceConfigReadFrom(void *a1, void *a2)
{
  _BYTE *v3;
  _BYTE *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v35;

  v3 = a1;
  v4 = a2;
  v5 = (int *)MEMORY[0x24BE7AF60];
  v6 = (int *)MEMORY[0x24BE7AF50];
  v7 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&v4[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&v4[*MEMORY[0x24BE7AF50]])
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (v4[*v7])
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v5;
        v13 = *(_QWORD *)&v4[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v4[*v6])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
        *(_QWORD *)&v4[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        v16 = v10++ >= 9;
        if (v16)
        {
          v11 = 0;
          v17 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      v17 = v4[*v7];
      if (v4[*v7])
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        break;
      switch((v11 >> 3))
      {
        case 1u:
          v3[40] |= 2u;
          v19 = *v5;
          v20 = *(_QWORD *)&v4[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)&v4[*v6])
          {
            v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v20);
            *(_QWORD *)&v4[v19] = v20 + 8;
          }
          else
          {
            v4[*v7] = 1;
            v21 = 0;
          }
          v33 = 16;
          goto LABEL_47;
        case 2u:
          v3[40] |= 1u;
          v22 = *v5;
          v23 = *(_QWORD *)&v4[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)&v4[*v6])
          {
            v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v23);
            *(_QWORD *)&v4[v22] = v23 + 8;
          }
          else
          {
            v4[*v7] = 1;
            v21 = 0;
          }
          v33 = 8;
          goto LABEL_47;
        case 3u:
          v3[40] |= 4u;
          v24 = *v5;
          v25 = *(_QWORD *)&v4[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)&v4[*v6])
          {
            v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v25);
            *(_QWORD *)&v4[v24] = v25 + 8;
          }
          else
          {
            v4[*v7] = 1;
            v21 = 0;
          }
          v33 = 24;
LABEL_47:
          *(_QWORD *)&v3[v33] = v21;
          continue;
        case 4u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          v3[40] |= 8u;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
          v35 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        v29 = *v5;
        v30 = *(_QWORD *)&v4[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v4[*v6])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v30);
        *(_QWORD *)&v4[v29] = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0)
          goto LABEL_38;
        v26 += 7;
        v16 = v27++ >= 9;
        if (v16)
        {
          v28 = 0;
          goto LABEL_40;
        }
      }
      v4[*v7] = 1;
LABEL_38:
      if (v4[*v7])
        v28 = 0;
LABEL_40:
      *((_QWORD *)v3 + 4) = v28;
    }
    while (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6]);
  }
  v35 = v4[*v7] == 0;
LABEL_50:

  return v35;
}

uint64_t NTPBIssueTocViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBIssueData *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 16), v17);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v17, a2) & 1) != 0)
          goto LABEL_29;
        goto LABEL_58;
      case 2u:
        v17 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 24), v17);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_58;
        goto LABEL_29;
      case 3u:
        v17 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 32), v17);
        if (PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_29:
          PBReaderRecallMark();

LABEL_56:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_58:

        return 0;
      case 4u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 8;
        goto LABEL_40;
      case 5u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              v14 = v22++ >= 9;
              if (v14)
              {
                LODWORD(v23) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 48) = v23;
        goto LABEL_56;
      case 6u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 40;
        goto LABEL_40;
      case 7u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 56;
LABEL_40:
        v27 = *(void **)(a1 + v20);
        *(_QWORD *)(a1 + v20) = v19;

        goto LABEL_56;
      case 8u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              v14 = v29++ >= 9;
              if (v14)
              {
                v30 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_55:
        *(_BYTE *)(a1 + 64) = v30 != 0;
        goto LABEL_56;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_56;
    }
  }
}

uint64_t NTPBChannelMuteUnmuteReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  void *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 176) |= 0x20u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_95;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_97;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_97:
          v65 = 168;
          goto LABEL_118;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 176) |= 0x10u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_101:
          v65 = 128;
          goto LABEL_118;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 16;
          goto LABEL_93;
        case 4u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 152;
          goto LABEL_93;
        case 5u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
          goto LABEL_93;
        case 6u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 48;
          goto LABEL_93;
        case 7u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 160;
          goto LABEL_93;
        case 8u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 176) |= 2u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_105:
          v65 = 88;
          goto LABEL_118;
        case 9u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 72;
          goto LABEL_93;
        case 0xAu:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 104;
          goto LABEL_93;
        case 0xBu:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 176) |= 0x80u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_109:
          v66 = v38 != 0;
          v67 = 173;
          goto LABEL_123;
        case 0xCu:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 24;
          goto LABEL_93;
        case 0xDu:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 40;
          goto LABEL_93;
        case 0xEu:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 96;
          goto LABEL_93;
        case 0xFu:
          v42 = 0;
          v43 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 176) |= 8u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v19 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_113:
          v65 = 116;
          goto LABEL_118;
        case 0x10u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 56;
          goto LABEL_93;
        case 0x11u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 64;
          goto LABEL_93;
        case 0x12u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 80;
          goto LABEL_93;
        case 0x13u:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 176) |= 4u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_117:
          v65 = 112;
LABEL_118:
          *(_DWORD *)(a1 + v65) = v19;
          continue;
        case 0x14u:
          v52 = 0;
          v53 = 0;
          v54 = 0;
          *(_BYTE *)(a1 + 176) |= 0x40u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  v54 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v54 = 0;
LABEL_122:
          v66 = v54 != 0;
          v67 = 172;
LABEL_123:
          *(_BYTE *)(a1 + v67) = v66;
          continue;
        case 0x15u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 136;
          goto LABEL_93;
        case 0x16u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 144;
          goto LABEL_93;
        case 0x17u:
          v58 = 0;
          v59 = 0;
          v60 = 0;
          *(_BYTE *)(a1 + 176) |= 1u;
          break;
        case 0x18u:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 120;
LABEL_93:
          v64 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v61 = *v3;
        v62 = *(_QWORD *)(a2 + v61);
        if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
          break;
        v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
        *(_QWORD *)(a2 + v61) = v62 + 1;
        v60 |= (unint64_t)(v63 & 0x7F) << v58;
        if ((v63 & 0x80) == 0)
          goto LABEL_125;
        v58 += 7;
        v14 = v59++ >= 9;
        if (v14)
        {
          v60 = 0;
          goto LABEL_127;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_125:
      if (*(_BYTE *)(a2 + *v5))
        v60 = 0;
LABEL_127:
      *(_QWORD *)(a1 + 8) = v60;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueReadingHistoryItemReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  NTPBDate *v22;
  uint64_t v23;
  void *v24;
  void *v25;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 1;
        goto LABEL_26;
      case 2u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 2;
        goto LABEL_26;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 8;
        goto LABEL_31;
      case 4u:
        v24 = (void *)PBReaderReadString();

        v18 = v24;
        v19 = 7;
        goto LABEL_26;
      case 5u:
        v25 = (void *)PBReaderReadString();

        v18 = v25;
        v19 = 9;
LABEL_26:
        a1[v19] = v18;
        goto LABEL_34;
      case 6u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 3;
        goto LABEL_31;
      case 7u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 4;
        goto LABEL_31;
      case 8u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 5;
        goto LABEL_31;
      case 9u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 6;
LABEL_31:
        a1[v23] = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_34:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_34;
    }
  }
}

uint64_t NTPBWidgetEngagementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  void *v83;
  uint64_t v84;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x80u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_123;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_125;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_123:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_125:
          v84 = 128;
          goto LABEL_170;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
          goto LABEL_121;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 72;
          goto LABEL_121;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 144;
          goto LABEL_121;
        case 5u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x200u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_129:
          v84 = 136;
          goto LABEL_170;
        case 6u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x10u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_133:
          v84 = 108;
          goto LABEL_170;
        case 7u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 8u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_137:
          v84 = 104;
          goto LABEL_170;
        case 8u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 2u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_141:
          v84 = 96;
          goto LABEL_170;
        case 9u:
          PBReaderReadString();
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          if (v46)
            objc_msgSend((id)a1, "addOtherVisibleSections:", v46);

          continue;
        case 0xAu:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_121;
        case 0xBu:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x800u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_145:
          v84 = 176;
          goto LABEL_170;
        case 0xCu:
          v52 = 0;
          v53 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 4u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_149:
          v84 = 100;
          goto LABEL_170;
        case 0xDu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 168;
          goto LABEL_121;
        case 0xEu:
          v57 = 0;
          v58 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x20u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_153:
          v84 = 120;
          goto LABEL_170;
        case 0xFu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 88;
          goto LABEL_121;
        case 0x10u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
          goto LABEL_121;
        case 0x11u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_121;
        case 0x12u:
          v62 = 0;
          v63 = 0;
          v64 = 0;
          *(_WORD *)(a1 + 180) |= 1u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v64 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                v14 = v63++ >= 9;
                if (v14)
                {
                  v64 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v64 = 0;
LABEL_157:
          *(_QWORD *)(a1 + 8) = v64;
          continue;
        case 0x13u:
          v68 = 0;
          v69 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x40u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v19 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_161:
          v84 = 124;
          goto LABEL_170;
        case 0x14u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 112;
          goto LABEL_121;
        case 0x15u:
          v73 = 0;
          v74 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x100u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v19 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                v14 = v74++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_165:
          v84 = 132;
          goto LABEL_170;
        case 0x16u:
          v78 = 0;
          v79 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x400u;
          break;
        case 0x17u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 152;
          goto LABEL_121;
        case 0x18u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 80;
          goto LABEL_121;
        case 0x19u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 40;
          goto LABEL_121;
        case 0x1Au:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 56;
LABEL_121:
          v83 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v80 = *v3;
        v81 = *(_QWORD *)(a2 + v80);
        if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
          break;
        v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
        *(_QWORD *)(a2 + v80) = v81 + 1;
        v19 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0)
          goto LABEL_167;
        v78 += 7;
        v14 = v79++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_169;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_167:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_169:
      v84 = 160;
LABEL_170:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBArticleInfoListReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBArticleInfo *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (NTPBArticleInfo *)a1[2];
        a1[2] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(NTPBArticleInfo);
    objc_msgSend(a1, "addArticleInfo:", v18);
    if (!PBReaderPlaceMark() || !NTPBArticleInfoReadFrom((uint64_t)v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBTodayModuleContentDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBTodayModuleContentRequest *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(NTPBTodayModuleContentRequest **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(NTPBTodayModuleContentRequest);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (NTPBTodayModuleContentRequestReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigArticleReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  void *v22;
  void *v23;
  NTPBTodaySectionConfigArticle *v24;
  void *v25;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 2;
        goto LABEL_29;
      case 1u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 3;
        goto LABEL_29;
      case 2u:
        v22 = (void *)PBReaderReadString();

        v18 = v22;
        v19 = 5;
        goto LABEL_29;
      case 3u:
        v23 = (void *)PBReaderReadString();

        v18 = v23;
        v19 = 6;
        goto LABEL_29;
      case 4u:
        v24 = objc_alloc_init(NTPBTodaySectionConfigArticle);

        a1[4] = v24;
        if (PBReaderPlaceMark() && (NTPBTodaySectionConfigArticleReadFrom(v24, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_30:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 5u:
        v25 = (void *)PBReaderReadString();

        v18 = v25;
        v19 = 1;
LABEL_29:
        a1[v19] = v18;
        goto LABEL_30;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_30;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAdExposureIneligibleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_46:
          v36 = 8;
          goto LABEL_55;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_50:
          v36 = 28;
          goto LABEL_55;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v29;

          continue;
        case 4u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          break;
        v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
        *(_QWORD *)(a2 + v33) = v34 + 1;
        v19 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0)
          goto LABEL_52;
        v31 += 7;
        v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_54:
      v36 = 24;
LABEL_55:
      *(_DWORD *)(a1 + v36) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticleWidgetViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  NTPBWidgetEngagement *v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  void *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x400u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_176;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_178;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_176:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_178:
        v108 = 216;
        goto LABEL_211;
      case 2u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 208;
        goto LABEL_164;
      case 3u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 40;
        goto LABEL_164;
      case 4u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 264;
        goto LABEL_164;
      case 5u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 48;
        goto LABEL_164;
      case 6u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 64;
        goto LABEL_164;
      case 7u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 280;
        goto LABEL_164;
      case 9u:
        v26 = 0;
        v27 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x100u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_182:
        v108 = 120;
        goto LABEL_211;
      case 0xAu:
        v31 = 0;
        v32 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x200u;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_186:
        v108 = 136;
        goto LABEL_211;
      case 0xBu:
        v36 = 0;
        v37 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x80u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v19 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              v14 = v37++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_190:
        v108 = 88;
        goto LABEL_211;
      case 0xCu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 80;
        goto LABEL_164;
      case 0xDu:
        v41 = 0;
        v42 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x40u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              v14 = v42++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_194:
        v108 = 76;
        goto LABEL_211;
      case 0xEu:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 96;
        goto LABEL_164;
      case 0xFu:
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 324) |= 0x8000u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v14 = v47++ >= 9;
              if (v14)
              {
                v48 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v48 = 0;
LABEL_198:
        v109 = v48 != 0;
        v110 = 323;
        goto LABEL_228;
      case 0x12u:
        v52 = 0;
        v53 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x10u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v19 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v14 = v53++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_202:
        v108 = 56;
        goto LABEL_211;
      case 0x13u:
        PBReaderReadString();
        v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57)
          objc_msgSend((id)a1, "addNamedEntities:", v57);
        goto LABEL_174;
      case 0x14u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x800u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_206:
        v108 = 256;
        goto LABEL_211;
      case 0x15u:
        v63 = 0;
        v64 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 324) |= 0x20u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_210:
        v108 = 72;
LABEL_211:
        *(_DWORD *)(a1 + v108) = v19;
        goto LABEL_242;
      case 0x16u:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        *(_WORD *)(a1 + 324) |= 0x1000u;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v72 + 1;
            v70 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                v70 = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v70 = 0;
LABEL_215:
        v109 = v70 != 0;
        v110 = 320;
        goto LABEL_228;
      case 0x17u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 288;
        goto LABEL_164;
      case 0x18u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 296;
        goto LABEL_164;
      case 0x19u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 304;
        goto LABEL_164;
      case 0x1Au:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 272;
        goto LABEL_164;
      case 0x1Bu:
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_WORD *)(a1 + 324) |= 0x2000u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v76 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v14 = v75++ >= 9;
              if (v14)
              {
                v76 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v76 = 0;
LABEL_219:
        v109 = v76 != 0;
        v110 = 321;
        goto LABEL_228;
      case 0x1Cu:
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_WORD *)(a1 + 324) |= 2u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_223:
        v111 = 16;
        goto LABEL_241;
      case 0x1Du:
        PBReaderReadString();
        v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57)
          objc_msgSend((id)a1, "addGalleryImageIds:", v57);
        goto LABEL_174;
      case 0x1Eu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 224;
        goto LABEL_164;
      case 0x1Fu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 240;
        goto LABEL_164;
      case 0x20u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 248;
        goto LABEL_164;
      case 0x21u:
        v57 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 312), v57);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_244;
        goto LABEL_173;
      case 0x22u:
        v57 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v57);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v57, a2) & 1) == 0)
        {
          goto LABEL_244;
        }
        goto LABEL_173;
      case 0x23u:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_WORD *)(a1 + 324) |= 0x4000u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v14 = v87++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_227:
        v109 = v88 != 0;
        v110 = 322;
LABEL_228:
        *(_BYTE *)(a1 + v110) = v109;
        goto LABEL_242;
      case 0x24u:
        v92 = 0;
        v93 = 0;
        v82 = 0;
        *(_WORD *)(a1 + 324) |= 8u;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v95 + 1;
            v82 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              v14 = v93++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_232:
        v111 = 32;
        goto LABEL_241;
      case 0x25u:
        v97 = 0;
        v98 = 0;
        v82 = 0;
        *(_WORD *)(a1 + 324) |= 1u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v100 + 1;
            v82 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              v14 = v98++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_236:
        v111 = 8;
        goto LABEL_241;
      case 0x26u:
        v102 = 0;
        v103 = 0;
        v82 = 0;
        *(_WORD *)(a1 + 324) |= 4u;
        while (2)
        {
          v104 = *v3;
          v105 = *(_QWORD *)(a2 + v104);
          if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
            *(_QWORD *)(a2 + v104) = v105 + 1;
            v82 |= (unint64_t)(v106 & 0x7F) << v102;
            if (v106 < 0)
            {
              v102 += 7;
              v14 = v103++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_240:
        v111 = 24;
LABEL_241:
        *(_QWORD *)(a1 + v111) = v82;
        goto LABEL_242;
      case 0x27u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 112;
        goto LABEL_164;
      case 0x28u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 144;
        goto LABEL_164;
      case 0x29u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 160;
        goto LABEL_164;
      case 0x2Au:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 176;
        goto LABEL_164;
      case 0x2Bu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 152;
        goto LABEL_164;
      case 0x2Cu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 168;
LABEL_164:
        v107 = *(void **)(a1 + v24);
        *(_QWORD *)(a1 + v24) = v23;

        goto LABEL_242;
      case 0x2Du:
        v57 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 184), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_244;
        goto LABEL_173;
      case 0x2Eu:
        v57 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 192), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_244;
        goto LABEL_173;
      case 0x2Fu:
        v57 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 200), v57);
        if (PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v57, a2) & 1) != 0)
        {
LABEL_173:
          PBReaderRecallMark();
LABEL_174:

LABEL_242:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_244:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_242;
    }
  }
}

BOOL NTPBTelemetryStatsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
              goto LABEL_69;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              v19 = 0;
              v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
              goto LABEL_72;
            }
          }
          v24 = &OBJC_IVAR___NTPBTelemetryStats__count;
          goto LABEL_70;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
              goto LABEL_69;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___NTPBTelemetryStats__min;
          goto LABEL_70;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
              goto LABEL_69;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___NTPBTelemetryStats__max;
          goto LABEL_70;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
              goto LABEL_69;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___NTPBTelemetryStats__mean;
          goto LABEL_70;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
              goto LABEL_69;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                v19 = 0;
                v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
                goto LABEL_72;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___NTPBTelemetryStats__median;
          goto LABEL_70;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 0x20u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v47 = *v3;
        v48 = *(_QWORD *)(a2 + v47);
        if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
          break;
        v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
        *(_QWORD *)(a2 + v47) = v48 + 1;
        v19 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
          goto LABEL_70;
        }
        v45 += 7;
        v23 = v46++ > 8;
        if (v23)
        {
          v19 = 0;
          v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
          goto LABEL_72;
        }
      }
      v24 = &OBJC_IVAR___NTPBTelemetryStats__percentile95;
LABEL_69:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_70:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_72:
      *(_QWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedEngagementMenuExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_40;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_42:
          v32 = 28;
          goto LABEL_47;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
          goto LABEL_31;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 8;
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
LABEL_31:
          v26 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 5u:
          v27 = 0;
          v28 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v19 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_46:
      v32 = 24;
LABEL_47:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPDFPageViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  NTPBIssueData *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  void *v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    v16 = v10 & 7;
    if (v15 || v16 == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 56), v18);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v18, a2) & 1) != 0)
          goto LABEL_98;
        goto LABEL_169;
      case 2u:
        v18 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 64), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_169;
        goto LABEL_98;
      case 3u:
        v18 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 72), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_169;
        goto LABEL_98;
      case 4u:
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
            while (1)
            {
              v23 = *v3;
              v24 = *(_QWORD *)(a2 + v23);
              if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
                break;
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_42;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_42:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v82 = 0;
          v83 = 0;
          v84 = 0;
          while (1)
          {
            v85 = *v3;
            v86 = *(_QWORD *)(a2 + v85);
            if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
              break;
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v84 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              v14 = v83++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_166;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_166:
          PBRepeatedInt32Add();
        }
        goto LABEL_155;
      case 5u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_WORD *)(a1 + 156) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_120:
        v79 = 96;
        goto LABEL_154;
      case 6u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_WORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                v34 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_124:
        v80 = v34 != 0;
        v81 = 153;
        goto LABEL_145;
      case 7u:
        v38 = 0;
        v39 = 0;
        v28 = 0;
        *(_WORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v28 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_128:
        v79 = 120;
        goto LABEL_154;
      case 8u:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 112;
        goto LABEL_116;
      case 9u:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 144;
        goto LABEL_116;
      case 0xAu:
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v14 = v46++ >= 9;
              if (v14)
              {
                v47 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v47 = 0;
LABEL_132:
        v80 = v47 != 0;
        v81 = 152;
        goto LABEL_145;
      case 0xBu:
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_WORD *)(a1 + 156) |= 0x80u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v53 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v14 = v52++ >= 9;
              if (v14)
              {
                v53 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v53 = 0;
LABEL_136:
        v80 = v53 != 0;
        v81 = 154;
        goto LABEL_145;
      case 0xCu:
        v57 = 0;
        v58 = 0;
        v28 = 0;
        *(_WORD *)(a1 + 156) |= 1u;
        while (2)
        {
          v59 = *v3;
          v60 = *(_QWORD *)(a2 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
            *(_QWORD *)(a2 + v59) = v60 + 1;
            v28 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v14 = v58++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_140:
        v79 = 48;
        goto LABEL_154;
      case 0xDu:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 32;
        goto LABEL_116;
      case 0xEu:
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 156) |= 0x100u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v14 = v63++ >= 9;
              if (v14)
              {
                v64 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v64 = 0;
LABEL_144:
        v80 = v64 != 0;
        v81 = 155;
LABEL_145:
        *(_BYTE *)(a1 + v81) = v80;
        goto LABEL_155;
      case 0xFu:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 88;
        goto LABEL_116;
      case 0x10u:
        v18 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 40), v18);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_98:
          PBReaderRecallMark();

LABEL_155:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_169:

        return 0;
      case 0x11u:
        v68 = 0;
        v69 = 0;
        v28 = 0;
        *(_WORD *)(a1 + 156) |= 4u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v28 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_149:
        v79 = 100;
        goto LABEL_154;
      case 0x12u:
        v73 = 0;
        v74 = 0;
        v28 = 0;
        *(_WORD *)(a1 + 156) |= 8u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v28 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              v14 = v74++ >= 9;
              if (v14)
              {
                LODWORD(v28) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_153:
        v79 = 104;
LABEL_154:
        *(_DWORD *)(a1 + v79) = v28;
        goto LABEL_155;
      case 0x13u:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 80;
        goto LABEL_116;
      case 0x14u:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 128;
        goto LABEL_116;
      case 0x15u:
        PBReaderReadString();
        v43 = objc_claimAutoreleasedReturnValue();
        v44 = 136;
LABEL_116:
        v78 = *(void **)(a1 + v44);
        *(_QWORD *)(a1 + v44) = v43;

        goto LABEL_155;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_155;
    }
  }
}

uint64_t NTPBIAdConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 44) |= 0x10u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_53;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_55:
          *(_BYTE *)(a1 + 40) = v20 != 0;
          continue;
        case 2u:
          *(_BYTE *)(a1 + 44) |= 8u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          *(_QWORD *)(a1 + 32) = v28;
          continue;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 44) |= 4u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            v34 = v33 + 1;
            if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                v15 = v30++ >= 9;
                if (v15)
                {
                  v31 = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_59:
          v48 = 24;
          goto LABEL_68;
        case 4u:
          v36 = 0;
          v37 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v31 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v15 = v37++ >= 9;
                if (v15)
                {
                  v31 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_63:
          v48 = 8;
          goto LABEL_68;
        case 5u:
          v42 = 0;
          v43 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        v46 = v45 + 1;
        if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          break;
        v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v46;
        v31 |= (unint64_t)(v47 & 0x7F) << v42;
        if ((v47 & 0x80) == 0)
          goto LABEL_65;
        v42 += 7;
        v15 = v43++ >= 9;
        if (v15)
        {
          v31 = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        v31 = 0;
LABEL_67:
      v48 = 16;
LABEL_68:
      *(_QWORD *)(a1 + v48) = v31;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t result;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  NTPBWidgetEngagement *v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  void *v128;
  uint64_t v129;
  BOOL v130;
  uint64_t v131;
  uint64_t v132;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x1000u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_201;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_203;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_201:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_203:
        v129 = 204;
        goto LABEL_264;
      case 2u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 192;
        goto LABEL_189;
      case 3u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 40;
        goto LABEL_189;
      case 4u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 248;
        goto LABEL_189;
      case 5u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 48;
        goto LABEL_189;
      case 6u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 64;
        goto LABEL_189;
      case 7u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 264;
        goto LABEL_189;
      case 8u:
        v25 = 0;
        v26 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x400u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_207:
        v129 = 128;
        goto LABEL_264;
      case 9u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x200u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_211:
        v129 = 96;
        goto LABEL_264;
      case 0xAu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 88;
        goto LABEL_189;
      case 0xBu:
        v35 = 0;
        v36 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x100u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_215:
        v129 = 84;
        goto LABEL_264;
      case 0xCu:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 104;
        goto LABEL_189;
      case 0xDu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_DWORD *)(a1 + 320) |= 0x40000u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              v14 = v41++ >= 9;
              if (v14)
              {
                v42 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v42 = 0;
LABEL_219:
        v130 = v42 != 0;
        v131 = 315;
        goto LABEL_269;
      case 0x10u:
        v47 = 0;
        v48 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v19 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v14 = v48++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_223:
        v129 = 56;
        goto LABEL_264;
      case 0x11u:
        PBReaderReadString();
        v52 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v52)
          objc_msgSend((id)a1, "addNamedEntities:", v52);
        goto LABEL_199;
      case 0x12u:
        v53 = 0;
        v54 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x2000u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_227:
        v129 = 240;
        goto LABEL_264;
      case 0x13u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x20u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_231:
        v129 = 72;
        goto LABEL_264;
      case 0x14u:
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_DWORD *)(a1 + 320) |= 0x8000u;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                v65 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v65 = 0;
LABEL_235:
        v130 = v65 != 0;
        v131 = 312;
        goto LABEL_269;
      case 0x15u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 272;
        goto LABEL_189;
      case 0x16u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 280;
        goto LABEL_189;
      case 0x17u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 288;
        goto LABEL_189;
      case 0x18u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 256;
        goto LABEL_189;
      case 0x19u:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 320) |= 0x10000u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v71 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v14 = v70++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_239:
        v130 = v71 != 0;
        v131 = 313;
        goto LABEL_269;
      case 0x1Au:
        v75 = 0;
        v76 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x800u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v19 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_243:
        v129 = 200;
        goto LABEL_264;
      case 0x1Bu:
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_DWORD *)(a1 + 320) |= 0x80000u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_247:
        v130 = v82 != 0;
        v131 = 316;
        goto LABEL_269;
      case 0x1Cu:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 320) |= 2u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v14 = v87++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_251;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_251:
        v132 = 16;
        goto LABEL_282;
      case 0x1Du:
        v92 = 0;
        v93 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x40u;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v95 + 1;
            v19 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              v14 = v93++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_255;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_255:
        v129 = 76;
        goto LABEL_264;
      case 0x1Eu:
        v97 = 0;
        v98 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x80u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v100 + 1;
            v19 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              v14 = v98++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_259;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_259:
        v129 = 80;
        goto LABEL_264;
      case 0x1Fu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 208;
        goto LABEL_189;
      case 0x20u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 224;
        goto LABEL_189;
      case 0x21u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 232;
        goto LABEL_189;
      case 0x22u:
        v52 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 304), v52);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v52, a2) & 1) == 0)
          goto LABEL_285;
        goto LABEL_198;
      case 0x23u:
        v52 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v52);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v52, a2) & 1) == 0)
        {
          goto LABEL_285;
        }
        goto LABEL_198;
      case 0x24u:
        v102 = 0;
        v103 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 320) |= 0x4000u;
        while (2)
        {
          v104 = *v3;
          v105 = *(_QWORD *)(a2 + v104);
          if (v105 == -1 || v105 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
            *(_QWORD *)(a2 + v104) = v105 + 1;
            v19 |= (unint64_t)(v106 & 0x7F) << v102;
            if (v106 < 0)
            {
              v102 += 7;
              v14 = v103++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_263;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_263:
        v129 = 296;
LABEL_264:
        *(_DWORD *)(a1 + v129) = v19;
        goto LABEL_283;
      case 0x25u:
        v107 = 0;
        v108 = 0;
        v109 = 0;
        *(_DWORD *)(a1 + 320) |= 0x20000u;
        while (2)
        {
          v110 = *v3;
          v111 = *(_QWORD *)(a2 + v110);
          if (v111 == -1 || v111 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v111);
            *(_QWORD *)(a2 + v110) = v111 + 1;
            v109 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              v14 = v108++ >= 9;
              if (v14)
              {
                v109 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v109 = 0;
LABEL_268:
        v130 = v109 != 0;
        v131 = 314;
LABEL_269:
        *(_BYTE *)(a1 + v131) = v130;
        goto LABEL_283;
      case 0x26u:
        v113 = 0;
        v114 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 320) |= 8u;
        while (2)
        {
          v115 = *v3;
          v116 = *(_QWORD *)(a2 + v115);
          if (v116 == -1 || v116 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v116);
            *(_QWORD *)(a2 + v115) = v116 + 1;
            v88 |= (unint64_t)(v117 & 0x7F) << v113;
            if (v117 < 0)
            {
              v113 += 7;
              v14 = v114++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_273:
        v132 = 32;
        goto LABEL_282;
      case 0x27u:
        v118 = 0;
        v119 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 320) |= 1u;
        while (2)
        {
          v120 = *v3;
          v121 = *(_QWORD *)(a2 + v120);
          if (v121 == -1 || v121 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
            *(_QWORD *)(a2 + v120) = v121 + 1;
            v88 |= (unint64_t)(v122 & 0x7F) << v118;
            if (v122 < 0)
            {
              v118 += 7;
              v14 = v119++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_277:
        v132 = 8;
        goto LABEL_282;
      case 0x28u:
        v123 = 0;
        v124 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 320) |= 4u;
        while (2)
        {
          v125 = *v3;
          v126 = *(_QWORD *)(a2 + v125);
          if (v126 == -1 || v126 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
            *(_QWORD *)(a2 + v125) = v126 + 1;
            v88 |= (unint64_t)(v127 & 0x7F) << v123;
            if (v127 < 0)
            {
              v123 += 7;
              v14 = v124++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_281:
        v132 = 24;
LABEL_282:
        *(_QWORD *)(a1 + v132) = v88;
        goto LABEL_283;
      case 0x29u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 120;
        goto LABEL_189;
      case 0x2Au:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 144;
        goto LABEL_189;
      case 0x2Bu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 160;
        goto LABEL_189;
      case 0x2Cu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 136;
        goto LABEL_189;
      case 0x2Du:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 152;
LABEL_189:
        v128 = *(void **)(a1 + v24);
        *(_QWORD *)(a1 + v24) = v23;

        goto LABEL_283;
      case 0x2Eu:
        v52 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 168), v52);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v52, a2) & 1) == 0)
          goto LABEL_285;
        goto LABEL_198;
      case 0x2Fu:
        v52 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 176), v52);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v52, a2) & 1) == 0)
          goto LABEL_285;
        goto LABEL_198;
      case 0x30u:
        v52 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 184), v52);
        if (PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v52, a2) & 1) != 0)
        {
LABEL_198:
          PBReaderRecallMark();
LABEL_199:

LABEL_283:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_285:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_283;
    }
  }
}

uint64_t NTPBLocationRecommendationMappingsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBLocationRecommendationMapping *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBLocationRecommendationMapping);
        objc_msgSend(a1, "addLocationMappings:", v17);
        if (!PBReaderPlaceMark() || (NTPBLocationRecommendationMappingReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBViewArticleRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 16;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCohortMembershipReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *String;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        *(_BYTE *)(a1 + 24) |= 1u;
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        *(_QWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayConfigReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBTodayQueueConfig *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (a2[*v5])
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&a2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
        *(_QWORD *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      v15 = a2[*v5];
      if (a2[*v5])
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 0u:
          v17 = objc_alloc_init(NTPBTodayQueueConfig);
          objc_msgSend((id)a1, "addTodayQueueConfigs:", v17);

          if (PBReaderPlaceMark() && (NTPBTodayQueueConfigReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          String = (void *)PBReaderReadString();

          v20 = String;
          v21 = 40;
          goto LABEL_28;
        case 3u:
          v22 = (void *)PBReaderReadString();

          v20 = v22;
          v21 = 32;
          goto LABEL_28;
        case 4u:
          v23 = (void *)PBReaderReadString();

          v20 = v23;
          v21 = 56;
          goto LABEL_28;
        case 5u:
          v24 = (void *)PBReaderReadString();

          v20 = v24;
          v21 = 24;
LABEL_28:
          *(_QWORD *)(a1 + v21) = v20;
          continue;
        case 6u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)&a2[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a2[*v4])
            {
              a2[*v5] = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v29);
              *(_QWORD *)&a2[v28] = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v27 = 0;
                  goto LABEL_46;
                }
                continue;
              }
            }
            break;
          }
          if (a2[*v5])
            v27 = 0;
LABEL_46:
          v36 = 8;
          goto LABEL_51;
        case 7u:
          v31 = 0;
          v32 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)&a2[v33];
        if (v34 == -1 || v34 >= *(_QWORD *)&a2[*v4])
          break;
        v35 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v34);
        *(_QWORD *)&a2[v33] = v34 + 1;
        v27 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0)
          goto LABEL_48;
        v31 += 7;
        v14 = v32++ >= 9;
        if (v14)
        {
          v27 = 0;
          goto LABEL_50;
        }
      }
      a2[*v5] = 1;
LABEL_48:
      if (a2[*v5])
        v27 = 0;
LABEL_50:
      v36 = 16;
LABEL_51:
      *(_QWORD *)(a1 + v36) = v27;
    }
    while (*(_QWORD *)&a2[*v3] < *(_QWORD *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

BOOL NTPBViewArticleResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBNetworkEventGroupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int *v17;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if (!(v10 >> 3))
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = &OBJC_IVAR___NTPBNetworkEventGroup__respondingInstance;
LABEL_22:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v17) = String;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = &OBJC_IVAR___NTPBNetworkEventGroup__via;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueDownloadReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBIssueData *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t result;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(NTPBIssueData);
          objc_storeStrong((id *)(a1 + 24), v17);
          if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_47;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_49;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_49:
          v37 = 8;
          goto LABEL_58;
        case 3u:
          v24 = 0;
          v25 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v20 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v20) = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_53:
          v37 = 12;
          goto LABEL_58;
        case 4u:
          v29 = 0;
          v30 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          break;
        case 6u:
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v35;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v31 = *v3;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          break;
        v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
        *(_QWORD *)(a2 + v31) = v32 + 1;
        v20 |= (unint64_t)(v33 & 0x7F) << v29;
        if ((v33 & 0x80) == 0)
          goto LABEL_55;
        v29 += 7;
        v14 = v30++ >= 9;
        if (v14)
        {
          LODWORD(v20) = 0;
          goto LABEL_57;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v20) = 0;
LABEL_57:
      v37 = 16;
LABEL_58:
      *(_DWORD *)(a1 + v37) = v20;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBComscoreEventSendReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_41;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_43;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_43:
          v32 = 8;
          goto LABEL_48;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          break;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 24;
          goto LABEL_39;
        case 4u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
          goto LABEL_39;
        case 5u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 16;
          goto LABEL_39;
        case 6u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 48;
LABEL_39:
          v31 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v26 = *v3;
        v27 = *(_QWORD *)(a2 + v26);
        if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          break;
        v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
        *(_QWORD *)(a2 + v26) = v27 + 1;
        v19 |= (unint64_t)(v28 & 0x7F) << v24;
        if ((v28 & 0x80) == 0)
          goto LABEL_45;
        v24 += 7;
        v14 = v25++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_47;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_47:
      v32 = 40;
LABEL_48:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaEngageCompleteReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t result;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  NTPBWidgetEngagement *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  void *v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x1000u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_222;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_224;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_222:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_224:
        v140 = 228;
        goto LABEL_311;
      case 2u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 216;
        goto LABEL_198;
      case 3u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 64;
        goto LABEL_198;
      case 4u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 280;
        goto LABEL_198;
      case 5u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 72;
        goto LABEL_198;
      case 6u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 88;
        goto LABEL_198;
      case 7u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 296;
        goto LABEL_198;
      case 8u:
        v25 = 0;
        v26 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x200u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_228;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_228:
        v140 = 112;
        goto LABEL_311;
      case 9u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 104;
        goto LABEL_198;
      case 0xAu:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x100u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_232:
        v140 = 100;
        goto LABEL_311;
      case 0xBu:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 120;
        goto LABEL_198;
      case 0xCu:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_DWORD *)(a1 + 360) |= 0x100000u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                v37 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_236:
        v141 = v37 != 0;
        v142 = 356;
        goto LABEL_289;
      case 0xFu:
        v42 = 0;
        v43 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x40u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_240:
        v140 = 80;
        goto LABEL_311;
      case 0x10u:
        PBReaderReadString();
        v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47)
          objc_msgSend((id)a1, "addNamedEntities:", v47);
        goto LABEL_218;
      case 0x11u:
        v48 = 0;
        v49 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x2000u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_244;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_244:
        v140 = 272;
        goto LABEL_311;
      case 0x12u:
        v53 = 0;
        v54 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x80u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_248:
        v140 = 96;
        goto LABEL_311;
      case 0x13u:
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_DWORD *)(a1 + 360) |= 0x10000u;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
            *(_QWORD *)(a2 + v61) = v62 + 1;
            v60 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                v60 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v60 = 0;
LABEL_252:
        v141 = v60 != 0;
        v142 = 352;
        goto LABEL_289;
      case 0x14u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 304;
        goto LABEL_198;
      case 0x15u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 312;
        goto LABEL_198;
      case 0x16u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 320;
        goto LABEL_198;
      case 0x17u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 288;
        goto LABEL_198;
      case 0x18u:
        v64 = 0;
        v65 = 0;
        v66 = 0;
        *(_DWORD *)(a1 + 360) |= 0x40000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v66 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v14 = v65++ >= 9;
              if (v14)
              {
                v66 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v66 = 0;
LABEL_256:
        v141 = v66 != 0;
        v142 = 354;
        goto LABEL_289;
      case 0x19u:
        v70 = 0;
        v71 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 8u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v72 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_260:
        v143 = 32;
        goto LABEL_306;
      case 0x1Au:
        v76 = 0;
        v77 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x800u;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v19 |= (unint64_t)(v80 & 0x7F) << v76;
            if (v80 < 0)
            {
              v76 += 7;
              v14 = v77++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_264:
        v140 = 224;
        goto LABEL_311;
      case 0x1Bu:
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_DWORD *)(a1 + 360) |= 0x200000u;
        while (2)
        {
          v84 = *v3;
          v85 = *(_QWORD *)(a2 + v84);
          if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
            *(_QWORD *)(a2 + v84) = v85 + 1;
            v83 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v83 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v83 = 0;
LABEL_268:
        v141 = v83 != 0;
        v142 = 357;
        goto LABEL_289;
      case 0x1Cu:
        v87 = 0;
        v88 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 2u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v90 + 1;
            v72 |= (unint64_t)(v91 & 0x7F) << v87;
            if (v91 < 0)
            {
              v87 += 7;
              v14 = v88++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_272:
        v143 = 16;
        goto LABEL_306;
      case 0x1Du:
        v92 = 0;
        v93 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 4u;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v95 + 1;
            v72 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              v14 = v93++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_276:
        v143 = 24;
        goto LABEL_306;
      case 0x1Eu:
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_DWORD *)(a1 + 360) |= 0x80000u;
        while (2)
        {
          v100 = *v3;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v99 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              v14 = v98++ >= 9;
              if (v14)
              {
                v99 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v99 = 0;
LABEL_280:
        v141 = v99 != 0;
        v142 = 355;
        goto LABEL_289;
      case 0x1Fu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 248;
        goto LABEL_198;
      case 0x20u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 232;
        goto LABEL_198;
      case 0x21u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 256;
        goto LABEL_198;
      case 0x22u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 264;
        goto LABEL_198;
      case 0x23u:
        v47 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 344), v47);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_314;
        goto LABEL_217;
      case 0x24u:
        v103 = 0;
        v104 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x400u;
        while (2)
        {
          v105 = *v3;
          v106 = *(_QWORD *)(a2 + v105);
          if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v19 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v103 += 7;
              v14 = v104++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_284:
        v140 = 144;
        goto LABEL_311;
      case 0x25u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 136;
        goto LABEL_198;
      case 0x27u:
        v108 = 0;
        v109 = 0;
        v110 = 0;
        *(_DWORD *)(a1 + 360) |= 0x20000u;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v112 + 1;
            v110 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v14 = v109++ >= 9;
              if (v14)
              {
                v110 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v110 = 0;
LABEL_288:
        v141 = v110 != 0;
        v142 = 353;
LABEL_289:
        *(_BYTE *)(a1 + v142) = v141;
        goto LABEL_312;
      case 0x28u:
        v47 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v47);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v47, a2) & 1) == 0)
        {
          goto LABEL_314;
        }
        goto LABEL_217;
      case 0x29u:
        v114 = 0;
        v115 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x8000u;
        while (2)
        {
          v116 = *v3;
          v117 = *(_QWORD *)(a2 + v116);
          if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
            *(_QWORD *)(a2 + v116) = v117 + 1;
            v19 |= (unint64_t)(v118 & 0x7F) << v114;
            if (v118 < 0)
            {
              v114 += 7;
              v14 = v115++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_293:
        v140 = 336;
        goto LABEL_311;
      case 0x2Au:
        v119 = 0;
        v120 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 0x20u;
        while (2)
        {
          v121 = *v3;
          v122 = *(_QWORD *)(a2 + v121);
          if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v122);
            *(_QWORD *)(a2 + v121) = v122 + 1;
            v72 |= (unint64_t)(v123 & 0x7F) << v119;
            if (v123 < 0)
            {
              v119 += 7;
              v14 = v120++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_297:
        v143 = 48;
        goto LABEL_306;
      case 0x2Bu:
        v124 = 0;
        v125 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 1u;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v127 + 1;
            v72 |= (unint64_t)(v128 & 0x7F) << v124;
            if (v128 < 0)
            {
              v124 += 7;
              v14 = v125++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_301:
        v143 = 8;
        goto LABEL_306;
      case 0x2Cu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 168;
        goto LABEL_198;
      case 0x2Du:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 184;
        goto LABEL_198;
      case 0x2Eu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 160;
        goto LABEL_198;
      case 0x2Fu:
        v129 = 0;
        v130 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 360) |= 0x10u;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v132 + 1;
            v72 |= (unint64_t)(v133 & 0x7F) << v129;
            if (v133 < 0)
            {
              v129 += 7;
              v14 = v130++ >= 9;
              if (v14)
              {
                v72 = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_305:
        v143 = 40;
LABEL_306:
        *(_QWORD *)(a1 + v143) = v72;
        goto LABEL_312;
      case 0x30u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 176;
        goto LABEL_198;
      case 0x31u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 152;
LABEL_198:
        v134 = *(void **)(a1 + v24);
        *(_QWORD *)(a1 + v24) = v23;

        goto LABEL_312;
      case 0x32u:
        v47 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 56), v47);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v47, a2))
          goto LABEL_314;
        goto LABEL_217;
      case 0x33u:
        v135 = 0;
        v136 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 360) |= 0x4000u;
        while (2)
        {
          v137 = *v3;
          v138 = *(_QWORD *)(a2 + v137);
          if (v138 == -1 || v138 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
            *(_QWORD *)(a2 + v137) = v138 + 1;
            v19 |= (unint64_t)(v139 & 0x7F) << v135;
            if (v139 < 0)
            {
              v135 += 7;
              v14 = v136++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_310:
        v140 = 276;
LABEL_311:
        *(_DWORD *)(a1 + v140) = v19;
        goto LABEL_312;
      case 0x34u:
        v47 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 192), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_314;
        goto LABEL_217;
      case 0x35u:
        v47 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 200), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_314;
        goto LABEL_217;
      case 0x36u:
        v47 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 208), v47);
        if (PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v47, a2) & 1) != 0)
        {
LABEL_217:
          PBReaderRecallMark();
LABEL_218:

LABEL_312:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_314:

        return 0;
      case 0x37u:
        PBReaderReadString();
        v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47)
          objc_msgSend((id)a1, "addTopicIds:", v47);
        goto LABEL_218;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_312;
    }
  }
}

BOOL NTPBTrendingConfigReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  NTPBTrendingLanguageConfig *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (NTPBTrendingLanguageConfig *)a1[1];
        a1[1] = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(NTPBTrendingLanguageConfig);
    objc_msgSend(a1, "addLanguageConfigs:", v18);
    if (!PBReaderPlaceMark() || !NTPBTrendingLanguageConfigReadFrom(v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayQueueConfigReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBTodaySectionConfig *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (a2[*v5])
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&a2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
        *(_QWORD *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      v15 = a2[*v5];
      if (a2[*v5])
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)&a2[v21];
          if (v22 == -1 || v22 >= *(_QWORD *)&a2[*v4])
            break;
          v23 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v22);
          *(_QWORD *)&a2[v21] = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_35;
          }
        }
        a2[*v5] = 1;
LABEL_33:
        if (a2[*v5])
          v20 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v17 = objc_alloc_init(NTPBTodaySectionConfig);
        objc_msgSend((id)a1, "addTodaySectionConfigs:", v17);

        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)&a2[*v3] < *(_QWORD *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

uint64_t NTPBTocReorderReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_37;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_48;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_48:
          v37 = 36;
          goto LABEL_57;
        case 3u:
          v26 = 0;
          v27 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_52:
          v37 = 32;
          goto LABEL_57;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_37:
          v31 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 5u:
          v32 = 0;
          v33 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v34 = *v3;
        v35 = *(_QWORD *)(a2 + v34);
        if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          break;
        v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
        *(_QWORD *)(a2 + v34) = v35 + 1;
        v22 |= (unint64_t)(v36 & 0x7F) << v32;
        if ((v36 & 0x80) == 0)
          goto LABEL_54;
        v32 += 7;
        v14 = v33++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_56:
      v37 = 16;
LABEL_57:
      *(_DWORD *)(a1 + v37) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagListRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBRecordBase *v17;
  uint64_t String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        String = PBReaderReadString();
        if (String)
          objc_msgSend(a1, "addTagIDs:", String);
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBRecordBase);

        a1[1] = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueListRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBRecordBase *v17;
  uint64_t String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        String = PBReaderReadString();
        if (String)
          objc_msgSend(a1, "addIssueIDs:", String);
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBRecordBase);

        a1[1] = v17;
        if (!PBReaderPlaceMark() || (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigWebEmbedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBMediaEngageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t result;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  NTPBWidgetEngagement *v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  char v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  uint64_t v223;
  unint64_t v224;
  int v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  char v231;
  void *v232;
  char v233;
  unsigned int v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  BOOL v241;
  uint64_t v242;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x100000uLL;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          v23 = v22 + 1;
          if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0)
            goto LABEL_309;
          v18 += 7;
          v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_311;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_309:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_311:
        v239 = 276;
        goto LABEL_446;
      case 2u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 248;
        goto LABEL_285;
      case 3u:
        v27 = 0;
        v28 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 0x20uLL;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_315;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_315:
        v240 = 48;
        goto LABEL_441;
      case 4u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 88;
        goto LABEL_285;
      case 5u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 344;
        goto LABEL_285;
      case 6u:
        PBReaderReadData();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 96;
        goto LABEL_285;
      case 7u:
        PBReaderReadData();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 112;
        goto LABEL_285;
      case 8u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 360;
        goto LABEL_285;
      case 9u:
        v34 = 0;
        v35 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x40000uLL;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v38;
            v20 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              v15 = v35++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_319:
        v239 = 268;
        goto LABEL_446;
      case 0xAu:
        v40 = 0;
        v41 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x10000uLL;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v44;
            v20 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_323:
        v239 = 260;
        goto LABEL_446;
      case 0xBu:
        v46 = 0;
        v47 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 4uLL;
        while (2)
        {
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v50;
            v29 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v15 = v47++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_327;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_327:
        v240 = 24;
        goto LABEL_441;
      case 0xCu:
        v52 = 0;
        v53 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 0x10uLL;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v56;
            v29 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v15 = v53++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_331;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_331:
        v240 = 40;
        goto LABEL_441;
      case 0xDu:
        v58 = 0;
        v59 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x80000uLL;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v62;
            v20 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v15 = v59++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_335;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_335:
        v239 = 272;
        goto LABEL_446;
      case 0xEu:
        v64 = 0;
        v65 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 8uLL;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v68;
            v29 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v15 = v65++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_339;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_339:
        v240 = 32;
        goto LABEL_441;
      case 0xFu:
        v70 = 0;
        v71 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x20000uLL;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v74;
            v20 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v15 = v71++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_343;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_343:
        v239 = 264;
        goto LABEL_446;
      case 0x10u:
        v76 = 0;
        v77 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x1000uLL;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v80;
            v20 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v15 = v77++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_347;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_347:
        v239 = 136;
        goto LABEL_446;
      case 0x11u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 128;
        goto LABEL_285;
      case 0x12u:
        v82 = 0;
        v83 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x800uLL;
        while (2)
        {
          v84 = *v3;
          v85 = *(_QWORD *)(a2 + v84);
          v86 = v85 + 1;
          if (v85 == -1 || v86 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
            *(_QWORD *)(a2 + v84) = v86;
            v20 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              v15 = v83++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_351:
        v239 = 124;
        goto LABEL_446;
      case 0x13u:
        PBReaderReadData();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 144;
        goto LABEL_285;
      case 0x14u:
        v88 = 0;
        v89 = 0;
        v90 = 0;
        *(_QWORD *)(a1 + 432) |= 0x200000000uLL;
        while (2)
        {
          v91 = *v3;
          v92 = *(_QWORD *)(a2 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
            *(_QWORD *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              v15 = v89++ >= 9;
              if (v15)
              {
                v90 = 0;
                goto LABEL_355;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v90 = 0;
LABEL_355:
        v241 = v90 != 0;
        v242 = 429;
        goto LABEL_416;
      case 0x17u:
        v96 = 0;
        v97 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x200uLL;
        while (2)
        {
          v98 = *v3;
          v99 = *(_QWORD *)(a2 + v98);
          v100 = v99 + 1;
          if (v99 == -1 || v100 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v100;
            v20 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              v15 = v97++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_359:
        v239 = 104;
        goto LABEL_446;
      case 0x18u:
        PBReaderReadString();
        v102 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v102)
          objc_msgSend((id)a1, "addNamedEntities:", v102);
        goto LABEL_305;
      case 0x19u:
        v103 = 0;
        v104 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x800000uLL;
        while (2)
        {
          v105 = *v3;
          v106 = *(_QWORD *)(a2 + v105);
          v107 = v106 + 1;
          if (v106 == -1 || v107 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
            *(_QWORD *)(a2 + v105) = v107;
            v20 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              v15 = v104++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_363:
        v239 = 336;
        goto LABEL_446;
      case 0x1Au:
        v109 = 0;
        v110 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x400uLL;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          v113 = v112 + 1;
          if (v112 == -1 || v113 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v113;
            v20 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              v15 = v110++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_367:
        v239 = 120;
        goto LABEL_446;
      case 0x1Bu:
        v115 = 0;
        v116 = 0;
        v117 = 0;
        *(_QWORD *)(a1 + 432) |= 0x10000000uLL;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              v15 = v116++ >= 9;
              if (v15)
              {
                v117 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v117 = 0;
LABEL_371:
        v241 = v117 != 0;
        v242 = 424;
        goto LABEL_416;
      case 0x1Cu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 368;
        goto LABEL_285;
      case 0x1Du:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 376;
        goto LABEL_285;
      case 0x1Eu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 384;
        goto LABEL_285;
      case 0x1Fu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 352;
        goto LABEL_285;
      case 0x20u:
        v122 = 0;
        v123 = 0;
        v124 = 0;
        *(_QWORD *)(a1 + 432) |= 0x40000000uLL;
        while (2)
        {
          v125 = *v3;
          v126 = *(_QWORD *)(a2 + v125);
          v127 = v126 + 1;
          if (v126 == -1 || v127 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
            *(_QWORD *)(a2 + v125) = v127;
            v124 |= (unint64_t)(v128 & 0x7F) << v122;
            if (v128 < 0)
            {
              v122 += 7;
              v15 = v123++ >= 9;
              if (v15)
              {
                v124 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v124 = 0;
LABEL_375:
        v241 = v124 != 0;
        v242 = 426;
        goto LABEL_416;
      case 0x21u:
        v129 = 0;
        v130 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x4000000uLL;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          v133 = v132 + 1;
          if (v132 == -1 || v133 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v133;
            v20 |= (unint64_t)(v134 & 0x7F) << v129;
            if (v134 < 0)
            {
              v129 += 7;
              v15 = v130++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_379:
        v239 = 408;
        goto LABEL_446;
      case 0x22u:
        v135 = 0;
        v136 = 0;
        v137 = 0;
        *(_QWORD *)(a1 + 432) |= 0x400000000uLL;
        while (2)
        {
          v138 = *v3;
          v139 = *(_QWORD *)(a2 + v138);
          v140 = v139 + 1;
          if (v139 == -1 || v140 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v139);
            *(_QWORD *)(a2 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              v15 = v136++ >= 9;
              if (v15)
              {
                v137 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v137 = 0;
LABEL_383:
        v241 = v137 != 0;
        v242 = 430;
        goto LABEL_416;
      case 0x23u:
        v142 = 0;
        v143 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 0x40uLL;
        while (2)
        {
          v144 = *v3;
          v145 = *(_QWORD *)(a2 + v144);
          v146 = v145 + 1;
          if (v145 == -1 || v146 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v147 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
            *(_QWORD *)(a2 + v144) = v146;
            v29 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              v15 = v143++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_387;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_387:
        v240 = 56;
        goto LABEL_441;
      case 0x24u:
        v148 = 0;
        v149 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x8000uLL;
        while (2)
        {
          v150 = *v3;
          v151 = *(_QWORD *)(a2 + v150);
          v152 = v151 + 1;
          if (v151 == -1 || v152 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v151);
            *(_QWORD *)(a2 + v150) = v152;
            v20 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              v15 = v149++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_391:
        v239 = 256;
        goto LABEL_446;
      case 0x25u:
        v154 = 0;
        v155 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 2uLL;
        while (2)
        {
          v156 = *v3;
          v157 = *(_QWORD *)(a2 + v156);
          v158 = v157 + 1;
          if (v157 == -1 || v158 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
            *(_QWORD *)(a2 + v156) = v158;
            v29 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              v15 = v155++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_395:
        v240 = 16;
        goto LABEL_441;
      case 0x26u:
        v160 = 0;
        v161 = 0;
        v162 = 0;
        *(_QWORD *)(a1 + 432) |= 0x20000000uLL;
        while (2)
        {
          v163 = *v3;
          v164 = *(_QWORD *)(a2 + v163);
          v165 = v164 + 1;
          if (v164 == -1 || v165 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v166 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v164);
            *(_QWORD *)(a2 + v163) = v165;
            v162 |= (unint64_t)(v166 & 0x7F) << v160;
            if (v166 < 0)
            {
              v160 += 7;
              v15 = v161++ >= 9;
              if (v15)
              {
                v162 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v162 = 0;
LABEL_399:
        v241 = v162 != 0;
        v242 = 425;
        goto LABEL_416;
      case 0x27u:
        v167 = 0;
        v168 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x4000uLL;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          v171 = v170 + 1;
          if (v170 == -1 || v171 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v171;
            v20 |= (unint64_t)(v172 & 0x7F) << v167;
            if (v172 < 0)
            {
              v167 += 7;
              v15 = v168++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_403:
        v239 = 240;
        goto LABEL_446;
      case 0x28u:
        v173 = 0;
        v174 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x2000000uLL;
        while (2)
        {
          v175 = *v3;
          v176 = *(_QWORD *)(a2 + v175);
          v177 = v176 + 1;
          if (v176 == -1 || v177 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v178 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v176);
            *(_QWORD *)(a2 + v175) = v177;
            v20 |= (unint64_t)(v178 & 0x7F) << v173;
            if (v178 < 0)
            {
              v173 += 7;
              v15 = v174++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_407;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_407:
        v239 = 392;
        goto LABEL_446;
      case 0x29u:
        v179 = 0;
        v180 = 0;
        v181 = 0;
        *(_QWORD *)(a1 + 432) |= 0x100000000uLL;
        while (2)
        {
          v182 = *v3;
          v183 = *(_QWORD *)(a2 + v182);
          v184 = v183 + 1;
          if (v183 == -1 || v184 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
            *(_QWORD *)(a2 + v182) = v184;
            v181 |= (unint64_t)(v185 & 0x7F) << v179;
            if (v185 < 0)
            {
              v179 += 7;
              v15 = v180++ >= 9;
              if (v15)
              {
                v181 = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v181 = 0;
LABEL_411:
        v241 = v181 != 0;
        v242 = 428;
        goto LABEL_416;
      case 0x2Au:
        v186 = 0;
        v187 = 0;
        v188 = 0;
        *(_QWORD *)(a1 + 432) |= 0x80000000uLL;
        while (2)
        {
          v189 = *v3;
          v190 = *(_QWORD *)(a2 + v189);
          v191 = v190 + 1;
          if (v190 == -1 || v191 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
            *(_QWORD *)(a2 + v189) = v191;
            v188 |= (unint64_t)(v192 & 0x7F) << v186;
            if (v192 < 0)
            {
              v186 += 7;
              v15 = v187++ >= 9;
              if (v15)
              {
                v188 = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v188 = 0;
LABEL_415:
        v241 = v188 != 0;
        v242 = 427;
LABEL_416:
        *(_BYTE *)(a1 + v242) = v241;
        goto LABEL_447;
      case 0x2Bu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 304;
        goto LABEL_285;
      case 0x2Cu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 280;
        goto LABEL_285;
      case 0x2Du:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 320;
        goto LABEL_285;
      case 0x2Eu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 328;
        goto LABEL_285;
      case 0x2Fu:
        v102 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 416), v102);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v102, a2) & 1) == 0)
          goto LABEL_452;
        goto LABEL_304;
      case 0x30u:
        v193 = 0;
        v194 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x2000uLL;
        while (2)
        {
          v195 = *v3;
          v196 = *(_QWORD *)(a2 + v195);
          v197 = v196 + 1;
          if (v196 == -1 || v197 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
            *(_QWORD *)(a2 + v195) = v197;
            v20 |= (unint64_t)(v198 & 0x7F) << v193;
            if (v198 < 0)
            {
              v193 += 7;
              v15 = v194++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_420;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_420:
        v239 = 168;
        goto LABEL_446;
      case 0x31u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 160;
        goto LABEL_285;
      case 0x32u:
        v102 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v102);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v102, a2) & 1) == 0)
        {
          goto LABEL_452;
        }
        goto LABEL_304;
      case 0x33u:
        v199 = 0;
        v200 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x8000000uLL;
        while (2)
        {
          v201 = *v3;
          v202 = *(_QWORD *)(a2 + v201);
          v203 = v202 + 1;
          if (v202 == -1 || v203 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v202);
            *(_QWORD *)(a2 + v201) = v203;
            v20 |= (unint64_t)(v204 & 0x7F) << v199;
            if (v204 < 0)
            {
              v199 += 7;
              v15 = v200++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_424;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_424:
        v239 = 412;
        goto LABEL_446;
      case 0x34u:
        v205 = 0;
        v206 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 0x100uLL;
        while (2)
        {
          v207 = *v3;
          v208 = *(_QWORD *)(a2 + v207);
          v209 = v208 + 1;
          if (v208 == -1 || v209 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v210 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v208);
            *(_QWORD *)(a2 + v207) = v209;
            v29 |= (unint64_t)(v210 & 0x7F) << v205;
            if (v210 < 0)
            {
              v205 += 7;
              v15 = v206++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_428;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_428:
        v240 = 72;
        goto LABEL_441;
      case 0x35u:
        v211 = 0;
        v212 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 1uLL;
        while (2)
        {
          v213 = *v3;
          v214 = *(_QWORD *)(a2 + v213);
          v215 = v214 + 1;
          if (v214 == -1 || v215 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v216 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v214);
            *(_QWORD *)(a2 + v213) = v215;
            v29 |= (unint64_t)(v216 & 0x7F) << v211;
            if (v216 < 0)
            {
              v211 += 7;
              v15 = v212++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_432;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_432:
        v240 = 8;
        goto LABEL_441;
      case 0x36u:
        v217 = 0;
        v218 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x200000uLL;
        while (2)
        {
          v219 = *v3;
          v220 = *(_QWORD *)(a2 + v219);
          v221 = v220 + 1;
          if (v220 == -1 || v221 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v220);
            *(_QWORD *)(a2 + v219) = v221;
            v20 |= (unint64_t)(v222 & 0x7F) << v217;
            if (v222 < 0)
            {
              v217 += 7;
              v15 = v218++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_436;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_436:
        v239 = 288;
        goto LABEL_446;
      case 0x37u:
        *(_QWORD *)(a1 + 432) |= 0x400000uLL;
        v223 = *v3;
        v224 = *(_QWORD *)(a2 + v223);
        if (v224 <= 0xFFFFFFFFFFFFFFFBLL && v224 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v225 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v224);
          *(_QWORD *)(a2 + v223) = v224 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v225 = 0;
        }
        *(_DWORD *)(a1 + 312) = v225;
        goto LABEL_447;
      case 0x38u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 192;
        goto LABEL_285;
      case 0x39u:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 208;
        goto LABEL_285;
      case 0x3Au:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 184;
        goto LABEL_285;
      case 0x3Bu:
        v226 = 0;
        v227 = 0;
        v29 = 0;
        *(_QWORD *)(a1 + 432) |= 0x80uLL;
        while (2)
        {
          v228 = *v3;
          v229 = *(_QWORD *)(a2 + v228);
          v230 = v229 + 1;
          if (v229 == -1 || v230 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v231 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v229);
            *(_QWORD *)(a2 + v228) = v230;
            v29 |= (unint64_t)(v231 & 0x7F) << v226;
            if (v231 < 0)
            {
              v226 += 7;
              v15 = v227++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_440;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v29 = 0;
LABEL_440:
        v240 = 64;
LABEL_441:
        *(_QWORD *)(a1 + v240) = v29;
        goto LABEL_447;
      case 0x3Cu:
        PBReaderReadString();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 200;
        goto LABEL_285;
      case 0x3Du:
        PBReaderReadData();
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = 176;
LABEL_285:
        v232 = *(void **)(a1 + v26);
        *(_QWORD *)(a1 + v26) = v25;

        goto LABEL_447;
      case 0x3Eu:
        v102 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 80), v102);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v102, a2))
          goto LABEL_452;
        goto LABEL_304;
      case 0x3Fu:
        v233 = 0;
        v234 = 0;
        v20 = 0;
        *(_QWORD *)(a1 + 432) |= 0x1000000uLL;
        while (2)
        {
          v235 = *v3;
          v236 = *(_QWORD *)(a2 + v235);
          v237 = v236 + 1;
          if (v236 == -1 || v237 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v236);
            *(_QWORD *)(a2 + v235) = v237;
            v20 |= (unint64_t)(v238 & 0x7F) << v233;
            if (v238 < 0)
            {
              v233 += 7;
              v15 = v234++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_445;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_445:
        v239 = 340;
LABEL_446:
        *(_DWORD *)(a1 + v239) = v20;
        goto LABEL_447;
      case 0x40u:
        v102 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 216), v102);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v102, a2) & 1) == 0)
          goto LABEL_452;
        goto LABEL_304;
      case 0x41u:
        v102 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 224), v102);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v102, a2) & 1) == 0)
          goto LABEL_452;
        goto LABEL_304;
      case 0x42u:
        v102 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 232), v102);
        if (PBReaderPlaceMark() && (NTPBIssueViewDataReadFrom((uint64_t)v102, a2) & 1) != 0)
        {
LABEL_304:
          PBReaderRecallMark();
LABEL_305:

LABEL_447:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_452:

        return 0;
      case 0x43u:
        PBReaderReadString();
        v102 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v102)
          objc_msgSend((id)a1, "addTopicIds:", v102);
        goto LABEL_305;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_447;
    }
  }
}

uint64_t NTPBTocToggleTapReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTocHandleTapReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCardDragReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTocExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v23;

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCellExposureArticleElementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_30;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_41;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_41:
          *(_DWORD *)(a1 + 24) = v22;
          continue;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_30:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v30 = *v3;
        v31 = *(_QWORD *)(a2 + v30);
        if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          break;
        v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
        *(_QWORD *)(a2 + v30) = v31 + 1;
        v29 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
          goto LABEL_43;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          v29 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v29 = 0;
LABEL_45:
      *(_QWORD *)(a1 + 8) = v29;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBTopicsFollowedReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (void *)a1[1];
        a1[1] = v17;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_25:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
      objc_msgSend(a1, "addTopicId:", v18);
    goto LABEL_23;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTocCellExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  void *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  NTPBFeedCellExposure *v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 60) |= 8u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_64;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_66;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_64:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_66:
        v48 = 52;
        goto LABEL_83;
      case 2u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v24;

        goto LABEL_84;
      case 3u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                v28 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_70:
        *(_BYTE *)(a1 + 56) = v28 != 0;
        goto LABEL_84;
      case 4u:
        v32 = 0;
        v33 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v19 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_74:
        v48 = 8;
        goto LABEL_83;
      case 5u:
        v37 = 0;
        v38 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v19 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_78:
        v48 = 24;
        goto LABEL_83;
      case 6u:
        v42 = 0;
        v43 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 60) |= 4u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_82:
        v48 = 48;
LABEL_83:
        *(_DWORD *)(a1 + v48) = v19;
        goto LABEL_84;
      case 7u:
        v47 = objc_alloc_init(NTPBFeedCellExposure);
        objc_storeStrong((id *)(a1 + 16), v47);
        if (!PBReaderPlaceMark() || (NTPBFeedCellExposureReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_86;
        goto LABEL_62;
      case 8u:
        v47 = objc_alloc_init(NTPBTocCellExposureArticleElement);
        objc_storeStrong((id *)(a1 + 32), v47);
        if (PBReaderPlaceMark() && (NTPBTocCellExposureArticleElementReadFrom((uint64_t)v47, a2) & 1) != 0)
        {
LABEL_62:
          PBReaderRecallMark();

LABEL_84:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_86:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_84;
    }
  }
}

uint64_t NTPBUserOnboardingResumeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleScrollNotwReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v16)
          v17 = 1;
        else
          v17 = (v10 & 7) == 4;
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              *(_BYTE *)(a1 + 40) |= 1u;
              v18 = *v3;
              v19 = *(_QWORD *)(a2 + v18);
              if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v19);
                *(_QWORD *)(a2 + v18) = v19 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              *(_DWORD *)(a1 + 16) = v20;
              goto LABEL_30;
            case 2u:
              PBReaderReadString();
              v21 = objc_claimAutoreleasedReturnValue();
              v22 = 8;
              goto LABEL_27;
            case 3u:
              PBReaderReadString();
              v21 = objc_claimAutoreleasedReturnValue();
              v22 = 24;
              goto LABEL_27;
            case 4u:
              PBReaderReadString();
              v21 = objc_claimAutoreleasedReturnValue();
              v22 = 32;
LABEL_27:
              v24 = *(void **)(a1 + v22);
              *(_QWORD *)(a1 + v22) = v21;

              goto LABEL_30;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_30:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              *(_BYTE *)(a1 + 40) |= 1u;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_31;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 24;
              goto LABEL_31;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 32;
LABEL_31:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_33;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_35:
          *(_DWORD *)(a1 + 8) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEmailSubscriptionRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 16;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              v20 = 0;
LABEL_36:
            *(_QWORD *)(a1 + 8) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 24;
      }
      v26 = *(void **)(a1 + v25);
      *(_QWORD *)(a1 + v25) = v24;

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationAggregateDeltaReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  unint64_t v7;
  int *v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  unint64_t v21;
  unint64_t v22;
  void *String;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = 0x254B48000uLL;
    v8 = (int *)MEMORY[0x24BE7AF30];
    v9 = 0x254B48000uLL;
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v3;
          v14 = *(_QWORD *)(a2 + v13);
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)(a2 + *v4))
            break;
          v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v14);
          *(_QWORD *)(a2 + v13) = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_12;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v18 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v12 = 0;
LABEL_14:
        v19 = v12 & 7;
        if (!v18 && v19 != 4)
        {
          switch((v12 >> 3))
          {
            case 0u:
              v21 = v9;
              v22 = v7;
              String = (void *)PBReaderReadString();

              v24 = String;
              v7 = v22;
              v9 = v21;
              *(_QWORD *)(a1 + 72) = v24;
              goto LABEL_77;
            case 1u:
              *(_BYTE *)(a1 + *(int *)(v7 + 3436)) |= 1u;
              v25 = *v3;
              v26 = *(_QWORD *)(a2 + v25);
              if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v8) + v26);
                *(_QWORD *)(a2 + v25) = v26 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v27 = 0;
              }
              v55 = 32;
              goto LABEL_76;
            case 2u:
              *(_BYTE *)(a1 + *(int *)(v7 + 3436)) |= 2u;
              v28 = *v3;
              v29 = *(_QWORD *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v8) + v29);
                *(_QWORD *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v27 = 0;
              }
              v55 = 40;
              goto LABEL_76;
            case 3u:
              if (v19 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v30 = 0;
                  v31 = 0;
                  v32 = 0;
                  while (1)
                  {
                    v33 = *v3;
                    v34 = *(_QWORD *)(a2 + v33);
                    v35 = v34 + 1;
                    if (v34 == -1 || v35 > *(_QWORD *)(a2 + *v4))
                      break;
                    v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v34);
                    *(_QWORD *)(a2 + v33) = v35;
                    v32 |= (unint64_t)(v36 & 0x7F) << v30;
                    if (v36 < 0)
                    {
                      v30 += 7;
                      v17 = v31++ >= 9;
                      if (!v17)
                        continue;
                    }
                    goto LABEL_40;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
                  PBRepeatedUInt32Add();
                }
                PBReaderRecallMark();
              }
              else
              {
                v48 = 0;
                v49 = 0;
                v50 = 0;
                while (1)
                {
                  v51 = *v3;
                  v52 = *(_QWORD *)(a2 + v51);
                  v53 = v52 + 1;
                  if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
                    break;
                  v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v52);
                  *(_QWORD *)(a2 + v51) = v53;
                  v50 |= (unint64_t)(v54 & 0x7F) << v48;
                  if (v54 < 0)
                  {
                    v48 += 7;
                    v17 = v49++ >= 9;
                    if (!v17)
                      continue;
                  }
                  goto LABEL_67;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
                PBRepeatedUInt32Add();
              }
LABEL_77:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 4u:
              v37 = 0;
              v38 = 0;
              v39 = 0;
              *(_BYTE *)(a1 + *(int *)(v7 + 3436)) |= 0x10u;
              while (2)
              {
                v40 = *v3;
                v41 = *(_QWORD *)(a2 + v40);
                v42 = v41 + 1;
                if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v41);
                  *(_QWORD *)(a2 + v40) = v42;
                  v39 |= (unint64_t)(v43 & 0x7F) << v37;
                  if (v43 < 0)
                  {
                    v37 += 7;
                    v17 = v38++ >= 9;
                    if (v17)
                    {
                      v39 = 0;
                      goto LABEL_57;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v39 = 0;
LABEL_57:
              *(_QWORD *)(a1 + 64) = v39;
              goto LABEL_77;
            case 5u:
              *(_BYTE *)(a1 + *(int *)(v7 + 3436)) |= 8u;
              v44 = *v3;
              v45 = *(_QWORD *)(a2 + v44);
              if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v8) + v45);
                *(_QWORD *)(a2 + v44) = v45 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v27 = 0;
              }
              v55 = 56;
              goto LABEL_76;
            case 6u:
              *(_BYTE *)(a1 + *(int *)(v7 + 3436)) |= 4u;
              v46 = *v3;
              v47 = *(_QWORD *)(a2 + v46);
              if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v27 = *(_QWORD *)(*(_QWORD *)(a2 + *v8) + v47);
                *(_QWORD *)(a2 + v46) = v47 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v27 = 0;
              }
              v55 = 48;
LABEL_76:
              *(_QWORD *)(a1 + v55) = v27;
              goto LABEL_77;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_77;
              return 0;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedCellHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_55;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_57:
          v43 = 40;
          goto LABEL_70;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_61:
          v43 = 8;
          goto LABEL_70;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 48;
          goto LABEL_39;
        case 4u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 16;
          goto LABEL_39;
        case 5u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 24;
          goto LABEL_39;
        case 6u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
LABEL_39:
          v31 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        case 7u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
LABEL_65:
          *(_BYTE *)(a1 + 60) = v34 != 0;
          continue;
        case 8u:
          v38 = 0;
          v39 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v40 = *v3;
        v41 = *(_QWORD *)(a2 + v40);
        if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
        *(_QWORD *)(a2 + v40) = v41 + 1;
        v19 |= (unint64_t)(v42 & 0x7F) << v38;
        if ((v42 & 0x80) == 0)
          goto LABEL_67;
        v38 += 7;
        v14 = v39++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_69:
      v43 = 56;
LABEL_70:
      *(_DWORD *)(a1 + v43) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBUserOnboardingResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_70;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_72;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_70:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_72:
          v54 = 24;
          goto LABEL_89;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 56) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_76:
          v55 = v26 != 0;
          v56 = 52;
          goto LABEL_94;
        case 3u:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v30;

          continue;
        case 4u:
          v32 = 0;
          v33 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_80:
          v54 = 40;
          goto LABEL_89;
        case 5u:
          v37 = 0;
          v38 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_84:
          v54 = 48;
          goto LABEL_89;
        case 6u:
          PBReaderReadString();
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          if (v42)
            objc_msgSend((id)a1, "addChannelId:", v42);
          goto LABEL_54;
        case 7u:
          PBReaderReadString();
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          if (v42)
            objc_msgSend((id)a1, "addTopicId:", v42);
LABEL_54:

          continue;
        case 8u:
          v43 = 0;
          v44 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v19 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_88:
          v54 = 44;
LABEL_89:
          *(_DWORD *)(a1 + v54) = v19;
          continue;
        case 9u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          *(_BYTE *)(a1 + 56) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v51 = *v3;
        v52 = *(_QWORD *)(a2 + v51);
        if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          break;
        v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
        *(_QWORD *)(a2 + v51) = v52 + 1;
        v50 |= (unint64_t)(v53 & 0x7F) << v48;
        if ((v53 & 0x80) == 0)
          goto LABEL_91;
        v48 += 7;
        v14 = v49++ >= 9;
        if (v14)
        {
          v50 = 0;
          goto LABEL_93;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_91:
      if (*(_BYTE *)(a2 + *v5))
        v50 = 0;
LABEL_93:
      v55 = v50 != 0;
      v56 = 53;
LABEL_94:
      *(_BYTE *)(a1 + v56) = v55;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTelemetryNetworkEventGroupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  NTPBTelemetryNetworkEvent *v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 44) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_49;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_51:
        v38 = 12;
        goto LABEL_60;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 44) |= 4u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v26 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_55:
        *(_BYTE *)(a1 + 40) = v26 != 0;
        goto LABEL_61;
      case 3u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_59:
        v38 = 8;
LABEL_60:
        *(_DWORD *)(a1 + v38) = v19;
        goto LABEL_61;
      case 4u:
        PBReaderReadString();
        v35 = objc_claimAutoreleasedReturnValue();
        v36 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v35;

        goto LABEL_61;
      case 5u:
        v37 = objc_alloc_init(NTPBTelemetryNetworkEvent);
        objc_msgSend((id)a1, "addSuccesses:", v37);
        goto LABEL_45;
      case 6u:
        v37 = objc_alloc_init(NTPBTelemetryNetworkEvent);
        objc_msgSend((id)a1, "addFailures:", v37);
LABEL_45:
        if (PBReaderPlaceMark() && (NTPBTelemetryNetworkEventReadFrom((uint64_t)v37, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

uint64_t NTPBWidgetSectionConfigRecordReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              a1[3] = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_31;
              }
              return 0;
            case 5u:
              String = (void *)PBReaderReadString();

              v20 = String;
              v21 = 4;
              goto LABEL_30;
            case 6u:
              v22 = PBReaderReadString();
              if (v22)
                objc_msgSend(a1, "addArticleListIDs2:", v22);
              goto LABEL_31;
            case 7u:
              v23 = PBReaderReadString();
              if (v23)
                objc_msgSend(a1, "addArticleIDs2:", v23);
              goto LABEL_31;
            case 8u:
              v24 = (void *)PBReaderReadString();

              v20 = v24;
              v21 = 5;
LABEL_30:
              a1[v21] = v20;
              goto LABEL_31;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_31:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEnvelopeBatchReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBEnvelope *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(NTPBEnvelope);
          objc_msgSend(a1, "addEnvelope:", v17);
          if (PBReaderPlaceMark() && (NTPBEnvelopeReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          a1[36] |= 2u;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_53;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v21) = 0;
LABEL_55:
          v40 = 24;
          goto LABEL_68;
        case 3u:
          v25 = 0;
          v26 = 0;
          v21 = 0;
          a1[36] |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v21 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v21) = 0;
LABEL_59:
          v40 = 28;
          goto LABEL_68;
        case 4u:
          v30 = 0;
          v31 = 0;
          v21 = 0;
          a1[36] |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v21 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v21) = 0;
LABEL_63:
          v40 = 32;
          goto LABEL_68;
        case 5u:
          v35 = 0;
          v36 = 0;
          v21 = 0;
          a1[36] |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v21 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
          goto LABEL_65;
        v35 += 7;
        v14 = v36++ >= 9;
        if (v14)
        {
          LODWORD(v21) = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v21) = 0;
LABEL_67:
      v40 = 8;
LABEL_68:
      *(_DWORD *)&a1[v40] = v21;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLinkTapArticleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_24;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_24;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_24:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 4u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_33;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_35;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v23) = 0;
LABEL_35:
      *(_DWORD *)(a1 + 16) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleListRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  NTPBRecordBase *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t String;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = objc_alloc_init(NTPBRecordBase);

              *(_QWORD *)(a1 + 16) = v17;
              if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_38;
              }
              return 0;
            case 2u:
              v19 = 0;
              v20 = 0;
              v21 = 0;
              *(_BYTE *)(a1 + 36) |= 1u;
              break;
            case 3u:
              String = PBReaderReadString();
              if (String)
                objc_msgSend((id)a1, "addArticleIDs:", String);
              goto LABEL_38;
            case 4u:
              v26 = (void *)PBReaderReadString();

              *(_QWORD *)(a1 + 24) = v26;
              goto LABEL_38;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_38:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_35;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_37;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v21) = 0;
LABEL_37:
          *(_DWORD *)(a1 + 32) = v21;
          goto LABEL_38;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t result;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  COMAPPLEFELDSPARPROTOCOLScoredTagID *v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  char v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  char v200;
  unsigned int v201;
  uint64_t v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  char v215;
  unsigned int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  char v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  char v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char v241;
  char v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  char v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  uint64_t v261;
  unint64_t v262;
  int v263;
  char v264;
  unsigned int v265;
  uint64_t v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  char v271;
  char v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char v277;
  char v278;
  unsigned int v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  char v283;
  char v284;
  unsigned int v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  char v289;
  char v290;
  unsigned int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  char v296;
  char v297;
  unsigned int v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  char v303;
  unsigned int v304;
  uint64_t v305;
  uint64_t v306;
  unint64_t v307;
  char v308;
  char v309;
  unsigned int v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  char v314;
  char v315;
  unsigned int v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  char v320;
  char v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  char v327;
  char v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  char v333;
  char v334;
  unsigned int v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  char v339;
  char v340;
  unsigned int v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  char v346;
  unsigned int v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  char v351;
  char v352;
  unsigned int v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  char v357;
  char v358;
  unsigned int v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  char v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  char v367;
  unsigned int v368;
  uint64_t v369;
  unsigned int v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  char v375;
  unsigned int v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  char v381;
  char v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  char v388;
  char v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t v392;
  unint64_t v393;
  char v394;
  char v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  char v407;
  unsigned int v408;
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  char v412;
  char v413;
  unsigned int v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  char v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  uint64_t v422;
  unint64_t v423;
  char v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  unint64_t v428;
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  unint64_t v434;
  uint64_t v435;
  unint64_t v436;
  uint64_t v437;
  unint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  char v448;
  char v449;
  unsigned int v450;
  uint64_t v451;
  unint64_t v452;
  char v453;
  char v454;
  unsigned int v455;
  uint64_t v456;
  unint64_t v457;
  char v458;
  char v459;
  unsigned int v460;
  uint64_t v461;
  unint64_t v462;
  char v463;
  char v464;
  unsigned int v465;
  uint64_t v466;
  unint64_t v467;
  char v468;
  char v469;
  unsigned int v470;
  uint64_t v471;
  unint64_t v472;
  char v473;
  char v474;
  unsigned int v475;
  uint64_t v476;
  unint64_t v477;
  char v478;
  char v479;
  unsigned int v480;
  uint64_t v481;
  unint64_t v482;
  char v483;
  char v484;
  unsigned int v485;
  uint64_t v486;
  uint64_t v487;
  unint64_t v488;
  char v489;
  uint64_t v490;
  unint64_t v491;
  char v492;
  unsigned int v493;
  uint64_t v494;
  unint64_t v495;
  char v496;
  char v497;
  unsigned int v498;
  uint64_t v499;
  unint64_t v500;
  char v501;
  char v502;
  unsigned int v503;
  uint64_t v504;
  unint64_t v505;
  char v506;
  void *v507;
  char v508;
  unsigned int v509;
  uint64_t v510;
  uint64_t v511;
  unint64_t v512;
  char v513;
  char v514;
  unsigned int v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  char v519;
  uint64_t v520;
  BOOL v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000uLL;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0)
            goto LABEL_658;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_660;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_658:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_660:
        v520 = 156;
        goto LABEL_950;
      case 2u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 160;
        goto LABEL_636;
      case 3u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 616;
        goto LABEL_636;
      case 4u:
        v26 = 0;
        v27 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000000000uLL;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v30;
            v19 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_664;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_664:
        v520 = 596;
        goto LABEL_950;
      case 5u:
        v32 = 0;
        v33 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000uLL;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          v36 = v35 + 1;
          if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v36;
            v19 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_668;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_668:
        v520 = 200;
        goto LABEL_950;
      case 6u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 168;
        goto LABEL_636;
      case 7u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 192;
        goto LABEL_636;
      case 8u:
        v38 = 0;
        v39 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000uLL;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v42;
            v19 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_672;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_672:
        v520 = 276;
        goto LABEL_950;
      case 9u:
        v44 = 0;
        v45 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000uLL;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v48;
            v19 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_676:
        v520 = 184;
        goto LABEL_950;
      case 0xAu:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 328;
        goto LABEL_636;
      case 0xBu:
        v50 = 0;
        v51 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000uLL;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v54;
            v19 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_680;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_680:
        v520 = 304;
        goto LABEL_950;
      case 0xCu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 312;
        goto LABEL_636;
      case 0xDu:
        v56 = 0;
        v57 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000000uLL;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v60;
            v19 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v14 = v57++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_684;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_684:
        v520 = 300;
        goto LABEL_950;
      case 0xEu:
        v62 = 0;
        v63 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000000uLL;
        while (2)
        {
          v64 = *v3;
          v65 = *(_QWORD *)(a2 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
            *(_QWORD *)(a2 + v64) = v66;
            v19 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v14 = v63++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_688;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_688:
        v520 = 560;
        goto LABEL_950;
      case 0xFu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 552;
        goto LABEL_636;
      case 0x10u:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        v71 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v71;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                v70 = 0;
                goto LABEL_692;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v70 = 0;
LABEL_692:
        v521 = v70 != 0;
        v522 = 806;
        goto LABEL_959;
      case 0x13u:
        v77 = 0;
        v78 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000uLL;
        while (2)
        {
          v79 = *v3;
          v80 = *(_QWORD *)(a2 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
            *(_QWORD *)(a2 + v79) = v81;
            v19 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v14 = v78++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_696;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_696:
        v520 = 128;
        goto LABEL_950;
      case 0x14u:
        v83 = 0;
        v84 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000000uLL;
        while (2)
        {
          v85 = *v3;
          v86 = *(_QWORD *)(a2 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v87;
            v19 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v14 = v84++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_700;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_700:
        v520 = 468;
        goto LABEL_950;
      case 0x15u:
        v89 = 0;
        v90 = 0;
        v91 = 0;
        *(_WORD *)(a1 + 820) |= 1u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          v94 = v93 + 1;
          if (v93 == -1 || v94 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              v14 = v90++ >= 9;
              if (v14)
              {
                v91 = 0;
                goto LABEL_704;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v91 = 0;
LABEL_704:
        v521 = v91 != 0;
        v522 = 787;
        goto LABEL_959;
      case 0x16u:
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_WORD *)(a1 + 820) |= 0x1000u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              v14 = v97++ >= 9;
              if (v14)
              {
                v98 = 0;
                goto LABEL_708;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v98 = 0;
LABEL_708:
        v521 = v98 != 0;
        v522 = 799;
        goto LABEL_959;
      case 0x17u:
        v103 = 0;
        v104 = 0;
        v105 = 0;
        *(_WORD *)(a1 + 820) |= 4u;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              v14 = v104++ >= 9;
              if (v14)
              {
                v105 = 0;
                goto LABEL_712;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v105 = 0;
LABEL_712:
        v521 = v105 != 0;
        v522 = 789;
        goto LABEL_959;
      case 0x18u:
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_WORD *)(a1 + 820) |= 0x100u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                v112 = 0;
                goto LABEL_716;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v112 = 0;
LABEL_716:
        v521 = v112 != 0;
        v522 = 795;
        goto LABEL_959;
      case 0x19u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 656;
        goto LABEL_636;
      case 0x1Au:
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000000000uLL;
        while (2)
        {
          v120 = *v3;
          v121 = *(_QWORD *)(a2 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
            *(_QWORD *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              v14 = v118++ >= 9;
              if (v14)
              {
                v119 = 0;
                goto LABEL_720;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v119 = 0;
LABEL_720:
        v521 = v119 != 0;
        v522 = 784;
        goto LABEL_959;
      case 0x1Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 664;
        goto LABEL_636;
      case 0x1Cu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 744;
        goto LABEL_636;
      case 0x1Du:
        v124 = 0;
        v125 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000uLL;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v128;
            v19 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_724;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_724:
        v520 = 240;
        goto LABEL_950;
      case 0x1Eu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 456;
        goto LABEL_636;
      case 0x1Fu:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addNamedEntities:", v130);
        goto LABEL_656;
      case 0x20u:
        v131 = 0;
        v132 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000uLL;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v135;
            v19 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_728;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_728:
        v520 = 180;
        goto LABEL_950;
      case 0x21u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 680;
        goto LABEL_636;
      case 0x22u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 688;
        goto LABEL_636;
      case 0x23u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 704;
        goto LABEL_636;
      case 0x24u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 648;
        goto LABEL_636;
      case 0x25u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 624;
        goto LABEL_636;
      case 0x26u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 632;
        goto LABEL_636;
      case 0x27u:
        v137 = 0;
        v138 = 0;
        v139 = 0;
        *(_WORD *)(a1 + 820) |= 0x80u;
        while (2)
        {
          v140 = *v3;
          v141 = *(_QWORD *)(a2 + v140);
          v142 = v141 + 1;
          if (v141 == -1 || v142 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v141);
            *(_QWORD *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              v14 = v138++ >= 9;
              if (v14)
              {
                v139 = 0;
                goto LABEL_732;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v139 = 0;
LABEL_732:
        v521 = v139 != 0;
        v522 = 794;
        goto LABEL_959;
      case 0x28u:
        v144 = 0;
        v145 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000000uLL;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)(a2 + v146);
          v148 = v147 + 1;
          if (v147 == -1 || v148 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
            *(_QWORD *)(a2 + v146) = v148;
            v19 |= (unint64_t)(v149 & 0x7F) << v144;
            if (v149 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_736;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_736:
        v520 = 564;
        goto LABEL_950;
      case 0x29u:
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v153 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x100000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v153;
        while (2)
        {
          v154 = *v3;
          v155 = *(_QWORD *)(a2 + v154);
          v156 = v155 + 1;
          if (v155 == -1 || v156 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
            *(_QWORD *)(a2 + v154) = v156;
            v152 |= (unint64_t)(v157 & 0x7F) << v150;
            if (v157 < 0)
            {
              v150 += 7;
              v14 = v151++ >= 9;
              if (v14)
              {
                v152 = 0;
                goto LABEL_740;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v152 = 0;
LABEL_740:
        v521 = v152 != 0;
        v522 = 807;
        goto LABEL_959;
      case 0x2Au:
        v158 = 0;
        v159 = 0;
        v160 = 0;
        v161 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v161;
        while (2)
        {
          v162 = *v3;
          v163 = *(_QWORD *)(a2 + v162);
          v164 = v163 + 1;
          if (v163 == -1 || v164 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
            *(_QWORD *)(a2 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              v14 = v159++ >= 9;
              if (v14)
              {
                v160 = 0;
                goto LABEL_744;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v160 = 0;
LABEL_744:
        v521 = v160 != 0;
        v522 = 805;
        goto LABEL_959;
      case 0x2Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 672;
        goto LABEL_636;
      case 0x2Cu:
        v166 = 0;
        v167 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400uLL;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          v171 = v170 + 1;
          if (v170 == -1 || v171 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              v14 = v167++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_748;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_748:
        v523 = 88;
        goto LABEL_893;
      case 0x2Du:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 736;
        goto LABEL_636;
      case 0x2Eu:
        v173 = 0;
        v174 = 0;
        v175 = 0;
        *(_WORD *)(a1 + 820) |= 0x400u;
        while (2)
        {
          v176 = *v3;
          v177 = *(_QWORD *)(a2 + v176);
          v178 = v177 + 1;
          if (v177 == -1 || v178 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v177);
            *(_QWORD *)(a2 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              v14 = v174++ >= 9;
              if (v14)
              {
                v175 = 0;
                goto LABEL_752;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v175 = 0;
LABEL_752:
        v521 = v175 != 0;
        v522 = 797;
        goto LABEL_959;
      case 0x2Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 352;
        goto LABEL_636;
      case 0x30u:
        v180 = 0;
        v181 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000uLL;
        while (2)
        {
          v182 = *v3;
          v183 = *(_QWORD *)(a2 + v182);
          v184 = v183 + 1;
          if (v183 == -1 || v184 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
            *(_QWORD *)(a2 + v182) = v184;
            v19 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              v14 = v181++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_756;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_756:
        v520 = 372;
        goto LABEL_950;
      case 0x31u:
        v186 = 0;
        v187 = 0;
        v188 = 0;
        v189 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v189;
        while (2)
        {
          v190 = *v3;
          v191 = *(_QWORD *)(a2 + v190);
          v192 = v191 + 1;
          if (v191 == -1 || v192 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v193 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
            *(_QWORD *)(a2 + v190) = v192;
            v188 |= (unint64_t)(v193 & 0x7F) << v186;
            if (v193 < 0)
            {
              v186 += 7;
              v14 = v187++ >= 9;
              if (v14)
              {
                v188 = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v188 = 0;
LABEL_760:
        v521 = v188 != 0;
        v522 = 803;
        goto LABEL_959;
      case 0x32u:
        v194 = 0;
        v195 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000uLL;
        while (2)
        {
          v196 = *v3;
          v197 = *(_QWORD *)(a2 + v196);
          v198 = v197 + 1;
          if (v197 == -1 || v198 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v199 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
            *(_QWORD *)(a2 + v196) = v198;
            v19 |= (unint64_t)(v199 & 0x7F) << v194;
            if (v199 < 0)
            {
              v194 += 7;
              v14 = v195++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_764:
        v520 = 152;
        goto LABEL_950;
      case 0x33u:
        v200 = 0;
        v201 = 0;
        v202 = 0;
        v203 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x200000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v203;
        while (2)
        {
          v204 = *v3;
          v205 = *(_QWORD *)(a2 + v204);
          v206 = v205 + 1;
          if (v205 == -1 || v206 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v205);
            *(_QWORD *)(a2 + v204) = v206;
            v202 |= (unint64_t)(v207 & 0x7F) << v200;
            if (v207 < 0)
            {
              v200 += 7;
              v14 = v201++ >= 9;
              if (v14)
              {
                v202 = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v202 = 0;
LABEL_768:
        v521 = v202 != 0;
        v522 = 808;
        goto LABEL_959;
      case 0x34u:
        v208 = 0;
        v209 = 0;
        v210 = 0;
        *(_WORD *)(a1 + 820) |= 0x8000u;
        while (2)
        {
          v211 = *v3;
          v212 = *(_QWORD *)(a2 + v211);
          v213 = v212 + 1;
          if (v212 == -1 || v213 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v212);
            *(_QWORD *)(a2 + v211) = v213;
            v210 |= (unint64_t)(v214 & 0x7F) << v208;
            if (v214 < 0)
            {
              v208 += 7;
              v14 = v209++ >= 9;
              if (v14)
              {
                v210 = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v210 = 0;
LABEL_772:
        v521 = v210 != 0;
        v522 = 802;
        goto LABEL_959;
      case 0x35u:
        v215 = 0;
        v216 = 0;
        v217 = 0;
        *(_WORD *)(a1 + 820) |= 0x200u;
        while (2)
        {
          v218 = *v3;
          v219 = *(_QWORD *)(a2 + v218);
          v220 = v219 + 1;
          if (v219 == -1 || v220 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v221 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
            *(_QWORD *)(a2 + v218) = v220;
            v217 |= (unint64_t)(v221 & 0x7F) << v215;
            if (v221 < 0)
            {
              v215 += 7;
              v14 = v216++ >= 9;
              if (v14)
              {
                v217 = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v217 = 0;
LABEL_776:
        v521 = v217 != 0;
        v522 = 796;
        goto LABEL_959;
      case 0x36u:
        v222 = 0;
        v223 = 0;
        v224 = 0;
        *(_WORD *)(a1 + 820) |= 0x2000u;
        while (2)
        {
          v225 = *v3;
          v226 = *(_QWORD *)(a2 + v225);
          v227 = v226 + 1;
          if (v226 == -1 || v227 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
            *(_QWORD *)(a2 + v225) = v227;
            v224 |= (unint64_t)(v228 & 0x7F) << v222;
            if (v228 < 0)
            {
              v222 += 7;
              v14 = v223++ >= 9;
              if (v14)
              {
                v224 = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v224 = 0;
LABEL_780:
        v521 = v224 != 0;
        v522 = 800;
        goto LABEL_959;
      case 0x37u:
        v229 = 0;
        v230 = 0;
        v231 = 0;
        *(_WORD *)(a1 + 820) |= 0x40u;
        while (2)
        {
          v232 = *v3;
          v233 = *(_QWORD *)(a2 + v232);
          v234 = v233 + 1;
          if (v233 == -1 || v234 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v235 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v233);
            *(_QWORD *)(a2 + v232) = v234;
            v231 |= (unint64_t)(v235 & 0x7F) << v229;
            if (v235 < 0)
            {
              v229 += 7;
              v14 = v230++ >= 9;
              if (v14)
              {
                v231 = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v231 = 0;
LABEL_784:
        v521 = v231 != 0;
        v522 = 793;
        goto LABEL_959;
      case 0x38u:
        v236 = 0;
        v237 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000uLL;
        while (2)
        {
          v238 = *v3;
          v239 = *(_QWORD *)(a2 + v238);
          v240 = v239 + 1;
          if (v239 == -1 || v240 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v241 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v239);
            *(_QWORD *)(a2 + v238) = v240;
            v19 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              v14 = v237++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_788:
        v520 = 244;
        goto LABEL_950;
      case 0x39u:
        v242 = 0;
        v243 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000uLL;
        while (2)
        {
          v244 = *v3;
          v245 = *(_QWORD *)(a2 + v244);
          v246 = v245 + 1;
          if (v245 == -1 || v246 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v247 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v245);
            *(_QWORD *)(a2 + v244) = v246;
            v19 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              v14 = v243++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_792:
        v520 = 248;
        goto LABEL_950;
      case 0x3Au:
        v248 = 0;
        v249 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000000uLL;
        while (2)
        {
          v250 = *v3;
          v251 = *(_QWORD *)(a2 + v250);
          v252 = v251 + 1;
          if (v251 == -1 || v252 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v253 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v251);
            *(_QWORD *)(a2 + v250) = v252;
            v19 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_796:
        v520 = 544;
        goto LABEL_950;
      case 0x3Bu:
        v254 = 0;
        v255 = 0;
        v256 = 0;
        *(_WORD *)(a1 + 820) |= 0x4000u;
        while (2)
        {
          v257 = *v3;
          v258 = *(_QWORD *)(a2 + v257);
          v259 = v258 + 1;
          if (v258 == -1 || v259 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v260 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v258);
            *(_QWORD *)(a2 + v257) = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              v14 = v255++ >= 9;
              if (v14)
              {
                v256 = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v256 = 0;
LABEL_800:
        v521 = v256 != 0;
        v522 = 801;
        goto LABEL_959;
      case 0x3Cu:
        *(_QWORD *)(a1 + 812) |= 0x40000000000uLL;
        v261 = *v3;
        v262 = *(_QWORD *)(a2 + v261);
        if (v262 <= 0xFFFFFFFFFFFFFFFBLL && v262 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v263 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v262);
          *(_QWORD *)(a2 + v261) = v262 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v263 = 0;
        }
        *(_DWORD *)(a1 + 472) = v263;
        goto LABEL_985;
      case 0x3Du:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 216;
        goto LABEL_636;
      case 0x3Eu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 224;
        goto LABEL_636;
      case 0x3Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 256;
        goto LABEL_636;
      case 0x40u:
        v264 = 0;
        v265 = 0;
        v266 = 0;
        v267 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x400000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v267;
        while (2)
        {
          v268 = *v3;
          v269 = *(_QWORD *)(a2 + v268);
          v270 = v269 + 1;
          if (v269 == -1 || v270 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v271 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v269);
            *(_QWORD *)(a2 + v268) = v270;
            v266 |= (unint64_t)(v271 & 0x7F) << v264;
            if (v271 < 0)
            {
              v264 += 7;
              v14 = v265++ >= 9;
              if (v14)
              {
                v266 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v266 = 0;
LABEL_804:
        v521 = v266 != 0;
        v522 = 809;
        goto LABEL_959;
      case 0x41u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 536;
        goto LABEL_636;
      case 0x42u:
        v272 = 0;
        v273 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000000uLL;
        while (2)
        {
          v274 = *v3;
          v275 = *(_QWORD *)(a2 + v274);
          v276 = v275 + 1;
          if (v275 == -1 || v276 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v277 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v275);
            *(_QWORD *)(a2 + v274) = v276;
            v19 |= (unint64_t)(v277 & 0x7F) << v272;
            if (v277 < 0)
            {
              v272 += 7;
              v14 = v273++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_808:
        v520 = 520;
        goto LABEL_950;
      case 0x43u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 528;
        goto LABEL_636;
      case 0x44u:
        v278 = 0;
        v279 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000uLL;
        while (2)
        {
          v280 = *v3;
          v281 = *(_QWORD *)(a2 + v280);
          v282 = v281 + 1;
          if (v281 == -1 || v282 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v283 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v281);
            *(_QWORD *)(a2 + v280) = v282;
            v19 |= (unint64_t)(v283 & 0x7F) << v278;
            if (v283 < 0)
            {
              v278 += 7;
              v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_812:
        v520 = 344;
        goto LABEL_950;
      case 0x45u:
        v284 = 0;
        v285 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000uLL;
        while (2)
        {
          v286 = *v3;
          v287 = *(_QWORD *)(a2 + v286);
          v288 = v287 + 1;
          if (v287 == -1 || v288 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v289 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v287);
            *(_QWORD *)(a2 + v286) = v288;
            v19 |= (unint64_t)(v289 & 0x7F) << v284;
            if (v289 < 0)
            {
              v284 += 7;
              v14 = v285++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_816:
        v520 = 348;
        goto LABEL_950;
      case 0x46u:
        v290 = 0;
        v291 = 0;
        v292 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000000000uLL;
        while (2)
        {
          v293 = *v3;
          v294 = *(_QWORD *)(a2 + v293);
          v295 = v294 + 1;
          if (v294 == -1 || v295 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v296 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v294);
            *(_QWORD *)(a2 + v293) = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              v14 = v291++ >= 9;
              if (v14)
              {
                v292 = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v292 = 0;
LABEL_820:
        v521 = v292 != 0;
        v522 = 785;
        goto LABEL_959;
      case 0x47u:
        v297 = 0;
        v298 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000000uLL;
        while (2)
        {
          v299 = *v3;
          v300 = *(_QWORD *)(a2 + v299);
          v301 = v300 + 1;
          if (v300 == -1 || v301 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v302 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v300);
            *(_QWORD *)(a2 + v299) = v301;
            v19 |= (unint64_t)(v302 & 0x7F) << v297;
            if (v302 < 0)
            {
              v297 += 7;
              v14 = v298++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_824:
        v520 = 464;
        goto LABEL_950;
      case 0x48u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 568;
        goto LABEL_636;
      case 0x49u:
        v303 = 0;
        v304 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000000000uLL;
        while (2)
        {
          v305 = *v3;
          v306 = *(_QWORD *)(a2 + v305);
          v307 = v306 + 1;
          if (v306 == -1 || v307 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v308 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v306);
            *(_QWORD *)(a2 + v305) = v307;
            v19 |= (unint64_t)(v308 & 0x7F) << v303;
            if (v308 < 0)
            {
              v303 += 7;
              v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_828:
        v520 = 776;
        goto LABEL_950;
      case 0x4Au:
        v309 = 0;
        v310 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000000000uLL;
        while (2)
        {
          v311 = *v3;
          v312 = *(_QWORD *)(a2 + v311);
          v313 = v312 + 1;
          if (v312 == -1 || v313 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v314 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v312);
            *(_QWORD *)(a2 + v311) = v313;
            v19 |= (unint64_t)(v314 & 0x7F) << v309;
            if (v314 < 0)
            {
              v309 += 7;
              v14 = v310++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_832:
        v520 = 780;
        goto LABEL_950;
      case 0x4Bu:
        v315 = 0;
        v316 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000000000uLL;
        while (2)
        {
          v317 = *v3;
          v318 = *(_QWORD *)(a2 + v317);
          v319 = v318 + 1;
          if (v318 == -1 || v319 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v320 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v318);
            *(_QWORD *)(a2 + v317) = v319;
            v19 |= (unint64_t)(v320 & 0x7F) << v315;
            if (v320 < 0)
            {
              v315 += 7;
              v14 = v316++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_836:
        v520 = 760;
        goto LABEL_950;
      case 0x4Cu:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x4Du:
        v321 = 0;
        v322 = 0;
        v323 = 0;
        *(_WORD *)(a1 + 820) |= 0x20u;
        while (2)
        {
          v324 = *v3;
          v325 = *(_QWORD *)(a2 + v324);
          v326 = v325 + 1;
          if (v325 == -1 || v326 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v327 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v325);
            *(_QWORD *)(a2 + v324) = v326;
            v323 |= (unint64_t)(v327 & 0x7F) << v321;
            if (v327 < 0)
            {
              v321 += 7;
              v14 = v322++ >= 9;
              if (v14)
              {
                v323 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v323 = 0;
LABEL_840:
        v521 = v323 != 0;
        v522 = 792;
        goto LABEL_959;
      case 0x4Eu:
        v328 = 0;
        v329 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000uLL;
        while (2)
        {
          v330 = *v3;
          v331 = *(_QWORD *)(a2 + v330);
          v332 = v331 + 1;
          if (v331 == -1 || v332 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v333 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v331);
            *(_QWORD *)(a2 + v330) = v332;
            v19 |= (unint64_t)(v333 & 0x7F) << v328;
            if (v333 < 0)
            {
              v328 += 7;
              v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_844;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_844:
        v520 = 208;
        goto LABEL_950;
      case 0x4Fu:
        v334 = 0;
        v335 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000uLL;
        while (2)
        {
          v336 = *v3;
          v337 = *(_QWORD *)(a2 + v336);
          v338 = v337 + 1;
          if (v337 == -1 || v338 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v339 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v337);
            *(_QWORD *)(a2 + v336) = v338;
            v19 |= (unint64_t)(v339 & 0x7F) << v334;
            if (v339 < 0)
            {
              v334 += 7;
              v14 = v335++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_848;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_848:
        v520 = 204;
        goto LABEL_950;
      case 0x50u:
        v340 = 0;
        v341 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000000000uLL;
        while (2)
        {
          v342 = *v3;
          v343 = *(_QWORD *)(a2 + v342);
          v344 = v343 + 1;
          if (v343 == -1 || v344 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v345 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v343);
            *(_QWORD *)(a2 + v342) = v344;
            v19 |= (unint64_t)(v345 & 0x7F) << v340;
            if (v345 < 0)
            {
              v340 += 7;
              v14 = v341++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_852;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_852:
        v520 = 720;
        goto LABEL_950;
      case 0x51u:
        v346 = 0;
        v347 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000000000uLL;
        while (2)
        {
          v348 = *v3;
          v349 = *(_QWORD *)(a2 + v348);
          v350 = v349 + 1;
          if (v349 == -1 || v350 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v351 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v349);
            *(_QWORD *)(a2 + v348) = v350;
            v19 |= (unint64_t)(v351 & 0x7F) << v346;
            if (v351 < 0)
            {
              v346 += 7;
              v14 = v347++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_856;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_856:
        v520 = 712;
        goto LABEL_950;
      case 0x52u:
        v352 = 0;
        v353 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000000000uLL;
        while (2)
        {
          v354 = *v3;
          v355 = *(_QWORD *)(a2 + v354);
          v356 = v355 + 1;
          if (v355 == -1 || v356 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v357 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v355);
            *(_QWORD *)(a2 + v354) = v356;
            v19 |= (unint64_t)(v357 & 0x7F) << v352;
            if (v357 < 0)
            {
              v352 += 7;
              v14 = v353++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_860;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_860:
        v520 = 716;
        goto LABEL_950;
      case 0x53u:
        v358 = 0;
        v359 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000uLL;
        while (2)
        {
          v360 = *v3;
          v361 = *(_QWORD *)(a2 + v360);
          v362 = v361 + 1;
          if (v361 == -1 || v362 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v363 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v361);
            *(_QWORD *)(a2 + v360) = v362;
            v19 |= (unint64_t)(v363 & 0x7F) << v358;
            if (v363 < 0)
            {
              v358 += 7;
              v14 = v359++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_864;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_864:
        v520 = 368;
        goto LABEL_950;
      case 0x54u:
        *(_QWORD *)(a1 + 812) |= 0x200uLL;
        v364 = *v3;
        v365 = *(_QWORD *)(a2 + v364);
        if (v365 <= 0xFFFFFFFFFFFFFFF7 && v365 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v365);
          *(_QWORD *)(a2 + v364) = v365 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 80;
        goto LABEL_984;
      case 0x55u:
        v367 = 0;
        v368 = 0;
        v369 = 0;
        v370 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v370;
        while (2)
        {
          v371 = *v3;
          v372 = *(_QWORD *)(a2 + v371);
          v373 = v372 + 1;
          if (v372 == -1 || v373 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v374 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v372);
            *(_QWORD *)(a2 + v371) = v373;
            v369 |= (unint64_t)(v374 & 0x7F) << v367;
            if (v374 < 0)
            {
              v367 += 7;
              v14 = v368++ >= 9;
              if (v14)
              {
                v369 = 0;
                goto LABEL_868;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v369 = 0;
LABEL_868:
        v521 = v369 != 0;
        v522 = 804;
        goto LABEL_959;
      case 0x56u:
        v375 = 0;
        v376 = 0;
        v377 = 0;
        *(_WORD *)(a1 + 820) |= 0x800u;
        while (2)
        {
          v378 = *v3;
          v379 = *(_QWORD *)(a2 + v378);
          v380 = v379 + 1;
          if (v379 == -1 || v380 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v381 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v379);
            *(_QWORD *)(a2 + v378) = v380;
            v377 |= (unint64_t)(v381 & 0x7F) << v375;
            if (v381 < 0)
            {
              v375 += 7;
              v14 = v376++ >= 9;
              if (v14)
              {
                v377 = 0;
                goto LABEL_872;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v377 = 0;
LABEL_872:
        v521 = v377 != 0;
        v522 = 798;
        goto LABEL_959;
      case 0x57u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 512;
        goto LABEL_636;
      case 0x58u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 576;
        goto LABEL_636;
      case 0x59u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 144;
        goto LABEL_636;
      case 0x5Au:
        v382 = 0;
        v383 = 0;
        v384 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000000000;
        while (2)
        {
          v385 = *v3;
          v386 = *(_QWORD *)(a2 + v385);
          v387 = v386 + 1;
          if (v386 == -1 || v387 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v388 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v386);
            *(_QWORD *)(a2 + v385) = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              v14 = v383++ >= 9;
              if (v14)
              {
                v384 = 0;
                goto LABEL_876;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v384 = 0;
LABEL_876:
        v521 = v384 != 0;
        v522 = 786;
        goto LABEL_959;
      case 0x5Bu:
        v130 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 768), v130);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x5Cu:
        v389 = 0;
        v390 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000uLL;
        while (2)
        {
          v391 = *v3;
          v392 = *(_QWORD *)(a2 + v391);
          v393 = v392 + 1;
          if (v392 == -1 || v393 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v394 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v392);
            *(_QWORD *)(a2 + v391) = v393;
            v168 |= (unint64_t)(v394 & 0x7F) << v389;
            if (v394 < 0)
            {
              v389 += 7;
              v14 = v390++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_880;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_880:
        v523 = 104;
        goto LABEL_893;
      case 0x5Du:
        v395 = 0;
        v396 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 8uLL;
        while (2)
        {
          v397 = *v3;
          v398 = *(_QWORD *)(a2 + v397);
          v399 = v398 + 1;
          if (v398 == -1 || v399 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v400 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v398);
            *(_QWORD *)(a2 + v397) = v399;
            v168 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              v14 = v396++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_884;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_884:
        v523 = 32;
        goto LABEL_893;
      case 0x5Eu:
        v401 = 0;
        v402 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000uLL;
        while (2)
        {
          v403 = *v3;
          v404 = *(_QWORD *)(a2 + v403);
          v405 = v404 + 1;
          if (v404 == -1 || v405 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v406 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v404);
            *(_QWORD *)(a2 + v403) = v405;
            v19 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              v14 = v402++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_888;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_888:
        v520 = 320;
        goto LABEL_950;
      case 0x5Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 400;
        goto LABEL_636;
      case 0x60u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 416;
        goto LABEL_636;
      case 0x61u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 392;
        goto LABEL_636;
      case 0x62u:
        v407 = 0;
        v408 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800uLL;
        while (2)
        {
          v409 = *v3;
          v410 = *(_QWORD *)(a2 + v409);
          v411 = v410 + 1;
          if (v410 == -1 || v411 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v412 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v410);
            *(_QWORD *)(a2 + v409) = v411;
            v168 |= (unint64_t)(v412 & 0x7F) << v407;
            if (v412 < 0)
            {
              v407 += 7;
              v14 = v408++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_892;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_892:
        v523 = 96;
LABEL_893:
        *(_QWORD *)(a1 + v523) = v168;
        goto LABEL_985;
      case 0x63u:
        v413 = 0;
        v414 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000uLL;
        while (2)
        {
          v415 = *v3;
          v416 = *(_QWORD *)(a2 + v415);
          v417 = v416 + 1;
          if (v416 == -1 || v417 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v418 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v416);
            *(_QWORD *)(a2 + v415) = v417;
            v19 |= (unint64_t)(v418 & 0x7F) << v413;
            if (v418 < 0)
            {
              v413 += 7;
              v14 = v414++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_897;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_897:
        v520 = 360;
        goto LABEL_950;
      case 0x64u:
        v419 = 0;
        v420 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000uLL;
        while (2)
        {
          v421 = *v3;
          v422 = *(_QWORD *)(a2 + v421);
          v423 = v422 + 1;
          if (v422 == -1 || v423 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v424 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v422);
            *(_QWORD *)(a2 + v421) = v423;
            v19 |= (unint64_t)(v424 & 0x7F) << v419;
            if (v424 < 0)
            {
              v419 += 7;
              v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_901;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_901:
        v520 = 296;
        goto LABEL_950;
      case 0x65u:
        *(_QWORD *)(a1 + 812) |= 0x40uLL;
        v425 = *v3;
        v426 = *(_QWORD *)(a2 + v425);
        if (v426 <= 0xFFFFFFFFFFFFFFF7 && v426 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v426);
          *(_QWORD *)(a2 + v425) = v426 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 56;
        goto LABEL_984;
      case 0x66u:
        *(_QWORD *)(a1 + 812) |= 0x100uLL;
        v427 = *v3;
        v428 = *(_QWORD *)(a2 + v427);
        if (v428 <= 0xFFFFFFFFFFFFFFF7 && v428 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v428);
          *(_QWORD *)(a2 + v427) = v428 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 72;
        goto LABEL_984;
      case 0x67u:
        *(_QWORD *)(a1 + 812) |= 4uLL;
        v429 = *v3;
        v430 = *(_QWORD *)(a2 + v429);
        if (v430 <= 0xFFFFFFFFFFFFFFF7 && v430 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v430);
          *(_QWORD *)(a2 + v429) = v430 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 24;
        goto LABEL_984;
      case 0x68u:
        *(_QWORD *)(a1 + 812) |= 0x10uLL;
        v431 = *v3;
        v432 = *(_QWORD *)(a2 + v431);
        if (v432 <= 0xFFFFFFFFFFFFFFF7 && v432 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v432);
          *(_QWORD *)(a2 + v431) = v432 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 40;
        goto LABEL_984;
      case 0x69u:
        *(_QWORD *)(a1 + 812) |= 0x80uLL;
        v433 = *v3;
        v434 = *(_QWORD *)(a2 + v433);
        if (v434 <= 0xFFFFFFFFFFFFFFF7 && v434 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v434);
          *(_QWORD *)(a2 + v433) = v434 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 64;
        goto LABEL_984;
      case 0x6Au:
        *(_QWORD *)(a1 + 812) |= 0x4000uLL;
        v435 = *v3;
        v436 = *(_QWORD *)(a2 + v435);
        if (v436 <= 0xFFFFFFFFFFFFFFF7 && v436 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v436);
          *(_QWORD *)(a2 + v435) = v436 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 120;
        goto LABEL_984;
      case 0x6Bu:
        *(_QWORD *)(a1 + 812) |= 2uLL;
        v437 = *v3;
        v438 = *(_QWORD *)(a2 + v437);
        if (v438 <= 0xFFFFFFFFFFFFFFF7 && v438 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v438);
          *(_QWORD *)(a2 + v437) = v438 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 16;
        goto LABEL_984;
      case 0x6Cu:
        *(_QWORD *)(a1 + 812) |= 1uLL;
        v439 = *v3;
        v440 = *(_QWORD *)(a2 + v439);
        if (v440 <= 0xFFFFFFFFFFFFFFF7 && v440 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v440);
          *(_QWORD *)(a2 + v439) = v440 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 8;
        goto LABEL_984;
      case 0x6Du:
        *(_QWORD *)(a1 + 812) |= 0x20uLL;
        v441 = *v3;
        v442 = *(_QWORD *)(a2 + v441);
        if (v442 <= 0xFFFFFFFFFFFFFFF7 && v442 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v442);
          *(_QWORD *)(a2 + v441) = v442 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 48;
        goto LABEL_984;
      case 0x6Eu:
        v443 = 0;
        v444 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000000uLL;
        while (2)
        {
          v445 = *v3;
          v446 = *(_QWORD *)(a2 + v445);
          v447 = v446 + 1;
          if (v446 == -1 || v447 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v448 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v446);
            *(_QWORD *)(a2 + v445) = v447;
            v19 |= (unint64_t)(v448 & 0x7F) << v443;
            if (v448 < 0)
            {
              v443 += 7;
              v14 = v444++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_905;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_905:
        v520 = 476;
        goto LABEL_950;
      case 0x6Fu:
        v449 = 0;
        v450 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000000uLL;
        while (2)
        {
          v451 = *v3;
          v452 = *(_QWORD *)(a2 + v451);
          if (v452 == -1 || v452 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v453 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v452);
            *(_QWORD *)(a2 + v451) = v452 + 1;
            v19 |= (unint64_t)(v453 & 0x7F) << v449;
            if (v453 < 0)
            {
              v449 += 7;
              v14 = v450++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_909;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_909:
        v520 = 496;
        goto LABEL_950;
      case 0x70u:
        v454 = 0;
        v455 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000000uLL;
        while (2)
        {
          v456 = *v3;
          v457 = *(_QWORD *)(a2 + v456);
          if (v457 == -1 || v457 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v458 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v457);
            *(_QWORD *)(a2 + v456) = v457 + 1;
            v19 |= (unint64_t)(v458 & 0x7F) << v454;
            if (v458 < 0)
            {
              v454 += 7;
              v14 = v455++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_913;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_913:
        v520 = 488;
        goto LABEL_950;
      case 0x71u:
        v459 = 0;
        v460 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000000uLL;
        while (2)
        {
          v461 = *v3;
          v462 = *(_QWORD *)(a2 + v461);
          if (v462 == -1 || v462 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v463 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v462);
            *(_QWORD *)(a2 + v461) = v462 + 1;
            v19 |= (unint64_t)(v463 & 0x7F) << v459;
            if (v463 < 0)
            {
              v459 += 7;
              v14 = v460++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_917;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_917:
        v520 = 492;
        goto LABEL_950;
      case 0x72u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 480;
        goto LABEL_636;
      case 0x73u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 584;
        goto LABEL_636;
      case 0x74u:
        v464 = 0;
        v465 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000000uLL;
        while (2)
        {
          v466 = *v3;
          v467 = *(_QWORD *)(a2 + v466);
          if (v467 == -1 || v467 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v468 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v467);
            *(_QWORD *)(a2 + v466) = v467 + 1;
            v19 |= (unint64_t)(v468 & 0x7F) << v464;
            if (v468 < 0)
            {
              v464 += 7;
              v14 = v465++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_921;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_921:
        v520 = 592;
        goto LABEL_950;
      case 0x75u:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addSurfacedByTagIds:", v130);
        goto LABEL_656;
      case 0x76u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 408;
        goto LABEL_636;
      case 0x77u:
        v469 = 0;
        v470 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000uLL;
        while (2)
        {
          v471 = *v3;
          v472 = *(_QWORD *)(a2 + v471);
          if (v472 == -1 || v472 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v473 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v472);
            *(_QWORD *)(a2 + v471) = v472 + 1;
            v19 |= (unint64_t)(v473 & 0x7F) << v469;
            if (v473 < 0)
            {
              v469 += 7;
              v14 = v470++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_925;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_925:
        v520 = 272;
        goto LABEL_950;
      case 0x78u:
        v474 = 0;
        v475 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000uLL;
        while (2)
        {
          v476 = *v3;
          v477 = *(_QWORD *)(a2 + v476);
          if (v477 == -1 || v477 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v478 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v477);
            *(_QWORD *)(a2 + v476) = v477 + 1;
            v19 |= (unint64_t)(v478 & 0x7F) << v474;
            if (v478 < 0)
            {
              v474 += 7;
              v14 = v475++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_929;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_929:
        v520 = 364;
        goto LABEL_950;
      case 0x79u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 288;
        goto LABEL_636;
      case 0x7Au:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 376;
        goto LABEL_636;
      case 0x7Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 280;
        goto LABEL_636;
      case 0x7Cu:
        v479 = 0;
        v480 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000uLL;
        while (2)
        {
          v481 = *v3;
          v482 = *(_QWORD *)(a2 + v481);
          if (v482 == -1 || v482 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v483 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v482);
            *(_QWORD *)(a2 + v481) = v482 + 1;
            v19 |= (unint64_t)(v483 & 0x7F) << v479;
            if (v483 < 0)
            {
              v479 += 7;
              v14 = v480++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_933;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_933:
        v520 = 176;
        goto LABEL_950;
      case 0x7Du:
        v484 = 0;
        v485 = 0;
        v486 = 0;
        *(_WORD *)(a1 + 820) |= 2u;
        while (2)
        {
          v487 = *v3;
          v488 = *(_QWORD *)(a2 + v487);
          if (v488 == -1 || v488 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v489 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v488);
            *(_QWORD *)(a2 + v487) = v488 + 1;
            v486 |= (unint64_t)(v489 & 0x7F) << v484;
            if (v489 < 0)
            {
              v484 += 7;
              v14 = v485++ >= 9;
              if (v14)
              {
                v486 = 0;
                goto LABEL_937;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v486 = 0;
LABEL_937:
        v521 = v486 != 0;
        v522 = 788;
        goto LABEL_959;
      case 0x7Eu:
        *(_QWORD *)(a1 + 812) |= 0x2000uLL;
        v490 = *v3;
        v491 = *(_QWORD *)(a2 + v490);
        if (v491 <= 0xFFFFFFFFFFFFFFF7 && v491 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v491);
          *(_QWORD *)(a2 + v490) = v491 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 112;
LABEL_984:
        *(_QWORD *)(a1 + v524) = v366;
        goto LABEL_985;
      case 0x7Fu:
        v130 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 136), v130);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v130, a2))
          goto LABEL_987;
        goto LABEL_655;
      case 0x80u:
        v492 = 0;
        v493 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000000000uLL;
        while (2)
        {
          v494 = *v3;
          v495 = *(_QWORD *)(a2 + v494);
          if (v495 == -1 || v495 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v496 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v495);
            *(_QWORD *)(a2 + v494) = v495 + 1;
            v19 |= (unint64_t)(v496 & 0x7F) << v492;
            if (v496 < 0)
            {
              v492 += 7;
              v14 = v493++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_941;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_941:
        v520 = 608;
        goto LABEL_950;
      case 0x81u:
        v130 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 424), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x82u:
        v130 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 432), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x83u:
        v130 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 448), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x84u:
        v497 = 0;
        v498 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000000000000uLL;
        while (2)
        {
          v499 = *v3;
          v500 = *(_QWORD *)(a2 + v499);
          if (v500 == -1 || v500 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v501 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v500);
            *(_QWORD *)(a2 + v499) = v500 + 1;
            v19 |= (unint64_t)(v501 & 0x7F) << v497;
            if (v501 < 0)
            {
              v497 += 7;
              v14 = v498++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_945;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_945:
        v520 = 640;
        goto LABEL_950;
      case 0x85u:
        v130 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 232), v130);
        if (!PBReaderPlaceMark() || (NTPBChannelDataReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x86u:
        v130 = objc_alloc_init(NTPBIssueViewContextData);
        objc_storeStrong((id *)(a1 + 440), v130);
        if (!PBReaderPlaceMark() || (NTPBIssueViewContextDataReadFrom((uint64_t)v130, a2) & 1) == 0)
          goto LABEL_987;
        goto LABEL_655;
      case 0x87u:
        v502 = 0;
        v503 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000uLL;
        while (2)
        {
          v504 = *v3;
          v505 = *(_QWORD *)(a2 + v504);
          if (v505 == -1 || v505 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v506 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v505);
            *(_QWORD *)(a2 + v504) = v505 + 1;
            v19 |= (unint64_t)(v506 & 0x7F) << v502;
            if (v506 < 0)
            {
              v502 += 7;
              v14 = v503++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_949;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_949:
        v520 = 384;
LABEL_950:
        *(_DWORD *)(a1 + v520) = v19;
        goto LABEL_985;
      case 0x88u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 752;
        goto LABEL_636;
      case 0x89u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 264;
LABEL_636:
        v507 = *(void **)(a1 + v25);
        *(_QWORD *)(a1 + v25) = v24;

        goto LABEL_985;
      case 0x8Au:
        v508 = 0;
        v509 = 0;
        v510 = 0;
        *(_WORD *)(a1 + 820) |= 8u;
        while (2)
        {
          v511 = *v3;
          v512 = *(_QWORD *)(a2 + v511);
          if (v512 == -1 || v512 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v513 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v512);
            *(_QWORD *)(a2 + v511) = v512 + 1;
            v510 |= (unint64_t)(v513 & 0x7F) << v508;
            if (v513 < 0)
            {
              v508 += 7;
              v14 = v509++ >= 9;
              if (v14)
              {
                v510 = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v510 = 0;
LABEL_954:
        v521 = v510 != 0;
        v522 = 790;
        goto LABEL_959;
      case 0x8Bu:
        v514 = 0;
        v515 = 0;
        v516 = 0;
        *(_WORD *)(a1 + 820) |= 0x10u;
        while (2)
        {
          v517 = *v3;
          v518 = *(_QWORD *)(a2 + v517);
          if (v518 == -1 || v518 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v519 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v518);
            *(_QWORD *)(a2 + v517) = v518 + 1;
            v516 |= (unint64_t)(v519 & 0x7F) << v514;
            if (v519 < 0)
            {
              v514 += 7;
              v14 = v515++ >= 9;
              if (v14)
              {
                v516 = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v516 = 0;
LABEL_958:
        v521 = v516 != 0;
        v522 = 791;
LABEL_959:
        *(_BYTE *)(a1 + v522) = v521;
        goto LABEL_985;
      case 0x8Cu:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addTopicIds:", v130);
        goto LABEL_656;
      case 0x8Du:
        v130 = objc_alloc_init(NTPBPurchaseOffersItem);
        objc_msgSend((id)a1, "addPurchaseOffersItem:", v130);
        if (PBReaderPlaceMark() && (NTPBPurchaseOffersItemReadFrom((uint64_t)v130, a2) & 1) != 0)
        {
LABEL_655:
          PBReaderRecallMark();
LABEL_656:

LABEL_985:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_987:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_985;
    }
  }
}

uint64_t NTPBDeviceInfoReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int *v28;
  int *v29;
  void *v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = &OBJC_IVAR___NTPBArticleHostViewExposure__moduleItemPosition;
    v8 = &OBJC_IVAR___NTPBArticleHostViewExposure__moduleItemPosition;
    v9 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v3;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v16 = v11++ >= 9;
        if (v16)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = v7[31];
          goto LABEL_51;
        case 2u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = v8[32];
          goto LABEL_51;
        case 3u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 72;
          goto LABEL_51;
        case 4u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          a1[96] |= 8u;
          while (2)
          {
            v25 = *v3;
            v26 = *(_QWORD *)(a2 + v25);
            if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v26);
              *(_QWORD *)(a2 + v25) = v26 + 1;
              v24 |= (unint64_t)(v27 & 0x7F) << v22;
              if (v27 < 0)
              {
                v22 += 7;
                v16 = v23++ >= 9;
                if (v16)
                {
                  LODWORD(v24) = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v24) = 0;
LABEL_62:
          v48 = 80;
          goto LABEL_76;
        case 5u:
          v28 = v8;
          v29 = v7;
          PBReaderReadString();
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          if (v30)
            objc_msgSend(a1, "addDevicePreferredLanguage:", v30);

          v7 = v29;
          v8 = v28;
          continue;
        case 6u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 48;
          goto LABEL_51;
        case 7u:
          v31 = 0;
          v32 = 0;
          v33 = 0;
          a1[96] |= 2u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                v16 = v32++ >= 9;
                if (v16)
                {
                  v33 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v33 = 0;
LABEL_66:
          v49 = 16;
          goto LABEL_71;
        case 8u:
          v37 = 0;
          v38 = 0;
          v33 = 0;
          a1[96] |= 1u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v33 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v16 = v38++ >= 9;
                if (v16)
                {
                  v33 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v33 = 0;
LABEL_70:
          v49 = 8;
LABEL_71:
          *(_QWORD *)&a1[v49] = v33;
          continue;
        case 9u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 32;
          goto LABEL_51;
        case 0xAu:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 24;
LABEL_51:
          v42 = *(void **)&a1[v20];
          *(_QWORD *)&a1[v20] = v19;

          continue;
        case 0xBu:
          v43 = 0;
          v44 = 0;
          v24 = 0;
          a1[96] |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v45 = *v3;
        v46 = *(_QWORD *)(a2 + v45);
        if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          break;
        v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
        *(_QWORD *)(a2 + v45) = v46 + 1;
        v24 |= (unint64_t)(v47 & 0x7F) << v43;
        if ((v47 & 0x80) == 0)
          goto LABEL_73;
        v43 += 7;
        v16 = v44++ >= 9;
        if (v16)
        {
          LODWORD(v24) = 0;
          goto LABEL_75;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_73:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v24) = 0;
LABEL_75:
      v48 = 40;
LABEL_76:
      *(_DWORD *)&a1[v48] = v24;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *String;
  id v19;
  uint64_t v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t result;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  void *v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  char v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  void *v164;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *v165;
  uint64_t v166;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats *v167;
  uint64_t v168;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata *v169;
  NTPBArticleTopic *v170;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration *v171;
  void *Data;
  void *v173;
  void *v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  NTPBScoreProfiles *v220;
  uint64_t v221;
  BOOL v222;
  uint64_t v223;
  uint64_t v224;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] >= *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
    return a2[*v5] == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (a2[*v5])
      return a2[*v5] == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)&a2[v11];
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)&a2[*v4])
        break;
      v14 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
      *(_QWORD *)&a2[v11] = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    v16 = a2[*v5];
    if (a2[*v5])
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return a2[*v5] == 0;
    switch((v10 >> 3))
    {
      case 0u:
        String = (void *)PBReaderReadString();

        v19 = String;
        v20 = 120;
        goto LABEL_194;
      case 1u:
        v21 = (void *)PBReaderReadString();

        v19 = v21;
        v20 = 80;
        goto LABEL_194;
      case 2u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)&a2[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v26);
            *(_QWORD *)&a2[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              v15 = v23++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_248:
        v221 = 56;
        goto LABEL_301;
      case 3u:
        v29 = 0;
        v30 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)&a2[v31];
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v32);
            *(_QWORD *)&a2[v31] = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_252:
        v221 = 64;
        goto LABEL_301;
      case 4u:
        v35 = 0;
        v36 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 8u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)&a2[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v38);
            *(_QWORD *)&a2[v37] = v39;
            v24 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_256:
        v221 = 32;
        goto LABEL_301;
      case 5u:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        v41 = *v3;
        v42 = *(_QWORD *)&a2[v41];
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v43 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v42);
          *(_QWORD *)&a2[v41] = v42 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v43 = 0;
        }
        v224 = 40;
        goto LABEL_357;
      case 6u:
        v44 = (void *)PBReaderReadString();

        v19 = v44;
        v20 = 104;
        goto LABEL_194;
      case 7u:
        v45 = (void *)PBReaderReadString();

        v19 = v45;
        v20 = 192;
        goto LABEL_194;
      case 8u:
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)&a2[v49];
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v50);
            *(_QWORD *)&a2[v49] = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v15 = v47++ >= 9;
              if (v15)
              {
                v48 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v48 = 0;
LABEL_260:
        v222 = v48 != 0;
        v223 = 233;
        goto LABEL_350;
      case 9u:
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)&a2[v56];
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v57);
            *(_QWORD *)&a2[v56] = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v15 = v54++ >= 9;
              if (v15)
              {
                v55 = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v55 = 0;
LABEL_264:
        v222 = v55 != 0;
        v223 = 243;
        goto LABEL_350;
      case 0xAu:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)&a2[v63];
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v64);
            *(_QWORD *)&a2[v63] = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v62 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v62 = 0;
LABEL_268:
        v222 = v62 != 0;
        v223 = 240;
        goto LABEL_350;
      case 0xBu:
        v67 = 0;
        v68 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20u;
        while (2)
        {
          v69 = *v3;
          v70 = *(_QWORD *)&a2[v69];
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v70);
            *(_QWORD *)&a2[v69] = v71;
            v24 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v15 = v68++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_272:
        v221 = 48;
        goto LABEL_301;
      case 0xCu:
        v73 = 0;
        v74 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 4u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)&a2[v75];
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v76);
            *(_QWORD *)&a2[v75] = v77;
            v24 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v15 = v74++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_276:
        v221 = 24;
        goto LABEL_301;
      case 0xDu:
        v79 = PBReaderReadString();
        if (v79)
          objc_msgSend((id)a1, "addTopicIDs:", v79);
        goto LABEL_351;
      case 0xEu:
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)&a2[v83];
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v84);
            *(_QWORD *)&a2[v83] = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              v15 = v81++ >= 9;
              if (v15)
              {
                v82 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v82 = 0;
LABEL_280:
        v222 = v82 != 0;
        v223 = 246;
        goto LABEL_350;
      case 0xFu:
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800u;
        while (2)
        {
          v90 = *v3;
          v91 = *(_QWORD *)&a2[v90];
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v91);
            *(_QWORD *)&a2[v90] = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v15 = v88++ >= 9;
              if (v15)
              {
                v89 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v89 = 0;
LABEL_284:
        v222 = v89 != 0;
        v223 = 234;
        goto LABEL_350;
      case 0x10u:
        v94 = 0;
        v95 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100u;
        while (2)
        {
          v96 = *v3;
          v97 = *(_QWORD *)&a2[v96];
          v98 = v97 + 1;
          if (v97 == -1 || v98 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v97);
            *(_QWORD *)&a2[v96] = v98;
            v24 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              v15 = v95++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_288:
        v221 = 72;
        goto LABEL_301;
      case 0x13u:
        v101 = 0;
        v102 = 0;
        v103 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        while (2)
        {
          v104 = *v3;
          v105 = *(_QWORD *)&a2[v104];
          v106 = v105 + 1;
          if (v105 == -1 || v106 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v105);
            *(_QWORD *)&a2[v104] = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              v15 = v102++ >= 9;
              if (v15)
              {
                v103 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v103 = 0;
LABEL_292:
        v222 = v103 != 0;
        v223 = 244;
        goto LABEL_350;
      case 0x14u:
        v108 = (void *)PBReaderReadString();

        v19 = v108;
        v20 = 168;
        goto LABEL_194;
      case 0x15u:
        v109 = 0;
        v110 = 0;
        v111 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        while (2)
        {
          v112 = *v3;
          v113 = *(_QWORD *)&a2[v112];
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v113);
            *(_QWORD *)&a2[v112] = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              v15 = v110++ >= 9;
              if (v15)
              {
                v111 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v111 = 0;
LABEL_296:
        v222 = v111 != 0;
        v223 = 237;
        goto LABEL_350;
      case 0x16u:
        v116 = 0;
        v117 = 0;
        v24 = 0;
        *(_DWORD *)(a1 + 252) |= 1u;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)&a2[v118];
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v119);
            *(_QWORD *)&a2[v118] = v120;
            v24 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              v15 = v117++ >= 9;
              if (v15)
              {
                v24 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v24 = 0;
LABEL_300:
        v221 = 8;
LABEL_301:
        *(_QWORD *)(a1 + v221) = v24;
        goto LABEL_351;
      case 0x17u:
        v122 = 0;
        v123 = 0;
        v124 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        while (2)
        {
          v125 = *v3;
          v126 = *(_QWORD *)&a2[v125];
          v127 = v126 + 1;
          if (v126 == -1 || v127 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v126);
            *(_QWORD *)&a2[v125] = v127;
            v124 |= (unint64_t)(v128 & 0x7F) << v122;
            if (v128 < 0)
            {
              v122 += 7;
              v15 = v123++ >= 9;
              if (v15)
              {
                v124 = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v124 = 0;
LABEL_305:
        v222 = v124 != 0;
        v223 = 242;
        goto LABEL_350;
      case 0x18u:
        v129 = 0;
        v130 = 0;
        v131 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200u;
        while (2)
        {
          v132 = *v3;
          v133 = *(_QWORD *)&a2[v132];
          v134 = v133 + 1;
          if (v133 == -1 || v134 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v135 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v133);
            *(_QWORD *)&a2[v132] = v134;
            v131 |= (unint64_t)(v135 & 0x7F) << v129;
            if (v135 < 0)
            {
              v129 += 7;
              v15 = v130++ >= 9;
              if (v15)
              {
                v131 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v131 = 0;
LABEL_309:
        v222 = v131 != 0;
        v223 = 232;
        goto LABEL_350;
      case 0x19u:
        v136 = 0;
        v137 = 0;
        v138 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        while (2)
        {
          v139 = *v3;
          v140 = *(_QWORD *)&a2[v139];
          v141 = v140 + 1;
          if (v140 == -1 || v141 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v142 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v140);
            *(_QWORD *)&a2[v139] = v141;
            v138 |= (unint64_t)(v142 & 0x7F) << v136;
            if (v142 < 0)
            {
              v136 += 7;
              v15 = v137++ >= 9;
              if (v15)
              {
                v138 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v138 = 0;
LABEL_313:
        v222 = v138 != 0;
        v223 = 241;
        goto LABEL_350;
      case 0x1Au:
        v143 = 0;
        v144 = 0;
        v145 = 0;
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)&a2[v146];
          v148 = v147 + 1;
          if (v147 == -1 || v148 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v149 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v147);
            *(_QWORD *)&a2[v146] = v148;
            v145 |= (unint64_t)(v149 & 0x7F) << v143;
            if (v149 < 0)
            {
              v143 += 7;
              v15 = v144++ >= 9;
              if (v15)
              {
                v145 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v145 = 0;
LABEL_317:
        v222 = v145 != 0;
        v223 = 248;
        goto LABEL_350;
      case 0x1Bu:
        v150 = 0;
        v151 = 0;
        v152 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        while (2)
        {
          v153 = *v3;
          v154 = *(_QWORD *)&a2[v153];
          v155 = v154 + 1;
          if (v154 == -1 || v155 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v154);
            *(_QWORD *)&a2[v153] = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              v15 = v151++ >= 9;
              if (v15)
              {
                v152 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v152 = 0;
LABEL_321:
        v222 = v152 != 0;
        v223 = 245;
        goto LABEL_350;
      case 0x1Cu:
        v157 = 0;
        v158 = 0;
        v159 = 0;
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        while (2)
        {
          v160 = *v3;
          v161 = *(_QWORD *)&a2[v160];
          v162 = v161 + 1;
          if (v161 == -1 || v162 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v163 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v161);
            *(_QWORD *)&a2[v160] = v162;
            v159 |= (unint64_t)(v163 & 0x7F) << v157;
            if (v163 < 0)
            {
              v157 += 7;
              v15 = v158++ >= 9;
              if (v15)
              {
                v159 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v159 = 0;
LABEL_325:
        v222 = v159 != 0;
        v223 = 239;
        goto LABEL_350;
      case 0x1Du:
        v164 = (void *)PBReaderReadString();

        v19 = v164;
        v20 = 160;
        goto LABEL_194;
      case 0x1Eu:
        v165 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        v166 = 184;
        goto LABEL_174;
      case 0x1Fu:
        v165 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);

        v166 = 144;
LABEL_174:
        *(_QWORD *)(a1 + v166) = v165;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v165, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x20u:
        v167 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        v168 = 88;
        goto LABEL_179;
      case 0x21u:
        v167 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats);

        v168 = 152;
LABEL_179:
        *(_QWORD *)(a1 + v168) = v167;
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStatsReadFrom((uint64_t)v167, (uint64_t)a2))
        {
          return 0;
        }
        goto LABEL_244;
      case 0x22u:
        v169 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata);

        *(_QWORD *)(a1 + 96) = v169;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadataReadFrom((uint64_t)v169, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x23u:
        v170 = objc_alloc_init(NTPBArticleTopic);
        objc_msgSend((id)a1, "addTopics:", v170);

        if (!PBReaderPlaceMark() || (NTPBArticleTopicReadFrom((uint64_t)v170, (uint64_t)a2) & 1) == 0)
          return 0;
        goto LABEL_244;
      case 0x24u:
        v171 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpiration);

        *(_QWORD *)(a1 + 112) = v171;
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleContentExpirationReadFrom((uint64_t)v171, (uint64_t)a2) & 1) == 0)
        {
          return 0;
        }
        goto LABEL_244;
      case 0x26u:
        Data = (void *)PBReaderReadData();

        v19 = Data;
        v20 = 136;
        goto LABEL_194;
      case 0x27u:
        v173 = (void *)PBReaderReadData();

        v19 = v173;
        v20 = 128;
        goto LABEL_194;
      case 0x28u:
        v174 = (void *)PBReaderReadData();

        v19 = v174;
        v20 = 208;
LABEL_194:
        *(_QWORD *)(a1 + v20) = v19;
        goto LABEL_351;
      case 0x29u:
        v175 = 0;
        v176 = 0;
        v177 = 0;
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        while (2)
        {
          v178 = *v3;
          v179 = *(_QWORD *)&a2[v178];
          v180 = v179 + 1;
          if (v179 == -1 || v180 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v181 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v179);
            *(_QWORD *)&a2[v178] = v180;
            v177 |= (unint64_t)(v181 & 0x7F) << v175;
            if (v181 < 0)
            {
              v175 += 7;
              v15 = v176++ >= 9;
              if (v15)
              {
                v177 = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v177 = 0;
LABEL_329:
        v222 = v177 != 0;
        v223 = 247;
        goto LABEL_350;
      case 0x2Au:
        v182 = 0;
        v183 = 0;
        v184 = 0;
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        while (2)
        {
          v185 = *v3;
          v186 = *(_QWORD *)&a2[v185];
          v187 = v186 + 1;
          if (v186 == -1 || v187 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v188 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v186);
            *(_QWORD *)&a2[v185] = v187;
            v184 |= (unint64_t)(v188 & 0x7F) << v182;
            if (v188 < 0)
            {
              v182 += 7;
              v15 = v183++ >= 9;
              if (v15)
              {
                v184 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v184 = 0;
LABEL_333:
        v222 = v184 != 0;
        v223 = 235;
        goto LABEL_350;
      case 0x2Bu:
        v189 = 0;
        v190 = 0;
        v191 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        while (2)
        {
          v192 = *v3;
          v193 = *(_QWORD *)&a2[v192];
          v194 = v193 + 1;
          if (v193 == -1 || v194 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v195 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v193);
            *(_QWORD *)&a2[v192] = v194;
            v191 |= (unint64_t)(v195 & 0x7F) << v189;
            if (v195 < 0)
            {
              v189 += 7;
              v15 = v190++ >= 9;
              if (v15)
              {
                v191 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v191 = 0;
LABEL_337:
        v222 = v191 != 0;
        v223 = 250;
        goto LABEL_350;
      case 0x2Cu:
        v196 = 0;
        v197 = 0;
        v198 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        while (2)
        {
          v199 = *v3;
          v200 = *(_QWORD *)&a2[v199];
          v201 = v200 + 1;
          if (v200 == -1 || v201 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v202 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v200);
            *(_QWORD *)&a2[v199] = v201;
            v198 |= (unint64_t)(v202 & 0x7F) << v196;
            if (v202 < 0)
            {
              v196 += 7;
              v15 = v197++ >= 9;
              if (v15)
              {
                v198 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v198 = 0;
LABEL_341:
        v222 = v198 != 0;
        v223 = 249;
        goto LABEL_350;
      case 0x2Du:
        v203 = PBReaderReadString();
        if (v203)
          objc_msgSend((id)a1, "addSurfacedByArticleListID2:", v203);
        goto LABEL_351;
      case 0x2Eu:
        *(_DWORD *)(a1 + 252) |= 2u;
        v204 = *v3;
        v205 = *(_QWORD *)&a2[v204];
        if (v205 <= 0xFFFFFFFFFFFFFFF7 && v205 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v43 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v205);
          *(_QWORD *)&a2[v204] = v205 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v43 = 0;
        }
        v224 = 16;
LABEL_357:
        *(_QWORD *)(a1 + v224) = v43;
        goto LABEL_351;
      case 0x2Fu:
        v206 = 0;
        v207 = 0;
        v208 = 0;
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        while (2)
        {
          v209 = *v3;
          v210 = *(_QWORD *)&a2[v209];
          v211 = v210 + 1;
          if (v210 == -1 || v211 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v212 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v210);
            *(_QWORD *)&a2[v209] = v211;
            v208 |= (unint64_t)(v212 & 0x7F) << v206;
            if (v212 < 0)
            {
              v206 += 7;
              v15 = v207++ >= 9;
              if (v15)
              {
                v208 = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v208 = 0;
LABEL_345:
        v222 = v208 != 0;
        v223 = 236;
        goto LABEL_350;
      case 0x30u:
        v213 = 0;
        v214 = 0;
        v215 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        while (2)
        {
          v216 = *v3;
          v217 = *(_QWORD *)&a2[v216];
          v218 = v217 + 1;
          if (v217 == -1 || v218 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v219 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v217);
            *(_QWORD *)&a2[v216] = v218;
            v215 |= (unint64_t)(v219 & 0x7F) << v213;
            if (v219 < 0)
            {
              v213 += 7;
              v15 = v214++ >= 9;
              if (v15)
              {
                v215 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v215 = 0;
LABEL_349:
        v222 = v215 != 0;
        v223 = 238;
LABEL_350:
        *(_BYTE *)(a1 + v223) = v222;
        goto LABEL_351;
      case 0x64u:
        v220 = objc_alloc_init(NTPBScoreProfiles);

        *(_QWORD *)(a1 + 176) = v220;
        if (PBReaderPlaceMark() && (NTPBScoreProfilesReadFrom((uint64_t)v220, a2) & 1) != 0)
        {
LABEL_244:
          PBReaderRecallMark();
LABEL_351:
          if (*(_QWORD *)&a2[*v3] >= *(_QWORD *)&a2[*v4])
            return a2[*v5] == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_351;
    }
  }
}

BOOL NTPBRestorePaidSubscriptionReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBRestorePaidSubscriptionItem *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = (NTPBRestorePaidSubscriptionItem *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addRestoredPaidSubscriptionChannelIds:", v17);
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = objc_alloc_init(NTPBRestorePaidSubscriptionItem);
    objc_msgSend(a1, "addItems:", v17);
    if (!PBReaderPlaceMark() || (NTPBRestorePaidSubscriptionItemReadFrom((uint64_t)v17, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_25;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBEventObjectReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBUserOnboardingBegin *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBUserOnboardingBegin);
        objc_storeStrong(a1 + 96, v17);
        if (PBReaderPlaceMark() && NTPBUserOnboardingBeginReadFrom((uint64_t)v17, a2))
          goto LABEL_326;
        goto LABEL_330;
      case 2u:
        v17 = objc_alloc_init(NTPBUserOnboardingResume);
        objc_storeStrong(a1 + 99, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingResumeReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 3u:
        v17 = objc_alloc_init(NTPBUserOnboardingResult);
        objc_storeStrong(a1 + 98, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingResultReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 4u:
        v17 = objc_alloc_init(NTPBAppSessionStart);
        objc_storeStrong(a1 + 12, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionStartReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 5u:
        v17 = objc_alloc_init(NTPBAppSessionEnd);
        objc_storeStrong(a1 + 8, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionEndReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 6u:
        v17 = objc_alloc_init(NTPBArticleScroll);
        objc_storeStrong(a1 + 19, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleScrollReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 7u:
        v17 = objc_alloc_init(NTPBArticleHostViewExposure);
        objc_storeStrong(a1 + 17, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleHostViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 8u:
        v17 = objc_alloc_init(NTPBArticleLikeDislike);
        objc_storeStrong(a1 + 18, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleLikeDislikeReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 9u:
        v17 = objc_alloc_init(NTPBFeedCellExposure);
        objc_storeStrong(a1 + 38, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedCellExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xAu:
        v17 = objc_alloc_init(NTPBFeedViewExposure);
        objc_storeStrong(a1 + 43, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xBu:
        v17 = objc_alloc_init(NTPBFeedCellHostViewExposure);
        objc_storeStrong(a1 + 39, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedCellHostViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xCu:
        v17 = objc_alloc_init(NTPBFeedSubscribeUnsubscribe);
        objc_storeStrong(a1 + 42, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedSubscribeUnsubscribeReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xDu:
        v17 = objc_alloc_init(NTPBMediaExposure);
        objc_storeStrong(a1 + 55, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xEu:
        v17 = objc_alloc_init(NTPBMediaView);
        objc_storeStrong(a1 + 56, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0xFu:
        v17 = objc_alloc_init(NTPBMediaEngage);
        objc_storeStrong(a1 + 53, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaEngageReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x10u:
        v17 = objc_alloc_init(NTPBMediaEngageComplete);
        objc_storeStrong(a1 + 54, v17);
        if (!PBReaderPlaceMark() || (NTPBMediaEngageCompleteReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x11u:
        v17 = objc_alloc_init(NTPBSearchBegin);
        objc_storeStrong(a1 + 74, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchBeginReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x12u:
        v17 = objc_alloc_init(NTPBSearchExecute);
        objc_storeStrong(a1 + 75, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchExecuteReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x13u:
        v17 = objc_alloc_init(NTPBSearchResultSelect);
        objc_storeStrong(a1 + 76, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchResultSelectReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x14u:
        v17 = objc_alloc_init(NTPBShareResult);
        objc_storeStrong(a1 + 79, v17);
        if (!PBReaderPlaceMark() || (NTPBShareResultReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x16u:
        v17 = objc_alloc_init(NTPBNoUserAction);
        objc_storeStrong(a1 + 57, v17);
        if (!PBReaderPlaceMark() || (NTPBNoUserActionReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x17u:
        v17 = objc_alloc_init(NTPBReadingListAddRemove);
        objc_storeStrong(a1 + 69, v17);
        if (!PBReaderPlaceMark() || (NTPBReadingListAddRemoveReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x18u:
        v17 = objc_alloc_init(NTPBReadingListShow);
        objc_storeStrong(a1 + 70, v17);
        if (!PBReaderPlaceMark() || (NTPBReadingListShowReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x19u:
        v17 = objc_alloc_init(NTPBRecommendationBrickExposure);
        objc_storeStrong(a1 + 71, v17);
        if (!PBReaderPlaceMark() || (NTPBRecommendationBrickExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x1Bu:
        v17 = objc_alloc_init(NTPBEndOfArticleExposure);
        objc_storeStrong(a1 + 36, v17);
        if (!PBReaderPlaceMark() || (NTPBEndOfArticleExposureReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x1Cu:
        v17 = objc_alloc_init(NTPBReportConcernSubmission);
        objc_storeStrong(a1 + 72, v17);
        if (!PBReaderPlaceMark() || !NTPBReportConcernSubmissionReadFrom((uint64_t)v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x1Du:
        v17 = objc_alloc_init(NTPBLocalNotificationReturn);
        objc_storeStrong(a1 + 52, v17);
        if (!PBReaderPlaceMark() || (NTPBLocalNotificationReturnReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x1Eu:
        v17 = objc_alloc_init(NTPBPullToRefresh);
        objc_storeStrong(a1 + 67, v17);
        if (!PBReaderPlaceMark() || (NTPBPullToRefreshReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x1Fu:
        v17 = objc_alloc_init(NTPBLinkTapArticle);
        objc_storeStrong(a1 + 50, v17);
        if (!PBReaderPlaceMark() || (NTPBLinkTapArticleReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x20u:
        v17 = objc_alloc_init(NTPBLocalNotificationReceived);
        objc_storeStrong(a1 + 51, v17);
        if (!PBReaderPlaceMark() || (NTPBLocalNotificationReceivedReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x21u:
        v17 = objc_alloc_init(NTPBUserOnboardingScreenView);
        objc_storeStrong(a1 + 100, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x22u:
        v17 = objc_alloc_init(NTPBUserOnboardingChannelPickerComplete);
        objc_storeStrong(a1 + 97, v17);
        if (!PBReaderPlaceMark() || (NTPBUserOnboardingChannelPickerCompleteReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x23u:
        v17 = objc_alloc_init(NTPBAdExposureOpportunity);
        objc_storeStrong(a1 + 4, v17);
        if (!PBReaderPlaceMark() || (NTPBAdExposureOpportunityReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x24u:
        v17 = objc_alloc_init(NTPBChannelMuteUnmute);
        objc_storeStrong(a1 + 30, v17);
        if (!PBReaderPlaceMark() || (NTPBChannelMuteUnmuteReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x25u:
        v17 = objc_alloc_init(NTPBShareSheetExposure);
        objc_storeStrong(a1 + 80, v17);
        if (!PBReaderPlaceMark() || (NTPBShareSheetExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x26u:
        v17 = objc_alloc_init(NTPBFeedEngagementMenuExposure);
        objc_storeStrong(a1 + 40, v17);
        if (!PBReaderPlaceMark() || (NTPBFeedEngagementMenuExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x27u:
        v17 = objc_alloc_init(NTPBSearchViewExposure);
        objc_storeStrong(a1 + 77, v17);
        if (!PBReaderPlaceMark() || (NTPBSearchViewExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x28u:
        v17 = objc_alloc_init(NTPBGroupViewExposure);
        objc_storeStrong(a1 + 44, v17);
        if (!PBReaderPlaceMark() || (NTPBGroupViewExposureReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x29u:
        v17 = objc_alloc_init(NTPBPaidSubscriptionConversionPointExposure);
        objc_storeStrong(a1 + 61, v17);
        if (!PBReaderPlaceMark()
          || (NTPBPaidSubscriptionConversionPointExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x2Au:
        v17 = objc_alloc_init(NTPBPaidSubscriptionSheetView);
        objc_storeStrong(a1 + 64, v17);
        if (!PBReaderPlaceMark() || (NTPBPaidSubscriptionSheetViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x2Bu:
        v17 = objc_alloc_init(NTPBShareSheetIapFail);
        objc_storeStrong(a1 + 81, v17);
        if (!PBReaderPlaceMark() || (NTPBShareSheetIapFailReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x2Cu:
        v17 = objc_alloc_init(NTPBPaidSubscriptionResult);
        objc_storeStrong(a1 + 62, v17);
        if (!PBReaderPlaceMark() || (NTPBPaidSubscriptionResultReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x2Du:
        v17 = objc_alloc_init(NTPBShareInformationScreenView);
        objc_storeStrong(a1 + 78, v17);
        if (!PBReaderPlaceMark() || (NTPBShareInformationScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x2Eu:
        v17 = objc_alloc_init(NTPBWebAccessScreenView);
        objc_storeStrong(a1 + 101, v17);
        if (!PBReaderPlaceMark() || (NTPBWebAccessScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x2Fu:
        v17 = objc_alloc_init(NTPBAlreadySubscriberSignIn);
        objc_storeStrong(a1 + 6, v17);
        if (!PBReaderPlaceMark() || (NTPBAlreadySubscriberSignInReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x30u:
        v17 = objc_alloc_init(NTPBBackgroundSubscriptionValidation);
        objc_storeStrong(a1 + 27, v17);
        if (!PBReaderPlaceMark()
          || (NTPBBackgroundSubscriptionValidationReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x31u:
        v17 = objc_alloc_init(NTPBSubscriptionDetectionScreenView);
        objc_storeStrong(a1 + 82, v17);
        if (!PBReaderPlaceMark()
          || (NTPBSubscriptionDetectionScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x32u:
        v17 = objc_alloc_init(NTPBCoverArticleWidgetView);
        objc_storeStrong(a1 + 33, v17);
        if (!PBReaderPlaceMark() || (NTPBCoverArticleWidgetViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x33u:
        v17 = objc_alloc_init(NTPBNotificationSubscribeUnsubscribe);
        objc_storeStrong(a1 + 59, v17);
        if (!PBReaderPlaceMark()
          || (NTPBNotificationSubscribeUnsubscribeReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x34u:
        v17 = objc_alloc_init(NTPBNotificationSettingsScreenView);
        objc_storeStrong(a1 + 58, v17);
        if (!PBReaderPlaceMark()
          || (NTPBNotificationSettingsScreenViewReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x35u:
        v17 = objc_alloc_init(NTPBEmailOptInInvite);
        objc_storeStrong(a1 + 35, v17);
        if (!PBReaderPlaceMark() || (NTPBEmailOptInInviteReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x36u:
        v17 = objc_alloc_init(NTPBCoverArticleWidgetExposure);
        objc_storeStrong(a1 + 32, v17);
        if (!PBReaderPlaceMark() || (NTPBCoverArticleWidgetExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x37u:
        v17 = objc_alloc_init(NTPBRestorePaidSubscription);
        objc_storeStrong(a1 + 73, v17);
        if (!PBReaderPlaceMark() || !NTPBRestorePaidSubscriptionReadFrom(v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x38u:
        v17 = objc_alloc_init(NTPBPaidSubscriptionSheetIapFail);
        objc_storeStrong(a1 + 63, v17);
        if (!PBReaderPlaceMark() || !NTPBPaidSubscriptionSheetIapFailReadFrom((uint64_t)v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x39u:
        v17 = objc_alloc_init(NTPBComscoreEventSend);
        objc_storeStrong(a1 + 31, v17);
        if (!PBReaderPlaceMark() || (NTPBComscoreEventSendReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x3Au:
        v17 = objc_alloc_init(NTPBDiscoverMoreInterstitialExposure);
        objc_storeStrong(a1 + 34, v17);
        if (!PBReaderPlaceMark()
          || (NTPBDiscoverMoreInterstitialExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x3Bu:
        v17 = objc_alloc_init(NTPBArticleViewNotw);
        objc_storeStrong(a1 + 23, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleViewNotwReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x3Cu:
        v17 = objc_alloc_init(NTPBArticleScrollNotw);
        objc_storeStrong(a1 + 20, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleScrollNotwReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x3Du:
        v17 = objc_alloc_init(NTPBUrlMappingMiss);
        objc_storeStrong(a1 + 94, v17);
        if (!PBReaderPlaceMark() || !NTPBUrlMappingMissReadFrom((char *)v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x3Eu:
        v17 = objc_alloc_init(NTPBBundleIdMappingMiss);
        objc_storeStrong(a1 + 28, v17);
        if (!PBReaderPlaceMark() || (NTPBBundleIdMappingMissReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x3Fu:
        v17 = objc_alloc_init(NTPBExternalAnalyticsEventSend);
        objc_storeStrong(a1 + 37, v17);
        if (!PBReaderPlaceMark() || (NTPBExternalAnalyticsEventSendReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x40u:
        v17 = objc_alloc_init(NTPBAppSessionStartWatch);
        objc_storeStrong(a1 + 13, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionStartWatchReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x41u:
        v17 = objc_alloc_init(NTPBArticleViewWatch);
        objc_storeStrong(a1 + 24, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleViewWatchReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x42u:
        v17 = objc_alloc_init(NTPBAppSessionEndWatch);
        objc_storeStrong(a1 + 9, v17);
        if (!PBReaderPlaceMark() || (NTPBAppSessionEndWatchReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x43u:
        v17 = objc_alloc_init(NTPBAnfComponentExposure);
        objc_storeStrong(a1 + 7, v17);
        if (!PBReaderPlaceMark() || (NTPBAnfComponentExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x44u:
        v17 = objc_alloc_init(NTPBTodayWidgetSession);
        objc_storeStrong(a1 + 92, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetSessionReadFrom(v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x45u:
        v17 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong(a1 + 102, v17);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x46u:
        v17 = objc_alloc_init(NTPBTodayWidgetHeadlineExposure);
        objc_storeStrong(a1 + 91, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetHeadlineExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x47u:
        v17 = objc_alloc_init(NTPBTodayWidgetExposure);
        objc_storeStrong(a1 + 90, v17);
        if (!PBReaderPlaceMark() || (NTPBTodayWidgetExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x48u:
        v17 = objc_alloc_init(NTPBAdExposureIneligible);
        objc_storeStrong(a1 + 3, v17);
        if (!PBReaderPlaceMark() || (NTPBAdExposureIneligibleReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x49u:
        v17 = objc_alloc_init(NTPBOptInButtonExposure);
        objc_storeStrong(a1 + 60, v17);
        if (!PBReaderPlaceMark() || (NTPBOptInButtonExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x4Au:
        v17 = objc_alloc_init(NTPBSuggestionsFeedback);
        objc_storeStrong(a1 + 83, v17);
        if (!PBReaderPlaceMark() || !NTPBSuggestionsFeedbackReadFrom(v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x4Bu:
        v17 = objc_alloc_init(NTPBUserIgnoreFavoritesSuggestion);
        objc_storeStrong(a1 + 95, v17);
        if (!PBReaderPlaceMark()
          || (NTPBUserIgnoreFavoritesSuggestionReadFrom((uint64_t)v17, a2) & 1) == 0)
        {
          goto LABEL_330;
        }
        goto LABEL_326;
      case 0x4Cu:
        v17 = objc_alloc_init(NTPBArticleEngagement);
        objc_storeStrong(a1 + 15, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleEngagementReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x4Du:
        v17 = objc_alloc_init(NTPBAdImpression);
        objc_storeStrong(a1 + 5, v17);
        if (!PBReaderPlaceMark() || (NTPBAdImpressionReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x4Eu:
        v17 = objc_alloc_init(NTPBAdEngagement);
        objc_storeStrong(a1 + 2, v17);
        if (!PBReaderPlaceMark() || (NTPBAdEngagementReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x4Fu:
        v17 = objc_alloc_init(NTPBAdCtaEngagement);
        objc_storeStrong(a1 + 1, v17);
        if (!PBReaderPlaceMark() || (NTPBAdCtaEngagementReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x50u:
        v17 = objc_alloc_init(NTPBLinkTap);
        objc_storeStrong(a1 + 49, v17);
        if (!PBReaderPlaceMark() || (NTPBLinkTapReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x51u:
        v17 = objc_alloc_init(NTPBTopOfFeedModuleExposure);
        objc_storeStrong(a1 + 93, v17);
        if (!PBReaderPlaceMark() || (NTPBTopOfFeedModuleExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x52u:
        v17 = objc_alloc_init(NTPBInAppWebEmbedExposure);
        objc_storeStrong(a1 + 45, v17);
        if (!PBReaderPlaceMark() || (NTPBInAppWebEmbedExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x53u:
        v17 = objc_alloc_init(NTPBTocExposure);
        objc_storeStrong(a1 + 86, v17);
        if (!PBReaderPlaceMark() || (NTPBTocExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x54u:
        v17 = objc_alloc_init(NTPBTocReorder);
        objc_storeStrong(a1 + 88, v17);
        if (!PBReaderPlaceMark() || (NTPBTocReorderReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x55u:
        v17 = objc_alloc_init(NTPBTocHandleTap);
        objc_storeStrong(a1 + 87, v17);
        if (!PBReaderPlaceMark() || (NTPBTocHandleTapReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x56u:
        v17 = objc_alloc_init(NTPBTocCardDrag);
        objc_storeStrong(a1 + 84, v17);
        if (!PBReaderPlaceMark() || (NTPBTocCardDragReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x57u:
        v17 = objc_alloc_init(NTPBTocToggleTap);
        objc_storeStrong(a1 + 89, v17);
        if (!PBReaderPlaceMark() || (NTPBTocToggleTapReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x58u:
        v17 = objc_alloc_init(NTPBTocCellExposure);
        objc_storeStrong(a1 + 85, v17);
        if (!PBReaderPlaceMark() || (NTPBTocCellExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x59u:
        v17 = objc_alloc_init(NTPBAppSessionResign);
        objc_storeStrong(a1 + 10, v17);
        if (!PBReaderPlaceMark() || !NTPBAppSessionResignReadFrom((uint64_t)v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Au:
        v17 = objc_alloc_init(NTPBAppSessionResume);
        objc_storeStrong(a1 + 11, v17);
        if (!PBReaderPlaceMark() || !NTPBAppSessionResumeReadFrom((uint64_t)v17, a2))
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Bu:
        v17 = objc_alloc_init(NTPBArticleSessionResign);
        objc_storeStrong(a1 + 21, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleSessionResignReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Cu:
        v17 = objc_alloc_init(NTPBArticleSessionResume);
        objc_storeStrong(a1 + 22, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleSessionResumeReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Du:
        v17 = objc_alloc_init(NTPBBundleSubscriberInfo);
        objc_storeStrong(a1 + 29, v17);
        if (!PBReaderPlaceMark() || (NTPBBundleSubscriberInfoReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Eu:
        v17 = objc_alloc_init(NTPBIssueDownload);
        objc_storeStrong(a1 + 46, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueDownloadReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x5Fu:
        v17 = objc_alloc_init(NTPBPaywallButtonTap);
        objc_storeStrong(a1 + 65, v17);
        if (!PBReaderPlaceMark() || (NTPBPaywallButtonTapReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x60u:
        v17 = objc_alloc_init(NTPBPDFPageView);
        objc_storeStrong(a1 + 66, v17);
        if (!PBReaderPlaceMark() || (NTPBPDFPageViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x61u:
        v17 = objc_alloc_init(NTPBIssueTocView);
        objc_storeStrong(a1 + 48, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueTocViewReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x62u:
        v17 = objc_alloc_init(NTPBIssueExposure);
        objc_storeStrong(a1 + 47, v17);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x63u:
        v17 = objc_alloc_init(NTPBAppleIdSignInResult);
        objc_storeStrong(a1 + 14, v17);
        if (!PBReaderPlaceMark() || (NTPBAppleIdSignInResultReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x64u:
        v17 = objc_alloc_init(NTPBArticleFeedback);
        objc_storeStrong(a1 + 16, v17);
        if (!PBReaderPlaceMark() || (NTPBArticleFeedbackReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x65u:
        v17 = objc_alloc_init(NTPBAudioEngage);
        objc_storeStrong(a1 + 25, v17);
        if (!PBReaderPlaceMark() || (NTPBAudioEngageReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x66u:
        v17 = objc_alloc_init(NTPBAudioEngagementCompleted);
        objc_storeStrong(a1 + 26, v17);
        if (!PBReaderPlaceMark() || (NTPBAudioEngagementCompletedReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x67u:
        v17 = objc_alloc_init(NTPBPurchaseOffersItem);
        objc_storeStrong(a1 + 68, v17);
        if (!PBReaderPlaceMark() || (NTPBPurchaseOffersItemReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_330;
        goto LABEL_326;
      case 0x68u:
        v17 = objc_alloc_init(NTPBFeedLoad);
        objc_storeStrong(a1 + 41, v17);
        if (PBReaderPlaceMark() && (NTPBFeedLoadReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_326:
          PBReaderRecallMark();

LABEL_327:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_330:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_327;
    }
  }
}

uint64_t NTPBUserOnboardingChannelPickerCompleteReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          a1[44] |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_55;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_57:
          v41 = 32;
          goto LABEL_70;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          a1[44] |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_61:
          v41 = 36;
          goto LABEL_70;
        case 3u:
          PBReaderReadString();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          if (v29)
            objc_msgSend(a1, "addChannelId:", v29);
          goto LABEL_39;
        case 4u:
          PBReaderReadString();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          if (v29)
            objc_msgSend(a1, "addTopicId:", v29);
LABEL_39:

          continue;
        case 5u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          a1[44] |= 8u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v32 = 0;
LABEL_65:
          a1[40] = v32 != 0;
          continue;
        case 6u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          a1[44] |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0)
          goto LABEL_67;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_69:
      v41 = 16;
LABEL_70:
      *(_DWORD *)&a1[v41] = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleLikeDislikeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  NTPBWidgetEngagement *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  void *v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x4000u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_250;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_252;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_250:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_252:
        v165 = 360;
        goto LABEL_355;
      case 2u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 40;
        goto LABEL_229;
      case 3u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 296;
        goto LABEL_229;
      case 4u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 48;
        goto LABEL_229;
      case 5u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 64;
        goto LABEL_229;
      case 6u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 312;
        goto LABEL_229;
      case 7u:
        v25 = 0;
        v26 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x100u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_256:
        v165 = 128;
        goto LABEL_355;
      case 8u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 120;
        goto LABEL_229;
      case 9u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 136;
        goto LABEL_229;
      case 0xAu:
        v30 = 0;
        v31 = 0;
        v32 = 0;
        *(_DWORD *)(a1 + 388) |= 0x2000000u;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                v32 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v32 = 0;
LABEL_260:
        v166 = v32 != 0;
        v167 = 386;
        goto LABEL_337;
      case 0xDu:
        v37 = 0;
        v38 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x400u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v19 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_264:
        v165 = 232;
        goto LABEL_355;
      case 0xEu:
        v42 = 0;
        v43 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x10u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_268:
        v165 = 56;
        goto LABEL_355;
      case 0xFu:
        PBReaderReadString();
        v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47)
          objc_msgSend((id)a1, "addNamedEntities:", v47);
        goto LABEL_246;
      case 0x10u:
        v48 = 0;
        v49 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x40u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_272:
        v165 = 104;
        goto LABEL_355;
      case 0x11u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 224;
        goto LABEL_229;
      case 0x12u:
        v53 = 0;
        v54 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x1000u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_276:
        v165 = 288;
        goto LABEL_355;
      case 0x13u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x20u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_280:
        v165 = 72;
        goto LABEL_355;
      case 0x14u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 320;
        goto LABEL_229;
      case 0x15u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 328;
        goto LABEL_229;
      case 0x16u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 336;
        goto LABEL_229;
      case 0x17u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 304;
        goto LABEL_229;
      case 0x18u:
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_DWORD *)(a1 + 388) |= 0x40000u;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                v65 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v65 = 0;
LABEL_284:
        v166 = v65 != 0;
        v167 = 379;
        goto LABEL_337;
      case 0x19u:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 388) |= 2u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v71 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v14 = v70++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_288:
        v168 = 16;
        goto LABEL_350;
      case 0x1Au:
        v75 = 0;
        v76 = 0;
        v77 = 0;
        *(_DWORD *)(a1 + 388) |= 0x100000u;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v77 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                v77 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v77 = 0;
LABEL_292:
        v166 = v77 != 0;
        v167 = 381;
        goto LABEL_337;
      case 0x1Bu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 152;
        goto LABEL_229;
      case 0x1Cu:
        v81 = 0;
        v82 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x200u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v19 |= (unint64_t)(v85 & 0x7F) << v81;
            if (v85 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_296:
        v165 = 160;
        goto LABEL_355;
      case 0x1Du:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 388) |= 0x400000u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v14 = v87++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_300:
        v166 = v88 != 0;
        v167 = 383;
        goto LABEL_337;
      case 0x1Eu:
        v92 = 0;
        v93 = 0;
        v94 = 0;
        *(_DWORD *)(a1 + 388) |= 0x80000u;
        while (2)
        {
          v95 = *v3;
          v96 = *(_QWORD *)(a2 + v95);
          if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v94 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              v14 = v93++ >= 9;
              if (v14)
              {
                v94 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v94 = 0;
LABEL_304:
        v166 = v94 != 0;
        v167 = 380;
        goto LABEL_337;
      case 0x1Fu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 80;
        goto LABEL_229;
      case 0x20u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 88;
        goto LABEL_229;
      case 0x21u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 112;
        goto LABEL_229;
      case 0x22u:
        v98 = 0;
        v99 = 0;
        v100 = 0;
        *(_DWORD *)(a1 + 388) |= 0x20000u;
        while (2)
        {
          v101 = *v3;
          v102 = *(_QWORD *)(a2 + v101);
          if (v102 == -1 || v102 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
            *(_QWORD *)(a2 + v101) = v102 + 1;
            v100 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              v14 = v99++ >= 9;
              if (v14)
              {
                v100 = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v100 = 0;
LABEL_308:
        v166 = v100 != 0;
        v167 = 378;
        goto LABEL_337;
      case 0x23u:
        v104 = 0;
        v105 = 0;
        v106 = 0;
        *(_DWORD *)(a1 + 388) |= 0x8000u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v106 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v14 = v105++ >= 9;
              if (v14)
              {
                v106 = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v106 = 0;
LABEL_312:
        v166 = v106 != 0;
        v167 = 376;
        goto LABEL_337;
      case 0x24u:
        v110 = 0;
        v111 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x800u;
        while (2)
        {
          v112 = *v3;
          v113 = *(_QWORD *)(a2 + v112);
          if (v113 == -1 || v113 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
            *(_QWORD *)(a2 + v112) = v113 + 1;
            v19 |= (unint64_t)(v114 & 0x7F) << v110;
            if (v114 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_316:
        v165 = 256;
        goto LABEL_355;
      case 0x25u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 264;
        goto LABEL_229;
      case 0x26u:
        v115 = 0;
        v116 = 0;
        v117 = 0;
        *(_DWORD *)(a1 + 388) |= 0x10000u;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v117 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              v14 = v116++ >= 9;
              if (v14)
              {
                v117 = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v117 = 0;
LABEL_320:
        v166 = v117 != 0;
        v167 = 377;
        goto LABEL_337;
      case 0x27u:
        v121 = 0;
        v122 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x2000u;
        while (2)
        {
          v123 = *v3;
          v124 = *(_QWORD *)(a2 + v123);
          if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v19 |= (unint64_t)(v125 & 0x7F) << v121;
            if (v125 < 0)
            {
              v121 += 7;
              v14 = v122++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_324;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_324:
        v165 = 344;
        goto LABEL_355;
      case 0x28u:
        v126 = 0;
        v127 = 0;
        v128 = 0;
        *(_DWORD *)(a1 + 388) |= 0x1000000u;
        while (2)
        {
          v129 = *v3;
          v130 = *(_QWORD *)(a2 + v129);
          if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v130);
            *(_QWORD *)(a2 + v129) = v130 + 1;
            v128 |= (unint64_t)(v131 & 0x7F) << v126;
            if (v131 < 0)
            {
              v126 += 7;
              v14 = v127++ >= 9;
              if (v14)
              {
                v128 = 0;
                goto LABEL_328;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v128 = 0;
LABEL_328:
        v166 = v128 != 0;
        v167 = 385;
        goto LABEL_337;
      case 0x29u:
        v132 = 0;
        v133 = 0;
        v134 = 0;
        *(_DWORD *)(a1 + 388) |= 0x800000u;
        while (2)
        {
          v135 = *v3;
          v136 = *(_QWORD *)(a2 + v135);
          if (v136 == -1 || v136 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v136);
            *(_QWORD *)(a2 + v135) = v136 + 1;
            v134 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              v14 = v133++ >= 9;
              if (v14)
              {
                v134 = 0;
                goto LABEL_332;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v134 = 0;
LABEL_332:
        v166 = v134 != 0;
        v167 = 384;
        goto LABEL_337;
      case 0x2Au:
        v138 = 0;
        v139 = 0;
        v140 = 0;
        *(_DWORD *)(a1 + 388) |= 0x200000u;
        while (2)
        {
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 1;
            v140 |= (unint64_t)(v143 & 0x7F) << v138;
            if (v143 < 0)
            {
              v138 += 7;
              v14 = v139++ >= 9;
              if (v14)
              {
                v140 = 0;
                goto LABEL_336;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v140 = 0;
LABEL_336:
        v166 = v140 != 0;
        v167 = 382;
LABEL_337:
        *(_BYTE *)(a1 + v167) = v166;
        goto LABEL_356;
      case 0x2Bu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 248;
        goto LABEL_229;
      case 0x2Cu:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 272;
        goto LABEL_229;
      case 0x2Du:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 280;
        goto LABEL_229;
      case 0x2Eu:
        v47 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 368), v47);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_358;
        goto LABEL_245;
      case 0x2Fu:
        v47 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v47);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v47, a2) & 1) == 0)
        {
          goto LABEL_358;
        }
        goto LABEL_245;
      case 0x30u:
        v144 = 0;
        v145 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 388) |= 8u;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)(a2 + v146);
          if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
            *(_QWORD *)(a2 + v146) = v147 + 1;
            v71 |= (unint64_t)(v148 & 0x7F) << v144;
            if (v148 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_341:
        v168 = 32;
        goto LABEL_350;
      case 0x31u:
        v149 = 0;
        v150 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 388) |= 1u;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v152 + 1;
            v71 |= (unint64_t)(v153 & 0x7F) << v149;
            if (v153 < 0)
            {
              v149 += 7;
              v14 = v150++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_345:
        v168 = 8;
        goto LABEL_350;
      case 0x32u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 184;
        goto LABEL_229;
      case 0x33u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 200;
        goto LABEL_229;
      case 0x34u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 176;
        goto LABEL_229;
      case 0x35u:
        v154 = 0;
        v155 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 388) |= 4u;
        while (2)
        {
          v156 = *v3;
          v157 = *(_QWORD *)(a2 + v156);
          if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
            *(_QWORD *)(a2 + v156) = v157 + 1;
            v71 |= (unint64_t)(v158 & 0x7F) << v154;
            if (v158 < 0)
            {
              v154 += 7;
              v14 = v155++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_349:
        v168 = 24;
LABEL_350:
        *(_QWORD *)(a1 + v168) = v71;
        goto LABEL_356;
      case 0x36u:
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 192;
        goto LABEL_229;
      case 0x37u:
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = 168;
LABEL_229:
        v159 = *(void **)(a1 + v24);
        *(_QWORD *)(a1 + v24) = v23;

        goto LABEL_356;
      case 0x38u:
        v47 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 208), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_358;
        goto LABEL_245;
      case 0x39u:
        v47 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 216), v47);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v47, a2) & 1) == 0)
          goto LABEL_358;
        goto LABEL_245;
      case 0x3Au:
        v160 = 0;
        v161 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 388) |= 0x80u;
        while (2)
        {
          v162 = *v3;
          v163 = *(_QWORD *)(a2 + v162);
          if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
            *(_QWORD *)(a2 + v162) = v163 + 1;
            v19 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              v14 = v161++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_354:
        v165 = 108;
LABEL_355:
        *(_DWORD *)(a1 + v165) = v19;
        goto LABEL_356;
      case 0x3Bu:
        v47 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 96), v47);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v47, a2) & 1) != 0)
        {
LABEL_245:
          PBReaderRecallMark();
LABEL_246:

LABEL_356:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_358:

        return 0;
      case 0x3Cu:
        PBReaderReadString();
        v47 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v47)
          objc_msgSend((id)a1, "addTopicIds:", v47);
        goto LABEL_246;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_356;
    }
  }
}

BOOL NTPBTodaySectionConfigFontReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int *v17;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if (!(v10 >> 3))
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = &OBJC_IVAR___NTPBTodaySectionConfigFont__urlString;
LABEL_22:
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v17) = String;
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = &OBJC_IVAR___NTPBTodaySectionConfigFont__name;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBItemsTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBTodaySectionConfigItem *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_35:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v17 = objc_alloc_init(NTPBTodaySectionConfigItem);
        objc_msgSend((id)a1, "addItems:", v17);

        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigItemReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBReportConcernReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  void *v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_114;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_116;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_114:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_116:
          v84 = 112;
          goto LABEL_162;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
          goto LABEL_105;
        case 3u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x20u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_120:
          v84 = 64;
          goto LABEL_162;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 56;
          goto LABEL_105;
        case 5u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x40u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_124:
          v84 = 80;
          goto LABEL_162;
        case 6u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 72;
          goto LABEL_105;
        case 7u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_WORD *)(a1 + 132) |= 2u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_128:
          v85 = 16;
          goto LABEL_133;
        case 8u:
          v42 = 0;
          v43 = 0;
          v38 = 0;
          *(_WORD *)(a1 + 132) |= 1u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v38 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v38 = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_132:
          v85 = 8;
LABEL_133:
          *(_QWORD *)(a1 + v85) = v38;
          continue;
        case 9u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_105;
        case 0xAu:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x10u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_137:
          v84 = 40;
          goto LABEL_162;
        case 0xBu:
          v52 = 0;
          v53 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x80u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_141:
          v84 = 84;
          goto LABEL_162;
        case 0xCu:
          v57 = 0;
          v58 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 4u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_145:
          v84 = 24;
          goto LABEL_162;
        case 0xDu:
          v62 = 0;
          v63 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 8u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v19 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                v14 = v63++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_149:
          v84 = 28;
          goto LABEL_162;
        case 0xEu:
          v67 = 0;
          v68 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x100u;
          while (2)
          {
            v69 = *v3;
            v70 = *(_QWORD *)(a2 + v69);
            if (v70 == -1 || v70 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
              *(_QWORD *)(a2 + v69) = v70 + 1;
              v19 |= (unint64_t)(v71 & 0x7F) << v67;
              if (v71 < 0)
              {
                v67 += 7;
                v14 = v68++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_153:
          v84 = 96;
          goto LABEL_162;
        case 0xFu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 88;
          goto LABEL_105;
        case 0x10u:
          v72 = 0;
          v73 = 0;
          v74 = 0;
          *(_WORD *)(a1 + 132) |= 0x400u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v74 |= (unint64_t)(v77 & 0x7F) << v72;
              if (v77 < 0)
              {
                v72 += 7;
                v14 = v73++ >= 9;
                if (v14)
                {
                  v74 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v74 = 0;
LABEL_157:
          *(_BYTE *)(a1 + 128) = v74 != 0;
          continue;
        case 0x11u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 104;
          goto LABEL_105;
        case 0x12u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 120;
LABEL_105:
          v78 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 0x13u:
          v79 = 0;
          v80 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 132) |= 0x200u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v81 = *v3;
        v82 = *(_QWORD *)(a2 + v81);
        if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
          break;
        v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
        *(_QWORD *)(a2 + v81) = v82 + 1;
        v19 |= (unint64_t)(v83 & 0x7F) << v79;
        if ((v83 & 0x80) == 0)
          goto LABEL_159;
        v79 += 7;
        v14 = v80++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_161;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_159:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_161:
      v84 = 100;
LABEL_162:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  NTPBIssueData *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 128), v18);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v18, a2) & 1) != 0)
          goto LABEL_69;
        goto LABEL_153;
      case 2u:
        v18 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 136), v18);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_153;
        goto LABEL_69;
      case 3u:
        v18 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 96), v18);
        if (!PBReaderPlaceMark() || (NTPBChannelDataReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_153;
        goto LABEL_69;
      case 4u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 168;
        goto LABEL_105;
      case 5u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x2000u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              v15 = v23++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_109:
        v79 = 160;
        goto LABEL_118;
      case 6u:
        v29 = 0;
        v30 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x1000u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_113:
        v79 = 120;
        goto LABEL_118;
      case 7u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 152;
        goto LABEL_105;
      case 8u:
        v35 = 0;
        v36 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x800u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v24 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_117:
        v79 = 104;
LABEL_118:
        *(_DWORD *)(a1 + v79) = v24;
        goto LABEL_151;
      case 9u:
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 188) |= 0x4000u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_122:
        v80 = v43 != 0;
        v81 = 184;
        goto LABEL_127;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 188) |= 0x8000u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                v50 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
LABEL_126:
        v80 = v50 != 0;
        v81 = 185;
LABEL_127:
        *(_BYTE *)(a1 + v81) = v80;
        goto LABEL_151;
      case 0xBu:
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v18);
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_69:
          PBReaderRecallMark();

LABEL_151:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_153:

        return 0;
      case 0xCu:
        *(_WORD *)(a1 + 188) |= 0x100u;
        v55 = *v3;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v56);
          *(_QWORD *)(a2 + v55) = v56 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 72;
        goto LABEL_150;
      case 0xDu:
        *(_WORD *)(a1 + 188) |= 0x20u;
        v58 = *v3;
        v59 = *(_QWORD *)(a2 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v59);
          *(_QWORD *)(a2 + v58) = v59 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 48;
        goto LABEL_150;
      case 0xEu:
        *(_WORD *)(a1 + 188) |= 0x80u;
        v60 = *v3;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v61);
          *(_QWORD *)(a2 + v60) = v61 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 64;
        goto LABEL_150;
      case 0xFu:
        *(_WORD *)(a1 + 188) |= 4u;
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v63);
          *(_QWORD *)(a2 + v62) = v63 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 24;
        goto LABEL_150;
      case 0x10u:
        *(_WORD *)(a1 + 188) |= 8u;
        v64 = *v3;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v65);
          *(_QWORD *)(a2 + v64) = v65 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 32;
        goto LABEL_150;
      case 0x11u:
        *(_WORD *)(a1 + 188) |= 0x40u;
        v66 = *v3;
        v67 = *(_QWORD *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v67);
          *(_QWORD *)(a2 + v66) = v67 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 56;
        goto LABEL_150;
      case 0x12u:
        *(_WORD *)(a1 + 188) |= 0x400u;
        v68 = *v3;
        v69 = *(_QWORD *)(a2 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFF7 && v69 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v69);
          *(_QWORD *)(a2 + v68) = v69 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 88;
        goto LABEL_150;
      case 0x13u:
        *(_WORD *)(a1 + 188) |= 2u;
        v70 = *v3;
        v71 = *(_QWORD *)(a2 + v70);
        if (v71 <= 0xFFFFFFFFFFFFFFF7 && v71 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v71);
          *(_QWORD *)(a2 + v70) = v71 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 16;
        goto LABEL_150;
      case 0x14u:
        *(_WORD *)(a1 + 188) |= 1u;
        v72 = *v3;
        v73 = *(_QWORD *)(a2 + v72);
        if (v73 <= 0xFFFFFFFFFFFFFFF7 && v73 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v73);
          *(_QWORD *)(a2 + v72) = v73 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 8;
        goto LABEL_150;
      case 0x15u:
        *(_WORD *)(a1 + 188) |= 0x10u;
        v74 = *v3;
        v75 = *(_QWORD *)(a2 + v74);
        if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v75);
          *(_QWORD *)(a2 + v74) = v75 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 40;
        goto LABEL_150;
      case 0x16u:
        *(_WORD *)(a1 + 188) |= 0x200u;
        v76 = *v3;
        v77 = *(_QWORD *)(a2 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v77);
          *(_QWORD *)(a2 + v76) = v77 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 80;
LABEL_150:
        *(_QWORD *)(a1 + v82) = v57;
        goto LABEL_151;
      case 0x17u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 144;
        goto LABEL_105;
      case 0x18u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 176;
LABEL_105:
        v78 = *(void **)(a1 + v21);
        *(_QWORD *)(a1 + v21) = v20;

        goto LABEL_151;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_151;
    }
  }
}

uint64_t NTPBPersonalizationProfileReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBPersonalizationAggregate *v17;
  NTPBPersonalizationInstanceHistory *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 1)
      {
        v18 = objc_alloc_init(NTPBPersonalizationInstanceHistory);
        objc_msgSend(a1, "addHistories:", v18);

        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationInstanceHistoryReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          return 0;
        }
      }
      else
      {
        if ((v10 >> 3))
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v17 = objc_alloc_init(NTPBPersonalizationAggregate);
        objc_msgSend(a1, "addAggregates:", v17);

        if (!PBReaderPlaceMark() || (NTPBPersonalizationAggregateReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBExternalAnalyticsQueryParameterConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBTopStoriesStyleConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_25:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_26:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v23 = 0;
        }
        *(_DWORD *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v19;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSessionReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  char v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  char v220;
  unsigned int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  char v227;
  unsigned int v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  char v233;
  unsigned int v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  char v238;
  char v239;
  unsigned int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  char v246;
  unsigned int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  char v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  char v259;
  char v260;
  unsigned int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  char v266;
  char v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  char v273;
  char v274;
  unsigned int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  char v280;
  char v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  char v293;
  char v294;
  unsigned int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  char v300;
  char v301;
  unsigned int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  char v307;
  char v308;
  unsigned int v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  char v314;
  void *v315;
  void *v316;
  char v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  char v322;
  uint64_t v323;
  uint64_t v324;
  BOOL v325;
  uint64_t v326;
  char v327;
  unsigned int v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  char v333;
  char v334;
  unsigned int v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  char v340;
  uint64_t v341;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        v17 = v10 & 7;
        if (!v16 && v17 != 4)
        {
          switch((v10 >> 3))
          {
            case 1u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 26;
              goto LABEL_380;
            case 2u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 27;
              goto LABEL_380;
            case 3u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 39;
              goto LABEL_380;
            case 4u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 17;
              goto LABEL_380;
            case 5u:
              v22 = 0;
              v23 = 0;
              v24 = 0;
              a1[61] |= 1uLL;
              while (2)
              {
                v25 = *v3;
                v26 = *(_QWORD *)(a2 + v25);
                v27 = v26 + 1;
                if (v26 == -1 || v27 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
                  *(_QWORD *)(a2 + v25) = v27;
                  v24 |= (unint64_t)(v28 & 0x7F) << v22;
                  if (v28 < 0)
                  {
                    v22 += 7;
                    v15 = v23++ >= 9;
                    if (v15)
                    {
                      v24 = 0;
                      goto LABEL_392;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v24 = 0;
LABEL_392:
              v323 = 7;
              goto LABEL_517;
            case 6u:
              v29 = 0;
              v30 = 0;
              v31 = 0;
              a1[61] |= 0x100000uLL;
              while (2)
              {
                v32 = *v3;
                v33 = *(_QWORD *)(a2 + v32);
                v34 = v33 + 1;
                if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
                  *(_QWORD *)(a2 + v32) = v34;
                  v31 |= (unint64_t)(v35 & 0x7F) << v29;
                  if (v35 < 0)
                  {
                    v29 += 7;
                    v15 = v30++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_396;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_396:
              v324 = 416;
              goto LABEL_559;
            case 7u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 25;
              goto LABEL_380;
            case 8u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 31;
              goto LABEL_380;
            case 9u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 21;
              goto LABEL_380;
            case 0xAu:
              v36 = 0;
              v37 = 0;
              v31 = 0;
              a1[61] |= 0x40000uLL;
              while (2)
              {
                v38 = *v3;
                v39 = *(_QWORD *)(a2 + v38);
                v40 = v39 + 1;
                if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
                  *(_QWORD *)(a2 + v38) = v40;
                  v31 |= (unint64_t)(v41 & 0x7F) << v36;
                  if (v41 < 0)
                  {
                    v36 += 7;
                    v15 = v37++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_400;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_400:
              v324 = 360;
              goto LABEL_559;
            case 0xBu:
              v42 = 0;
              v43 = 0;
              v31 = 0;
              a1[61] |= 0x100uLL;
              while (2)
              {
                v44 = *v3;
                v45 = *(_QWORD *)(a2 + v44);
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
                  *(_QWORD *)(a2 + v44) = v46;
                  v31 |= (unint64_t)(v47 & 0x7F) << v42;
                  if (v47 < 0)
                  {
                    v42 += 7;
                    v15 = v43++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_404;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_404:
              v324 = 176;
              goto LABEL_559;
            case 0xCu:
              v48 = 0;
              v49 = 0;
              v31 = 0;
              a1[61] |= 0x80000uLL;
              while (2)
              {
                v50 = *v3;
                v51 = *(_QWORD *)(a2 + v50);
                v52 = v51 + 1;
                if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
                  *(_QWORD *)(a2 + v50) = v52;
                  v31 |= (unint64_t)(v53 & 0x7F) << v48;
                  if (v53 < 0)
                  {
                    v48 += 7;
                    v15 = v49++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_408;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_408:
              v324 = 392;
              goto LABEL_559;
            case 0xDu:
              PBReaderReadData();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 47;
              goto LABEL_380;
            case 0xEu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 50;
              goto LABEL_380;
            case 0xFu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 51;
              goto LABEL_380;
            case 0x10u:
              v54 = 0;
              v55 = 0;
              v56 = 0;
              a1[61] |= 0x80000000uLL;
              while (2)
              {
                v57 = *v3;
                v58 = *(_QWORD *)(a2 + v57);
                v59 = v58 + 1;
                if (v58 == -1 || v59 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
                  *(_QWORD *)(a2 + v57) = v59;
                  v56 |= (unint64_t)(v60 & 0x7F) << v54;
                  if (v60 < 0)
                  {
                    v54 += 7;
                    v15 = v55++ >= 9;
                    if (v15)
                    {
                      v56 = 0;
                      goto LABEL_412;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v56 = 0;
LABEL_412:
              v325 = v56 != 0;
              v326 = 471;
              goto LABEL_554;
            case 0x11u:
              v61 = 0;
              v62 = 0;
              v24 = 0;
              a1[61] |= 0x10uLL;
              while (2)
              {
                v63 = *v3;
                v64 = *(_QWORD *)(a2 + v63);
                v65 = v64 + 1;
                if (v64 == -1 || v65 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
                  *(_QWORD *)(a2 + v63) = v65;
                  v24 |= (unint64_t)(v66 & 0x7F) << v61;
                  if (v66 < 0)
                  {
                    v61 += 7;
                    v15 = v62++ >= 9;
                    if (v15)
                    {
                      v24 = 0;
                      goto LABEL_416;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v24 = 0;
LABEL_416:
              v323 = 11;
              goto LABEL_517;
            case 0x12u:
              v67 = 0;
              v68 = 0;
              v24 = 0;
              a1[61] |= 4uLL;
              while (2)
              {
                v69 = *v3;
                v70 = *(_QWORD *)(a2 + v69);
                v71 = v70 + 1;
                if (v70 == -1 || v71 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
                  *(_QWORD *)(a2 + v69) = v71;
                  v24 |= (unint64_t)(v72 & 0x7F) << v67;
                  if (v72 < 0)
                  {
                    v67 += 7;
                    v15 = v68++ >= 9;
                    if (v15)
                    {
                      v24 = 0;
                      goto LABEL_420;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v24 = 0;
LABEL_420:
              v323 = 9;
              goto LABEL_517;
            case 0x13u:
              v73 = 0;
              v74 = 0;
              v75 = 0;
              a1[61] |= 0x40000000000uLL;
              while (2)
              {
                v76 = *v3;
                v77 = *(_QWORD *)(a2 + v76);
                v78 = v77 + 1;
                if (v77 == -1 || v78 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
                  *(_QWORD *)(a2 + v76) = v78;
                  v75 |= (unint64_t)(v79 & 0x7F) << v73;
                  if (v79 < 0)
                  {
                    v73 += 7;
                    v15 = v74++ >= 9;
                    if (v15)
                    {
                      v75 = 0;
                      goto LABEL_424;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v75 = 0;
LABEL_424:
              v325 = v75 != 0;
              v326 = 482;
              goto LABEL_554;
            case 0x14u:
              v80 = 0;
              v81 = 0;
              v82 = 0;
              a1[61] |= 0x200000000000uLL;
              while (2)
              {
                v83 = *v3;
                v84 = *(_QWORD *)(a2 + v83);
                v85 = v84 + 1;
                if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
                  *(_QWORD *)(a2 + v83) = v85;
                  v82 |= (unint64_t)(v86 & 0x7F) << v80;
                  if (v86 < 0)
                  {
                    v80 += 7;
                    v15 = v81++ >= 9;
                    if (v15)
                    {
                      v82 = 0;
                      goto LABEL_428;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v82 = 0;
LABEL_428:
              v325 = v82 != 0;
              v326 = 485;
              goto LABEL_554;
            case 0x15u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 42;
              goto LABEL_380;
            case 0x16u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 43;
              goto LABEL_380;
            case 0x17u:
              v87 = 0;
              v88 = 0;
              v89 = 0;
              a1[61] |= 0x100000000000uLL;
              while (2)
              {
                v90 = *v3;
                v91 = *(_QWORD *)(a2 + v90);
                v92 = v91 + 1;
                if (v91 == -1 || v92 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
                  *(_QWORD *)(a2 + v90) = v92;
                  v89 |= (unint64_t)(v93 & 0x7F) << v87;
                  if (v93 < 0)
                  {
                    v87 += 7;
                    v15 = v88++ >= 9;
                    if (v15)
                    {
                      v89 = 0;
                      goto LABEL_432;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v89 = 0;
LABEL_432:
              v325 = v89 != 0;
              v326 = 484;
              goto LABEL_554;
            case 0x18u:
              v94 = 0;
              v95 = 0;
              v31 = 0;
              a1[61] |= 0x10000uLL;
              while (2)
              {
                v96 = *v3;
                v97 = *(_QWORD *)(a2 + v96);
                v98 = v97 + 1;
                if (v97 == -1 || v98 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
                  *(_QWORD *)(a2 + v96) = v98;
                  v31 |= (unint64_t)(v99 & 0x7F) << v94;
                  if (v99 < 0)
                  {
                    v94 += 7;
                    v15 = v95++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_436;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_436:
              v324 = 304;
              goto LABEL_559;
            case 0x19u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 19;
              goto LABEL_380;
            case 0x1Au:
              v100 = 0;
              v101 = 0;
              v31 = 0;
              a1[61] |= 0x80uLL;
              while (2)
              {
                v102 = *v3;
                v103 = *(_QWORD *)(a2 + v102);
                v104 = v103 + 1;
                if (v103 == -1 || v104 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v105 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
                  *(_QWORD *)(a2 + v102) = v104;
                  v31 |= (unint64_t)(v105 & 0x7F) << v100;
                  if (v105 < 0)
                  {
                    v100 += 7;
                    v15 = v101++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_440;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_440:
              v324 = 160;
              goto LABEL_559;
            case 0x1Bu:
              v106 = 0;
              v107 = 0;
              v108 = 0;
              a1[61] |= 0x10000000000uLL;
              while (2)
              {
                v109 = *v3;
                v110 = *(_QWORD *)(a2 + v109);
                v111 = v110 + 1;
                if (v110 == -1 || v111 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v112 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v110);
                  *(_QWORD *)(a2 + v109) = v111;
                  v108 |= (unint64_t)(v112 & 0x7F) << v106;
                  if (v112 < 0)
                  {
                    v106 += 7;
                    v15 = v107++ >= 9;
                    if (v15)
                    {
                      v108 = 0;
                      goto LABEL_444;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v108 = 0;
LABEL_444:
              v325 = v108 != 0;
              v326 = 480;
              goto LABEL_554;
            case 0x1Cu:
              v113 = 0;
              v114 = 0;
              v115 = 0;
              a1[61] |= 0x100000000uLL;
              while (2)
              {
                v116 = *v3;
                v117 = *(_QWORD *)(a2 + v116);
                v118 = v117 + 1;
                if (v117 == -1 || v118 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
                  *(_QWORD *)(a2 + v116) = v118;
                  v115 |= (unint64_t)(v119 & 0x7F) << v113;
                  if (v119 < 0)
                  {
                    v113 += 7;
                    v15 = v114++ >= 9;
                    if (v15)
                    {
                      v115 = 0;
                      goto LABEL_448;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v115 = 0;
LABEL_448:
              v325 = v115 != 0;
              v326 = 472;
              goto LABEL_554;
            case 0x1Du:
              v120 = 0;
              v121 = 0;
              v122 = 0;
              a1[61] |= 0x400000000uLL;
              while (2)
              {
                v123 = *v3;
                v124 = *(_QWORD *)(a2 + v123);
                v125 = v124 + 1;
                if (v124 == -1 || v125 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
                  *(_QWORD *)(a2 + v123) = v125;
                  v122 |= (unint64_t)(v126 & 0x7F) << v120;
                  if (v126 < 0)
                  {
                    v120 += 7;
                    v15 = v121++ >= 9;
                    if (v15)
                    {
                      v122 = 0;
                      goto LABEL_452;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v122 = 0;
LABEL_452:
              v325 = v122 != 0;
              v326 = 474;
              goto LABEL_554;
            case 0x1Eu:
              v127 = 0;
              v128 = 0;
              v129 = 0;
              a1[61] |= 0x200000000uLL;
              while (2)
              {
                v130 = *v3;
                v131 = *(_QWORD *)(a2 + v130);
                v132 = v131 + 1;
                if (v131 == -1 || v132 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
                  *(_QWORD *)(a2 + v130) = v132;
                  v129 |= (unint64_t)(v133 & 0x7F) << v127;
                  if (v133 < 0)
                  {
                    v127 += 7;
                    v15 = v128++ >= 9;
                    if (v15)
                    {
                      v129 = 0;
                      goto LABEL_456;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v129 = 0;
LABEL_456:
              v325 = v129 != 0;
              v326 = 473;
              goto LABEL_554;
            case 0x1Fu:
              v134 = 0;
              v135 = 0;
              v136 = 0;
              a1[61] |= 0x800000000uLL;
              while (2)
              {
                v137 = *v3;
                v138 = *(_QWORD *)(a2 + v137);
                v139 = v138 + 1;
                if (v138 == -1 || v139 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
                  *(_QWORD *)(a2 + v137) = v139;
                  v136 |= (unint64_t)(v140 & 0x7F) << v134;
                  if (v140 < 0)
                  {
                    v134 += 7;
                    v15 = v135++ >= 9;
                    if (v15)
                    {
                      v136 = 0;
                      goto LABEL_460;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v136 = 0;
LABEL_460:
              v325 = v136 != 0;
              v326 = 475;
              goto LABEL_554;
            case 0x20u:
              v141 = 0;
              v142 = 0;
              v143 = 0;
              a1[61] |= 0x4000000000uLL;
              while (2)
              {
                v144 = *v3;
                v145 = *(_QWORD *)(a2 + v144);
                v146 = v145 + 1;
                if (v145 == -1 || v146 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v147 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v145);
                  *(_QWORD *)(a2 + v144) = v146;
                  v143 |= (unint64_t)(v147 & 0x7F) << v141;
                  if (v147 < 0)
                  {
                    v141 += 7;
                    v15 = v142++ >= 9;
                    if (v15)
                    {
                      v143 = 0;
                      goto LABEL_464;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v143 = 0;
LABEL_464:
              v325 = v143 != 0;
              v326 = 478;
              goto LABEL_554;
            case 0x21u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 35;
              goto LABEL_380;
            case 0x22u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 36;
              goto LABEL_380;
            case 0x23u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 37;
              goto LABEL_380;
            case 0x24u:
              v148 = 0;
              v149 = 0;
              v150 = 0;
              a1[61] |= 0x2000000uLL;
              while (2)
              {
                v151 = *v3;
                v152 = *(_QWORD *)(a2 + v151);
                v153 = v152 + 1;
                if (v152 == -1 || v153 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
                  *(_QWORD *)(a2 + v151) = v153;
                  v150 |= (unint64_t)(v154 & 0x7F) << v148;
                  if (v154 < 0)
                  {
                    v148 += 7;
                    v15 = v149++ >= 9;
                    if (v15)
                    {
                      v150 = 0;
                      goto LABEL_468;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v150 = 0;
LABEL_468:
              v325 = v150 != 0;
              v326 = 465;
              goto LABEL_554;
            case 0x25u:
              v155 = 0;
              v156 = 0;
              v31 = 0;
              a1[61] |= 0x800000uLL;
              while (2)
              {
                v157 = *v3;
                v158 = *(_QWORD *)(a2 + v157);
                v159 = v158 + 1;
                if (v158 == -1 || v159 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v160 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v158);
                  *(_QWORD *)(a2 + v157) = v159;
                  v31 |= (unint64_t)(v160 & 0x7F) << v155;
                  if (v160 < 0)
                  {
                    v155 += 7;
                    v15 = v156++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_472;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_472:
              v324 = 440;
              goto LABEL_559;
            case 0x26u:
              v161 = 0;
              v162 = 0;
              v163 = 0;
              a1[61] |= 0x2000000000uLL;
              while (2)
              {
                v164 = *v3;
                v165 = *(_QWORD *)(a2 + v164);
                v166 = v165 + 1;
                if (v165 == -1 || v166 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v167 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v165);
                  *(_QWORD *)(a2 + v164) = v166;
                  v163 |= (unint64_t)(v167 & 0x7F) << v161;
                  if (v167 < 0)
                  {
                    v161 += 7;
                    v15 = v162++ >= 9;
                    if (v15)
                    {
                      v163 = 0;
                      goto LABEL_476;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v163 = 0;
LABEL_476:
              v325 = v163 != 0;
              v326 = 477;
              goto LABEL_554;
            case 0x27u:
              v168 = 0;
              v169 = 0;
              v31 = 0;
              a1[61] |= 0x8000uLL;
              while (2)
              {
                v170 = *v3;
                v171 = *(_QWORD *)(a2 + v170);
                v172 = v171 + 1;
                if (v171 == -1 || v172 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v173 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v171);
                  *(_QWORD *)(a2 + v170) = v172;
                  v31 |= (unint64_t)(v173 & 0x7F) << v168;
                  if (v173 < 0)
                  {
                    v168 += 7;
                    v15 = v169++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_480;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_480:
              v324 = 256;
              goto LABEL_559;
            case 0x28u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 33;
              goto LABEL_380;
            case 0x29u:
              v174 = 0;
              v175 = 0;
              v31 = 0;
              a1[61] |= 0x20uLL;
              while (2)
              {
                v176 = *v3;
                v177 = *(_QWORD *)(a2 + v176);
                v178 = v177 + 1;
                if (v177 == -1 || v178 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v177);
                  *(_QWORD *)(a2 + v176) = v178;
                  v31 |= (unint64_t)(v179 & 0x7F) << v174;
                  if (v179 < 0)
                  {
                    v174 += 7;
                    v15 = v175++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_484;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_484:
              v324 = 96;
              goto LABEL_559;
            case 0x2Au:
              a1[61] |= 0x40uLL;
              v180 = *v3;
              v181 = *(_QWORD *)(a2 + v180);
              if (v181 <= 0xFFFFFFFFFFFFFFFBLL && v181 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v182 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v181);
                *(_QWORD *)(a2 + v180) = v181 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v182 = 0;
              }
              v341 = 100;
              goto LABEL_586;
            case 0x2Bu:
              v183 = 0;
              v184 = 0;
              v31 = 0;
              a1[61] |= 0x800uLL;
              while (2)
              {
                v185 = *v3;
                v186 = *(_QWORD *)(a2 + v185);
                v187 = v186 + 1;
                if (v186 == -1 || v187 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v188 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v186);
                  *(_QWORD *)(a2 + v185) = v187;
                  v31 |= (unint64_t)(v188 & 0x7F) << v183;
                  if (v188 < 0)
                  {
                    v183 += 7;
                    v15 = v184++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_488;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_488:
              v324 = 232;
              goto LABEL_559;
            case 0x2Cu:
              a1[61] |= 0x1000uLL;
              v189 = *v3;
              v190 = *(_QWORD *)(a2 + v189);
              if (v190 <= 0xFFFFFFFFFFFFFFFBLL && v190 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v182 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v190);
                *(_QWORD *)(a2 + v189) = v190 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v182 = 0;
              }
              v341 = 236;
              goto LABEL_586;
            case 0x2Du:
              v191 = 0;
              v192 = 0;
              v31 = 0;
              a1[61] |= 0x2000uLL;
              while (2)
              {
                v193 = *v3;
                v194 = *(_QWORD *)(a2 + v193);
                v195 = v194 + 1;
                if (v194 == -1 || v195 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v196 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v194);
                  *(_QWORD *)(a2 + v193) = v195;
                  v31 |= (unint64_t)(v196 & 0x7F) << v191;
                  if (v196 < 0)
                  {
                    v191 += 7;
                    v15 = v192++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_492;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_492:
              v324 = 240;
              goto LABEL_559;
            case 0x2Eu:
              a1[61] |= 0x4000uLL;
              v197 = *v3;
              v198 = *(_QWORD *)(a2 + v197);
              if (v198 <= 0xFFFFFFFFFFFFFFFBLL && v198 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v182 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v198);
                *(_QWORD *)(a2 + v197) = v198 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v182 = 0;
              }
              v341 = 244;
              goto LABEL_586;
            case 0x2Fu:
              v199 = 0;
              v200 = 0;
              v31 = 0;
              a1[61] |= 0x200uLL;
              while (2)
              {
                v201 = *v3;
                v202 = *(_QWORD *)(a2 + v201);
                v203 = v202 + 1;
                if (v202 == -1 || v203 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v204 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v202);
                  *(_QWORD *)(a2 + v201) = v203;
                  v31 |= (unint64_t)(v204 & 0x7F) << v199;
                  if (v204 < 0)
                  {
                    v199 += 7;
                    v15 = v200++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_496;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_496:
              v324 = 224;
              goto LABEL_559;
            case 0x30u:
              a1[61] |= 0x400uLL;
              v205 = *v3;
              v206 = *(_QWORD *)(a2 + v205);
              if (v206 <= 0xFFFFFFFFFFFFFFFBLL && v206 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v182 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v206);
                *(_QWORD *)(a2 + v205) = v206 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v182 = 0;
              }
              v341 = 228;
LABEL_586:
              *(_DWORD *)((char *)a1 + v341) = v182;
              goto LABEL_587;
            case 0x31u:
              v207 = 0;
              v208 = 0;
              v24 = 0;
              a1[61] |= 2uLL;
              while (2)
              {
                v209 = *v3;
                v210 = *(_QWORD *)(a2 + v209);
                v211 = v210 + 1;
                if (v210 == -1 || v211 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v212 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v210);
                  *(_QWORD *)(a2 + v209) = v211;
                  v24 |= (unint64_t)(v212 & 0x7F) << v207;
                  if (v212 < 0)
                  {
                    v207 += 7;
                    v15 = v208++ >= 9;
                    if (v15)
                    {
                      v24 = 0;
                      goto LABEL_500;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v24 = 0;
LABEL_500:
              v323 = 8;
              goto LABEL_517;
            case 0x32u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 23;
              goto LABEL_380;
            case 0x33u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 24;
              goto LABEL_380;
            case 0x34u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 18;
              goto LABEL_380;
            case 0x35u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 34;
              goto LABEL_380;
            case 0x36u:
              v213 = 0;
              v214 = 0;
              v215 = 0;
              a1[61] |= 0x8000000000uLL;
              while (2)
              {
                v216 = *v3;
                v217 = *(_QWORD *)(a2 + v216);
                v218 = v217 + 1;
                if (v217 == -1 || v218 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v219 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v217);
                  *(_QWORD *)(a2 + v216) = v218;
                  v215 |= (unint64_t)(v219 & 0x7F) << v213;
                  if (v219 < 0)
                  {
                    v213 += 7;
                    v15 = v214++ >= 9;
                    if (v15)
                    {
                      v215 = 0;
                      goto LABEL_504;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v215 = 0;
LABEL_504:
              v325 = v215 != 0;
              v326 = 479;
              goto LABEL_554;
            case 0x37u:
              v220 = 0;
              v221 = 0;
              v222 = 0;
              a1[61] |= 0x20000000000uLL;
              while (2)
              {
                v223 = *v3;
                v224 = *(_QWORD *)(a2 + v223);
                v225 = v224 + 1;
                if (v224 == -1 || v225 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v226 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v224);
                  *(_QWORD *)(a2 + v223) = v225;
                  v222 |= (unint64_t)(v226 & 0x7F) << v220;
                  if (v226 < 0)
                  {
                    v220 += 7;
                    v15 = v221++ >= 9;
                    if (v15)
                    {
                      v222 = 0;
                      goto LABEL_508;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v222 = 0;
LABEL_508:
              v325 = v222 != 0;
              v326 = 481;
              goto LABEL_554;
            case 0x38u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 53;
              goto LABEL_380;
            case 0x39u:
              PBReaderReadData();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 48;
              goto LABEL_380;
            case 0x3Au:
              PBReaderReadData();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 56;
              goto LABEL_380;
            case 0x3Bu:
              v227 = 0;
              v228 = 0;
              v31 = 0;
              a1[61] |= 0x200000uLL;
              while (2)
              {
                v229 = *v3;
                v230 = *(_QWORD *)(a2 + v229);
                v231 = v230 + 1;
                if (v230 == -1 || v231 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v232 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v230);
                  *(_QWORD *)(a2 + v229) = v231;
                  v31 |= (unint64_t)(v232 & 0x7F) << v227;
                  if (v232 < 0)
                  {
                    v227 += 7;
                    v15 = v228++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_512;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_512:
              v324 = 432;
              goto LABEL_559;
            case 0x3Cu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 41;
              goto LABEL_380;
            case 0x3Du:
              PBReaderReadData();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 16;
              goto LABEL_380;
            case 0x3Eu:
              v233 = 0;
              v234 = 0;
              v24 = 0;
              a1[61] |= 8uLL;
              while (2)
              {
                v235 = *v3;
                v236 = *(_QWORD *)(a2 + v235);
                v237 = v236 + 1;
                if (v236 == -1 || v237 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v238 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v236);
                  *(_QWORD *)(a2 + v235) = v237;
                  v24 |= (unint64_t)(v238 & 0x7F) << v233;
                  if (v238 < 0)
                  {
                    v233 += 7;
                    v15 = v234++ >= 9;
                    if (v15)
                    {
                      v24 = 0;
                      goto LABEL_516;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v24 = 0;
LABEL_516:
              v323 = 10;
LABEL_517:
              a1[v323] = v24;
              goto LABEL_587;
            case 0x3Fu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 57;
              goto LABEL_380;
            case 0x40u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 44;
              goto LABEL_380;
            case 0x41u:
              if (v17 != 2)
              {
                v327 = 0;
                v328 = 0;
                v329 = 0;
                while (1)
                {
                  v330 = *v3;
                  v331 = *(_QWORD *)(a2 + v330);
                  v332 = v331 + 1;
                  if (v331 == -1 || v332 > *(_QWORD *)(a2 + *v4))
                    break;
                  v333 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v331);
                  *(_QWORD *)(a2 + v330) = v332;
                  v329 |= (unint64_t)(v333 & 0x7F) << v327;
                  if (v333 < 0)
                  {
                    v327 += 7;
                    v15 = v328++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_575;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_575:
                PBRepeatedInt64Add();
                goto LABEL_587;
              }
              result = PBReaderPlaceMark();
              if (!(_DWORD)result)
                return result;
              while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
              {
                v239 = 0;
                v240 = 0;
                v241 = 0;
                while (1)
                {
                  v242 = *v3;
                  v243 = *(_QWORD *)(a2 + v242);
                  v244 = v243 + 1;
                  if (v243 == -1 || v244 > *(_QWORD *)(a2 + *v4))
                    break;
                  v245 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v243);
                  *(_QWORD *)(a2 + v242) = v244;
                  v241 |= (unint64_t)(v245 & 0x7F) << v239;
                  if (v245 < 0)
                  {
                    v239 += 7;
                    v15 = v240++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_297;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_297:
                PBRepeatedInt64Add();
              }
              goto LABEL_388;
            case 0x42u:
              if (v17 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
                {
                  v246 = 0;
                  v247 = 0;
                  v248 = 0;
                  while (1)
                  {
                    v249 = *v3;
                    v250 = *(_QWORD *)(a2 + v249);
                    v251 = v250 + 1;
                    if (v250 == -1 || v251 > *(_QWORD *)(a2 + *v4))
                      break;
                    v252 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v250);
                    *(_QWORD *)(a2 + v249) = v251;
                    v248 |= (unint64_t)(v252 & 0x7F) << v246;
                    if (v252 < 0)
                    {
                      v246 += 7;
                      v15 = v247++ >= 9;
                      if (!v15)
                        continue;
                    }
                    goto LABEL_310;
                  }
                  *(_BYTE *)(a2 + *v5) = 1;
LABEL_310:
                  PBRepeatedInt32Add();
                }
LABEL_388:
                PBReaderRecallMark();
              }
              else
              {
                v334 = 0;
                v335 = 0;
                v336 = 0;
                while (1)
                {
                  v337 = *v3;
                  v338 = *(_QWORD *)(a2 + v337);
                  v339 = v338 + 1;
                  if (v338 == -1 || v339 > *(_QWORD *)(a2 + *v4))
                    break;
                  v340 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v338);
                  *(_QWORD *)(a2 + v337) = v339;
                  v336 |= (unint64_t)(v340 & 0x7F) << v334;
                  if (v340 < 0)
                  {
                    v334 += 7;
                    v15 = v335++ >= 9;
                    if (!v15)
                      continue;
                  }
                  goto LABEL_577;
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_577:
                PBRepeatedInt32Add();
              }
LABEL_587:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
            case 0x43u:
              v253 = 0;
              v254 = 0;
              v255 = 0;
              a1[61] |= 0x20000000uLL;
              while (2)
              {
                v256 = *v3;
                v257 = *(_QWORD *)(a2 + v256);
                v258 = v257 + 1;
                if (v257 == -1 || v258 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v259 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v257);
                  *(_QWORD *)(a2 + v256) = v258;
                  v255 |= (unint64_t)(v259 & 0x7F) << v253;
                  if (v259 < 0)
                  {
                    v253 += 7;
                    v15 = v254++ >= 9;
                    if (v15)
                    {
                      v255 = 0;
                      goto LABEL_521;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v255 = 0;
LABEL_521:
              v325 = v255 != 0;
              v326 = 469;
              goto LABEL_554;
            case 0x44u:
              v260 = 0;
              v261 = 0;
              v262 = 0;
              a1[61] |= 0x1000000uLL;
              while (2)
              {
                v263 = *v3;
                v264 = *(_QWORD *)(a2 + v263);
                v265 = v264 + 1;
                if (v264 == -1 || v265 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v266 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v264);
                  *(_QWORD *)(a2 + v263) = v265;
                  v262 |= (unint64_t)(v266 & 0x7F) << v260;
                  if (v266 < 0)
                  {
                    v260 += 7;
                    v15 = v261++ >= 9;
                    if (v15)
                    {
                      v262 = 0;
                      goto LABEL_525;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v262 = 0;
LABEL_525:
              v325 = v262 != 0;
              v326 = 464;
              goto LABEL_554;
            case 0x45u:
              v267 = 0;
              v268 = 0;
              v269 = 0;
              a1[61] |= 0x10000000uLL;
              while (2)
              {
                v270 = *v3;
                v271 = *(_QWORD *)(a2 + v270);
                v272 = v271 + 1;
                if (v271 == -1 || v272 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v273 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v271);
                  *(_QWORD *)(a2 + v270) = v272;
                  v269 |= (unint64_t)(v273 & 0x7F) << v267;
                  if (v273 < 0)
                  {
                    v267 += 7;
                    v15 = v268++ >= 9;
                    if (v15)
                    {
                      v269 = 0;
                      goto LABEL_529;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v269 = 0;
LABEL_529:
              v325 = v269 != 0;
              v326 = 468;
              goto LABEL_554;
            case 0x46u:
              v274 = 0;
              v275 = 0;
              v276 = 0;
              a1[61] |= 0x8000000uLL;
              while (2)
              {
                v277 = *v3;
                v278 = *(_QWORD *)(a2 + v277);
                v279 = v278 + 1;
                if (v278 == -1 || v279 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v280 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v278);
                  *(_QWORD *)(a2 + v277) = v279;
                  v276 |= (unint64_t)(v280 & 0x7F) << v274;
                  if (v280 < 0)
                  {
                    v274 += 7;
                    v15 = v275++ >= 9;
                    if (v15)
                    {
                      v276 = 0;
                      goto LABEL_533;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v276 = 0;
LABEL_533:
              v325 = v276 != 0;
              v326 = 467;
              goto LABEL_554;
            case 0x47u:
              v281 = 0;
              v282 = 0;
              v283 = 0;
              a1[61] |= 0x4000000uLL;
              while (2)
              {
                v284 = *v3;
                v285 = *(_QWORD *)(a2 + v284);
                v286 = v285 + 1;
                if (v285 == -1 || v286 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v287 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v285);
                  *(_QWORD *)(a2 + v284) = v286;
                  v283 |= (unint64_t)(v287 & 0x7F) << v281;
                  if (v287 < 0)
                  {
                    v281 += 7;
                    v15 = v282++ >= 9;
                    if (v15)
                    {
                      v283 = 0;
                      goto LABEL_537;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v283 = 0;
LABEL_537:
              v325 = v283 != 0;
              v326 = 466;
              goto LABEL_554;
            case 0x48u:
              v288 = 0;
              v289 = 0;
              v31 = 0;
              a1[61] |= 0x400000uLL;
              while (2)
              {
                v290 = *v3;
                v291 = *(_QWORD *)(a2 + v290);
                v292 = v291 + 1;
                if (v291 == -1 || v292 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v293 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v291);
                  *(_QWORD *)(a2 + v290) = v292;
                  v31 |= (unint64_t)(v293 & 0x7F) << v288;
                  if (v293 < 0)
                  {
                    v288 += 7;
                    v15 = v289++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_541;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_541:
              v324 = 436;
              goto LABEL_559;
            case 0x49u:
              v294 = 0;
              v295 = 0;
              v296 = 0;
              a1[61] |= 0x80000000000uLL;
              while (2)
              {
                v297 = *v3;
                v298 = *(_QWORD *)(a2 + v297);
                v299 = v298 + 1;
                if (v298 == -1 || v299 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v300 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v298);
                  *(_QWORD *)(a2 + v297) = v299;
                  v296 |= (unint64_t)(v300 & 0x7F) << v294;
                  if (v300 < 0)
                  {
                    v294 += 7;
                    v15 = v295++ >= 9;
                    if (v15)
                    {
                      v296 = 0;
                      goto LABEL_545;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v296 = 0;
LABEL_545:
              v325 = v296 != 0;
              v326 = 483;
              goto LABEL_554;
            case 0x4Au:
              v301 = 0;
              v302 = 0;
              v303 = 0;
              a1[61] |= 0x1000000000uLL;
              while (2)
              {
                v304 = *v3;
                v305 = *(_QWORD *)(a2 + v304);
                v306 = v305 + 1;
                if (v305 == -1 || v306 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v307 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v305);
                  *(_QWORD *)(a2 + v304) = v306;
                  v303 |= (unint64_t)(v307 & 0x7F) << v301;
                  if (v307 < 0)
                  {
                    v301 += 7;
                    v15 = v302++ >= 9;
                    if (v15)
                    {
                      v303 = 0;
                      goto LABEL_549;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v303 = 0;
LABEL_549:
              v325 = v303 != 0;
              v326 = 476;
              goto LABEL_554;
            case 0x4Bu:
              v308 = 0;
              v309 = 0;
              v310 = 0;
              a1[61] |= 0x40000000uLL;
              while (2)
              {
                v311 = *v3;
                v312 = *(_QWORD *)(a2 + v311);
                v313 = v312 + 1;
                if (v312 == -1 || v313 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v314 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v312);
                  *(_QWORD *)(a2 + v311) = v313;
                  v310 |= (unint64_t)(v314 & 0x7F) << v308;
                  if (v314 < 0)
                  {
                    v308 += 7;
                    v15 = v309++ >= 9;
                    if (v15)
                    {
                      v310 = 0;
                      goto LABEL_553;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v310 = 0;
LABEL_553:
              v325 = v310 != 0;
              v326 = 470;
LABEL_554:
              *((_BYTE *)a1 + v326) = v325;
              goto LABEL_587;
            case 0x4Cu:
              PBReaderReadString();
              v315 = (void *)objc_claimAutoreleasedReturnValue();
              if (v315)
                objc_msgSend(a1, "addRegionIds:", v315);

              goto LABEL_587;
            case 0x4Du:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 15;
              goto LABEL_380;
            case 0x4Eu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 14;
              goto LABEL_380;
            case 0x4Fu:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 13;
LABEL_380:
              v316 = (void *)a1[v20];
              a1[v20] = v19;

              goto LABEL_587;
            case 0x50u:
              v317 = 0;
              v318 = 0;
              v31 = 0;
              a1[61] |= 0x20000uLL;
              while (2)
              {
                v319 = *v3;
                v320 = *(_QWORD *)(a2 + v319);
                v321 = v320 + 1;
                if (v320 == -1 || v321 > *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v322 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v320);
                  *(_QWORD *)(a2 + v319) = v321;
                  v31 |= (unint64_t)(v322 & 0x7F) << v317;
                  if (v322 < 0)
                  {
                    v317 += 7;
                    v15 = v318++ >= 9;
                    if (v15)
                    {
                      LODWORD(v31) = 0;
                      goto LABEL_558;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                LODWORD(v31) = 0;
LABEL_558:
              v324 = 320;
LABEL_559:
              *(_DWORD *)((char *)a1 + v324) = v31;
              goto LABEL_587;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
              goto LABEL_587;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayModuleDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  NTPBTodayModuleContentDescriptor *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = objc_alloc_init(NTPBTodayModuleContentDescriptor);
        objc_msgSend((id)a1, "addAvailableContents:", v20);
        if (!PBReaderPlaceMark() || !NTPBTodayModuleContentDescriptorReadFrom((uint64_t)v20, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((_DWORD)v17 == 2)
      {
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            break;
          v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 1;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0)
            goto LABEL_35;
          v21 += 7;
          v14 = v22++ >= 9;
          if (v14)
          {
            LODWORD(v23) = 0;
            goto LABEL_37;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_37:
        *(_DWORD *)(a1 + 24) = v23;
      }
      else if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v18;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  NTPBLanguageConfig *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  uint64_t v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  char v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  char v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  char v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  char v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  unsigned int v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  char v237;
  char v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  char v244;
  unsigned int v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  char v249;
  char v250;
  unsigned int v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  char v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  char v261;
  char v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  char v268;
  char v269;
  unsigned int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  char v275;
  char v276;
  unsigned int v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  char v281;
  char v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  char v294;
  char v295;
  unsigned int v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  char v300;
  char v301;
  unsigned int v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  char v306;
  char v307;
  unsigned int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  char v313;
  char v314;
  unsigned int v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  char v320;
  char v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  char v326;
  char v327;
  unsigned int v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  char v332;
  char v333;
  unsigned int v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  char v338;
  char v339;
  unsigned int v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  char v346;
  unsigned int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  char v352;
  char v353;
  unsigned int v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  char v359;
  uint64_t v360;
  unint64_t v361;
  uint64_t v362;
  unint64_t v363;
  char v364;
  unsigned int v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  char v369;
  char v370;
  unsigned int v371;
  uint64_t v372;
  uint64_t v373;
  unint64_t v374;
  char v375;
  char v376;
  unsigned int v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  char v381;
  char v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t v385;
  unint64_t v386;
  char v387;
  char v388;
  unsigned int v389;
  uint64_t v390;
  uint64_t v391;
  unint64_t v392;
  char v393;
  char v394;
  unsigned int v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  char v407;
  unsigned int v408;
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  char v412;
  char v413;
  unsigned int v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  char v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  unint64_t v422;
  char v423;
  char v424;
  unsigned int v425;
  uint64_t v426;
  unint64_t v427;
  char v428;
  void *v429;
  char v430;
  unsigned int v431;
  uint64_t v432;
  unint64_t v433;
  char v434;
  char v435;
  unsigned int v436;
  uint64_t v437;
  unint64_t v438;
  char v439;
  char v440;
  unsigned int v441;
  uint64_t v442;
  unint64_t v443;
  char v444;
  char v445;
  unsigned int v446;
  uint64_t v447;
  unint64_t v448;
  char v449;
  char v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  char v455;
  uint64_t v456;
  BOOL v457;
  uint64_t v458;
  uint64_t v459;
  char v460;
  unsigned int v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  char v466;
  uint64_t v467;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 600;
          goto LABEL_543;
        case 2u:
          v21 = objc_alloc_init(NTPBLanguageConfig);
          objc_msgSend((id)a1, "addLanguageConfigs:", v21);
          if (!PBReaderPlaceMark() || !NTPBLanguageConfigReadFrom((id *)&v21->super.super.isa, a2))
            goto LABEL_886;
          goto LABEL_306;
        case 3u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x100000000000uLL;
          while (2)
          {
            v25 = *v3;
            v26 = *(_QWORD *)(a2 + v25);
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
              *(_QWORD *)(a2 + v25) = v27;
              v24 |= (unint64_t)(v28 & 0x7F) << v22;
              if (v28 < 0)
              {
                v22 += 7;
                v14 = v23++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_585;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_585:
          v456 = 384;
          goto LABEL_843;
        case 4u:
          v29 = 0;
          v30 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x20000uLL;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v33;
              v24 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_589;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_589:
          v456 = 168;
          goto LABEL_843;
        case 5u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_WORD *)(a1 + 780) |= 0x80u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_593;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_593:
          v457 = v37 != 0;
          v458 = 765;
          goto LABEL_850;
        case 6u:
          *(_QWORD *)(a1 + 772) |= 0x100uLL;
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 96;
          goto LABEL_883;
        case 7u:
          *(_QWORD *)(a1 + 772) |= 0x10000uLL;
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 160;
          goto LABEL_883;
        case 8u:
          *(_QWORD *)(a1 + 772) |= 0x2000000000uLL;
          v47 = *v3;
          v48 = *(_QWORD *)(a2 + v47);
          if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 328;
          goto LABEL_883;
        case 9u:
          v21 = objc_alloc_init(NTPBEndpointConfig);
          objc_msgSend((id)a1, "addEndpointConfigs:", v21);
          if (!PBReaderPlaceMark() || (NTPBEndpointConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0xAu:
          v21 = objc_alloc_init(NTPBPersonalizationConfig);
          objc_storeStrong((id *)(a1 + 664), v21);
          if (!PBReaderPlaceMark() || (NTPBPersonalizationConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0xBu:
          v21 = objc_alloc_init(NTPBIAdConfig);
          objc_storeStrong((id *)(a1 + 624), v21);
          if (!PBReaderPlaceMark() || (NTPBIAdConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0xCu:
          v21 = objc_alloc_init(NTPBPrefetchConfig);
          objc_storeStrong((id *)(a1 + 720), v21);
          if (!PBReaderPlaceMark() || (NTPBPrefetchConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0xDu:
          *(_QWORD *)(a1 + 772) |= 0x8000000000000uLL;
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 440;
          goto LABEL_883;
        case 0xEu:
          v51 = 0;
          v52 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x800000uLL;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v55;
              v24 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_597;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_597:
          v456 = 216;
          goto LABEL_843;
        case 0xFu:
          v57 = 0;
          v58 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x8000uLL;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v61;
              v24 |= (unint64_t)(v62 & 0x7F) << v57;
              if (v62 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_601;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_601:
          v456 = 152;
          goto LABEL_843;
        case 0x10u:
          v63 = 0;
          v64 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x80uLL;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v67;
              v24 |= (unint64_t)(v68 & 0x7F) << v63;
              if (v68 < 0)
              {
                v63 += 7;
                v14 = v64++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_605;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_605:
          v456 = 88;
          goto LABEL_843;
        case 0x11u:
          v69 = 0;
          v70 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x80000000000000uLL;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v73;
              v24 |= (unint64_t)(v74 & 0x7F) << v69;
              if (v74 < 0)
              {
                v69 += 7;
                v14 = v70++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_609;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_609:
          v456 = 472;
          goto LABEL_843;
        case 0x12u:
          v75 = 0;
          v76 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 2uLL;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            v79 = v78 + 1;
            if (v78 == -1 || v79 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v79;
              v24 |= (unint64_t)(v80 & 0x7F) << v75;
              if (v80 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_613;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_613:
          v456 = 40;
          goto LABEL_843;
        case 0x13u:
          v81 = 0;
          v82 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x1000000uLL;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
              *(_QWORD *)(a2 + v83) = v85;
              v24 |= (unint64_t)(v86 & 0x7F) << v81;
              if (v86 < 0)
              {
                v81 += 7;
                v14 = v82++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_617;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_617:
          v456 = 224;
          goto LABEL_843;
        case 0x14u:
          v87 = 0;
          v88 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x20000000000000uLL;
          while (2)
          {
            v89 = *v3;
            v90 = *(_QWORD *)(a2 + v89);
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
              *(_QWORD *)(a2 + v89) = v91;
              v24 |= (unint64_t)(v92 & 0x7F) << v87;
              if (v92 < 0)
              {
                v87 += 7;
                v14 = v88++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_621;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_621:
          v456 = 456;
          goto LABEL_843;
        case 0x15u:
          v93 = 0;
          v94 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x10000000000000uLL;
          while (2)
          {
            v95 = *v3;
            v96 = *(_QWORD *)(a2 + v95);
            v97 = v96 + 1;
            if (v96 == -1 || v97 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
              *(_QWORD *)(a2 + v95) = v97;
              v24 |= (unint64_t)(v98 & 0x7F) << v93;
              if (v98 < 0)
              {
                v93 += 7;
                v14 = v94++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_625;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_625:
          v456 = 448;
          goto LABEL_843;
        case 0x16u:
          v99 = 0;
          v100 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x800000000uLL;
          while (2)
          {
            v101 = *v3;
            v102 = *(_QWORD *)(a2 + v101);
            v103 = v102 + 1;
            if (v102 == -1 || v103 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
              *(_QWORD *)(a2 + v101) = v103;
              v24 |= (unint64_t)(v104 & 0x7F) << v99;
              if (v104 < 0)
              {
                v99 += 7;
                v14 = v100++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_629;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_629:
          v456 = 312;
          goto LABEL_843;
        case 0x17u:
          v105 = 0;
          v106 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x10uLL;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)(a2 + v107);
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
              *(_QWORD *)(a2 + v107) = v109;
              v24 |= (unint64_t)(v110 & 0x7F) << v105;
              if (v110 < 0)
              {
                v105 += 7;
                v14 = v106++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_633;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_633:
          v456 = 64;
          goto LABEL_843;
        case 0x18u:
          v111 = 0;
          v112 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x400000000000uLL;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v115;
              v24 |= (unint64_t)(v116 & 0x7F) << v111;
              if (v116 < 0)
              {
                v111 += 7;
                v14 = v112++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_637;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_637:
          v456 = 400;
          goto LABEL_843;
        case 0x19u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 528;
          goto LABEL_543;
        case 0x1Au:
          v117 = 0;
          v118 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x2000000000000uLL;
          while (2)
          {
            v119 = *v3;
            v120 = *(_QWORD *)(a2 + v119);
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v122 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v120);
              *(_QWORD *)(a2 + v119) = v121;
              v24 |= (unint64_t)(v122 & 0x7F) << v117;
              if (v122 < 0)
              {
                v117 += 7;
                v14 = v118++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_641;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_641:
          v456 = 424;
          goto LABEL_843;
        case 0x1Bu:
          v123 = 0;
          v124 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x1000000000000uLL;
          while (2)
          {
            v125 = *v3;
            v126 = *(_QWORD *)(a2 + v125);
            v127 = v126 + 1;
            if (v126 == -1 || v127 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v126);
              *(_QWORD *)(a2 + v125) = v127;
              v24 |= (unint64_t)(v128 & 0x7F) << v123;
              if (v128 < 0)
              {
                v123 += 7;
                v14 = v124++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_645;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_645:
          v456 = 416;
          goto LABEL_843;
        case 0x1Cu:
          v129 = 0;
          v130 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x800000000000uLL;
          while (2)
          {
            v131 = *v3;
            v132 = *(_QWORD *)(a2 + v131);
            v133 = v132 + 1;
            if (v132 == -1 || v133 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v134 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
              *(_QWORD *)(a2 + v131) = v133;
              v24 |= (unint64_t)(v134 & 0x7F) << v129;
              if (v134 < 0)
              {
                v129 += 7;
                v14 = v130++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_649;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_649:
          v456 = 408;
          goto LABEL_843;
        case 0x1Du:
          v135 = 0;
          v136 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x80000000uLL;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)(a2 + v137);
            v139 = v138 + 1;
            if (v138 == -1 || v139 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v138);
              *(_QWORD *)(a2 + v137) = v139;
              v24 |= (unint64_t)(v140 & 0x7F) << v135;
              if (v140 < 0)
              {
                v135 += 7;
                v14 = v136++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_653;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_653:
          v456 = 280;
          goto LABEL_843;
        case 0x1Eu:
          *(_QWORD *)(a1 + 772) |= 0x1000uLL;
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 <= 0xFFFFFFFFFFFFFFF7 && v142 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 128;
          goto LABEL_883;
        case 0x1Fu:
          v143 = 0;
          v144 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x800uLL;
          while (2)
          {
            v145 = *v3;
            v146 = *(_QWORD *)(a2 + v145);
            v147 = v146 + 1;
            if (v146 == -1 || v147 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v146);
              *(_QWORD *)(a2 + v145) = v147;
              v24 |= (unint64_t)(v148 & 0x7F) << v143;
              if (v148 < 0)
              {
                v143 += 7;
                v14 = v144++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_657;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_657:
          v456 = 120;
          goto LABEL_843;
        case 0x20u:
          v21 = objc_alloc_init(NTPBWidgetConfig);
          v149 = 744;
          goto LABEL_304;
        case 0x21u:
          v150 = 0;
          v151 = 0;
          v152 = 0;
          *(_WORD *)(a1 + 780) |= 0x400u;
          while (2)
          {
            v153 = *v3;
            v154 = *(_QWORD *)(a2 + v153);
            v155 = v154 + 1;
            if (v154 == -1 || v155 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v156 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v154);
              *(_QWORD *)(a2 + v153) = v155;
              v152 |= (unint64_t)(v156 & 0x7F) << v150;
              if (v156 < 0)
              {
                v150 += 7;
                v14 = v151++ >= 9;
                if (v14)
                {
                  v152 = 0;
                  goto LABEL_661;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v152 = 0;
LABEL_661:
          v457 = v152 != 0;
          v458 = 768;
          goto LABEL_850;
        case 0x22u:
          v157 = 0;
          v158 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x100000000uLL;
          while (2)
          {
            v159 = *v3;
            v160 = *(_QWORD *)(a2 + v159);
            v161 = v160 + 1;
            if (v160 == -1 || v161 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v162 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v160);
              *(_QWORD *)(a2 + v159) = v161;
              v24 |= (unint64_t)(v162 & 0x7F) << v157;
              if (v162 < 0)
              {
                v157 += 7;
                v14 = v158++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_665;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_665:
          v456 = 288;
          goto LABEL_843;
        case 0x23u:
          v163 = 0;
          v164 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x200000000uLL;
          while (2)
          {
            v165 = *v3;
            v166 = *(_QWORD *)(a2 + v165);
            v167 = v166 + 1;
            if (v166 == -1 || v167 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v168 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v166);
              *(_QWORD *)(a2 + v165) = v167;
              v24 |= (unint64_t)(v168 & 0x7F) << v163;
              if (v168 < 0)
              {
                v163 += 7;
                v14 = v164++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_669;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_669:
          v456 = 296;
          goto LABEL_843;
        case 0x24u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 608;
          goto LABEL_543;
        case 0x25u:
          v169 = 0;
          v170 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x400000000uLL;
          while (2)
          {
            v171 = *v3;
            v172 = *(_QWORD *)(a2 + v171);
            v173 = v172 + 1;
            if (v172 == -1 || v173 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v172);
              *(_QWORD *)(a2 + v171) = v173;
              v24 |= (unint64_t)(v174 & 0x7F) << v169;
              if (v174 < 0)
              {
                v169 += 7;
                v14 = v170++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_673;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_673:
          v456 = 304;
          goto LABEL_843;
        case 0x26u:
          v175 = 0;
          v176 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x40000000000uLL;
          while (2)
          {
            v177 = *v3;
            v178 = *(_QWORD *)(a2 + v177);
            v179 = v178 + 1;
            if (v178 == -1 || v179 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v180 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v178);
              *(_QWORD *)(a2 + v177) = v179;
              v24 |= (unint64_t)(v180 & 0x7F) << v175;
              if (v180 < 0)
              {
                v175 += 7;
                v14 = v176++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_677;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_677:
          v456 = 368;
          goto LABEL_843;
        case 0x27u:
          v181 = 0;
          v182 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x20000000000uLL;
          while (2)
          {
            v183 = *v3;
            v184 = *(_QWORD *)(a2 + v183);
            v185 = v184 + 1;
            if (v184 == -1 || v185 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v186 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v184);
              *(_QWORD *)(a2 + v183) = v185;
              v24 |= (unint64_t)(v186 & 0x7F) << v181;
              if (v186 < 0)
              {
                v181 += 7;
                v14 = v182++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_681;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_681:
          v456 = 360;
          goto LABEL_843;
        case 0x28u:
          v187 = 0;
          v188 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x10000000000uLL;
          while (2)
          {
            v189 = *v3;
            v190 = *(_QWORD *)(a2 + v189);
            v191 = v190 + 1;
            if (v190 == -1 || v191 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v190);
              *(_QWORD *)(a2 + v189) = v191;
              v24 |= (unint64_t)(v192 & 0x7F) << v187;
              if (v192 < 0)
              {
                v187 += 7;
                v14 = v188++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_685;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_685:
          v456 = 352;
          goto LABEL_843;
        case 0x29u:
          v193 = 0;
          v194 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x80000000000uLL;
          while (2)
          {
            v195 = *v3;
            v196 = *(_QWORD *)(a2 + v195);
            v197 = v196 + 1;
            if (v196 == -1 || v197 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v198 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
              *(_QWORD *)(a2 + v195) = v197;
              v24 |= (unint64_t)(v198 & 0x7F) << v193;
              if (v198 < 0)
              {
                v193 += 7;
                v14 = v194++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_689:
          v456 = 376;
          goto LABEL_843;
        case 0x2Au:
          v21 = objc_alloc_init(NTPBWidgetConfig);
          v149 = 520;
          goto LABEL_304;
        case 0x2Bu:
          v199 = 0;
          v200 = 0;
          v201 = 0;
          *(_WORD *)(a1 + 780) |= 4u;
          while (2)
          {
            v202 = *v3;
            v203 = *(_QWORD *)(a2 + v202);
            v204 = v203 + 1;
            if (v203 == -1 || v204 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v205 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v203);
              *(_QWORD *)(a2 + v202) = v204;
              v201 |= (unint64_t)(v205 & 0x7F) << v199;
              if (v205 < 0)
              {
                v199 += 7;
                v14 = v200++ >= 9;
                if (v14)
                {
                  v201 = 0;
                  goto LABEL_693;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v201 = 0;
LABEL_693:
          v457 = v201 != 0;
          v458 = 760;
          goto LABEL_850;
        case 0x2Cu:
          v21 = objc_alloc_init(NTPBWidgetConfig);
          v149 = 560;
          goto LABEL_304;
        case 0x2Du:
          v21 = objc_alloc_init(NTPBPaidSubscriptionConfig);
          objc_storeStrong((id *)(a1 + 648), v21);
          if (!PBReaderPlaceMark() || !NTPBPaidSubscriptionConfigReadFrom((uint64_t)v21, a2))
            goto LABEL_886;
          goto LABEL_306;
        case 0x2Eu:
          *(_QWORD *)(a1 + 772) |= 8uLL;
          v206 = *v3;
          v207 = *(_QWORD *)(a2 + v206);
          if (v207 <= 0xFFFFFFFFFFFFFFF7 && v207 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v207);
            *(_QWORD *)(a2 + v206) = v207 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 56;
          goto LABEL_883;
        case 0x2Fu:
          *(_QWORD *)(a1 + 772) |= 4uLL;
          v208 = *v3;
          v209 = *(_QWORD *)(a2 + v208);
          if (v209 <= 0xFFFFFFFFFFFFFFF7 && v209 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v209);
            *(_QWORD *)(a2 + v208) = v209 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 48;
          goto LABEL_883;
        case 0x30u:
          v210 = 0;
          v211 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x80000uLL;
          while (2)
          {
            v212 = *v3;
            v213 = *(_QWORD *)(a2 + v212);
            v214 = v213 + 1;
            if (v213 == -1 || v214 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v215 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v213);
              *(_QWORD *)(a2 + v212) = v214;
              v24 |= (unint64_t)(v215 & 0x7F) << v210;
              if (v215 < 0)
              {
                v210 += 7;
                v14 = v211++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_697;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_697:
          v456 = 184;
          goto LABEL_843;
        case 0x31u:
          v216 = 0;
          v217 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x100000uLL;
          while (2)
          {
            v218 = *v3;
            v219 = *(_QWORD *)(a2 + v218);
            v220 = v219 + 1;
            if (v219 == -1 || v220 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v221 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
              *(_QWORD *)(a2 + v218) = v220;
              v24 |= (unint64_t)(v221 & 0x7F) << v216;
              if (v221 < 0)
              {
                v216 += 7;
                v14 = v217++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_701;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_701:
          v456 = 192;
          goto LABEL_843;
        case 0x32u:
          v222 = 0;
          v223 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x200000uLL;
          while (2)
          {
            v224 = *v3;
            v225 = *(_QWORD *)(a2 + v224);
            v226 = v225 + 1;
            if (v225 == -1 || v226 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v227 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v225);
              *(_QWORD *)(a2 + v224) = v226;
              v24 |= (unint64_t)(v227 & 0x7F) << v222;
              if (v227 < 0)
              {
                v222 += 7;
                v14 = v223++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_705;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_705:
          v456 = 200;
          goto LABEL_843;
        case 0x33u:
          *(_QWORD *)(a1 + 772) |= 0x4000000000uLL;
          v228 = *v3;
          v229 = *(_QWORD *)(a2 + v228);
          if (v229 <= 0xFFFFFFFFFFFFFFF7 && v229 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v229);
            *(_QWORD *)(a2 + v228) = v229 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 336;
          goto LABEL_883;
        case 0x34u:
          *(_QWORD *)(a1 + 772) |= 0x8000000000uLL;
          v230 = *v3;
          v231 = *(_QWORD *)(a2 + v230);
          if (v231 <= 0xFFFFFFFFFFFFFFF7 && v231 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v231);
            *(_QWORD *)(a2 + v230) = v231 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 344;
          goto LABEL_883;
        case 0x35u:
          v232 = 0;
          v233 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x4000uLL;
          while (2)
          {
            v234 = *v3;
            v235 = *(_QWORD *)(a2 + v234);
            v236 = v235 + 1;
            if (v235 == -1 || v236 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v237 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v235);
              *(_QWORD *)(a2 + v234) = v236;
              v24 |= (unint64_t)(v237 & 0x7F) << v232;
              if (v237 < 0)
              {
                v232 += 7;
                v14 = v233++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_709;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_709:
          v456 = 144;
          goto LABEL_843;
        case 0x36u:
          v238 = 0;
          v239 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x40000uLL;
          while (2)
          {
            v240 = *v3;
            v241 = *(_QWORD *)(a2 + v240);
            v242 = v241 + 1;
            if (v241 == -1 || v242 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v243 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v241);
              *(_QWORD *)(a2 + v240) = v242;
              v24 |= (unint64_t)(v243 & 0x7F) << v238;
              if (v243 < 0)
              {
                v238 += 7;
                v14 = v239++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_713;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_713:
          v456 = 176;
          goto LABEL_843;
        case 0x37u:
          v21 = objc_alloc_init(NTPBWidgetConfig);
          v149 = 752;
LABEL_304:
          objc_storeStrong((id *)(a1 + v149), v21);
          if (PBReaderPlaceMark() && (NTPBWidgetConfigReadFrom((uint64_t)v21, a2) & 1) != 0)
            goto LABEL_306;
          goto LABEL_886;
        case 0x38u:
          v244 = 0;
          v245 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x4000000000000uLL;
          while (2)
          {
            v246 = *v3;
            v247 = *(_QWORD *)(a2 + v246);
            v248 = v247 + 1;
            if (v247 == -1 || v248 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v249 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v247);
              *(_QWORD *)(a2 + v246) = v248;
              v24 |= (unint64_t)(v249 & 0x7F) << v244;
              if (v249 < 0)
              {
                v244 += 7;
                v14 = v245++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_717;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_717:
          v456 = 432;
          goto LABEL_843;
        case 0x39u:
          v250 = 0;
          v251 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x40000000000000uLL;
          while (2)
          {
            v252 = *v3;
            v253 = *(_QWORD *)(a2 + v252);
            v254 = v253 + 1;
            if (v253 == -1 || v254 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v255 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v253);
              *(_QWORD *)(a2 + v252) = v254;
              v24 |= (unint64_t)(v255 & 0x7F) << v250;
              if (v255 < 0)
              {
                v250 += 7;
                v14 = v251++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_721;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_721:
          v456 = 464;
          goto LABEL_843;
        case 0x3Au:
          v21 = objc_alloc_init(NTPBBinningConfig);
          objc_storeStrong((id *)(a1 + 552), v21);
          if (!PBReaderPlaceMark() || (NTPBBinningConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0x3Bu:
          v21 = objc_alloc_init(NTPBPersonalizationTreatment);
          objc_storeStrong((id *)(a1 + 688), v21);
          if (!PBReaderPlaceMark() || (NTPBPersonalizationTreatmentReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0x3Cu:
          v256 = 0;
          v257 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 1uLL;
          while (2)
          {
            v258 = *v3;
            v259 = *(_QWORD *)(a2 + v258);
            v260 = v259 + 1;
            if (v259 == -1 || v260 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v261 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v259);
              *(_QWORD *)(a2 + v258) = v260;
              v24 |= (unint64_t)(v261 & 0x7F) << v256;
              if (v261 < 0)
              {
                v256 += 7;
                v14 = v257++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_725;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_725:
          v456 = 32;
          goto LABEL_843;
        case 0x3Du:
          v262 = 0;
          v263 = 0;
          v264 = 0;
          *(_WORD *)(a1 + 780) |= 0x100u;
          while (2)
          {
            v265 = *v3;
            v266 = *(_QWORD *)(a2 + v265);
            v267 = v266 + 1;
            if (v266 == -1 || v267 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v268 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v266);
              *(_QWORD *)(a2 + v265) = v267;
              v264 |= (unint64_t)(v268 & 0x7F) << v262;
              if (v268 < 0)
              {
                v262 += 7;
                v14 = v263++ >= 9;
                if (v14)
                {
                  v264 = 0;
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v264 = 0;
LABEL_729:
          v457 = v264 != 0;
          v458 = 766;
          goto LABEL_850;
        case 0x3Eu:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 656;
          goto LABEL_543;
        case 0x3Fu:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 696;
          goto LABEL_543;
        case 0x40u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 704;
          goto LABEL_543;
        case 0x41u:
          v269 = 0;
          v270 = 0;
          v271 = 0;
          *(_QWORD *)(a1 + 772) |= 0x2000000000000000uLL;
          while (2)
          {
            v272 = *v3;
            v273 = *(_QWORD *)(a2 + v272);
            v274 = v273 + 1;
            if (v273 == -1 || v274 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v275 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v273);
              *(_QWORD *)(a2 + v272) = v274;
              v271 |= (unint64_t)(v275 & 0x7F) << v269;
              if (v275 < 0)
              {
                v269 += 7;
                v14 = v270++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_733;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v271) = 0;
LABEL_733:
          v459 = 568;
          goto LABEL_826;
        case 0x42u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 680;
          goto LABEL_543;
        case 0x43u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 712;
          goto LABEL_543;
        case 0x44u:
          v276 = 0;
          v277 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x200uLL;
          while (2)
          {
            v278 = *v3;
            v279 = *(_QWORD *)(a2 + v278);
            v280 = v279 + 1;
            if (v279 == -1 || v280 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v281 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v279);
              *(_QWORD *)(a2 + v278) = v280;
              v24 |= (unint64_t)(v281 & 0x7F) << v276;
              if (v281 < 0)
              {
                v276 += 7;
                v14 = v277++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_737;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_737:
          v456 = 104;
          goto LABEL_843;
        case 0x45u:
          v282 = 0;
          v283 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x400uLL;
          while (2)
          {
            v284 = *v3;
            v285 = *(_QWORD *)(a2 + v284);
            v286 = v285 + 1;
            if (v285 == -1 || v286 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v287 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v285);
              *(_QWORD *)(a2 + v284) = v286;
              v24 |= (unint64_t)(v287 & 0x7F) << v282;
              if (v287 < 0)
              {
                v282 += 7;
                v14 = v283++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_741;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_741:
          v456 = 112;
          goto LABEL_843;
        case 0x46u:
          v288 = 0;
          v289 = 0;
          v290 = 0;
          *(_WORD *)(a1 + 780) |= 0x10u;
          while (2)
          {
            v291 = *v3;
            v292 = *(_QWORD *)(a2 + v291);
            v293 = v292 + 1;
            if (v292 == -1 || v293 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v294 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v292);
              *(_QWORD *)(a2 + v291) = v293;
              v290 |= (unint64_t)(v294 & 0x7F) << v288;
              if (v294 < 0)
              {
                v288 += 7;
                v14 = v289++ >= 9;
                if (v14)
                {
                  v290 = 0;
                  goto LABEL_745;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v290 = 0;
LABEL_745:
          v457 = v290 != 0;
          v458 = 762;
          goto LABEL_850;
        case 0x47u:
          v21 = objc_alloc_init(NTPBExternalAnalyticsConfig);
          objc_msgSend((id)a1, "addExternalAnalyticsConfig:", v21);
          if (!PBReaderPlaceMark() || (NTPBExternalAnalyticsConfigReadFrom(v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0x48u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 672;
          goto LABEL_543;
        case 0x49u:
          v295 = 0;
          v296 = 0;
          v271 = 0;
          *(_QWORD *)(a1 + 772) |= 0x8000000000000000;
          while (2)
          {
            v297 = *v3;
            v298 = *(_QWORD *)(a2 + v297);
            v299 = v298 + 1;
            if (v298 == -1 || v299 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v300 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v298);
              *(_QWORD *)(a2 + v297) = v299;
              v271 |= (unint64_t)(v300 & 0x7F) << v295;
              if (v300 < 0)
              {
                v295 += 7;
                v14 = v296++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_749;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v271) = 0;
LABEL_749:
          v459 = 644;
          goto LABEL_826;
        case 0x4Au:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 584;
          goto LABEL_543;
        case 0x4Bu:
          v301 = 0;
          v302 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x20000000uLL;
          while (2)
          {
            v303 = *v3;
            v304 = *(_QWORD *)(a2 + v303);
            v305 = v304 + 1;
            if (v304 == -1 || v305 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v306 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v304);
              *(_QWORD *)(a2 + v303) = v305;
              v24 |= (unint64_t)(v306 & 0x7F) << v301;
              if (v306 < 0)
              {
                v301 += 7;
                v14 = v302++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_753;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_753:
          v456 = 264;
          goto LABEL_843;
        case 0x4Cu:
          v307 = 0;
          v308 = 0;
          v309 = 0;
          *(_WORD *)(a1 + 780) |= 0x1000u;
          while (2)
          {
            v310 = *v3;
            v311 = *(_QWORD *)(a2 + v310);
            v312 = v311 + 1;
            if (v311 == -1 || v312 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v313 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v311);
              *(_QWORD *)(a2 + v310) = v312;
              v309 |= (unint64_t)(v313 & 0x7F) << v307;
              if (v313 < 0)
              {
                v307 += 7;
                v14 = v308++ >= 9;
                if (v14)
                {
                  v309 = 0;
                  goto LABEL_757;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v309 = 0;
LABEL_757:
          v457 = v309 != 0;
          v458 = 770;
          goto LABEL_850;
        case 0x4Du:
          v314 = 0;
          v315 = 0;
          v316 = 0;
          *(_WORD *)(a1 + 780) |= 0x800u;
          while (2)
          {
            v317 = *v3;
            v318 = *(_QWORD *)(a2 + v317);
            v319 = v318 + 1;
            if (v318 == -1 || v319 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v320 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v318);
              *(_QWORD *)(a2 + v317) = v319;
              v316 |= (unint64_t)(v320 & 0x7F) << v314;
              if (v320 < 0)
              {
                v314 += 7;
                v14 = v315++ >= 9;
                if (v14)
                {
                  v316 = 0;
                  goto LABEL_761;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v316 = 0;
LABEL_761:
          v457 = v316 != 0;
          v458 = 769;
          goto LABEL_850;
        case 0x4Eu:
          v321 = 0;
          v322 = 0;
          v271 = 0;
          *(_QWORD *)(a1 + 772) |= 0x4000000000000000uLL;
          while (2)
          {
            v323 = *v3;
            v324 = *(_QWORD *)(a2 + v323);
            v325 = v324 + 1;
            if (v324 == -1 || v325 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v326 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v324);
              *(_QWORD *)(a2 + v323) = v325;
              v271 |= (unint64_t)(v326 & 0x7F) << v321;
              if (v326 < 0)
              {
                v321 += 7;
                v14 = v322++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_765;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v271) = 0;
LABEL_765:
          v459 = 640;
          goto LABEL_826;
        case 0x4Fu:
          v327 = 0;
          v328 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x200000000000uLL;
          while (2)
          {
            v329 = *v3;
            v330 = *(_QWORD *)(a2 + v329);
            v331 = v330 + 1;
            if (v330 == -1 || v331 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v332 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v330);
              *(_QWORD *)(a2 + v329) = v331;
              v24 |= (unint64_t)(v332 & 0x7F) << v327;
              if (v332 < 0)
              {
                v327 += 7;
                v14 = v328++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_769;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_769:
          v456 = 392;
          goto LABEL_843;
        case 0x50u:
          v333 = 0;
          v334 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x40uLL;
          while (2)
          {
            v335 = *v3;
            v336 = *(_QWORD *)(a2 + v335);
            v337 = v336 + 1;
            if (v336 == -1 || v337 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v338 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v336);
              *(_QWORD *)(a2 + v335) = v337;
              v24 |= (unint64_t)(v338 & 0x7F) << v333;
              if (v338 < 0)
              {
                v333 += 7;
                v14 = v334++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_773;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_773:
          v456 = 80;
          goto LABEL_843;
        case 0x51u:
          v339 = 0;
          v340 = 0;
          v341 = 0;
          *(_WORD *)(a1 + 780) |= 0x200u;
          while (2)
          {
            v342 = *v3;
            v343 = *(_QWORD *)(a2 + v342);
            v344 = v343 + 1;
            if (v343 == -1 || v344 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v345 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v343);
              *(_QWORD *)(a2 + v342) = v344;
              v341 |= (unint64_t)(v345 & 0x7F) << v339;
              if (v345 < 0)
              {
                v339 += 7;
                v14 = v340++ >= 9;
                if (v14)
                {
                  v341 = 0;
                  goto LABEL_777;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v341 = 0;
LABEL_777:
          v457 = v341 != 0;
          v458 = 767;
          goto LABEL_850;
        case 0x52u:
          if (v16 == 2)
          {
            result = PBReaderPlaceMark();
            if (!(_DWORD)result)
              return result;
            while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
            {
              v346 = 0;
              v347 = 0;
              v348 = 0;
              while (1)
              {
                v349 = *v3;
                v350 = *(_QWORD *)(a2 + v349);
                v351 = v350 + 1;
                if (v350 == -1 || v351 > *(_QWORD *)(a2 + *v4))
                  break;
                v352 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v350);
                *(_QWORD *)(a2 + v349) = v351;
                v348 |= (unint64_t)(v352 & 0x7F) << v346;
                if (v352 < 0)
                {
                  v346 += 7;
                  v14 = v347++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_447;
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_447:
              PBRepeatedInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v460 = 0;
            v461 = 0;
            v462 = 0;
            while (1)
            {
              v463 = *v3;
              v464 = *(_QWORD *)(a2 + v463);
              v465 = v464 + 1;
              if (v464 == -1 || v465 > *(_QWORD *)(a2 + *v4))
                break;
              v466 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v464);
              *(_QWORD *)(a2 + v463) = v465;
              v462 |= (unint64_t)(v466 & 0x7F) << v460;
              if (v466 < 0)
              {
                v460 += 7;
                v14 = v461++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_860;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_860:
            PBRepeatedInt64Add();
          }
          goto LABEL_844;
        case 0x53u:
          v353 = 0;
          v354 = 0;
          v355 = 0;
          *(_WORD *)(a1 + 780) |= 8u;
          while (2)
          {
            v356 = *v3;
            v357 = *(_QWORD *)(a2 + v356);
            v358 = v357 + 1;
            if (v357 == -1 || v358 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v359 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v357);
              *(_QWORD *)(a2 + v356) = v358;
              v355 |= (unint64_t)(v359 & 0x7F) << v353;
              if (v359 < 0)
              {
                v353 += 7;
                v14 = v354++ >= 9;
                if (v14)
                {
                  v355 = 0;
                  goto LABEL_781;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v355 = 0;
LABEL_781:
          v457 = v355 != 0;
          v458 = 761;
          goto LABEL_850;
        case 0x54u:
          *(_QWORD *)(a1 + 772) |= 0x400000uLL;
          v360 = *v3;
          v361 = *(_QWORD *)(a2 + v360);
          if (v361 <= 0xFFFFFFFFFFFFFFF7 && v361 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v361);
            *(_QWORD *)(a2 + v360) = v361 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 208;
          goto LABEL_883;
        case 0x55u:
          *(_QWORD *)(a1 + 772) |= 0x40000000uLL;
          v362 = *v3;
          v363 = *(_QWORD *)(a2 + v362);
          if (v363 <= 0xFFFFFFFFFFFFFFF7 && v363 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v363);
            *(_QWORD *)(a2 + v362) = v363 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v44 = 0;
          }
          v467 = 272;
LABEL_883:
          *(_QWORD *)(a1 + v467) = v44;
          goto LABEL_844;
        case 0x56u:
          v364 = 0;
          v365 = 0;
          v271 = 0;
          *(_WORD *)(a1 + 780) |= 2u;
          while (2)
          {
            v366 = *v3;
            v367 = *(_QWORD *)(a2 + v366);
            v368 = v367 + 1;
            if (v367 == -1 || v368 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v369 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v367);
              *(_QWORD *)(a2 + v366) = v368;
              v271 |= (unint64_t)(v369 & 0x7F) << v364;
              if (v369 < 0)
              {
                v364 += 7;
                v14 = v365++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_785;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v271) = 0;
LABEL_785:
          v459 = 732;
          goto LABEL_826;
        case 0x57u:
          v370 = 0;
          v371 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x2000000uLL;
          while (2)
          {
            v372 = *v3;
            v373 = *(_QWORD *)(a2 + v372);
            v374 = v373 + 1;
            if (v373 == -1 || v374 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v375 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v373);
              *(_QWORD *)(a2 + v372) = v374;
              v24 |= (unint64_t)(v375 & 0x7F) << v370;
              if (v375 < 0)
              {
                v370 += 7;
                v14 = v371++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_789;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_789:
          v456 = 232;
          goto LABEL_843;
        case 0x58u:
          v376 = 0;
          v377 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x4000000uLL;
          while (2)
          {
            v378 = *v3;
            v379 = *(_QWORD *)(a2 + v378);
            v380 = v379 + 1;
            if (v379 == -1 || v380 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v381 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v379);
              *(_QWORD *)(a2 + v378) = v380;
              v24 |= (unint64_t)(v381 & 0x7F) << v376;
              if (v381 < 0)
              {
                v376 += 7;
                v14 = v377++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_793;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_793:
          v456 = 240;
          goto LABEL_843;
        case 0x59u:
          v382 = 0;
          v383 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x8000000uLL;
          while (2)
          {
            v384 = *v3;
            v385 = *(_QWORD *)(a2 + v384);
            v386 = v385 + 1;
            if (v385 == -1 || v386 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v387 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v385);
              *(_QWORD *)(a2 + v384) = v386;
              v24 |= (unint64_t)(v387 & 0x7F) << v382;
              if (v387 < 0)
              {
                v382 += 7;
                v14 = v383++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_797;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_797:
          v456 = 248;
          goto LABEL_843;
        case 0x5Au:
          v388 = 0;
          v389 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x10000000uLL;
          while (2)
          {
            v390 = *v3;
            v391 = *(_QWORD *)(a2 + v390);
            v392 = v391 + 1;
            if (v391 == -1 || v392 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v393 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v391);
              *(_QWORD *)(a2 + v390) = v392;
              v24 |= (unint64_t)(v393 & 0x7F) << v388;
              if (v393 < 0)
              {
                v388 += 7;
                v14 = v389++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_801;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_801:
          v456 = 256;
          goto LABEL_843;
        case 0x5Bu:
          v394 = 0;
          v395 = 0;
          v396 = 0;
          *(_WORD *)(a1 + 780) |= 0x40u;
          while (2)
          {
            v397 = *v3;
            v398 = *(_QWORD *)(a2 + v397);
            v399 = v398 + 1;
            if (v398 == -1 || v399 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v400 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v398);
              *(_QWORD *)(a2 + v397) = v399;
              v396 |= (unint64_t)(v400 & 0x7F) << v394;
              if (v400 < 0)
              {
                v394 += 7;
                v14 = v395++ >= 9;
                if (v14)
                {
                  v396 = 0;
                  goto LABEL_805;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v396 = 0;
LABEL_805:
          v457 = v396 != 0;
          v458 = 764;
          goto LABEL_850;
        case 0x5Cu:
          v21 = objc_alloc_init(NTPBVideoGroupsConfig);
          objc_storeStrong((id *)(a1 + 616), v21);
          if (!PBReaderPlaceMark() || (NTPBVideoGroupsConfigReadFrom((uint64_t)v21, a2) & 1) == 0)
            goto LABEL_886;
          goto LABEL_306;
        case 0x5Du:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 544;
          goto LABEL_543;
        case 0x5Eu:
          v401 = 0;
          v402 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x1000000000uLL;
          while (2)
          {
            v403 = *v3;
            v404 = *(_QWORD *)(a2 + v403);
            v405 = v404 + 1;
            if (v404 == -1 || v405 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v406 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v404);
              *(_QWORD *)(a2 + v403) = v405;
              v24 |= (unint64_t)(v406 & 0x7F) << v401;
              if (v406 < 0)
              {
                v401 += 7;
                v14 = v402++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_809;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_809:
          v456 = 320;
          goto LABEL_843;
        case 0x5Fu:
          v407 = 0;
          v408 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x2000uLL;
          while (2)
          {
            v409 = *v3;
            v410 = *(_QWORD *)(a2 + v409);
            v411 = v410 + 1;
            if (v410 == -1 || v411 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v412 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v410);
              *(_QWORD *)(a2 + v409) = v411;
              v24 |= (unint64_t)(v412 & 0x7F) << v407;
              if (v412 < 0)
              {
                v407 += 7;
                v14 = v408++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_813;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_813:
          v456 = 136;
          goto LABEL_843;
        case 0x60u:
          v413 = 0;
          v414 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x200000000000000uLL;
          while (2)
          {
            v415 = *v3;
            v416 = *(_QWORD *)(a2 + v415);
            v417 = v416 + 1;
            if (v416 == -1 || v417 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v418 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v416);
              *(_QWORD *)(a2 + v415) = v417;
              v24 |= (unint64_t)(v418 & 0x7F) << v413;
              if (v418 < 0)
              {
                v413 += 7;
                v14 = v414++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_817;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_817:
          v456 = 488;
          goto LABEL_843;
        case 0x61u:
          v419 = 0;
          v420 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x100000000000000uLL;
          while (2)
          {
            v421 = *v3;
            v422 = *(_QWORD *)(a2 + v421);
            if (v422 == -1 || v422 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v423 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v422);
              *(_QWORD *)(a2 + v421) = v422 + 1;
              v24 |= (unint64_t)(v423 & 0x7F) << v419;
              if (v423 < 0)
              {
                v419 += 7;
                v14 = v420++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_821;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_821:
          v456 = 480;
          goto LABEL_843;
        case 0x62u:
          v424 = 0;
          v425 = 0;
          v271 = 0;
          *(_WORD *)(a1 + 780) |= 1u;
          while (2)
          {
            v426 = *v3;
            v427 = *(_QWORD *)(a2 + v426);
            if (v427 == -1 || v427 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v428 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v427);
              *(_QWORD *)(a2 + v426) = v427 + 1;
              v271 |= (unint64_t)(v428 & 0x7F) << v424;
              if (v428 < 0)
              {
                v424 += 7;
                v14 = v425++ >= 9;
                if (v14)
                {
                  LODWORD(v271) = 0;
                  goto LABEL_825;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v271) = 0;
LABEL_825:
          v459 = 728;
LABEL_826:
          *(_DWORD *)(a1 + v459) = v271;
          goto LABEL_844;
        case 0x63u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 536;
LABEL_543:
          v429 = *(void **)(a1 + v19);
          *(_QWORD *)(a1 + v19) = v18;

          goto LABEL_844;
        case 0x64u:
          v430 = 0;
          v431 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x1000000000000000uLL;
          while (2)
          {
            v432 = *v3;
            v433 = *(_QWORD *)(a2 + v432);
            if (v433 == -1 || v433 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v434 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v433);
              *(_QWORD *)(a2 + v432) = v433 + 1;
              v24 |= (unint64_t)(v434 & 0x7F) << v430;
              if (v434 < 0)
              {
                v430 += 7;
                v14 = v431++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_830;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_830:
          v456 = 512;
          goto LABEL_843;
        case 0x65u:
          v435 = 0;
          v436 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x800000000000000uLL;
          while (2)
          {
            v437 = *v3;
            v438 = *(_QWORD *)(a2 + v437);
            if (v438 == -1 || v438 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v439 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v438);
              *(_QWORD *)(a2 + v437) = v438 + 1;
              v24 |= (unint64_t)(v439 & 0x7F) << v435;
              if (v439 < 0)
              {
                v435 += 7;
                v14 = v436++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_834;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_834:
          v456 = 504;
          goto LABEL_843;
        case 0x66u:
          v440 = 0;
          v441 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x400000000000000uLL;
          while (2)
          {
            v442 = *v3;
            v443 = *(_QWORD *)(a2 + v442);
            if (v443 == -1 || v443 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v444 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v443);
              *(_QWORD *)(a2 + v442) = v443 + 1;
              v24 |= (unint64_t)(v444 & 0x7F) << v440;
              if (v444 < 0)
              {
                v440 += 7;
                v14 = v441++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_838;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_838:
          v456 = 496;
          goto LABEL_843;
        case 0x67u:
          v445 = 0;
          v446 = 0;
          v24 = 0;
          *(_QWORD *)(a1 + 772) |= 0x20uLL;
          while (2)
          {
            v447 = *v3;
            v448 = *(_QWORD *)(a2 + v447);
            if (v448 == -1 || v448 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v449 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v448);
              *(_QWORD *)(a2 + v447) = v448 + 1;
              v24 |= (unint64_t)(v449 & 0x7F) << v445;
              if (v449 < 0)
              {
                v445 += 7;
                v14 = v446++ >= 9;
                if (v14)
                {
                  v24 = 0;
                  goto LABEL_842;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v24 = 0;
LABEL_842:
          v456 = 72;
LABEL_843:
          *(_QWORD *)(a1 + v456) = v24;
          goto LABEL_844;
        case 0x68u:
          v450 = 0;
          v451 = 0;
          v452 = 0;
          *(_WORD *)(a1 + 780) |= 0x20u;
          while (2)
          {
            v453 = *v3;
            v454 = *(_QWORD *)(a2 + v453);
            if (v454 == -1 || v454 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v455 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v454);
              *(_QWORD *)(a2 + v453) = v454 + 1;
              v452 |= (unint64_t)(v455 & 0x7F) << v450;
              if (v455 < 0)
              {
                v450 += 7;
                v14 = v451++ >= 9;
                if (v14)
                {
                  v452 = 0;
                  goto LABEL_849;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v452 = 0;
LABEL_849:
          v457 = v452 != 0;
          v458 = 763;
LABEL_850:
          *(_BYTE *)(a1 + v458) = v457;
          goto LABEL_844;
        case 0x69u:
          v21 = objc_alloc_init(NTPBUserSegmentationApiConfiguration);
          objc_storeStrong((id *)(a1 + 736), v21);
          if (!PBReaderPlaceMark() || !NTPBUserSegmentationApiConfigurationReadFrom((uint64_t)v21, a2))
          {
LABEL_886:

            return 0;
          }
LABEL_306:
          PBReaderRecallMark();

LABEL_844:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          goto LABEL_844;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedSubscribeUnsubscribeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  void *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  void *v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x800u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_135;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_137;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_135:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_137:
          v96 = 168;
          goto LABEL_187;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x20u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_141:
          v96 = 76;
          goto LABEL_187;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 64;
          goto LABEL_133;
        case 4u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x200u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_145:
          v96 = 152;
          goto LABEL_187;
        case 5u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x40u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_149:
          v96 = 88;
          goto LABEL_187;
        case 6u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 8u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_153:
          v96 = 56;
          goto LABEL_187;
        case 7u:
          v46 = 0;
          v47 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 4u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v49 + 1;
              v19 |= (unint64_t)(v50 & 0x7F) << v46;
              if (v50 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_157:
          v96 = 52;
          goto LABEL_187;
        case 8u:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 80;
          goto LABEL_133;
        case 9u:
          v51 = 0;
          v52 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 2u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            if (v54 == -1 || v54 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v54 + 1;
              v19 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_161:
          v96 = 48;
          goto LABEL_187;
        case 0xAu:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 144;
          goto LABEL_133;
        case 0xBu:
          PBReaderReadString();
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          if (v56)
            objc_msgSend((id)a1, "addSubscribedFeedIds:", v56);

          continue;
        case 0xCu:
          v57 = 0;
          v58 = 0;
          v59 = 0;
          *(_WORD *)(a1 + 176) |= 0x1000u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v59 |= (unint64_t)(v62 & 0x7F) << v57;
              if (v62 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  v59 = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v59 = 0;
LABEL_165:
          v97 = v59 != 0;
          v98 = 172;
          goto LABEL_174;
        case 0xDu:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 96;
          goto LABEL_133;
        case 0xEu:
          v63 = 0;
          v64 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x80u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v19 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_169;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_169:
          v96 = 104;
          goto LABEL_187;
        case 0xFu:
          v68 = 0;
          v69 = 0;
          v70 = 0;
          *(_WORD *)(a1 + 176) |= 0x2000u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  v70 = 0;
                  goto LABEL_173;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v70 = 0;
LABEL_173:
          v97 = v70 != 0;
          v98 = 173;
LABEL_174:
          *(_BYTE *)(a1 + v98) = v97;
          continue;
        case 0x10u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 24;
          goto LABEL_133;
        case 0x11u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
          goto LABEL_133;
        case 0x12u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 40;
          goto LABEL_133;
        case 0x13u:
          v74 = 0;
          v75 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x100u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v19 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_178:
          v96 = 136;
          goto LABEL_187;
        case 0x14u:
          v79 = 0;
          v80 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x400u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v19 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_182:
          v96 = 156;
          goto LABEL_187;
        case 0x15u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 16;
          goto LABEL_133;
        case 0x16u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 120;
          goto LABEL_133;
        case 0x17u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 128;
          goto LABEL_133;
        case 0x18u:
          v84 = 0;
          v85 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 176) |= 0x10u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v19 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_186:
          v96 = 72;
LABEL_187:
          *(_DWORD *)(a1 + v96) = v19;
          continue;
        case 0x19u:
          v89 = 0;
          v90 = 0;
          v91 = 0;
          *(_WORD *)(a1 + 176) |= 1u;
          break;
        case 0x1Au:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 112;
LABEL_133:
          v95 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v92 = *v3;
        v93 = *(_QWORD *)(a2 + v92);
        if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          break;
        v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
        *(_QWORD *)(a2 + v92) = v93 + 1;
        v91 |= (unint64_t)(v94 & 0x7F) << v89;
        if ((v94 & 0x80) == 0)
          goto LABEL_191;
        v89 += 7;
        v14 = v90++ >= 9;
        if (v14)
        {
          v91 = 0;
          goto LABEL_193;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_191:
      if (*(_BYTE *)(a2 + *v5))
        v91 = 0;
LABEL_193:
      *(_QWORD *)(a1 + 8) = v91;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLocalNotificationReceivedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticleWidgetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
              break;
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v21 += 7;
            v14 = v22++ >= 9;
            if (v14)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 8) = v23;
          continue;
        }
        if ((_DWORD)v17 != 1)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
      }
      v20 = *(void **)(a1 + v19);
      *(_QWORD *)(a1 + v19) = v18;

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNoUserActionReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBViewInfo *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBViewInfo);
        objc_msgSend(a1, "addVisibleViews:", v17);
        if (!PBReaderPlaceMark() || (NTPBViewInfoReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionStartReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  NTPBViewInfo *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 244) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_176;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_178;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_176:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_178:
        *(_QWORD *)(a1 + 8) = v19;
        goto LABEL_240;
      case 2u:
        v24 = objc_alloc_init(NTPBViewInfo);
        objc_msgSend((id)a1, "addVisibleViews:", v24);
        if (!PBReaderPlaceMark() || (NTPBViewInfoReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_252;
        goto LABEL_113;
      case 3u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 4u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_182:
        v117 = 48;
        goto LABEL_239;
      case 4u:
        v31 = 0;
        v32 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x400u;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v27 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_186:
        v117 = 184;
        goto LABEL_239;
      case 5u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 152;
        goto LABEL_73;
      case 6u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 160;
        goto LABEL_73;
      case 7u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 192;
        goto LABEL_73;
      case 8u:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addPaidSubscriptionChannelIds:", v24);
        goto LABEL_118;
      case 9u:
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 244) |= 0x20000u;
        while (2)
        {
          v41 = *v3;
          v42 = *(_QWORD *)(a2 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
            *(_QWORD *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                v40 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v40 = 0;
LABEL_190:
        v118 = v40 != 0;
        v119 = 242;
        goto LABEL_250;
      case 0xAu:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 104;
        goto LABEL_73;
      case 0xBu:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 112;
        goto LABEL_73;
      case 0xCu:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 120;
        goto LABEL_73;
      case 0xDu:
        v44 = 0;
        v45 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x40u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 1;
            v27 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_194:
        v117 = 132;
        goto LABEL_239;
      case 0xEu:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addNotificationChannelIds:", v24);
        goto LABEL_118;
      case 0xFu:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 80;
        goto LABEL_73;
      case 0x10u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 32;
        goto LABEL_73;
      case 0x11u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 40;
        goto LABEL_73;
      case 0x12u:
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 56;
LABEL_73:
        v49 = *(void **)(a1 + v37);
        *(_QWORD *)(a1 + v37) = v36;

        goto LABEL_240;
      case 0x13u:
        v50 = 0;
        v51 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x10u;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v27 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_198:
        v117 = 96;
        goto LABEL_239;
      case 0x14u:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addSubscribedFeedIds:", v24);
        goto LABEL_118;
      case 0x15u:
        v55 = 0;
        v56 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x200u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v27 |= (unint64_t)(v59 & 0x7F) << v55;
            if (v59 < 0)
            {
              v55 += 7;
              v14 = v56++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_202:
        v117 = 172;
        goto LABEL_239;
      case 0x16u:
        v60 = 0;
        v61 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x2000u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v27 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_206:
        v117 = 232;
        goto LABEL_239;
      case 0x17u:
        v65 = 0;
        v66 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x4000u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v27 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_210:
        v117 = 236;
        goto LABEL_239;
      case 0x18u:
        v70 = 0;
        v71 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x1000u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v27 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              v14 = v71++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_214:
        v117 = 216;
        goto LABEL_239;
      case 0x19u:
        v24 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 224), v24);
        if (PBReaderPlaceMark() && (NTPBWidgetEngagementReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
LABEL_113:
          PBReaderRecallMark();
LABEL_118:

LABEL_240:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_252:

        return 0;
      case 0x1Au:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addAutoSubscribedFeedIds:", v24);
        goto LABEL_118;
      case 0x1Bu:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addGroupableFeedIds:", v24);
        goto LABEL_118;
      case 0x1Cu:
        v75 = 0;
        v76 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x80u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v27 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_218:
        v117 = 144;
        goto LABEL_239;
      case 0x1Du:
        v80 = 0;
        v81 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x100u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v27 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_222:
        v117 = 168;
        goto LABEL_239;
      case 0x1Eu:
        v85 = 0;
        v86 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 2u;
        while (2)
        {
          v87 = *v3;
          v88 = *(_QWORD *)(a2 + v87);
          if (v88 == -1 || v88 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
            *(_QWORD *)(a2 + v87) = v88 + 1;
            v27 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_226:
        v117 = 16;
        goto LABEL_239;
      case 0x1Fu:
        v90 = 0;
        v91 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 8u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v93 + 1;
            v27 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              v14 = v91++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_230:
        v117 = 72;
        goto LABEL_239;
      case 0x20u:
        v95 = 0;
        v96 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x800u;
        while (2)
        {
          v97 = *v3;
          v98 = *(_QWORD *)(a2 + v97);
          if (v98 == -1 || v98 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v98);
            *(_QWORD *)(a2 + v97) = v98 + 1;
            v27 |= (unint64_t)(v99 & 0x7F) << v95;
            if (v99 < 0)
            {
              v95 += 7;
              v14 = v96++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_234:
        v117 = 200;
        goto LABEL_239;
      case 0x21u:
        v100 = 0;
        v101 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 244) |= 0x20u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v27 |= (unint64_t)(v104 & 0x7F) << v100;
            if (v104 < 0)
            {
              v100 += 7;
              v14 = v101++ >= 9;
              if (v14)
              {
                LODWORD(v27) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_238:
        v117 = 128;
LABEL_239:
        *(_DWORD *)(a1 + v117) = v27;
        goto LABEL_240;
      case 0x22u:
        v105 = 0;
        v106 = 0;
        v107 = 0;
        *(_DWORD *)(a1 + 244) |= 0x10000u;
        while (2)
        {
          v108 = *v3;
          v109 = *(_QWORD *)(a2 + v108);
          if (v109 == -1 || v109 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v109 + 1;
            v107 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                v107 = 0;
                goto LABEL_245;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v107 = 0;
LABEL_245:
        v118 = v107 != 0;
        v119 = 241;
        goto LABEL_250;
      case 0x23u:
        v111 = 0;
        v112 = 0;
        v113 = 0;
        *(_DWORD *)(a1 + 244) |= 0x8000u;
        while (2)
        {
          v114 = *v3;
          v115 = *(_QWORD *)(a2 + v114);
          if (v115 == -1 || v115 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
            *(_QWORD *)(a2 + v114) = v115 + 1;
            v113 |= (unint64_t)(v116 & 0x7F) << v111;
            if (v116 < 0)
            {
              v111 += 7;
              v14 = v112++ >= 9;
              if (v14)
              {
                v113 = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v113 = 0;
LABEL_249:
        v118 = v113 != 0;
        v119 = 240;
LABEL_250:
        *(_BYTE *)(a1 + v119) = v118;
        goto LABEL_240;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_240;
    }
  }
}

uint64_t NTPBShareInformationScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 88) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_72;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_74;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_74:
          v54 = 80;
          goto LABEL_87;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 88) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_78:
          v54 = 56;
          goto LABEL_87;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 88) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_82:
          v54 = 48;
          goto LABEL_87;
        case 4u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_70;
        case 5u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_70;
        case 6u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 72;
          goto LABEL_70;
        case 7u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 64;
          goto LABEL_70;
        case 8u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 8;
          goto LABEL_70;
        case 9u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_70;
        case 0xAu:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 88) |= 2u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_86:
          v54 = 52;
LABEL_87:
          *(_DWORD *)(a1 + v54) = v19;
          continue;
        case 0xBu:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 88) |= 0x20u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  v43 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_91:
          v55 = v43 != 0;
          v56 = 85;
          goto LABEL_96;
        case 0xCu:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_BYTE *)(a1 + 88) |= 0x10u;
          break;
        case 0xDu:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
LABEL_70:
          v53 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v50 = *v3;
        v51 = *(_QWORD *)(a2 + v50);
        if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
        *(_QWORD *)(a2 + v50) = v51 + 1;
        v49 |= (unint64_t)(v52 & 0x7F) << v47;
        if ((v52 & 0x80) == 0)
          goto LABEL_93;
        v47 += 7;
        v14 = v48++ >= 9;
        if (v14)
        {
          v49 = 0;
          goto LABEL_95;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_93:
      if (*(_BYTE *)(a2 + *v5))
        v49 = 0;
LABEL_95:
      v55 = v49 != 0;
      v56 = 84;
LABEL_96:
      *(_BYTE *)(a1 + v56) = v55;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBContentAndRelevanceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__contentRating;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___NTPBContentAndRelevanceInfo__relevanceRating;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBWebAccessScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 100) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_80;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_82;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_80:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_82:
          v59 = 88;
          goto LABEL_108;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 100) |= 4u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_86:
          v59 = 56;
          goto LABEL_108;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 100) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_90:
          v59 = 48;
          goto LABEL_108;
        case 4u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_71;
        case 5u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_71;
        case 6u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 72;
          goto LABEL_71;
        case 7u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 64;
          goto LABEL_71;
        case 8u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 8;
          goto LABEL_71;
        case 9u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_71;
        case 0xAu:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 100) |= 2u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_94:
          v59 = 52;
          goto LABEL_108;
        case 0xBu:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 100) |= 0x40u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  v43 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_98:
          v60 = v43 != 0;
          v61 = 97;
          goto LABEL_103;
        case 0xCu:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_BYTE *)(a1 + 100) |= 0x20u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  v49 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v49 = 0;
LABEL_102:
          v60 = v49 != 0;
          v61 = 96;
LABEL_103:
          *(_BYTE *)(a1 + v61) = v60;
          continue;
        case 0xDu:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
          goto LABEL_71;
        case 0xEu:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 80;
LABEL_71:
          v53 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        case 0xFu:
          v54 = 0;
          v55 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 100) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v56 = *v3;
        v57 = *(_QWORD *)(a2 + v56);
        if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
          break;
        v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
        *(_QWORD *)(a2 + v56) = v57 + 1;
        v19 |= (unint64_t)(v58 & 0x7F) << v54;
        if ((v58 & 0x80) == 0)
          goto LABEL_105;
        v54 += 7;
        v14 = v55++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_107;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_105:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_107:
      v59 = 92;
LABEL_108:
      *(_DWORD *)(a1 + v59) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEndpointConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 24;
              goto LABEL_36;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 40;
              goto LABEL_36;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 48;
              goto LABEL_36;
            case 5u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 56;
              goto LABEL_36;
            case 6u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 8;
              goto LABEL_36;
            case 7u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_36;
            case 8u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 72;
              goto LABEL_36;
            case 9u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 64;
LABEL_36:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_37;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_37:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_40;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_42;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_37;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  void *String;
  id v19;
  uint64_t v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  NTPBArticleListTodaySectionSpecificConfig *v44;
  NTPBForYouTodaySectionSpecificConfig *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  NTPBArticleIDsTodaySectionSpecificConfig *v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  void *v78;
  NTPBPersonalizedTodaySectionSpecificConfig *v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  void *v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  NTPBPersonalizedSectionPresenceConfig *v92;
  uint64_t result;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  void *v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  void *v107;
  void *v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  void *v119;
  void *v120;
  void *v121;
  NTPBItemsTodaySectionSpecificConfig *v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  void *v128;
  NTPBTagTodaySectionSpecificConfig *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!a2[*v5])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)&a2[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
          *(_QWORD *)&a2[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = a2[*v5];
            goto LABEL_14;
          }
        }
        a2[*v5] = 1;
LABEL_12:
        v15 = a2[*v5];
        if (a2[*v5])
          v10 = 0;
LABEL_14:
        v16 = v10 & 7;
        if (!v15 && v16 != 4)
        {
          switch((v10 >> 3))
          {
            case 0u:
              String = (void *)PBReaderReadString();

              v19 = String;
              v20 = 208;
              goto LABEL_190;
            case 1u:
              v21 = (void *)PBReaderReadString();

              v19 = v21;
              v20 = 184;
              goto LABEL_190;
            case 2u:
              v22 = 0;
              v23 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 2u;
              while (2)
              {
                v25 = *v3;
                v26 = *(_QWORD *)&a2[v25];
                if (v26 == -1 || v26 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v27 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v26);
                  *(_QWORD *)&a2[v25] = v26 + 1;
                  v24 |= (unint64_t)(v27 & 0x7F) << v22;
                  if (v27 < 0)
                  {
                    v22 += 7;
                    v14 = v23++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_194;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_194:
              v141 = 40;
              goto LABEL_251;
            case 3u:
              v28 = 0;
              v29 = 0;
              v30 = 0;
              *(_DWORD *)(a1 + 308) |= 0x800u;
              while (2)
              {
                v31 = *v3;
                v32 = *(_QWORD *)&a2[v31];
                if (v32 == -1 || v32 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v33 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v32);
                  *(_QWORD *)&a2[v31] = v32 + 1;
                  v30 |= (unint64_t)(v33 & 0x7F) << v28;
                  if (v33 < 0)
                  {
                    v28 += 7;
                    v14 = v29++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_198;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                LODWORD(v30) = 0;
LABEL_198:
              v142 = 280;
              goto LABEL_256;
            case 4u:
              v34 = 0;
              v35 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 1u;
              while (2)
              {
                v36 = *v3;
                v37 = *(_QWORD *)&a2[v36];
                if (v37 == -1 || v37 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v38 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v37);
                  *(_QWORD *)&a2[v36] = v37 + 1;
                  v24 |= (unint64_t)(v38 & 0x7F) << v34;
                  if (v38 < 0)
                  {
                    v34 += 7;
                    v14 = v35++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_202;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_202:
              v141 = 32;
              goto LABEL_251;
            case 5u:
              v39 = 0;
              v40 = 0;
              v30 = 0;
              *(_DWORD *)(a1 + 308) |= 0x400u;
              while (2)
              {
                v41 = *v3;
                v42 = *(_QWORD *)&a2[v41];
                if (v42 == -1 || v42 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v43 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v42);
                  *(_QWORD *)&a2[v41] = v42 + 1;
                  v30 |= (unint64_t)(v43 & 0x7F) << v39;
                  if (v43 < 0)
                  {
                    v39 += 7;
                    v14 = v40++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_206;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                LODWORD(v30) = 0;
LABEL_206:
              v142 = 268;
              goto LABEL_256;
            case 6u:
              v44 = objc_alloc_init(NTPBArticleListTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 112) = v44;
              if (!PBReaderPlaceMark()
                || (NTPBArticleListTodaySectionSpecificConfigReadFrom((uint64_t)v44, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 7u:
              v45 = objc_alloc_init(NTPBForYouTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 152) = v45;
              if (!PBReaderPlaceMark()
                || (NTPBForYouTodaySectionSpecificConfigReadFrom((uint64_t)v45, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 8u:
              v46 = 0;
              v47 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 0x20u;
              while (2)
              {
                v48 = *v3;
                v49 = *(_QWORD *)&a2[v48];
                if (v49 == -1 || v49 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v50 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v49);
                  *(_QWORD *)&a2[v48] = v49 + 1;
                  v24 |= (unint64_t)(v50 & 0x7F) << v46;
                  if (v50 < 0)
                  {
                    v46 += 7;
                    v14 = v47++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_210;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_210:
              v141 = 72;
              goto LABEL_251;
            case 9u:
              v51 = 0;
              v52 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 0x10u;
              while (2)
              {
                v53 = *v3;
                v54 = *(_QWORD *)&a2[v53];
                if (v54 == -1 || v54 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v55 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v54);
                  *(_QWORD *)&a2[v53] = v54 + 1;
                  v24 |= (unint64_t)(v55 & 0x7F) << v51;
                  if (v55 < 0)
                  {
                    v51 += 7;
                    v14 = v52++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_214;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_214:
              v141 = 64;
              goto LABEL_251;
            case 0xAu:
              v56 = 0;
              v57 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 8u;
              while (2)
              {
                v58 = *v3;
                v59 = *(_QWORD *)&a2[v58];
                if (v59 == -1 || v59 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v60 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v59);
                  *(_QWORD *)&a2[v58] = v59 + 1;
                  v24 |= (unint64_t)(v60 & 0x7F) << v56;
                  if (v60 < 0)
                  {
                    v56 += 7;
                    v14 = v57++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_218;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_218:
              v141 = 56;
              goto LABEL_251;
            case 0xBu:
              v61 = 0;
              v62 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 4u;
              while (2)
              {
                v63 = *v3;
                v64 = *(_QWORD *)&a2[v63];
                if (v64 == -1 || v64 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v65 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v64);
                  *(_QWORD *)&a2[v63] = v64 + 1;
                  v24 |= (unint64_t)(v65 & 0x7F) << v61;
                  if (v65 < 0)
                  {
                    v61 += 7;
                    v14 = v62++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_222;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_222:
              v141 = 48;
              goto LABEL_251;
            case 0xCu:
              v66 = 0;
              v67 = 0;
              v30 = 0;
              *(_DWORD *)(a1 + 308) |= 0x1000u;
              while (2)
              {
                v68 = *v3;
                v69 = *(_QWORD *)&a2[v68];
                if (v69 == -1 || v69 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v70 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v69);
                  *(_QWORD *)&a2[v68] = v69 + 1;
                  v30 |= (unint64_t)(v70 & 0x7F) << v66;
                  if (v70 < 0)
                  {
                    v66 += 7;
                    v14 = v67++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_226;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                LODWORD(v30) = 0;
LABEL_226:
              v142 = 284;
              goto LABEL_256;
            case 0xDu:
              v71 = objc_alloc_init(NTPBArticleIDsTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 104) = v71;
              if (!PBReaderPlaceMark()
                || (NTPBArticleIDsTodaySectionSpecificConfigReadFrom(v71, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0xEu:
              v72 = 0;
              v73 = 0;
              v74 = 0;
              *(_DWORD *)(a1 + 308) |= 0x10000u;
              while (2)
              {
                v75 = *v3;
                v76 = *(_QWORD *)&a2[v75];
                if (v76 == -1 || v76 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v77 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v76);
                  *(_QWORD *)&a2[v75] = v76 + 1;
                  v74 |= (unint64_t)(v77 & 0x7F) << v72;
                  if (v77 < 0)
                  {
                    v72 += 7;
                    v14 = v73++ >= 9;
                    if (v14)
                    {
                      v74 = 0;
                      goto LABEL_230;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v74 = 0;
LABEL_230:
              v143 = v74 != 0;
              v144 = 307;
              goto LABEL_261;
            case 0xFu:
              v78 = (void *)PBReaderReadString();

              v19 = v78;
              v20 = 224;
              goto LABEL_190;
            case 0x10u:
              v79 = objc_alloc_init(NTPBPersonalizedTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 256) = v79;
              if (!PBReaderPlaceMark()
                || (NTPBPersonalizedTodaySectionSpecificConfigReadFrom((uint64_t)v79, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x11u:
              v80 = 0;
              v81 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 0x100u;
              while (2)
              {
                v82 = *v3;
                v83 = *(_QWORD *)&a2[v82];
                if (v83 == -1 || v83 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v84 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v83);
                  *(_QWORD *)&a2[v82] = v83 + 1;
                  v24 |= (unint64_t)(v84 & 0x7F) << v80;
                  if (v84 < 0)
                  {
                    v80 += 7;
                    v14 = v81++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_234;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_234:
              v141 = 96;
              goto LABEL_251;
            case 0x12u:
              v85 = (void *)PBReaderReadString();

              v19 = v85;
              v20 = 232;
              goto LABEL_190;
            case 0x14u:
              v86 = 0;
              v87 = 0;
              v88 = 0;
              *(_DWORD *)(a1 + 308) |= 0x8000u;
              while (2)
              {
                v89 = *v3;
                v90 = *(_QWORD *)&a2[v89];
                if (v90 == -1 || v90 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v91 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v90);
                  *(_QWORD *)&a2[v89] = v90 + 1;
                  v88 |= (unint64_t)(v91 & 0x7F) << v86;
                  if (v91 < 0)
                  {
                    v86 += 7;
                    v14 = v87++ >= 9;
                    if (v14)
                    {
                      v88 = 0;
                      goto LABEL_238;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v88 = 0;
LABEL_238:
              v143 = v88 != 0;
              v144 = 306;
              goto LABEL_261;
            case 0x15u:
              v92 = objc_alloc_init(NTPBPersonalizedSectionPresenceConfig);

              *(_QWORD *)(a1 + 240) = v92;
              if (!PBReaderPlaceMark()
                || (NTPBPersonalizedSectionPresenceConfigReadFrom((uint64_t)v92, a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x16u:
              if (v16 == 2)
              {
                result = PBReaderPlaceMark();
                if (!(_DWORD)result)
                  return result;
                while (*(_QWORD *)&a2[*v3] < *(_QWORD *)&a2[*v4] && !a2[*v5])
                {
                  v94 = 0;
                  v95 = 0;
                  v96 = 0;
                  while (1)
                  {
                    v97 = *v3;
                    v98 = *(_QWORD *)&a2[v97];
                    if (v98 == -1 || v98 >= *(_QWORD *)&a2[*v4])
                      break;
                    v99 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v98);
                    *(_QWORD *)&a2[v97] = v98 + 1;
                    v96 |= (unint64_t)(v99 & 0x7F) << v94;
                    if (v99 < 0)
                    {
                      v94 += 7;
                      v14 = v95++ >= 9;
                      if (!v14)
                        continue;
                    }
                    goto LABEL_136;
                  }
                  a2[*v5] = 1;
LABEL_136:
                  PBRepeatedUInt64Add();
                }
LABEL_177:
                PBReaderRecallMark();
              }
              else
              {
                v145 = 0;
                v146 = 0;
                v147 = 0;
                while (1)
                {
                  v148 = *v3;
                  v149 = *(_QWORD *)&a2[v148];
                  if (v149 == -1 || v149 >= *(_QWORD *)&a2[*v4])
                    break;
                  v150 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v149);
                  *(_QWORD *)&a2[v148] = v149 + 1;
                  v147 |= (unint64_t)(v150 & 0x7F) << v145;
                  if (v150 < 0)
                  {
                    v145 += 7;
                    v14 = v146++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_272;
                }
                a2[*v5] = 1;
LABEL_272:
                PBRepeatedUInt64Add();
              }
LABEL_262:
              if (*(_QWORD *)&a2[*v3] >= *(_QWORD *)&a2[*v4])
                return a2[*v5] == 0;
              continue;
            case 0x17u:
              v100 = (void *)PBReaderReadString();

              v19 = v100;
              v20 = 136;
              goto LABEL_190;
            case 0x18u:
              v101 = 0;
              v102 = 0;
              v103 = 0;
              *(_DWORD *)(a1 + 308) |= 0x4000u;
              while (2)
              {
                v104 = *v3;
                v105 = *(_QWORD *)&a2[v104];
                if (v105 == -1 || v105 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v106 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v105);
                  *(_QWORD *)&a2[v104] = v105 + 1;
                  v103 |= (unint64_t)(v106 & 0x7F) << v101;
                  if (v106 < 0)
                  {
                    v101 += 7;
                    v14 = v102++ >= 9;
                    if (v14)
                    {
                      v103 = 0;
                      goto LABEL_242;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v103 = 0;
LABEL_242:
              v143 = v103 != 0;
              v144 = 305;
              goto LABEL_261;
            case 0x1Bu:
              v107 = (void *)PBReaderReadString();

              v19 = v107;
              v20 = 144;
              goto LABEL_190;
            case 0x1Cu:
              v108 = (void *)PBReaderReadString();

              v19 = v108;
              v20 = 248;
              goto LABEL_190;
            case 0x1Du:
              v109 = 0;
              v110 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 0x80u;
              while (2)
              {
                v111 = *v3;
                v112 = *(_QWORD *)&a2[v111];
                if (v112 == -1 || v112 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v113 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v112);
                  *(_QWORD *)&a2[v111] = v112 + 1;
                  v24 |= (unint64_t)(v113 & 0x7F) << v109;
                  if (v113 < 0)
                  {
                    v109 += 7;
                    v14 = v110++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_246;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_246:
              v141 = 88;
              goto LABEL_251;
            case 0x1Eu:
              v114 = 0;
              v115 = 0;
              v24 = 0;
              *(_DWORD *)(a1 + 308) |= 0x40u;
              while (2)
              {
                v116 = *v3;
                v117 = *(_QWORD *)&a2[v116];
                if (v117 == -1 || v117 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v118 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v117);
                  *(_QWORD *)&a2[v116] = v117 + 1;
                  v24 |= (unint64_t)(v118 & 0x7F) << v114;
                  if (v118 < 0)
                  {
                    v114 += 7;
                    v14 = v115++ >= 9;
                    if (v14)
                    {
                      v24 = 0;
                      goto LABEL_250;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v24 = 0;
LABEL_250:
              v141 = 80;
LABEL_251:
              *(_QWORD *)(a1 + v141) = v24;
              goto LABEL_262;
            case 0x1Fu:
              v119 = (void *)PBReaderReadString();

              v19 = v119;
              v20 = 272;
              goto LABEL_190;
            case 0x20u:
              v120 = (void *)PBReaderReadString();

              v19 = v120;
              v20 = 160;
              goto LABEL_190;
            case 0x21u:
              v121 = (void *)PBReaderReadString();

              v19 = v121;
              v20 = 168;
              goto LABEL_190;
            case 0x22u:
              v122 = objc_alloc_init(NTPBItemsTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 192) = v122;
              if (!PBReaderPlaceMark()
                || (NTPBItemsTodaySectionSpecificConfigReadFrom((uint64_t)v122, (uint64_t)a2) & 1) == 0)
              {
                return 0;
              }
              goto LABEL_177;
            case 0x24u:
              v123 = 0;
              v124 = 0;
              v30 = 0;
              *(_DWORD *)(a1 + 308) |= 0x200u;
              while (2)
              {
                v125 = *v3;
                v126 = *(_QWORD *)&a2[v125];
                if (v126 == -1 || v126 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v127 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v126);
                  *(_QWORD *)&a2[v125] = v126 + 1;
                  v30 |= (unint64_t)(v127 & 0x7F) << v123;
                  if (v127 < 0)
                  {
                    v123 += 7;
                    v14 = v124++ >= 9;
                    if (v14)
                    {
                      LODWORD(v30) = 0;
                      goto LABEL_255;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                LODWORD(v30) = 0;
LABEL_255:
              v142 = 264;
LABEL_256:
              *(_DWORD *)(a1 + v142) = v30;
              goto LABEL_262;
            case 0x25u:
              v128 = (void *)PBReaderReadString();

              v19 = v128;
              v20 = 216;
              goto LABEL_190;
            case 0x26u:
              v129 = objc_alloc_init(NTPBTagTodaySectionSpecificConfig);

              *(_QWORD *)(a1 + 296) = v129;
              if (PBReaderPlaceMark()
                && (NTPBTagTodaySectionSpecificConfigReadFrom((uint64_t)v129, (uint64_t)a2) & 1) != 0)
              {
                goto LABEL_177;
              }
              return 0;
            case 0x27u:
              v130 = (void *)PBReaderReadString();

              v19 = v130;
              v20 = 200;
              goto LABEL_190;
            case 0x28u:
              v131 = (void *)PBReaderReadString();

              v19 = v131;
              v20 = 176;
              goto LABEL_190;
            case 0x29u:
              v132 = (void *)PBReaderReadString();

              v19 = v132;
              v20 = 128;
              goto LABEL_190;
            case 0x2Au:
              v133 = (void *)PBReaderReadString();

              v19 = v133;
              v20 = 120;
              goto LABEL_190;
            case 0x2Bu:
              v134 = 0;
              v135 = 0;
              v136 = 0;
              *(_DWORD *)(a1 + 308) |= 0x2000u;
              while (2)
              {
                v137 = *v3;
                v138 = *(_QWORD *)&a2[v137];
                if (v138 == -1 || v138 >= *(_QWORD *)&a2[*v4])
                {
                  a2[*v5] = 1;
                }
                else
                {
                  v139 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v138);
                  *(_QWORD *)&a2[v137] = v138 + 1;
                  v136 |= (unint64_t)(v139 & 0x7F) << v134;
                  if (v139 < 0)
                  {
                    v134 += 7;
                    v14 = v135++ >= 9;
                    if (v14)
                    {
                      v136 = 0;
                      goto LABEL_260;
                    }
                    continue;
                  }
                }
                break;
              }
              if (a2[*v5])
                v136 = 0;
LABEL_260:
              v143 = v136 != 0;
              v144 = 304;
LABEL_261:
              *(_BYTE *)(a1 + v144) = v143;
              goto LABEL_262;
            case 0x2Cu:
              v140 = (void *)PBReaderReadString();

              v19 = v140;
              v20 = 288;
LABEL_190:
              *(_QWORD *)(a1 + v20) = v19;
              goto LABEL_262;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_262;
              return 0;
          }
        }
      }
      break;
    }
  }
  return a2[*v5] == 0;
}

uint64_t NTPBNetworkMetricsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBNetworkEvent *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBNetworkEvent);
        objc_msgSend(a1, "addFailures:", v17);
      }
      else
      {
        if ((v10 >> 3))
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v17 = objc_alloc_init(NTPBNetworkEvent);
        objc_msgSend(a1, "addSuccesses:", v17);
      }

      if (!PBReaderPlaceMark() || (NTPBNetworkEventReadFrom((uint64_t)v17, a2) & 1) == 0)
        return 0;
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLocalNotificationReturnReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 0x10u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_57;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_59;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_57:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_59:
          *(_BYTE *)(a1 + 28) = v19 != 0;
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_63:
          v46 = 16;
          goto LABEL_76;
        case 3u:
          v30 = 0;
          v31 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v26) = 0;
LABEL_67:
          v46 = 24;
          goto LABEL_76;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_71:
          *(_QWORD *)(a1 + 8) = v37;
          continue;
        case 5u:
          v41 = 0;
          v42 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v43 = *v3;
        v44 = *(_QWORD *)(a2 + v43);
        if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
        *(_QWORD *)(a2 + v43) = v44 + 1;
        v26 |= (unint64_t)(v45 & 0x7F) << v41;
        if ((v45 & 0x80) == 0)
          goto LABEL_73;
        v41 += 7;
        v14 = v42++ >= 9;
        if (v14)
        {
          LODWORD(v26) = 0;
          goto LABEL_75;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_73:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v26) = 0;
LABEL_75:
      v46 = 20;
LABEL_76:
      *(_DWORD *)(a1 + v46) = v26;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAlreadySubscriberSignInReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  NTPBIssueData *v54;
  void *v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 148) |= 0x20u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_86;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_88;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_88:
        v56 = v19 != 0;
        v57 = 146;
        goto LABEL_105;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 148) |= 2u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_92:
        v58 = 88;
        goto LABEL_110;
      case 3u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 56;
        goto LABEL_82;
      case 4u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 48;
        goto LABEL_82;
      case 5u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 104;
        goto LABEL_82;
      case 6u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 96;
        goto LABEL_82;
      case 7u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 8;
        goto LABEL_82;
      case 8u:
        PBReaderReadData();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 16;
        goto LABEL_82;
      case 9u:
        v32 = 0;
        v33 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 148) |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v26 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_96:
        v58 = 92;
        goto LABEL_110;
      case 0xAu:
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 148) |= 0x10u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                v39 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_100:
        v56 = v39 != 0;
        v57 = 145;
        goto LABEL_105;
      case 0xBu:
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 148) |= 8u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                v45 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v45 = 0;
LABEL_104:
        v56 = v45 != 0;
        v57 = 144;
LABEL_105:
        *(_BYTE *)(a1 + v57) = v56;
        goto LABEL_83;
      case 0xCu:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 72;
        goto LABEL_82;
      case 0xDu:
        PBReaderReadData();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 112;
        goto LABEL_82;
      case 0xEu:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 24;
        goto LABEL_82;
      case 0xFu:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 32;
        goto LABEL_82;
      case 0x10u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 40;
        goto LABEL_82;
      case 0x11u:
        v49 = 0;
        v50 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 148) |= 1u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v26 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              v14 = v50++ >= 9;
              if (v14)
              {
                LODWORD(v26) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v26) = 0;
LABEL_109:
        v58 = 64;
LABEL_110:
        *(_DWORD *)(a1 + v58) = v26;
        goto LABEL_83;
      case 0x12u:
        v54 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v54);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v54, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_79:

LABEL_83:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0x13u:
        PBReaderReadString();
        v54 = (NTPBIssueData *)objc_claimAutoreleasedReturnValue();
        if (v54)
          objc_msgSend((id)a1, "addTopicIds:", v54);
        goto LABEL_79;
      case 0x14u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 128;
        goto LABEL_82;
      case 0x15u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 120;
LABEL_82:
        v55 = *(void **)(a1 + v31);
        *(_QWORD *)(a1 + v31) = v30;

        goto LABEL_83;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_83;
    }
  }
}

uint64_t NTPBShareResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t result;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  NTPBWidgetEngagement *v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  unsigned int v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  unsigned int v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  void *v175;
  uint64_t v176;
  BOOL v177;
  uint64_t v178;
  uint64_t v179;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x1000u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_267;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_269;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_267:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_269:
        v176 = 328;
        goto LABEL_354;
      case 2u:
        v23 = 0;
        v24 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x80u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_273:
        v176 = 112;
        goto LABEL_354;
      case 3u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 104;
        goto LABEL_253;
      case 4u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 320;
        goto LABEL_253;
      case 5u:
        PBReaderReadData();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 40;
        goto LABEL_253;
      case 6u:
        PBReaderReadData();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 56;
        goto LABEL_253;
      case 7u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x100u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_277:
        v176 = 144;
        goto LABEL_354;
      case 8u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 136;
        goto LABEL_253;
      case 9u:
        PBReaderReadData();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 152;
        goto LABEL_253;
      case 0xAu:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_DWORD *)(a1 + 420) |= 0x8000000u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                v37 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_281:
        v177 = v37 != 0;
        v178 = 419;
        goto LABEL_367;
      case 0xEu:
        v42 = 0;
        v43 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x4000u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v45 + 1;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              v14 = v43++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_285:
        v176 = 348;
        goto LABEL_354;
      case 0xFu:
        v47 = 0;
        v48 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x2000u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v19 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v14 = v48++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_289:
        v176 = 344;
        goto LABEL_354;
      case 0x10u:
        v52 = 0;
        v53 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x40u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v19 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v14 = v53++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_293:
        v176 = 96;
        goto LABEL_354;
      case 0x11u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 248;
        goto LABEL_253;
      case 0x12u:
        PBReaderReadString();
        v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57)
          objc_msgSend((id)a1, "addNamedEntities:", v57);
        goto LABEL_263;
      case 0x13u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x800u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_297:
        v176 = 312;
        goto LABEL_354;
      case 0x14u:
        v63 = 0;
        v64 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x20u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_301:
        v176 = 64;
        goto LABEL_354;
      case 0x15u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 352;
        goto LABEL_253;
      case 0x16u:
        v68 = 0;
        v69 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x10u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_305:
        v176 = 48;
        goto LABEL_354;
      case 0x17u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 360;
        goto LABEL_253;
      case 0x18u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 368;
        goto LABEL_253;
      case 0x19u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 376;
        goto LABEL_253;
      case 0x1Au:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 336;
        goto LABEL_253;
      case 0x1Bu:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 224;
        goto LABEL_253;
      case 0x1Cu:
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_DWORD *)(a1 + 420) |= 0x80000u;
        while (2)
        {
          v76 = *v3;
          v77 = *(_QWORD *)(a2 + v76);
          if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
            *(_QWORD *)(a2 + v76) = v77 + 1;
            v75 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v14 = v74++ >= 9;
              if (v14)
              {
                v75 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v75 = 0;
LABEL_309:
        v177 = v75 != 0;
        v178 = 411;
        goto LABEL_367;
      case 0x1Du:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 128;
        goto LABEL_253;
      case 0x1Eu:
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 420) |= 2u;
        while (2)
        {
          v82 = *v3;
          v83 = *(_QWORD *)(a2 + v82);
          if (v83 == -1 || v83 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
            *(_QWORD *)(a2 + v82) = v83 + 1;
            v81 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              v14 = v80++ >= 9;
              if (v14)
              {
                v81 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_313:
        v179 = 16;
        goto LABEL_380;
      case 0x1Fu:
        v85 = 0;
        v86 = 0;
        v87 = 0;
        *(_DWORD *)(a1 + 420) |= 0x200000u;
        while (2)
        {
          v88 = *v3;
          v89 = *(_QWORD *)(a2 + v88);
          if (v89 == -1 || v89 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v89 + 1;
            v87 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              v14 = v86++ >= 9;
              if (v14)
              {
                v87 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v87 = 0;
LABEL_317:
        v177 = v87 != 0;
        v178 = 413;
        goto LABEL_367;
      case 0x20u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 168;
        goto LABEL_253;
      case 0x21u:
        v91 = 0;
        v92 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x200u;
        while (2)
        {
          v93 = *v3;
          v94 = *(_QWORD *)(a2 + v93);
          if (v94 == -1 || v94 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v94);
            *(_QWORD *)(a2 + v93) = v94 + 1;
            v19 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v91 += 7;
              v14 = v92++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_321:
        v176 = 176;
        goto LABEL_354;
      case 0x22u:
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_DWORD *)(a1 + 420) |= 0x1000000u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v100 + 1;
            v98 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              v14 = v97++ >= 9;
              if (v14)
              {
                v98 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v98 = 0;
LABEL_325:
        v177 = v98 != 0;
        v178 = 416;
        goto LABEL_367;
      case 0x23u:
        v102 = 0;
        v103 = 0;
        v104 = 0;
        *(_DWORD *)(a1 + 420) |= 0x100000u;
        while (2)
        {
          v105 = *v3;
          v106 = *(_QWORD *)(a2 + v105);
          if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              v14 = v103++ >= 9;
              if (v14)
              {
                v104 = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v104 = 0;
LABEL_329:
        v177 = v104 != 0;
        v178 = 412;
        goto LABEL_367;
      case 0x24u:
        v108 = 0;
        v109 = 0;
        v110 = 0;
        *(_DWORD *)(a1 + 420) |= 0x800000u;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v112 + 1;
            v110 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v14 = v109++ >= 9;
              if (v14)
              {
                v110 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v110 = 0;
LABEL_333:
        v177 = v110 != 0;
        v178 = 415;
        goto LABEL_367;
      case 0x25u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 288;
        goto LABEL_253;
      case 0x26u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 72;
        goto LABEL_253;
      case 0x27u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 80;
        goto LABEL_253;
      case 0x28u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 120;
        goto LABEL_253;
      case 0x29u:
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_DWORD *)(a1 + 420) |= 0x40000u;
        while (2)
        {
          v117 = *v3;
          v118 = *(_QWORD *)(a2 + v117);
          if (v118 == -1 || v118 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v119 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v118);
            *(_QWORD *)(a2 + v117) = v118 + 1;
            v116 |= (unint64_t)(v119 & 0x7F) << v114;
            if (v119 < 0)
            {
              v114 += 7;
              v14 = v115++ >= 9;
              if (v14)
              {
                v116 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v116 = 0;
LABEL_337:
        v177 = v116 != 0;
        v178 = 410;
        goto LABEL_367;
      case 0x2Au:
        v120 = 0;
        v121 = 0;
        v122 = 0;
        *(_DWORD *)(a1 + 420) |= 0x10000u;
        while (2)
        {
          v123 = *v3;
          v124 = *(_QWORD *)(a2 + v123);
          if (v124 == -1 || v124 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v124);
            *(_QWORD *)(a2 + v123) = v124 + 1;
            v122 |= (unint64_t)(v125 & 0x7F) << v120;
            if (v125 < 0)
            {
              v120 += 7;
              v14 = v121++ >= 9;
              if (v14)
              {
                v122 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v122 = 0;
LABEL_341:
        v177 = v122 != 0;
        v178 = 408;
        goto LABEL_367;
      case 0x2Bu:
        v126 = 0;
        v127 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x400u;
        while (2)
        {
          v128 = *v3;
          v129 = *(_QWORD *)(a2 + v128);
          if (v129 == -1 || v129 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v129);
            *(_QWORD *)(a2 + v128) = v129 + 1;
            v19 |= (unint64_t)(v130 & 0x7F) << v126;
            if (v130 < 0)
            {
              v126 += 7;
              v14 = v127++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_345:
        v176 = 272;
        goto LABEL_354;
      case 0x2Cu:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 280;
        goto LABEL_253;
      case 0x2Du:
        v131 = 0;
        v132 = 0;
        v133 = 0;
        *(_DWORD *)(a1 + 420) |= 0x20000u;
        while (2)
        {
          v134 = *v3;
          v135 = *(_QWORD *)(a2 + v134);
          if (v135 == -1 || v135 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
            *(_QWORD *)(a2 + v134) = v135 + 1;
            v133 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                v133 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v133 = 0;
LABEL_349:
        v177 = v133 != 0;
        v178 = 409;
        goto LABEL_367;
      case 0x2Eu:
        v137 = 0;
        v138 = 0;
        v19 = 0;
        *(_DWORD *)(a1 + 420) |= 0x8000u;
        while (2)
        {
          v139 = *v3;
          v140 = *(_QWORD *)(a2 + v139);
          if (v140 == -1 || v140 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v141 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v140);
            *(_QWORD *)(a2 + v139) = v140 + 1;
            v19 |= (unint64_t)(v141 & 0x7F) << v137;
            if (v141 < 0)
            {
              v137 += 7;
              v14 = v138++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_353:
        v176 = 384;
LABEL_354:
        *(_DWORD *)(a1 + v176) = v19;
        goto LABEL_381;
      case 0x2Fu:
        v142 = 0;
        v143 = 0;
        v144 = 0;
        *(_DWORD *)(a1 + 420) |= 0x4000000u;
        while (2)
        {
          v145 = *v3;
          v146 = *(_QWORD *)(a2 + v145);
          if (v146 == -1 || v146 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v147 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v146);
            *(_QWORD *)(a2 + v145) = v146 + 1;
            v144 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              v14 = v143++ >= 9;
              if (v14)
              {
                v144 = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v144 = 0;
LABEL_358:
        v177 = v144 != 0;
        v178 = 418;
        goto LABEL_367;
      case 0x30u:
        v148 = 0;
        v149 = 0;
        v150 = 0;
        *(_DWORD *)(a1 + 420) |= 0x2000000u;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v152 + 1;
            v150 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              v14 = v149++ >= 9;
              if (v14)
              {
                v150 = 0;
                goto LABEL_362;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v150 = 0;
LABEL_362:
        v177 = v150 != 0;
        v178 = 417;
        goto LABEL_367;
      case 0x31u:
        v154 = 0;
        v155 = 0;
        v156 = 0;
        *(_DWORD *)(a1 + 420) |= 0x400000u;
        while (2)
        {
          v157 = *v3;
          v158 = *(_QWORD *)(a2 + v157);
          if (v158 == -1 || v158 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v158);
            *(_QWORD *)(a2 + v157) = v158 + 1;
            v156 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              v14 = v155++ >= 9;
              if (v14)
              {
                v156 = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v156 = 0;
LABEL_366:
        v177 = v156 != 0;
        v178 = 414;
LABEL_367:
        *(_BYTE *)(a1 + v178) = v177;
        goto LABEL_381;
      case 0x32u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 264;
        goto LABEL_253;
      case 0x33u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 296;
        goto LABEL_253;
      case 0x34u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 304;
        goto LABEL_253;
      case 0x35u:
        v57 = objc_alloc_init(NTPBWidgetEngagement);
        objc_storeStrong((id *)(a1 + 400), v57);
        if (!PBReaderPlaceMark() || (NTPBWidgetEngagementReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_383;
        goto LABEL_262;
      case 0x36u:
        v57 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v57);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v57, a2) & 1) == 0)
        {
          goto LABEL_383;
        }
        goto LABEL_262;
      case 0x37u:
        v160 = 0;
        v161 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 420) |= 8u;
        while (2)
        {
          v162 = *v3;
          v163 = *(_QWORD *)(a2 + v162);
          if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
            *(_QWORD *)(a2 + v162) = v163 + 1;
            v81 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              v14 = v161++ >= 9;
              if (v14)
              {
                v81 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_371:
        v179 = 32;
        goto LABEL_380;
      case 0x38u:
        v165 = 0;
        v166 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 420) |= 1u;
        while (2)
        {
          v167 = *v3;
          v168 = *(_QWORD *)(a2 + v167);
          if (v168 == -1 || v168 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v169 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v168);
            *(_QWORD *)(a2 + v167) = v168 + 1;
            v81 |= (unint64_t)(v169 & 0x7F) << v165;
            if (v169 < 0)
            {
              v165 += 7;
              v14 = v166++ >= 9;
              if (v14)
              {
                v81 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_375:
        v179 = 8;
        goto LABEL_380;
      case 0x39u:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 200;
        goto LABEL_253;
      case 0x3Au:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 216;
        goto LABEL_253;
      case 0x3Bu:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 192;
        goto LABEL_253;
      case 0x3Cu:
        v170 = 0;
        v171 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 420) |= 4u;
        while (2)
        {
          v172 = *v3;
          v173 = *(_QWORD *)(a2 + v172);
          if (v173 == -1 || v173 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v174 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v173);
            *(_QWORD *)(a2 + v172) = v173 + 1;
            v81 |= (unint64_t)(v174 & 0x7F) << v170;
            if (v174 < 0)
            {
              v170 += 7;
              v14 = v171++ >= 9;
              if (v14)
              {
                v81 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v81 = 0;
LABEL_379:
        v179 = 24;
LABEL_380:
        *(_QWORD *)(a1 + v179) = v81;
        goto LABEL_381;
      case 0x3Du:
        PBReaderReadString();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 208;
        goto LABEL_253;
      case 0x3Eu:
        PBReaderReadData();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = 184;
LABEL_253:
        v175 = *(void **)(a1 + v29);
        *(_QWORD *)(a1 + v29) = v28;

        goto LABEL_381;
      case 0x3Fu:
        v57 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 232), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_383;
        goto LABEL_262;
      case 0x40u:
        v57 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 240), v57);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v57, a2) & 1) == 0)
          goto LABEL_383;
        goto LABEL_262;
      case 0x41u:
        v57 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 88), v57);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v57, a2) & 1) != 0)
        {
LABEL_262:
          PBReaderRecallMark();
LABEL_263:

LABEL_381:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_383:

        return 0;
      case 0x42u:
        PBReaderReadString();
        v57 = (NTPBWidgetEngagement *)objc_claimAutoreleasedReturnValue();
        if (v57)
          objc_msgSend((id)a1, "addTopicIds:", v57);
        goto LABEL_263;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_381;
    }
  }
}

uint64_t NTPBFeedCellExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_61;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_63;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_61:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_63:
          v48 = 40;
          goto LABEL_80;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_59;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_67:
          *(_BYTE *)(a1 + 56) = v28 != 0;
          continue;
        case 4u:
          v32 = 0;
          v33 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_71:
          v48 = 28;
          goto LABEL_80;
        case 5u:
          v37 = 0;
          v38 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_75:
          v48 = 8;
          goto LABEL_80;
        case 6u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
          goto LABEL_59;
        case 7u:
          v42 = 0;
          v43 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          break;
        case 8u:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
LABEL_59:
          v47 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v45 + 1;
        v19 |= (unint64_t)(v46 & 0x7F) << v42;
        if ((v46 & 0x80) == 0)
          goto LABEL_77;
        v42 += 7;
        v14 = v43++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_79;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_77:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_79:
      v48 = 24;
LABEL_80:
      *(_DWORD *)(a1 + v48) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedItemBatchReadFrom(void *a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t result;
  NTPBFeedItem *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (a2[*v5])
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&a2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
        *(_QWORD *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      v15 = a2[*v5];
      if (a2[*v5])
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = objc_alloc_init(NTPBFeedItem);
        objc_msgSend(a1, "addFeedItems:", v18);

        if (!PBReaderPlaceMark() || (NTPBFeedItemReadFrom((uint64_t)v18, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)&a2[*v3] < *(_QWORD *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

uint64_t NTPBEndOfArticleExposureReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  void *v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_72;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 104;
          goto LABEL_72;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_72;
        case 4u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_72;
        case 5u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          a1[156] |= 0x80u;
          while (2)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (v14)
                {
                  v21 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_97:
          a1[152] = v21 != 0;
          continue;
        case 8u:
          PBReaderReadString();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
            objc_msgSend(a1, "addRecommendedArticleId:", v26);
          goto LABEL_53;
        case 9u:
          PBReaderReadString();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
            objc_msgSend(a1, "addReferencedRecommendedArticleIds:", v26);
          goto LABEL_53;
        case 0xAu:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          a1[156] |= 8u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_101:
          v65 = 40;
          goto LABEL_114;
        case 0xBu:
          v33 = 0;
          v34 = 0;
          v29 = 0;
          a1[156] |= 0x20u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v29 |= (unint64_t)(v37 & 0x7F) << v33;
              if (v37 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_105:
          v65 = 48;
          goto LABEL_114;
        case 0xCu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_72;
        case 0xDu:
          PBReaderReadString();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
            objc_msgSend(a1, "addNamedEntities:", v26);
LABEL_53:

          continue;
        case 0xEu:
          v38 = 0;
          v39 = 0;
          v29 = 0;
          a1[156] |= 0x40u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v29 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_109:
          v65 = 88;
          goto LABEL_114;
        case 0xFu:
          v43 = 0;
          v44 = 0;
          v29 = 0;
          a1[156] |= 0x10u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v29 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v29) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_113:
          v65 = 44;
LABEL_114:
          *(_DWORD *)&a1[v65] = v29;
          continue;
        case 0x10u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 128;
          goto LABEL_72;
        case 0x11u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 136;
          goto LABEL_72;
        case 0x12u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 144;
          goto LABEL_72;
        case 0x13u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 120;
LABEL_72:
          v48 = *(void **)&a1[v18];
          *(_QWORD *)&a1[v18] = v17;

          continue;
        case 0x14u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          a1[156] |= 2u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                v14 = v50++ >= 9;
                if (v14)
                {
                  v51 = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v51 = 0;
LABEL_118:
          v66 = 16;
          goto LABEL_127;
        case 0x15u:
          v55 = 0;
          v56 = 0;
          v51 = 0;
          a1[156] |= 4u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v51 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  v51 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v51 = 0;
LABEL_122:
          v66 = 24;
          goto LABEL_127;
        case 0x16u:
          v60 = 0;
          v61 = 0;
          v51 = 0;
          a1[156] |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
        *(_QWORD *)(a2 + v62) = v63 + 1;
        v51 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0)
          goto LABEL_124;
        v60 += 7;
        v14 = v61++ >= 9;
        if (v14)
        {
          v51 = 0;
          goto LABEL_126;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_124:
      if (*(_BYTE *)(a2 + *v5))
        v51 = 0;
LABEL_126:
      v66 = 8;
LABEL_127:
      *(_QWORD *)&a1[v66] = v51;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBBinningConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 60) |= 0x80u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_70;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_72;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_70:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_72:
          *(_BYTE *)(a1 + 56) = v20 != 0;
          continue;
        case 2u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if (v32 < 0)
              {
                v26 += 7;
                v15 = v27++ >= 9;
                if (v15)
                {
                  v28 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_76:
          v63 = 16;
          goto LABEL_85;
        case 3u:
          v33 = 0;
          v34 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v37;
              v28 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v15 = v34++ >= 9;
                if (v15)
                {
                  v28 = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_80:
          v63 = 24;
          goto LABEL_85;
        case 4u:
          *(_BYTE *)(a1 + 60) |= 8u;
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v41 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v41 = 0;
          }
          v65 = 32;
          goto LABEL_99;
        case 5u:
          *(_BYTE *)(a1 + 60) |= 1u;
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v41 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v41 = 0;
          }
          v65 = 8;
LABEL_99:
          *(_QWORD *)(a1 + v65) = v41;
          continue;
        case 6u:
          v44 = 0;
          v45 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v28 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                v15 = v45++ >= 9;
                if (v15)
                {
                  v28 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_84:
          v63 = 40;
LABEL_85:
          *(_QWORD *)(a1 + v63) = v28;
          continue;
        case 7u:
          v50 = 0;
          v51 = 0;
          v52 = 0;
          *(_BYTE *)(a1 + 60) |= 0x40u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v55;
              v52 |= (unint64_t)(v56 & 0x7F) << v50;
              if (v56 < 0)
              {
                v50 += 7;
                v15 = v51++ >= 9;
                if (v15)
                {
                  LODWORD(v52) = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v52) = 0;
LABEL_89:
          v64 = 52;
          goto LABEL_94;
        case 8u:
          v57 = 0;
          v58 = 0;
          v52 = 0;
          *(_BYTE *)(a1 + 60) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v59 = *v3;
        v60 = *(_QWORD *)(a2 + v59);
        v61 = v60 + 1;
        if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v4))
          break;
        v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
        *(_QWORD *)(a2 + v59) = v61;
        v52 |= (unint64_t)(v62 & 0x7F) << v57;
        if ((v62 & 0x80) == 0)
          goto LABEL_91;
        v57 += 7;
        v15 = v58++ >= 9;
        if (v15)
        {
          LODWORD(v52) = 0;
          goto LABEL_93;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_91:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v52) = 0;
LABEL_93:
      v64 = 48;
LABEL_94:
      *(_DWORD *)(a1 + v64) = v52;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBBundleSubscriberInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  BOOL v52;
  uint64_t v53;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_63;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_65;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_63:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_65:
          *(_DWORD *)(a1 + 16) = v19;
          continue;
        case 2u:
          PBReaderReadString();
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if (v24)
            objc_msgSend((id)a1, "addSubscribedChannelIds:", v24);

          continue;
        case 3u:
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = 32;
          goto LABEL_33;
        case 4u:
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = 40;
LABEL_33:
          v27 = *(void **)(a1 + v26);
          *(_QWORD *)(a1 + v26) = v25;

          continue;
        case 5u:
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v30 |= (unint64_t)(v33 & 0x7F) << v28;
              if (v33 < 0)
              {
                v28 += 7;
                v14 = v29++ >= 9;
                if (v14)
                {
                  v30 = 0;
                  goto LABEL_69;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v30 = 0;
LABEL_69:
          *(_QWORD *)(a1 + 8) = v30;
          continue;
        case 6u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 52) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v36 |= (unint64_t)(v39 & 0x7F) << v34;
              if (v39 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v36 = 0;
                  goto LABEL_73;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v36 = 0;
LABEL_73:
          v52 = v36 != 0;
          v53 = 50;
          goto LABEL_82;
        case 7u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v14 = v41++ >= 9;
                if (v14)
                {
                  v42 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_77:
          v52 = v42 != 0;
          v53 = 49;
          goto LABEL_82;
        case 8u:
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 52) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v49 = *v3;
        v50 = *(_QWORD *)(a2 + v49);
        if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          break;
        v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
        *(_QWORD *)(a2 + v49) = v50 + 1;
        v48 |= (unint64_t)(v51 & 0x7F) << v46;
        if ((v51 & 0x80) == 0)
          goto LABEL_79;
        v46 += 7;
        v14 = v47++ >= 9;
        if (v14)
        {
          v48 = 0;
          goto LABEL_81;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_79:
      if (*(_BYTE *)(a2 + *v5))
        v48 = 0;
LABEL_81:
      v52 = v48 != 0;
      v53 = 48;
LABEL_82:
      *(_BYTE *)(a1 + v53) = v52;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchExecuteReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  void *v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_59;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          a1[124] |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_63:
          v38 = 60;
          goto LABEL_72;
        case 3u:
          v26 = 0;
          v27 = 0;
          v22 = 0;
          a1[124] |= 1u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_67:
          v38 = 56;
          goto LABEL_72;
        case 4u:
          v31 = 0;
          v32 = 0;
          v22 = 0;
          a1[124] |= 4u;
          break;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 96;
          goto LABEL_59;
        case 6u:
          PBReaderReadString();
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          if (v36)
            objc_msgSend(a1, "addTopicResultFeedIds:", v36);
          goto LABEL_57;
        case 7u:
          PBReaderReadString();
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          if (v36)
            objc_msgSend(a1, "addChannelResultFeedIds:", v36);
          goto LABEL_57;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_59;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_59;
        case 0xAu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_59;
        case 0xBu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_59;
        case 0xCu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 80;
          goto LABEL_59;
        case 0xDu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 88;
          goto LABEL_59;
        case 0xEu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 104;
          goto LABEL_59;
        case 0xFu:
          PBReaderReadString();
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          if (v36)
            objc_msgSend(a1, "addArticleResultIds:", v36);
LABEL_57:

          continue;
        case 0x10u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
LABEL_59:
          v37 = *(void **)&a1[v18];
          *(_QWORD *)&a1[v18] = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          break;
        v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
        *(_QWORD *)(a2 + v33) = v34 + 1;
        v22 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0)
          goto LABEL_69;
        v31 += 7;
        v14 = v32++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_69:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_71:
      v38 = 120;
LABEL_72:
      *(_DWORD *)&a1[v38] = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBBloomFilterInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v23;

      }
      else if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioEngageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  COMAPPLEFELDSPARPROTOCOLScoredTagID *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  void *v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  unint64_t v123;
  int v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 120;
        goto LABEL_151;
      case 2u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 248;
        goto LABEL_151;
      case 3u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 268) |= 0x800000u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                v23 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_172:
        v131 = v23 != 0;
        v132 = 264;
        goto LABEL_218;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x10000u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_176:
        v133 = 192;
        goto LABEL_223;
      case 5u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 184;
        goto LABEL_151;
      case 6u:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 200;
        goto LABEL_151;
      case 7u:
        v35 = 0;
        v36 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x8000u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_180:
        v133 = 168;
        goto LABEL_223;
      case 8u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 160;
        goto LABEL_151;
      case 9u:
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 268) |= 0x1000u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_184:
        v134 = 104;
        goto LABEL_197;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x200000u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v52;
            v30 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_188:
        v133 = 256;
        goto LABEL_223;
      case 0xBu:
        v54 = 0;
        v55 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 268) |= 8u;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v15 = v55++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_192:
        v134 = 32;
        goto LABEL_197;
      case 0xCu:
        v60 = 0;
        v61 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 268) |= 4u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v64;
            v43 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v15 = v61++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_196:
        v134 = 24;
LABEL_197:
        *(_QWORD *)(a1 + v134) = v43;
        goto LABEL_247;
      case 0xDu:
        v66 = 0;
        v67 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x400000u;
        while (2)
        {
          v68 = *v3;
          v69 = *(_QWORD *)(a2 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v70;
            v30 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v15 = v67++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_201:
        v133 = 260;
        goto LABEL_223;
      case 0xEu:
        v72 = 0;
        v73 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x100000u;
        while (2)
        {
          v74 = *v3;
          v75 = *(_QWORD *)(a2 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v75);
            *(_QWORD *)(a2 + v74) = v76;
            v30 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v15 = v73++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_205:
        v133 = 244;
        goto LABEL_223;
      case 0xFu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 152;
        goto LABEL_151;
      case 0x10u:
        v78 = 0;
        v79 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x40000u;
        while (2)
        {
          v80 = *v3;
          v81 = *(_QWORD *)(a2 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
            *(_QWORD *)(a2 + v80) = v82;
            v30 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              v15 = v79++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_209:
        v133 = 236;
        goto LABEL_223;
      case 0x11u:
        v84 = 0;
        v85 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x20000u;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v88;
            v30 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              v15 = v85++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_213:
        v133 = 232;
        goto LABEL_223;
      case 0x12u:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 128;
        goto LABEL_151;
      case 0x13u:
        v90 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v90);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v90, a2) & 1) == 0)
        {
          goto LABEL_252;
        }
        goto LABEL_149;
      case 0x14u:
        *(_DWORD *)(a1 + 268) |= 1u;
        v91 = *v3;
        v92 = *(_QWORD *)(a2 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFF7 && v92 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v92);
          *(_QWORD *)(a2 + v91) = v92 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 8;
        goto LABEL_246;
      case 0x15u:
        *(_DWORD *)(a1 + 268) |= 2u;
        v94 = *v3;
        v95 = *(_QWORD *)(a2 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v95);
          *(_QWORD *)(a2 + v94) = v95 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 16;
        goto LABEL_246;
      case 0x16u:
        *(_DWORD *)(a1 + 268) |= 0x10u;
        v96 = *v3;
        v97 = *(_QWORD *)(a2 + v96);
        if (v97 <= 0xFFFFFFFFFFFFFFF7 && v97 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v97);
          *(_QWORD *)(a2 + v96) = v97 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 40;
        goto LABEL_246;
      case 0x17u:
        *(_DWORD *)(a1 + 268) |= 0x20u;
        v98 = *v3;
        v99 = *(_QWORD *)(a2 + v98);
        if (v99 <= 0xFFFFFFFFFFFFFFF7 && v99 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v99);
          *(_QWORD *)(a2 + v98) = v99 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 48;
        goto LABEL_246;
      case 0x18u:
        *(_DWORD *)(a1 + 268) |= 0x40u;
        v100 = *v3;
        v101 = *(_QWORD *)(a2 + v100);
        if (v101 <= 0xFFFFFFFFFFFFFFF7 && v101 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v101);
          *(_QWORD *)(a2 + v100) = v101 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 56;
        goto LABEL_246;
      case 0x19u:
        *(_DWORD *)(a1 + 268) |= 0x80u;
        v102 = *v3;
        v103 = *(_QWORD *)(a2 + v102);
        if (v103 <= 0xFFFFFFFFFFFFFFF7 && v103 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v103);
          *(_QWORD *)(a2 + v102) = v103 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 64;
        goto LABEL_246;
      case 0x1Au:
        *(_DWORD *)(a1 + 268) |= 0x100u;
        v104 = *v3;
        v105 = *(_QWORD *)(a2 + v104);
        if (v105 <= 0xFFFFFFFFFFFFFFF7 && v105 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v105);
          *(_QWORD *)(a2 + v104) = v105 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 72;
        goto LABEL_246;
      case 0x1Bu:
        *(_DWORD *)(a1 + 268) |= 0x200u;
        v106 = *v3;
        v107 = *(_QWORD *)(a2 + v106);
        if (v107 <= 0xFFFFFFFFFFFFFFF7 && v107 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v107);
          *(_QWORD *)(a2 + v106) = v107 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 80;
        goto LABEL_246;
      case 0x1Cu:
        *(_DWORD *)(a1 + 268) |= 0x400u;
        v108 = *v3;
        v109 = *(_QWORD *)(a2 + v108);
        if (v109 <= 0xFFFFFFFFFFFFFFF7 && v109 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v109);
          *(_QWORD *)(a2 + v108) = v109 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 88;
        goto LABEL_246;
      case 0x1Du:
        *(_DWORD *)(a1 + 268) |= 0x800u;
        v110 = *v3;
        v111 = *(_QWORD *)(a2 + v110);
        if (v111 <= 0xFFFFFFFFFFFFFFF7 && v111 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v111);
          *(_QWORD *)(a2 + v110) = v111 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 96;
        goto LABEL_246;
      case 0x1Eu:
        *(_DWORD *)(a1 + 268) |= 0x2000u;
        v112 = *v3;
        v113 = *(_QWORD *)(a2 + v112);
        if (v113 <= 0xFFFFFFFFFFFFFFF7 && v113 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v113);
          *(_QWORD *)(a2 + v112) = v113 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v93 = 0;
        }
        v135 = 112;
LABEL_246:
        *(_QWORD *)(a1 + v135) = v93;
        goto LABEL_247;
      case 0x1Fu:
        v90 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 208), v90);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v90, a2) & 1) == 0)
          goto LABEL_252;
        goto LABEL_149;
      case 0x20u:
        v90 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 216), v90);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v90, a2) & 1) == 0)
          goto LABEL_252;
        goto LABEL_149;
      case 0x21u:
        v90 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 144), v90);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v90, a2) & 1) != 0)
        {
LABEL_149:
          PBReaderRecallMark();

LABEL_247:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_252:

        return 0;
      case 0x22u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 224;
LABEL_151:
        v114 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_247;
      case 0x23u:
        v115 = 0;
        v116 = 0;
        v117 = 0;
        *(_DWORD *)(a1 + 268) |= 0x1000000u;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v120;
            v117 |= (unint64_t)(v121 & 0x7F) << v115;
            if (v121 < 0)
            {
              v115 += 7;
              v15 = v116++ >= 9;
              if (v15)
              {
                v117 = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v117 = 0;
LABEL_217:
        v131 = v117 != 0;
        v132 = 265;
LABEL_218:
        *(_BYTE *)(a1 + v132) = v131;
        goto LABEL_247;
      case 0x24u:
        *(_DWORD *)(a1 + 268) |= 0x80000u;
        v122 = *v3;
        v123 = *(_QWORD *)(a2 + v122);
        if (v123 <= 0xFFFFFFFFFFFFFFFBLL && v123 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v124 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v123);
          *(_QWORD *)(a2 + v122) = v123 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v124 = 0;
        }
        *(_DWORD *)(a1 + 240) = v124;
        goto LABEL_247;
      case 0x25u:
        v125 = 0;
        v126 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 268) |= 0x4000u;
        while (2)
        {
          v127 = *v3;
          v128 = *(_QWORD *)(a2 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
            *(_QWORD *)(a2 + v127) = v129;
            v30 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              v15 = v126++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_222:
        v133 = 136;
LABEL_223:
        *(_DWORD *)(a1 + v133) = v30;
        goto LABEL_247;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_247;
    }
  }
}

uint64_t NTPBNotificationSettingsScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              *(_BYTE *)(a1 + 36) |= 1u;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 8;
              goto LABEL_31;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_31;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 24;
LABEL_31:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_33;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBUrlMappingMissReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
LABEL_25:
        v20 = *(void **)&a1[v19];
        *(_QWORD *)&a1[v19] = v18;
LABEL_26:

        goto LABEL_28;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_28:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
      objc_msgSend(a1, "addPaths:", v20);
    goto LABEL_26;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBPersonalizationBucketReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBPersonalizationBucket__treatmentId;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBPersonalizationBucket__minimum;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___NTPBPersonalizationBucket__maximum;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBDevicePushTokenUpdateRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  NTPBDeviceInfo *v19;
  uint64_t v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_28;
      case 2u:
        v19 = objc_alloc_init(NTPBDeviceInfo);
        v20 = 8;
        goto LABEL_24;
      case 3u:
        v19 = objc_alloc_init(NTPBDeviceInfo);
        v20 = 16;
LABEL_24:
        objc_storeStrong((id *)(a1 + v20), v19);
        if (PBReaderPlaceMark() && (NTPBDeviceInfoReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_29:

LABEL_30:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
LABEL_28:
        v19 = *(NTPBDeviceInfo **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;
        goto LABEL_29;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_30;
    }
  }
}

uint64_t NTPBPersonalizationTreatmentReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  uint64_t v16;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v6 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v3;
        v11 = *(_QWORD *)(a2 + v10);
        if (v11 == -1 || v11 >= *(_QWORD *)(a2 + *v4))
          break;
        v12 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v11);
        *(_QWORD *)(a2 + v10) = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v14 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v14 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v9 = 0;
LABEL_14:
      if (v14 || (v9 & 7) == 4)
        break;
      v16 = (v9 >> 3) - 1;
      if (v16 <= 0x190)
        __asm { BR              X9 }
      result = PBReaderSkipValueWithTag();
      if (!(_DWORD)result)
        return result;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBShareSheetIapFailReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_31;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_31:
          v26 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          break;
        v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0)
          goto LABEL_33;
        v20 += 7;
        v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_35;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_35:
      *(_DWORD *)(a1 + 24) = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationSubscribeUnsubscribeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_55;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_57;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_57:
          v43 = 48;
          goto LABEL_70;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_61:
          v43 = 44;
          goto LABEL_70;
        case 3u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 24;
          goto LABEL_46;
        case 4u:
          v31 = 0;
          v32 = 0;
          v33 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  v33 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v33 = 0;
LABEL_65:
          *(_BYTE *)(a1 + 52) = v33 != 0;
          continue;
        case 5u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 8;
          goto LABEL_46;
        case 6u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 16;
          goto LABEL_46;
        case 7u:
          PBReaderReadString();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
LABEL_46:
          v37 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        case 8u:
          v38 = 0;
          v39 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v40 = *v3;
        v41 = *(_QWORD *)(a2 + v40);
        if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
        *(_QWORD *)(a2 + v40) = v41 + 1;
        v19 |= (unint64_t)(v42 & 0x7F) << v38;
        if ((v42 & 0x80) == 0)
          goto LABEL_67;
        v38 += 7;
        v14 = v39++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_69:
      v43 = 40;
LABEL_70:
      *(_DWORD *)(a1 + v43) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPrivateRecordSyncStateReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  NTPBDate *v22;
  uint64_t v23;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 3;
        goto LABEL_23;
      case 2u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 4;
LABEL_23:
        a1[v19] = v18;
        goto LABEL_29;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 1;
        goto LABEL_26;
      case 4u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 2;
LABEL_26:
        a1[v23] = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_29;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 16) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBHeadlineAdElementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  BOOL v46;
  uint64_t v47;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_52;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_52;
        case 3u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addArticleIAdCategories:", v20);
          goto LABEL_64;
        case 4u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 92) |= 4u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_68:
          v46 = v23 != 0;
          v47 = 89;
          goto LABEL_77;
        case 5u:
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 92) |= 8u;
          while (2)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
              *(_QWORD *)(a2 + v30) = v31 + 1;
              v29 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  v29 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v29 = 0;
LABEL_72:
          v46 = v29 != 0;
          v47 = 90;
          goto LABEL_77;
        case 6u:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 92) |= 2u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v14 = v34++ >= 9;
                if (v14)
                {
                  v35 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v35 = 0;
LABEL_76:
          v46 = v35 != 0;
          v47 = 88;
LABEL_77:
          *(_BYTE *)(a1 + v47) = v46;
          continue;
        case 7u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addArticleIAdSectionIDs:", v20);
          goto LABEL_64;
        case 8u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addChannelIAdKeywords:", v20);
          goto LABEL_64;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_52;
        case 0xAu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 80;
LABEL_52:
          v39 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 0xBu:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addChannelIAdCategories:", v20);
          goto LABEL_64;
        case 0xCu:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 92) |= 1u;
          break;
        case 0xDu:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addArticleIAdKeywords:", v20);
LABEL_64:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v43 = *v3;
        v44 = *(_QWORD *)(a2 + v43);
        if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
        *(_QWORD *)(a2 + v43) = v44 + 1;
        v42 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0)
          goto LABEL_79;
        v40 += 7;
        v14 = v41++ >= 9;
        if (v14)
        {
          v42 = 0;
          goto LABEL_81;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_79:
      if (*(_BYTE *)(a2 + *v5))
        v42 = 0;
LABEL_81:
      *(_QWORD *)(a1 + 8) = v42;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAppSessionEndWatchReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_QWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBWidgetSectionsArticleCountPairReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v18 == 2)
      {
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v23 = 0;
            v24 = 0;
            v25 = 0;
            while (1)
            {
              v26 = *v3;
              v27 = *(_QWORD *)(a2 + v26);
              if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
                break;
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v14 = v24++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_36;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_36:
            PBRepeatedInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v29 = 0;
          v30 = 0;
          v31 = 0;
          while (1)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
              break;
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_48;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_48:
          PBRepeatedInt64Add();
        }
        goto LABEL_49;
      }
      if ((_DWORD)v18 == 1)
      {
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 32;
LABEL_23:
        v21 = *(void **)(a1 + v20);
        *(_QWORD *)(a1 + v20) = v19;

        goto LABEL_49;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_49:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = 40;
    goto LABEL_23;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayWidgetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  NTPBWidgetSectionsArticleCountPair *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void *v53;
  uint64_t v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 4u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_74;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_76;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_76:
        v54 = 36;
        goto LABEL_97;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 0x10u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_80:
        v54 = 44;
        goto LABEL_97;
      case 3u:
        v29 = objc_alloc_init(NTPBWidgetSectionsArticleCountPair);
        objc_msgSend((id)a1, "addWidgetSectionsArticleCountPair:", v29);
        if (!PBReaderPlaceMark()
          || (NTPBWidgetSectionsArticleCountPairReadFrom((uint64_t)v29, a2) & 1) == 0)
        {
          goto LABEL_100;
        }
        goto LABEL_40;
      case 4u:
        v29 = objc_alloc_init(NTPBWidgetPersonalizationFeatureCTRPair);
        objc_msgSend((id)a1, "addWidgetPersonalizationFeatureCTRPair:", v29);
        if (PBReaderPlaceMark()
          && (NTPBWidgetPersonalizationFeatureCTRPairReadFrom((uint64_t)v29, a2) & 1) != 0)
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_98:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_100:

        return 0;
      case 5u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_84:
        v54 = 32;
        goto LABEL_97;
      case 6u:
        PBReaderReadString();
        v35 = objc_claimAutoreleasedReturnValue();
        v36 = 48;
        goto LABEL_72;
      case 7u:
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                v39 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_88:
        *(_QWORD *)(a1 + 8) = v39;
        goto LABEL_98;
      case 8u:
        PBReaderReadString();
        v35 = objc_claimAutoreleasedReturnValue();
        v36 = 16;
        goto LABEL_72;
      case 9u:
        v43 = 0;
        v44 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 8u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v19 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_92:
        v54 = 40;
        goto LABEL_97;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_96:
        v54 = 72;
LABEL_97:
        *(_DWORD *)(a1 + v54) = v19;
        goto LABEL_98;
      case 0xBu:
        PBReaderReadString();
        v35 = objc_claimAutoreleasedReturnValue();
        v36 = 24;
LABEL_72:
        v53 = *(void **)(a1 + v36);
        *(_QWORD *)(a1 + v36) = v35;

        goto LABEL_98;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_98;
    }
  }
}

uint64_t NTPBTodayWidgetConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 80) |= 1u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_72;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_74;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_74:
          v65 = 8;
          goto LABEL_91;
        case 2u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 80) |= 0x10u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                v15 = v26++ >= 9;
                if (v15)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v27) = 0;
LABEL_78:
          *(_DWORD *)(a1 + 72) = v27;
          continue;
        case 3u:
          *(_BYTE *)(a1 + 80) |= 2u;
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v34 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v34 = 0;
          }
          *(_QWORD *)(a1 + 16) = v34;
          continue;
        case 4u:
          PBReaderReadData();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 64;
          goto LABEL_49;
        case 6u:
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 56;
          goto LABEL_49;
        case 7u:
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 48;
          goto LABEL_49;
        case 8u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 80) |= 0x20u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                v15 = v39++ >= 9;
                if (v15)
                {
                  v40 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v40 = 0;
LABEL_82:
          v66 = v40 != 0;
          v67 = 76;
          goto LABEL_96;
        case 9u:
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 40;
LABEL_49:
          v45 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          continue;
        case 0xAu:
          v46 = 0;
          v47 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 80) |= 4u;
          while (2)
          {
            v48 = *v3;
            v49 = *(_QWORD *)(a2 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
              *(_QWORD *)(a2 + v48) = v50;
              v20 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v15 = v47++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_86:
          v65 = 24;
          goto LABEL_91;
        case 0xBu:
          v52 = 0;
          v53 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 80) |= 8u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v56;
              v20 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v15 = v53++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_90:
          v65 = 32;
LABEL_91:
          *(_QWORD *)(a1 + v65) = v20;
          continue;
        case 0xCu:
          v58 = 0;
          v59 = 0;
          v60 = 0;
          *(_BYTE *)(a1 + 80) |= 0x40u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v61 = *v3;
        v62 = *(_QWORD *)(a2 + v61);
        v63 = v62 + 1;
        if (v62 == -1 || v63 > *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
        *(_QWORD *)(a2 + v61) = v63;
        v60 |= (unint64_t)(v64 & 0x7F) << v58;
        if ((v64 & 0x80) == 0)
          goto LABEL_93;
        v58 += 7;
        v15 = v59++ >= 9;
        if (v15)
        {
          v60 = 0;
          goto LABEL_95;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_93:
      if (*(_BYTE *)(a2 + *v5))
        v60 = 0;
LABEL_95:
      v66 = v60 != 0;
      v67 = 77;
LABEL_96:
      *(_BYTE *)(a1 + v67) = v66;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBDiscoverMoreInterstitialExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_44;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_46;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_46:
          v37 = 24;
          goto LABEL_55;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 32) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_50:
          *(_BYTE *)(a1 + 28) = v26 != 0;
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v35;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v32 = *v3;
        v33 = *(_QWORD *)(a2 + v32);
        if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
        *(_QWORD *)(a2 + v32) = v33 + 1;
        v19 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0)
          goto LABEL_52;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_54:
      v37 = 8;
LABEL_55:
      *(_DWORD *)(a1 + v37) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAVAssetKeyReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *Data;
  NTPBDate *v22;
  uint64_t v23;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 3;
        goto LABEL_23;
      case 2u:
        Data = (void *)PBReaderReadData();

        v18 = Data;
        v19 = 4;
LABEL_23:
        a1[v19] = v18;
        goto LABEL_29;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 1;
        goto LABEL_26;
      case 4u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 2;
LABEL_26:
        a1[v23] = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_29;
    }
  }
}

uint64_t NTPBTelemetryNetworkEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x80u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_85;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_87;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_85:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_87:
          v65 = 64;
          goto LABEL_120;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 2u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_91:
          v65 = 16;
          goto LABEL_120;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 1u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_95:
          v65 = 8;
          goto LABEL_120;
        case 4u:
          v34 = 0;
          v35 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x10u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v37 + 1;
              v19 |= (unint64_t)(v38 & 0x7F) << v34;
              if (v38 < 0)
              {
                v34 += 7;
                v14 = v35++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_99:
          v65 = 40;
          goto LABEL_120;
        case 5u:
          v39 = 0;
          v40 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x20u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v19 |= (unint64_t)(v43 & 0x7F) << v39;
              if (v43 < 0)
              {
                v39 += 7;
                v14 = v40++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_103:
          v65 = 48;
          goto LABEL_120;
        case 6u:
          v44 = 0;
          v45 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 0x40u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v47 + 1;
              v19 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_107:
          v65 = 56;
          goto LABEL_120;
        case 7u:
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_WORD *)(a1 + 76) |= 0x100u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                v14 = v50++ >= 9;
                if (v14)
                {
                  LODWORD(v51) = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v51) = 0;
LABEL_111:
          *(_DWORD *)(a1 + 72) = v51;
          continue;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 8u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v58 + 1;
              v19 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                v14 = v56++ >= 9;
                if (v14)
                {
                  v19 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_115:
          v65 = 32;
          goto LABEL_120;
        case 9u:
          v60 = 0;
          v61 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 76) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          break;
        v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
        *(_QWORD *)(a2 + v62) = v63 + 1;
        v19 |= (unint64_t)(v64 & 0x7F) << v60;
        if ((v64 & 0x80) == 0)
          goto LABEL_117;
        v60 += 7;
        v14 = v61++ >= 9;
        if (v14)
        {
          v19 = 0;
          goto LABEL_119;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_117:
      if (*(_BYTE *)(a2 + *v5))
        v19 = 0;
LABEL_119:
      v65 = 24;
LABEL_120:
      *(_QWORD *)(a1 + v65) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBBucketGroupConfigResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBBucketGroupConfig *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBBucketGroupConfig);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (NTPBBucketGroupConfigReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_30;
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = objc_alloc_init(NTPBBloomFilterInfo);
    objc_storeStrong((id *)(a1 + 16), v17);
    if (!PBReaderPlaceMark() || (NTPBBloomFilterInfoReadFrom((uint64_t)v17, a2) & 1) == 0)
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleFeedbackReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_25;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_25;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_25;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_25:
          v20 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        case 5u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_34;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_36;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v23) = 0;
LABEL_36:
      *(_DWORD *)(a1 + 16) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAnfComponentExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  NTPBIssueData *v31;
  void *v32;
  uint64_t v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 48;
        goto LABEL_52;
      case 2u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 112;
        goto LABEL_52;
      case 3u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 40;
        goto LABEL_52;
      case 4u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_52;
      case 5u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
        goto LABEL_52;
      case 6u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 104;
        goto LABEL_52;
      case 7u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 56;
        goto LABEL_52;
      case 8u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 120) |= 2u;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              v14 = v21++ >= 9;
              if (v14)
              {
                v22 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_59:
        v33 = 16;
        goto LABEL_64;
      case 9u:
        v26 = 0;
        v27 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 120) |= 1u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v22 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                v22 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_63:
        v33 = 8;
LABEL_64:
        *(_QWORD *)(a1 + v33) = v22;
        goto LABEL_65;
      case 0xAu:
        v31 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v31, a2) & 1) == 0)
          goto LABEL_67;
        goto LABEL_55;
      case 0xBu:
        v31 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 88), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v31, a2) & 1) == 0)
          goto LABEL_67;
        goto LABEL_55;
      case 0xCu:
        v31 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 96), v31);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v31, a2) & 1) == 0)
          goto LABEL_67;
        goto LABEL_55;
      case 0xDu:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 64;
LABEL_52:
        v32 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_65;
      case 0xEu:
        v31 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v31);
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v31, a2) & 1) != 0)
        {
LABEL_55:
          PBReaderRecallMark();

LABEL_65:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_67:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_65;
    }
  }
}

uint64_t NTPBShareSheetExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_41:
          v32 = 16;
          goto LABEL_46;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 8;
          goto LABEL_30;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
LABEL_30:
          v26 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v19 |= (unint64_t)(v31 & 0x7F) << v27;
        if ((v31 & 0x80) == 0)
          goto LABEL_43;
        v27 += 7;
        v14 = v28++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_45:
      v32 = 32;
LABEL_46:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBRelativePersonalizedSectionPresenceConfigReadFrom(void *a1, void *a2)
{
  _BYTE *v3;
  _BYTE *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v23;

  v3 = a1;
  v4 = a2;
  v5 = (int *)MEMORY[0x24BE7AF60];
  v6 = (int *)MEMORY[0x24BE7AF50];
  v7 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&v4[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&v4[*MEMORY[0x24BE7AF50]])
  {
    v8 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (v4[*v7])
        break;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v5;
        v13 = *(_QWORD *)&v4[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v4[*v6])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
        *(_QWORD *)&v4[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v17 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      v17 = v4[*v7];
      if (v4[*v7])
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        break;
      if ((v11 >> 3) == 1)
      {
        v3[16] |= 1u;
        v19 = *v5;
        v20 = *(_QWORD *)&v4[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v20);
          *(_QWORD *)&v4[v19] = v20 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        *((_QWORD *)v3 + 1) = v21;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        v23 = 0;
        goto LABEL_28;
      }
    }
    while (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6]);
  }
  v23 = v4[*v7] == 0;
LABEL_28:

  return v23;
}

uint64_t NTPBIssueViewDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBUserOnboardingScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 4u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_68;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_70;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_68:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_70:
          v53 = 16;
          goto LABEL_91;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_31;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
LABEL_31:
          v26 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 5u:
          v27 = 0;
          v28 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 0x10u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v19 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_74:
          v53 = 40;
          goto LABEL_91;
        case 6u:
          v32 = 0;
          v33 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_78:
          v53 = 12;
          goto LABEL_91;
        case 7u:
          v37 = 0;
          v38 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 8u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_82:
          v53 = 20;
          goto LABEL_91;
        case 8u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 60) |= 0x20u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_86:
          *(_BYTE *)(a1 + 56) = v44 != 0;
          continue;
        case 9u:
          v48 = 0;
          v49 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v50 = *v3;
        v51 = *(_QWORD *)(a2 + v50);
        if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          break;
        v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
        *(_QWORD *)(a2 + v50) = v51 + 1;
        v19 |= (unint64_t)(v52 & 0x7F) << v48;
        if ((v52 & 0x80) == 0)
          goto LABEL_88;
        v48 += 7;
        v14 = v49++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_90;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_88:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_90:
      v53 = 8;
LABEL_91:
      *(_DWORD *)(a1 + v53) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPersonalizationChangeGroupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  NTPBPersonalizationAggregateDelta *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *String;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_35;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_37;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_37:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else if ((_DWORD)v17 == 1)
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 24) = String;
      }
      else if ((_DWORD)v17)
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = objc_alloc_init(NTPBPersonalizationAggregateDelta);
        objc_msgSend((id)a1, "addDeltas:", v18);

        if (!PBReaderPlaceMark()
          || (NTPBPersonalizationAggregateDeltaReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBIssueDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v17;

          continue;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_42:
          *(_BYTE *)(a1 + 32) = v22 != 0;
          continue;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          if (v32)
            objc_msgSend((id)a1, "addTopicIds:", v32);

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v28) = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v28) = 0;
LABEL_46:
      *(_DWORD *)(a1 + 16) = v28;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBSectionDisplayDescriptorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_30;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_30;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_30;
        case 9u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_30;
        case 0xAu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_30;
        case 0xCu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_30;
        case 0xDu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_30;
        case 0xEu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_30;
        case 0xFu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_30:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_31;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_31:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAppleIdSignInResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t result;
  uint64_t v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v24;

      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v26 = 0;
          v27 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
              break;
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v20 |= (unint64_t)(v30 & 0x7F) << v26;
            if ((v30 & 0x80) == 0)
              goto LABEL_43;
            v26 += 7;
            v14 = v27++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_45;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_45:
          v32 = 8;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_39;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              LODWORD(v20) = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_41:
          v32 = 12;
        }
        *(_DWORD *)(a1 + v32) = v20;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBErrorResponseReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBError *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBError);
        objc_msgSend(a1, "addErrors:", v17);
        if (!PBReaderPlaceMark() || (NTPBErrorReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBScoreProfileReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NTPBScoreProfileDebug *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  NTPBCohortMembership *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  NTPBScoringCohort *v65;
  NTPBCoefficients *v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] >= *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
    return a2[*v5] == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (a2[*v5])
      return a2[*v5] == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)&a2[v11];
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)&a2[*v4])
        break;
      v14 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
      *(_QWORD *)&a2[v11] = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = a2[*v5];
        goto LABEL_14;
      }
    }
    a2[*v5] = 1;
LABEL_12:
    v16 = a2[*v5];
    if (a2[*v5])
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return a2[*v5] == 0;
    switch((v10 >> 3))
    {
      case 0xAu:
        *(_DWORD *)(a1 + 252) |= 0x100u;
        v18 = *v3;
        v19 = *(_QWORD *)&a2[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v19);
          *(_QWORD *)&a2[v18] = v19 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 72;
        goto LABEL_193;
      case 0xBu:
        *(_DWORD *)(a1 + 252) |= 0x800000u;
        v23 = *v3;
        v24 = *(_QWORD *)&a2[v23];
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v24);
          *(_QWORD *)&a2[v23] = v24 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 192;
        goto LABEL_193;
      case 0xCu:
        *(_DWORD *)(a1 + 252) |= 0x800u;
        v25 = *v3;
        v26 = *(_QWORD *)&a2[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v26);
          *(_QWORD *)&a2[v25] = v26 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 96;
        goto LABEL_193;
      case 0xDu:
        *(_DWORD *)(a1 + 252) |= 2u;
        v27 = *v3;
        v28 = *(_QWORD *)&a2[v27];
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v28);
          *(_QWORD *)&a2[v27] = v28 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 16;
        goto LABEL_193;
      case 0xEu:
        *(_DWORD *)(a1 + 252) |= 4u;
        v29 = *v3;
        v30 = *(_QWORD *)&a2[v29];
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v30);
          *(_QWORD *)&a2[v29] = v30 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 24;
        goto LABEL_193;
      case 0xFu:
        *(_DWORD *)(a1 + 252) |= 0x2000000u;
        v31 = *v3;
        v32 = *(_QWORD *)&a2[v31];
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v32);
          *(_QWORD *)&a2[v31] = v32 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 208;
        goto LABEL_193;
      case 0x10u:
        *(_DWORD *)(a1 + 252) |= 0x20000u;
        v33 = *v3;
        v34 = *(_QWORD *)&a2[v33];
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v34);
          *(_QWORD *)&a2[v33] = v34 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 144;
        goto LABEL_193;
      case 0x11u:
        *(_DWORD *)(a1 + 252) |= 0x10000u;
        v35 = *v3;
        v36 = *(_QWORD *)&a2[v35];
        if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v36);
          *(_QWORD *)&a2[v35] = v36 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 136;
        goto LABEL_193;
      case 0x12u:
        *(_DWORD *)(a1 + 252) |= 0x1000u;
        v37 = *v3;
        v38 = *(_QWORD *)&a2[v37];
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v38);
          *(_QWORD *)&a2[v37] = v38 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 104;
        goto LABEL_193;
      case 0x13u:
      case 0x15u:
        goto LABEL_26;
      case 0x14u:
        *(_DWORD *)(a1 + 252) |= 1u;
        v39 = *v3;
        v40 = *(_QWORD *)&a2[v39];
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v40);
          *(_QWORD *)&a2[v39] = v40 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 8;
        goto LABEL_193;
      case 0x16u:
        *(_DWORD *)(a1 + 252) |= 0x10u;
        v41 = *v3;
        v42 = *(_QWORD *)&a2[v41];
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v42);
          *(_QWORD *)&a2[v41] = v42 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 40;
        goto LABEL_193;
      case 0x17u:
        *(_DWORD *)(a1 + 252) |= 0x20u;
        v43 = *v3;
        v44 = *(_QWORD *)&a2[v43];
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v44);
          *(_QWORD *)&a2[v43] = v44 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 48;
        goto LABEL_193;
      case 0x18u:
        *(_DWORD *)(a1 + 252) |= 0x400000u;
        v45 = *v3;
        v46 = *(_QWORD *)&a2[v45];
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v46);
          *(_QWORD *)&a2[v45] = v46 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 184;
        goto LABEL_193;
      case 0x19u:
        *(_DWORD *)(a1 + 252) |= 0x8000u;
        v47 = *v3;
        v48 = *(_QWORD *)&a2[v47];
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v48);
          *(_QWORD *)&a2[v47] = v48 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 128;
        goto LABEL_193;
      case 0x1Au:
        v49 = objc_alloc_init(NTPBCohortMembership);
        objc_msgSend((id)a1, "addCohortMemberships:", v49);

        if (PBReaderPlaceMark() && (NTPBCohortMembershipReadFrom((uint64_t)v49, (uint64_t)a2) & 1) != 0)
          goto LABEL_69;
        return 0;
      case 0x1Bu:
        *(_DWORD *)(a1 + 252) |= 0x80u;
        v50 = *v3;
        v51 = *(_QWORD *)&a2[v50];
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v51);
          *(_QWORD *)&a2[v50] = v51 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 64;
        goto LABEL_193;
      case 0x1Cu:
        *(_DWORD *)(a1 + 252) |= 0x2000u;
        v52 = *v3;
        v53 = *(_QWORD *)&a2[v52];
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v53);
          *(_QWORD *)&a2[v52] = v53 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 112;
        goto LABEL_193;
      case 0x1Du:
        *(_DWORD *)(a1 + 252) |= 0x1000000u;
        v54 = *v3;
        v55 = *(_QWORD *)&a2[v54];
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v55);
          *(_QWORD *)&a2[v54] = v55 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 200;
        goto LABEL_193;
      case 0x1Eu:
        *(_DWORD *)(a1 + 252) |= 0x4000u;
        v56 = *v3;
        v57 = *(_QWORD *)&a2[v56];
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v57);
          *(_QWORD *)&a2[v56] = v57 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 120;
        goto LABEL_193;
      case 0x1Fu:
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_DWORD *)(a1 + 252) |= 0x8000000u;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)&a2[v61];
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v62);
            *(_QWORD *)&a2[v61] = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v15 = v59++ >= 9;
              if (v15)
              {
                v60 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v60 = 0;
LABEL_133:
        v95 = v60 != 0;
        v96 = 249;
        goto LABEL_142;
      case 0x20u:
        v65 = objc_alloc_init(NTPBScoringCohort);

        *(_QWORD *)(a1 + 240) = v65;
        if (!PBReaderPlaceMark() || (NTPBScoringCohortReadFrom((uint64_t)v65, (uint64_t)a2) & 1) == 0)
          return 0;
        goto LABEL_69;
      case 0x21u:
        v66 = objc_alloc_init(NTPBCoefficients);

        *(_QWORD *)(a1 + 216) = v66;
        if (PBReaderPlaceMark() && NTPBCoefficientsReadFrom(v66, a2))
          goto LABEL_69;
        return 0;
      case 0x22u:
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40000u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)&a2[v70];
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v71);
            *(_QWORD *)&a2[v70] = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v15 = v68++ >= 9;
              if (v15)
              {
                v69 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v69 = 0;
LABEL_137:
        *(_QWORD *)(a1 + 152) = v69;
        goto LABEL_194;
      case 0x23u:
        *(_DWORD *)(a1 + 252) |= 0x200000u;
        v74 = *v3;
        v75 = *(_QWORD *)&a2[v74];
        if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v75);
          *(_QWORD *)&a2[v74] = v75 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 176;
        goto LABEL_193;
      case 0x24u:
        *(_DWORD *)(a1 + 252) |= 0x100000u;
        v76 = *v3;
        v77 = *(_QWORD *)&a2[v76];
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v77);
          *(_QWORD *)&a2[v76] = v77 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 168;
        goto LABEL_193;
      case 0x25u:
        *(_DWORD *)(a1 + 252) |= 0x200u;
        v78 = *v3;
        v79 = *(_QWORD *)&a2[v78];
        if (v79 <= 0xFFFFFFFFFFFFFFF7 && v79 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v79);
          *(_QWORD *)&a2[v78] = v79 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 80;
        goto LABEL_193;
      case 0x26u:
        *(_DWORD *)(a1 + 252) |= 0x40u;
        v80 = *v3;
        v81 = *(_QWORD *)&a2[v80];
        if (v81 <= 0xFFFFFFFFFFFFFFF7 && v81 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v81);
          *(_QWORD *)&a2[v80] = v81 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 56;
        goto LABEL_193;
      case 0x27u:
        *(_DWORD *)(a1 + 252) |= 0x400u;
        v82 = *v3;
        v83 = *(_QWORD *)&a2[v82];
        if (v83 <= 0xFFFFFFFFFFFFFFF7 && v83 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v83);
          *(_QWORD *)&a2[v82] = v83 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 88;
        goto LABEL_193;
      case 0x28u:
        *(_DWORD *)(a1 + 252) |= 8u;
        v84 = *v3;
        v85 = *(_QWORD *)&a2[v84];
        if (v85 <= 0xFFFFFFFFFFFFFFF7 && v85 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v85);
          *(_QWORD *)&a2[v84] = v85 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 32;
        goto LABEL_193;
      case 0x29u:
        *(_DWORD *)(a1 + 252) |= 0x80000u;
        v86 = *v3;
        v87 = *(_QWORD *)&a2[v86];
        if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *(_QWORD *)&a2[*v4])
        {
          v20 = *(_QWORD *)(*(_QWORD *)&a2[*v7] + v87);
          *(_QWORD *)&a2[v86] = v87 + 8;
        }
        else
        {
          a2[*v5] = 1;
          v20 = 0;
        }
        v97 = 160;
LABEL_193:
        *(_QWORD *)(a1 + v97) = v20;
        goto LABEL_194;
      case 0x2Au:
        v88 = 0;
        v89 = 0;
        v90 = 0;
        *(_DWORD *)(a1 + 252) |= 0x4000000u;
        while (2)
        {
          v91 = *v3;
          v92 = *(_QWORD *)&a2[v91];
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)&a2[*v4])
          {
            a2[*v5] = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v92);
            *(_QWORD *)&a2[v91] = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              v15 = v89++ >= 9;
              if (v15)
              {
                v90 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (a2[*v5])
          v90 = 0;
LABEL_141:
        v95 = v90 != 0;
        v96 = 248;
LABEL_142:
        *(_BYTE *)(a1 + v96) = v95;
        goto LABEL_194;
      default:
        if ((v10 >> 3) != 100)
        {
LABEL_26:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          goto LABEL_194;
        }
        v21 = objc_alloc_init(NTPBScoreProfileDebug);

        *(_QWORD *)(a1 + 232) = v21;
        if (PBReaderPlaceMark() && (NTPBScoreProfileDebugReadFrom((uint64_t)v21, (uint64_t)a2) & 1) != 0)
        {
LABEL_69:
          PBReaderRecallMark();
LABEL_194:
          if (*(_QWORD *)&a2[*v3] >= *(_QWORD *)&a2[*v4])
            return a2[*v5] == 0;
          continue;
        }
        return 0;
    }
  }
}

uint64_t NTPBReadingListShowReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEnvelopeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_53;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_55:
          v42 = 28;
          goto LABEL_68;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_59:
          v42 = 16;
          goto LABEL_68;
        case 3u:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 8;
          goto LABEL_51;
        case 4u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_63:
          v42 = 20;
          goto LABEL_68;
        case 5u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        case 6u:
          PBReaderReadData();
          v29 = objc_claimAutoreleasedReturnValue();
          v30 = 32;
LABEL_51:
          v41 = *(void **)(a1 + v30);
          *(_QWORD *)(a1 + v30) = v29;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
        *(_QWORD *)(a2 + v38) = v39 + 1;
        v19 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0)
          goto LABEL_65;
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_67:
      v42 = 24;
LABEL_68:
      *(_DWORD *)(a1 + v42) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioPlaylistItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  NTPBDate *v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 32;
        goto LABEL_23;
      case 2u:
        v21 = (void *)PBReaderReadString();

        v18 = v21;
        v19 = 16;
LABEL_23:
        *(_QWORD *)(a1 + v19) = v18;
        goto LABEL_38;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        *(_QWORD *)(a1 + 24) = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_38:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 4u:
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if (v28 < 0)
            {
              v23 += 7;
              v14 = v24++ >= 9;
              if (v14)
              {
                v25 = 0;
                goto LABEL_37;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_37:
        *(_QWORD *)(a1 + 8) = v25;
        goto LABEL_38;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_38;
    }
  }
}

BOOL NTPBPaidSubscriptionSheetIapFailReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 24;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  void *v83;
  uint64_t v84;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x80u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_123;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_125;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_123:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_125:
          v84 = 128;
          goto LABEL_170;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
          goto LABEL_121;
        case 3u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 72;
          goto LABEL_121;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 144;
          goto LABEL_121;
        case 5u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x200u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v19 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_129:
          v84 = 136;
          goto LABEL_170;
        case 6u:
          v31 = 0;
          v32 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x10u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v19 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_133:
          v84 = 108;
          goto LABEL_170;
        case 7u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 8u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_137:
          v84 = 104;
          goto LABEL_170;
        case 8u:
          v41 = 0;
          v42 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 2u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v19 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_141;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_141:
          v84 = 96;
          goto LABEL_170;
        case 9u:
          PBReaderReadString();
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          if (v46)
            objc_msgSend((id)a1, "addOtherVisibleSections:", v46);

          continue;
        case 0xAu:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_121;
        case 0xBu:
          v47 = 0;
          v48 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x800u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v19 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_145:
          v84 = 176;
          goto LABEL_170;
        case 0xCu:
          v52 = 0;
          v53 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 4u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v19 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_149:
          v84 = 100;
          goto LABEL_170;
        case 0xDu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 168;
          goto LABEL_121;
        case 0xEu:
          v57 = 0;
          v58 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x20u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v19 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_153:
          v84 = 120;
          goto LABEL_170;
        case 0xFu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 88;
          goto LABEL_121;
        case 0x10u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
          goto LABEL_121;
        case 0x11u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_121;
        case 0x12u:
          v62 = 0;
          v63 = 0;
          v64 = 0;
          *(_WORD *)(a1 + 180) |= 1u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v64 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                v14 = v63++ >= 9;
                if (v14)
                {
                  v64 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v64 = 0;
LABEL_157:
          *(_QWORD *)(a1 + 8) = v64;
          continue;
        case 0x13u:
          v68 = 0;
          v69 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x40u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v71 + 1;
              v19 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_161;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_161:
          v84 = 124;
          goto LABEL_170;
        case 0x14u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 112;
          goto LABEL_121;
        case 0x15u:
          v73 = 0;
          v74 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x100u;
          while (2)
          {
            v75 = *v3;
            v76 = *(_QWORD *)(a2 + v75);
            if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
              *(_QWORD *)(a2 + v75) = v76 + 1;
              v19 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                v14 = v74++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_165;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_165:
          v84 = 132;
          goto LABEL_170;
        case 0x16u:
          v78 = 0;
          v79 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 180) |= 0x400u;
          break;
        case 0x17u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 152;
          goto LABEL_121;
        case 0x18u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 80;
          goto LABEL_121;
        case 0x19u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 40;
          goto LABEL_121;
        case 0x1Au:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 56;
LABEL_121:
          v83 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v80 = *v3;
        v81 = *(_QWORD *)(a2 + v80);
        if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
          break;
        v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
        *(_QWORD *)(a2 + v80) = v81 + 1;
        v19 |= (unint64_t)(v82 & 0x7F) << v78;
        if ((v82 & 0x80) == 0)
          goto LABEL_167;
        v78 += 7;
        v14 = v79++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_169;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_167:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_169:
      v84 = 160;
LABEL_170:
      *(_DWORD *)(a1 + v84) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSubscriptionDetectionScreenViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBWrappingKeyRequestReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addWrappingKeyIds:", v17);

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBLRUCacheReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  NTPBLRUCacheEntry *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(NTPBLRUCacheEntry);
        objc_msgSend(a1, "addEntries:", v17);

        if (!PBReaderPlaceMark() || (NTPBLRUCacheEntryReadFrom((uint64_t)v17, a2) & 1) == 0)
          return 0;
        PBReaderRecallMark();
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleInfoListResponseReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  NTPBArticleInfoList *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(NTPBArticleInfoList);
        objc_msgSend(a1, "addArticleInfoList:", v23);
        if (!PBReaderPlaceMark() || !NTPBArticleInfoListReadFrom(v23, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        a1[16] = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBWidgetConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  void *v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x4000u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_182;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_184;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_182:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_184:
          v158 = 120;
          goto LABEL_261;
        case 2u:
          v26 = 0;
          v27 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x40u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v30;
              v20 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v15 = v27++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_188;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_188:
          v158 = 56;
          goto LABEL_261;
        case 3u:
          v32 = 0;
          v33 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x80000u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v36;
              v20 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v15 = v33++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_192;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_192:
          v158 = 160;
          goto LABEL_261;
        case 4u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          *(_DWORD *)(a1 + 212) |= 0x800000u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                v15 = v39++ >= 9;
                if (v15)
                {
                  LODWORD(v40) = 0;
                  goto LABEL_196;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v40) = 0;
LABEL_196:
          v159 = 192;
          goto LABEL_268;
        case 5u:
          *(_DWORD *)(a1 + 212) |= 0x800u;
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v47 = 0;
          }
          v160 = 96;
          goto LABEL_277;
        case 6u:
          *(_DWORD *)(a1 + 212) |= 0x400u;
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v47 = 0;
          }
          v160 = 88;
          goto LABEL_277;
        case 7u:
          v50 = 0;
          v51 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x100u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
              *(_QWORD *)(a2 + v52) = v54;
              v20 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                v15 = v51++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_200;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_200:
          v158 = 72;
          goto LABEL_261;
        case 8u:
          v56 = 0;
          v57 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x10u;
          while (2)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
              *(_QWORD *)(a2 + v58) = v60;
              v20 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                v15 = v57++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_204;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_204:
          v158 = 40;
          goto LABEL_261;
        case 9u:
          v62 = 0;
          v63 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x8000u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
              *(_QWORD *)(a2 + v64) = v66;
              v20 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                v15 = v63++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_208;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_208:
          v158 = 128;
          goto LABEL_261;
        case 0xAu:
          v68 = 0;
          v69 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x2000u;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v72;
              v20 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                v15 = v69++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_212;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_212:
          v158 = 112;
          goto LABEL_261;
        case 0xBu:
          v74 = 0;
          v75 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x80u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            v78 = v77 + 1;
            if (v77 == -1 || v78 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v78;
              v20 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                v15 = v75++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_216;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_216:
          v158 = 64;
          goto LABEL_261;
        case 0xCu:
          v80 = 0;
          v81 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x20u;
          while (2)
          {
            v82 = *v3;
            v83 = *(_QWORD *)(a2 + v82);
            v84 = v83 + 1;
            if (v83 == -1 || v84 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v83);
              *(_QWORD *)(a2 + v82) = v84;
              v20 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                v15 = v81++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_220;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_220:
          v158 = 48;
          goto LABEL_261;
        case 0xDu:
          v86 = 0;
          v87 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x100000u;
          while (2)
          {
            v88 = *v3;
            v89 = *(_QWORD *)(a2 + v88);
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
              *(_QWORD *)(a2 + v88) = v90;
              v20 |= (unint64_t)(v91 & 0x7F) << v86;
              if (v91 < 0)
              {
                v86 += 7;
                v15 = v87++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_224;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_224:
          v158 = 168;
          goto LABEL_261;
        case 0xEu:
          v92 = 0;
          v93 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x10000u;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
              *(_QWORD *)(a2 + v94) = v96;
              v20 |= (unint64_t)(v97 & 0x7F) << v92;
              if (v97 < 0)
              {
                v92 += 7;
                v15 = v93++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_228;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_228:
          v158 = 136;
          goto LABEL_261;
        case 0xFu:
          *(_DWORD *)(a1 + 212) |= 2u;
          v98 = *v3;
          v99 = *(_QWORD *)(a2 + v98);
          if (v99 <= 0xFFFFFFFFFFFFFFF7 && v99 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v99);
            *(_QWORD *)(a2 + v98) = v99 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v47 = 0;
          }
          v160 = 16;
          goto LABEL_277;
        case 0x10u:
          *(_DWORD *)(a1 + 212) |= 1u;
          v100 = *v3;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 <= 0xFFFFFFFFFFFFFFF7 && v101 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v47 = 0;
          }
          v160 = 8;
LABEL_277:
          *(_QWORD *)(a1 + v160) = v47;
          continue;
        case 0x11u:
          v102 = 0;
          v103 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x1000u;
          while (2)
          {
            v104 = *v3;
            v105 = *(_QWORD *)(a2 + v104);
            v106 = v105 + 1;
            if (v105 == -1 || v106 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v105);
              *(_QWORD *)(a2 + v104) = v106;
              v20 |= (unint64_t)(v107 & 0x7F) << v102;
              if (v107 < 0)
              {
                v102 += 7;
                v15 = v103++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_232;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_232:
          v158 = 104;
          goto LABEL_261;
        case 0x12u:
          PBReaderReadString();
          v108 = objc_claimAutoreleasedReturnValue();
          v109 = *(void **)(a1 + 200);
          *(_QWORD *)(a1 + 200) = v108;

          continue;
        case 0x13u:
          v110 = 0;
          v111 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 8u;
          while (2)
          {
            v112 = *v3;
            v113 = *(_QWORD *)(a2 + v112);
            v114 = v113 + 1;
            if (v113 == -1 || v114 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v113);
              *(_QWORD *)(a2 + v112) = v114;
              v20 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                v15 = v111++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_236;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_236:
          v158 = 32;
          goto LABEL_261;
        case 0x14u:
          v116 = 0;
          v117 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 4u;
          while (2)
          {
            v118 = *v3;
            v119 = *(_QWORD *)(a2 + v118);
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v121 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
              *(_QWORD *)(a2 + v118) = v120;
              v20 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                v15 = v117++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_240;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_240:
          v158 = 24;
          goto LABEL_261;
        case 0x15u:
          v122 = 0;
          v123 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x40000u;
          while (2)
          {
            v124 = *v3;
            v125 = *(_QWORD *)(a2 + v124);
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v127 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
              *(_QWORD *)(a2 + v124) = v126;
              v20 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                v15 = v123++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_244;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_244:
          v158 = 152;
          goto LABEL_261;
        case 0x16u:
          v128 = 0;
          v129 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x20000u;
          while (2)
          {
            v130 = *v3;
            v131 = *(_QWORD *)(a2 + v130);
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v131);
              *(_QWORD *)(a2 + v130) = v132;
              v20 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                v15 = v129++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_248;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_248:
          v158 = 144;
          goto LABEL_261;
        case 0x17u:
          v134 = 0;
          v135 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x400000u;
          while (2)
          {
            v136 = *v3;
            v137 = *(_QWORD *)(a2 + v136);
            v138 = v137 + 1;
            if (v137 == -1 || v138 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v139 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
              *(_QWORD *)(a2 + v136) = v138;
              v20 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                v15 = v135++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_252;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_252:
          v158 = 184;
          goto LABEL_261;
        case 0x18u:
          v140 = 0;
          v141 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x200000u;
          while (2)
          {
            v142 = *v3;
            v143 = *(_QWORD *)(a2 + v142);
            v144 = v143 + 1;
            if (v143 == -1 || v144 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v145 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v143);
              *(_QWORD *)(a2 + v142) = v144;
              v20 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                v15 = v141++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_256;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_256:
          v158 = 176;
          goto LABEL_261;
        case 0x19u:
          v146 = 0;
          v147 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 212) |= 0x200u;
          while (2)
          {
            v148 = *v3;
            v149 = *(_QWORD *)(a2 + v148);
            v150 = v149 + 1;
            if (v149 == -1 || v150 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v151 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v149);
              *(_QWORD *)(a2 + v148) = v150;
              v20 |= (unint64_t)(v151 & 0x7F) << v146;
              if (v151 < 0)
              {
                v146 += 7;
                v15 = v147++ >= 9;
                if (v15)
                {
                  v20 = 0;
                  goto LABEL_260;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_260:
          v158 = 80;
LABEL_261:
          *(_QWORD *)(a1 + v158) = v20;
          continue;
        case 0x1Au:
          v152 = 0;
          v153 = 0;
          v40 = 0;
          *(_DWORD *)(a1 + 212) |= 0x1000000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v154 = *v3;
        v155 = *(_QWORD *)(a2 + v154);
        v156 = v155 + 1;
        if (v155 == -1 || v156 > *(_QWORD *)(a2 + *v4))
          break;
        v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
        *(_QWORD *)(a2 + v154) = v156;
        v40 |= (unint64_t)(v157 & 0x7F) << v152;
        if ((v157 & 0x80) == 0)
          goto LABEL_265;
        v152 += 7;
        v15 = v153++ >= 9;
        if (v15)
        {
          LODWORD(v40) = 0;
          goto LABEL_267;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_265:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v40) = 0;
LABEL_267:
      v159 = 208;
LABEL_268:
      *(_DWORD *)(a1 + v159) = v40;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBSearchBeginReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              *(_BYTE *)(a1 + 36) |= 1u;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 8;
              goto LABEL_31;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_31;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 24;
LABEL_31:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_33;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_35:
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBABConfigBucketReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  NTPBConfig *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v25 = 0;
          v26 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
              break;
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
              goto LABEL_45;
            v25 += 7;
            v14 = v26++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_47;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_47:
          v31 = 8;
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
              break;
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_41;
            v18 += 7;
            v14 = v19++ >= 9;
            if (v14)
            {
              v20 = 0;
              goto LABEL_43;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_43:
          v31 = 16;
        }
        *(_QWORD *)(a1 + v31) = v20;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAudioEngagementCompletedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  NTPBIssueData *v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  void *v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_83;
      case 2u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 128;
        goto LABEL_83;
      case 3u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 144) |= 0x40u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                v23 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_94:
        v72 = v23 != 0;
        v73 = 140;
        goto LABEL_121;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 144) |= 8u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_98:
        v74 = 80;
        goto LABEL_111;
      case 5u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 72;
        goto LABEL_83;
      case 6u:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 88;
        goto LABEL_83;
      case 7u:
        v35 = 0;
        v36 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 144) |= 4u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_102:
        v74 = 64;
        goto LABEL_111;
      case 8u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 56;
        goto LABEL_83;
      case 9u:
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 144) |= 2u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_106:
        v75 = 16;
        goto LABEL_116;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 144) |= 0x20u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v52;
            v30 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_110:
        v74 = 136;
LABEL_111:
        *(_DWORD *)(a1 + v74) = v30;
        goto LABEL_124;
      case 0xBu:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 32;
        goto LABEL_83;
      case 0xCu:
        v54 = 0;
        v55 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 144) |= 1u;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v15 = v55++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_115:
        v75 = 8;
LABEL_116:
        *(_QWORD *)(a1 + v75) = v43;
        goto LABEL_124;
      case 0xDu:
        v60 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 96), v60);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v60, a2) & 1) == 0)
          goto LABEL_126;
        goto LABEL_77;
      case 0xEu:
        v60 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 104), v60);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v60, a2) & 1) == 0)
          goto LABEL_126;
        goto LABEL_77;
      case 0xFu:
        v60 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 40), v60);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v60, a2) & 1) != 0)
        {
LABEL_77:
          PBReaderRecallMark();

LABEL_124:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_126:

        return 0;
      case 0x10u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 112;
        goto LABEL_83;
      case 0x11u:
        *(_BYTE *)(a1 + 144) |= 0x10u;
        v61 = *v3;
        v62 = *(_QWORD *)(a2 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v63 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v62);
          *(_QWORD *)(a2 + v61) = v62 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v63 = 0;
        }
        *(_DWORD *)(a1 + 120) = v63;
        goto LABEL_124;
      case 0x12u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 48;
LABEL_83:
        v64 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_124;
      case 0x13u:
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_BYTE *)(a1 + 144) |= 0x80u;
        while (2)
        {
          v68 = *v3;
          v69 = *(_QWORD *)(a2 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v69);
            *(_QWORD *)(a2 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v15 = v66++ >= 9;
              if (v15)
              {
                v67 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v67 = 0;
LABEL_120:
        v72 = v67 != 0;
        v73 = 141;
LABEL_121:
        *(_BYTE *)(a1 + v73) = v72;
        goto LABEL_124;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_124;
    }
  }
}

uint64_t NTPBPersonalizedTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  NTPBTodaySectionConfigArticle *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_36;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_38;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_36:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_38:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
          objc_msgSend((id)a1, "addPersonalizedArticles:", v18);
        }
        else
        {
          if ((_DWORD)v17)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
          objc_msgSend((id)a1, "addMandatoryArticles:", v18);
        }

        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v18->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBMultiABConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  NTPBABConfig *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v18 = objc_alloc_init(NTPBABConfig);
        objc_msgSend((id)a1, "addAbConfigs:", v18);
        if (!PBReaderPlaceMark() || (NTPBABConfigReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
LABEL_42:

          return 0;
        }
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_37;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              v21 = 0;
              goto LABEL_39;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_39:
          *(_QWORD *)(a1 + 8) = v21;
          continue;
        }
        if ((_DWORD)v17 != 1)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
        }
        v18 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 24), v18);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_42;
      }
      PBReaderRecallMark();

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBHeadlineAnalyticsElementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_38;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  v22 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v22 = 0;
LABEL_42:
          *(_QWORD *)(a1 + 8) = v22;
          continue;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 44) |= 2u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_38;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_38:
          v32 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_44;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_46;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_46:
      *(_BYTE *)(a1 + 40) = v28 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBReadingHistoryItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *String;
  id v19;
  uint64_t v20;
  uint64_t result;
  NTPBDate *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v19 = String;
        v20 = 48;
        goto LABEL_49;
      case 2u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 96;
        goto LABEL_59;
      case 3u:
        *(_BYTE *)(a1 + 136) |= 0x20u;
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && (v26 = v25 + 4, v25 + 4 <= *(_QWORD *)(a2 + *v4)))
        {
          v27 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v26;
        }
        else
        {
          v27 = 0;
          *(_BYTE *)(a2 + *v5) = 1;
        }
        *(_DWORD *)(a1 + 80) = v27;
        goto LABEL_90;
      case 4u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 136) |= 4u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_72:
        v59 = 24;
        goto LABEL_85;
      case 5u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 64;
        goto LABEL_59;
      case 6u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 72;
        goto LABEL_59;
      case 7u:
        v35 = 0;
        v36 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 136) |= 8u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v30 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_76:
        v59 = 32;
        goto LABEL_85;
      case 8u:
        v41 = (void *)PBReaderReadString();

        v19 = v41;
        v20 = 128;
        goto LABEL_49;
      case 9u:
        v42 = (void *)PBReaderReadString();

        v19 = v42;
        v20 = 56;
        goto LABEL_49;
      case 0xAu:
        *(_BYTE *)(a1 + 136) |= 2u;
        v43 = *v3;
        v44 = *(_QWORD *)(a2 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v44);
          *(_QWORD *)(a2 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v45 = 0;
        }
        *(_QWORD *)(a1 + 16) = v45;
        goto LABEL_90;
      case 0xBu:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 88;
        goto LABEL_59;
      case 0xCu:
        v46 = (void *)PBReaderReadString();

        v19 = v46;
        v20 = 112;
LABEL_49:
        *(_QWORD *)(a1 + v20) = v19;
        goto LABEL_90;
      case 0xDu:
        v47 = 0;
        v48 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 136) |= 0x10u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v51;
            v30 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v15 = v48++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_80:
        v59 = 40;
        goto LABEL_85;
      case 0xEu:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 104;
        goto LABEL_59;
      case 0xFu:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 120;
LABEL_59:
        *(_QWORD *)(a1 + v23) = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_90:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 0x10u:
        v53 = 0;
        v54 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 136) |= 1u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v57;
            v30 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v15 = v54++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_84:
        v59 = 8;
LABEL_85:
        *(_QWORD *)(a1 + v59) = v30;
        goto LABEL_90;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_90;
    }
  }
}

uint64_t NTPBPersonalizationConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBBinningConfig *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBBinningConfig);
        objc_storeStrong((id *)(a1 + 16), v17);
        if (PBReaderPlaceMark() && (NTPBBinningConfigReadFrom((uint64_t)v17, a2) & 1) != 0)
          goto LABEL_38;
        goto LABEL_45;
      case 2u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                v21 = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_42:
        *(_QWORD *)(a1 + 8) = v21;
        goto LABEL_43;
      case 3u:
        v17 = objc_alloc_init(NTPBPersonalizationTreatment);
        objc_storeStrong((id *)(a1 + 24), v17);
        goto LABEL_36;
      case 4u:
        v17 = objc_alloc_init(NTPBPersonalizationBucket);
        objc_msgSend((id)a1, "addPersonalizationBuckets:", v17);
        if (!PBReaderPlaceMark() || !NTPBPersonalizationBucketReadFrom((uint64_t)v17, a2))
          goto LABEL_45;
        goto LABEL_38;
      case 5u:
        v17 = objc_alloc_init(NTPBPersonalizationTreatment);
        objc_msgSend((id)a1, "addPersonalizationTreatments:", v17);
LABEL_36:
        if (PBReaderPlaceMark() && (NTPBPersonalizationTreatmentReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_38:
          PBReaderRecallMark();

LABEL_43:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_45:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_43;
    }
  }
}

uint64_t NTPBAdExposureOpportunityReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  void *v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_WORD *)(a1 + 124) |= 0x200u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_114;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_116;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_114:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_116:
          v86 = v19 != 0;
          v87 = 120;
          goto LABEL_141;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_WORD *)(a1 + 124) |= 0x400u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v26 = 0;
LABEL_120:
          v86 = v26 != 0;
          v87 = 121;
          goto LABEL_141;
        case 3u:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 40;
          goto LABEL_91;
        case 4u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 8u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_124:
          v88 = 64;
          goto LABEL_162;
        case 5u:
          v38 = 0;
          v39 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x80u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v34 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_128:
          v88 = 112;
          goto LABEL_162;
        case 6u:
          v43 = 0;
          v44 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x100u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v34 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_132:
          v88 = 116;
          goto LABEL_162;
        case 7u:
          v48 = 0;
          v49 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x10u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v34 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_136:
          v88 = 68;
          goto LABEL_162;
        case 8u:
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_WORD *)(a1 + 124) |= 0x800u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  v55 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v55 = 0;
LABEL_140:
          v86 = v55 != 0;
          v87 = 122;
LABEL_141:
          *(_BYTE *)(a1 + v87) = v86;
          continue;
        case 9u:
          v59 = 0;
          v60 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x20u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v34 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_145;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_145:
          v88 = 80;
          goto LABEL_162;
        case 0xAu:
          v64 = 0;
          v65 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 0x40u;
          while (2)
          {
            v66 = *v3;
            v67 = *(_QWORD *)(a2 + v66);
            if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
              *(_QWORD *)(a2 + v66) = v67 + 1;
              v34 |= (unint64_t)(v68 & 0x7F) << v64;
              if (v68 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_149;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_149:
          v88 = 96;
          goto LABEL_162;
        case 0xBu:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 88;
          goto LABEL_91;
        case 0xCu:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 16;
          goto LABEL_91;
        case 0xDu:
          PBReaderReadData();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 104;
          goto LABEL_91;
        case 0xEu:
          PBReaderReadData();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 56;
          goto LABEL_91;
        case 0xFu:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 32;
          goto LABEL_91;
        case 0x10u:
          PBReaderReadString();
          v30 = objc_claimAutoreleasedReturnValue();
          v31 = 72;
LABEL_91:
          v69 = *(void **)(a1 + v31);
          *(_QWORD *)(a1 + v31) = v30;

          continue;
        case 0x11u:
          v70 = 0;
          v71 = 0;
          v72 = 0;
          *(_WORD *)(a1 + 124) |= 1u;
          while (2)
          {
            v73 = *v3;
            v74 = *(_QWORD *)(a2 + v73);
            if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
              *(_QWORD *)(a2 + v73) = v74 + 1;
              v72 |= (unint64_t)(v75 & 0x7F) << v70;
              if (v75 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  v72 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v72 = 0;
LABEL_153:
          *(_QWORD *)(a1 + 8) = v72;
          continue;
        case 0x12u:
          v76 = 0;
          v77 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 4u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v79 + 1;
              v34 |= (unint64_t)(v80 & 0x7F) << v76;
              if (v80 < 0)
              {
                v76 += 7;
                v14 = v77++ >= 9;
                if (v14)
                {
                  LODWORD(v34) = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v34) = 0;
LABEL_157:
          v88 = 48;
          goto LABEL_162;
        case 0x13u:
          v81 = 0;
          v82 = 0;
          v34 = 0;
          *(_WORD *)(a1 + 124) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v83 = *v3;
        v84 = *(_QWORD *)(a2 + v83);
        if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          break;
        v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
        *(_QWORD *)(a2 + v83) = v84 + 1;
        v34 |= (unint64_t)(v85 & 0x7F) << v81;
        if ((v85 & 0x80) == 0)
          goto LABEL_159;
        v81 += 7;
        v14 = v82++ >= 9;
        if (v14)
        {
          LODWORD(v34) = 0;
          goto LABEL_161;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_159:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v34) = 0;
LABEL_161:
      v88 = 24;
LABEL_162:
      *(_DWORD *)(a1 + v88) = v34;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBABConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  NTPBConfig *v29;
  uint64_t v30;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_42;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_42:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_44:
        v30 = 16;
        goto LABEL_49;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v19 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_48:
        v30 = 8;
LABEL_49:
        *(_QWORD *)(a1 + v30) = v19;
        goto LABEL_50;
      case 3u:
        v29 = objc_alloc_init(NTPBConfig);
        objc_storeStrong((id *)(a1 + 32), v29);
        if (!PBReaderPlaceMark() || (NTPBConfigReadFrom((uint64_t)v29, a2) & 1) == 0)
          goto LABEL_52;
        goto LABEL_40;
      case 4u:
        v29 = objc_alloc_init(NTPBABConfigBucket);
        objc_msgSend((id)a1, "addConfigBuckets:", v29);
        if (PBReaderPlaceMark() && (NTPBABConfigBucketReadFrom((uint64_t)v29, a2) & 1) != 0)
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_50:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_52:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t NTPBSearchResultSelectReadFrom(_WORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  void *v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  void *v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 44;
          goto LABEL_122;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          a1[102] |= 2u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_126:
          v80 = 34;
          goto LABEL_168;
        case 3u:
          v26 = 0;
          v27 = 0;
          v22 = 0;
          a1[102] |= 0x40u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_130:
          v80 = 68;
          goto LABEL_168;
        case 4u:
          v31 = 0;
          v32 = 0;
          v22 = 0;
          a1[102] |= 8u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_134:
          v80 = 48;
          goto LABEL_168;
        case 5u:
          v36 = 0;
          v37 = 0;
          v22 = 0;
          a1[102] |= 0x20u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v22 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_138:
          v80 = 62;
          goto LABEL_168;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 64;
          goto LABEL_122;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 56;
          goto LABEL_122;
        case 8u:
          v41 = 0;
          v42 = 0;
          v22 = 0;
          a1[102] |= 0x10u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v44 + 1;
              v22 |= (unint64_t)(v45 & 0x7F) << v41;
              if (v45 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_142;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_142:
          v80 = 60;
          goto LABEL_168;
        case 9u:
          v46 = 0;
          v47 = 0;
          v48 = 0;
          a1[102] |= 0x400u;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v14 = v47++ >= 9;
                if (v14)
                {
                  v48 = 0;
                  goto LABEL_146;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v48 = 0;
LABEL_146:
          v81 = v48 != 0;
          v82 = 201;
          goto LABEL_163;
        case 0xAu:
          v52 = 0;
          v53 = 0;
          v22 = 0;
          a1[102] |= 1u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v22 |= (unint64_t)(v56 & 0x7F) << v52;
              if (v56 < 0)
              {
                v52 += 7;
                v14 = v53++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_150;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_150:
          v80 = 32;
          goto LABEL_168;
        case 0xBu:
          v57 = 0;
          v58 = 0;
          v22 = 0;
          a1[102] |= 0x80u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v22 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_154:
          v80 = 96;
          goto LABEL_168;
        case 0xCu:
          v62 = 0;
          v63 = 0;
          v22 = 0;
          a1[102] |= 0x100u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v22 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                v14 = v63++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_158:
          v80 = 98;
          goto LABEL_168;
        case 0xDu:
          PBReaderReadString();
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (v67)
            objc_msgSend(a1, "addNonSelectedResultFeedId:", v67);
          goto LABEL_117;
        case 0xEu:
          v68 = 0;
          v69 = 0;
          v70 = 0;
          a1[102] |= 0x200u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  v70 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v70 = 0;
LABEL_162:
          v81 = v70 != 0;
          v82 = 200;
LABEL_163:
          *((_BYTE *)a1 + v82) = v81;
          continue;
        case 0xFu:
          PBReaderReadString();
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (v67)
            objc_msgSend(a1, "addSearchResults:", v67);
          goto LABEL_117;
        case 0x10u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 84;
          goto LABEL_122;
        case 0x11u:
          PBReaderReadString();
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (v67)
            objc_msgSend(a1, "addTopicResultFeedIds:", v67);
          goto LABEL_117;
        case 0x12u:
          PBReaderReadString();
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (v67)
            objc_msgSend(a1, "addChannelResultFeedIds:", v67);
          goto LABEL_117;
        case 0x13u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 72;
          goto LABEL_122;
        case 0x14u:
          v74 = 0;
          v75 = 0;
          v22 = 0;
          a1[102] |= 4u;
          break;
        case 0x15u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_122;
        case 0x16u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 12;
          goto LABEL_122;
        case 0x17u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_122;
        case 0x18u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 52;
          goto LABEL_122;
        case 0x19u:
          PBReaderReadString();
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          if (v67)
            objc_msgSend(a1, "addArticleResultArticleIds:", v67);
LABEL_117:

          continue;
        case 0x1Au:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 76;
          goto LABEL_122;
        case 0x1Bu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 80;
          goto LABEL_122;
        case 0x1Cu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 88;
          goto LABEL_122;
        case 0x1Du:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 20;
LABEL_122:
          v79 = *(void **)&a1[v18];
          *(_QWORD *)&a1[v18] = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v76 = *v3;
        v77 = *(_QWORD *)(a2 + v76);
        if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
          break;
        v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
        *(_QWORD *)(a2 + v76) = v77 + 1;
        v22 |= (unint64_t)(v78 & 0x7F) << v74;
        if ((v78 & 0x80) == 0)
          goto LABEL_165;
        v74 += 7;
        v14 = v75++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_167;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_165:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v22) = 0;
LABEL_167:
      v80 = 36;
LABEL_168:
      *(_DWORD *)&a1[v80] = v22;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  void *v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x40u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_156;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_158;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_156:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_158:
          v114 = 72;
          goto LABEL_224;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 64;
          goto LABEL_140;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_DWORD *)(a1 + 200) |= 0x10000u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  v28 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_162:
          v115 = v28 != 0;
          v116 = 197;
          goto LABEL_207;
        case 4u:
          v32 = 0;
          v33 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x100u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v19 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_166:
          v114 = 104;
          goto LABEL_224;
        case 5u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 112;
          goto LABEL_140;
        case 6u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 184;
          goto LABEL_140;
        case 7u:
          v37 = 0;
          v38 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x20u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v19 |= (unint64_t)(v41 & 0x7F) << v37;
              if (v41 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_170:
          v114 = 60;
          goto LABEL_224;
        case 8u:
          v42 = 0;
          v43 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x10u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v19 |= (unint64_t)(v46 & 0x7F) << v42;
              if (v46 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_174:
          v114 = 56;
          goto LABEL_224;
        case 9u:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 80;
          goto LABEL_140;
        case 0xAu:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_DWORD *)(a1 + 200) |= 0x2000u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  v49 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v49 = 0;
LABEL_178:
          v115 = v49 != 0;
          v116 = 194;
          goto LABEL_207;
        case 0xBu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 168;
          goto LABEL_140;
        case 0xCu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 144;
          goto LABEL_140;
        case 0xDu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 152;
          goto LABEL_140;
        case 0xEu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 176;
          goto LABEL_140;
        case 0xFu:
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_DWORD *)(a1 + 200) |= 0x1000u;
          while (2)
          {
            v56 = *v3;
            v57 = *(_QWORD *)(a2 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
              *(_QWORD *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  v55 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v55 = 0;
LABEL_182:
          v115 = v55 != 0;
          v116 = 193;
          goto LABEL_207;
        case 0x10u:
          v59 = 0;
          v60 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x80u;
          while (2)
          {
            v61 = *v3;
            v62 = *(_QWORD *)(a2 + v61);
            if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
              *(_QWORD *)(a2 + v61) = v62 + 1;
              v19 |= (unint64_t)(v63 & 0x7F) << v59;
              if (v63 < 0)
              {
                v59 += 7;
                v14 = v60++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_186:
          v114 = 88;
          goto LABEL_224;
        case 0x11u:
          v64 = 0;
          v65 = 0;
          v66 = 0;
          *(_DWORD *)(a1 + 200) |= 0x8000u;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)(a2 + v67);
            if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
              *(_QWORD *)(a2 + v67) = v68 + 1;
              v66 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  v66 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v66 = 0;
LABEL_190:
          v115 = v66 != 0;
          v116 = 196;
          goto LABEL_207;
        case 0x12u:
          v70 = 0;
          v71 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 4u;
          while (2)
          {
            v72 = *v3;
            v73 = *(_QWORD *)(a2 + v72);
            if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
              *(_QWORD *)(a2 + v72) = v73 + 1;
              v19 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                v14 = v71++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_194:
          v114 = 40;
          goto LABEL_224;
        case 0x13u:
          v75 = 0;
          v76 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 8u;
          while (2)
          {
            v77 = *v3;
            v78 = *(_QWORD *)(a2 + v77);
            if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
              *(_QWORD *)(a2 + v77) = v78 + 1;
              v19 |= (unint64_t)(v79 & 0x7F) << v75;
              if (v79 < 0)
              {
                v75 += 7;
                v14 = v76++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_198:
          v114 = 44;
          goto LABEL_224;
        case 0x14u:
          v80 = 0;
          v81 = 0;
          v82 = 0;
          *(_DWORD *)(a1 + 200) |= 0x4000u;
          while (2)
          {
            v83 = *v3;
            v84 = *(_QWORD *)(a2 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
              *(_QWORD *)(a2 + v83) = v84 + 1;
              v82 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                v14 = v81++ >= 9;
                if (v14)
                {
                  v82 = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v82 = 0;
LABEL_202:
          v115 = v82 != 0;
          v116 = 195;
          goto LABEL_207;
        case 0x15u:
          v86 = 0;
          v87 = 0;
          v88 = 0;
          *(_DWORD *)(a1 + 200) |= 0x800u;
          while (2)
          {
            v89 = *v3;
            v90 = *(_QWORD *)(a2 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
              *(_QWORD *)(a2 + v89) = v90 + 1;
              v88 |= (unint64_t)(v91 & 0x7F) << v86;
              if (v91 < 0)
              {
                v86 += 7;
                v14 = v87++ >= 9;
                if (v14)
                {
                  v88 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v88 = 0;
LABEL_206:
          v115 = v88 != 0;
          v116 = 192;
LABEL_207:
          *(_BYTE *)(a1 + v116) = v115;
          continue;
        case 0x16u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_140;
        case 0x17u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
          goto LABEL_140;
        case 0x18u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 48;
          goto LABEL_140;
        case 0x19u:
          v92 = 0;
          v93 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 2u;
          while (2)
          {
            v94 = *v3;
            v95 = *(_QWORD *)(a2 + v94);
            if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
              *(_QWORD *)(a2 + v94) = v95 + 1;
              v19 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                v14 = v93++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_211;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_211:
          v114 = 16;
          goto LABEL_224;
        case 0x1Au:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 120;
          goto LABEL_140;
        case 0x1Bu:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 128;
          goto LABEL_140;
        case 0x1Cu:
          v97 = 0;
          v98 = 0;
          v99 = 0;
          *(_DWORD *)(a1 + 200) |= 1u;
          while (2)
          {
            v100 = *v3;
            v101 = *(_QWORD *)(a2 + v100);
            if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
              *(_QWORD *)(a2 + v100) = v101 + 1;
              v99 |= (unint64_t)(v102 & 0x7F) << v97;
              if (v102 < 0)
              {
                v97 += 7;
                v14 = v98++ >= 9;
                if (v14)
                {
                  v99 = 0;
                  goto LABEL_215;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v99 = 0;
LABEL_215:
          *(_QWORD *)(a1 + 8) = v99;
          continue;
        case 0x1Du:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 96;
LABEL_140:
          v103 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        case 0x1Eu:
          v104 = 0;
          v105 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x200u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
              *(_QWORD *)(a2 + v106) = v107 + 1;
              v19 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_219;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_219:
          v114 = 136;
          goto LABEL_224;
        case 0x1Fu:
          v109 = 0;
          v110 = 0;
          v19 = 0;
          *(_DWORD *)(a1 + 200) |= 0x400u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v111 = *v3;
        v112 = *(_QWORD *)(a2 + v111);
        if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          break;
        v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
        *(_QWORD *)(a2 + v111) = v112 + 1;
        v19 |= (unint64_t)(v113 & 0x7F) << v109;
        if ((v113 & 0x80) == 0)
          goto LABEL_221;
        v109 += 7;
        v14 = v110++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_223;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_221:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_223:
      v114 = 160;
LABEL_224:
      *(_DWORD *)(a1 + v114) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBBackgroundSubscriptionValidationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              *(_BYTE *)(a1 + 40) |= 1u;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_31;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 8;
              goto LABEL_31;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 32;
LABEL_31:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_33;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_35:
          *(_DWORD *)(a1 + 24) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBFeedLoadReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 24;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_36;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_34:
            if (*(_BYTE *)(a2 + *v5))
              LODWORD(v20) = 0;
LABEL_36:
            *(_DWORD *)(a1 + 16) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 8;
      }
      v26 = *(void **)(a1 + v25);
      *(_QWORD *)(a1 + v25) = v24;

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTopStoriesConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  NTPBTopStoriesStyleConfig *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 52) |= 8u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_61;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_63;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_61:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_63:
        v49 = v19 != 0;
        v50 = 48;
        goto LABEL_68;
      case 2u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_BYTE *)(a1 + 52) |= 0x10u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v26 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_67:
        v49 = v26 != 0;
        v50 = 49;
LABEL_68:
        *(_BYTE *)(a1 + v50) = v49;
        goto LABEL_82;
      case 3u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v30;

        goto LABEL_82;
      case 4u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_BYTE *)(a1 + 52) |= 4u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                v34 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_72:
        v51 = 24;
        goto LABEL_81;
      case 5u:
        v38 = 0;
        v39 = 0;
        v34 = 0;
        *(_BYTE *)(a1 + 52) |= 2u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v34 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                v34 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_76:
        v51 = 16;
        goto LABEL_81;
      case 6u:
        v43 = objc_alloc_init(NTPBTopStoriesStyleConfig);
        objc_msgSend((id)a1, "addStyleConfigs:", v43);
        if (PBReaderPlaceMark() && NTPBTopStoriesStyleConfigReadFrom((uint64_t)v43, a2))
        {
          PBReaderRecallMark();

LABEL_82:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 7u:
        v44 = 0;
        v45 = 0;
        v34 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 1;
            v34 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                v34 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v34 = 0;
LABEL_80:
        v51 = 8;
LABEL_81:
        *(_QWORD *)(a1 + v51) = v34;
        goto LABEL_82;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_82;
    }
  }
}

uint64_t NTPBPaidSubscriptionResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  NTPBIssueData *v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x20u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_113;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_115;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_113:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_115:
        v76 = 124;
        goto LABEL_153;
      case 2u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 136;
        goto LABEL_104;
      case 3u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 128;
        goto LABEL_104;
      case 4u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 16;
        goto LABEL_104;
      case 5u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 24;
        goto LABEL_104;
      case 6u:
        v26 = 0;
        v27 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 4u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v19 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_119:
        v76 = 88;
        goto LABEL_153;
      case 7u:
        v31 = 0;
        v32 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 8u;
        while (2)
        {
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_123:
        v76 = 104;
        goto LABEL_153;
      case 8u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 188) |= 0x200u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              v14 = v37++ >= 9;
              if (v14)
              {
                v38 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v38 = 0;
LABEL_127:
        v77 = v38 != 0;
        v78 = 186;
        goto LABEL_136;
      case 9u:
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 188) |= 0x80u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v14 = v43++ >= 9;
              if (v14)
              {
                v44 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_131:
        v77 = v44 != 0;
        v78 = 184;
        goto LABEL_136;
      case 0xAu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 72;
        goto LABEL_104;
      case 0xBu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 32;
        goto LABEL_104;
      case 0xCu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 40;
        goto LABEL_104;
      case 0xDu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 48;
        goto LABEL_104;
      case 0xEu:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 152;
        goto LABEL_104;
      case 0xFu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 188) |= 0x100u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                v50 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
LABEL_135:
        v77 = v50 != 0;
        v78 = 185;
LABEL_136:
        *(_BYTE *)(a1 + v78) = v77;
        goto LABEL_154;
      case 0x10u:
        v54 = 0;
        v55 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 2u;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v57 + 1;
            v19 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              v14 = v55++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_140:
        v76 = 64;
        goto LABEL_153;
      case 0x11u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 112;
        goto LABEL_104;
      case 0x12u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 56;
        goto LABEL_104;
      case 0x13u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 96;
        goto LABEL_104;
      case 0x14u:
        v59 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 80), v59);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v59, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_101:

LABEL_154:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0x15u:
        v60 = 0;
        v61 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x40u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v19 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_144:
        v76 = 144;
        goto LABEL_153;
      case 0x16u:
        v65 = 0;
        v66 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 1u;
        while (2)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          if (v68 == -1 || v68 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v68);
            *(_QWORD *)(a2 + v67) = v68 + 1;
            v19 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              v14 = v66++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_148:
        v76 = 8;
        goto LABEL_153;
      case 0x17u:
        PBReaderReadString();
        v59 = (NTPBIssueData *)objc_claimAutoreleasedReturnValue();
        if (v59)
          objc_msgSend((id)a1, "addTopicIds:", v59);
        goto LABEL_101;
      case 0x18u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 168;
        goto LABEL_104;
      case 0x19u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 160;
LABEL_104:
        v70 = *(void **)(a1 + v25);
        *(_QWORD *)(a1 + v25) = v24;

        goto LABEL_154;
      case 0x1Au:
        v71 = 0;
        v72 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 188) |= 0x10u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 == -1 || v74 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 1;
            v19 |= (unint64_t)(v75 & 0x7F) << v71;
            if (v75 < 0)
            {
              v71 += 7;
              v14 = v72++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_152:
        v76 = 120;
LABEL_153:
        *(_DWORD *)(a1 + v76) = v19;
        goto LABEL_154;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_154;
    }
  }
}

BOOL NTPBPaidSubscriptionConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxTimesHeadlineInGroup;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPad;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 32) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___NTPBPaidSubscriptionConfig__maxGroupSizeIPhone;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_QWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBCoverArticlesConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleIDsTodaySectionSpecificConfigReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t result;
  NTPBTodaySectionConfigArticle *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = objc_alloc_init(NTPBTodaySectionConfigArticle);
        objc_msgSend(a1, "addArticles:", v18);

        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v18->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBPushNotifySubscriptionRequestReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  NTPBDeviceInfo *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 3;
        goto LABEL_29;
      case 2u:
        v19 = objc_alloc_init(NTPBDeviceInfo);
        objc_storeStrong(a1 + 1, v19);
        if (!PBReaderPlaceMark() || (NTPBDeviceInfoReadFrom(v19, a2) & 1) == 0)
          goto LABEL_37;
        goto LABEL_32;
      case 3u:
        v19 = objc_alloc_init(NTPBNotificationEntity);
        objc_msgSend(a1, "addNotificationEntity:", v19);
        if (!PBReaderPlaceMark() || (NTPBNotificationEntityReadFrom(v19, a2) & 1) == 0)
          goto LABEL_37;
        goto LABEL_32;
      case 4u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 5;
LABEL_29:
        v19 = (NTPBDeviceInfo *)a1[v18];
        a1[v18] = (id)v17;
        goto LABEL_33;
      case 5u:
        v19 = objc_alloc_init(NTPBTopicsFollowed);
        objc_msgSend(a1, "addTopicsFollowed:", v19);
        if (PBReaderPlaceMark() && NTPBTopicsFollowedReadFrom(v19, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_37:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_34;
    }
  }
}

uint64_t NTPBScoreProfileDebugReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  void *String;
  uint64_t v66;
  uint64_t v67;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 144) |= 0x8000u;
          v18 = *v3;
          v19 = *(_QWORD *)(a2 + v18);
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v19);
            *(_QWORD *)(a2 + v18) = v19 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 128;
          goto LABEL_121;
        case 2u:
          *(_WORD *)(a1 + 144) |= 4u;
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 24;
          goto LABEL_121;
        case 3u:
          *(_WORD *)(a1 + 144) |= 2u;
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 16;
          goto LABEL_121;
        case 4u:
          *(_WORD *)(a1 + 144) |= 0x10u;
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 40;
          goto LABEL_121;
        case 5u:
          *(_WORD *)(a1 + 144) |= 1u;
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 8;
          goto LABEL_121;
        case 6u:
          *(_WORD *)(a1 + 144) |= 8u;
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 32;
          goto LABEL_121;
        case 7u:
          *(_WORD *)(a1 + 144) |= 0x1000u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 104;
          goto LABEL_121;
        case 8u:
          *(_WORD *)(a1 + 144) |= 0x200u;
          v33 = *v3;
          v34 = *(_QWORD *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 80;
          goto LABEL_121;
        case 9u:
          *(_WORD *)(a1 + 144) |= 0x2000u;
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 112;
          goto LABEL_121;
        case 0xAu:
          *(_WORD *)(a1 + 144) |= 0x4000u;
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 120;
          goto LABEL_121;
        case 0xEu:
          *(_WORD *)(a1 + 144) |= 0x80u;
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 64;
          goto LABEL_121;
        case 0xFu:
          *(_WORD *)(a1 + 144) |= 0x100u;
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 72;
          goto LABEL_121;
        case 0x10u:
          v44 = 0;
          v45 = 0;
          v46 = 0;
          *(_WORD *)(a1 + 144) |= 0x800u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                v15 = v45++ >= 9;
                if (v15)
                {
                  v46 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v46 = 0;
LABEL_85:
          v66 = 96;
          goto LABEL_94;
        case 0x11u:
          v51 = 0;
          v52 = 0;
          v46 = 0;
          *(_WORD *)(a1 + 144) |= 0x20u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v54);
              *(_QWORD *)(a2 + v53) = v55;
              v46 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                v15 = v52++ >= 9;
                if (v15)
                {
                  v46 = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v46 = 0;
LABEL_89:
          v66 = 48;
          goto LABEL_94;
        case 0x12u:
          v57 = 0;
          v58 = 0;
          v46 = 0;
          *(_WORD *)(a1 + 144) |= 0x400u;
          break;
        case 0x13u:
          *(_WORD *)(a1 + 144) |= 0x40u;
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v20 = 0;
          }
          v67 = 56;
LABEL_121:
          *(_QWORD *)(a1 + v67) = v20;
          continue;
        case 0x14u:
          String = (void *)PBReaderReadString();

          *(_QWORD *)(a1 + 136) = String;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v59 = *v3;
        v60 = *(_QWORD *)(a2 + v59);
        v61 = v60 + 1;
        if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v4))
          break;
        v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
        *(_QWORD *)(a2 + v59) = v61;
        v46 |= (unint64_t)(v62 & 0x7F) << v57;
        if ((v62 & 0x80) == 0)
          goto LABEL_91;
        v57 += 7;
        v15 = v58++ >= 9;
        if (v15)
        {
          v46 = 0;
          goto LABEL_93;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_91:
      if (*(_BYTE *)(a2 + *v5))
        v46 = 0;
LABEL_93:
      v66 = 88;
LABEL_94:
      *(_QWORD *)(a1 + v66) = v46;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationChannelReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBTrendingLanguageConfigReadFrom(_QWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = (void *)a1[1];
        a1[1] = v17;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_25:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
      objc_msgSend(a1, "addTrendingTopics:", v18);
    goto LABEL_23;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodaySectionConfigItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  NTPBTodaySectionConfigWebEmbed *v24;
  NTPBTodaySectionConfigArticle *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        v24 = objc_alloc_init(NTPBTodaySectionConfigWebEmbed);

        *(_QWORD *)(a1 + 24) = v24;
        if (!PBReaderPlaceMark() || (NTPBTodaySectionConfigWebEmbedReadFrom((uint64_t)v24, a2) & 1) == 0)
          return 0;
      }
      else
      {
        if ((_DWORD)v17 != 1)
        {
          if ((_DWORD)v17)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          else
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_37;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_39;
              }
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
            if (*(_BYTE *)(a2 + *v5))
              LODWORD(v20) = 0;
LABEL_39:
            *(_DWORD *)(a1 + 16) = v20;
          }
          continue;
        }
        v25 = objc_alloc_init(NTPBTodaySectionConfigArticle);

        *(_QWORD *)(a1 + 8) = v25;
        if (!PBReaderPlaceMark()
          || (NTPBTodaySectionConfigArticleReadFrom((id *)&v25->super.super.isa, a2) & 1) == 0)
        {
          return 0;
        }
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagExpirationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBGroupViewExposureReadFrom(_WORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 44;
          goto LABEL_147;
        case 2u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend(a1, "addGroupedArticleIds:", v20);
          goto LABEL_150;
        case 3u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          a1[90] |= 0x10u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_154:
          v106 = 32;
          goto LABEL_211;
        case 4u:
          v27 = 0;
          v28 = 0;
          v23 = 0;
          a1[90] |= 4u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v23 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_158:
          v106 = 28;
          goto LABEL_211;
        case 5u:
          v32 = 0;
          v33 = 0;
          v23 = 0;
          a1[90] |= 0x200u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v23 |= (unint64_t)(v36 & 0x7F) << v32;
              if (v36 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_162:
          v106 = 56;
          goto LABEL_211;
        case 6u:
          v37 = 0;
          v38 = 0;
          v39 = 0;
          a1[90] |= 0x4000u;
          while (2)
          {
            v40 = *v3;
            v41 = *(_QWORD *)(a2 + v40);
            if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
              *(_QWORD *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                v14 = v38++ >= 9;
                if (v14)
                {
                  v39 = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v39 = 0;
LABEL_166:
          v107 = v39 != 0;
          v108 = 177;
          goto LABEL_218;
        case 7u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_147;
        case 8u:
          v43 = 0;
          v44 = 0;
          v23 = 0;
          a1[90] |= 0x800u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v23 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                v14 = v44++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_170:
          v106 = 84;
          goto LABEL_211;
        case 9u:
          v48 = 0;
          v49 = 0;
          v23 = 0;
          a1[90] |= 0x1000u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v23 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_174:
          v106 = 86;
          goto LABEL_211;
        case 0xAu:
          v53 = 0;
          v54 = 0;
          v23 = 0;
          a1[90] |= 0x100u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v23 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_178:
          v106 = 54;
          goto LABEL_211;
        case 0xBu:
          v58 = 0;
          v59 = 0;
          v23 = 0;
          a1[90] |= 0x20u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
              *(_QWORD *)(a2 + v60) = v61 + 1;
              v23 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                v14 = v59++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_182:
          v106 = 48;
          goto LABEL_211;
        case 0xCu:
          v63 = 0;
          v64 = 0;
          v23 = 0;
          a1[90] |= 2u;
          while (2)
          {
            v65 = *v3;
            v66 = *(_QWORD *)(a2 + v65);
            if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
              *(_QWORD *)(a2 + v65) = v66 + 1;
              v23 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                v14 = v64++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_186:
          v106 = 20;
          goto LABEL_211;
        case 0xDu:
          v68 = 0;
          v69 = 0;
          v70 = 0;
          a1[90] |= 0x8000u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 1;
              v70 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                v14 = v69++ >= 9;
                if (v14)
                {
                  v70 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v70 = 0;
LABEL_190:
          v107 = v70 != 0;
          v108 = 178;
          goto LABEL_218;
        case 0xEu:
          v74 = 0;
          v75 = 0;
          v23 = 0;
          a1[90] |= 1u;
          while (2)
          {
            v76 = *v3;
            v77 = *(_QWORD *)(a2 + v76);
            if (v77 == -1 || v77 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v78 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v77);
              *(_QWORD *)(a2 + v76) = v77 + 1;
              v23 |= (unint64_t)(v78 & 0x7F) << v74;
              if (v78 < 0)
              {
                v74 += 7;
                v14 = v75++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_194:
          v106 = 12;
          goto LABEL_211;
        case 0xFu:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 60;
          goto LABEL_147;
        case 0x10u:
          v79 = 0;
          v80 = 0;
          v23 = 0;
          a1[90] |= 8u;
          while (2)
          {
            v81 = *v3;
            v82 = *(_QWORD *)(a2 + v81);
            if (v82 == -1 || v82 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v82);
              *(_QWORD *)(a2 + v81) = v82 + 1;
              v23 |= (unint64_t)(v83 & 0x7F) << v79;
              if (v83 < 0)
              {
                v79 += 7;
                v14 = v80++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_198:
          v106 = 30;
          goto LABEL_211;
        case 0x11u:
          v84 = 0;
          v85 = 0;
          v23 = 0;
          a1[90] |= 0x40u;
          while (2)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
              *(_QWORD *)(a2 + v86) = v87 + 1;
              v23 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_202:
          v106 = 50;
          goto LABEL_211;
        case 0x12u:
          v89 = 0;
          v90 = 0;
          v23 = 0;
          a1[90] |= 0x80u;
          while (2)
          {
            v91 = *v3;
            v92 = *(_QWORD *)(a2 + v91);
            if (v92 == -1 || v92 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v93 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v92);
              *(_QWORD *)(a2 + v91) = v92 + 1;
              v23 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                v14 = v90++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_206:
          v106 = 52;
          goto LABEL_211;
        case 0x13u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 36;
          goto LABEL_147;
        case 0x14u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_147;
        case 0x15u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 4;
          goto LABEL_147;
        case 0x16u:
          v94 = 0;
          v95 = 0;
          v23 = 0;
          a1[90] |= 0x400u;
          while (2)
          {
            v96 = *v3;
            v97 = *(_QWORD *)(a2 + v96);
            if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
              *(_QWORD *)(a2 + v96) = v97 + 1;
              v23 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                v14 = v95++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_210:
          v106 = 76;
LABEL_211:
          *(_DWORD *)&a1[v106] = v23;
          continue;
        case 0x17u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend(a1, "addGroupedIssueIds:", v20);
          goto LABEL_150;
        case 0x18u:
          v99 = 0;
          v100 = 0;
          v101 = 0;
          a1[90] |= 0x2000u;
          break;
        case 0x19u:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend(a1, "addSectionIds:", v20);
          goto LABEL_150;
        case 0x1Au:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_147;
        case 0x1Bu:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_147:
          v105 = *(void **)&a1[v18];
          *(_QWORD *)&a1[v18] = v17;

          continue;
        case 0x1Cu:
          PBReaderReadString();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend(a1, "addLayoutIds:", v20);
LABEL_150:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v102 = *v3;
        v103 = *(_QWORD *)(a2 + v102);
        if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          break;
        v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
        *(_QWORD *)(a2 + v102) = v103 + 1;
        v101 |= (unint64_t)(v104 & 0x7F) << v99;
        if ((v104 & 0x80) == 0)
          goto LABEL_215;
        v99 += 7;
        v14 = v100++ >= 9;
        if (v14)
        {
          v101 = 0;
          goto LABEL_217;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_215:
      if (*(_BYTE *)(a2 + *v5))
        v101 = 0;
LABEL_217:
      v107 = v101 != 0;
      v108 = 176;
LABEL_218:
      *((_BYTE *)a1 + v108) = v107;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTagRecommendationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        *(_BYTE *)(a1 + 24) |= 1u;
        v20 = *v3;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v22 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v22 = 0;
        }
        *(_QWORD *)(a1 + 8) = v22;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v18;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPaidSubscriptionConversionPointExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void *v65;
  int *v66;
  int *v67;
  NTPBIssueData *v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___NTPBPersonalizationTreatment__decayFactor;
  v8 = &OBJC_IVAR___NTPBPersonalizationTreatment__decayFactor;
  v9 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    while (1)
    {
      v13 = *v3;
      v14 = *(_QWORD *)(a2 + v13);
      if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
      *(_QWORD *)(a2 + v13) = v14 + 1;
      v12 |= (unint64_t)(v15 & 0x7F) << v10;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v10 += 7;
      v16 = v11++ >= 9;
      if (v16)
      {
        v12 = 0;
        v17 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v17 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v12 = 0;
LABEL_14:
    if (v17 || (v12 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v12 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 8u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_99;
          v19 += 7;
          v16 = v20++ >= 9;
          if (v16)
          {
            LODWORD(v21) = 0;
            goto LABEL_101;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_99:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_101:
        v74 = v8[964];
        goto LABEL_135;
      case 2u:
        v26 = 0;
        v27 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 0x40u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v21 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              v16 = v27++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_105:
        v74 = 136;
        goto LABEL_135;
      case 3u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 120;
        goto LABEL_87;
      case 4u:
        v33 = 0;
        v34 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 2u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v21 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v16 = v34++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_109:
        v74 = 64;
        goto LABEL_135;
      case 5u:
        v38 = 0;
        v39 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 4u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v21 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v16 = v39++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_113:
        v74 = 68;
        goto LABEL_135;
      case 6u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 112;
        goto LABEL_87;
      case 7u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 8;
        goto LABEL_87;
      case 8u:
        PBReaderReadData();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 16;
        goto LABEL_87;
      case 9u:
        v43 = 0;
        v44 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 0x10u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v21 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v16 = v44++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_117:
        v74 = 88;
        goto LABEL_135;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + v7[963]) |= 0x100u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v16 = v49++ >= 9;
              if (v16)
              {
                v50 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
LABEL_121:
        v75 = v50 != 0;
        v76 = 141;
        goto LABEL_126;
      case 0xBu:
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + v7[963]) |= 0x80u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v16 = v55++ >= 9;
              if (v16)
              {
                v56 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v56 = 0;
LABEL_125:
        v75 = v56 != 0;
        v76 = 140;
LABEL_126:
        *(_BYTE *)(a1 + v76) = v75;
        goto LABEL_136;
      case 0xCu:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 48;
        goto LABEL_87;
      case 0xDu:
        PBReaderReadData();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 128;
        goto LABEL_87;
      case 0xEu:
        PBReaderReadData();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 24;
        goto LABEL_87;
      case 0xFu:
        v60 = 0;
        v61 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 1u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          if (v63 == -1 || v63 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v63);
            *(_QWORD *)(a2 + v62) = v63 + 1;
            v21 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              v16 = v61++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_130:
        v74 = 40;
        goto LABEL_135;
      case 0x10u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 96;
        goto LABEL_87;
      case 0x11u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 32;
        goto LABEL_87;
      case 0x12u:
        PBReaderReadString();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = 80;
LABEL_87:
        v65 = *(void **)(a1 + v32);
        *(_QWORD *)(a1 + v32) = v31;

        goto LABEL_136;
      case 0x13u:
        v66 = v7;
        v67 = v8;
        v68 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 56), v68);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v68, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v8 = v67;
          v7 = v66;
LABEL_136:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0x14u:
        v69 = 0;
        v70 = 0;
        v21 = 0;
        *(_WORD *)(a1 + v7[963]) |= 0x20u;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v72);
            *(_QWORD *)(a2 + v71) = v72 + 1;
            v21 |= (unint64_t)(v73 & 0x7F) << v69;
            if (v73 < 0)
            {
              v69 += 7;
              v16 = v70++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_134:
        v74 = 104;
LABEL_135:
        *(_DWORD *)(a1 + v74) = v21;
        goto LABEL_136;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_136;
    }
  }
}

uint64_t NTPBViewInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v23;

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 16) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLVersionedPersonalizationVectorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_27;
        case 3u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_27;
        case 5u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_27;
        case 6u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_27:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAnalyticsEnvelopeContentTypeConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 0u:
          String = (void *)PBReaderReadString();

          v18 = String;
          v19 = 40;
          goto LABEL_31;
        case 1u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_56:
          v45 = 16;
          goto LABEL_70;
        case 2u:
          v27 = (void *)PBReaderReadString();

          v18 = v27;
          v19 = 24;
          goto LABEL_31;
        case 3u:
          v28 = (void *)PBReaderReadString();

          v18 = v28;
          v19 = 32;
LABEL_31:
          *(_QWORD *)(a1 + v19) = v18;
          continue;
        case 4u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 56) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_60:
          v46 = 52;
          goto LABEL_65;
        case 5u:
          v35 = 0;
          v36 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 56) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
              *(_QWORD *)(a2 + v37) = v38 + 1;
              v31 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_64;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_64:
          v46 = 48;
LABEL_65:
          *(_DWORD *)(a1 + v46) = v31;
          continue;
        case 6u:
          v40 = 0;
          v41 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v23 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
          goto LABEL_67;
        v40 += 7;
        v14 = v41++ >= 9;
        if (v14)
        {
          v23 = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_67:
      if (*(_BYTE *)(a2 + *v5))
        v23 = 0;
LABEL_69:
      v45 = 8;
LABEL_70:
      *(_QWORD *)(a1 + v45) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEmailOptInInviteReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_53;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_55:
          v42 = 36;
          goto LABEL_68;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_59:
          v42 = 16;
          goto LABEL_68;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_63:
          v42 = 32;
          goto LABEL_68;
        case 4u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_44;
        case 5u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 8;
LABEL_44:
          v36 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        case 6u:
          v37 = 0;
          v38 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v39 = *v3;
        v40 = *(_QWORD *)(a2 + v39);
        if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          break;
        v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
        *(_QWORD *)(a2 + v39) = v40 + 1;
        v19 |= (unint64_t)(v41 & 0x7F) << v37;
        if ((v41 & 0x80) == 0)
          goto LABEL_65;
        v37 += 7;
        v14 = v38++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_67:
      v42 = 20;
LABEL_68:
      *(_DWORD *)(a1 + v42) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBCategoryReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  NTPBCategory *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
        goto LABEL_23;
      case 2u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
LABEL_23:
        v19 = *(NTPBCategory **)&a1[v18];
        *(_QWORD *)&a1[v18] = v17;
        goto LABEL_33;
      case 3u:
        PBReaderReadString();
        v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19)
          objc_msgSend(a1, "addRecommendedTopics:", v19);
        goto LABEL_33;
      case 4u:
        PBReaderReadString();
        v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19)
          objc_msgSend(a1, "addRecommendedChannels:", v19);
        goto LABEL_33;
      case 5u:
        v19 = objc_alloc_init(NTPBCategory);
        objc_msgSend(a1, "addCategoryHierarchy:", v19);
        if (PBReaderPlaceMark() && (NTPBCategoryReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 6u:
        PBReaderReadString();
        v19 = (NTPBCategory *)objc_claimAutoreleasedReturnValue();
        if (v19)
          objc_msgSend(a1, "addCuratedTagIds:", v19);
        goto LABEL_33;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_34;
    }
  }
}

uint64_t NTPBBlindedTokenReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v23;

      }
      else if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBWrappingKeyMapEntryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBChannelMembershipRecordReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBRecordBase *v17;
  uint64_t result;
  void *String;
  id v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  void *v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(NTPBRecordBase);

          *(_QWORD *)(a1 + 8) = v17;
          if (PBReaderPlaceMark() && (NTPBRecordBaseReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();
            continue;
          }
          return 0;
        case 2u:
          String = (void *)PBReaderReadString();

          v20 = String;
          v21 = 16;
          goto LABEL_34;
        case 3u:
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 44) |= 1u;
          break;
        case 4u:
          v28 = (void *)PBReaderReadString();

          v20 = v28;
          v21 = 24;
          goto LABEL_34;
        case 5u:
          v29 = (void *)PBReaderReadString();

          v20 = v29;
          v21 = 32;
LABEL_34:
          *(_QWORD *)(a1 + v21) = v20;
          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v25 = *v3;
        v26 = *(_QWORD *)(a2 + v25);
        if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          break;
        v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
        *(_QWORD *)(a2 + v25) = v26 + 1;
        v24 |= (unint64_t)(v27 & 0x7F) << v22;
        if ((v27 & 0x80) == 0)
          goto LABEL_36;
        v22 += 7;
        v14 = v23++ >= 9;
        if (v14)
        {
          v24 = 0;
          goto LABEL_38;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_36:
      if (*(_BYTE *)(a2 + *v5))
        v24 = 0;
LABEL_38:
      *(_BYTE *)(a1 + 40) = v24 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleListTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t result;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 8) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPaywallButtonTapReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int *v44;
  int *v45;
  NTPBIssueData *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___NTPBJSONRecord__base;
  v8 = &OBJC_IVAR___NTPBJSONRecord__base;
  v9 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    while (1)
    {
      v13 = *v3;
      v14 = *(_QWORD *)(a2 + v13);
      if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
      *(_QWORD *)(a2 + v13) = v14 + 1;
      v12 |= (unint64_t)(v15 & 0x7F) << v10;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v10 += 7;
      v16 = v11++ >= 9;
      if (v16)
      {
        v12 = 0;
        v17 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v17 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v12 = 0;
LABEL_14:
    if (v17 || (v12 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v12 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = v7[92];
        goto LABEL_47;
      case 2u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = v8[93];
        goto LABEL_47;
      case 3u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 8;
        goto LABEL_47;
      case 4u:
        PBReaderReadData();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 16;
        goto LABEL_47;
      case 5u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 84) |= 4u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v24 |= (unint64_t)(v27 & 0x7F) << v22;
            if (v27 < 0)
            {
              v22 += 7;
              v16 = v23++ >= 9;
              if (v16)
              {
                LODWORD(v24) = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_68:
        v52 = 44;
        goto LABEL_85;
      case 6u:
        v28 = 0;
        v29 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v24 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              v16 = v29++ >= 9;
              if (v16)
              {
                LODWORD(v24) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_72:
        v52 = 24;
        goto LABEL_85;
      case 7u:
        v33 = 0;
        v34 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 84) |= 2u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v24 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v16 = v34++ >= 9;
              if (v16)
              {
                LODWORD(v24) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_76:
        v52 = 40;
        goto LABEL_85;
      case 8u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 48;
LABEL_47:
        v38 = *(void **)(a1 + v20);
        *(_QWORD *)(a1 + v20) = v19;

        goto LABEL_86;
      case 9u:
        v39 = 0;
        v40 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 84) |= 0x10u;
        while (2)
        {
          v41 = *v3;
          v42 = *(_QWORD *)(a2 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v42);
            *(_QWORD *)(a2 + v41) = v42 + 1;
            v24 |= (unint64_t)(v43 & 0x7F) << v39;
            if (v43 < 0)
            {
              v39 += 7;
              v16 = v40++ >= 9;
              if (v16)
              {
                LODWORD(v24) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_80:
        v52 = 80;
        goto LABEL_85;
      case 0xAu:
        v44 = v8;
        v45 = v7;
        v46 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 32), v46);
        if (PBReaderPlaceMark() && (NTPBIssueDataReadFrom((uint64_t)v46, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v7 = v45;
          v8 = v44;
LABEL_86:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0xBu:
        v47 = 0;
        v48 = 0;
        v24 = 0;
        *(_BYTE *)(a1 + 84) |= 8u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v24 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v16 = v48++ >= 9;
              if (v16)
              {
                LODWORD(v24) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_84:
        v52 = 56;
LABEL_85:
        *(_DWORD *)(a1 + v52) = v24;
        goto LABEL_86;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_86;
    }
  }
}

uint64_t NTPBAppSessionEndReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  NTPBViewInfo *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x100u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_127;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_129;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_127:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_129:
        v89 = 96;
        goto LABEL_174;
      case 2u:
        v24 = objc_alloc_init(NTPBViewInfo);
        objc_msgSend((id)a1, "addLastVisibleViews:", v24);
        if (PBReaderPlaceMark() && (NTPBViewInfoReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_90:

LABEL_180:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 3u:
        v25 = 0;
        v26 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 4u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_133:
        v89 = 32;
        goto LABEL_174;
      case 4u:
        v30 = 0;
        v31 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x200u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_137:
        v89 = 112;
        goto LABEL_174;
      case 5u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 1;
            v37 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v14 = v36++ >= 9;
              if (v14)
              {
                v37 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_141:
        *(_QWORD *)(a1 + 8) = v37;
        goto LABEL_180;
      case 6u:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addPaidSubscriptionChannelIds:", v24);
        goto LABEL_90;
      case 7u:
        v41 = 0;
        v42 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x20u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v44 + 1;
            v19 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              v14 = v42++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_145:
        v89 = 76;
        goto LABEL_174;
      case 8u:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addNotificationChannelIds:", v24);
        goto LABEL_90;
      case 9u:
        v46 = 0;
        v47 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x10u;
        while (2)
        {
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v49 + 1;
            v19 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              v14 = v47++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_149:
        v89 = 72;
        goto LABEL_174;
      case 0xAu:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addSubscribedFeedIds:", v24);
        goto LABEL_90;
      case 0xBu:
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_WORD *)(a1 + 120) |= 0x400u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v53 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v14 = v52++ >= 9;
              if (v14)
              {
                v53 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v53 = 0;
LABEL_153:
        v90 = v53 != 0;
        v91 = 116;
        goto LABEL_179;
      case 0xCu:
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_WORD *)(a1 + 120) |= 0x800u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              v14 = v58++ >= 9;
              if (v14)
              {
                v59 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
LABEL_157:
        v90 = v59 != 0;
        v91 = 117;
        goto LABEL_179;
      case 0xDu:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addAutoSubscribedFeedIds:", v24);
        goto LABEL_90;
      case 0xEu:
        PBReaderReadString();
        v24 = (NTPBViewInfo *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addGroupableFeedIds:", v24);
        goto LABEL_90;
      case 0xFu:
        v63 = 0;
        v64 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x40u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_161:
        v89 = 88;
        goto LABEL_174;
      case 0x10u:
        v68 = 0;
        v69 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 0x80u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_165:
        v89 = 92;
        goto LABEL_174;
      case 0x11u:
        v73 = 0;
        v74 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        while (2)
        {
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          if (v76 == -1 || v76 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 1;
            v19 |= (unint64_t)(v77 & 0x7F) << v73;
            if (v77 < 0)
            {
              v73 += 7;
              v14 = v74++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_169:
        v89 = 16;
        goto LABEL_174;
      case 0x12u:
        v78 = 0;
        v79 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 120) |= 8u;
        while (2)
        {
          v80 = *v3;
          v81 = *(_QWORD *)(a2 + v80);
          if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v19 |= (unint64_t)(v82 & 0x7F) << v78;
            if (v82 < 0)
            {
              v78 += 7;
              v14 = v79++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_173:
        v89 = 48;
LABEL_174:
        *(_DWORD *)(a1 + v89) = v19;
        goto LABEL_180;
      case 0x13u:
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_WORD *)(a1 + 120) |= 0x1000u;
        while (2)
        {
          v86 = *v3;
          v87 = *(_QWORD *)(a2 + v86);
          if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 1;
            v85 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v14 = v84++ >= 9;
              if (v14)
              {
                v85 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v85 = 0;
LABEL_178:
        v90 = v85 != 0;
        v91 = 118;
LABEL_179:
        *(_BYTE *)(a1 + v91) = v90;
        goto LABEL_180;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_180;
    }
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSArticleHostViewExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t result;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  COMAPPLEFELDSPARPROTOCOLScoredTagID *v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  char v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  char v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  char v200;
  unsigned int v201;
  uint64_t v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  char v215;
  unsigned int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  char v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  char v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char v241;
  char v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  char v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  uint64_t v261;
  unint64_t v262;
  int v263;
  char v264;
  unsigned int v265;
  uint64_t v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  char v271;
  char v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char v277;
  char v278;
  unsigned int v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  char v283;
  char v284;
  unsigned int v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  char v289;
  char v290;
  unsigned int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  char v296;
  char v297;
  unsigned int v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  char v303;
  unsigned int v304;
  uint64_t v305;
  uint64_t v306;
  unint64_t v307;
  char v308;
  char v309;
  unsigned int v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  char v314;
  char v315;
  unsigned int v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  char v320;
  char v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  char v327;
  char v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  char v333;
  char v334;
  unsigned int v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  char v339;
  char v340;
  unsigned int v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  char v346;
  unsigned int v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  char v351;
  char v352;
  unsigned int v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  char v357;
  char v358;
  unsigned int v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  char v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  char v367;
  unsigned int v368;
  uint64_t v369;
  unsigned int v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  char v375;
  unsigned int v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  char v381;
  char v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  char v388;
  char v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t v392;
  unint64_t v393;
  char v394;
  char v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  char v407;
  unsigned int v408;
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  char v412;
  char v413;
  unsigned int v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  char v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  uint64_t v422;
  unint64_t v423;
  char v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  unint64_t v428;
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  unint64_t v434;
  uint64_t v435;
  unint64_t v436;
  uint64_t v437;
  unint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  char v448;
  char v449;
  unsigned int v450;
  uint64_t v451;
  unint64_t v452;
  char v453;
  char v454;
  unsigned int v455;
  uint64_t v456;
  unint64_t v457;
  char v458;
  char v459;
  unsigned int v460;
  uint64_t v461;
  unint64_t v462;
  char v463;
  char v464;
  unsigned int v465;
  uint64_t v466;
  unint64_t v467;
  char v468;
  char v469;
  unsigned int v470;
  uint64_t v471;
  unint64_t v472;
  char v473;
  char v474;
  unsigned int v475;
  uint64_t v476;
  unint64_t v477;
  char v478;
  char v479;
  unsigned int v480;
  uint64_t v481;
  unint64_t v482;
  char v483;
  char v484;
  unsigned int v485;
  uint64_t v486;
  uint64_t v487;
  unint64_t v488;
  char v489;
  uint64_t v490;
  unint64_t v491;
  char v492;
  unsigned int v493;
  uint64_t v494;
  unint64_t v495;
  char v496;
  char v497;
  unsigned int v498;
  uint64_t v499;
  unint64_t v500;
  char v501;
  char v502;
  unsigned int v503;
  uint64_t v504;
  unint64_t v505;
  char v506;
  void *v507;
  char v508;
  unsigned int v509;
  uint64_t v510;
  uint64_t v511;
  unint64_t v512;
  char v513;
  char v514;
  unsigned int v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  char v519;
  uint64_t v520;
  BOOL v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000uLL;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0)
            goto LABEL_658;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_660;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_658:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_660:
        v520 = 156;
        goto LABEL_950;
      case 2u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 160;
        goto LABEL_636;
      case 3u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 616;
        goto LABEL_636;
      case 4u:
        v26 = 0;
        v27 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000000000uLL;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v30;
            v19 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_664;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_664:
        v520 = 596;
        goto LABEL_950;
      case 5u:
        v32 = 0;
        v33 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000uLL;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          v36 = v35 + 1;
          if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v36;
            v19 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_668;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_668:
        v520 = 200;
        goto LABEL_950;
      case 6u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 168;
        goto LABEL_636;
      case 7u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 192;
        goto LABEL_636;
      case 8u:
        v38 = 0;
        v39 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000uLL;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v42;
            v19 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_672;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_672:
        v520 = 276;
        goto LABEL_950;
      case 9u:
        v44 = 0;
        v45 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000uLL;
        while (2)
        {
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
            *(_QWORD *)(a2 + v46) = v48;
            v19 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v14 = v45++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_676:
        v520 = 184;
        goto LABEL_950;
      case 0xAu:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 328;
        goto LABEL_636;
      case 0xBu:
        v50 = 0;
        v51 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000uLL;
        while (2)
        {
          v52 = *v3;
          v53 = *(_QWORD *)(a2 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v54;
            v19 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v14 = v51++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_680;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_680:
        v520 = 304;
        goto LABEL_950;
      case 0xCu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 312;
        goto LABEL_636;
      case 0xDu:
        v56 = 0;
        v57 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000000uLL;
        while (2)
        {
          v58 = *v3;
          v59 = *(_QWORD *)(a2 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v59);
            *(_QWORD *)(a2 + v58) = v60;
            v19 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v14 = v57++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_684;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_684:
        v520 = 300;
        goto LABEL_950;
      case 0xEu:
        v62 = 0;
        v63 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000000uLL;
        while (2)
        {
          v64 = *v3;
          v65 = *(_QWORD *)(a2 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
            *(_QWORD *)(a2 + v64) = v66;
            v19 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v14 = v63++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_688;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_688:
        v520 = 560;
        goto LABEL_950;
      case 0xFu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 552;
        goto LABEL_636;
      case 0x10u:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        v71 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v71;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                v70 = 0;
                goto LABEL_692;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v70 = 0;
LABEL_692:
        v521 = v70 != 0;
        v522 = 806;
        goto LABEL_959;
      case 0x13u:
        v77 = 0;
        v78 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000uLL;
        while (2)
        {
          v79 = *v3;
          v80 = *(_QWORD *)(a2 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v80);
            *(_QWORD *)(a2 + v79) = v81;
            v19 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v14 = v78++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_696;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_696:
        v520 = 128;
        goto LABEL_950;
      case 0x14u:
        v83 = 0;
        v84 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000000uLL;
        while (2)
        {
          v85 = *v3;
          v86 = *(_QWORD *)(a2 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v87;
            v19 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v14 = v84++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_700;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_700:
        v520 = 468;
        goto LABEL_950;
      case 0x15u:
        v89 = 0;
        v90 = 0;
        v91 = 0;
        *(_WORD *)(a1 + 820) |= 1u;
        while (2)
        {
          v92 = *v3;
          v93 = *(_QWORD *)(a2 + v92);
          v94 = v93 + 1;
          if (v93 == -1 || v94 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
            *(_QWORD *)(a2 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              v14 = v90++ >= 9;
              if (v14)
              {
                v91 = 0;
                goto LABEL_704;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v91 = 0;
LABEL_704:
        v521 = v91 != 0;
        v522 = 787;
        goto LABEL_959;
      case 0x16u:
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_WORD *)(a1 + 820) |= 0x1000u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              v14 = v97++ >= 9;
              if (v14)
              {
                v98 = 0;
                goto LABEL_708;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v98 = 0;
LABEL_708:
        v521 = v98 != 0;
        v522 = 799;
        goto LABEL_959;
      case 0x17u:
        v103 = 0;
        v104 = 0;
        v105 = 0;
        *(_WORD *)(a1 + 820) |= 4u;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              v14 = v104++ >= 9;
              if (v14)
              {
                v105 = 0;
                goto LABEL_712;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v105 = 0;
LABEL_712:
        v521 = v105 != 0;
        v522 = 789;
        goto LABEL_959;
      case 0x18u:
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_WORD *)(a1 + 820) |= 0x100u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                v112 = 0;
                goto LABEL_716;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v112 = 0;
LABEL_716:
        v521 = v112 != 0;
        v522 = 795;
        goto LABEL_959;
      case 0x19u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 656;
        goto LABEL_636;
      case 0x1Au:
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000000000uLL;
        while (2)
        {
          v120 = *v3;
          v121 = *(_QWORD *)(a2 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
            *(_QWORD *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              v14 = v118++ >= 9;
              if (v14)
              {
                v119 = 0;
                goto LABEL_720;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v119 = 0;
LABEL_720:
        v521 = v119 != 0;
        v522 = 784;
        goto LABEL_959;
      case 0x1Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 664;
        goto LABEL_636;
      case 0x1Cu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 744;
        goto LABEL_636;
      case 0x1Du:
        v124 = 0;
        v125 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000uLL;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v128;
            v19 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_724;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_724:
        v520 = 240;
        goto LABEL_950;
      case 0x1Eu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 456;
        goto LABEL_636;
      case 0x1Fu:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addNamedEntities:", v130);
        goto LABEL_656;
      case 0x20u:
        v131 = 0;
        v132 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000uLL;
        while (2)
        {
          v133 = *v3;
          v134 = *(_QWORD *)(a2 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v134);
            *(_QWORD *)(a2 + v133) = v135;
            v19 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              v14 = v132++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_728;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_728:
        v520 = 180;
        goto LABEL_950;
      case 0x21u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 680;
        goto LABEL_636;
      case 0x22u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 688;
        goto LABEL_636;
      case 0x23u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 704;
        goto LABEL_636;
      case 0x24u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 648;
        goto LABEL_636;
      case 0x25u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 624;
        goto LABEL_636;
      case 0x26u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 632;
        goto LABEL_636;
      case 0x27u:
        v137 = 0;
        v138 = 0;
        v139 = 0;
        *(_WORD *)(a1 + 820) |= 0x80u;
        while (2)
        {
          v140 = *v3;
          v141 = *(_QWORD *)(a2 + v140);
          v142 = v141 + 1;
          if (v141 == -1 || v142 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v141);
            *(_QWORD *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              v14 = v138++ >= 9;
              if (v14)
              {
                v139 = 0;
                goto LABEL_732;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v139 = 0;
LABEL_732:
        v521 = v139 != 0;
        v522 = 794;
        goto LABEL_959;
      case 0x28u:
        v144 = 0;
        v145 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000000uLL;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)(a2 + v146);
          v148 = v147 + 1;
          if (v147 == -1 || v148 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
            *(_QWORD *)(a2 + v146) = v148;
            v19 |= (unint64_t)(v149 & 0x7F) << v144;
            if (v149 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_736;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_736:
        v520 = 564;
        goto LABEL_950;
      case 0x29u:
        v150 = 0;
        v151 = 0;
        v152 = 0;
        v153 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x100000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v153;
        while (2)
        {
          v154 = *v3;
          v155 = *(_QWORD *)(a2 + v154);
          v156 = v155 + 1;
          if (v155 == -1 || v156 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v157 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v155);
            *(_QWORD *)(a2 + v154) = v156;
            v152 |= (unint64_t)(v157 & 0x7F) << v150;
            if (v157 < 0)
            {
              v150 += 7;
              v14 = v151++ >= 9;
              if (v14)
              {
                v152 = 0;
                goto LABEL_740;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v152 = 0;
LABEL_740:
        v521 = v152 != 0;
        v522 = 807;
        goto LABEL_959;
      case 0x2Au:
        v158 = 0;
        v159 = 0;
        v160 = 0;
        v161 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v161;
        while (2)
        {
          v162 = *v3;
          v163 = *(_QWORD *)(a2 + v162);
          v164 = v163 + 1;
          if (v163 == -1 || v164 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v165 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
            *(_QWORD *)(a2 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              v14 = v159++ >= 9;
              if (v14)
              {
                v160 = 0;
                goto LABEL_744;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v160 = 0;
LABEL_744:
        v521 = v160 != 0;
        v522 = 805;
        goto LABEL_959;
      case 0x2Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 672;
        goto LABEL_636;
      case 0x2Cu:
        v166 = 0;
        v167 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400uLL;
        while (2)
        {
          v169 = *v3;
          v170 = *(_QWORD *)(a2 + v169);
          v171 = v170 + 1;
          if (v170 == -1 || v171 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v172 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v170);
            *(_QWORD *)(a2 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              v14 = v167++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_748;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_748:
        v523 = 88;
        goto LABEL_893;
      case 0x2Du:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 736;
        goto LABEL_636;
      case 0x2Eu:
        v173 = 0;
        v174 = 0;
        v175 = 0;
        *(_WORD *)(a1 + 820) |= 0x400u;
        while (2)
        {
          v176 = *v3;
          v177 = *(_QWORD *)(a2 + v176);
          v178 = v177 + 1;
          if (v177 == -1 || v178 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v179 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v177);
            *(_QWORD *)(a2 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              v14 = v174++ >= 9;
              if (v14)
              {
                v175 = 0;
                goto LABEL_752;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v175 = 0;
LABEL_752:
        v521 = v175 != 0;
        v522 = 797;
        goto LABEL_959;
      case 0x2Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 352;
        goto LABEL_636;
      case 0x30u:
        v180 = 0;
        v181 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000uLL;
        while (2)
        {
          v182 = *v3;
          v183 = *(_QWORD *)(a2 + v182);
          v184 = v183 + 1;
          if (v183 == -1 || v184 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v185 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v183);
            *(_QWORD *)(a2 + v182) = v184;
            v19 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              v14 = v181++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_756;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_756:
        v520 = 372;
        goto LABEL_950;
      case 0x31u:
        v186 = 0;
        v187 = 0;
        v188 = 0;
        v189 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v189;
        while (2)
        {
          v190 = *v3;
          v191 = *(_QWORD *)(a2 + v190);
          v192 = v191 + 1;
          if (v191 == -1 || v192 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v193 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
            *(_QWORD *)(a2 + v190) = v192;
            v188 |= (unint64_t)(v193 & 0x7F) << v186;
            if (v193 < 0)
            {
              v186 += 7;
              v14 = v187++ >= 9;
              if (v14)
              {
                v188 = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v188 = 0;
LABEL_760:
        v521 = v188 != 0;
        v522 = 803;
        goto LABEL_959;
      case 0x32u:
        v194 = 0;
        v195 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000uLL;
        while (2)
        {
          v196 = *v3;
          v197 = *(_QWORD *)(a2 + v196);
          v198 = v197 + 1;
          if (v197 == -1 || v198 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v199 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v197);
            *(_QWORD *)(a2 + v196) = v198;
            v19 |= (unint64_t)(v199 & 0x7F) << v194;
            if (v199 < 0)
            {
              v194 += 7;
              v14 = v195++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_764:
        v520 = 152;
        goto LABEL_950;
      case 0x33u:
        v200 = 0;
        v201 = 0;
        v202 = 0;
        v203 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x200000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v203;
        while (2)
        {
          v204 = *v3;
          v205 = *(_QWORD *)(a2 + v204);
          v206 = v205 + 1;
          if (v205 == -1 || v206 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v205);
            *(_QWORD *)(a2 + v204) = v206;
            v202 |= (unint64_t)(v207 & 0x7F) << v200;
            if (v207 < 0)
            {
              v200 += 7;
              v14 = v201++ >= 9;
              if (v14)
              {
                v202 = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v202 = 0;
LABEL_768:
        v521 = v202 != 0;
        v522 = 808;
        goto LABEL_959;
      case 0x34u:
        v208 = 0;
        v209 = 0;
        v210 = 0;
        *(_WORD *)(a1 + 820) |= 0x8000u;
        while (2)
        {
          v211 = *v3;
          v212 = *(_QWORD *)(a2 + v211);
          v213 = v212 + 1;
          if (v212 == -1 || v213 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v214 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v212);
            *(_QWORD *)(a2 + v211) = v213;
            v210 |= (unint64_t)(v214 & 0x7F) << v208;
            if (v214 < 0)
            {
              v208 += 7;
              v14 = v209++ >= 9;
              if (v14)
              {
                v210 = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v210 = 0;
LABEL_772:
        v521 = v210 != 0;
        v522 = 802;
        goto LABEL_959;
      case 0x35u:
        v215 = 0;
        v216 = 0;
        v217 = 0;
        *(_WORD *)(a1 + 820) |= 0x200u;
        while (2)
        {
          v218 = *v3;
          v219 = *(_QWORD *)(a2 + v218);
          v220 = v219 + 1;
          if (v219 == -1 || v220 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v221 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v219);
            *(_QWORD *)(a2 + v218) = v220;
            v217 |= (unint64_t)(v221 & 0x7F) << v215;
            if (v221 < 0)
            {
              v215 += 7;
              v14 = v216++ >= 9;
              if (v14)
              {
                v217 = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v217 = 0;
LABEL_776:
        v521 = v217 != 0;
        v522 = 796;
        goto LABEL_959;
      case 0x36u:
        v222 = 0;
        v223 = 0;
        v224 = 0;
        *(_WORD *)(a1 + 820) |= 0x2000u;
        while (2)
        {
          v225 = *v3;
          v226 = *(_QWORD *)(a2 + v225);
          v227 = v226 + 1;
          if (v226 == -1 || v227 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v228 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
            *(_QWORD *)(a2 + v225) = v227;
            v224 |= (unint64_t)(v228 & 0x7F) << v222;
            if (v228 < 0)
            {
              v222 += 7;
              v14 = v223++ >= 9;
              if (v14)
              {
                v224 = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v224 = 0;
LABEL_780:
        v521 = v224 != 0;
        v522 = 800;
        goto LABEL_959;
      case 0x37u:
        v229 = 0;
        v230 = 0;
        v231 = 0;
        *(_WORD *)(a1 + 820) |= 0x40u;
        while (2)
        {
          v232 = *v3;
          v233 = *(_QWORD *)(a2 + v232);
          v234 = v233 + 1;
          if (v233 == -1 || v234 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v235 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v233);
            *(_QWORD *)(a2 + v232) = v234;
            v231 |= (unint64_t)(v235 & 0x7F) << v229;
            if (v235 < 0)
            {
              v229 += 7;
              v14 = v230++ >= 9;
              if (v14)
              {
                v231 = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v231 = 0;
LABEL_784:
        v521 = v231 != 0;
        v522 = 793;
        goto LABEL_959;
      case 0x38u:
        v236 = 0;
        v237 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000uLL;
        while (2)
        {
          v238 = *v3;
          v239 = *(_QWORD *)(a2 + v238);
          v240 = v239 + 1;
          if (v239 == -1 || v240 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v241 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v239);
            *(_QWORD *)(a2 + v238) = v240;
            v19 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              v14 = v237++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_788:
        v520 = 244;
        goto LABEL_950;
      case 0x39u:
        v242 = 0;
        v243 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000uLL;
        while (2)
        {
          v244 = *v3;
          v245 = *(_QWORD *)(a2 + v244);
          v246 = v245 + 1;
          if (v245 == -1 || v246 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v247 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v245);
            *(_QWORD *)(a2 + v244) = v246;
            v19 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              v14 = v243++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_792:
        v520 = 248;
        goto LABEL_950;
      case 0x3Au:
        v248 = 0;
        v249 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000000uLL;
        while (2)
        {
          v250 = *v3;
          v251 = *(_QWORD *)(a2 + v250);
          v252 = v251 + 1;
          if (v251 == -1 || v252 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v253 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v251);
            *(_QWORD *)(a2 + v250) = v252;
            v19 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_796:
        v520 = 544;
        goto LABEL_950;
      case 0x3Bu:
        v254 = 0;
        v255 = 0;
        v256 = 0;
        *(_WORD *)(a1 + 820) |= 0x4000u;
        while (2)
        {
          v257 = *v3;
          v258 = *(_QWORD *)(a2 + v257);
          v259 = v258 + 1;
          if (v258 == -1 || v259 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v260 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v258);
            *(_QWORD *)(a2 + v257) = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              v14 = v255++ >= 9;
              if (v14)
              {
                v256 = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v256 = 0;
LABEL_800:
        v521 = v256 != 0;
        v522 = 801;
        goto LABEL_959;
      case 0x3Cu:
        *(_QWORD *)(a1 + 812) |= 0x40000000000uLL;
        v261 = *v3;
        v262 = *(_QWORD *)(a2 + v261);
        if (v262 <= 0xFFFFFFFFFFFFFFFBLL && v262 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v263 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v262);
          *(_QWORD *)(a2 + v261) = v262 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v263 = 0;
        }
        *(_DWORD *)(a1 + 472) = v263;
        goto LABEL_985;
      case 0x3Du:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 216;
        goto LABEL_636;
      case 0x3Eu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 224;
        goto LABEL_636;
      case 0x3Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 256;
        goto LABEL_636;
      case 0x40u:
        v264 = 0;
        v265 = 0;
        v266 = 0;
        v267 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x400000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v267;
        while (2)
        {
          v268 = *v3;
          v269 = *(_QWORD *)(a2 + v268);
          v270 = v269 + 1;
          if (v269 == -1 || v270 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v271 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v269);
            *(_QWORD *)(a2 + v268) = v270;
            v266 |= (unint64_t)(v271 & 0x7F) << v264;
            if (v271 < 0)
            {
              v264 += 7;
              v14 = v265++ >= 9;
              if (v14)
              {
                v266 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v266 = 0;
LABEL_804:
        v521 = v266 != 0;
        v522 = 809;
        goto LABEL_959;
      case 0x41u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 536;
        goto LABEL_636;
      case 0x42u:
        v272 = 0;
        v273 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000000uLL;
        while (2)
        {
          v274 = *v3;
          v275 = *(_QWORD *)(a2 + v274);
          v276 = v275 + 1;
          if (v275 == -1 || v276 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v277 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v275);
            *(_QWORD *)(a2 + v274) = v276;
            v19 |= (unint64_t)(v277 & 0x7F) << v272;
            if (v277 < 0)
            {
              v272 += 7;
              v14 = v273++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_808:
        v520 = 520;
        goto LABEL_950;
      case 0x43u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 528;
        goto LABEL_636;
      case 0x44u:
        v278 = 0;
        v279 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000uLL;
        while (2)
        {
          v280 = *v3;
          v281 = *(_QWORD *)(a2 + v280);
          v282 = v281 + 1;
          if (v281 == -1 || v282 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v283 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v281);
            *(_QWORD *)(a2 + v280) = v282;
            v19 |= (unint64_t)(v283 & 0x7F) << v278;
            if (v283 < 0)
            {
              v278 += 7;
              v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_812:
        v520 = 344;
        goto LABEL_950;
      case 0x45u:
        v284 = 0;
        v285 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000uLL;
        while (2)
        {
          v286 = *v3;
          v287 = *(_QWORD *)(a2 + v286);
          v288 = v287 + 1;
          if (v287 == -1 || v288 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v289 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v287);
            *(_QWORD *)(a2 + v286) = v288;
            v19 |= (unint64_t)(v289 & 0x7F) << v284;
            if (v289 < 0)
            {
              v284 += 7;
              v14 = v285++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_816:
        v520 = 348;
        goto LABEL_950;
      case 0x46u:
        v290 = 0;
        v291 = 0;
        v292 = 0;
        *(_QWORD *)(a1 + 812) |= 0x4000000000000000uLL;
        while (2)
        {
          v293 = *v3;
          v294 = *(_QWORD *)(a2 + v293);
          v295 = v294 + 1;
          if (v294 == -1 || v295 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v296 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v294);
            *(_QWORD *)(a2 + v293) = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              v14 = v291++ >= 9;
              if (v14)
              {
                v292 = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v292 = 0;
LABEL_820:
        v521 = v292 != 0;
        v522 = 785;
        goto LABEL_959;
      case 0x47u:
        v297 = 0;
        v298 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x10000000000uLL;
        while (2)
        {
          v299 = *v3;
          v300 = *(_QWORD *)(a2 + v299);
          v301 = v300 + 1;
          if (v300 == -1 || v301 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v302 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v300);
            *(_QWORD *)(a2 + v299) = v301;
            v19 |= (unint64_t)(v302 & 0x7F) << v297;
            if (v302 < 0)
            {
              v297 += 7;
              v14 = v298++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_824:
        v520 = 464;
        goto LABEL_950;
      case 0x48u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 568;
        goto LABEL_636;
      case 0x49u:
        v303 = 0;
        v304 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000000000uLL;
        while (2)
        {
          v305 = *v3;
          v306 = *(_QWORD *)(a2 + v305);
          v307 = v306 + 1;
          if (v306 == -1 || v307 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v308 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v306);
            *(_QWORD *)(a2 + v305) = v307;
            v19 |= (unint64_t)(v308 & 0x7F) << v303;
            if (v308 < 0)
            {
              v303 += 7;
              v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_828:
        v520 = 776;
        goto LABEL_950;
      case 0x4Au:
        v309 = 0;
        v310 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000000000uLL;
        while (2)
        {
          v311 = *v3;
          v312 = *(_QWORD *)(a2 + v311);
          v313 = v312 + 1;
          if (v312 == -1 || v313 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v314 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v312);
            *(_QWORD *)(a2 + v311) = v313;
            v19 |= (unint64_t)(v314 & 0x7F) << v309;
            if (v314 < 0)
            {
              v309 += 7;
              v14 = v310++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_832:
        v520 = 780;
        goto LABEL_950;
      case 0x4Bu:
        v315 = 0;
        v316 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000000000uLL;
        while (2)
        {
          v317 = *v3;
          v318 = *(_QWORD *)(a2 + v317);
          v319 = v318 + 1;
          if (v318 == -1 || v319 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v320 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v318);
            *(_QWORD *)(a2 + v317) = v319;
            v19 |= (unint64_t)(v320 & 0x7F) << v315;
            if (v320 < 0)
            {
              v315 += 7;
              v14 = v316++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_836:
        v520 = 760;
        goto LABEL_950;
      case 0x4Cu:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x4Du:
        v321 = 0;
        v322 = 0;
        v323 = 0;
        *(_WORD *)(a1 + 820) |= 0x20u;
        while (2)
        {
          v324 = *v3;
          v325 = *(_QWORD *)(a2 + v324);
          v326 = v325 + 1;
          if (v325 == -1 || v326 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v327 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v325);
            *(_QWORD *)(a2 + v324) = v326;
            v323 |= (unint64_t)(v327 & 0x7F) << v321;
            if (v327 < 0)
            {
              v321 += 7;
              v14 = v322++ >= 9;
              if (v14)
              {
                v323 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v323 = 0;
LABEL_840:
        v521 = v323 != 0;
        v522 = 792;
        goto LABEL_959;
      case 0x4Eu:
        v328 = 0;
        v329 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000uLL;
        while (2)
        {
          v330 = *v3;
          v331 = *(_QWORD *)(a2 + v330);
          v332 = v331 + 1;
          if (v331 == -1 || v332 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v333 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v331);
            *(_QWORD *)(a2 + v330) = v332;
            v19 |= (unint64_t)(v333 & 0x7F) << v328;
            if (v333 < 0)
            {
              v328 += 7;
              v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_844;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_844:
        v520 = 208;
        goto LABEL_950;
      case 0x4Fu:
        v334 = 0;
        v335 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000uLL;
        while (2)
        {
          v336 = *v3;
          v337 = *(_QWORD *)(a2 + v336);
          v338 = v337 + 1;
          if (v337 == -1 || v338 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v339 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v337);
            *(_QWORD *)(a2 + v336) = v338;
            v19 |= (unint64_t)(v339 & 0x7F) << v334;
            if (v339 < 0)
            {
              v334 += 7;
              v14 = v335++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_848;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_848:
        v520 = 204;
        goto LABEL_950;
      case 0x50u:
        v340 = 0;
        v341 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000000000uLL;
        while (2)
        {
          v342 = *v3;
          v343 = *(_QWORD *)(a2 + v342);
          v344 = v343 + 1;
          if (v343 == -1 || v344 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v345 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v343);
            *(_QWORD *)(a2 + v342) = v344;
            v19 |= (unint64_t)(v345 & 0x7F) << v340;
            if (v345 < 0)
            {
              v340 += 7;
              v14 = v341++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_852;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_852:
        v520 = 720;
        goto LABEL_950;
      case 0x51u:
        v346 = 0;
        v347 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000000000uLL;
        while (2)
        {
          v348 = *v3;
          v349 = *(_QWORD *)(a2 + v348);
          v350 = v349 + 1;
          if (v349 == -1 || v350 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v351 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v349);
            *(_QWORD *)(a2 + v348) = v350;
            v19 |= (unint64_t)(v351 & 0x7F) << v346;
            if (v351 < 0)
            {
              v346 += 7;
              v14 = v347++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_856;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_856:
        v520 = 712;
        goto LABEL_950;
      case 0x52u:
        v352 = 0;
        v353 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000000000uLL;
        while (2)
        {
          v354 = *v3;
          v355 = *(_QWORD *)(a2 + v354);
          v356 = v355 + 1;
          if (v355 == -1 || v356 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v357 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v355);
            *(_QWORD *)(a2 + v354) = v356;
            v19 |= (unint64_t)(v357 & 0x7F) << v352;
            if (v357 < 0)
            {
              v352 += 7;
              v14 = v353++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_860;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_860:
        v520 = 716;
        goto LABEL_950;
      case 0x53u:
        v358 = 0;
        v359 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x2000000000uLL;
        while (2)
        {
          v360 = *v3;
          v361 = *(_QWORD *)(a2 + v360);
          v362 = v361 + 1;
          if (v361 == -1 || v362 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v363 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v361);
            *(_QWORD *)(a2 + v360) = v362;
            v19 |= (unint64_t)(v363 & 0x7F) << v358;
            if (v363 < 0)
            {
              v358 += 7;
              v14 = v359++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_864;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_864:
        v520 = 368;
        goto LABEL_950;
      case 0x54u:
        *(_QWORD *)(a1 + 812) |= 0x200uLL;
        v364 = *v3;
        v365 = *(_QWORD *)(a2 + v364);
        if (v365 <= 0xFFFFFFFFFFFFFFF7 && v365 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v365);
          *(_QWORD *)(a2 + v364) = v365 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 80;
        goto LABEL_984;
      case 0x55u:
        v367 = 0;
        v368 = 0;
        v369 = 0;
        v370 = ((*(unsigned __int8 *)(a1 + 822) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 820) = *(_WORD *)(a1 + 820);
        *(_BYTE *)(a1 + 822) = v370;
        while (2)
        {
          v371 = *v3;
          v372 = *(_QWORD *)(a2 + v371);
          v373 = v372 + 1;
          if (v372 == -1 || v373 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v374 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v372);
            *(_QWORD *)(a2 + v371) = v373;
            v369 |= (unint64_t)(v374 & 0x7F) << v367;
            if (v374 < 0)
            {
              v367 += 7;
              v14 = v368++ >= 9;
              if (v14)
              {
                v369 = 0;
                goto LABEL_868;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v369 = 0;
LABEL_868:
        v521 = v369 != 0;
        v522 = 804;
        goto LABEL_959;
      case 0x56u:
        v375 = 0;
        v376 = 0;
        v377 = 0;
        *(_WORD *)(a1 + 820) |= 0x800u;
        while (2)
        {
          v378 = *v3;
          v379 = *(_QWORD *)(a2 + v378);
          v380 = v379 + 1;
          if (v379 == -1 || v380 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v381 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v379);
            *(_QWORD *)(a2 + v378) = v380;
            v377 |= (unint64_t)(v381 & 0x7F) << v375;
            if (v381 < 0)
            {
              v375 += 7;
              v14 = v376++ >= 9;
              if (v14)
              {
                v377 = 0;
                goto LABEL_872;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v377 = 0;
LABEL_872:
        v521 = v377 != 0;
        v522 = 798;
        goto LABEL_959;
      case 0x57u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 512;
        goto LABEL_636;
      case 0x58u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 576;
        goto LABEL_636;
      case 0x59u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 144;
        goto LABEL_636;
      case 0x5Au:
        v382 = 0;
        v383 = 0;
        v384 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000000000;
        while (2)
        {
          v385 = *v3;
          v386 = *(_QWORD *)(a2 + v385);
          v387 = v386 + 1;
          if (v386 == -1 || v387 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v388 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v386);
            *(_QWORD *)(a2 + v385) = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              v14 = v383++ >= 9;
              if (v14)
              {
                v384 = 0;
                goto LABEL_876;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v384 = 0;
LABEL_876:
        v521 = v384 != 0;
        v522 = 786;
        goto LABEL_959;
      case 0x5Bu:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagement);
        objc_storeStrong((id *)(a1 + 768), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSWidgetEngagementReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x5Cu:
        v389 = 0;
        v390 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000uLL;
        while (2)
        {
          v391 = *v3;
          v392 = *(_QWORD *)(a2 + v391);
          v393 = v392 + 1;
          if (v392 == -1 || v393 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v394 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v392);
            *(_QWORD *)(a2 + v391) = v393;
            v168 |= (unint64_t)(v394 & 0x7F) << v389;
            if (v394 < 0)
            {
              v389 += 7;
              v14 = v390++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_880;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_880:
        v523 = 104;
        goto LABEL_893;
      case 0x5Du:
        v395 = 0;
        v396 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 8uLL;
        while (2)
        {
          v397 = *v3;
          v398 = *(_QWORD *)(a2 + v397);
          v399 = v398 + 1;
          if (v398 == -1 || v399 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v400 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v398);
            *(_QWORD *)(a2 + v397) = v399;
            v168 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              v14 = v396++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_884;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_884:
        v523 = 32;
        goto LABEL_893;
      case 0x5Eu:
        v401 = 0;
        v402 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000uLL;
        while (2)
        {
          v403 = *v3;
          v404 = *(_QWORD *)(a2 + v403);
          v405 = v404 + 1;
          if (v404 == -1 || v405 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v406 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v404);
            *(_QWORD *)(a2 + v403) = v405;
            v19 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              v14 = v402++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_888;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_888:
        v520 = 320;
        goto LABEL_950;
      case 0x5Fu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 400;
        goto LABEL_636;
      case 0x60u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 416;
        goto LABEL_636;
      case 0x61u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 392;
        goto LABEL_636;
      case 0x62u:
        v407 = 0;
        v408 = 0;
        v168 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800uLL;
        while (2)
        {
          v409 = *v3;
          v410 = *(_QWORD *)(a2 + v409);
          v411 = v410 + 1;
          if (v410 == -1 || v411 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v412 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v410);
            *(_QWORD *)(a2 + v409) = v411;
            v168 |= (unint64_t)(v412 & 0x7F) << v407;
            if (v412 < 0)
            {
              v407 += 7;
              v14 = v408++ >= 9;
              if (v14)
              {
                v168 = 0;
                goto LABEL_892;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v168 = 0;
LABEL_892:
        v523 = 96;
LABEL_893:
        *(_QWORD *)(a1 + v523) = v168;
        goto LABEL_985;
      case 0x63u:
        v413 = 0;
        v414 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x800000000uLL;
        while (2)
        {
          v415 = *v3;
          v416 = *(_QWORD *)(a2 + v415);
          v417 = v416 + 1;
          if (v416 == -1 || v417 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v418 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v416);
            *(_QWORD *)(a2 + v415) = v417;
            v19 |= (unint64_t)(v418 & 0x7F) << v413;
            if (v418 < 0)
            {
              v413 += 7;
              v14 = v414++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_897;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_897:
        v520 = 360;
        goto LABEL_950;
      case 0x64u:
        v419 = 0;
        v420 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000uLL;
        while (2)
        {
          v421 = *v3;
          v422 = *(_QWORD *)(a2 + v421);
          v423 = v422 + 1;
          if (v422 == -1 || v423 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v424 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v422);
            *(_QWORD *)(a2 + v421) = v423;
            v19 |= (unint64_t)(v424 & 0x7F) << v419;
            if (v424 < 0)
            {
              v419 += 7;
              v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_901;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_901:
        v520 = 296;
        goto LABEL_950;
      case 0x65u:
        *(_QWORD *)(a1 + 812) |= 0x40uLL;
        v425 = *v3;
        v426 = *(_QWORD *)(a2 + v425);
        if (v426 <= 0xFFFFFFFFFFFFFFF7 && v426 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v426);
          *(_QWORD *)(a2 + v425) = v426 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 56;
        goto LABEL_984;
      case 0x66u:
        *(_QWORD *)(a1 + 812) |= 0x100uLL;
        v427 = *v3;
        v428 = *(_QWORD *)(a2 + v427);
        if (v428 <= 0xFFFFFFFFFFFFFFF7 && v428 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v428);
          *(_QWORD *)(a2 + v427) = v428 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 72;
        goto LABEL_984;
      case 0x67u:
        *(_QWORD *)(a1 + 812) |= 4uLL;
        v429 = *v3;
        v430 = *(_QWORD *)(a2 + v429);
        if (v430 <= 0xFFFFFFFFFFFFFFF7 && v430 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v430);
          *(_QWORD *)(a2 + v429) = v430 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 24;
        goto LABEL_984;
      case 0x68u:
        *(_QWORD *)(a1 + 812) |= 0x10uLL;
        v431 = *v3;
        v432 = *(_QWORD *)(a2 + v431);
        if (v432 <= 0xFFFFFFFFFFFFFFF7 && v432 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v432);
          *(_QWORD *)(a2 + v431) = v432 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 40;
        goto LABEL_984;
      case 0x69u:
        *(_QWORD *)(a1 + 812) |= 0x80uLL;
        v433 = *v3;
        v434 = *(_QWORD *)(a2 + v433);
        if (v434 <= 0xFFFFFFFFFFFFFFF7 && v434 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v434);
          *(_QWORD *)(a2 + v433) = v434 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 64;
        goto LABEL_984;
      case 0x6Au:
        *(_QWORD *)(a1 + 812) |= 0x4000uLL;
        v435 = *v3;
        v436 = *(_QWORD *)(a2 + v435);
        if (v436 <= 0xFFFFFFFFFFFFFFF7 && v436 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v436);
          *(_QWORD *)(a2 + v435) = v436 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 120;
        goto LABEL_984;
      case 0x6Bu:
        *(_QWORD *)(a1 + 812) |= 2uLL;
        v437 = *v3;
        v438 = *(_QWORD *)(a2 + v437);
        if (v438 <= 0xFFFFFFFFFFFFFFF7 && v438 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v438);
          *(_QWORD *)(a2 + v437) = v438 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 16;
        goto LABEL_984;
      case 0x6Cu:
        *(_QWORD *)(a1 + 812) |= 1uLL;
        v439 = *v3;
        v440 = *(_QWORD *)(a2 + v439);
        if (v440 <= 0xFFFFFFFFFFFFFFF7 && v440 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v440);
          *(_QWORD *)(a2 + v439) = v440 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 8;
        goto LABEL_984;
      case 0x6Du:
        *(_QWORD *)(a1 + 812) |= 0x20uLL;
        v441 = *v3;
        v442 = *(_QWORD *)(a2 + v441);
        if (v442 <= 0xFFFFFFFFFFFFFFF7 && v442 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v442);
          *(_QWORD *)(a2 + v441) = v442 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 48;
        goto LABEL_984;
      case 0x6Eu:
        v443 = 0;
        v444 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x80000000000uLL;
        while (2)
        {
          v445 = *v3;
          v446 = *(_QWORD *)(a2 + v445);
          v447 = v446 + 1;
          if (v446 == -1 || v447 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v448 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v446);
            *(_QWORD *)(a2 + v445) = v447;
            v19 |= (unint64_t)(v448 & 0x7F) << v443;
            if (v448 < 0)
            {
              v443 += 7;
              v14 = v444++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_905;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_905:
        v520 = 476;
        goto LABEL_950;
      case 0x6Fu:
        v449 = 0;
        v450 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x400000000000uLL;
        while (2)
        {
          v451 = *v3;
          v452 = *(_QWORD *)(a2 + v451);
          if (v452 == -1 || v452 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v453 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v452);
            *(_QWORD *)(a2 + v451) = v452 + 1;
            v19 |= (unint64_t)(v453 & 0x7F) << v449;
            if (v453 < 0)
            {
              v449 += 7;
              v14 = v450++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_909;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_909:
        v520 = 496;
        goto LABEL_950;
      case 0x70u:
        v454 = 0;
        v455 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x100000000000uLL;
        while (2)
        {
          v456 = *v3;
          v457 = *(_QWORD *)(a2 + v456);
          if (v457 == -1 || v457 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v458 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v457);
            *(_QWORD *)(a2 + v456) = v457 + 1;
            v19 |= (unint64_t)(v458 & 0x7F) << v454;
            if (v458 < 0)
            {
              v454 += 7;
              v14 = v455++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_913;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_913:
        v520 = 488;
        goto LABEL_950;
      case 0x71u:
        v459 = 0;
        v460 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x200000000000uLL;
        while (2)
        {
          v461 = *v3;
          v462 = *(_QWORD *)(a2 + v461);
          if (v462 == -1 || v462 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v463 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v462);
            *(_QWORD *)(a2 + v461) = v462 + 1;
            v19 |= (unint64_t)(v463 & 0x7F) << v459;
            if (v463 < 0)
            {
              v459 += 7;
              v14 = v460++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_917;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_917:
        v520 = 492;
        goto LABEL_950;
      case 0x72u:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 480;
        goto LABEL_636;
      case 0x73u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 584;
        goto LABEL_636;
      case 0x74u:
        v464 = 0;
        v465 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000000uLL;
        while (2)
        {
          v466 = *v3;
          v467 = *(_QWORD *)(a2 + v466);
          if (v467 == -1 || v467 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v468 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v467);
            *(_QWORD *)(a2 + v466) = v467 + 1;
            v19 |= (unint64_t)(v468 & 0x7F) << v464;
            if (v468 < 0)
            {
              v464 += 7;
              v14 = v465++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_921;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_921:
        v520 = 592;
        goto LABEL_950;
      case 0x75u:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addSurfacedByTagIds:", v130);
        goto LABEL_656;
      case 0x76u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 408;
        goto LABEL_636;
      case 0x77u:
        v469 = 0;
        v470 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000uLL;
        while (2)
        {
          v471 = *v3;
          v472 = *(_QWORD *)(a2 + v471);
          if (v472 == -1 || v472 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v473 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v472);
            *(_QWORD *)(a2 + v471) = v472 + 1;
            v19 |= (unint64_t)(v473 & 0x7F) << v469;
            if (v473 < 0)
            {
              v469 += 7;
              v14 = v470++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_925;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_925:
        v520 = 272;
        goto LABEL_950;
      case 0x78u:
        v474 = 0;
        v475 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x1000000000uLL;
        while (2)
        {
          v476 = *v3;
          v477 = *(_QWORD *)(a2 + v476);
          if (v477 == -1 || v477 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v478 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v477);
            *(_QWORD *)(a2 + v476) = v477 + 1;
            v19 |= (unint64_t)(v478 & 0x7F) << v474;
            if (v478 < 0)
            {
              v474 += 7;
              v14 = v475++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_929;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_929:
        v520 = 364;
        goto LABEL_950;
      case 0x79u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 288;
        goto LABEL_636;
      case 0x7Au:
        PBReaderReadData();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 376;
        goto LABEL_636;
      case 0x7Bu:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 280;
        goto LABEL_636;
      case 0x7Cu:
        v479 = 0;
        v480 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000uLL;
        while (2)
        {
          v481 = *v3;
          v482 = *(_QWORD *)(a2 + v481);
          if (v482 == -1 || v482 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v483 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v482);
            *(_QWORD *)(a2 + v481) = v482 + 1;
            v19 |= (unint64_t)(v483 & 0x7F) << v479;
            if (v483 < 0)
            {
              v479 += 7;
              v14 = v480++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_933;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_933:
        v520 = 176;
        goto LABEL_950;
      case 0x7Du:
        v484 = 0;
        v485 = 0;
        v486 = 0;
        *(_WORD *)(a1 + 820) |= 2u;
        while (2)
        {
          v487 = *v3;
          v488 = *(_QWORD *)(a2 + v487);
          if (v488 == -1 || v488 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v489 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v488);
            *(_QWORD *)(a2 + v487) = v488 + 1;
            v486 |= (unint64_t)(v489 & 0x7F) << v484;
            if (v489 < 0)
            {
              v484 += 7;
              v14 = v485++ >= 9;
              if (v14)
              {
                v486 = 0;
                goto LABEL_937;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v486 = 0;
LABEL_937:
        v521 = v486 != 0;
        v522 = 788;
        goto LABEL_959;
      case 0x7Eu:
        *(_QWORD *)(a1 + 812) |= 0x2000uLL;
        v490 = *v3;
        v491 = *(_QWORD *)(a2 + v490);
        if (v491 <= 0xFFFFFFFFFFFFFFF7 && v491 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v366 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v491);
          *(_QWORD *)(a2 + v490) = v491 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v366 = 0;
        }
        v524 = 112;
LABEL_984:
        *(_QWORD *)(a1 + v524) = v366;
        goto LABEL_985;
      case 0x7Fu:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSAlternateHeadline);
        objc_storeStrong((id *)(a1 + 136), v130);
        if (!PBReaderPlaceMark()
          || !COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSAlternateHeadlineReadFrom((uint64_t)v130, a2))
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x80u:
        v492 = 0;
        v493 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x20000000000000uLL;
        while (2)
        {
          v494 = *v3;
          v495 = *(_QWORD *)(a2 + v494);
          if (v495 == -1 || v495 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v496 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v495);
            *(_QWORD *)(a2 + v494) = v495 + 1;
            v19 |= (unint64_t)(v496 & 0x7F) << v492;
            if (v496 < 0)
            {
              v492 += 7;
              v14 = v493++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_941;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_941:
        v520 = 608;
        goto LABEL_950;
      case 0x81u:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueData);
        objc_storeStrong((id *)(a1 + 424), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x82u:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureData);
        objc_storeStrong((id *)(a1 + 432), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x83u:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewData);
        objc_storeStrong((id *)(a1 + 448), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x84u:
        v497 = 0;
        v498 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x40000000000000uLL;
        while (2)
        {
          v499 = *v3;
          v500 = *(_QWORD *)(a2 + v499);
          if (v500 == -1 || v500 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v501 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v500);
            *(_QWORD *)(a2 + v499) = v500 + 1;
            v19 |= (unint64_t)(v501 & 0x7F) << v497;
            if (v501 < 0)
            {
              v497 += 7;
              v14 = v498++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_945;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_945:
        v520 = 640;
        goto LABEL_950;
      case 0x85u:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelData);
        objc_storeStrong((id *)(a1 + 232), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x86u:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewContextData);
        objc_storeStrong((id *)(a1 + 440), v130);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewContextDataReadFrom((uint64_t)v130, a2) & 1) == 0)
        {
          goto LABEL_987;
        }
        goto LABEL_655;
      case 0x87u:
        v502 = 0;
        v503 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 812) |= 0x8000000000uLL;
        while (2)
        {
          v504 = *v3;
          v505 = *(_QWORD *)(a2 + v504);
          if (v505 == -1 || v505 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v506 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v505);
            *(_QWORD *)(a2 + v504) = v505 + 1;
            v19 |= (unint64_t)(v506 & 0x7F) << v502;
            if (v506 < 0)
            {
              v502 += 7;
              v14 = v503++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_949;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_949:
        v520 = 384;
LABEL_950:
        *(_DWORD *)(a1 + v520) = v19;
        goto LABEL_985;
      case 0x88u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 752;
        goto LABEL_636;
      case 0x89u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = 264;
LABEL_636:
        v507 = *(void **)(a1 + v25);
        *(_QWORD *)(a1 + v25) = v24;

        goto LABEL_985;
      case 0x8Au:
        v508 = 0;
        v509 = 0;
        v510 = 0;
        *(_WORD *)(a1 + 820) |= 8u;
        while (2)
        {
          v511 = *v3;
          v512 = *(_QWORD *)(a2 + v511);
          if (v512 == -1 || v512 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v513 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v512);
            *(_QWORD *)(a2 + v511) = v512 + 1;
            v510 |= (unint64_t)(v513 & 0x7F) << v508;
            if (v513 < 0)
            {
              v508 += 7;
              v14 = v509++ >= 9;
              if (v14)
              {
                v510 = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v510 = 0;
LABEL_954:
        v521 = v510 != 0;
        v522 = 790;
        goto LABEL_959;
      case 0x8Bu:
        v514 = 0;
        v515 = 0;
        v516 = 0;
        *(_WORD *)(a1 + 820) |= 0x10u;
        while (2)
        {
          v517 = *v3;
          v518 = *(_QWORD *)(a2 + v517);
          if (v518 == -1 || v518 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v519 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v518);
            *(_QWORD *)(a2 + v517) = v518 + 1;
            v516 |= (unint64_t)(v519 & 0x7F) << v514;
            if (v519 < 0)
            {
              v514 += 7;
              v14 = v515++ >= 9;
              if (v14)
              {
                v516 = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v516 = 0;
LABEL_958:
        v521 = v516 != 0;
        v522 = 791;
LABEL_959:
        *(_BYTE *)(a1 + v522) = v521;
        goto LABEL_985;
      case 0x8Cu:
        PBReaderReadString();
        v130 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v130)
          objc_msgSend((id)a1, "addTopicIds:", v130);
        goto LABEL_656;
      case 0x8Du:
        v130 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItem);
        objc_msgSend((id)a1, "addPurchaseOffersItem:", v130);
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSPurchaseOffersItemReadFrom((uint64_t)v130, a2) & 1) != 0)
        {
LABEL_655:
          PBReaderRecallMark();
LABEL_656:

LABEL_985:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_987:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_985;
    }
  }
}

uint64_t NTPBRecommendationBrickExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  void *v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_47;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_49;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_49:
          v38 = 16;
          goto LABEL_54;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v24;

          continue;
        case 3u:
          PBReaderReadString();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          if (v26)
            objc_msgSend((id)a1, "addRecommendedFeedIds:", v26);

          continue;
        case 4u:
          v27 = 0;
          v28 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v19 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_53:
          v38 = 20;
LABEL_54:
          *(_DWORD *)(a1 + v38) = v19;
          continue;
        case 5u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
        *(_QWORD *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0)
          goto LABEL_56;
        v32 += 7;
        v14 = v33++ >= 9;
        if (v14)
        {
          v34 = 0;
          goto LABEL_58;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_56:
      if (*(_BYTE *)(a2 + *v5))
        v34 = 0;
LABEL_58:
      *(_BYTE *)(a1 + 32) = v34 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBArticleInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBErrorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v23;

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBForYouTodaySectionSpecificConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int *v48;
  int *v49;
  int *v50;
  NTPBTodaySectionConfigArticle *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___NTPBJSONRecord__base;
  v8 = &OBJC_IVAR___NTPBJSONRecord__base;
  v9 = (int *)MEMORY[0x24BE7AF30];
  v10 = &OBJC_IVAR___NTPBJSONRecord__base;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
        break;
      v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      v17 = v12++ >= 9;
      if (v17)
      {
        v13 = 0;
        v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    if (v18 || (v13 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v13 >> 3))
    {
      case 0u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_74;
          v20 += 7;
          v17 = v21++ >= 9;
          if (v17)
          {
            v22 = 0;
            goto LABEL_76;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_74:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_76:
        v62 = v8[275];
        goto LABEL_101;
      case 1u:
        v27 = 0;
        v28 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 0x20u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v22 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              v17 = v28++ >= 9;
              if (v17)
              {
                v22 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_80:
        v62 = v10[276];
        goto LABEL_101;
      case 2u:
        v32 = 0;
        v33 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v22 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v17 = v33++ >= 9;
              if (v17)
              {
                v22 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_84:
        v62 = 24;
        goto LABEL_101;
      case 3u:
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 0x40u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v17 = v38++ >= 9;
              if (v17)
              {
                LODWORD(v39) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v39) = 0;
LABEL_88:
        *(_DWORD *)(a1 + 56) = v39;
        goto LABEL_102;
      case 4u:
        v43 = 0;
        v44 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 0x10u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v22 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v17 = v44++ >= 9;
              if (v17)
              {
                v22 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_92:
        v62 = 40;
        goto LABEL_101;
      case 5u:
        v48 = v10;
        v49 = v7;
        v50 = v8;
        v51 = objc_alloc_init(NTPBTodaySectionConfigArticle);

        *(_QWORD *)(a1 + 64) = v51;
        if (PBReaderPlaceMark()
          && (NTPBTodaySectionConfigArticleReadFrom((id *)&v51->super.super.isa, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          v8 = v50;
          v7 = v49;
          v10 = v48;
LABEL_102:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 6u:
        v52 = 0;
        v53 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 8u;
        while (2)
        {
          v54 = *v3;
          v55 = *(_QWORD *)(a2 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v55);
            *(_QWORD *)(a2 + v54) = v55 + 1;
            v22 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v17 = v53++ >= 9;
              if (v17)
              {
                v22 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_96:
        v62 = 32;
        goto LABEL_101;
      case 7u:
        v57 = 0;
        v58 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + v7[274]) |= 2u;
        while (2)
        {
          v59 = *v3;
          v60 = *(_QWORD *)(a2 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v60);
            *(_QWORD *)(a2 + v59) = v60 + 1;
            v22 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v17 = v58++ >= 9;
              if (v17)
              {
                v22 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_100:
        v62 = 16;
LABEL_101:
        *(_QWORD *)(a1 + v62) = v22;
        goto LABEL_102;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_102;
    }
  }
}

BOOL NTPBUserOnboardingBeginReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  v6 = (int *)MEMORY[0x24BE7AF30];
  while (1)
  {
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
      return v7 == 0;
    if (*(_BYTE *)(a2 + *v5))
    {
      v7 = 1;
      return v7 == 0;
    }
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      LOBYTE(v10) = 0;
LABEL_14:
    if (v7)
      v15 = 1;
    else
      v15 = (v10 & 7) == 4;
    if (v15)
      return v7 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPrivateDataControllerSyncStateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  NTPBPrivateZoneSyncState *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  NTPBPrivateRecordSyncState *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 32) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_37;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_39:
        *(_QWORD *)(a1 + 8) = v21;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          v25 = objc_alloc_init(NTPBPrivateRecordSyncState);
          objc_msgSend((id)a1, "addRecordStates:", v25);

          if (!PBReaderPlaceMark()
            || (NTPBPrivateRecordSyncStateReadFrom((id *)&v25->super.super.isa, a2) & 1) == 0)
          {
            return 0;
          }
        }
        else
        {
          if ((_DWORD)v17 != 1)
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          v18 = objc_alloc_init(NTPBPrivateZoneSyncState);
          objc_msgSend((id)a1, "addZoneStates:", v18);

          if (!PBReaderPlaceMark()
            || (NTPBPrivateZoneSyncStateReadFrom((id *)&v18->super.super.isa, a2) & 1) == 0)
          {
            return 0;
          }
        }
        PBReaderRecallMark();
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  NTPBEventObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(NTPBEventObject);
        objc_storeStrong((id *)(a1 + 96), v17);
        if (PBReaderPlaceMark() && NTPBEventObjectReadFrom((id *)&v17->super.super.isa, a2))
          goto LABEL_133;
        goto LABEL_235;
      case 2u:
        PBReaderReadData();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 152;
        goto LABEL_161;
      case 3u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 168;
        goto LABEL_161;
      case 4u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 184;
        goto LABEL_161;
      case 5u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 224) |= 0x10u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              v14 = v22++ >= 9;
              if (v14)
              {
                v23 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_165:
        v115 = 40;
        goto LABEL_218;
      case 6u:
        v27 = 0;
        v28 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 224) |= 2u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v23 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              v14 = v28++ >= 9;
              if (v14)
              {
                v23 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_169:
        v115 = 16;
        goto LABEL_218;
      case 7u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x80u;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_173:
        v116 = 88;
        goto LABEL_223;
      case 8u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 136;
        goto LABEL_161;
      case 9u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 128;
        goto LABEL_161;
      case 0xAu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 208;
        goto LABEL_161;
      case 0xBu:
        v38 = 0;
        v39 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x100u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v34 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_177:
        v116 = 104;
        goto LABEL_223;
      case 0xCu:
        v43 = 0;
        v44 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x200u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v34 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_181:
        v116 = 108;
        goto LABEL_223;
      case 0xDu:
        v48 = 0;
        v49 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x400u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v34 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_185:
        v116 = 120;
        goto LABEL_223;
      case 0xEu:
        v53 = 0;
        v54 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x40u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v34 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_189:
        v116 = 84;
        goto LABEL_223;
      case 0xFu:
        v58 = 0;
        v59 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 224) |= 4u;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v23 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                v23 = 0;
                goto LABEL_193;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_193:
        v115 = 24;
        goto LABEL_218;
      case 0x10u:
        v63 = 0;
        v64 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 224) |= 8u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v23 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                v23 = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_197:
        v115 = 32;
        goto LABEL_218;
      case 0x11u:
        v68 = 0;
        v69 = 0;
        v70 = 0;
        *(_DWORD *)(a1 + 224) |= 0x2000u;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          if (v72 == -1 || v72 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v72 + 1;
            v70 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                v70 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v70 = 0;
LABEL_201:
        v117 = v70 != 0;
        v118 = 218;
        goto LABEL_232;
      case 0x12u:
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 224) |= 0x8000u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          if (v78 == -1 || v78 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v78 + 1;
            v76 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v14 = v75++ >= 9;
              if (v14)
              {
                v76 = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v76 = 0;
LABEL_205:
        v117 = v76 != 0;
        v118 = 220;
        goto LABEL_232;
      case 0x13u:
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_DWORD *)(a1 + 224) |= 0x4000u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 == -1 || v84 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v14 = v81++ >= 9;
              if (v14)
              {
                v82 = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v82 = 0;
LABEL_209:
        v117 = v82 != 0;
        v118 = 219;
        goto LABEL_232;
      case 0x14u:
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_DWORD *)(a1 + 224) |= 0x10000u;
        while (2)
        {
          v89 = *v3;
          v90 = *(_QWORD *)(a2 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v90);
            *(_QWORD *)(a2 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v14 = v87++ >= 9;
              if (v14)
              {
                v88 = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v88 = 0;
LABEL_213:
        v117 = v88 != 0;
        v118 = 221;
        goto LABEL_232;
      case 0x15u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 112;
        goto LABEL_161;
      case 0x16u:
        PBReaderReadData();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 160;
        goto LABEL_161;
      case 0x17u:
        v92 = 0;
        v93 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 224) |= 1u;
        while (2)
        {
          v94 = *v3;
          v95 = *(_QWORD *)(a2 + v94);
          if (v95 == -1 || v95 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
            *(_QWORD *)(a2 + v94) = v95 + 1;
            v23 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              v14 = v93++ >= 9;
              if (v14)
              {
                v23 = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_217:
        v115 = 8;
LABEL_218:
        *(_QWORD *)(a1 + v115) = v23;
        goto LABEL_233;
      case 0x18u:
        PBReaderReadData();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 192;
        goto LABEL_161;
      case 0x19u:
        v17 = objc_alloc_init(NTPBUserPaidSubscriptionStatus);
        objc_msgSend((id)a1, "addUserPaidSubscriptionStatus:", v17);
        if (PBReaderPlaceMark() && (NTPBUserPaidSubscriptionStatusReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_133:
          PBReaderRecallMark();

LABEL_233:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_235:

        return 0;
      case 0x1Au:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 200;
        goto LABEL_161;
      case 0x1Bu:
        v97 = 0;
        v98 = 0;
        v34 = 0;
        *(_DWORD *)(a1 + 224) |= 0x20u;
        while (2)
        {
          v99 = *v3;
          v100 = *(_QWORD *)(a2 + v99);
          if (v100 == -1 || v100 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
            *(_QWORD *)(a2 + v99) = v100 + 1;
            v34 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              v14 = v98++ >= 9;
              if (v14)
              {
                LODWORD(v34) = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v34) = 0;
LABEL_222:
        v116 = 80;
LABEL_223:
        *(_DWORD *)(a1 + v116) = v34;
        goto LABEL_233;
      case 0x1Cu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 72;
        goto LABEL_161;
      case 0x1Du:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 64;
        goto LABEL_161;
      case 0x1Eu:
        v102 = 0;
        v103 = 0;
        v104 = 0;
        *(_DWORD *)(a1 + 224) |= 0x1000u;
        while (2)
        {
          v105 = *v3;
          v106 = *(_QWORD *)(a2 + v105);
          if (v106 == -1 || v106 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v106);
            *(_QWORD *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              v14 = v103++ >= 9;
              if (v14)
              {
                v104 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v104 = 0;
LABEL_227:
        v117 = v104 != 0;
        v118 = 217;
        goto LABEL_232;
      case 0x1Fu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 48;
        goto LABEL_161;
      case 0x20u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 56;
        goto LABEL_161;
      case 0x21u:
        v108 = 0;
        v109 = 0;
        v110 = 0;
        *(_DWORD *)(a1 + 224) |= 0x800u;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v112 + 1;
            v110 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v14 = v109++ >= 9;
              if (v14)
              {
                v110 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v110 = 0;
LABEL_231:
        v117 = v110 != 0;
        v118 = 216;
LABEL_232:
        *(_BYTE *)(a1 + v118) = v117;
        goto LABEL_233;
      case 0x22u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 144;
LABEL_161:
        v114 = *(void **)(a1 + v20);
        *(_QWORD *)(a1 + v20) = v19;

        goto LABEL_233;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_233;
    }
  }
}

uint64_t NTPBIssueExposureDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBAppConfigurationResourceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *Data;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *String;
  void *v22;
  NTPBDate *v23;
  uint64_t v24;
  void *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        Data = (void *)PBReaderReadData();

        v18 = Data;
        v19 = 24;
        goto LABEL_38;
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 64;
        goto LABEL_38;
      case 2u:
        v22 = (void *)PBReaderReadString();

        v18 = v22;
        v19 = 16;
        goto LABEL_38;
      case 3u:
        v23 = objc_alloc_init(NTPBDate);

        v24 = 32;
        goto LABEL_26;
      case 4u:
        v23 = objc_alloc_init(NTPBDate);

        v24 = 40;
LABEL_26:
        *(_QWORD *)(a1 + v24) = v23;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v23, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_39:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      case 5u:
        v25 = (void *)PBReaderReadString();

        v18 = v25;
        v19 = 48;
        goto LABEL_38;
      case 6u:
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (v14)
              {
                v28 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v28 = 0;
LABEL_44:
        *(_QWORD *)(a1 + 8) = v28;
        goto LABEL_39;
      case 7u:
        v32 = (void *)PBReaderReadString();

        v18 = v32;
        v19 = 56;
LABEL_38:
        *(_QWORD *)(a1 + v19) = v18;
        goto LABEL_39;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_39;
    }
  }
}

uint64_t NTPBPersonalizationInstanceHistoryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  void *String;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_31;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_33:
        *(_QWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3))
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + 16) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBNotificationEntityReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  void *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          a1[32] |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_46;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_48;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_48:
          v35 = 8;
          goto LABEL_57;
        case 2u:
          PBReaderReadString();
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if (v24)
            objc_msgSend(a1, "addTagId:", v24);

          continue;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          a1[32] |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
              *(_QWORD *)(a2 + v27) = v28 + 1;
              v19 |= (unint64_t)(v29 & 0x7F) << v25;
              if (v29 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_52;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_52:
          v35 = 16;
          goto LABEL_57;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          a1[32] |= 2u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v32 = *v3;
        v33 = *(_QWORD *)(a2 + v32);
        if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          break;
        v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
        *(_QWORD *)(a2 + v32) = v33 + 1;
        v19 |= (unint64_t)(v34 & 0x7F) << v30;
        if ((v34 & 0x80) == 0)
          goto LABEL_54;
        v30 += 7;
        v14 = v31++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_56;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      v35 = 12;
LABEL_57:
      *(_DWORD *)&a1[v35] = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayResultOperationFetchInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int *v45;
  int *v46;
  int *v47;
  NTPBTodayWidgetConfig *v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t result;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  void *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___NTPBJSONRecord__base;
  v8 = &OBJC_IVAR___NTPBJSONRecord__base;
  v9 = (int *)MEMORY[0x24BE7AF30];
  v10 = &OBJC_IVAR___NTPBJSONRecord__base;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      if (v15 == -1 || v15 >= *(_QWORD *)(a2 + *v4))
        break;
      v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v15 + 1;
      v13 |= (unint64_t)(v16 & 0x7F) << v11;
      if ((v16 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      v17 = v12++ >= 9;
      if (v17)
      {
        v13 = 0;
        v18 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v18 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    v19 = v13 & 7;
    if (v18 || v19 == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v13 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = v7[351];
        goto LABEL_99;
      case 2u:
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if (v28 < 0)
            {
              v23 += 7;
              v17 = v24++ >= 9;
              if (v17)
              {
                v25 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_104:
        v74 = v10[353];
        goto LABEL_121;
      case 3u:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 136;
        goto LABEL_99;
      case 4u:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 112;
        goto LABEL_99;
      case 5u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 0x20u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v17 = v30++ >= 9;
              if (v17)
              {
                v31 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_108:
        v75 = v31 != 0;
        v76 = 153;
        goto LABEL_126;
      case 6u:
        v35 = 0;
        v36 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 2u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v25 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v17 = v36++ >= 9;
              if (v17)
              {
                v25 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_112:
        v74 = 64;
        goto LABEL_121;
      case 7u:
        v40 = 0;
        v41 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 8u;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v25 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v17 = v41++ >= 9;
              if (v17)
              {
                v25 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_116:
        v74 = 80;
        goto LABEL_121;
      case 8u:
        v45 = v10;
        v46 = v8;
        v47 = v7;
        v48 = objc_alloc_init(NTPBTodayWidgetConfig);
        objc_storeStrong((id *)(a1 + 144), v48);
        if (PBReaderPlaceMark() && (NTPBTodayWidgetConfigReadFrom((uint64_t)v48, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v7 = v47;
          v8 = v46;
          v10 = v45;
LABEL_127:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 9u:
        v49 = 0;
        v50 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 4u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v25 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              v17 = v50++ >= 9;
              if (v17)
              {
                v25 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_120:
        v74 = 72;
LABEL_121:
        *(_QWORD *)(a1 + v74) = v25;
        goto LABEL_127;
      case 0xAu:
        PBReaderReadData();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 96;
        goto LABEL_99;
      case 0xBu:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 120;
        goto LABEL_99;
      case 0xCu:
        if (v19 != 2)
        {
          v77 = 0;
          v78 = 0;
          v79 = 0;
          while (1)
          {
            v80 = *v3;
            v81 = *(_QWORD *)(a2 + v80);
            if (v81 == -1 || v81 >= *(_QWORD *)(a2 + *v4))
              break;
            v82 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v81);
            *(_QWORD *)(a2 + v80) = v81 + 1;
            v79 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v17 = v78++ >= 9;
              if (!v17)
                continue;
            }
            goto LABEL_144;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_144:
          PBRepeatedInt32Add();
          goto LABEL_127;
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v55 = 0;
          v56 = 0;
          v57 = 0;
          while (1)
          {
            v58 = *v3;
            v59 = *(_QWORD *)(a2 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(a2 + *v4))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v59);
            *(_QWORD *)(a2 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v17 = v56++ >= 9;
              if (!v17)
                continue;
            }
            goto LABEL_76;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_76:
          PBRepeatedInt32Add();
        }
        goto LABEL_100;
      case 0xDu:
        if (v19 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v61 = 0;
            v62 = 0;
            v63 = 0;
            while (1)
            {
              v64 = *v3;
              v65 = *(_QWORD *)(a2 + v64);
              if (v65 == -1 || v65 >= *(_QWORD *)(a2 + *v4))
                break;
              v66 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v65);
              *(_QWORD *)(a2 + v64) = v65 + 1;
              v63 |= (unint64_t)(v66 & 0x7F) << v61;
              if (v66 < 0)
              {
                v61 += 7;
                v17 = v62++ >= 9;
                if (!v17)
                  continue;
              }
              goto LABEL_89;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_89:
            PBRepeatedInt64Add();
          }
LABEL_100:
          PBReaderRecallMark();
        }
        else
        {
          v83 = 0;
          v84 = 0;
          v85 = 0;
          while (1)
          {
            v86 = *v3;
            v87 = *(_QWORD *)(a2 + v86);
            if (v87 == -1 || v87 >= *(_QWORD *)(a2 + *v4))
              break;
            v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v87);
            *(_QWORD *)(a2 + v86) = v87 + 1;
            v85 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v17 = v84++ >= 9;
              if (!v17)
                continue;
            }
            goto LABEL_146;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_146:
          PBRepeatedInt64Add();
        }
        goto LABEL_127;
      case 0xEu:
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_BYTE *)(a1 + v8[352]) |= 0x10u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v69 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v17 = v68++ >= 9;
              if (v17)
              {
                v69 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v69 = 0;
LABEL_125:
        v75 = v69 != 0;
        v76 = 152;
LABEL_126:
        *(_BYTE *)(a1 + v76) = v75;
        goto LABEL_127;
      case 0xFu:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 88;
        goto LABEL_99;
      case 0x10u:
        PBReaderReadString();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = 104;
LABEL_99:
        v73 = *(void **)(a1 + v22);
        *(_QWORD *)(a1 + v22) = v21;

        goto LABEL_127;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_127;
    }
  }
}

BOOL NTPBVersionedPersonalizationVectorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_27;
        case 3u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_27;
        case 5u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_27;
        case 6u:
          PBReaderReadData();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_27:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL NTPBVideoPlayerConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 24;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueData *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueData);
        objc_storeStrong((id *)(a1 + 128), v18);
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueDataReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
          goto LABEL_69;
        }
        goto LABEL_153;
      case 2u:
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureData);
        objc_storeStrong((id *)(a1 + 136), v18);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueExposureDataReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          goto LABEL_153;
        }
        goto LABEL_69;
      case 3u:
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelData);
        objc_storeStrong((id *)(a1 + 96), v18);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSChannelDataReadFrom((uint64_t)v18, a2) & 1) == 0)
        {
          goto LABEL_153;
        }
        goto LABEL_69;
      case 4u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 168;
        goto LABEL_105;
      case 5u:
        v22 = 0;
        v23 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x2000u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              v15 = v23++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_109:
        v79 = 160;
        goto LABEL_118;
      case 6u:
        v29 = 0;
        v30 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x1000u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v24 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_113:
        v79 = 120;
        goto LABEL_118;
      case 7u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 152;
        goto LABEL_105;
      case 8u:
        v35 = 0;
        v36 = 0;
        v24 = 0;
        *(_WORD *)(a1 + 188) |= 0x800u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v24 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v24) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v24) = 0;
LABEL_117:
        v79 = 104;
LABEL_118:
        *(_DWORD *)(a1 + v79) = v24;
        goto LABEL_151;
      case 9u:
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 188) |= 0x4000u;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_122:
        v80 = v43 != 0;
        v81 = 184;
        goto LABEL_127;
      case 0xAu:
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 188) |= 0x8000u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                v50 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v50 = 0;
LABEL_126:
        v80 = v50 != 0;
        v81 = 185;
LABEL_127:
        *(_BYTE *)(a1 + v81) = v80;
        goto LABEL_151;
      case 0xBu:
        v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v18);
        if (PBReaderPlaceMark()
          && (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_69:
          PBReaderRecallMark();

LABEL_151:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_153:

        return 0;
      case 0xCu:
        *(_WORD *)(a1 + 188) |= 0x100u;
        v55 = *v3;
        v56 = *(_QWORD *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v56);
          *(_QWORD *)(a2 + v55) = v56 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 72;
        goto LABEL_150;
      case 0xDu:
        *(_WORD *)(a1 + 188) |= 0x20u;
        v58 = *v3;
        v59 = *(_QWORD *)(a2 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v59);
          *(_QWORD *)(a2 + v58) = v59 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 48;
        goto LABEL_150;
      case 0xEu:
        *(_WORD *)(a1 + 188) |= 0x80u;
        v60 = *v3;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v61);
          *(_QWORD *)(a2 + v60) = v61 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 64;
        goto LABEL_150;
      case 0xFu:
        *(_WORD *)(a1 + 188) |= 4u;
        v62 = *v3;
        v63 = *(_QWORD *)(a2 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v63);
          *(_QWORD *)(a2 + v62) = v63 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 24;
        goto LABEL_150;
      case 0x10u:
        *(_WORD *)(a1 + 188) |= 8u;
        v64 = *v3;
        v65 = *(_QWORD *)(a2 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v65);
          *(_QWORD *)(a2 + v64) = v65 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 32;
        goto LABEL_150;
      case 0x11u:
        *(_WORD *)(a1 + 188) |= 0x40u;
        v66 = *v3;
        v67 = *(_QWORD *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v67);
          *(_QWORD *)(a2 + v66) = v67 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 56;
        goto LABEL_150;
      case 0x12u:
        *(_WORD *)(a1 + 188) |= 0x400u;
        v68 = *v3;
        v69 = *(_QWORD *)(a2 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFF7 && v69 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v69);
          *(_QWORD *)(a2 + v68) = v69 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 88;
        goto LABEL_150;
      case 0x13u:
        *(_WORD *)(a1 + 188) |= 2u;
        v70 = *v3;
        v71 = *(_QWORD *)(a2 + v70);
        if (v71 <= 0xFFFFFFFFFFFFFFF7 && v71 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v71);
          *(_QWORD *)(a2 + v70) = v71 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 16;
        goto LABEL_150;
      case 0x14u:
        *(_WORD *)(a1 + 188) |= 1u;
        v72 = *v3;
        v73 = *(_QWORD *)(a2 + v72);
        if (v73 <= 0xFFFFFFFFFFFFFFF7 && v73 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v73);
          *(_QWORD *)(a2 + v72) = v73 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 8;
        goto LABEL_150;
      case 0x15u:
        *(_WORD *)(a1 + 188) |= 0x10u;
        v74 = *v3;
        v75 = *(_QWORD *)(a2 + v74);
        if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v75);
          *(_QWORD *)(a2 + v74) = v75 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 40;
        goto LABEL_150;
      case 0x16u:
        *(_WORD *)(a1 + 188) |= 0x200u;
        v76 = *v3;
        v77 = *(_QWORD *)(a2 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v77);
          *(_QWORD *)(a2 + v76) = v77 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v57 = 0;
        }
        v82 = 80;
LABEL_150:
        *(_QWORD *)(a1 + v82) = v57;
        goto LABEL_151;
      case 0x17u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 144;
        goto LABEL_105;
      case 0x18u:
        PBReaderReadString();
        v20 = objc_claimAutoreleasedReturnValue();
        v21 = 176;
LABEL_105:
        v78 = *(void **)(a1 + v21);
        *(_QWORD *)(a1 + v21) = v20;

        goto LABEL_151;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_151;
    }
  }
}

uint64_t NTPBPersonalizedSectionPresenceConfigReadFrom(uint64_t a1, _BYTE *a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  NTPBAbsolutePersonalizedSectionPresenceConfig *v24;
  NTPBRelativePersonalizedSectionPresenceConfig *v25;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&a2[*MEMORY[0x24BE7AF60]] < *(_QWORD *)&a2[*MEMORY[0x24BE7AF50]])
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (a2[*v5])
        return a2[*v5] == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&a2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&a2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v12);
        *(_QWORD *)&a2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = a2[*v5];
          goto LABEL_14;
        }
      }
      a2[*v5] = 1;
LABEL_12:
      v15 = a2[*v5];
      if (a2[*v5])
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return a2[*v5] == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v24 = objc_alloc_init(NTPBAbsolutePersonalizedSectionPresenceConfig);

        *(_QWORD *)(a1 + 8) = v24;
        if (!PBReaderPlaceMark() || !NTPBAbsolutePersonalizedSectionPresenceConfigReadFrom(v24, a2))
          return 0;
      }
      else
      {
        if ((_DWORD)v17 != 2)
        {
          if ((_DWORD)v17 == 1)
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)&a2[v21];
              if (v22 == -1 || v22 >= *(_QWORD *)&a2[*v4])
                break;
              v23 = *(_BYTE *)(*(_QWORD *)&a2[*v7] + v22);
              *(_QWORD *)&a2[v21] = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_37;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                LODWORD(v20) = 0;
                goto LABEL_39;
              }
            }
            a2[*v5] = 1;
LABEL_37:
            if (a2[*v5])
              LODWORD(v20) = 0;
LABEL_39:
            *(_DWORD *)(a1 + 16) = v20;
          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        v25 = objc_alloc_init(NTPBRelativePersonalizedSectionPresenceConfig);

        *(_QWORD *)(a1 + 24) = v25;
        if (!PBReaderPlaceMark() || !NTPBRelativePersonalizedSectionPresenceConfigReadFrom(v25, a2))
          return 0;
      }
      PBReaderRecallMark();
    }
    while (*(_QWORD *)&a2[*v3] < *(_QWORD *)&a2[*v4]);
  }
  return a2[*v5] == 0;
}

BOOL NTPBCoefficientsReadFrom(void *a1, void *a2)
{
  _WORD *v3;
  _BYTE *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int *v38;
  _BOOL8 v40;

  v3 = a1;
  v4 = a2;
  v5 = (int *)MEMORY[0x24BE7AF60];
  v6 = (int *)MEMORY[0x24BE7AF50];
  v7 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)&v4[*MEMORY[0x24BE7AF60]] >= *(_QWORD *)&v4[*MEMORY[0x24BE7AF50]])
  {
LABEL_68:
    v40 = v4[*v7] == 0;
    goto LABEL_69;
  }
  v8 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (v4[*v7])
      goto LABEL_68;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    while (1)
    {
      v12 = *v5;
      v13 = *(_QWORD *)&v4[v12];
      v14 = v13 + 1;
      if (v13 == -1 || v14 > *(_QWORD *)&v4[*v6])
        break;
      v15 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
      *(_QWORD *)&v4[v12] = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v9 += 7;
      if (v10++ >= 9)
      {
        v11 = 0;
        v17 = v4[*v7];
        goto LABEL_14;
      }
    }
    v4[*v7] = 1;
LABEL_12:
    v17 = v4[*v7];
    if (v4[*v7])
      v11 = 0;
LABEL_14:
    if (v17 || (v11 & 7) == 4)
      goto LABEL_68;
    switch((v11 >> 3))
    {
      case 1u:
        v3[40] |= 0x20u;
        v19 = *v5;
        v20 = *(_QWORD *)&v4[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v20);
          *(_QWORD *)&v4[v19] = v20 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__serverScoreCoefficient;
        goto LABEL_66;
      case 2u:
        v3[40] |= 4u;
        v22 = *v5;
        v23 = *(_QWORD *)&v4[v22];
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v23);
          *(_QWORD *)&v4[v22] = v23 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__clientScoreCoefficient;
        goto LABEL_66;
      case 3u:
        v3[40] |= 0x80u;
        v24 = *v5;
        v25 = *(_QWORD *)&v4[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v25);
          *(_QWORD *)&v4[v24] = v25 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__subscribedTopicScoreCoefficient;
        goto LABEL_66;
      case 4u:
        v3[40] |= 0x40u;
        v26 = *v5;
        v27 = *(_QWORD *)&v4[v26];
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v27);
          *(_QWORD *)&v4[v26] = v27 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__subscribedChannelScoreCoefficent;
        goto LABEL_66;
      case 5u:
        v3[40] |= 2u;
        v28 = *v5;
        v29 = *(_QWORD *)&v4[v28];
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v29);
          *(_QWORD *)&v4[v28] = v29 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__autofavoritedScoreCoefficient;
        goto LABEL_66;
      case 6u:
        v3[40] |= 1u;
        v30 = *v5;
        v31 = *(_QWORD *)&v4[v30];
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v31);
          *(_QWORD *)&v4[v30] = v31 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__articleEmbeddingScoreCoefficient;
        goto LABEL_66;
      case 7u:
        v3[40] |= 0x100u;
        v32 = *v5;
        v33 = *(_QWORD *)&v4[v32];
        if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v33);
          *(_QWORD *)&v4[v32] = v33 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__tabiScoreCoefficient;
        goto LABEL_66;
      case 8u:
        v3[40] |= 8u;
        v34 = *v5;
        v35 = *(_QWORD *)&v4[v34];
        if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v35);
          *(_QWORD *)&v4[v34] = v35 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__conversionCoefficient;
        goto LABEL_66;
      case 9u:
        v3[40] |= 0x10u;
        v36 = *v5;
        v37 = *(_QWORD *)&v4[v36];
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)&v4[*v6])
        {
          v21 = *(_QWORD *)(*(_QWORD *)&v4[*v8] + v37);
          *(_QWORD *)&v4[v36] = v37 + 8;
        }
        else
        {
          v4[*v7] = 1;
          v21 = 0;
        }
        v38 = &OBJC_IVAR___NTPBCoefficients__halfLifeCoefficient;
LABEL_66:
        *(_QWORD *)((char *)v3 + *v38) = v21;
        goto LABEL_67;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_67:
          if (*(_QWORD *)&v4[*v5] >= *(_QWORD *)&v4[*v6])
            goto LABEL_68;
          continue;
        }
        v40 = 0;
LABEL_69:

        return v40;
    }
  }
}

BOOL NTPBReportConcernSubmissionReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___NTPBReportConcernSubmission__cancelLocation;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___NTPBReportConcernSubmission__cancelLocation;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBReportConcernSubmission__cancelLocation;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___NTPBReportConcernSubmission__resultType;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___NTPBReportConcernSubmission__resultType;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___NTPBReportConcernSubmission__resultType;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___NTPBReportConcernSubmission__reportConcernLocation;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___NTPBReportConcernSubmission__reportConcernLocation;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___NTPBReportConcernSubmission__reportConcernLocation;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPaidSubscriptionSheetViewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 0x20u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_88;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_90;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_88:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_90:
          v64 = 104;
          goto LABEL_120;
        case 2u:
          v24 = 0;
          v25 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 8u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v19 |= (unint64_t)(v28 & 0x7F) << v24;
              if (v28 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_94:
          v64 = 72;
          goto LABEL_120;
        case 3u:
          v29 = 0;
          v30 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 2u;
          while (2)
          {
            v31 = *v3;
            v32 = *(_QWORD *)(a2 + v31);
            if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
              *(_QWORD *)(a2 + v31) = v32 + 1;
              v19 |= (unint64_t)(v33 & 0x7F) << v29;
              if (v33 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_98:
          v64 = 64;
          goto LABEL_120;
        case 4u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 88;
          goto LABEL_79;
        case 5u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 80;
          goto LABEL_79;
        case 6u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 8;
          goto LABEL_79;
        case 7u:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_79;
        case 8u:
          v36 = 0;
          v37 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 0x10u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v19 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_102:
          v64 = 76;
          goto LABEL_120;
        case 9u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 112) |= 0x80u;
          while (2)
          {
            v44 = *v3;
            v45 = *(_QWORD *)(a2 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
              *(_QWORD *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v14 = v42++ >= 9;
                if (v14)
                {
                  v43 = 0;
                  goto LABEL_106;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v43 = 0;
LABEL_106:
          v65 = v43 != 0;
          v66 = 109;
          goto LABEL_111;
        case 0xAu:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_BYTE *)(a1 + 112) |= 0x40u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v14 = v48++ >= 9;
                if (v14)
                {
                  v49 = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v49 = 0;
LABEL_110:
          v65 = v49 != 0;
          v66 = 108;
LABEL_111:
          *(_BYTE *)(a1 + v66) = v65;
          continue;
        case 0xBu:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 56;
          goto LABEL_79;
        case 0xCu:
          v53 = 0;
          v54 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 4u;
          while (2)
          {
            v55 = *v3;
            v56 = *(_QWORD *)(a2 + v55);
            if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
              *(_QWORD *)(a2 + v55) = v56 + 1;
              v19 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                v14 = v54++ >= 9;
                if (v14)
                {
                  LODWORD(v19) = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_115:
          v64 = 68;
          goto LABEL_120;
        case 0xDu:
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 96;
          goto LABEL_79;
        case 0xEu:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_79;
        case 0xFu:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_79;
        case 0x10u:
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
LABEL_79:
          v58 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          continue;
        case 0x11u:
          v59 = 0;
          v60 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 112) |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v61 = *v3;
        v62 = *(_QWORD *)(a2 + v61);
        if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
          break;
        v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
        *(_QWORD *)(a2 + v61) = v62 + 1;
        v19 |= (unint64_t)(v63 & 0x7F) << v59;
        if ((v63 & 0x80) == 0)
          goto LABEL_117;
        v59 += 7;
        v14 = v60++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_119;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_117:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_119:
      v64 = 48;
LABEL_120:
      *(_DWORD *)(a1 + v64) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBReadingListAddRemoveReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t result;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  COMAPPLEFELDSPARPROTOCOLScoredTagID *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  void *v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 48;
        goto LABEL_230;
      case 2u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 264;
        goto LABEL_230;
      case 3u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x10u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_253:
        v171 = 40;
        goto LABEL_360;
      case 4u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_DWORD *)(a1 + 344) |= 0x4000000u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v27 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
LABEL_257:
        v172 = v27 != 0;
        v173 = 343;
        goto LABEL_342;
      case 7u:
        v32 = 0;
        v33 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x20u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v21 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_261:
        v171 = 56;
        goto LABEL_360;
      case 8u:
        v37 = 0;
        v38 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x80u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v21 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_265;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_265:
        v171 = 88;
        goto LABEL_360;
      case 9u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 192;
        goto LABEL_230;
      case 0xAu:
        PBReaderReadString();
        v42 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v42)
          objc_msgSend((id)a1, "addNamedEntities:", v42);
        goto LABEL_247;
      case 0xBu:
        v43 = 0;
        v44 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x1000u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v21 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_269:
        v171 = 256;
        goto LABEL_360;
      case 0xCu:
        v48 = 0;
        v49 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x40u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v21 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_273:
        v171 = 60;
        goto LABEL_360;
      case 0xEu:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 272;
        goto LABEL_230;
      case 0xFu:
        v53 = 0;
        v54 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x4000u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v21 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_277:
        v171 = 328;
        goto LABEL_360;
      case 0x10u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 288;
        goto LABEL_230;
      case 0x11u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 296;
        goto LABEL_230;
      case 0x12u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 304;
        goto LABEL_230;
      case 0x13u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 280;
        goto LABEL_230;
      case 0x14u:
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_DWORD *)(a1 + 344) |= 0x40000u;
        while (2)
        {
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          if (v62 == -1 || v62 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v62);
            *(_QWORD *)(a2 + v61) = v62 + 1;
            v60 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                v60 = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v60 = 0;
LABEL_281:
        v172 = v60 != 0;
        v173 = 335;
        goto LABEL_342;
      case 0x15u:
        v64 = 0;
        v65 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x200u;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          if (v67 == -1 || v67 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v67 + 1;
            v21 |= (unint64_t)(v68 & 0x7F) << v64;
            if (v68 < 0)
            {
              v64 += 7;
              v14 = v65++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_285:
        v171 = 104;
        goto LABEL_360;
      case 0x16u:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 344) |= 2u;
        while (2)
        {
          v72 = *v3;
          v73 = *(_QWORD *)(a2 + v72);
          if (v73 == -1 || v73 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v73);
            *(_QWORD *)(a2 + v72) = v73 + 1;
            v71 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v14 = v70++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_289:
        v174 = 16;
        goto LABEL_355;
      case 0x17u:
        v75 = 0;
        v76 = 0;
        v77 = 0;
        *(_DWORD *)(a1 + 344) |= 0x80000u;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v77 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v14 = v76++ >= 9;
              if (v14)
              {
                v77 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v77 = 0;
LABEL_293:
        v172 = v77 != 0;
        v173 = 336;
        goto LABEL_342;
      case 0x18u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 64;
        goto LABEL_230;
      case 0x19u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 72;
        goto LABEL_230;
      case 0x1Au:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 96;
        goto LABEL_230;
      case 0x1Bu:
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_DWORD *)(a1 + 344) |= 0x400000u;
        while (2)
        {
          v84 = *v3;
          v85 = *(_QWORD *)(a2 + v84);
          if (v85 == -1 || v85 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v85);
            *(_QWORD *)(a2 + v84) = v85 + 1;
            v83 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v83 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v83 = 0;
LABEL_297:
        v172 = v83 != 0;
        v173 = 339;
        goto LABEL_342;
      case 0x1Cu:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 232;
        goto LABEL_230;
      case 0x1Du:
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + 344) |= 0x800000u;
        while (2)
        {
          v90 = *v3;
          v91 = *(_QWORD *)(a2 + v90);
          if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v89 |= (unint64_t)(v92 & 0x7F) << v87;
            if (v92 < 0)
            {
              v87 += 7;
              v14 = v88++ >= 9;
              if (v14)
              {
                v89 = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v89 = 0;
LABEL_301:
        v172 = v89 != 0;
        v173 = 340;
        goto LABEL_342;
      case 0x1Eu:
        v93 = 0;
        v94 = 0;
        v95 = 0;
        *(_DWORD *)(a1 + 344) |= 0x20000u;
        while (2)
        {
          v96 = *v3;
          v97 = *(_QWORD *)(a2 + v96);
          if (v97 == -1 || v97 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v97);
            *(_QWORD *)(a2 + v96) = v97 + 1;
            v95 |= (unint64_t)(v98 & 0x7F) << v93;
            if (v98 < 0)
            {
              v93 += 7;
              v14 = v94++ >= 9;
              if (v14)
              {
                v95 = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v95 = 0;
LABEL_305:
        v172 = v95 != 0;
        v173 = 334;
        goto LABEL_342;
      case 0x1Fu:
        v99 = 0;
        v100 = 0;
        v101 = 0;
        *(_DWORD *)(a1 + 344) |= 0x8000u;
        while (2)
        {
          v102 = *v3;
          v103 = *(_QWORD *)(a2 + v102);
          if (v103 == -1 || v103 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v103);
            *(_QWORD *)(a2 + v102) = v103 + 1;
            v101 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v14 = v100++ >= 9;
              if (v14)
              {
                v101 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v101 = 0;
LABEL_309:
        v172 = v101 != 0;
        v173 = 332;
        goto LABEL_342;
      case 0x20u:
        v105 = 0;
        v106 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x800u;
        while (2)
        {
          v107 = *v3;
          v108 = *(_QWORD *)(a2 + v107);
          if (v108 == -1 || v108 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v108);
            *(_QWORD *)(a2 + v107) = v108 + 1;
            v21 |= (unint64_t)(v109 & 0x7F) << v105;
            if (v109 < 0)
            {
              v105 += 7;
              v14 = v106++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_313:
        v171 = 216;
        goto LABEL_360;
      case 0x21u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 224;
        goto LABEL_230;
      case 0x22u:
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_DWORD *)(a1 + 344) |= 0x100000u;
        while (2)
        {
          v113 = *v3;
          v114 = *(_QWORD *)(a2 + v113);
          if (v114 == -1 || v114 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
            *(_QWORD *)(a2 + v113) = v114 + 1;
            v112 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              v14 = v111++ >= 9;
              if (v14)
              {
                v112 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v112 = 0;
LABEL_317:
        v172 = v112 != 0;
        v173 = 337;
        goto LABEL_342;
      case 0x23u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 120;
        goto LABEL_230;
      case 0x24u:
        v116 = 0;
        v117 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x400u;
        while (2)
        {
          v118 = *v3;
          v119 = *(_QWORD *)(a2 + v118);
          if (v119 == -1 || v119 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v119);
            *(_QWORD *)(a2 + v118) = v119 + 1;
            v21 |= (unint64_t)(v120 & 0x7F) << v116;
            if (v120 < 0)
            {
              v116 += 7;
              v14 = v117++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_321:
        v171 = 128;
        goto LABEL_360;
      case 0x25u:
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_DWORD *)(a1 + 344) |= 0x10000u;
        while (2)
        {
          v124 = *v3;
          v125 = *(_QWORD *)(a2 + v124);
          if (v125 == -1 || v125 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v126 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v125);
            *(_QWORD *)(a2 + v124) = v125 + 1;
            v123 |= (unint64_t)(v126 & 0x7F) << v121;
            if (v126 < 0)
            {
              v121 += 7;
              v14 = v122++ >= 9;
              if (v14)
              {
                v123 = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v123 = 0;
LABEL_325:
        v172 = v123 != 0;
        v173 = 333;
        goto LABEL_342;
      case 0x26u:
        v127 = 0;
        v128 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x2000u;
        while (2)
        {
          v129 = *v3;
          v130 = *(_QWORD *)(a2 + v129);
          if (v130 == -1 || v130 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v131 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v130);
            *(_QWORD *)(a2 + v129) = v130 + 1;
            v21 |= (unint64_t)(v131 & 0x7F) << v127;
            if (v131 < 0)
            {
              v127 += 7;
              v14 = v128++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_329:
        v171 = 312;
        goto LABEL_360;
      case 0x27u:
        v132 = 0;
        v133 = 0;
        v134 = 0;
        *(_DWORD *)(a1 + 344) |= 0x2000000u;
        while (2)
        {
          v135 = *v3;
          v136 = *(_QWORD *)(a2 + v135);
          if (v136 == -1 || v136 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v136);
            *(_QWORD *)(a2 + v135) = v136 + 1;
            v134 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              v14 = v133++ >= 9;
              if (v14)
              {
                v134 = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v134 = 0;
LABEL_333:
        v172 = v134 != 0;
        v173 = 342;
        goto LABEL_342;
      case 0x28u:
        v138 = 0;
        v139 = 0;
        v140 = 0;
        *(_DWORD *)(a1 + 344) |= 0x1000000u;
        while (2)
        {
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 1;
            v140 |= (unint64_t)(v143 & 0x7F) << v138;
            if (v143 < 0)
            {
              v138 += 7;
              v14 = v139++ >= 9;
              if (v14)
              {
                v140 = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v140 = 0;
LABEL_337:
        v172 = v140 != 0;
        v173 = 341;
        goto LABEL_342;
      case 0x29u:
        v144 = 0;
        v145 = 0;
        v146 = 0;
        *(_DWORD *)(a1 + 344) |= 0x200000u;
        while (2)
        {
          v147 = *v3;
          v148 = *(_QWORD *)(a2 + v147);
          if (v148 == -1 || v148 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v149 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v148);
            *(_QWORD *)(a2 + v147) = v148 + 1;
            v146 |= (unint64_t)(v149 & 0x7F) << v144;
            if (v149 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                v146 = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v146 = 0;
LABEL_341:
        v172 = v146 != 0;
        v173 = 338;
LABEL_342:
        *(_BYTE *)(a1 + v173) = v172;
        goto LABEL_361;
      case 0x2Au:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 208;
        goto LABEL_230;
      case 0x2Bu:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 240;
        goto LABEL_230;
      case 0x2Cu:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 248;
        goto LABEL_230;
      case 0x2Du:
        v42 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v42);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v42, a2) & 1) == 0)
        {
          goto LABEL_363;
        }
        goto LABEL_246;
      case 0x2Eu:
        v150 = 0;
        v151 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 344) |= 8u;
        while (2)
        {
          v152 = *v3;
          v153 = *(_QWORD *)(a2 + v152);
          if (v153 == -1 || v153 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v154 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v153);
            *(_QWORD *)(a2 + v152) = v153 + 1;
            v71 |= (unint64_t)(v154 & 0x7F) << v150;
            if (v154 < 0)
            {
              v150 += 7;
              v14 = v151++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_346:
        v174 = 32;
        goto LABEL_355;
      case 0x2Fu:
        v155 = 0;
        v156 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 344) |= 1u;
        while (2)
        {
          v157 = *v3;
          v158 = *(_QWORD *)(a2 + v157);
          if (v158 == -1 || v158 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v159 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v158);
            *(_QWORD *)(a2 + v157) = v158 + 1;
            v71 |= (unint64_t)(v159 & 0x7F) << v155;
            if (v159 < 0)
            {
              v155 += 7;
              v14 = v156++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_350:
        v174 = 8;
        goto LABEL_355;
      case 0x30u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 152;
        goto LABEL_230;
      case 0x31u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 168;
        goto LABEL_230;
      case 0x32u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 144;
        goto LABEL_230;
      case 0x33u:
        v160 = 0;
        v161 = 0;
        v71 = 0;
        *(_DWORD *)(a1 + 344) |= 4u;
        while (2)
        {
          v162 = *v3;
          v163 = *(_QWORD *)(a2 + v162);
          if (v163 == -1 || v163 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v164 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v163);
            *(_QWORD *)(a2 + v162) = v163 + 1;
            v71 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              v14 = v161++ >= 9;
              if (v14)
              {
                v71 = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v71 = 0;
LABEL_354:
        v174 = 24;
LABEL_355:
        *(_QWORD *)(a1 + v174) = v71;
        goto LABEL_361;
      case 0x34u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 160;
        goto LABEL_230;
      case 0x35u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 136;
LABEL_230:
        v165 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_361;
      case 0x3Fu:
        v42 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 176), v42);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v42, a2) & 1) == 0)
          goto LABEL_363;
        goto LABEL_246;
      case 0x40u:
        v42 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 184), v42);
        if (!PBReaderPlaceMark() || (NTPBIssueExposureDataReadFrom((uint64_t)v42, a2) & 1) == 0)
          goto LABEL_363;
        goto LABEL_246;
      case 0x41u:
        v166 = 0;
        v167 = 0;
        v21 = 0;
        *(_DWORD *)(a1 + 344) |= 0x100u;
        while (2)
        {
          v168 = *v3;
          v169 = *(_QWORD *)(a2 + v168);
          if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v21 |= (unint64_t)(v170 & 0x7F) << v166;
            if (v170 < 0)
            {
              v166 += 7;
              v14 = v167++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_359:
        v171 = 92;
LABEL_360:
        *(_DWORD *)(a1 + v171) = v21;
        goto LABEL_361;
      case 0x42u:
        v42 = objc_alloc_init(NTPBChannelData);
        objc_storeStrong((id *)(a1 + 80), v42);
        if (PBReaderPlaceMark() && (NTPBChannelDataReadFrom((uint64_t)v42, a2) & 1) != 0)
        {
LABEL_246:
          PBReaderRecallMark();
LABEL_247:

LABEL_361:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_363:

        return 0;
      case 0x43u:
        PBReaderReadString();
        v42 = (COMAPPLEFELDSPARPROTOCOLScoredTagID *)objc_claimAutoreleasedReturnValue();
        if (v42)
          objc_msgSend((id)a1, "addTopicIds:", v42);
        goto LABEL_247;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_361;
    }
  }
}

uint64_t NTPBPrivateZoneSyncStateReadFrom(id *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *String;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *Data;
  NTPBDate *v22;
  uint64_t v23;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString();

        v18 = String;
        v19 = 4;
        goto LABEL_23;
      case 2u:
        Data = (void *)PBReaderReadData();

        v18 = Data;
        v19 = 1;
LABEL_23:
        a1[v19] = v18;
        goto LABEL_29;
      case 3u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 2;
        goto LABEL_26;
      case 4u:
        v22 = objc_alloc_init(NTPBDate);

        v23 = 3;
LABEL_26:
        a1[v23] = v22;
        if (PBReaderPlaceMark() && (NTPBDateReadFrom((uint64_t)v22, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_29;
    }
  }
}

uint64_t NTPBArticleViewNotwReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  BOOL v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  void *v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v16)
          v17 = 1;
        else
          v17 = (v10 & 7) == 4;
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 56) |= 1u;
              break;
            case 2u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = 8;
              goto LABEL_36;
            case 3u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = 40;
              goto LABEL_36;
            case 4u:
              *(_BYTE *)(a1 + 56) |= 2u;
              v28 = *v3;
              v29 = *(_QWORD *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)(a2 + *v4))
              {
                v30 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v29);
                *(_QWORD *)(a2 + v28) = v29 + 4;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v30 = 0;
              }
              *(_DWORD *)(a1 + 20) = v30;
              goto LABEL_37;
            case 5u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = 32;
              goto LABEL_36;
            case 6u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = 24;
              goto LABEL_36;
            case 7u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = 48;
LABEL_36:
              v31 = *(void **)(a1 + v27);
              *(_QWORD *)(a1 + v27) = v26;

              goto LABEL_37;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_37:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_40;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v20) = 0;
LABEL_42:
          *(_DWORD *)(a1 + 16) = v20;
          goto LABEL_37;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBArticleScrollReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  COMAPPLEFELDSPARPROTOCOLScoredTagID *v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
        goto LABEL_45;
      case 2u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 80;
        goto LABEL_45;
      case 3u:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_45;
      case 4u:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 32;
        goto LABEL_45;
      case 5u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 120;
        goto LABEL_45;
      case 6u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 160) |= 1u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 88) = v23;
        goto LABEL_85;
      case 7u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 144;
        goto LABEL_45;
      case 8u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 128;
        goto LABEL_45;
      case 9u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 96;
        goto LABEL_45;
      case 0xAu:
        PBReaderReadData();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 40;
        goto LABEL_45;
      case 0xBu:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 160) |= 0x10u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_77:
        *(_BYTE *)(a1 + 156) = v30 != 0;
        goto LABEL_85;
      case 0xCu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 112;
LABEL_45:
        v35 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_85;
      case 0xDu:
        *(_BYTE *)(a1 + 160) |= 8u;
        v36 = *v3;
        v37 = *(_QWORD *)(a2 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v37);
          *(_QWORD *)(a2 + v36) = v37 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v38 = 0;
        }
        v44 = 152;
        goto LABEL_84;
      case 0xEu:
        *(_BYTE *)(a1 + 160) |= 4u;
        v39 = *v3;
        v40 = *(_QWORD *)(a2 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v40);
          *(_QWORD *)(a2 + v39) = v40 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v38 = 0;
        }
        v44 = 136;
        goto LABEL_84;
      case 0xFu:
        *(_BYTE *)(a1 + 160) |= 2u;
        v41 = *v3;
        v42 = *(_QWORD *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v42);
          *(_QWORD *)(a2 + v41) = v42 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v38 = 0;
        }
        v44 = 104;
LABEL_84:
        *(_DWORD *)(a1 + v44) = v38;
        goto LABEL_85;
      case 0x10u:
        v43 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLScoredTagID);
        objc_msgSend((id)a1, "addFractionalCohortMembership:", v43);
        if (!PBReaderPlaceMark()
          || (COMAPPLEFELDSPARPROTOCOLScoredTagIDReadFrom((uint64_t)v43, a2) & 1) == 0)
        {
          goto LABEL_87;
        }
        goto LABEL_69;
      case 0x11u:
        v43 = objc_alloc_init(NTPBAlternateHeadline);
        objc_storeStrong((id *)(a1 + 8), v43);
        if (!PBReaderPlaceMark() || !NTPBAlternateHeadlineReadFrom((uint64_t)v43, a2))
          goto LABEL_87;
        goto LABEL_69;
      case 0x12u:
        v43 = objc_alloc_init(NTPBIssueData);
        objc_storeStrong((id *)(a1 + 56), v43);
        if (!PBReaderPlaceMark() || (NTPBIssueDataReadFrom((uint64_t)v43, a2) & 1) == 0)
          goto LABEL_87;
        goto LABEL_69;
      case 0x13u:
        v43 = objc_alloc_init(NTPBIssueViewData);
        objc_storeStrong((id *)(a1 + 72), v43);
        if (!PBReaderPlaceMark() || (NTPBIssueViewDataReadFrom((uint64_t)v43, a2) & 1) == 0)
          goto LABEL_87;
        goto LABEL_69;
      case 0x14u:
        v43 = objc_alloc_init(NTPBIssueExposureData);
        objc_storeStrong((id *)(a1 + 64), v43);
        if (PBReaderPlaceMark() && (NTPBIssueExposureDataReadFrom((uint64_t)v43, a2) & 1) != 0)
        {
LABEL_69:
          PBReaderRecallMark();

LABEL_85:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_87:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_85;
    }
  }
}

uint64_t NTPBBundleIdMappingMissReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTodayResultOperationInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t result;
  NTPBSectionSlotCostInfo *v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        *(_DWORD *)(a1 + 132) |= 0x40u;
        v18 = *v3;
        v19 = *(_QWORD *)(a2 + v18);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v19 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v135 = 56;
        goto LABEL_218;
      case 2u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_DWORD *)(a1 + 132) |= 0x20000u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                v23 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_150:
        v131 = v23 != 0;
        v132 = 129;
        goto LABEL_199;
      case 3u:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_DWORD *)(a1 + 132) |= 0x8000u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                v30 = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v30 = 0;
LABEL_154:
        v131 = v30 != 0;
        v132 = 127;
        goto LABEL_199;
      case 4u:
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_DWORD *)(a1 + 132) |= 0x10000u;
        while (2)
        {
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                v37 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v37 = 0;
LABEL_158:
        v131 = v37 != 0;
        v132 = 128;
        goto LABEL_199;
      case 5u:
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 132) |= 0x100u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v15 = v43++ >= 9;
              if (v15)
              {
                v44 = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_162:
        v133 = 72;
        goto LABEL_204;
      case 6u:
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 132) |= 0x80u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v15 = v50++ >= 9;
              if (v15)
              {
                v44 = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_166:
        v133 = 64;
        goto LABEL_204;
      case 7u:
        v55 = 0;
        v56 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 132) |= 0x10u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
            *(_QWORD *)(a2 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v15 = v56++ >= 9;
              if (v15)
              {
                v44 = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_170:
        v133 = 40;
        goto LABEL_204;
      case 9u:
        v62 = objc_alloc_init(NTPBSectionSlotCostInfo);
        objc_storeStrong((id *)(a1 + 112), v62);
        if (!PBReaderPlaceMark() || !NTPBSectionSlotCostInfoReadFrom((uint64_t)v62, a2))
          goto LABEL_221;
        goto LABEL_133;
      case 0xAu:
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_DWORD *)(a1 + 132) |= 0x4000u;
        while (2)
        {
          v66 = *v3;
          v67 = *(_QWORD *)(a2 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v67);
            *(_QWORD *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v15 = v64++ >= 9;
              if (v15)
              {
                v65 = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v65 = 0;
LABEL_174:
        v131 = v65 != 0;
        v132 = 126;
        goto LABEL_199;
      case 0xBu:
        v70 = 0;
        v71 = 0;
        v72 = 0;
        *(_DWORD *)(a1 + 132) |= 0x1000u;
        while (2)
        {
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v74);
            *(_QWORD *)(a2 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v15 = v71++ >= 9;
              if (v15)
              {
                v72 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v72 = 0;
LABEL_178:
        v131 = v72 != 0;
        v132 = 124;
        goto LABEL_199;
      case 0xCu:
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 132) |= 0x40000u;
        while (2)
        {
          v80 = *v3;
          v81 = *(_QWORD *)(a2 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v81);
            *(_QWORD *)(a2 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v15 = v78++ >= 9;
              if (v15)
              {
                v79 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v79 = 0;
LABEL_182:
        v131 = v79 != 0;
        v132 = 130;
        goto LABEL_199;
      case 0xDu:
        PBReaderReadString();
        v84 = objc_claimAutoreleasedReturnValue();
        v85 = 80;
        goto LABEL_130;
      case 0xFu:
        v86 = 0;
        v87 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 132) |= 2u;
        while (2)
        {
          v88 = *v3;
          v89 = *(_QWORD *)(a2 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v89);
            *(_QWORD *)(a2 + v88) = v90;
            v44 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v15 = v87++ >= 9;
              if (v15)
              {
                v44 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_186:
        v133 = 16;
        goto LABEL_204;
      case 0x10u:
        v92 = 0;
        v93 = 0;
        v94 = 0;
        *(_DWORD *)(a1 + 132) |= 0x400u;
        while (2)
        {
          v95 = *v3;
          v96 = *(_QWORD *)(a2 + v95);
          v97 = v96 + 1;
          if (v96 == -1 || v97 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
            *(_QWORD *)(a2 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              v15 = v93++ >= 9;
              if (v15)
              {
                LODWORD(v94) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v94) = 0;
LABEL_190:
        v134 = 92;
        goto LABEL_209;
      case 0x11u:
        v99 = 0;
        v100 = 0;
        v94 = 0;
        *(_DWORD *)(a1 + 132) |= 0x200u;
        while (2)
        {
          v101 = *v3;
          v102 = *(_QWORD *)(a2 + v101);
          v103 = v102 + 1;
          if (v102 == -1 || v103 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v102);
            *(_QWORD *)(a2 + v101) = v103;
            v94 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v15 = v100++ >= 9;
              if (v15)
              {
                LODWORD(v94) = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v94) = 0;
LABEL_194:
        v134 = 88;
        goto LABEL_209;
      case 0x12u:
        v105 = 0;
        v106 = 0;
        v107 = 0;
        *(_DWORD *)(a1 + 132) |= 0x2000u;
        while (2)
        {
          v108 = *v3;
          v109 = *(_QWORD *)(a2 + v108);
          v110 = v109 + 1;
          if (v109 == -1 || v110 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v111 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v109);
            *(_QWORD *)(a2 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              v15 = v106++ >= 9;
              if (v15)
              {
                v107 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v107 = 0;
LABEL_198:
        v131 = v107 != 0;
        v132 = 125;
LABEL_199:
        *(_BYTE *)(a1 + v132) = v131;
        goto LABEL_219;
      case 0x13u:
        v112 = 0;
        v113 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 132) |= 1u;
        while (2)
        {
          v114 = *v3;
          v115 = *(_QWORD *)(a2 + v114);
          v116 = v115 + 1;
          if (v115 == -1 || v116 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v117 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v115);
            *(_QWORD *)(a2 + v114) = v116;
            v44 |= (unint64_t)(v117 & 0x7F) << v112;
            if (v117 < 0)
            {
              v112 += 7;
              v15 = v113++ >= 9;
              if (v15)
              {
                v44 = 0;
                goto LABEL_203;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v44 = 0;
LABEL_203:
        v133 = 8;
LABEL_204:
        *(_QWORD *)(a1 + v133) = v44;
        goto LABEL_219;
      case 0x14u:
        *(_DWORD *)(a1 + 132) |= 0x20u;
        v118 = *v3;
        v119 = *(_QWORD *)(a2 + v118);
        if (v119 <= 0xFFFFFFFFFFFFFFF7 && v119 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v119);
          *(_QWORD *)(a2 + v118) = v119 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v135 = 48;
        goto LABEL_218;
      case 0x15u:
        PBReaderReadString();
        v84 = objc_claimAutoreleasedReturnValue();
        v85 = 96;
LABEL_130:
        v120 = *(void **)(a1 + v85);
        *(_QWORD *)(a1 + v85) = v84;

        goto LABEL_219;
      case 0x16u:
        v62 = objc_alloc_init(NTPBTodayModuleContentRequest);
        objc_storeStrong((id *)(a1 + 104), v62);
        if (PBReaderPlaceMark() && (NTPBTodayModuleContentRequestReadFrom((uint64_t)v62, a2) & 1) != 0)
        {
LABEL_133:
          PBReaderRecallMark();

LABEL_219:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_221:

        return 0;
      case 0x17u:
        *(_DWORD *)(a1 + 132) |= 8u;
        v121 = *v3;
        v122 = *(_QWORD *)(a2 + v121);
        if (v122 <= 0xFFFFFFFFFFFFFFF7 && v122 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v122);
          *(_QWORD *)(a2 + v121) = v122 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v135 = 32;
        goto LABEL_218;
      case 0x18u:
        *(_DWORD *)(a1 + 132) |= 4u;
        v123 = *v3;
        v124 = *(_QWORD *)(a2 + v123);
        if (v124 <= 0xFFFFFFFFFFFFFFF7 && v124 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v124);
          *(_QWORD *)(a2 + v123) = v124 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v20 = 0;
        }
        v135 = 24;
LABEL_218:
        *(_QWORD *)(a1 + v135) = v20;
        goto LABEL_219;
      case 0x19u:
        v125 = 0;
        v126 = 0;
        v94 = 0;
        *(_DWORD *)(a1 + 132) |= 0x800u;
        while (2)
        {
          v127 = *v3;
          v128 = *(_QWORD *)(a2 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
            *(_QWORD *)(a2 + v127) = v129;
            v94 |= (unint64_t)(v130 & 0x7F) << v125;
            if (v130 < 0)
            {
              v125 += 7;
              v15 = v126++ >= 9;
              if (v15)
              {
                LODWORD(v94) = 0;
                goto LABEL_208;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v94) = 0;
LABEL_208:
        v134 = 120;
LABEL_209:
        *(_DWORD *)(a1 + v134) = v94;
        goto LABEL_219;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_219;
    }
  }
}

BOOL NTPBDiscoverMoreVideosInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int *v17;
  void *String;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) >= 3)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
      }
      else
      {
        v17 = off_24CD53500[(int)(v10 >> 3)];
        String = (void *)PBReaderReadString();

        *(_QWORD *)(a1 + *v17) = String;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL COMAPPLEFELDSPARPROTOCOLLIVERPOOLTopicCohortScoreReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList);
    objc_storeStrong((id *)(a1 + 8), v18);
    if (!PBReaderPlaceMark() || (COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortListReadFrom(v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBTelemetryReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t result;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  int *v39;
  int *v40;
  NTPBTelemetryNetworkEventGroup *v41;
  void *v42;
  uint64_t v43;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___NTPBJSONRecord__base;
  v8 = &OBJC_IVAR___NTPBJSONRecord__base;
  v9 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    while (1)
    {
      v13 = *v3;
      v14 = *(_QWORD *)(a2 + v13);
      if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
        break;
      v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
      *(_QWORD *)(a2 + v13) = v14 + 1;
      v12 |= (unint64_t)(v15 & 0x7F) << v10;
      if ((v15 & 0x80) == 0)
        goto LABEL_12;
      v10 += 7;
      v16 = v11++ >= 9;
      if (v16)
      {
        v12 = 0;
        v17 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v17 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v12 = 0;
LABEL_14:
    if (v17 || (v12 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v12 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = v7[601];
        goto LABEL_58;
      case 2u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = v8[602];
        goto LABEL_58;
      case 3u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 120;
        goto LABEL_58;
      case 4u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 24;
        goto LABEL_58;
      case 5u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 144) |= 1u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v25);
            *(_QWORD *)(a2 + v24) = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              v16 = v22++ >= 9;
              if (v16)
              {
                v23 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
LABEL_64:
        *(_QWORD *)(a1 + 8) = v23;
        goto LABEL_59;
      case 7u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 48;
        goto LABEL_58;
      case 8u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 72;
        goto LABEL_58;
      case 9u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 32;
        goto LABEL_58;
      case 0xAu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 80;
        goto LABEL_58;
      case 0xBu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 88;
        goto LABEL_58;
      case 0xCu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 104;
        goto LABEL_58;
      case 0xDu:
        v28 = 0;
        v29 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 144) |= 4u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 == -1 || v32 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if (v33 < 0)
            {
              v28 += 7;
              v16 = v29++ >= 9;
              if (v16)
              {
                LODWORD(v30) = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_68:
        v43 = 112;
        goto LABEL_73;
      case 0xEu:
        v34 = 0;
        v35 = 0;
        v30 = 0;
        *(_BYTE *)(a1 + 144) |= 2u;
        while (2)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 1;
            v30 |= (unint64_t)(v38 & 0x7F) << v34;
            if (v38 < 0)
            {
              v34 += 7;
              v16 = v35++ >= 9;
              if (v16)
              {
                LODWORD(v30) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v30) = 0;
LABEL_72:
        v43 = 40;
LABEL_73:
        *(_DWORD *)(a1 + v43) = v30;
        goto LABEL_59;
      case 0xFu:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 128;
        goto LABEL_58;
      case 0x10u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 136;
        goto LABEL_58;
      case 0x11u:
        v39 = v8;
        v40 = v7;
        v41 = objc_alloc_init(NTPBTelemetryNetworkEventGroup);
        objc_msgSend((id)a1, "addNetworkEventGroups:", v41);
        if (PBReaderPlaceMark() && (NTPBTelemetryNetworkEventGroupReadFrom((uint64_t)v41, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v7 = v40;
          v8 = v39;
LABEL_59:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0x12u:
        PBReaderReadString();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = 16;
LABEL_58:
        v42 = *(void **)(a1 + v20);
        *(_QWORD *)(a1 + v20) = v19;

        goto LABEL_59;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_59;
    }
  }
}

BOOL NTPBPublisherWebAccessOptInRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_27;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_27;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_27;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_27:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t COMAPPLEFELDSPARPROTOCOLANALYTICSEVENTSIssueViewContextDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_31:
        *(_DWORD *)(a1 + 8) = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t NTPBPrefetchConfigReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 36) |= 8u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_60;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_62;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_62:
          v56 = v20 != 0;
          v57 = 32;
          goto LABEL_75;
        case 2u:
          *(_BYTE *)(a1 + 36) |= 1u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          *(_QWORD *)(a1 + 8) = v28;
          continue;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 36) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            v34 = v33 + 1;
            if (v33 == -1 || v34 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                v15 = v30++ >= 9;
                if (v15)
                {
                  v31 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v31 = 0;
LABEL_66:
          v56 = v31 != 0;
          v57 = 34;
          goto LABEL_75;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (2)
          {
            v39 = *v3;
            v40 = *(_QWORD *)(a2 + v39);
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
              *(_QWORD *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                v15 = v37++ >= 9;
                if (v15)
                {
                  v38 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v38 = 0;
LABEL_70:
          v58 = 16;
          goto LABEL_80;
        case 5u:
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_BYTE *)(a1 + 36) |= 0x10u;
          while (2)
          {
            v46 = *v3;
            v47 = *(_QWORD *)(a2 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v47);
              *(_QWORD *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v15 = v44++ >= 9;
                if (v15)
                {
                  v45 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v45 = 0;
LABEL_74:
          v56 = v45 != 0;
          v57 = 33;
LABEL_75:
          *(_BYTE *)(a1 + v57) = v56;
          continue;
        case 6u:
          v50 = 0;
          v51 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 36) |= 4u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v52 = *v3;
        v53 = *(_QWORD *)(a2 + v52);
        v54 = v53 + 1;
        if (v53 == -1 || v54 > *(_QWORD *)(a2 + *v4))
          break;
        v55 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
        *(_QWORD *)(a2 + v52) = v54;
        v38 |= (unint64_t)(v55 & 0x7F) << v50;
        if ((v55 & 0x80) == 0)
          goto LABEL_77;
        v50 += 7;
        v15 = v51++ >= 9;
        if (v15)
        {
          v38 = 0;
          goto LABEL_79;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_77:
      if (*(_BYTE *)(a2 + *v5))
        v38 = 0;
LABEL_79:
      v58 = 24;
LABEL_80:
      *(_QWORD *)(a1 + v58) = v38;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

