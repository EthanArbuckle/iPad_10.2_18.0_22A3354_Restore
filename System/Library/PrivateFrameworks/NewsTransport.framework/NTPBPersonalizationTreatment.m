@implementation NTPBPersonalizationTreatment

- (void)setTreatmentId:(int64_t)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x8000000000000uLL;
  self->_treatmentId = a3;
}

- (void)setHasTreatmentId:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTreatmentId
{
  return (*((_QWORD *)&self->_has + 4) >> 51) & 1;
}

- (void)setDecayFactor:(double)a3
{
  *(_QWORD *)&self->_has |= 0x2000000000000000uLL;
  self->_decayFactor = a3;
}

- (void)setHasDecayFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasDecayFactor
{
  return (*(_QWORD *)&self->_has >> 61) & 1;
}

- (void)setBaselineImpressionPrior:(double)a3
{
  *(_QWORD *)&self->_has |= 0x2000000000uLL;
  self->_baselineImpressionPrior = a3;
}

- (void)setHasBaselineImpressionPrior:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasBaselineImpressionPrior
{
  return (*(_QWORD *)&self->_has >> 37) & 1;
}

- (void)setBaselineRatePrior:(double)a3
{
  *(_QWORD *)&self->_has |= 0x4000000000uLL;
  self->_baselineRatePrior = a3;
}

- (void)setHasBaselineRatePrior:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasBaselineRatePrior
{
  return (*(_QWORD *)&self->_has >> 38) & 1;
}

- (void)setFeatureImpressionPrior:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x20000uLL;
  self->_featureImpressionPrior = a3;
}

- (void)setHasFeatureImpressionPrior:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasFeatureImpressionPrior
{
  return (*((_QWORD *)&self->_has + 1) >> 17) & 1;
}

- (void)setGlobalScoreRankingEnabled:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x40u;
  self->_globalScoreRankingEnabled = a3;
}

- (void)setHasGlobalScoreRankingEnabled:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 64;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFBF | v3;
}

- (BOOL)hasGlobalScoreRankingEnabled
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 6) & 1;
}

- (void)setGlobalScoreBump:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x800000uLL;
  self->_globalScoreBump = a3;
}

- (void)setHasGlobalScoreBump:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasGlobalScoreBump
{
  return (*((_QWORD *)&self->_has + 1) >> 23) & 1;
}

- (void)setSubscriptionVoteCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x20000000000000uLL;
  self->_subscriptionVoteCoefficient = a3;
}

- (void)setHasSubscriptionVoteCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscriptionVoteCoefficient
{
  return (*((_QWORD *)&self->_has + 3) >> 53) & 1;
}

- (void)setPersonalizationCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x40000000000uLL;
  self->_personalizationCoefficient = a3;
}

- (void)setHasPersonalizationCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasPersonalizationCoefficient
{
  return (*((_QWORD *)&self->_has + 2) >> 42) & 1;
}

- (void)setGlobalScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x1000000uLL;
  self->_globalScoreCoefficient = a3;
}

- (void)setHasGlobalScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreCoefficient
{
  return (*((_QWORD *)&self->_has + 1) >> 24) & 1;
}

- (void)setPublisherTopicIdEventCountMinimum:(int64_t)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x10uLL;
  self->_publisherTopicIdEventCountMinimum = a3;
}

- (void)setHasPublisherTopicIdEventCountMinimum:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasPublisherTopicIdEventCountMinimum
{
  return (*((_QWORD *)&self->_has + 3) >> 4) & 1;
}

- (void)setPresentationImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x400000000000000uLL;
  self->_presentationImpressionValue = a3;
}

- (void)setHasPresentationImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPresentationImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 58) & 1;
}

- (void)setHeavyClickImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x10000000000uLL;
  self->_heavyClickImpressionValue = a3;
}

- (void)setHasHeavyClickImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeavyClickImpressionValue
{
  return (*((_QWORD *)&self->_has + 1) >> 40) & 1;
}

- (void)setLikeImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x1000000000000000uLL;
  self->_likeImpressionValue = a3;
}

- (void)setHasLikeImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasLikeImpressionValue
{
  return (*((_QWORD *)&self->_has + 1) >> 60) & 1;
}

- (void)setShareImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x10000000000uLL;
  self->_shareImpressionValue = a3;
}

- (void)setHasShareImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasShareImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 40) & 1;
}

- (void)setSavedImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x20000000uLL;
  self->_savedImpressionValue = a3;
}

- (void)setHasSavedImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasSavedImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 29) & 1;
}

- (void)setSubscribeImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x200000000000uLL;
  self->_subscribeImpressionValue = a3;
}

- (void)setHasSubscribeImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribeImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 45) & 1;
}

- (void)setTappedImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x800uLL;
  self->_tappedImpressionValue = a3;
}

- (void)setHasTappedImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasTappedImpressionValue
{
  return (*((_QWORD *)&self->_has + 4) >> 11) & 1;
}

- (void)setWeakClickImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x2000000uLL;
  self->_weakClickImpressionValue = a3;
}

- (void)setHasWeakClickImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasWeakClickImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 25) & 1;
}

- (void)setUnsubscribeImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x800000000000000uLL;
  self->_unsubscribeImpressionValue = a3;
}

- (void)setHasUnsubscribeImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnsubscribeImpressionValue
{
  return (*((_QWORD *)&self->_has + 4) >> 59) & 1;
}

- (void)setVisitImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x200000uLL;
  self->_visitImpressionValue = a3;
}

- (void)setHasVisitImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasVisitImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 21) & 1;
}

- (void)setDislikeImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 2uLL;
  self->_dislikeImpressionValue = a3;
}

- (void)setHasDislikeImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasDislikeImpressionValue
{
  return (*((_QWORD *)&self->_has + 1) >> 1) & 1;
}

- (void)setPresentationClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x100000000000000uLL;
  self->_presentationClickValue = a3;
}

- (void)setHasPresentationClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPresentationClickValue
{
  return HIBYTE(*((_QWORD *)&self->_has + 2)) & 1;
}

- (void)setHeavyClickClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x4000000000uLL;
  self->_heavyClickClickValue = a3;
}

- (void)setHasHeavyClickClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasHeavyClickClickValue
{
  return (*((_QWORD *)&self->_has + 1) >> 38) & 1;
}

- (void)setLikeClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x400000000000000uLL;
  self->_likeClickValue = a3;
}

- (void)setHasLikeClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasLikeClickValue
{
  return (*((_QWORD *)&self->_has + 1) >> 58) & 1;
}

- (void)setShareClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x4000000000uLL;
  self->_shareClickValue = a3;
}

- (void)setHasShareClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasShareClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 38) & 1;
}

- (void)setSavedClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x8000000uLL;
  self->_savedClickValue = a3;
}

- (void)setHasSavedClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasSavedClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 27) & 1;
}

- (void)setSubscribeClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x80000000000uLL;
  self->_subscribeClickValue = a3;
}

- (void)setHasSubscribeClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribeClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 43) & 1;
}

- (void)setTappedClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x200uLL;
  self->_tappedClickValue = a3;
}

- (void)setHasTappedClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasTappedClickValue
{
  return (*((_QWORD *)&self->_has + 4) >> 9) & 1;
}

- (void)setWeakClickClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x800000uLL;
  self->_weakClickClickValue = a3;
}

- (void)setHasWeakClickClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasWeakClickClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 23) & 1;
}

- (void)setUnsubscribeClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x200000000000000uLL;
  self->_unsubscribeClickValue = a3;
}

- (void)setHasUnsubscribeClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnsubscribeClickValue
{
  return (*((_QWORD *)&self->_has + 4) >> 57) & 1;
}

- (void)setVisitClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x80000uLL;
  self->_visitClickValue = a3;
}

- (void)setHasVisitClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasVisitClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 19) & 1;
}

- (void)setDislikeClickValue:(double)a3
{
  *(_QWORD *)&self->_has |= 0x8000000000000000;
  self->_dislikeClickValue = a3;
}

- (void)setHasDislikeClickValue:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = v3 & 0x8000000000000000 | *(_QWORD *)&self->_has & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasDislikeClickValue
{
  return *(_QWORD *)&self->_has >> 63;
}

- (void)setHourlyFlowRateMinimum:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x10000000000000uLL;
  self->_hourlyFlowRateMinimum = a3;
}

- (void)setHasHourlyFlowRateMinimum:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateMinimum
{
  return (*((_QWORD *)&self->_has + 1) >> 52) & 1;
}

- (void)setHourlyFlowRateSubscriptionCountBuffer:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x40000000000000uLL;
  self->_hourlyFlowRateSubscriptionCountBuffer = a3;
}

- (void)setHasHourlyFlowRateSubscriptionCountBuffer:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateSubscriptionCountBuffer
{
  return (*((_QWORD *)&self->_has + 1) >> 54) & 1;
}

- (void)setHourlyFlowRateDampeningFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x2000000000000uLL;
  self->_hourlyFlowRateDampeningFactor = a3;
}

- (void)setHasHourlyFlowRateDampeningFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateDampeningFactor
{
  return (*((_QWORD *)&self->_has + 1) >> 49) & 1;
}

- (void)setDemocratizationFactor:(double)a3
{
  *(_QWORD *)&self->_has |= 0x4000000000000000uLL;
  self->_democratizationFactor = a3;
}

- (void)setHasDemocratizationFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasDemocratizationFactor
{
  return (*(_QWORD *)&self->_has >> 62) & 1;
}

- (void)setSliceTimeInterval:(int64_t)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x40000000000uLL;
  self->_sliceTimeInterval = a3;
}

- (void)setHasSliceTimeInterval:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasSliceTimeInterval
{
  return (*((_QWORD *)&self->_has + 3) >> 42) & 1;
}

- (void)setFlowRateDampeningSliceCount:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x40000uLL;
  self->_flowRateDampeningSliceCount = a3;
}

- (void)setHasFlowRateDampeningSliceCount:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasFlowRateDampeningSliceCount
{
  return (*((_QWORD *)&self->_has + 1) >> 18) & 1;
}

- (void)setFlowRateMinimumDampeningFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x200000uLL;
  self->_flowRateMinimumDampeningFactor = a3;
}

- (void)setHasFlowRateMinimumDampeningFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasFlowRateMinimumDampeningFactor
{
  return (*((_QWORD *)&self->_has + 1) >> 21) & 1;
}

- (void)setHalfLifeCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x2000000000uLL;
  self->_halfLifeCoefficient = a3;
}

- (void)setHasHalfLifeCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasHalfLifeCoefficient
{
  return (*((_QWORD *)&self->_has + 1) >> 37) & 1;
}

- (void)setDiversificationPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x10uLL;
  self->_diversificationPenalty = a3;
}

- (void)setHasDiversificationPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasDiversificationPenalty
{
  return (*((_QWORD *)&self->_has + 1) >> 4) & 1;
}

- (void)setHeavyClickMinimumDuration:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x40000000000uLL;
  self->_heavyClickMinimumDuration = a3;
}

- (void)setHasHeavyClickMinimumDuration:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeavyClickMinimumDuration
{
  return (*((_QWORD *)&self->_has + 1) >> 42) & 1;
}

- (void)setSubscriptionRelatedImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x8000000000000uLL;
  self->_subscriptionRelatedImpressionValue = a3;
}

- (void)setHasSubscriptionRelatedImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscriptionRelatedImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 51) & 1;
}

- (void)setSubscriptionRelatedClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x2000000000000uLL;
  self->_subscriptionRelatedClickValue = a3;
}

- (void)setHasSubscriptionRelatedClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscriptionRelatedClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 49) & 1;
}

- (void)setHourlyFlowRatePerSubscription:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x20000000000000uLL;
  self->_hourlyFlowRatePerSubscription = a3;
}

- (void)setHasHourlyFlowRatePerSubscription:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRatePerSubscription
{
  return (*((_QWORD *)&self->_has + 1) >> 53) & 1;
}

- (void)setExtraHeadlinesToShowTheUser:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x10000uLL;
  self->_extraHeadlinesToShowTheUser = a3;
}

- (void)setHasExtraHeadlinesToShowTheUser:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasExtraHeadlinesToShowTheUser
{
  return (*((_QWORD *)&self->_has + 1) >> 16) & 1;
}

- (void)setFlowRateDegreeOfDynamism:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x100000uLL;
  self->_flowRateDegreeOfDynamism = a3;
}

- (void)setHasFlowRateDegreeOfDynamism:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasFlowRateDegreeOfDynamism
{
  return (*((_QWORD *)&self->_has + 1) >> 20) & 1;
}

- (void)setFlowRateDecayFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x80000uLL;
  self->_flowRateDecayFactor = a3;
}

- (void)setHasFlowRateDecayFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasFlowRateDecayFactor
{
  return (*((_QWORD *)&self->_has + 1) >> 19) & 1;
}

- (void)setFlowRatePriorWeight:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x400000uLL;
  self->_flowRatePriorWeight = a3;
}

- (void)setHasFlowRatePriorWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasFlowRatePriorWeight
{
  return (*((_QWORD *)&self->_has + 1) >> 22) & 1;
}

- (void)setPresentationImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x800000000000000uLL;
  self->_presentationImpressionValueBaseline = a3;
}

- (void)setHasPresentationImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPresentationImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 59) & 1;
}

- (void)setHeavyClickImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x20000000000uLL;
  self->_heavyClickImpressionValueBaseline = a3;
}

- (void)setHasHeavyClickImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeavyClickImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 41) & 1;
}

- (void)setLikeImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x2000000000000000uLL;
  self->_likeImpressionValueBaseline = a3;
}

- (void)setHasLikeImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasLikeImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 61) & 1;
}

- (void)setShareImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x20000000000uLL;
  self->_shareImpressionValueBaseline = a3;
}

- (void)setHasShareImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasShareImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 41) & 1;
}

- (void)setSavedImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x40000000uLL;
  self->_savedImpressionValueBaseline = a3;
}

- (void)setHasSavedImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasSavedImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 30) & 1;
}

- (void)setSubscribeImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x400000000000uLL;
  self->_subscribeImpressionValueBaseline = a3;
}

- (void)setHasSubscribeImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribeImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 46) & 1;
}

- (void)setTappedImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x1000uLL;
  self->_tappedImpressionValueBaseline = a3;
}

- (void)setHasTappedImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasTappedImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 4) >> 12) & 1;
}

- (void)setWeakClickImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x4000000uLL;
  self->_weakClickImpressionValueBaseline = a3;
}

- (void)setHasWeakClickImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasWeakClickImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 5) >> 26) & 1;
}

- (void)setUnsubscribeImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x1000000000000000uLL;
  self->_unsubscribeImpressionValueBaseline = a3;
}

- (void)setHasUnsubscribeImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnsubscribeImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 4) >> 60) & 1;
}

- (void)setVisitImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x400000uLL;
  self->_visitImpressionValueBaseline = a3;
}

- (void)setHasVisitImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasVisitImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 5) >> 22) & 1;
}

- (void)setDislikeImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 4uLL;
  self->_dislikeImpressionValueBaseline = a3;
}

- (void)setHasDislikeImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasDislikeImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 2) & 1;
}

- (void)setSubscriptionRelatedImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x10000000000000uLL;
  self->_subscriptionRelatedImpressionValueBaseline = a3;
}

- (void)setHasSubscriptionRelatedImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscriptionRelatedImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 52) & 1;
}

- (void)setPresentationClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x200000000000000uLL;
  self->_presentationClickValueBaseline = a3;
}

- (void)setHasPresentationClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPresentationClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 57) & 1;
}

- (void)setHeavyClickClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x8000000000uLL;
  self->_heavyClickClickValueBaseline = a3;
}

- (void)setHasHeavyClickClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasHeavyClickClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 39) & 1;
}

- (void)setLikeClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x800000000000000uLL;
  self->_likeClickValueBaseline = a3;
}

- (void)setHasLikeClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasLikeClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 59) & 1;
}

- (void)setShareClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x8000000000uLL;
  self->_shareClickValueBaseline = a3;
}

- (void)setHasShareClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasShareClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 39) & 1;
}

- (void)setSavedClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x10000000uLL;
  self->_savedClickValueBaseline = a3;
}

- (void)setHasSavedClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasSavedClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 28) & 1;
}

- (void)setSubscribeClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x100000000000uLL;
  self->_subscribeClickValueBaseline = a3;
}

- (void)setHasSubscribeClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribeClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 44) & 1;
}

- (void)setTappedClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x400uLL;
  self->_tappedClickValueBaseline = a3;
}

- (void)setHasTappedClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasTappedClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 4) >> 10) & 1;
}

- (void)setWeakClickClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x1000000uLL;
  self->_weakClickClickValueBaseline = a3;
}

- (void)setHasWeakClickClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasWeakClickClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 5) >> 24) & 1;
}

- (void)setUnsubscribeClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x400000000000000uLL;
  self->_unsubscribeClickValueBaseline = a3;
}

- (void)setHasUnsubscribeClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnsubscribeClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 4) >> 58) & 1;
}

- (void)setVisitClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x100000uLL;
  self->_visitClickValueBaseline = a3;
}

- (void)setHasVisitClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasVisitClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 5) >> 20) & 1;
}

- (void)setDislikeClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 1uLL;
  self->_dislikeClickValueBaseline = a3;
}

- (void)setHasDislikeClickValueBaseline:(BOOL)a3
{
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasDislikeClickValueBaseline
{
  return *((_DWORD *)&self->_has + 2) & 1;
}

- (void)setSubscriptionRelatedClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x4000000000000uLL;
  self->_subscriptionRelatedClickValueBaseline = a3;
}

- (void)setHasSubscriptionRelatedClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscriptionRelatedClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 50) & 1;
}

- (void)setExistingSubscriptionImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x100uLL;
  self->_existingSubscriptionImpressionValue = a3;
}

- (void)setHasExistingSubscriptionImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasExistingSubscriptionImpressionValue
{
  return (*((_QWORD *)&self->_has + 1) >> 8) & 1;
}

- (void)setExistingSubscriptionClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x40uLL;
  self->_existingSubscriptionClickValue = a3;
}

- (void)setHasExistingSubscriptionClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasExistingSubscriptionClickValue
{
  return (*((_QWORD *)&self->_has + 1) >> 6) & 1;
}

- (void)setExistingSubscriptionImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x200uLL;
  self->_existingSubscriptionImpressionValueBaseline = a3;
}

- (void)setHasExistingSubscriptionImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasExistingSubscriptionImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 9) & 1;
}

- (void)setExistingSubscriptionClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x80uLL;
  self->_existingSubscriptionClickValueBaseline = a3;
}

- (void)setHasExistingSubscriptionClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasExistingSubscriptionClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 7) & 1;
}

- (void)setExistingSubscriptionRelatedImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x1000uLL;
  self->_existingSubscriptionRelatedImpressionValue = a3;
}

- (void)setHasExistingSubscriptionRelatedImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasExistingSubscriptionRelatedImpressionValue
{
  return (*((_QWORD *)&self->_has + 1) >> 12) & 1;
}

- (void)setExistingSubscriptionRelatedClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x400uLL;
  self->_existingSubscriptionRelatedClickValue = a3;
}

- (void)setHasExistingSubscriptionRelatedClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasExistingSubscriptionRelatedClickValue
{
  return (*((_QWORD *)&self->_has + 1) >> 10) & 1;
}

- (void)setExistingSubscriptionRelatedImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x2000uLL;
  self->_existingSubscriptionRelatedImpressionValueBaseline = a3;
}

- (void)setHasExistingSubscriptionRelatedImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasExistingSubscriptionRelatedImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 13) & 1;
}

- (void)setExistingSubscriptionRelatedClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x800uLL;
  self->_existingSubscriptionRelatedClickValueBaseline = a3;
}

- (void)setHasExistingSubscriptionRelatedClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasExistingSubscriptionRelatedClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 1) >> 11) & 1;
}

- (void)setGlobalScoreStretchingFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x8000000uLL;
  self->_globalScoreStretchingFactor = a3;
}

- (void)setHasGlobalScoreStretchingFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreStretchingFactor
{
  return (*((_QWORD *)&self->_has + 1) >> 27) & 1;
}

- (void)setHourlyFlowRateFloor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x4000000000000uLL;
  self->_hourlyFlowRateFloor = a3;
}

- (void)setHasHourlyFlowRateFloor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateFloor
{
  return (*((_QWORD *)&self->_has + 1) >> 50) & 1;
}

- (void)setHourlyFlowRateCeiling:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x1000000000000uLL;
  self->_hourlyFlowRateCeiling = a3;
}

- (void)setHasHourlyFlowRateCeiling:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateCeiling
{
  return HIWORD(*((_QWORD *)&self->_has + 1)) & 1;
}

- (void)setSaturatedSubscriptionCountFactor:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x4000000uLL;
  self->_saturatedSubscriptionCountFactor = a3;
}

- (void)setHasSaturatedSubscriptionCountFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasSaturatedSubscriptionCountFactor
{
  return (*((_QWORD *)&self->_has + 3) >> 26) & 1;
}

- (void)setPublisherDiversificationPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x4000000000000000uLL;
  self->_publisherDiversificationPenalty = a3;
}

- (void)setHasPublisherDiversificationPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPublisherDiversificationPenalty
{
  return (*((_QWORD *)&self->_has + 2) >> 62) & 1;
}

- (void)setHardAgeBeforePublisherDiversification:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x200u;
  self->_hardAgeBeforePublisherDiversification = a3;
}

- (void)setHasHardAgeBeforePublisherDiversification:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 512;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFDFF | v3;
}

- (BOOL)hasHardAgeBeforePublisherDiversification
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 9) & 1;
}

- (void)setHourlyFlowRateAlpha:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x400000000000uLL;
  self->_hourlyFlowRateAlpha = a3;
}

- (void)setHasHourlyFlowRateAlpha:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateAlpha
{
  return (*((_QWORD *)&self->_has + 1) >> 46) & 1;
}

- (void)setHourlyFlowRateBeta:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x800000000000uLL;
  self->_hourlyFlowRateBeta = a3;
}

- (void)setHasHourlyFlowRateBeta:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateBeta
{
  return (*((_QWORD *)&self->_has + 1) >> 47) & 1;
}

- (void)setHourlyFlowRateGamma:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x8000000000000uLL;
  self->_hourlyFlowRateGamma = a3;
}

- (void)setHasHourlyFlowRateGamma:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHourlyFlowRateGamma
{
  return (*((_QWORD *)&self->_has + 1) >> 51) & 1;
}

- (void)setRecommendationPresentationFeedImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x2000uLL;
  self->_recommendationPresentationFeedImpressionValue = a3;
}

- (void)setHasRecommendationPresentationFeedImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasRecommendationPresentationFeedImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 13) & 1;
}

- (void)setRecommendationPresentationFeedClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x800uLL;
  self->_recommendationPresentationFeedClickValue = a3;
}

- (void)setHasRecommendationPresentationFeedClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasRecommendationPresentationFeedClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 11) & 1;
}

- (void)setRecommendationPresentationExploreImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x200uLL;
  self->_recommendationPresentationExploreImpressionValue = a3;
}

- (void)setHasRecommendationPresentationExploreImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasRecommendationPresentationExploreImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 9) & 1;
}

- (void)setRecommendationPresentationExploreClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x80uLL;
  self->_recommendationPresentationExploreClickValue = a3;
}

- (void)setHasRecommendationPresentationExploreClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasRecommendationPresentationExploreClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 7) & 1;
}

- (void)setRecommendationPresentationFeedImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x4000uLL;
  self->_recommendationPresentationFeedImpressionValueBaseline = a3;
}

- (void)setHasRecommendationPresentationFeedImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasRecommendationPresentationFeedImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 14) & 1;
}

- (void)setRecommendationPresentationFeedClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x1000uLL;
  self->_recommendationPresentationFeedClickValueBaseline = a3;
}

- (void)setHasRecommendationPresentationFeedClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasRecommendationPresentationFeedClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 12) & 1;
}

- (void)setRecommendationPresentationExploreImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x400uLL;
  self->_recommendationPresentationExploreImpressionValueBaseline = a3;
}

- (void)setHasRecommendationPresentationExploreImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasRecommendationPresentationExploreImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 10) & 1;
}

- (void)setRecommendationPresentationExploreClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x100uLL;
  self->_recommendationPresentationExploreClickValueBaseline = a3;
}

- (void)setHasRecommendationPresentationExploreClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasRecommendationPresentationExploreClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 3) >> 8) & 1;
}

- (void)setPremiumSubscriptionActivationImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x40000000000000uLL;
  self->_premiumSubscriptionActivationImpressionValue = a3;
}

- (void)setHasPremiumSubscriptionActivationImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPremiumSubscriptionActivationImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 54) & 1;
}

- (void)setPremiumSubscriptionActivationClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x10000000000000uLL;
  self->_premiumSubscriptionActivationClickValue = a3;
}

- (void)setHasPremiumSubscriptionActivationClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPremiumSubscriptionActivationClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 52) & 1;
}

- (void)setPremiumSubscriptionActivationImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x80000000000000uLL;
  self->_premiumSubscriptionActivationImpressionValueBaseline = a3;
}

- (void)setHasPremiumSubscriptionActivationImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPremiumSubscriptionActivationImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 55) & 1;
}

- (void)setPremiumSubscriptionActivationClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x20000000000000uLL;
  self->_premiumSubscriptionActivationClickValueBaseline = a3;
}

- (void)setHasPremiumSubscriptionActivationClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPremiumSubscriptionActivationClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 53) & 1;
}

- (void)setLowQualityArticleRatio:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x4000000000000000uLL;
  self->_lowQualityArticleRatio = a3;
}

- (void)setHasLowQualityArticleRatio:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasLowQualityArticleRatio
{
  return (*((_QWORD *)&self->_has + 1) >> 62) & 1;
}

- (void)setMinClusterSize:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x400uLL;
  self->_minClusterSize = a3;
}

- (void)setHasMinClusterSize:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasMinClusterSize
{
  return (*((_QWORD *)&self->_has + 2) >> 10) & 1;
}

- (void)setMaxClusterSize:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 4uLL;
  self->_maxClusterSize = a3;
}

- (void)setHasMaxClusterSize:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasMaxClusterSize
{
  return (*((_QWORD *)&self->_has + 2) >> 2) & 1;
}

- (void)setMaxArticleCombos:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x8000000000000000;
  self->_maxArticleCombos = a3;
}

- (void)setHasMaxArticleCombos:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = v3 & 0x8000000000000000 | *((_QWORD *)&self->_has + 1) & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasMaxArticleCombos
{
  return *((_QWORD *)&self->_has + 1) >> 63;
}

- (void)setHeuristicSampleSize:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x80000000000uLL;
  self->_heuristicSampleSize = a3;
}

- (void)setHasHeuristicSampleSize:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicSampleSize
{
  return (*((_QWORD *)&self->_has + 1) >> 43) & 1;
}

- (void)setSearchBranchMultiplier:(int64_t)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x400000000uLL;
  self->_searchBranchMultiplier = a3;
}

- (void)setHasSearchBranchMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchMultiplier
{
  return (*((_QWORD *)&self->_has + 3) >> 34) & 1;
}

- (void)setSearchBranchDecay:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x80000000uLL;
  self->_searchBranchDecay = a3;
}

- (void)setHasSearchBranchDecay:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchDecay
{
  return (*((_QWORD *)&self->_has + 3) >> 31) & 1;
}

- (void)setSearchTimeLimit:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x2000000000uLL;
  self->_searchTimeLimit = a3;
}

- (void)setHasSearchTimeLimit:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasSearchTimeLimit
{
  return (*((_QWORD *)&self->_has + 3) >> 37) & 1;
}

- (int)tagOrder
{
  if ((*((_WORD *)&self->_has + 24) & 2) != 0)
    return self->_tagOrder;
  else
    return 0;
}

- (void)setTagOrder:(int)a3
{
  *((_WORD *)&self->_has + 24) |= 2u;
  self->_tagOrder = a3;
}

- (void)setHasTagOrder:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 2;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFFD | v3;
}

- (BOOL)hasTagOrder
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 1) & 1;
}

- (int)moveOrder
{
  if ((*((_QWORD *)&self->_has + 5) & 0x400000000000000) != 0)
    return self->_moveOrder;
  else
    return 0;
}

- (void)setMoveOrder:(int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x400000000000000uLL;
  self->_moveOrder = a3;
}

- (void)setHasMoveOrder:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMoveOrder
{
  return (*((_QWORD *)&self->_has + 5) >> 58) & 1;
}

- (int)heuristicOrder
{
  if ((*((_QWORD *)&self->_has + 5) & 0x20000000000) != 0)
    return self->_heuristicOrder;
  else
    return 0;
}

- (void)setHeuristicOrder:(int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x20000000000uLL;
  self->_heuristicOrder = a3;
}

- (void)setHasHeuristicOrder:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicOrder
{
  return (*((_QWORD *)&self->_has + 5) >> 41) & 1;
}

- (int)heuristicOption
{
  if ((*((_QWORD *)&self->_has + 5) & 0x4000000000) != 0)
    return self->_heuristicOption;
  else
    return 0;
}

- (void)setHeuristicOption:(int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x4000000000uLL;
  self->_heuristicOption = a3;
}

- (void)setHasHeuristicOption:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicOption
{
  return (*((_QWORD *)&self->_has + 5) >> 38) & 1;
}

- (void)setMinClusterSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x10000000000000uLL;
  self->_minClusterSizeIPhone = a3;
}

- (void)setHasMinClusterSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinClusterSizeIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 52) & 1;
}

- (void)setMaxClusterSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x100000000000uLL;
  self->_maxClusterSizeIPhone = a3;
}

- (void)setHasMaxClusterSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxClusterSizeIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 44) & 1;
}

- (void)setMinIdealClusterSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x100000000000000uLL;
  self->_minIdealClusterSizeIPhone = a3;
}

- (void)setHasMinIdealClusterSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinIdealClusterSizeIPhone
{
  return HIBYTE(*((_QWORD *)&self->_has + 5)) & 1;
}

- (void)setMaxIdealClusterSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x1000000000000uLL;
  self->_maxIdealClusterSizeIPhone = a3;
}

- (void)setHasMaxIdealClusterSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxIdealClusterSizeIPhone
{
  return HIWORD(*((_QWORD *)&self->_has + 5)) & 1;
}

- (void)setMinClusterSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x4000000000000uLL;
  self->_minClusterSizeIPad = a3;
}

- (void)setHasMinClusterSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinClusterSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 50) & 1;
}

- (void)setMaxClusterSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x40000000000uLL;
  self->_maxClusterSizeIPad = a3;
}

- (void)setHasMaxClusterSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxClusterSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 42) & 1;
}

- (void)setMinIdealClusterSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x40000000000000uLL;
  self->_minIdealClusterSizeIPad = a3;
}

- (void)setHasMinIdealClusterSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinIdealClusterSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 54) & 1;
}

- (void)setMaxIdealClusterSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x400000000000uLL;
  self->_maxIdealClusterSizeIPad = a3;
}

- (void)setHasMaxIdealClusterSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxIdealClusterSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 46) & 1;
}

- (void)setMaxArticleCombosIPhone:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 2uLL;
  self->_maxArticleCombosIPhone = a3;
}

- (void)setHasMaxArticleCombosIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasMaxArticleCombosIPhone
{
  return (*((_QWORD *)&self->_has + 2) >> 1) & 1;
}

- (void)setMaxArticleCombosIPad:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 1uLL;
  self->_maxArticleCombosIPad = a3;
}

- (void)setHasMaxArticleCombosIPad:(BOOL)a3
{
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasMaxArticleCombosIPad
{
  return *((_DWORD *)&self->_has + 4) & 1;
}

- (void)setHeuristicSampleSizeIPhone:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x200000000000uLL;
  self->_heuristicSampleSizeIPhone = a3;
}

- (void)setHasHeuristicSampleSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicSampleSizeIPhone
{
  return (*((_QWORD *)&self->_has + 1) >> 45) & 1;
}

- (void)setHeuristicSampleSizeIPad:(int64_t)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x100000000000uLL;
  self->_heuristicSampleSizeIPad = a3;
}

- (void)setHasHeuristicSampleSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicSampleSizeIPad
{
  return (*((_QWORD *)&self->_has + 1) >> 44) & 1;
}

- (void)setSearchBranchMultiplierIPhone:(int64_t)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x1000000000uLL;
  self->_searchBranchMultiplierIPhone = a3;
}

- (void)setHasSearchBranchMultiplierIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchMultiplierIPhone
{
  return (*((_QWORD *)&self->_has + 3) >> 36) & 1;
}

- (void)setSearchBranchMultiplierIPad:(int64_t)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x800000000uLL;
  self->_searchBranchMultiplierIPad = a3;
}

- (void)setHasSearchBranchMultiplierIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchMultiplierIPad
{
  return (*((_QWORD *)&self->_has + 3) >> 35) & 1;
}

- (void)setSearchBranchDecayIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x200000000uLL;
  self->_searchBranchDecayIPhone = a3;
}

- (void)setHasSearchBranchDecayIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchDecayIPhone
{
  return (*((_QWORD *)&self->_has + 3) >> 33) & 1;
}

- (void)setSearchBranchDecayIPad:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x100000000uLL;
  self->_searchBranchDecayIPad = a3;
}

- (void)setHasSearchBranchDecayIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasSearchBranchDecayIPad
{
  return HIDWORD(*((_QWORD *)&self->_has + 3)) & 1;
}

- (int)heuristicOptionIPhone
{
  if ((*((_QWORD *)&self->_has + 5) & 0x10000000000) != 0)
    return self->_heuristicOptionIPhone;
  else
    return 0;
}

- (void)setHeuristicOptionIPhone:(int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x10000000000uLL;
  self->_heuristicOptionIPhone = a3;
}

- (void)setHasHeuristicOptionIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicOptionIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 40) & 1;
}

- (int)heuristicOptionIPad
{
  if ((*((_QWORD *)&self->_has + 5) & 0x8000000000) != 0)
    return self->_heuristicOptionIPad;
  else
    return 0;
}

- (void)setHeuristicOptionIPad:(int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x8000000000uLL;
  self->_heuristicOptionIPad = a3;
}

- (void)setHasHeuristicOptionIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasHeuristicOptionIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 39) & 1;
}

- (void)setTagSizeCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x40uLL;
  self->_tagSizeCoeffIPhone = a3;
}

- (void)setHasTagSizeCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasTagSizeCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 4) >> 6) & 1;
}

- (void)setTagSizeCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x20uLL;
  self->_tagSizeCoeffIPad = a3;
}

- (void)setHasTagSizeCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasTagSizeCoeffIPad
{
  return (*((_QWORD *)&self->_has + 4) >> 5) & 1;
}

- (void)setTagPairsCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 4uLL;
  self->_tagPairsCoeffIPhone = a3;
}

- (void)setHasTagPairsCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasTagPairsCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 4) >> 2) & 1;
}

- (void)setTagPairsCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 2uLL;
  self->_tagPairsCoeffIPad = a3;
}

- (void)setHasTagPairsCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasTagPairsCoeffIPad
{
  return (*((_QWORD *)&self->_has + 4) >> 1) & 1;
}

- (void)setMoveNewOrphansCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x40000uLL;
  self->_moveNewOrphansCoeffIPhone = a3;
}

- (void)setHasMoveNewOrphansCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasMoveNewOrphansCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 2) >> 18) & 1;
}

- (void)setMoveNewOrphansCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x20000uLL;
  self->_moveNewOrphansCoeffIPad = a3;
}

- (void)setHasMoveNewOrphansCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasMoveNewOrphansCoeffIPad
{
  return (*((_QWORD *)&self->_has + 2) >> 17) & 1;
}

- (void)setMoveSizeCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x100000uLL;
  self->_moveSizeCoeffIPhone = a3;
}

- (void)setHasMoveSizeCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasMoveSizeCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 2) >> 20) & 1;
}

- (void)setMoveSizeCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x80000uLL;
  self->_moveSizeCoeffIPad = a3;
}

- (void)setHasMoveSizeCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasMoveSizeCoeffIPad
{
  return (*((_QWORD *)&self->_has + 2) >> 19) & 1;
}

- (void)setTagFavoritedCoeff:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x1000000000000000uLL;
  self->_tagFavoritedCoeff = a3;
}

- (void)setHasTagFavoritedCoeff:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagFavoritedCoeff
{
  return (*((_QWORD *)&self->_has + 3) >> 60) & 1;
}

- (void)setMoveAboutnessNoiseStdIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x4000uLL;
  self->_moveAboutnessNoiseStdIPhone = a3;
}

- (void)setHasMoveAboutnessNoiseStdIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasMoveAboutnessNoiseStdIPhone
{
  return (*((_QWORD *)&self->_has + 2) >> 14) & 1;
}

- (void)setMoveAboutnessNoiseStdIPad:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x2000uLL;
  self->_moveAboutnessNoiseStdIPad = a3;
}

- (void)setHasMoveAboutnessNoiseStdIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasMoveAboutnessNoiseStdIPad
{
  return (*((_QWORD *)&self->_has + 2) >> 13) & 1;
}

- (void)setDynamicMaxClusterSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x80000000uLL;
  self->_dynamicMaxClusterSizeIPhone = a3;
}

- (void)setHasDynamicMaxClusterSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasDynamicMaxClusterSizeIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 31) & 1;
}

- (void)setDynamicMaxClusterSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x40000000uLL;
  self->_dynamicMaxClusterSizeIPad = a3;
}

- (void)setHasDynamicMaxClusterSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasDynamicMaxClusterSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 30) & 1;
}

- (void)setDynamicMinArticleSetSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x200000000uLL;
  self->_dynamicMinArticleSetSizeIPhone = a3;
}

- (void)setHasDynamicMinArticleSetSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasDynamicMinArticleSetSizeIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 33) & 1;
}

- (void)setDynamicMinArticleSetSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x100000000uLL;
  self->_dynamicMinArticleSetSizeIPad = a3;
}

- (void)setHasDynamicMinArticleSetSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasDynamicMinArticleSetSizeIPad
{
  return HIDWORD(*((_QWORD *)&self->_has + 5)) & 1;
}

- (void)setDynamicMaxArticleSetSizeIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x20000000uLL;
  self->_dynamicMaxArticleSetSizeIPhone = a3;
}

- (void)setHasDynamicMaxArticleSetSizeIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasDynamicMaxArticleSetSizeIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 29) & 1;
}

- (void)setDynamicMaxArticleSetSizeIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x10000000uLL;
  self->_dynamicMaxArticleSetSizeIPad = a3;
}

- (void)setHasDynamicMaxArticleSetSizeIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasDynamicMaxArticleSetSizeIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 28) & 1;
}

- (void)setDeleteOrphansFromOverflow:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 4u;
  self->_deleteOrphansFromOverflow = a3;
}

- (void)setHasDeleteOrphansFromOverflow:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 4;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFFB | v3;
}

- (BOOL)hasDeleteOrphansFromOverflow
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 2) & 1;
}

- (void)setOverflownOrphansFilterCoeff:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x20000000000uLL;
  self->_overflownOrphansFilterCoeff = a3;
}

- (void)setHasOverflownOrphansFilterCoeff:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasOverflownOrphansFilterCoeff
{
  return (*((_QWORD *)&self->_has + 2) >> 41) & 1;
}

- (void)setMoveAboutnessWeightRatioIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x10000uLL;
  self->_moveAboutnessWeightRatioIPhone = a3;
}

- (void)setHasMoveAboutnessWeightRatioIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasMoveAboutnessWeightRatioIPhone
{
  return (*((_QWORD *)&self->_has + 2) >> 16) & 1;
}

- (void)setMoveAboutnessWeightRatioIPad:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x8000uLL;
  self->_moveAboutnessWeightRatioIPad = a3;
}

- (void)setHasMoveAboutnessWeightRatioIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasMoveAboutnessWeightRatioIPad
{
  return (*((_QWORD *)&self->_has + 2) >> 15) & 1;
}

- (void)setGroupingDoubleParam1:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x80000000uLL;
  self->_groupingDoubleParam1 = a3;
}

- (void)setHasGroupingDoubleParam1:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam1
{
  return (*((_QWORD *)&self->_has + 1) >> 31) & 1;
}

- (void)setGroupingDoubleParam2:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x100000000uLL;
  self->_groupingDoubleParam2 = a3;
}

- (void)setHasGroupingDoubleParam2:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam2
{
  return HIDWORD(*((_QWORD *)&self->_has + 1)) & 1;
}

- (void)setGroupingDoubleParam3:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x200000000uLL;
  self->_groupingDoubleParam3 = a3;
}

- (void)setHasGroupingDoubleParam3:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam3
{
  return (*((_QWORD *)&self->_has + 1) >> 33) & 1;
}

- (void)setGroupingDoubleParam4:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x400000000uLL;
  self->_groupingDoubleParam4 = a3;
}

- (void)setHasGroupingDoubleParam4:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam4
{
  return (*((_QWORD *)&self->_has + 1) >> 34) & 1;
}

- (void)setGroupingDoubleParam5:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x800000000uLL;
  self->_groupingDoubleParam5 = a3;
}

- (void)setHasGroupingDoubleParam5:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam5
{
  return (*((_QWORD *)&self->_has + 1) >> 35) & 1;
}

- (void)setGroupingDoubleParam6:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x1000000000uLL;
  self->_groupingDoubleParam6 = a3;
}

- (void)setHasGroupingDoubleParam6:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingDoubleParam6
{
  return (*((_QWORD *)&self->_has + 1) >> 36) & 1;
}

- (void)setGroupingIntParam1:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x400000000uLL;
  self->_groupingIntParam1 = a3;
}

- (void)setHasGroupingIntParam1:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingIntParam1
{
  return (*((_QWORD *)&self->_has + 5) >> 34) & 1;
}

- (void)setGroupingIntParam2:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x800000000uLL;
  self->_groupingIntParam2 = a3;
}

- (void)setHasGroupingIntParam2:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasGroupingIntParam2
{
  return (*((_QWORD *)&self->_has + 5) >> 35) & 1;
}

- (void)setGroupingIntParam3:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x1000000000uLL;
  self->_groupingIntParam3 = a3;
}

- (void)setHasGroupingIntParam3:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingIntParam3
{
  return (*((_QWORD *)&self->_has + 5) >> 36) & 1;
}

- (void)setGroupingIntParam4:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x2000000000uLL;
  self->_groupingIntParam4 = a3;
}

- (void)setHasGroupingIntParam4:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasGroupingIntParam4
{
  return (*((_QWORD *)&self->_has + 5) >> 37) & 1;
}

- (void)setGroupingBoolParam1:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x80u;
  self->_groupingBoolParam1 = a3;
}

- (void)setHasGroupingBoolParam1:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 128;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFF7F | v3;
}

- (BOOL)hasGroupingBoolParam1
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 7) & 1;
}

- (void)setGroupingBoolParam2:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x100u;
  self->_groupingBoolParam2 = a3;
}

- (void)setHasGroupingBoolParam2:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 256;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFEFF | v3;
}

- (BOOL)hasGroupingBoolParam2
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 8) & 1;
}

- (void)setEnableOptimizedLayoutIPhone:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x10u;
  self->_enableOptimizedLayoutIPhone = a3;
}

- (void)setHasEnableOptimizedLayoutIPhone:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 16;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFEF | v3;
}

- (BOOL)hasEnableOptimizedLayoutIPhone
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 4) & 1;
}

- (void)setEnableOptimizedLayoutIPad:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 8u;
  self->_enableOptimizedLayoutIPad = a3;
}

- (void)setHasEnableOptimizedLayoutIPad:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 8;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFF7 | v3;
}

- (BOOL)hasEnableOptimizedLayoutIPad
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 3) & 1;
}

- (void)setOptimizedLayoutSizeThresholdIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x4000000000000000uLL;
  self->_optimizedLayoutSizeThresholdIPhone = a3;
}

- (void)setHasOptimizedLayoutSizeThresholdIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasOptimizedLayoutSizeThresholdIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 62) & 1;
}

- (void)setOptimizedLayoutSizeThresholdIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x2000000000000000uLL;
  self->_optimizedLayoutSizeThresholdIPad = a3;
}

- (void)setHasOptimizedLayoutSizeThresholdIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasOptimizedLayoutSizeThresholdIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 61) & 1;
}

- (void)setOptimizedLayoutIncrementUnitIPhone:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x1000000000000000uLL;
  self->_optimizedLayoutIncrementUnitIPhone = a3;
}

- (void)setHasOptimizedLayoutIncrementUnitIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasOptimizedLayoutIncrementUnitIPhone
{
  return (*((_QWORD *)&self->_has + 5) >> 60) & 1;
}

- (void)setOptimizedLayoutIncrementUnitIPad:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x800000000000000uLL;
  self->_optimizedLayoutIncrementUnitIPad = a3;
}

- (void)setHasOptimizedLayoutIncrementUnitIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasOptimizedLayoutIncrementUnitIPad
{
  return (*((_QWORD *)&self->_has + 5) >> 59) & 1;
}

- (void)setUtilityWeightAlpha:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x2000000000000000uLL;
  self->_utilityWeightAlpha = a3;
}

- (void)setHasUtilityWeightAlpha:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUtilityWeightAlpha
{
  return (*((_QWORD *)&self->_has + 4) >> 61) & 1;
}

- (void)setUtilityWeightBeta:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x4000000000000000uLL;
  self->_utilityWeightBeta = a3;
}

- (void)setHasUtilityWeightBeta:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUtilityWeightBeta
{
  return (*((_QWORD *)&self->_has + 4) >> 62) & 1;
}

- (void)setReplaceAboutness:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x800u;
  self->_replaceAboutness = a3;
}

- (void)setHasReplaceAboutness:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 2048;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xF7FF | v3;
}

- (BOOL)hasReplaceAboutness
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 11) & 1;
}

- (void)setTagPersonalizationCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x10uLL;
  self->_tagPersonalizationCoeffIPhone = a3;
}

- (void)setHasTagPersonalizationCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasTagPersonalizationCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 4) >> 4) & 1;
}

- (void)setTagPersonalizationCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 8uLL;
  self->_tagPersonalizationCoeffIPad = a3;
}

- (void)setHasTagPersonalizationCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasTagPersonalizationCoeffIPad
{
  return (*((_QWORD *)&self->_has + 4) >> 3) & 1;
}

- (void)setTagArticleScoreCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x200000000000000uLL;
  self->_tagArticleScoreCoeffIPhone = a3;
}

- (void)setHasTagArticleScoreCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagArticleScoreCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 3) >> 57) & 1;
}

- (void)setTagArticleScoreCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x100000000000000uLL;
  self->_tagArticleScoreCoeffIPad = a3;
}

- (void)setHasTagArticleScoreCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagArticleScoreCoeffIPad
{
  return HIBYTE(*((_QWORD *)&self->_has + 3)) & 1;
}

- (void)setTagFavoritedCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x4000000000000000uLL;
  self->_tagFavoritedCoeffIPhone = a3;
}

- (void)setHasTagFavoritedCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xBFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagFavoritedCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 3) >> 62) & 1;
}

- (void)setTagFavoritedCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x2000000000000000uLL;
  self->_tagFavoritedCoeffIPad = a3;
}

- (void)setHasTagFavoritedCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagFavoritedCoeffIPad
{
  return (*((_QWORD *)&self->_has + 3) >> 61) & 1;
}

- (void)setArticleEntityScoreWeightRatioIPhone:(double)a3
{
  *(_QWORD *)&self->_has |= 0x4000uLL;
  self->_articleEntityScoreWeightRatioIPhone = a3;
}

- (void)setHasArticleEntityScoreWeightRatioIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasArticleEntityScoreWeightRatioIPhone
{
  return (*(_QWORD *)&self->_has >> 14) & 1;
}

- (void)setArticleEntityScoreWeightRatioIPad:(double)a3
{
  *(_QWORD *)&self->_has |= 0x2000uLL;
  self->_articleEntityScoreWeightRatioIPad = a3;
}

- (void)setHasArticleEntityScoreWeightRatioIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasArticleEntityScoreWeightRatioIPad
{
  return (*(_QWORD *)&self->_has >> 13) & 1;
}

- (void)setMuteImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x800000uLL;
  self->_muteImpressionValue = a3;
}

- (void)setHasMuteImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasMuteImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 23) & 1;
}

- (void)setUnmuteImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x80000000000000uLL;
  self->_unmuteImpressionValue = a3;
}

- (void)setHasUnmuteImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnmuteImpressionValue
{
  return (*((_QWORD *)&self->_has + 4) >> 55) & 1;
}

- (void)setMuteClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x200000uLL;
  self->_muteClickValue = a3;
}

- (void)setHasMuteClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasMuteClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 21) & 1;
}

- (void)setUnmuteClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x20000000000000uLL;
  self->_unmuteClickValue = a3;
}

- (void)setHasUnmuteClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnmuteClickValue
{
  return (*((_QWORD *)&self->_has + 4) >> 53) & 1;
}

- (void)setMuteImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x1000000uLL;
  self->_muteImpressionValueBaseline = a3;
}

- (void)setHasMuteImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasMuteImpressionValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 24) & 1;
}

- (void)setUnmuteImpressionValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x100000000000000uLL;
  self->_unmuteImpressionValueBaseline = a3;
}

- (void)setHasUnmuteImpressionValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnmuteImpressionValueBaseline
{
  return HIBYTE(*((_QWORD *)&self->_has + 4)) & 1;
}

- (void)setMuteClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x400000uLL;
  self->_muteClickValueBaseline = a3;
}

- (void)setHasMuteClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasMuteClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 2) >> 22) & 1;
}

- (void)setUnmuteClickValueBaseline:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x40000000000000uLL;
  self->_unmuteClickValueBaseline = a3;
}

- (void)setHasUnmuteClickValueBaseline:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUnmuteClickValueBaseline
{
  return (*((_QWORD *)&self->_has + 4) >> 54) & 1;
}

- (void)setSaturatedMutedCountFactor:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x2000000uLL;
  self->_saturatedMutedCountFactor = a3;
}

- (void)setHasSaturatedMutedCountFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasSaturatedMutedCountFactor
{
  return (*((_QWORD *)&self->_has + 3) >> 25) & 1;
}

- (void)setMutedVoteCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x2000000uLL;
  self->_mutedVoteCoefficient = a3;
}

- (void)setHasMutedVoteCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasMutedVoteCoefficient
{
  return (*((_QWORD *)&self->_has + 2) >> 25) & 1;
}

- (void)setImportanceScalar:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x80000000000000uLL;
  self->_importanceScalar = a3;
}

- (void)setHasImportanceScalar:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasImportanceScalar
{
  return (*((_QWORD *)&self->_has + 1) >> 55) & 1;
}

- (void)setPublisherDiversityMinSubscriptions:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 8uLL;
  self->_publisherDiversityMinSubscriptions = a3;
}

- (void)setHasPublisherDiversityMinSubscriptions:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasPublisherDiversityMinSubscriptions
{
  return (*((_QWORD *)&self->_has + 3) >> 3) & 1;
}

- (void)setPublisherDiversityMinArticleCount:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 4uLL;
  self->_publisherDiversityMinArticleCount = a3;
}

- (void)setHasPublisherDiversityMinArticleCount:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasPublisherDiversityMinArticleCount
{
  return (*((_QWORD *)&self->_has + 3) >> 2) & 1;
}

- (void)setPublisherDiversityMaxArticleCount:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 1uLL;
  self->_publisherDiversityMaxArticleCount = a3;
}

- (void)setHasPublisherDiversityMaxArticleCount:(BOOL)a3
{
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasPublisherDiversityMaxArticleCount
{
  return *((_DWORD *)&self->_has + 6) & 1;
}

- (void)setPublisherDiversityMaxArticleFilter:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 2uLL;
  self->_publisherDiversityMaxArticleFilter = a3;
}

- (void)setHasPublisherDiversityMaxArticleFilter:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasPublisherDiversityMaxArticleFilter
{
  return (*((_QWORD *)&self->_has + 3) >> 1) & 1;
}

- (void)setSafariSignalWeight:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x400000uLL;
  self->_safariSignalWeight = a3;
}

- (void)setHasSafariSignalWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasSafariSignalWeight
{
  return (*((_QWORD *)&self->_has + 3) >> 22) & 1;
}

- (void)setSafariTimeDecayMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x1000000uLL;
  self->_safariTimeDecayMultiplier = a3;
}

- (void)setHasSafariTimeDecayMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasSafariTimeDecayMultiplier
{
  return (*((_QWORD *)&self->_has + 3) >> 24) & 1;
}

- (void)setSafariOccurrenceDecayMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x100000uLL;
  self->_safariOccurrenceDecayMultiplier = a3;
}

- (void)setHasSafariOccurrenceDecayMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasSafariOccurrenceDecayMultiplier
{
  return (*((_QWORD *)&self->_has + 3) >> 20) & 1;
}

- (void)setAppUsageSignalWeight:(double)a3
{
  *(_QWORD *)&self->_has |= 0x400uLL;
  self->_appUsageSignalWeight = a3;
}

- (void)setHasAppUsageSignalWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasAppUsageSignalWeight
{
  return (*(_QWORD *)&self->_has >> 10) & 1;
}

- (void)setAppUsageTimeDecayMultiplier:(double)a3
{
  *(_QWORD *)&self->_has |= 0x1000uLL;
  self->_appUsageTimeDecayMultiplier = a3;
}

- (void)setHasAppUsageTimeDecayMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasAppUsageTimeDecayMultiplier
{
  return (*(_QWORD *)&self->_has >> 12) & 1;
}

- (void)setAppUsageOccurrenceDecayMultiplier:(double)a3
{
  *(_QWORD *)&self->_has |= 0x100uLL;
  self->_appUsageOccurrenceDecayMultiplier = a3;
}

- (void)setHasAppUsageOccurrenceDecayMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasAppUsageOccurrenceDecayMultiplier
{
  return (*(_QWORD *)&self->_has >> 8) & 1;
}

- (void)setAutoFavoriteGroupableMinImpressions:(double)a3
{
  *(_QWORD *)&self->_has |= 0x40000uLL;
  self->_autoFavoriteGroupableMinImpressions = a3;
}

- (void)setHasAutoFavoriteGroupableMinImpressions:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteGroupableMinImpressions
{
  return (*(_QWORD *)&self->_has >> 18) & 1;
}

- (void)setAutoFavoriteGroupableMinRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x80000uLL;
  self->_autoFavoriteGroupableMinRate = a3;
}

- (void)setHasAutoFavoriteGroupableMinRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasAutoFavoriteGroupableMinRate
{
  return (*(_QWORD *)&self->_has >> 19) & 1;
}

- (void)setAutoFavoriteGroupableMinRelativeRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x100000uLL;
  self->_autoFavoriteGroupableMinRelativeRate = a3;
}

- (void)setHasAutoFavoriteGroupableMinRelativeRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteGroupableMinRelativeRate
{
  return (*(_QWORD *)&self->_has >> 20) & 1;
}

- (void)setAutoFavoriteFetchableMinImpressions:(double)a3
{
  *(_QWORD *)&self->_has |= 0x8000uLL;
  self->_autoFavoriteFetchableMinImpressions = a3;
}

- (void)setHasAutoFavoriteFetchableMinImpressions:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasAutoFavoriteFetchableMinImpressions
{
  return (*(_QWORD *)&self->_has >> 15) & 1;
}

- (void)setAutoFavoriteFetchableMinRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x10000uLL;
  self->_autoFavoriteFetchableMinRate = a3;
}

- (void)setHasAutoFavoriteFetchableMinRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteFetchableMinRate
{
  return (*(_QWORD *)&self->_has >> 16) & 1;
}

- (void)setAutoFavoriteFetchableMinRelativeRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x20000uLL;
  self->_autoFavoriteFetchableMinRelativeRate = a3;
}

- (void)setHasAutoFavoriteFetchableMinRelativeRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteFetchableMinRelativeRate
{
  return (*(_QWORD *)&self->_has >> 17) & 1;
}

- (void)setAverageSafariVisitsPerDay:(double)a3
{
  *(_QWORD *)&self->_has |= 0x800000000uLL;
  self->_averageSafariVisitsPerDay = a3;
}

- (void)setHasAverageSafariVisitsPerDay:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasAverageSafariVisitsPerDay
{
  return (*(_QWORD *)&self->_has >> 35) & 1;
}

- (void)setPublisherDiversityMinPublisherCount:(unsigned int)a3
{
  *((_WORD *)&self->_has + 24) |= 1u;
  self->_publisherDiversityMinPublisherCount = a3;
}

- (void)setHasPublisherDiversityMinPublisherCount:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFFE | a3;
}

- (BOOL)hasPublisherDiversityMinPublisherCount
{
  return *((_WORD *)&self->_has + 24) & 1;
}

- (void)setPublisherDiversityMaxPublisherCount:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x8000000000000000;
  self->_publisherDiversityMaxPublisherCount = a3;
}

- (void)setHasPublisherDiversityMaxPublisherCount:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = v3 & 0x8000000000000000 | *((_QWORD *)&self->_has + 5) & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasPublisherDiversityMaxPublisherCount
{
  return *((_QWORD *)&self->_has + 5) >> 63;
}

- (void)setPortraitUsageSignalWeight:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x8000000000000uLL;
  self->_portraitUsageSignalWeight = a3;
}

- (void)setHasPortraitUsageSignalWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitUsageSignalWeight
{
  return (*((_QWORD *)&self->_has + 2) >> 51) & 1;
}

- (void)setCohortMembershipBaselineCtrWeight:(double)a3
{
  *(_QWORD *)&self->_has |= 0x40000000000uLL;
  self->_cohortMembershipBaselineCtrWeight = a3;
}

- (void)setHasCohortMembershipBaselineCtrWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipBaselineCtrWeight
{
  return (*(_QWORD *)&self->_has >> 42) & 1;
}

- (void)setCohortMembershipCurveSteepness:(double)a3
{
  *(_QWORD *)&self->_has |= 0x200000000000uLL;
  self->_cohortMembershipCurveSteepness = a3;
}

- (void)setHasCohortMembershipCurveSteepness:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipCurveSteepness
{
  return (*(_QWORD *)&self->_has >> 45) & 1;
}

- (void)setCohortMembershipMinWeightedImpressions:(double)a3
{
  *(_QWORD *)&self->_has |= 0x800000000000uLL;
  self->_cohortMembershipMinWeightedImpressions = a3;
}

- (void)setHasCohortMembershipMinWeightedImpressions:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipMinWeightedImpressions
{
  return (*(_QWORD *)&self->_has >> 47) & 1;
}

- (void)setAutoFavoriteMinImpressions:(double)a3
{
  *(_QWORD *)&self->_has |= 0x800000uLL;
  self->_autoFavoriteMinImpressions = a3;
}

- (void)setHasAutoFavoriteMinImpressions:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinImpressions
{
  return (*(_QWORD *)&self->_has >> 23) & 1;
}

- (void)setAutoFavoriteMinRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x4000000uLL;
  self->_autoFavoriteMinRate = a3;
}

- (void)setHasAutoFavoriteMinRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinRate
{
  return (*(_QWORD *)&self->_has >> 26) & 1;
}

- (void)setAutoFavoriteMinRelativeRate:(double)a3
{
  *(_QWORD *)&self->_has |= 0x8000000uLL;
  self->_autoFavoriteMinRelativeRate = a3;
}

- (void)setHasAutoFavoriteMinRelativeRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinRelativeRate
{
  return (*(_QWORD *)&self->_has >> 27) & 1;
}

- (void)setAutoUnfavoriteFactor:(double)a3
{
  *(_QWORD *)&self->_has |= 0x200000000uLL;
  self->_autoUnfavoriteFactor = a3;
}

- (void)setHasAutoUnfavoriteFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasAutoUnfavoriteFactor
{
  return (*(_QWORD *)&self->_has >> 33) & 1;
}

- (void)setAutoGroupableFactor:(double)a3
{
  *(_QWORD *)&self->_has |= 0x100000000uLL;
  self->_autoGroupableFactor = a3;
}

- (void)setHasAutoGroupableFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasAutoGroupableFactor
{
  return HIDWORD(*(_QWORD *)&self->_has) & 1;
}

- (void)setGroupImpressionBiasCorrectionFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x40000000uLL;
  self->_groupImpressionBiasCorrectionFactor = a3;
}

- (void)setHasGroupImpressionBiasCorrectionFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasGroupImpressionBiasCorrectionFactor
{
  return (*((_QWORD *)&self->_has + 1) >> 30) & 1;
}

- (void)setIndexImpressionBiasCorrectionFactor:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x100000000000000uLL;
  self->_indexImpressionBiasCorrectionFactor = a3;
}

- (void)setHasIndexImpressionBiasCorrectionFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasIndexImpressionBiasCorrectionFactor
{
  return HIBYTE(*((_QWORD *)&self->_has + 1)) & 1;
}

- (void)setVideoInitiatePlaybackImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x40000uLL;
  self->_videoInitiatePlaybackImpressionValue = a3;
}

- (void)setHasVideoInitiatePlaybackImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasVideoInitiatePlaybackImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 18) & 1;
}

- (void)setVideoInitiatePlaybackClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x20000uLL;
  self->_videoInitiatePlaybackClickValue = a3;
}

- (void)setHasVideoInitiatePlaybackClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasVideoInitiatePlaybackClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 17) & 1;
}

- (void)setVideoInitiatePlaybackBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x10000uLL;
  self->_videoInitiatePlaybackBaselineImpressionValue = a3;
}

- (void)setHasVideoInitiatePlaybackBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasVideoInitiatePlaybackBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 16) & 1;
}

- (void)setVideoInitiatePlaybackBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x8000uLL;
  self->_videoInitiatePlaybackBaselineClickValue = a3;
}

- (void)setHasVideoInitiatePlaybackBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasVideoInitiatePlaybackBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 15) & 1;
}

- (void)setVideoCompletePlaybackImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x4000uLL;
  self->_videoCompletePlaybackImpressionValue = a3;
}

- (void)setHasVideoCompletePlaybackImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasVideoCompletePlaybackImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 14) & 1;
}

- (void)setVideoCompletePlaybackClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x2000uLL;
  self->_videoCompletePlaybackClickValue = a3;
}

- (void)setHasVideoCompletePlaybackClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasVideoCompletePlaybackClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 13) & 1;
}

- (void)setVideoCompletePlaybackBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x1000uLL;
  self->_videoCompletePlaybackBaselineImpressionValue = a3;
}

- (void)setHasVideoCompletePlaybackBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasVideoCompletePlaybackBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 12) & 1;
}

- (void)setVideoCompletePlaybackBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x800uLL;
  self->_videoCompletePlaybackBaselineClickValue = a3;
}

- (void)setHasVideoCompletePlaybackBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasVideoCompletePlaybackBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 11) & 1;
}

- (void)setTagAutoFavoritedCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x800000000000000uLL;
  self->_tagAutoFavoritedCoeffIPhone = a3;
}

- (void)setHasTagAutoFavoritedCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagAutoFavoritedCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 3) >> 59) & 1;
}

- (void)setTagAutoFavoritedCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x400000000000000uLL;
  self->_tagAutoFavoritedCoeffIPad = a3;
}

- (void)setHasTagAutoFavoritedCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTagAutoFavoritedCoeffIPad
{
  return (*((_QWORD *)&self->_has + 3) >> 58) & 1;
}

- (void)setTagGroupableCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 1uLL;
  self->_tagGroupableCoeffIPhone = a3;
}

- (void)setHasTagGroupableCoeffIPhone:(BOOL)a3
{
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasTagGroupableCoeffIPhone
{
  return *((_DWORD *)&self->_has + 8) & 1;
}

- (void)setTagGroupableCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x8000000000000000;
  self->_tagGroupableCoeffIPad = a3;
}

- (void)setHasTagGroupableCoeffIPad:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = v3 & 0x8000000000000000 | *((_QWORD *)&self->_has + 3) & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasTagGroupableCoeffIPad
{
  return *((_QWORD *)&self->_has + 3) >> 63;
}

- (void)setTagSpecificityCoeffIPhone:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x100uLL;
  self->_tagSpecificityCoeffIPhone = a3;
}

- (void)setHasTagSpecificityCoeffIPhone:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasTagSpecificityCoeffIPhone
{
  return (*((_QWORD *)&self->_has + 4) >> 8) & 1;
}

- (void)setTagSpecificityCoeffIPad:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x80uLL;
  self->_tagSpecificityCoeffIPad = a3;
}

- (void)setHasTagSpecificityCoeffIPad:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasTagSpecificityCoeffIPad
{
  return (*((_QWORD *)&self->_has + 4) >> 7) & 1;
}

- (void)setOptionalTagSpecificityScore:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x10000000000uLL;
  self->_optionalTagSpecificityScore = a3;
}

- (void)setHasOptionalTagSpecificityScore:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasOptionalTagSpecificityScore
{
  return (*((_QWORD *)&self->_has + 2) >> 40) & 1;
}

- (void)setAutoFavoriteMinObservationsSafari:(double)a3
{
  *(_QWORD *)&self->_has |= 0x2000000uLL;
  self->_autoFavoriteMinObservationsSafari = a3;
}

- (void)setHasAutoFavoriteMinObservationsSafari:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinObservationsSafari
{
  return (*(_QWORD *)&self->_has >> 25) & 1;
}

- (void)setAutoFavoriteMinScoreSafari:(double)a3
{
  *(_QWORD *)&self->_has |= 0x20000000uLL;
  self->_autoFavoriteMinScoreSafari = a3;
}

- (void)setHasAutoFavoriteMinScoreSafari:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinScoreSafari
{
  return (*(_QWORD *)&self->_has >> 29) & 1;
}

- (void)setAutoFavoriteMinObservationsExtAppUsage:(double)a3
{
  *(_QWORD *)&self->_has |= 0x1000000uLL;
  self->_autoFavoriteMinObservationsExtAppUsage = a3;
}

- (void)setHasAutoFavoriteMinObservationsExtAppUsage:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinObservationsExtAppUsage
{
  return (*(_QWORD *)&self->_has >> 24) & 1;
}

- (void)setAutoFavoriteMinScoreExtAppUsage:(double)a3
{
  *(_QWORD *)&self->_has |= 0x10000000uLL;
  self->_autoFavoriteMinScoreExtAppUsage = a3;
}

- (void)setHasAutoFavoriteMinScoreExtAppUsage:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinScoreExtAppUsage
{
  return (*(_QWORD *)&self->_has >> 28) & 1;
}

- (void)setPortraitDecayRate:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x80000000000uLL;
  self->_portraitDecayRate = a3;
}

- (void)setHasPortraitDecayRate:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitDecayRate
{
  return (*((_QWORD *)&self->_has + 2) >> 43) & 1;
}

- (void)setPortraitGlobalThreshold:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x100000000000uLL;
  self->_portraitGlobalThreshold = a3;
}

- (void)setHasPortraitGlobalThreshold:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitGlobalThreshold
{
  return (*((_QWORD *)&self->_has + 2) >> 44) & 1;
}

- (void)clearPortraitTagThresholds
{
  -[NSMutableArray removeAllObjects](self->_portraitTagThresholds, "removeAllObjects");
}

- (void)addPortraitTagThresholds:(id)a3
{
  id v4;
  NSMutableArray *portraitTagThresholds;
  NSMutableArray *v6;
  NSMutableArray *v7;
  id v8;

  v4 = a3;
  portraitTagThresholds = self->_portraitTagThresholds;
  v8 = v4;
  if (!portraitTagThresholds)
  {
    v6 = (NSMutableArray *)objc_alloc_init(MEMORY[0x24BDBCEB8]);
    v7 = self->_portraitTagThresholds;
    self->_portraitTagThresholds = v6;

    v4 = v8;
    portraitTagThresholds = self->_portraitTagThresholds;
  }
  -[NSMutableArray addObject:](portraitTagThresholds, "addObject:", v4);

}

- (unint64_t)portraitTagThresholdsCount
{
  return -[NSMutableArray count](self->_portraitTagThresholds, "count");
}

- (id)portraitTagThresholdsAtIndex:(unint64_t)a3
{
  return (id)-[NSMutableArray objectAtIndex:](self->_portraitTagThresholds, "objectAtIndex:", a3);
}

+ (Class)portraitTagThresholdsType
{
  return (Class)objc_opt_class();
}

- (void)setPortraitImpressionSlope:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x400000000000uLL;
  self->_portraitImpressionSlope = a3;
}

- (void)setHasPortraitImpressionSlope:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitImpressionSlope
{
  return (*((_QWORD *)&self->_has + 2) >> 46) & 1;
}

- (void)setPortraitImpressionIntercept:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x200000000000uLL;
  self->_portraitImpressionIntercept = a3;
}

- (void)setHasPortraitImpressionIntercept:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitImpressionIntercept
{
  return (*((_QWORD *)&self->_has + 2) >> 45) & 1;
}

- (void)setPortraitRateSlope:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x2000000000000uLL;
  self->_portraitRateSlope = a3;
}

- (void)setHasPortraitRateSlope:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitRateSlope
{
  return (*((_QWORD *)&self->_has + 2) >> 49) & 1;
}

- (void)setPortraitRateIntercept:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x1000000000000uLL;
  self->_portraitRateIntercept = a3;
}

- (void)setHasPortraitRateIntercept:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitRateIntercept
{
  return HIWORD(*((_QWORD *)&self->_has + 2)) & 1;
}

- (void)setNewsTodayWidgetPresentationImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x200000000uLL;
  self->_newsTodayWidgetPresentationImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetPresentationImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetPresentationImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 33) & 1;
}

- (void)setNewsTodayWidgetPresentationClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x100000000uLL;
  self->_newsTodayWidgetPresentationClickValue = a3;
}

- (void)setHasNewsTodayWidgetPresentationClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetPresentationClickValue
{
  return HIDWORD(*((_QWORD *)&self->_has + 2)) & 1;
}

- (void)setNewsTodayWidgetPresentationBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x80000000uLL;
  self->_newsTodayWidgetPresentationBaselineImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetPresentationBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetPresentationBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 31) & 1;
}

- (void)setNewsTodayWidgetPresentationBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x40000000uLL;
  self->_newsTodayWidgetPresentationBaselineClickValue = a3;
}

- (void)setHasNewsTodayWidgetPresentationBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetPresentationBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 30) & 1;
}

- (void)setNewsTodayWidgetClickImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x20000000uLL;
  self->_newsTodayWidgetClickImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetClickImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetClickImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 29) & 1;
}

- (void)setNewsTodayWidgetClickClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x10000000uLL;
  self->_newsTodayWidgetClickClickValue = a3;
}

- (void)setHasNewsTodayWidgetClickClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetClickClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 28) & 1;
}

- (void)setNewsTodayWidgetClickBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x8000000uLL;
  self->_newsTodayWidgetClickBaselineImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetClickBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetClickBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 27) & 1;
}

- (void)setNewsTodayWidgetClickBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x4000000uLL;
  self->_newsTodayWidgetClickBaselineClickValue = a3;
}

- (void)setHasNewsTodayWidgetClickBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetClickBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 26) & 1;
}

- (void)setNewsTodayWidgetVideoPlaybackImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x2000000000uLL;
  self->_newsTodayWidgetVideoPlaybackImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetVideoPlaybackImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetVideoPlaybackImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 37) & 1;
}

- (void)setNewsTodayWidgetVideoPlaybackClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x1000000000uLL;
  self->_newsTodayWidgetVideoPlaybackClickValue = a3;
}

- (void)setHasNewsTodayWidgetVideoPlaybackClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetVideoPlaybackClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 36) & 1;
}

- (void)setNewsTodayWidgetVideoPlaybackBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x800000000uLL;
  self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue = a3;
}

- (void)setHasNewsTodayWidgetVideoPlaybackBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetVideoPlaybackBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 2) >> 35) & 1;
}

- (void)setNewsTodayWidgetVideoPlaybackBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x400000000uLL;
  self->_newsTodayWidgetVideoPlaybackBaselineClickValue = a3;
}

- (void)setHasNewsTodayWidgetVideoPlaybackBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasNewsTodayWidgetVideoPlaybackBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 2) >> 34) & 1;
}

- (void)setCtrWithZeroSubscribed:(double)a3
{
  *(_QWORD *)&self->_has |= 0x1000000000000000uLL;
  self->_ctrWithZeroSubscribed = a3;
}

- (void)setHasCtrWithZeroSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithZeroSubscribed
{
  return (*(_QWORD *)&self->_has >> 60) & 1;
}

- (void)setCtrWithOneSubscribed:(double)a3
{
  *(_QWORD *)&self->_has |= 0x4000000000000uLL;
  self->_ctrWithOneSubscribed = a3;
}

- (void)setHasCtrWithOneSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithOneSubscribed
{
  return (*(_QWORD *)&self->_has >> 50) & 1;
}

- (void)setCtrWithTwoSubscribed:(double)a3
{
  *(_QWORD *)&self->_has |= 0x200000000000000uLL;
  self->_ctrWithTwoSubscribed = a3;
}

- (void)setHasCtrWithTwoSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithTwoSubscribed
{
  return (*(_QWORD *)&self->_has >> 57) & 1;
}

- (void)setCtrWithThreeSubscribed:(double)a3
{
  *(_QWORD *)&self->_has |= 0x40000000000000uLL;
  self->_ctrWithThreeSubscribed = a3;
}

- (void)setHasCtrWithThreeSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithThreeSubscribed
{
  return (*(_QWORD *)&self->_has >> 54) & 1;
}

- (void)setCtrWithZeroMuted:(double)a3
{
  *(_QWORD *)&self->_has |= 0x800000000000000uLL;
  self->_ctrWithZeroMuted = a3;
}

- (void)setHasCtrWithZeroMuted:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xF7FFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithZeroMuted
{
  return (*(_QWORD *)&self->_has >> 59) & 1;
}

- (void)setCtrWithOneMuted:(double)a3
{
  *(_QWORD *)&self->_has |= 0x2000000000000uLL;
  self->_ctrWithOneMuted = a3;
}

- (void)setHasCtrWithOneMuted:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithOneMuted
{
  return (*(_QWORD *)&self->_has >> 49) & 1;
}

- (void)setCtrWithTwoMuted:(double)a3
{
  *(_QWORD *)&self->_has |= 0x100000000000000uLL;
  self->_ctrWithTwoMuted = a3;
}

- (void)setHasCtrWithTwoMuted:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFEFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithTwoMuted
{
  return HIBYTE(*(_QWORD *)&self->_has) & 1;
}

- (void)setCtrWithThreeMuted:(double)a3
{
  *(_QWORD *)&self->_has |= 0x20000000000000uLL;
  self->_ctrWithThreeMuted = a3;
}

- (void)setHasCtrWithThreeMuted:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithThreeMuted
{
  return (*(_QWORD *)&self->_has >> 53) & 1;
}

- (void)setCtrWithZeroAutofavorited:(double)a3
{
  *(_QWORD *)&self->_has |= 0x400000000000000uLL;
  self->_ctrWithZeroAutofavorited = a3;
}

- (void)setHasCtrWithZeroAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFBFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithZeroAutofavorited
{
  return (*(_QWORD *)&self->_has >> 58) & 1;
}

- (void)setCtrWithOneAutofavorited:(double)a3
{
  *(_QWORD *)&self->_has |= 0x1000000000000uLL;
  self->_ctrWithOneAutofavorited = a3;
}

- (void)setHasCtrWithOneAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithOneAutofavorited
{
  return HIWORD(*(_QWORD *)&self->_has) & 1;
}

- (void)setCtrWithTwoAutofavorited:(double)a3
{
  *(_QWORD *)&self->_has |= 0x80000000000000uLL;
  self->_ctrWithTwoAutofavorited = a3;
}

- (void)setHasCtrWithTwoAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithTwoAutofavorited
{
  return (*(_QWORD *)&self->_has >> 55) & 1;
}

- (void)setCtrWithThreeAutofavorited:(double)a3
{
  *(_QWORD *)&self->_has |= 0x10000000000000uLL;
  self->_ctrWithThreeAutofavorited = a3;
}

- (void)setHasCtrWithThreeAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithThreeAutofavorited
{
  return (*(_QWORD *)&self->_has >> 52) & 1;
}

- (void)setAutofavoritedVoteCoefficient:(double)a3
{
  *(_QWORD *)&self->_has |= 0x400000000uLL;
  self->_autofavoritedVoteCoefficient = a3;
}

- (void)setHasAutofavoritedVoteCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasAutofavoritedVoteCoefficient
{
  return (*(_QWORD *)&self->_has >> 34) & 1;
}

- (void)setRealTimeUserFeedbackCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x20uLL;
  self->_realTimeUserFeedbackCoefficient = a3;
}

- (void)setHasRealTimeUserFeedbackCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasRealTimeUserFeedbackCoefficient
{
  return (*((_QWORD *)&self->_has + 3) >> 5) & 1;
}

- (void)setGlobalScoreToCtrSlope:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x20000000uLL;
  self->_globalScoreToCtrSlope = a3;
}

- (void)setHasGlobalScoreToCtrSlope:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreToCtrSlope
{
  return (*((_QWORD *)&self->_has + 1) >> 29) & 1;
}

- (void)setGlobalScoreToCtrIntercept:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x10000000uLL;
  self->_globalScoreToCtrIntercept = a3;
}

- (void)setHasGlobalScoreToCtrIntercept:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreToCtrIntercept
{
  return (*((_QWORD *)&self->_has + 1) >> 28) & 1;
}

- (void)setBaselineArticleScore:(double)a3
{
  *(_QWORD *)&self->_has |= 0x1000000000uLL;
  self->_baselineArticleScore = a3;
}

- (void)setHasBaselineArticleScore:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasBaselineArticleScore
{
  return (*(_QWORD *)&self->_has >> 36) & 1;
}

- (void)setAppInstallImpressionValue:(double)a3
{
  *(_QWORD *)&self->_has |= 0x80uLL;
  self->_appInstallImpressionValue = a3;
}

- (void)setHasAppInstallImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasAppInstallImpressionValue
{
  return (*(_QWORD *)&self->_has >> 7) & 1;
}

- (void)setAppInstallClickValue:(double)a3
{
  *(_QWORD *)&self->_has |= 0x40uLL;
  self->_appInstallClickValue = a3;
}

- (void)setHasAppInstallClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasAppInstallClickValue
{
  return (*(_QWORD *)&self->_has >> 6) & 1;
}

- (void)setAppInstallBaselineImpressionValue:(double)a3
{
  *(_QWORD *)&self->_has |= 0x20uLL;
  self->_appInstallBaselineImpressionValue = a3;
}

- (void)setHasAppInstallBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasAppInstallBaselineImpressionValue
{
  return (*(_QWORD *)&self->_has >> 5) & 1;
}

- (void)setAppInstallBaselineClickValue:(double)a3
{
  *(_QWORD *)&self->_has |= 0x10uLL;
  self->_appInstallBaselineClickValue = a3;
}

- (void)setHasAppInstallBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasAppInstallBaselineClickValue
{
  return (*(_QWORD *)&self->_has >> 4) & 1;
}

- (void)setAppInFocusImpressionValue:(double)a3
{
  *(_QWORD *)&self->_has |= 8uLL;
  self->_appInFocusImpressionValue = a3;
}

- (void)setHasAppInFocusImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasAppInFocusImpressionValue
{
  return (*(_QWORD *)&self->_has >> 3) & 1;
}

- (void)setAppInFocusClickValue:(double)a3
{
  *(_QWORD *)&self->_has |= 4uLL;
  self->_appInFocusClickValue = a3;
}

- (void)setHasAppInFocusClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasAppInFocusClickValue
{
  return (*(_QWORD *)&self->_has >> 2) & 1;
}

- (void)setAppInFocusBaselineImpressionValue:(double)a3
{
  *(_QWORD *)&self->_has |= 2uLL;
  self->_appInFocusBaselineImpressionValue = a3;
}

- (void)setHasAppInFocusBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasAppInFocusBaselineImpressionValue
{
  return (*(_QWORD *)&self->_has >> 1) & 1;
}

- (void)setAppInFocusBaselineClickValue:(double)a3
{
  *(_QWORD *)&self->_has |= 1uLL;
  self->_appInFocusBaselineClickValue = a3;
}

- (void)setHasAppInFocusBaselineClickValue:(BOOL)a3
{
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasAppInFocusBaselineClickValue
{
  return *(_DWORD *)&self->_has & 1;
}

- (void)setSafariHistoryImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x80000uLL;
  self->_safariHistoryImpressionValue = a3;
}

- (void)setHasSafariHistoryImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasSafariHistoryImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 19) & 1;
}

- (void)setSafariHistoryClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x40000uLL;
  self->_safariHistoryClickValue = a3;
}

- (void)setHasSafariHistoryClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasSafariHistoryClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 18) & 1;
}

- (void)setSafariHistoryBaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x20000uLL;
  self->_safariHistoryBaselineImpressionValue = a3;
}

- (void)setHasSafariHistoryBaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasSafariHistoryBaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 3) >> 17) & 1;
}

- (void)setSafariHistoryBaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x10000uLL;
  self->_safariHistoryBaselineClickValue = a3;
}

- (void)setHasSafariHistoryBaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasSafariHistoryBaselineClickValue
{
  return (*((_QWORD *)&self->_has + 3) >> 16) & 1;
}

- (void)setVideoComplete25ImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 4uLL;
  self->_videoComplete25ImpressionValue = a3;
}

- (void)setHasVideoComplete25ImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 4;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFFBLL | v3;
}

- (BOOL)hasVideoComplete25ImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 2) & 1;
}

- (void)setVideoComplete25ClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 2uLL;
  self->_videoComplete25ClickValue = a3;
}

- (void)setHasVideoComplete25ClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 2;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFFDLL | v3;
}

- (BOOL)hasVideoComplete25ClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 1) & 1;
}

- (void)setVideoComplete25BaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 1uLL;
  self->_videoComplete25BaselineImpressionValue = a3;
}

- (void)setHasVideoComplete25BaselineImpressionValue:(BOOL)a3
{
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFFELL | a3;
}

- (BOOL)hasVideoComplete25BaselineImpressionValue
{
  return *((_DWORD *)&self->_has + 10) & 1;
}

- (void)setVideoComplete25BaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x8000000000000000;
  self->_videoComplete25BaselineClickValue = a3;
}

- (void)setHasVideoComplete25BaselineClickValue:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = v3 & 0x8000000000000000 | *((_QWORD *)&self->_has + 4) & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasVideoComplete25BaselineClickValue
{
  return *((_QWORD *)&self->_has + 4) >> 63;
}

- (void)setVideoComplete50ImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x40uLL;
  self->_videoComplete50ImpressionValue = a3;
}

- (void)setHasVideoComplete50ImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasVideoComplete50ImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 6) & 1;
}

- (void)setVideoComplete50ClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x20uLL;
  self->_videoComplete50ClickValue = a3;
}

- (void)setHasVideoComplete50ClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasVideoComplete50ClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 5) & 1;
}

- (void)setVideoComplete50BaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x10uLL;
  self->_videoComplete50BaselineImpressionValue = a3;
}

- (void)setHasVideoComplete50BaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasVideoComplete50BaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 4) & 1;
}

- (void)setVideoComplete50BaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 8uLL;
  self->_videoComplete50BaselineClickValue = a3;
}

- (void)setHasVideoComplete50BaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasVideoComplete50BaselineClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 3) & 1;
}

- (void)setVideoComplete75ImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x400uLL;
  self->_videoComplete75ImpressionValue = a3;
}

- (void)setHasVideoComplete75ImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 1024;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFBFFLL | v3;
}

- (BOOL)hasVideoComplete75ImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 10) & 1;
}

- (void)setVideoComplete75ClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x200uLL;
  self->_videoComplete75ClickValue = a3;
}

- (void)setHasVideoComplete75ClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasVideoComplete75ClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 9) & 1;
}

- (void)setVideoComplete75BaselineImpressionValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x100uLL;
  self->_videoComplete75BaselineImpressionValue = a3;
}

- (void)setHasVideoComplete75BaselineImpressionValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasVideoComplete75BaselineImpressionValue
{
  return (*((_QWORD *)&self->_has + 5) >> 8) & 1;
}

- (void)setVideoComplete75BaselineClickValue:(double)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x80uLL;
  self->_videoComplete75BaselineClickValue = a3;
}

- (void)setHasVideoComplete75BaselineClickValue:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasVideoComplete75BaselineClickValue
{
  return (*((_QWORD *)&self->_has + 5) >> 7) & 1;
}

- (void)setAutoFavoriteMinClicks:(double)a3
{
  *(_QWORD *)&self->_has |= 0x400000uLL;
  self->_autoFavoriteMinClicks = a3;
}

- (void)setHasAutoFavoriteMinClicks:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMinClicks
{
  return (*(_QWORD *)&self->_has >> 22) & 1;
}

- (void)setGlobalScoreCoefficientHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x2000000uLL;
  self->_globalScoreCoefficientHalfLife = a3;
}

- (void)setHasGlobalScoreCoefficientHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreCoefficientHalfLife
{
  return (*((_QWORD *)&self->_has + 1) >> 25) & 1;
}

- (void)setGlobalScoreCoefficientInitialMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x4000000uLL;
  self->_globalScoreCoefficientInitialMultiplier = a3;
}

- (void)setHasGlobalScoreCoefficientInitialMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasGlobalScoreCoefficientInitialMultiplier
{
  return (*((_QWORD *)&self->_has + 1) >> 26) & 1;
}

- (void)setMinClusterSizeIPhoneAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x20000000000000uLL;
  self->_minClusterSizeIPhoneAutoFavorite = a3;
}

- (void)setHasMinClusterSizeIPhoneAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinClusterSizeIPhoneAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 53) & 1;
}

- (void)setMaxClusterSizeIPhoneAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x200000000000uLL;
  self->_maxClusterSizeIPhoneAutoFavorite = a3;
}

- (void)setHasMaxClusterSizeIPhoneAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxClusterSizeIPhoneAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 45) & 1;
}

- (void)setMinIdealClusterSizeIPhoneAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x200000000000000uLL;
  self->_minIdealClusterSizeIPhoneAutoFavorite = a3;
}

- (void)setHasMinIdealClusterSizeIPhoneAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinIdealClusterSizeIPhoneAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 57) & 1;
}

- (void)setMaxIdealClusterSizeIPhoneAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x2000000000000uLL;
  self->_maxIdealClusterSizeIPhoneAutoFavorite = a3;
}

- (void)setHasMaxIdealClusterSizeIPhoneAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxIdealClusterSizeIPhoneAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 49) & 1;
}

- (void)setMinClusterSizeIPadAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x8000000000000uLL;
  self->_minClusterSizeIPadAutoFavorite = a3;
}

- (void)setHasMinClusterSizeIPadAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinClusterSizeIPadAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 51) & 1;
}

- (void)setMaxClusterSizeIPadAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x80000000000uLL;
  self->_maxClusterSizeIPadAutoFavorite = a3;
}

- (void)setHasMaxClusterSizeIPadAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxClusterSizeIPadAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 43) & 1;
}

- (void)setMinIdealClusterSizeIPadAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x80000000000000uLL;
  self->_minIdealClusterSizeIPadAutoFavorite = a3;
}

- (void)setHasMinIdealClusterSizeIPadAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasMinIdealClusterSizeIPadAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 55) & 1;
}

- (void)setMaxIdealClusterSizeIPadAutoFavorite:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x800000000000uLL;
  self->_maxIdealClusterSizeIPadAutoFavorite = a3;
}

- (void)setHasMaxIdealClusterSizeIPadAutoFavorite:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasMaxIdealClusterSizeIPadAutoFavorite
{
  return (*((_QWORD *)&self->_has + 5) >> 47) & 1;
}

- (void)setSwipeToArticleWeakClickMinimumDuration:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x80000000000000uLL;
  self->_swipeToArticleWeakClickMinimumDuration = a3;
}

- (void)setHasSwipeToArticleWeakClickMinimumDuration:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFF7FFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSwipeToArticleWeakClickMinimumDuration
{
  return (*((_QWORD *)&self->_has + 3) >> 55) & 1;
}

- (void)setSwipeToArticleHeavyClickMinimumDuration:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x40000000000000uLL;
  self->_swipeToArticleHeavyClickMinimumDuration = a3;
}

- (void)setHasSwipeToArticleHeavyClickMinimumDuration:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFBFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSwipeToArticleHeavyClickMinimumDuration
{
  return (*((_QWORD *)&self->_has + 3) >> 54) & 1;
}

- (void)setMaxSuggestionsCount:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x10uLL;
  self->_maxSuggestionsCount = a3;
}

- (void)setHasMaxSuggestionsCount:(BOOL)a3
{
  uint64_t v3;

  v3 = 16;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFEFLL | v3;
}

- (BOOL)hasMaxSuggestionsCount
{
  return (*((_QWORD *)&self->_has + 2) >> 4) & 1;
}

- (void)setCohortMembershipFavoritedBoost:(double)a3
{
  *(_QWORD *)&self->_has |= 0x400000000000uLL;
  self->_cohortMembershipFavoritedBoost = a3;
}

- (void)setHasCohortMembershipFavoritedBoost:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipFavoritedBoost
{
  return (*(_QWORD *)&self->_has >> 46) & 1;
}

- (void)setCohortMembershipCurvature:(double)a3
{
  *(_QWORD *)&self->_has |= 0x100000000000uLL;
  self->_cohortMembershipCurvature = a3;
}

- (void)setHasCohortMembershipCurvature:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipCurvature
{
  return (*(_QWORD *)&self->_has >> 44) & 1;
}

- (void)setCohortMembershipCtrCeiling:(double)a3
{
  *(_QWORD *)&self->_has |= 0x80000000000uLL;
  self->_cohortMembershipCtrCeiling = a3;
}

- (void)setHasCohortMembershipCtrCeiling:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasCohortMembershipCtrCeiling
{
  return (*(_QWORD *)&self->_has >> 43) & 1;
}

- (void)setSafariEventBlackoutSeconds:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x8000uLL;
  self->_safariEventBlackoutSeconds = a3;
}

- (void)setHasSafariEventBlackoutSeconds:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasSafariEventBlackoutSeconds
{
  return (*((_QWORD *)&self->_has + 3) >> 15) & 1;
}

- (void)setChannelTopicDiversificationPenalty:(double)a3
{
  *(_QWORD *)&self->_has |= 0x10000000000uLL;
  self->_channelTopicDiversificationPenalty = a3;
}

- (void)setHasChannelTopicDiversificationPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasChannelTopicDiversificationPenalty
{
  return (*(_QWORD *)&self->_has >> 40) & 1;
}

- (void)setRealTimeUserFeedbackPublishDateHalfLifeCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x40uLL;
  self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient = a3;
}

- (void)setHasRealTimeUserFeedbackPublishDateHalfLifeCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasRealTimeUserFeedbackPublishDateHalfLifeCoefficient
{
  return (*((_QWORD *)&self->_has + 3) >> 6) & 1;
}

- (void)setAutoFavoriteTagFavorabilityExponent:(double)a3
{
  *(_QWORD *)&self->_has |= 0x80000000uLL;
  self->_autoFavoriteTagFavorabilityExponent = a3;
}

- (void)setHasAutoFavoriteTagFavorabilityExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteTagFavorabilityExponent
{
  return (*(_QWORD *)&self->_has >> 31) & 1;
}

- (void)setAutoFavoritePriorFactorExponent:(double)a3
{
  *(_QWORD *)&self->_has |= 0x40000000uLL;
  self->_autoFavoritePriorFactorExponent = a3;
}

- (void)setHasAutoFavoritePriorFactorExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasAutoFavoritePriorFactorExponent
{
  return (*(_QWORD *)&self->_has >> 30) & 1;
}

- (void)setUGroupMinimumSubscribedChannelSourceFeedArticleRatio:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x10000000000000uLL;
  self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio = a3;
}

- (void)setHasUGroupMinimumSubscribedChannelSourceFeedArticleRatio:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFEFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasUGroupMinimumSubscribedChannelSourceFeedArticleRatio
{
  return (*((_QWORD *)&self->_has + 4) >> 52) & 1;
}

- (void)setOnlyConsiderBestSourceFeedsInForYouGroup:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x400u;
  self->_onlyConsiderBestSourceFeedsInForYouGroup = a3;
}

- (void)setHasOnlyConsiderBestSourceFeedsInForYouGroup:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 1024;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFBFF | v3;
}

- (BOOL)hasOnlyConsiderBestSourceFeedsInForYouGroup
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 10) & 1;
}

- (void)setSafariTagFavorabilityExponent:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x800000uLL;
  self->_safariTagFavorabilityExponent = a3;
}

- (void)setHasSafariTagFavorabilityExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasSafariTagFavorabilityExponent
{
  return (*((_QWORD *)&self->_has + 3) >> 23) & 1;
}

- (void)setSafariPriorFactorExponent:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x200000uLL;
  self->_safariPriorFactorExponent = a3;
}

- (void)setHasSafariPriorFactorExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasSafariPriorFactorExponent
{
  return (*((_QWORD *)&self->_has + 3) >> 21) & 1;
}

- (void)setAppUsageTagFavorabilityExponent:(double)a3
{
  *(_QWORD *)&self->_has |= 0x800uLL;
  self->_appUsageTagFavorabilityExponent = a3;
}

- (void)setHasAppUsageTagFavorabilityExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasAppUsageTagFavorabilityExponent
{
  return (*(_QWORD *)&self->_has >> 11) & 1;
}

- (void)setAppUsagePriorFactorExponent:(double)a3
{
  *(_QWORD *)&self->_has |= 0x200uLL;
  self->_appUsagePriorFactorExponent = a3;
}

- (void)setHasAppUsagePriorFactorExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasAppUsagePriorFactorExponent
{
  return (*(_QWORD *)&self->_has >> 9) & 1;
}

- (void)setPortraitTagFavorabilityExponent:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x4000000000000uLL;
  self->_portraitTagFavorabilityExponent = a3;
}

- (void)setHasPortraitTagFavorabilityExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitTagFavorabilityExponent
{
  return (*((_QWORD *)&self->_has + 2) >> 50) & 1;
}

- (void)setPortraitPriorFactorExponent:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x800000000000uLL;
  self->_portraitPriorFactorExponent = a3;
}

- (void)setHasPortraitPriorFactorExponent:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasPortraitPriorFactorExponent
{
  return (*((_QWORD *)&self->_has + 2) >> 47) & 1;
}

- (void)setInternalUsageSignalWeight:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x200000000000000uLL;
  self->_internalUsageSignalWeight = a3;
}

- (void)setHasInternalUsageSignalWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasInternalUsageSignalWeight
{
  return (*((_QWORD *)&self->_has + 1) >> 57) & 1;
}

- (void)setEnablePreTigrisArticleScoring:(BOOL)a3
{
  *((_WORD *)&self->_has + 24) |= 0x20u;
  self->_enablePreTigrisArticleScoring = a3;
}

- (void)setHasEnablePreTigrisArticleScoring:(BOOL)a3
{
  __int16 v3;

  if (a3)
    v3 = 32;
  else
    v3 = 0;
  *((_WORD *)&self->_has + 24) = *((_WORD *)&self->_has + 24) & 0xFFDF | v3;
}

- (BOOL)hasEnablePreTigrisArticleScoring
{
  return ((unint64_t)*((unsigned __int16 *)&self->_has + 24) >> 5) & 1;
}

- (void)setNumEventsToDisableDefaultTopics:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x4000000000uLL;
  self->_numEventsToDisableDefaultTopics = a3;
}

- (void)setHasNumEventsToDisableDefaultTopics:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasNumEventsToDisableDefaultTopics
{
  return (*((_QWORD *)&self->_has + 2) >> 38) & 1;
}

- (void)setMetaGroupingRelatednessThreshold:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x80uLL;
  self->_metaGroupingRelatednessThreshold = a3;
}

- (void)setHasMetaGroupingRelatednessThreshold:(BOOL)a3
{
  uint64_t v3;

  v3 = 128;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFF7FLL | v3;
}

- (BOOL)hasMetaGroupingRelatednessThreshold
{
  return (*((_QWORD *)&self->_has + 2) >> 7) & 1;
}

- (void)setMetaGroupingRelatednessKWeight:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x40uLL;
  self->_metaGroupingRelatednessKWeight = a3;
}

- (void)setHasMetaGroupingRelatednessKWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 64;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFBFLL | v3;
}

- (BOOL)hasMetaGroupingRelatednessKWeight
{
  return (*((_QWORD *)&self->_has + 2) >> 6) & 1;
}

- (void)setMetaGroupingTopicScoreWeight:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x200uLL;
  self->_metaGroupingTopicScoreWeight = a3;
}

- (void)setHasMetaGroupingTopicScoreWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 512;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFDFFLL | v3;
}

- (BOOL)hasMetaGroupingTopicScoreWeight
{
  return (*((_QWORD *)&self->_has + 2) >> 9) & 1;
}

- (void)setMetaGroupingHighestScoringRelativeScoreMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x20uLL;
  self->_metaGroupingHighestScoringRelativeScoreMultiplier = a3;
}

- (void)setHasMetaGroupingHighestScoringRelativeScoreMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasMetaGroupingHighestScoringRelativeScoreMultiplier
{
  return (*((_QWORD *)&self->_has + 2) >> 5) & 1;
}

- (void)setMetaGroupingSubscribedTopicMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x100uLL;
  self->_metaGroupingSubscribedTopicMultiplier = a3;
}

- (void)setHasMetaGroupingSubscribedTopicMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 256;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFEFFLL | v3;
}

- (BOOL)hasMetaGroupingSubscribedTopicMultiplier
{
  return (*((_QWORD *)&self->_has + 2) >> 8) & 1;
}

- (void)clearRealTimeUserFeedbackTagCoefficients
{
  -[NSMutableArray removeAllObjects](self->_realTimeUserFeedbackTagCoefficients, "removeAllObjects");
}

- (void)addRealTimeUserFeedbackTagCoefficients:(id)a3
{
  id v4;
  NSMutableArray *realTimeUserFeedbackTagCoefficients;
  NSMutableArray *v6;
  NSMutableArray *v7;
  id v8;

  v4 = a3;
  realTimeUserFeedbackTagCoefficients = self->_realTimeUserFeedbackTagCoefficients;
  v8 = v4;
  if (!realTimeUserFeedbackTagCoefficients)
  {
    v6 = (NSMutableArray *)objc_alloc_init(MEMORY[0x24BDBCEB8]);
    v7 = self->_realTimeUserFeedbackTagCoefficients;
    self->_realTimeUserFeedbackTagCoefficients = v6;

    v4 = v8;
    realTimeUserFeedbackTagCoefficients = self->_realTimeUserFeedbackTagCoefficients;
  }
  -[NSMutableArray addObject:](realTimeUserFeedbackTagCoefficients, "addObject:", v4);

}

- (unint64_t)realTimeUserFeedbackTagCoefficientsCount
{
  return -[NSMutableArray count](self->_realTimeUserFeedbackTagCoefficients, "count");
}

- (id)realTimeUserFeedbackTagCoefficientsAtIndex:(unint64_t)a3
{
  return (id)-[NSMutableArray objectAtIndex:](self->_realTimeUserFeedbackTagCoefficients, "objectAtIndex:", a3);
}

+ (Class)realTimeUserFeedbackTagCoefficientsType
{
  return (Class)objc_opt_class();
}

- (void)setExpandedAutofavoriteClusterMinSizeMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x8000uLL;
  self->_expandedAutofavoriteClusterMinSizeMultiplier = a3;
}

- (void)setHasExpandedAutofavoriteClusterMinSizeMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasExpandedAutofavoriteClusterMinSizeMultiplier
{
  return (*((_QWORD *)&self->_has + 1) >> 15) & 1;
}

- (void)setExpandedAutofavoriteClusterMaxSizeMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x4000uLL;
  self->_expandedAutofavoriteClusterMaxSizeMultiplier = a3;
}

- (void)setHasExpandedAutofavoriteClusterMaxSizeMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasExpandedAutofavoriteClusterMaxSizeMultiplier
{
  return (*((_QWORD *)&self->_has + 1) >> 14) & 1;
}

- (void)setMaxExpandedAutofavoriteGroupCandidateRatio:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 8uLL;
  self->_maxExpandedAutofavoriteGroupCandidateRatio = a3;
}

- (void)setHasMaxExpandedAutofavoriteGroupCandidateRatio:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasMaxExpandedAutofavoriteGroupCandidateRatio
{
  return (*((_QWORD *)&self->_has + 2) >> 3) & 1;
}

- (void)setAutoFavoriteMaxIdleTime:(double)a3
{
  *(_QWORD *)&self->_has |= 0x200000uLL;
  self->_autoFavoriteMaxIdleTime = a3;
}

- (void)setHasAutoFavoriteMaxIdleTime:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasAutoFavoriteMaxIdleTime
{
  return (*(_QWORD *)&self->_has >> 21) & 1;
}

- (void)setAuditionedAutoFavoritesEmitterLimit:(unsigned int)a3
{
  *((_QWORD *)&self->_has + 5) |= 0x8000000uLL;
  self->_auditionedAutoFavoritesEmitterLimit = a3;
}

- (void)setHasAuditionedAutoFavoritesEmitterLimit:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 5) = *((_QWORD *)&self->_has + 5) & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasAuditionedAutoFavoritesEmitterLimit
{
  return (*((_QWORD *)&self->_has + 5) >> 27) & 1;
}

- (void)setNumSubscriptionsToDisableDefaultTopics:(int64_t)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x8000000000uLL;
  self->_numSubscriptionsToDisableDefaultTopics = a3;
}

- (void)setHasNumSubscriptionsToDisableDefaultTopics:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasNumSubscriptionsToDisableDefaultTopics
{
  return (*((_QWORD *)&self->_has + 2) >> 39) & 1;
}

- (void)setPublisherAggregateWeight:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x1000000000000000uLL;
  self->_publisherAggregateWeight = a3;
}

- (void)setHasPublisherAggregateWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xEFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPublisherAggregateWeight
{
  return (*((_QWORD *)&self->_has + 2) >> 60) & 1;
}

- (void)setDiversificationInitialPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 8uLL;
  self->_diversificationInitialPenalty = a3;
}

- (void)setHasDiversificationInitialPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 8;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFF7 | v3;
}

- (BOOL)hasDiversificationInitialPenalty
{
  return (*((_QWORD *)&self->_has + 1) >> 3) & 1;
}

- (void)setDiversificationPenaltyHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 1) |= 0x20uLL;
  self->_diversificationPenaltyHalfLife = a3;
}

- (void)setHasDiversificationPenaltyHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 32;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 1) = *((_QWORD *)&self->_has + 1) & 0xFFFFFFFFFFFFFFDFLL | v3;
}

- (BOOL)hasDiversificationPenaltyHalfLife
{
  return (*((_QWORD *)&self->_has + 1) >> 5) & 1;
}

- (void)setChannelTopicDiversificationInitialPenalty:(double)a3
{
  *(_QWORD *)&self->_has |= 0x8000000000uLL;
  self->_channelTopicDiversificationInitialPenalty = a3;
}

- (void)setHasChannelTopicDiversificationInitialPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasChannelTopicDiversificationInitialPenalty
{
  return (*(_QWORD *)&self->_has >> 39) & 1;
}

- (void)setChannelTopicDiversificationPenaltyHalfLife:(double)a3
{
  *(_QWORD *)&self->_has |= 0x20000000000uLL;
  self->_channelTopicDiversificationPenaltyHalfLife = a3;
}

- (void)setHasChannelTopicDiversificationPenaltyHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasChannelTopicDiversificationPenaltyHalfLife
{
  return (*(_QWORD *)&self->_has >> 41) & 1;
}

- (void)setPublisherDiversificationInitialPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x2000000000000000uLL;
  self->_publisherDiversificationInitialPenalty = a3;
}

- (void)setHasPublisherDiversificationInitialPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xDFFFFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasPublisherDiversificationInitialPenalty
{
  return (*((_QWORD *)&self->_has + 2) >> 61) & 1;
}

- (void)setPublisherDiversificationPenaltyHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x8000000000000000;
  self->_publisherDiversificationPenaltyHalfLife = a3;
}

- (void)setHasPublisherDiversificationPenaltyHalfLife:(BOOL)a3
{
  unint64_t v3;

  v3 = 0x8000000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = v3 & 0x8000000000000000 | *((_QWORD *)&self->_has + 2) & 0x7FFFFFFFFFFFFFFFLL;
}

- (BOOL)hasPublisherDiversificationPenaltyHalfLife
{
  return *((_QWORD *)&self->_has + 2) >> 63;
}

- (void)setMinimumGlobalScoreThreshold:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x800uLL;
  self->_minimumGlobalScoreThreshold = a3;
}

- (void)setHasMinimumGlobalScoreThreshold:(BOOL)a3
{
  uint64_t v3;

  v3 = 2048;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFF7FFLL | v3;
}

- (BOOL)hasMinimumGlobalScoreThreshold
{
  return (*((_QWORD *)&self->_has + 2) >> 11) & 1;
}

- (void)setMinimumGlobalScoreThresholdForSubscribedChannel:(double)a3
{
  *((_QWORD *)&self->_has + 2) |= 0x1000uLL;
  self->_minimumGlobalScoreThresholdForSubscribedChannel = a3;
}

- (void)setHasMinimumGlobalScoreThresholdForSubscribedChannel:(BOOL)a3
{
  uint64_t v3;

  v3 = 4096;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 2) = *((_QWORD *)&self->_has + 2) & 0xFFFFFFFFFFFFEFFFLL | v3;
}

- (BOOL)hasMinimumGlobalScoreThresholdForSubscribedChannel
{
  return (*((_QWORD *)&self->_has + 2) >> 12) & 1;
}

- (void)setSubscribedChannelScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x800000000000uLL;
  self->_subscribedChannelScoreCoefficient = a3;
}

- (void)setHasSubscribedChannelScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribedChannelScoreCoefficient
{
  return (*((_QWORD *)&self->_has + 3) >> 47) & 1;
}

- (void)setSubscribedTopicsScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 3) |= 0x1000000000000uLL;
  self->_subscribedTopicsScoreCoefficient = a3;
}

- (void)setHasSubscribedTopicsScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 3) = *((_QWORD *)&self->_has + 3) & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasSubscribedTopicsScoreCoefficient
{
  return HIWORD(*((_QWORD *)&self->_has + 3)) & 1;
}

- (void)setTopicFeedBaselineRatePrior:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x4000uLL;
  self->_topicFeedBaselineRatePrior = a3;
}

- (void)setHasTopicFeedBaselineRatePrior:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFBFFFLL | v3;
}

- (BOOL)hasTopicFeedBaselineRatePrior
{
  return (*((_QWORD *)&self->_has + 4) >> 14) & 1;
}

- (void)setTopicFeedDecayFactor:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x80000000uLL;
  self->_topicFeedDecayFactor = a3;
}

- (void)setHasTopicFeedDecayFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFF7FFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedDecayFactor
{
  return (*((_QWORD *)&self->_has + 4) >> 31) & 1;
}

- (void)setTopicFeedDemocratizationFactor:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x100000000uLL;
  self->_topicFeedDemocratizationFactor = a3;
}

- (void)setHasTopicFeedDemocratizationFactor:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFEFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedDemocratizationFactor
{
  return HIDWORD(*((_QWORD *)&self->_has + 4)) & 1;
}

- (void)setTopicFeedHalfLifeCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x20000000000uLL;
  self->_topicFeedHalfLifeCoefficient = a3;
}

- (void)setHasTopicFeedHalfLifeCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFDFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedHalfLifeCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 41) & 1;
}

- (void)setTopicFeedSubscribedChannelScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x2000000000000uLL;
  self->_topicFeedSubscribedChannelScoreCoefficient = a3;
}

- (void)setHasTopicFeedSubscribedChannelScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFDFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedSubscribedChannelScoreCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 49) & 1;
}

- (void)setTopicFeedMutedVoteCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x100000000000uLL;
  self->_topicFeedMutedVoteCoefficient = a3;
}

- (void)setHasTopicFeedMutedVoteCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFEFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedMutedVoteCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 44) & 1;
}

- (void)setTopicFeedPersonalizationCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x200000000000uLL;
  self->_topicFeedPersonalizationCoefficient = a3;
}

- (void)setHasTopicFeedPersonalizationCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedPersonalizationCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 45) & 1;
}

- (void)setTopicFeedPublisherAggregateWeight:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x400000000000uLL;
  self->_topicFeedPublisherAggregateWeight = a3;
}

- (void)setHasTopicFeedPublisherAggregateWeight:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFBFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedPublisherAggregateWeight
{
  return (*((_QWORD *)&self->_has + 4) >> 46) & 1;
}

- (void)setTopicFeedGlobalScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x1000000000uLL;
  self->_topicFeedGlobalScoreCoefficient = a3;
}

- (void)setHasTopicFeedGlobalScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFEFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedGlobalScoreCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 36) & 1;
}

- (void)setTopicFeedGlobalScoreCoefficientHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x2000000000uLL;
  self->_topicFeedGlobalScoreCoefficientHalfLife = a3;
}

- (void)setHasTopicFeedGlobalScoreCoefficientHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFDFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedGlobalScoreCoefficientHalfLife
{
  return (*((_QWORD *)&self->_has + 4) >> 37) & 1;
}

- (void)setTopicFeedGlobalScoreCoefficientInitialMultiplier:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x4000000000uLL;
  self->_topicFeedGlobalScoreCoefficientInitialMultiplier = a3;
}

- (void)setHasTopicFeedGlobalScoreCoefficientInitialMultiplier:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFBFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedGlobalScoreCoefficientInitialMultiplier
{
  return (*((_QWORD *)&self->_has + 4) >> 38) & 1;
}

- (void)setTopicFeedGlobalScoreToCtrIntercept:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x8000000000uLL;
  self->_topicFeedGlobalScoreToCtrIntercept = a3;
}

- (void)setHasTopicFeedGlobalScoreToCtrIntercept:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFF7FFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedGlobalScoreToCtrIntercept
{
  return (*((_QWORD *)&self->_has + 4) >> 39) & 1;
}

- (void)setTopicFeedGlobalScoreToCtrSlope:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x10000000000uLL;
  self->_topicFeedGlobalScoreToCtrSlope = a3;
}

- (void)setHasTopicFeedGlobalScoreToCtrSlope:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedGlobalScoreToCtrSlope
{
  return (*((_QWORD *)&self->_has + 4) >> 40) & 1;
}

- (void)setTopicFeedMinimumGlobalScoreThreshold:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x40000000000uLL;
  self->_topicFeedMinimumGlobalScoreThreshold = a3;
}

- (void)setHasTopicFeedMinimumGlobalScoreThreshold:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFBFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedMinimumGlobalScoreThreshold
{
  return (*((_QWORD *)&self->_has + 4) >> 42) & 1;
}

- (void)setTopicFeedMinimumGlobalScoreThresholdForSubscribedChannel:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x80000000000uLL;
  self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel = a3;
}

- (void)setHasTopicFeedMinimumGlobalScoreThresholdForSubscribedChannel:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFF7FFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedMinimumGlobalScoreThresholdForSubscribedChannel
{
  return (*((_QWORD *)&self->_has + 4) >> 43) & 1;
}

- (void)setTopicFeedRealTimeUserFeedbackCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x800000000000uLL;
  self->_topicFeedRealTimeUserFeedbackCoefficient = a3;
}

- (void)setHasTopicFeedRealTimeUserFeedbackCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFF7FFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedRealTimeUserFeedbackCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 47) & 1;
}

- (void)setTopicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x1000000000000uLL;
  self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient = a3;
}

- (void)setHasTopicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFEFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient
{
  return HIWORD(*((_QWORD *)&self->_has + 4)) & 1;
}

- (void)setTopicFeedCohortMembershipCtrCeiling:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x40000uLL;
  self->_topicFeedCohortMembershipCtrCeiling = a3;
}

- (void)setHasTopicFeedCohortMembershipCtrCeiling:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFBFFFFLL | v3;
}

- (BOOL)hasTopicFeedCohortMembershipCtrCeiling
{
  return (*((_QWORD *)&self->_has + 4) >> 18) & 1;
}

- (void)setTopicFeedCohortMembershipCurvature:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x80000uLL;
  self->_topicFeedCohortMembershipCurvature = a3;
}

- (void)setHasTopicFeedCohortMembershipCurvature:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x80000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFF7FFFFLL | v3;
}

- (BOOL)hasTopicFeedCohortMembershipCurvature
{
  return (*((_QWORD *)&self->_has + 4) >> 19) & 1;
}

- (void)setTopicFeedCohortMembershipFavoritedBoost:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x100000uLL;
  self->_topicFeedCohortMembershipFavoritedBoost = a3;
}

- (void)setHasTopicFeedCohortMembershipFavoritedBoost:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x100000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFEFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCohortMembershipFavoritedBoost
{
  return (*((_QWORD *)&self->_has + 4) >> 20) & 1;
}

- (void)setTopicFeedCohortMembershipMinWeightedImpressions:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x200000uLL;
  self->_topicFeedCohortMembershipMinWeightedImpressions = a3;
}

- (void)setHasTopicFeedCohortMembershipMinWeightedImpressions:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFDFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCohortMembershipMinWeightedImpressions
{
  return (*((_QWORD *)&self->_has + 4) >> 21) & 1;
}

- (void)setTopicFeedSubscribedTopicsScoreCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x4000000000000uLL;
  self->_topicFeedSubscribedTopicsScoreCoefficient = a3;
}

- (void)setHasTopicFeedSubscribedTopicsScoreCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFBFFFFFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedSubscribedTopicsScoreCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 50) & 1;
}

- (void)setTopicFeedCtrWithZeroSubscribed:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x40000000uLL;
  self->_topicFeedCtrWithZeroSubscribed = a3;
}

- (void)setHasTopicFeedCtrWithZeroSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x40000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFBFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithZeroSubscribed
{
  return (*((_QWORD *)&self->_has + 4) >> 30) & 1;
}

- (void)setTopicFeedCtrWithOneSubscribed:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x800000uLL;
  self->_topicFeedCtrWithOneSubscribed = a3;
}

- (void)setHasTopicFeedCtrWithOneSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFF7FFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithOneSubscribed
{
  return (*((_QWORD *)&self->_has + 4) >> 23) & 1;
}

- (void)setTopicFeedCtrWithTwoSubscribed:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x10000000uLL;
  self->_topicFeedCtrWithTwoSubscribed = a3;
}

- (void)setHasTopicFeedCtrWithTwoSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFEFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithTwoSubscribed
{
  return (*((_QWORD *)&self->_has + 4) >> 28) & 1;
}

- (void)setTopicFeedCtrWithThreeSubscribed:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x4000000uLL;
  self->_topicFeedCtrWithThreeSubscribed = a3;
}

- (void)setHasTopicFeedCtrWithThreeSubscribed:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x4000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFBFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithThreeSubscribed
{
  return (*((_QWORD *)&self->_has + 4) >> 26) & 1;
}

- (void)setTopicFeedAutofavoritedVoteCoefficient:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x2000uLL;
  self->_topicFeedAutofavoritedVoteCoefficient = a3;
}

- (void)setHasTopicFeedAutofavoritedVoteCoefficient:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFFDFFFLL | v3;
}

- (BOOL)hasTopicFeedAutofavoritedVoteCoefficient
{
  return (*((_QWORD *)&self->_has + 4) >> 13) & 1;
}

- (void)setTopicFeedCtrWithZeroAutofavorited:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x20000000uLL;
  self->_topicFeedCtrWithZeroAutofavorited = a3;
}

- (void)setHasTopicFeedCtrWithZeroAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFDFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithZeroAutofavorited
{
  return (*((_QWORD *)&self->_has + 4) >> 29) & 1;
}

- (void)setTopicFeedCtrWithOneAutofavorited:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x400000uLL;
  self->_topicFeedCtrWithOneAutofavorited = a3;
}

- (void)setHasTopicFeedCtrWithOneAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFBFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithOneAutofavorited
{
  return (*((_QWORD *)&self->_has + 4) >> 22) & 1;
}

- (void)setTopicFeedCtrWithTwoAutofavorited:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x8000000uLL;
  self->_topicFeedCtrWithTwoAutofavorited = a3;
}

- (void)setHasTopicFeedCtrWithTwoAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFF7FFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithTwoAutofavorited
{
  return (*((_QWORD *)&self->_has + 4) >> 27) & 1;
}

- (void)setTopicFeedCtrWithThreeAutofavorited:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x2000000uLL;
  self->_topicFeedCtrWithThreeAutofavorited = a3;
}

- (void)setHasTopicFeedCtrWithThreeAutofavorited:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x2000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFDFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithThreeAutofavorited
{
  return (*((_QWORD *)&self->_has + 4) >> 25) & 1;
}

- (void)setTopicFeedDiversificationInitialPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x200000000uLL;
  self->_topicFeedDiversificationInitialPenalty = a3;
}

- (void)setHasTopicFeedDiversificationInitialPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x200000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFDFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedDiversificationInitialPenalty
{
  return (*((_QWORD *)&self->_has + 4) >> 33) & 1;
}

- (void)setTopicFeedDiversificationPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x400000000uLL;
  self->_topicFeedDiversificationPenalty = a3;
}

- (void)setHasTopicFeedDiversificationPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x400000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFBFFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedDiversificationPenalty
{
  return (*((_QWORD *)&self->_has + 4) >> 34) & 1;
}

- (void)setTopicFeedDiversificationPenaltyHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x800000000uLL;
  self->_topicFeedDiversificationPenaltyHalfLife = a3;
}

- (void)setHasTopicFeedDiversificationPenaltyHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x800000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFF7FFFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedDiversificationPenaltyHalfLife
{
  return (*((_QWORD *)&self->_has + 4) >> 35) & 1;
}

- (void)setTopicFeedChannelTopicDiversificationInitialPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x8000uLL;
  self->_topicFeedChannelTopicDiversificationInitialPenalty = a3;
}

- (void)setHasTopicFeedChannelTopicDiversificationInitialPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)hasTopicFeedChannelTopicDiversificationInitialPenalty
{
  return (*((_QWORD *)&self->_has + 4) >> 15) & 1;
}

- (void)setTopicFeedChannelTopicDiversificationPenalty:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x10000uLL;
  self->_topicFeedChannelTopicDiversificationPenalty = a3;
}

- (void)setHasTopicFeedChannelTopicDiversificationPenalty:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x10000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFEFFFFLL | v3;
}

- (BOOL)hasTopicFeedChannelTopicDiversificationPenalty
{
  return (*((_QWORD *)&self->_has + 4) >> 16) & 1;
}

- (void)setTopicFeedChannelTopicDiversificationPenaltyHalfLife:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x20000uLL;
  self->_topicFeedChannelTopicDiversificationPenaltyHalfLife = a3;
}

- (void)setHasTopicFeedChannelTopicDiversificationPenaltyHalfLife:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x20000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFFFDFFFFLL | v3;
}

- (BOOL)hasTopicFeedChannelTopicDiversificationPenaltyHalfLife
{
  return (*((_QWORD *)&self->_has + 4) >> 17) & 1;
}

- (void)setCtrWithSubscribedChannel:(double)a3
{
  *(_QWORD *)&self->_has |= 0x8000000000000uLL;
  self->_ctrWithSubscribedChannel = a3;
}

- (void)setHasCtrWithSubscribedChannel:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x8000000000000;
  if (!a3)
    v3 = 0;
  *(_QWORD *)&self->_has = *(_QWORD *)&self->_has & 0xFFF7FFFFFFFFFFFFLL | v3;
}

- (BOOL)hasCtrWithSubscribedChannel
{
  return (*(_QWORD *)&self->_has >> 51) & 1;
}

- (void)setTopicFeedCtrWithSubscribedChannel:(double)a3
{
  *((_QWORD *)&self->_has + 4) |= 0x1000000uLL;
  self->_topicFeedCtrWithSubscribedChannel = a3;
}

- (void)setHasTopicFeedCtrWithSubscribedChannel:(BOOL)a3
{
  uint64_t v3;

  v3 = 0x1000000;
  if (!a3)
    v3 = 0;
  *((_QWORD *)&self->_has + 4) = *((_QWORD *)&self->_has + 4) & 0xFFFFFFFFFEFFFFFFLL | v3;
}

- (BOOL)hasTopicFeedCtrWithSubscribedChannel
{
  return (*((_QWORD *)&self->_has + 4) >> 24) & 1;
}

- (id)description
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  objc_super v8;

  v3 = (void *)MEMORY[0x24BDD17C8];
  v8.receiver = self;
  v8.super_class = (Class)NTPBPersonalizationTreatment;
  -[NTPBPersonalizationTreatment description](&v8, sel_description);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NTPBPersonalizationTreatment dictionaryRepresentation](self, "dictionaryRepresentation");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("%@ %@"), v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (id)dictionaryRepresentation
{
  void *v3;
  $92685FB1F0322ABB262316FA35568CC1 *p_has;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  __int16 v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  void *v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __int16 v226;
  void *v227;
  void *v228;
  NSMutableArray *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t i;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  void *v240;
  void *v241;
  void *v242;
  void *v243;
  void *v244;
  void *v245;
  void *v246;
  void *v247;
  void *v248;
  void *v249;
  void *v250;
  void *v251;
  void *v252;
  void *v253;
  void *v254;
  void *v255;
  void *v256;
  void *v257;
  void *v258;
  void *v259;
  void *v260;
  void *v261;
  void *v262;
  void *v263;
  void *v264;
  void *v265;
  void *v266;
  void *v267;
  void *v268;
  void *v269;
  void *v270;
  void *v271;
  void *v272;
  void *v273;
  void *v274;
  void *v275;
  void *v276;
  void *v277;
  void *v278;
  void *v279;
  void *v280;
  void *v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  __int16 v285;
  void *v286;
  void *v287;
  NSMutableArray *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t j;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  void *v300;
  void *v301;
  void *v302;
  void *v303;
  void *v304;
  void *v305;
  void *v306;
  void *v307;
  void *v308;
  void *v309;
  void *v310;
  void *v311;
  void *v312;
  void *v313;
  void *v314;
  void *v315;
  void *v316;
  void *v317;
  void *v318;
  void *v319;
  void *v320;
  void *v321;
  void *v322;
  void *v323;
  void *v324;
  void *v325;
  void *v326;
  void *v327;
  void *v328;
  void *v329;
  void *v330;
  void *v331;
  void *v332;
  void *v333;
  void *v334;
  void *v335;
  void *v336;
  void *v337;
  void *v338;
  void *v339;
  void *v340;
  void *v341;
  void *v342;
  void *v343;
  void *v344;
  void *v345;
  void *v346;
  void *v347;
  void *v348;
  void *v349;
  void *v350;
  void *v351;
  void *v352;
  void *v353;
  void *v354;
  void *v355;
  void *v356;
  void *v357;
  void *v358;
  void *v359;
  void *v360;
  void *v361;
  void *v362;
  void *v363;
  void *v364;
  void *v365;
  void *v366;
  void *v367;
  void *v368;
  void *v369;
  void *v370;
  void *v371;
  void *v372;
  void *v373;
  void *v374;
  void *v375;
  void *v376;
  void *v377;
  void *v378;
  void *v379;
  void *v380;
  void *v381;
  void *v382;
  void *v383;
  void *v384;
  void *v385;
  void *v386;
  void *v387;
  void *v388;
  void *v389;
  void *v390;
  void *v391;
  void *v392;
  uint64_t v393;
  void *v394;
  id v395;
  void *v397;
  void *v398;
  void *v399;
  void *v400;
  void *v401;
  void *v402;
  void *v403;
  void *v404;
  void *v405;
  void *v406;
  void *v407;
  void *v408;
  void *v409;
  void *v410;
  void *v411;
  void *v412;
  void *v413;
  void *v414;
  void *v415;
  void *v416;
  void *v417;
  void *v418;
  void *v419;
  void *v420;
  void *v421;
  void *v422;
  void *v423;
  void *v424;
  void *v425;
  void *v426;
  void *v427;
  void *v428;
  void *v429;
  void *v430;
  void *v431;
  void *v432;
  void *v433;
  void *v434;
  void *v435;
  void *v436;
  void *v437;
  void *v438;
  void *v439;
  void *v440;
  void *v441;
  void *v442;
  void *v443;
  void *v444;
  void *v445;
  void *v446;
  void *v447;
  void *v448;
  void *v449;
  void *v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  _BYTE v459[128];
  _BYTE v460[128];
  uint64_t v461;

  v461 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  p_has = &self->_has;
  v5 = *((_QWORD *)&self->_has + 4);
  if ((v5 & 0x8000000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_treatmentId);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v7, CFSTR("treatment_id"));

    v5 = *((_QWORD *)&self->_has + 4);
  }
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x2000000000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_decayFactor);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v18, CFSTR("decay_factor"));

    v5 = *((_QWORD *)&self->_has + 4);
    v6 = *((_QWORD *)&self->_has + 5);
    v9 = *((_QWORD *)&self->_has + 2);
    v8 = *((_QWORD *)&self->_has + 3);
    v11 = *(_QWORD *)p_has;
    v10 = *((_QWORD *)&self->_has + 1);
    v12 = *((_WORD *)&self->_has + 24);
    if ((*(_QWORD *)p_has & 0x2000000000) == 0)
    {
LABEL_5:
      if ((v11 & 0x4000000000) == 0)
        goto LABEL_6;
      goto LABEL_107;
    }
  }
  else if ((v11 & 0x2000000000) == 0)
  {
    goto LABEL_5;
  }
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_baselineImpressionPrior);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v19, CFSTR("baseline_impression_prior"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000) == 0)
  {
LABEL_6:
    if ((v10 & 0x20000) == 0)
      goto LABEL_7;
    goto LABEL_108;
  }
LABEL_107:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_baselineRatePrior);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v20, CFSTR("baseline_rate_prior"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000) == 0)
  {
LABEL_7:
    if ((v12 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_109;
  }
LABEL_108:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_featureImpressionPrior);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v21, CFSTR("feature_impression_prior"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v12 & 0x40) == 0)
  {
LABEL_8:
    if ((v10 & 0x800000) == 0)
      goto LABEL_9;
    goto LABEL_110;
  }
LABEL_109:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_globalScoreRankingEnabled);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v22, CFSTR("global_score_ranking_enabled"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800000) == 0)
  {
LABEL_9:
    if ((v8 & 0x20000000000000) == 0)
      goto LABEL_10;
    goto LABEL_111;
  }
LABEL_110:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreBump);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v23, CFSTR("global_score_bump"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000000000) == 0)
  {
LABEL_10:
    if ((v9 & 0x40000000000) == 0)
      goto LABEL_11;
    goto LABEL_112;
  }
LABEL_111:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscriptionVoteCoefficient);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v24, CFSTR("subscription_vote_coefficient"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x40000000000) == 0)
  {
LABEL_11:
    if ((v10 & 0x1000000) == 0)
      goto LABEL_12;
    goto LABEL_113;
  }
LABEL_112:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_personalizationCoefficient);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v25, CFSTR("personalization_coefficient"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_12:
    if ((v8 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_114;
  }
LABEL_113:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreCoefficient);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v26, CFSTR("global_score_coefficient"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10) == 0)
  {
LABEL_13:
    if ((v9 & 0x400000000000000) == 0)
      goto LABEL_14;
    goto LABEL_115;
  }
LABEL_114:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_publisherTopicIdEventCountMinimum);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v27, CFSTR("publisher_topic_id_event_count_minimum"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x400000000000000) == 0)
  {
LABEL_14:
    if ((v10 & 0x10000000000) == 0)
      goto LABEL_15;
    goto LABEL_116;
  }
LABEL_115:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_presentationImpressionValue);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v28, CFSTR("presentation_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000000000) == 0)
  {
LABEL_15:
    if ((v10 & 0x1000000000000000) == 0)
      goto LABEL_16;
    goto LABEL_117;
  }
LABEL_116:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_heavyClickImpressionValue);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v29, CFSTR("heavy_click_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000000000000) == 0)
  {
LABEL_16:
    if ((v8 & 0x10000000000) == 0)
      goto LABEL_17;
    goto LABEL_118;
  }
LABEL_117:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_likeImpressionValue);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v30, CFSTR("like_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_18;
    goto LABEL_119;
  }
LABEL_118:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_shareImpressionValue);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v31, CFSTR("share_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_18:
    if ((v8 & 0x200000000000) == 0)
      goto LABEL_19;
    goto LABEL_120;
  }
LABEL_119:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_savedImpressionValue);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v32, CFSTR("saved_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x200000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_121;
  }
LABEL_120:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribeImpressionValue);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v33, CFSTR("subscribe_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_21;
    goto LABEL_122;
  }
LABEL_121:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tappedImpressionValue);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v34, CFSTR("tapped_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x800000000000000) == 0)
      goto LABEL_22;
    goto LABEL_123;
  }
LABEL_122:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_weakClickImpressionValue);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v35, CFSTR("weak_click_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x800000000000000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_124;
  }
LABEL_123:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unsubscribeImpressionValue);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v36, CFSTR("unsubscribe_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v10 & 2) == 0)
      goto LABEL_24;
    goto LABEL_125;
  }
LABEL_124:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_visitImpressionValue);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v37, CFSTR("visit_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 2) == 0)
  {
LABEL_24:
    if ((v9 & 0x100000000000000) == 0)
      goto LABEL_25;
    goto LABEL_126;
  }
LABEL_125:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_dislikeImpressionValue);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v38, CFSTR("dislike_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x100000000000000) == 0)
  {
LABEL_25:
    if ((v10 & 0x4000000000) == 0)
      goto LABEL_26;
    goto LABEL_127;
  }
LABEL_126:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_presentationClickValue);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v39, CFSTR("presentation_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x4000000000) == 0)
  {
LABEL_26:
    if ((v10 & 0x400000000000000) == 0)
      goto LABEL_27;
    goto LABEL_128;
  }
LABEL_127:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_heavyClickClickValue);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v40, CFSTR("heavy_click_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400000000000000) == 0)
  {
LABEL_27:
    if ((v8 & 0x4000000000) == 0)
      goto LABEL_28;
    goto LABEL_129;
  }
LABEL_128:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_likeClickValue);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v41, CFSTR("like_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_130;
  }
LABEL_129:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_shareClickValue);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v42, CFSTR("share_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v8 & 0x80000000000) == 0)
      goto LABEL_30;
    goto LABEL_131;
  }
LABEL_130:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_savedClickValue);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v43, CFSTR("saved_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x80000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x200) == 0)
      goto LABEL_31;
    goto LABEL_132;
  }
LABEL_131:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribeClickValue);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v44, CFSTR("subscribe_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x200) == 0)
  {
LABEL_31:
    if ((v6 & 0x800000) == 0)
      goto LABEL_32;
    goto LABEL_133;
  }
LABEL_132:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tappedClickValue);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v45, CFSTR("tapped_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x800000) == 0)
  {
LABEL_32:
    if ((v5 & 0x200000000000000) == 0)
      goto LABEL_33;
    goto LABEL_134;
  }
LABEL_133:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_weakClickClickValue);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v46, CFSTR("weak_click_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x200000000000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x80000) == 0)
      goto LABEL_34;
    goto LABEL_135;
  }
LABEL_134:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unsubscribeClickValue);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v47, CFSTR("unsubscribe_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x80000) == 0)
  {
LABEL_34:
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_35;
    goto LABEL_136;
  }
LABEL_135:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_visitClickValue);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v48, CFSTR("visit_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v10 & 0x10000000000000) == 0)
      goto LABEL_36;
    goto LABEL_137;
  }
LABEL_136:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_dislikeClickValue);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v49, CFSTR("dislike_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000000000000) == 0)
  {
LABEL_36:
    if ((v10 & 0x40000000000000) == 0)
      goto LABEL_37;
    goto LABEL_138;
  }
LABEL_137:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateMinimum);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v50, CFSTR("hourly_flow_rate_minimum"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000000000000) == 0)
  {
LABEL_37:
    if ((v10 & 0x2000000000000) == 0)
      goto LABEL_38;
    goto LABEL_139;
  }
LABEL_138:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateSubscriptionCountBuffer);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v51, CFSTR("hourly_flow_rate_subscription_count_buffer"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000000) == 0)
  {
LABEL_38:
    if ((v11 & 0x4000000000000000) == 0)
      goto LABEL_39;
    goto LABEL_140;
  }
LABEL_139:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateDampeningFactor);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v52, CFSTR("hourly_flow_rate_dampening_factor"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000000000) == 0)
  {
LABEL_39:
    if ((v8 & 0x40000000000) == 0)
      goto LABEL_40;
    goto LABEL_141;
  }
LABEL_140:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_democratizationFactor);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v53, CFSTR("democratization_factor"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x40000000000) == 0)
  {
LABEL_40:
    if ((v10 & 0x40000) == 0)
      goto LABEL_41;
    goto LABEL_142;
  }
LABEL_141:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_sliceTimeInterval);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v54, CFSTR("slice_time_interval"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000) == 0)
  {
LABEL_41:
    if ((v10 & 0x200000) == 0)
      goto LABEL_42;
    goto LABEL_143;
  }
LABEL_142:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_flowRateDampeningSliceCount);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v55, CFSTR("flow_rate_dampening_slice_count"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x200000) == 0)
  {
LABEL_42:
    if ((v10 & 0x2000000000) == 0)
      goto LABEL_43;
    goto LABEL_144;
  }
LABEL_143:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_flowRateMinimumDampeningFactor);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v56, CFSTR("flow_rate_minimum_dampening_factor"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000) == 0)
  {
LABEL_43:
    if ((v10 & 0x10) == 0)
      goto LABEL_44;
    goto LABEL_145;
  }
LABEL_144:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_halfLifeCoefficient);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v57, CFSTR("half_life_coefficient"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10) == 0)
  {
LABEL_44:
    if ((v10 & 0x40000000000) == 0)
      goto LABEL_45;
    goto LABEL_146;
  }
LABEL_145:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_diversificationPenalty);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v58, CFSTR("diversification_penalty"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v8 & 0x8000000000000) == 0)
      goto LABEL_46;
    goto LABEL_147;
  }
LABEL_146:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_heavyClickMinimumDuration);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v59, CFSTR("heavy_click_minimum_duration"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000000000) == 0)
  {
LABEL_46:
    if ((v8 & 0x2000000000000) == 0)
      goto LABEL_47;
    goto LABEL_148;
  }
LABEL_147:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscriptionRelatedImpressionValue);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v60, CFSTR("subscription_related_impression_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x2000000000000) == 0)
  {
LABEL_47:
    if ((v10 & 0x20000000000000) == 0)
      goto LABEL_48;
    goto LABEL_149;
  }
LABEL_148:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscriptionRelatedClickValue);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v61, CFSTR("subscription_related_click_value"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000000000000) == 0)
  {
LABEL_48:
    if ((v10 & 0x10000) == 0)
      goto LABEL_49;
    goto LABEL_150;
  }
LABEL_149:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRatePerSubscription);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v62, CFSTR("hourly_flow_rate_per_subscription"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000) == 0)
  {
LABEL_49:
    if ((v10 & 0x100000) == 0)
      goto LABEL_50;
    goto LABEL_151;
  }
LABEL_150:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_extraHeadlinesToShowTheUser);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v63, CFSTR("extra_headlines_to_show_the_user"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x100000) == 0)
  {
LABEL_50:
    if ((v10 & 0x80000) == 0)
      goto LABEL_51;
    goto LABEL_152;
  }
LABEL_151:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_flowRateDegreeOfDynamism);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v64, CFSTR("flow_rate_degree_of_dynamism"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x80000) == 0)
  {
LABEL_51:
    if ((v10 & 0x400000) == 0)
      goto LABEL_52;
    goto LABEL_153;
  }
LABEL_152:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_flowRateDecayFactor);
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v65, CFSTR("flow_rate_decay_factor"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400000) == 0)
  {
LABEL_52:
    if ((v9 & 0x800000000000000) == 0)
      goto LABEL_53;
    goto LABEL_154;
  }
LABEL_153:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_flowRatePriorWeight);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v66, CFSTR("flow_rate_prior_weight"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x800000000000000) == 0)
  {
LABEL_53:
    if ((v10 & 0x20000000000) == 0)
      goto LABEL_54;
    goto LABEL_155;
  }
LABEL_154:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_presentationImpressionValueBaseline);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v67, CFSTR("presentation_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000000000) == 0)
  {
LABEL_54:
    if ((v10 & 0x2000000000000000) == 0)
      goto LABEL_55;
    goto LABEL_156;
  }
LABEL_155:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_heavyClickImpressionValueBaseline);
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v68, CFSTR("heavy_click_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000000000) == 0)
  {
LABEL_55:
    if ((v8 & 0x20000000000) == 0)
      goto LABEL_56;
    goto LABEL_157;
  }
LABEL_156:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_likeImpressionValueBaseline);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v69, CFSTR("like_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v8 & 0x40000000) == 0)
      goto LABEL_57;
    goto LABEL_158;
  }
LABEL_157:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_shareImpressionValueBaseline);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v70, CFSTR("share_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v8 & 0x400000000000) == 0)
      goto LABEL_58;
    goto LABEL_159;
  }
LABEL_158:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_savedImpressionValueBaseline);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v71, CFSTR("saved_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x400000000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_160;
  }
LABEL_159:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribeImpressionValueBaseline);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v72, CFSTR("subscribe_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x1000) == 0)
  {
LABEL_59:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_161;
  }
LABEL_160:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tappedImpressionValueBaseline);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v73, CFSTR("tapped_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x1000000000000000) == 0)
      goto LABEL_61;
    goto LABEL_162;
  }
LABEL_161:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_weakClickImpressionValueBaseline);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v74, CFSTR("weak_click_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x400000) == 0)
      goto LABEL_62;
    goto LABEL_163;
  }
LABEL_162:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unsubscribeImpressionValueBaseline);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v75, CFSTR("unsubscribe_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x400000) == 0)
  {
LABEL_62:
    if ((v10 & 4) == 0)
      goto LABEL_63;
    goto LABEL_164;
  }
LABEL_163:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_visitImpressionValueBaseline);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v76, CFSTR("visit_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 4) == 0)
  {
LABEL_63:
    if ((v8 & 0x10000000000000) == 0)
      goto LABEL_64;
    goto LABEL_165;
  }
LABEL_164:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_dislikeImpressionValueBaseline);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v77, CFSTR("dislike_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000000000) == 0)
  {
LABEL_64:
    if ((v9 & 0x200000000000000) == 0)
      goto LABEL_65;
    goto LABEL_166;
  }
LABEL_165:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscriptionRelatedImpressionValueBaseline);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v78, CFSTR("subscription_related_impression_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x200000000000000) == 0)
  {
LABEL_65:
    if ((v10 & 0x8000000000) == 0)
      goto LABEL_66;
    goto LABEL_167;
  }
LABEL_166:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_presentationClickValueBaseline);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v79, CFSTR("presentation_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v10 & 0x800000000000000) == 0)
      goto LABEL_67;
    goto LABEL_168;
  }
LABEL_167:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_heavyClickClickValueBaseline);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v80, CFSTR("heavy_click_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800000000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x8000000000) == 0)
      goto LABEL_68;
    goto LABEL_169;
  }
LABEL_168:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_likeClickValueBaseline);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v81, CFSTR("like_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000000) == 0)
  {
LABEL_68:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_69;
    goto LABEL_170;
  }
LABEL_169:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_shareClickValueBaseline);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v82, CFSTR("share_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_69:
    if ((v8 & 0x100000000000) == 0)
      goto LABEL_70;
    goto LABEL_171;
  }
LABEL_170:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_savedClickValueBaseline);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v83, CFSTR("saved_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x400) == 0)
      goto LABEL_71;
    goto LABEL_172;
  }
LABEL_171:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribeClickValueBaseline);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v84, CFSTR("subscribe_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v5 & 0x400) == 0)
  {
LABEL_71:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_72;
    goto LABEL_173;
  }
LABEL_172:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tappedClickValueBaseline);
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v85, CFSTR("tapped_click_value_baseline"));

  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x400000000000000) == 0)
      goto LABEL_73;
    goto LABEL_174;
  }
LABEL_173:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_weakClickClickValueBaseline);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v86, CFSTR("weak_click_click_value_baseline"));

  v6 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x400000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x100000) == 0)
      goto LABEL_74;
    goto LABEL_175;
  }
LABEL_174:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unsubscribeClickValueBaseline);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v87, CFSTR("unsubscribe_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x100000) == 0)
  {
LABEL_74:
    if ((v10 & 1) == 0)
      goto LABEL_75;
    goto LABEL_176;
  }
LABEL_175:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_visitClickValueBaseline);
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v88, CFSTR("visit_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 1) == 0)
  {
LABEL_75:
    if ((v8 & 0x4000000000000) == 0)
      goto LABEL_76;
    goto LABEL_177;
  }
LABEL_176:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_dislikeClickValueBaseline);
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v89, CFSTR("dislike_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v10 & 0x100) == 0)
      goto LABEL_77;
    goto LABEL_178;
  }
LABEL_177:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscriptionRelatedClickValueBaseline);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v90, CFSTR("subscription_related_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x100) == 0)
  {
LABEL_77:
    if ((v10 & 0x40) == 0)
      goto LABEL_78;
    goto LABEL_179;
  }
LABEL_178:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionImpressionValue);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v91, CFSTR("existing_subscription_impression_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40) == 0)
  {
LABEL_78:
    if ((v10 & 0x200) == 0)
      goto LABEL_79;
    goto LABEL_180;
  }
LABEL_179:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionClickValue);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v92, CFSTR("existing_subscription_click_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x200) == 0)
  {
LABEL_79:
    if ((v10 & 0x80) == 0)
      goto LABEL_80;
    goto LABEL_181;
  }
LABEL_180:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionImpressionValueBaseline);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v93, CFSTR("existing_subscription_impression_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x80) == 0)
  {
LABEL_80:
    if ((v10 & 0x1000) == 0)
      goto LABEL_81;
    goto LABEL_182;
  }
LABEL_181:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionClickValueBaseline);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v94, CFSTR("existing_subscription_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000) == 0)
  {
LABEL_81:
    if ((v10 & 0x400) == 0)
      goto LABEL_82;
    goto LABEL_183;
  }
LABEL_182:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionRelatedImpressionValue);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v95, CFSTR("existing_subscription_related_impression_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400) == 0)
  {
LABEL_82:
    if ((v10 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_184;
  }
LABEL_183:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionRelatedClickValue);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v96, CFSTR("existing_subscription_related_click_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000) == 0)
  {
LABEL_83:
    if ((v10 & 0x800) == 0)
      goto LABEL_84;
    goto LABEL_185;
  }
LABEL_184:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionRelatedImpressionValueBaseline);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v97, CFSTR("existing_subscription_related_impression_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800) == 0)
  {
LABEL_84:
    if ((v10 & 0x8000000) == 0)
      goto LABEL_85;
    goto LABEL_186;
  }
LABEL_185:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_existingSubscriptionRelatedClickValueBaseline);
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v98, CFSTR("existing_subscription_related_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_85:
    if ((v10 & 0x4000000000000) == 0)
      goto LABEL_86;
    goto LABEL_187;
  }
LABEL_186:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreStretchingFactor);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v99, CFSTR("global_score_stretching_factor"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x4000000000000) == 0)
  {
LABEL_86:
    if ((v10 & 0x1000000000000) == 0)
      goto LABEL_87;
    goto LABEL_188;
  }
LABEL_187:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateFloor);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v100, CFSTR("hourly_flow_rate_floor"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000000000) == 0)
  {
LABEL_87:
    if ((v8 & 0x4000000) == 0)
      goto LABEL_88;
    goto LABEL_189;
  }
LABEL_188:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateCeiling);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v101, CFSTR("hourly_flow_rate_ceiling"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_88:
    if ((v9 & 0x4000000000000000) == 0)
      goto LABEL_89;
    goto LABEL_190;
  }
LABEL_189:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_saturatedSubscriptionCountFactor);
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v102, CFSTR("saturated_subscription_count_factor"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x4000000000000000) == 0)
  {
LABEL_89:
    if ((v12 & 0x200) == 0)
      goto LABEL_90;
    goto LABEL_191;
  }
LABEL_190:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversificationPenalty);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v103, CFSTR("publisher_diversification_penalty"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 0x200) == 0)
  {
LABEL_90:
    if ((v10 & 0x400000000000) == 0)
      goto LABEL_91;
    goto LABEL_192;
  }
LABEL_191:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_hardAgeBeforePublisherDiversification);
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v104, CFSTR("hard_age_before_publisher_diversification"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((v10 & 0x400000000000) == 0)
  {
LABEL_91:
    if ((v10 & 0x800000000000) == 0)
      goto LABEL_92;
    goto LABEL_193;
  }
LABEL_192:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateAlpha);
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v105, CFSTR("hourly_flow_rate_alpha"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((v10 & 0x800000000000) == 0)
  {
LABEL_92:
    if ((v10 & 0x8000000000000) == 0)
      goto LABEL_93;
    goto LABEL_194;
  }
LABEL_193:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateBeta);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v106, CFSTR("hourly_flow_rate_beta"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v8 & 0x2000) == 0)
      goto LABEL_94;
    goto LABEL_195;
  }
LABEL_194:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_hourlyFlowRateGamma);
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v107, CFSTR("hourly_flow_rate_gamma"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x2000) == 0)
  {
LABEL_94:
    if ((v8 & 0x800) == 0)
      goto LABEL_95;
    goto LABEL_196;
  }
LABEL_195:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationFeedImpressionValue);
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v108, CFSTR("recommendation_presentation_feed_impression_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x800) == 0)
  {
LABEL_95:
    if ((v8 & 0x200) == 0)
      goto LABEL_96;
    goto LABEL_197;
  }
LABEL_196:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationFeedClickValue);
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v109, CFSTR("recommendation_presentation_feed_click_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x200) == 0)
  {
LABEL_96:
    if ((v8 & 0x80) == 0)
      goto LABEL_97;
    goto LABEL_198;
  }
LABEL_197:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationExploreImpressionValue);
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v110, CFSTR("recommendation_presentation_explore_impression_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x80) == 0)
  {
LABEL_97:
    if ((v8 & 0x4000) == 0)
      goto LABEL_98;
    goto LABEL_199;
  }
LABEL_198:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationExploreClickValue);
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v111, CFSTR("recommendation_presentation_explore_click_value"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x4000) == 0)
  {
LABEL_98:
    if ((v8 & 0x1000) == 0)
      goto LABEL_99;
    goto LABEL_200;
  }
LABEL_199:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationFeedImpressionValueBaseline);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v112, CFSTR("recommendation_presentation_feed_impression_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x1000) == 0)
  {
LABEL_99:
    if ((v8 & 0x400) == 0)
      goto LABEL_100;
    goto LABEL_201;
  }
LABEL_200:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationFeedClickValueBaseline);
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v113, CFSTR("recommendation_presentation_feed_click_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x400) == 0)
  {
LABEL_100:
    if ((v8 & 0x100) == 0)
      goto LABEL_101;
    goto LABEL_202;
  }
LABEL_201:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationExploreImpressionValueBaseline);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v114, CFSTR("recommendation_presentation_explore_impression_value_baseline"));

  v9 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 3) & 0x100) == 0)
  {
LABEL_101:
    if ((v9 & 0x40000000000000) == 0)
      goto LABEL_103;
    goto LABEL_102;
  }
LABEL_202:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_recommendationPresentationExploreClickValueBaseline);
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v115, CFSTR("recommendation_presentation_explore_click_value_baseline"));

  if ((*((_QWORD *)&self->_has + 2) & 0x40000000000000) != 0)
  {
LABEL_102:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_premiumSubscriptionActivationImpressionValue);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v13, CFSTR("premium_subscription_activation_impression_value"));

  }
LABEL_103:
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x10000000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_premiumSubscriptionActivationClickValue);
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v116, CFSTR("premium_subscription_activation_click_value"));

    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
    v14 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
  }
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x80000000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_premiumSubscriptionActivationImpressionValueBaseline);
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v124, CFSTR("premium_subscription_activation_impression_value_baseline"));

    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
    v14 = *((_QWORD *)&self->_has + 2);
    v17 = *((_QWORD *)&self->_has + 3);
    v118 = *(_QWORD *)p_has;
    v117 = *((_QWORD *)&self->_has + 1);
    v119 = *((_WORD *)&self->_has + 24);
    if ((v14 & 0x20000000000000) == 0)
    {
LABEL_207:
      if ((v117 & 0x4000000000000000) == 0)
        goto LABEL_208;
      goto LABEL_309;
    }
  }
  else if ((v14 & 0x20000000000000) == 0)
  {
    goto LABEL_207;
  }
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_premiumSubscriptionActivationClickValueBaseline);
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v125, CFSTR("premium_subscription_activation_click_value_baseline"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x4000000000000000) == 0)
  {
LABEL_208:
    if ((v14 & 0x400) == 0)
      goto LABEL_209;
    goto LABEL_310;
  }
LABEL_309:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_lowQualityArticleRatio);
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v126, CFSTR("low_quality_article_ratio"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x400) == 0)
  {
LABEL_209:
    if ((v14 & 4) == 0)
      goto LABEL_210;
    goto LABEL_311;
  }
LABEL_310:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_minClusterSize);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v127, CFSTR("min_cluster_size"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 4) == 0)
  {
LABEL_210:
    if ((v117 & 0x8000000000000000) == 0)
      goto LABEL_211;
    goto LABEL_312;
  }
LABEL_311:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_maxClusterSize);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v128, CFSTR("max_cluster_size"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x8000000000000000) == 0)
  {
LABEL_211:
    if ((v117 & 0x80000000000) == 0)
      goto LABEL_212;
    goto LABEL_313;
  }
LABEL_312:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_maxArticleCombos);
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v129, CFSTR("max_article_combos"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x80000000000) == 0)
  {
LABEL_212:
    if ((v17 & 0x400000000) == 0)
      goto LABEL_213;
    goto LABEL_314;
  }
LABEL_313:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_heuristicSampleSize);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v130, CFSTR("heuristic_sample_size"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x400000000) == 0)
  {
LABEL_213:
    if ((v17 & 0x80000000) == 0)
      goto LABEL_214;
    goto LABEL_315;
  }
LABEL_314:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_searchBranchMultiplier);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v131, CFSTR("search_branch_multiplier"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x80000000) == 0)
  {
LABEL_214:
    if ((v17 & 0x2000000000) == 0)
      goto LABEL_215;
    goto LABEL_316;
  }
LABEL_315:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_searchBranchDecay);
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v132, CFSTR("search_branch_decay"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x2000000000) == 0)
  {
LABEL_215:
    if ((v119 & 2) == 0)
      goto LABEL_216;
    goto LABEL_317;
  }
LABEL_316:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_searchTimeLimit);
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v133, CFSTR("search_time_limit"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 2) == 0)
  {
LABEL_216:
    if ((v16 & 0x400000000000000) == 0)
      goto LABEL_217;
    goto LABEL_318;
  }
LABEL_317:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_tagOrder);
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v134, CFSTR("tag_order"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000000000) == 0)
  {
LABEL_217:
    if ((v16 & 0x20000000000) == 0)
      goto LABEL_218;
    goto LABEL_319;
  }
LABEL_318:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_moveOrder);
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v135, CFSTR("move_order"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x20000000000) == 0)
  {
LABEL_218:
    if ((v16 & 0x4000000000) == 0)
      goto LABEL_219;
    goto LABEL_320;
  }
LABEL_319:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_heuristicOrder);
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v136, CFSTR("heuristic_order"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000) == 0)
  {
LABEL_219:
    if ((v16 & 0x10000000000000) == 0)
      goto LABEL_220;
    goto LABEL_321;
  }
LABEL_320:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_heuristicOption);
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v137, CFSTR("heuristic_option"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000000000) == 0)
  {
LABEL_220:
    if ((v16 & 0x100000000000) == 0)
      goto LABEL_221;
    goto LABEL_322;
  }
LABEL_321:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minClusterSizeIPhone);
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v138, CFSTR("min_cluster_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000000) == 0)
  {
LABEL_221:
    if ((v16 & 0x100000000000000) == 0)
      goto LABEL_222;
    goto LABEL_323;
  }
LABEL_322:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxClusterSizeIPhone);
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v139, CFSTR("max_cluster_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000000000) == 0)
  {
LABEL_222:
    if ((v16 & 0x1000000000000) == 0)
      goto LABEL_223;
    goto LABEL_324;
  }
LABEL_323:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minIdealClusterSizeIPhone);
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v140, CFSTR("min_ideal_cluster_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000000) == 0)
  {
LABEL_223:
    if ((v16 & 0x4000000000000) == 0)
      goto LABEL_224;
    goto LABEL_325;
  }
LABEL_324:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxIdealClusterSizeIPhone);
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v141, CFSTR("max_ideal_cluster_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000000) == 0)
  {
LABEL_224:
    if ((v16 & 0x40000000000) == 0)
      goto LABEL_225;
    goto LABEL_326;
  }
LABEL_325:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minClusterSizeIPad);
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v142, CFSTR("min_cluster_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000000) == 0)
  {
LABEL_225:
    if ((v16 & 0x40000000000000) == 0)
      goto LABEL_226;
    goto LABEL_327;
  }
LABEL_326:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxClusterSizeIPad);
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v143, CFSTR("max_cluster_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000000000) == 0)
  {
LABEL_226:
    if ((v16 & 0x400000000000) == 0)
      goto LABEL_227;
    goto LABEL_328;
  }
LABEL_327:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minIdealClusterSizeIPad);
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v144, CFSTR("min_ideal_cluster_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000000) == 0)
  {
LABEL_227:
    if ((v14 & 2) == 0)
      goto LABEL_228;
    goto LABEL_329;
  }
LABEL_328:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxIdealClusterSizeIPad);
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v145, CFSTR("max_ideal_cluster_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 2) == 0)
  {
LABEL_228:
    if ((v14 & 1) == 0)
      goto LABEL_229;
    goto LABEL_330;
  }
LABEL_329:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_maxArticleCombosIPhone);
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v146, CFSTR("max_article_combos_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 1) == 0)
  {
LABEL_229:
    if ((v117 & 0x200000000000) == 0)
      goto LABEL_230;
    goto LABEL_331;
  }
LABEL_330:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_maxArticleCombosIPad);
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v147, CFSTR("max_article_combos_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x200000000000) == 0)
  {
LABEL_230:
    if ((v117 & 0x100000000000) == 0)
      goto LABEL_231;
    goto LABEL_332;
  }
LABEL_331:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_heuristicSampleSizeIPhone);
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v148, CFSTR("heuristic_sample_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x100000000000) == 0)
  {
LABEL_231:
    if ((v17 & 0x1000000000) == 0)
      goto LABEL_232;
    goto LABEL_333;
  }
LABEL_332:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_heuristicSampleSizeIPad);
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v149, CFSTR("heuristic_sample_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x1000000000) == 0)
  {
LABEL_232:
    if ((v17 & 0x800000000) == 0)
      goto LABEL_233;
    goto LABEL_334;
  }
LABEL_333:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_searchBranchMultiplierIPhone);
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v150, CFSTR("search_branch_multiplier_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x800000000) == 0)
  {
LABEL_233:
    if ((v17 & 0x200000000) == 0)
      goto LABEL_234;
    goto LABEL_335;
  }
LABEL_334:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_searchBranchMultiplierIPad);
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v151, CFSTR("search_branch_multiplier_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x200000000) == 0)
  {
LABEL_234:
    if ((v17 & 0x100000000) == 0)
      goto LABEL_235;
    goto LABEL_336;
  }
LABEL_335:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_searchBranchDecayIPhone);
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v152, CFSTR("search_branch_decay_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x100000000) == 0)
  {
LABEL_235:
    if ((v16 & 0x10000000000) == 0)
      goto LABEL_236;
    goto LABEL_337;
  }
LABEL_336:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_searchBranchDecayIPad);
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v153, CFSTR("search_branch_decay_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000000) == 0)
  {
LABEL_236:
    if ((v16 & 0x8000000000) == 0)
      goto LABEL_237;
    goto LABEL_338;
  }
LABEL_337:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_heuristicOptionIPhone);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v154, CFSTR("heuristic_option_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x8000000000) == 0)
  {
LABEL_237:
    if ((v15 & 0x40) == 0)
      goto LABEL_238;
    goto LABEL_339;
  }
LABEL_338:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", self->_heuristicOptionIPad);
  v155 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v155, CFSTR("heuristic_option_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x40) == 0)
  {
LABEL_238:
    if ((v15 & 0x20) == 0)
      goto LABEL_239;
    goto LABEL_340;
  }
LABEL_339:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagSizeCoeffIPhone);
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v156, CFSTR("tag_size_coeff_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x20) == 0)
  {
LABEL_239:
    if ((v15 & 4) == 0)
      goto LABEL_240;
    goto LABEL_341;
  }
LABEL_340:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagSizeCoeffIPad);
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v157, CFSTR("tag_size_coeff_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 4) == 0)
  {
LABEL_240:
    if ((v15 & 2) == 0)
      goto LABEL_241;
    goto LABEL_342;
  }
LABEL_341:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagPairsCoeffIPhone);
  v158 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v158, CFSTR("tag_pairs_coeff_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 2) == 0)
  {
LABEL_241:
    if ((v14 & 0x40000) == 0)
      goto LABEL_242;
    goto LABEL_343;
  }
LABEL_342:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagPairsCoeffIPad);
  v159 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v159, CFSTR("tag_pairs_coeff_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x40000) == 0)
  {
LABEL_242:
    if ((v14 & 0x20000) == 0)
      goto LABEL_243;
    goto LABEL_344;
  }
LABEL_343:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveNewOrphansCoeffIPhone);
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v160, CFSTR("move_new_orphans_coeff_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x20000) == 0)
  {
LABEL_243:
    if ((v14 & 0x100000) == 0)
      goto LABEL_244;
    goto LABEL_345;
  }
LABEL_344:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveNewOrphansCoeffIPad);
  v161 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v161, CFSTR("move_new_orphans_coeff_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x100000) == 0)
  {
LABEL_244:
    if ((v14 & 0x80000) == 0)
      goto LABEL_245;
    goto LABEL_346;
  }
LABEL_345:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveSizeCoeffIPhone);
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v162, CFSTR("move_size_coeff_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x80000) == 0)
  {
LABEL_245:
    if ((v17 & 0x1000000000000000) == 0)
      goto LABEL_246;
    goto LABEL_347;
  }
LABEL_346:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveSizeCoeffIPad);
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v163, CFSTR("move_size_coeff_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x1000000000000000) == 0)
  {
LABEL_246:
    if ((v14 & 0x4000) == 0)
      goto LABEL_247;
    goto LABEL_348;
  }
LABEL_347:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagFavoritedCoeff);
  v164 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v164, CFSTR("tag_favorited_coeff"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x4000) == 0)
  {
LABEL_247:
    if ((v14 & 0x2000) == 0)
      goto LABEL_248;
    goto LABEL_349;
  }
LABEL_348:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveAboutnessNoiseStdIPhone);
  v165 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v165, CFSTR("move_aboutness_noise_std_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x2000) == 0)
  {
LABEL_248:
    if ((v16 & 0x80000000) == 0)
      goto LABEL_249;
    goto LABEL_350;
  }
LABEL_349:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveAboutnessNoiseStdIPad);
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v166, CFSTR("move_aboutness_noise_std_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x80000000) == 0)
  {
LABEL_249:
    if ((v16 & 0x40000000) == 0)
      goto LABEL_250;
    goto LABEL_351;
  }
LABEL_350:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMaxClusterSizeIPhone);
  v167 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v167, CFSTR("dynamic_max_cluster_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000) == 0)
  {
LABEL_250:
    if ((v16 & 0x200000000) == 0)
      goto LABEL_251;
    goto LABEL_352;
  }
LABEL_351:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMaxClusterSizeIPad);
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v168, CFSTR("dynamic_max_cluster_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x200000000) == 0)
  {
LABEL_251:
    if ((v16 & 0x100000000) == 0)
      goto LABEL_252;
    goto LABEL_353;
  }
LABEL_352:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMinArticleSetSizeIPhone);
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v169, CFSTR("dynamic_min_article_set_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000) == 0)
  {
LABEL_252:
    if ((v16 & 0x20000000) == 0)
      goto LABEL_253;
    goto LABEL_354;
  }
LABEL_353:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMinArticleSetSizeIPad);
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v170, CFSTR("dynamic_min_article_set_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x20000000) == 0)
  {
LABEL_253:
    if ((v16 & 0x10000000) == 0)
      goto LABEL_254;
    goto LABEL_355;
  }
LABEL_354:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMaxArticleSetSizeIPhone);
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v171, CFSTR("dynamic_max_article_set_size_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000) == 0)
  {
LABEL_254:
    if ((v119 & 4) == 0)
      goto LABEL_255;
    goto LABEL_356;
  }
LABEL_355:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_dynamicMaxArticleSetSizeIPad);
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v172, CFSTR("dynamic_max_article_set_size_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 4) == 0)
  {
LABEL_255:
    if ((v14 & 0x20000000000) == 0)
      goto LABEL_256;
    goto LABEL_357;
  }
LABEL_356:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_deleteOrphansFromOverflow);
  v173 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v173, CFSTR("delete_orphans_from_overflow"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x20000000000) == 0)
  {
LABEL_256:
    if ((v14 & 0x10000) == 0)
      goto LABEL_257;
    goto LABEL_358;
  }
LABEL_357:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_overflownOrphansFilterCoeff);
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v174, CFSTR("overflown_orphans_filter_coeff"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x10000) == 0)
  {
LABEL_257:
    if ((v14 & 0x8000) == 0)
      goto LABEL_258;
    goto LABEL_359;
  }
LABEL_358:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveAboutnessWeightRatioIPhone);
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v175, CFSTR("move_aboutness_weight_ratio_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x8000) == 0)
  {
LABEL_258:
    if ((v117 & 0x80000000) == 0)
      goto LABEL_259;
    goto LABEL_360;
  }
LABEL_359:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_moveAboutnessWeightRatioIPad);
  v176 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v176, CFSTR("move_aboutness_weight_ratio_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x80000000) == 0)
  {
LABEL_259:
    if ((v117 & 0x100000000) == 0)
      goto LABEL_260;
    goto LABEL_361;
  }
LABEL_360:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam1);
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v177, CFSTR("grouping_double_param1"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x100000000) == 0)
  {
LABEL_260:
    if ((v117 & 0x200000000) == 0)
      goto LABEL_261;
    goto LABEL_362;
  }
LABEL_361:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam2);
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v178, CFSTR("grouping_double_param2"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x200000000) == 0)
  {
LABEL_261:
    if ((v117 & 0x400000000) == 0)
      goto LABEL_262;
    goto LABEL_363;
  }
LABEL_362:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam3);
  v179 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v179, CFSTR("grouping_double_param3"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x400000000) == 0)
  {
LABEL_262:
    if ((v117 & 0x800000000) == 0)
      goto LABEL_263;
    goto LABEL_364;
  }
LABEL_363:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam4);
  v180 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v180, CFSTR("grouping_double_param4"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x800000000) == 0)
  {
LABEL_263:
    if ((v117 & 0x1000000000) == 0)
      goto LABEL_264;
    goto LABEL_365;
  }
LABEL_364:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam5);
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v181, CFSTR("grouping_double_param5"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v117 & 0x1000000000) == 0)
  {
LABEL_264:
    if ((v16 & 0x400000000) == 0)
      goto LABEL_265;
    goto LABEL_366;
  }
LABEL_365:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupingDoubleParam6);
  v182 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v182, CFSTR("grouping_double_param6"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000) == 0)
  {
LABEL_265:
    if ((v16 & 0x800000000) == 0)
      goto LABEL_266;
    goto LABEL_367;
  }
LABEL_366:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_groupingIntParam1);
  v183 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v183, CFSTR("grouping_int_param1"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x800000000) == 0)
  {
LABEL_266:
    if ((v16 & 0x1000000000) == 0)
      goto LABEL_267;
    goto LABEL_368;
  }
LABEL_367:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_groupingIntParam2);
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v184, CFSTR("grouping_int_param2"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000) == 0)
  {
LABEL_267:
    if ((v16 & 0x2000000000) == 0)
      goto LABEL_268;
    goto LABEL_369;
  }
LABEL_368:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_groupingIntParam3);
  v185 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v185, CFSTR("grouping_int_param3"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x2000000000) == 0)
  {
LABEL_268:
    if ((v119 & 0x80) == 0)
      goto LABEL_269;
    goto LABEL_370;
  }
LABEL_369:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_groupingIntParam4);
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v186, CFSTR("grouping_int_param4"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 0x80) == 0)
  {
LABEL_269:
    if ((v119 & 0x100) == 0)
      goto LABEL_270;
    goto LABEL_371;
  }
LABEL_370:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_groupingBoolParam1);
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v187, CFSTR("grouping_BOOL_param1"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 0x100) == 0)
  {
LABEL_270:
    if ((v119 & 0x10) == 0)
      goto LABEL_271;
    goto LABEL_372;
  }
LABEL_371:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_groupingBoolParam2);
  v188 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v188, CFSTR("grouping_BOOL_param2"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 0x10) == 0)
  {
LABEL_271:
    if ((v119 & 8) == 0)
      goto LABEL_272;
    goto LABEL_373;
  }
LABEL_372:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_enableOptimizedLayoutIPhone);
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v189, CFSTR("enable_optimized_layout_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v119 & 8) == 0)
  {
LABEL_272:
    if ((v16 & 0x4000000000000000) == 0)
      goto LABEL_273;
    goto LABEL_374;
  }
LABEL_373:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_enableOptimizedLayoutIPad);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v190, CFSTR("enable_optimized_layout_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000000000) == 0)
  {
LABEL_273:
    if ((v16 & 0x2000000000000000) == 0)
      goto LABEL_274;
    goto LABEL_375;
  }
LABEL_374:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_optimizedLayoutSizeThresholdIPhone);
  v191 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v191, CFSTR("optimized_layout_size_threshold_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x2000000000000000) == 0)
  {
LABEL_274:
    if ((v16 & 0x1000000000000000) == 0)
      goto LABEL_275;
    goto LABEL_376;
  }
LABEL_375:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_optimizedLayoutSizeThresholdIPad);
  v192 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v192, CFSTR("optimized_layout_size_threshold_iPad"));

  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000000000) == 0)
  {
LABEL_275:
    if ((v16 & 0x800000000000000) == 0)
      goto LABEL_276;
    goto LABEL_377;
  }
LABEL_376:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_optimizedLayoutIncrementUnitIPhone);
  v193 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v193, CFSTR("optimized_layout_increment_unit_iPhone"));

  v15 = *((_QWORD *)&self->_has + 4);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v118 = *(_QWORD *)p_has;
  v117 = *((_QWORD *)&self->_has + 1);
  v119 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000000) == 0)
  {
LABEL_276:
    if ((v15 & 0x2000000000000000) == 0)
      goto LABEL_277;
    goto LABEL_378;
  }
LABEL_377:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_optimizedLayoutIncrementUnitIPad);
  v194 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v194, CFSTR("optimized_layout_increment_unit_iPad"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x2000000000000000) == 0)
  {
LABEL_277:
    if ((v15 & 0x4000000000000000) == 0)
      goto LABEL_278;
    goto LABEL_379;
  }
LABEL_378:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_utilityWeightAlpha);
  v195 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v195, CFSTR("utility_weight_alpha"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  v119 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x4000000000000000) == 0)
  {
LABEL_278:
    if ((v119 & 0x800) == 0)
      goto LABEL_279;
    goto LABEL_380;
  }
LABEL_379:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_utilityWeightBeta);
  v196 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v196, CFSTR("utility_weight_beta"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((*((_WORD *)&self->_has + 24) & 0x800) == 0)
  {
LABEL_279:
    if ((v15 & 0x10) == 0)
      goto LABEL_280;
    goto LABEL_381;
  }
LABEL_380:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_replaceAboutness);
  v197 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v197, CFSTR("replace_aboutness"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v15 & 0x10) == 0)
  {
LABEL_280:
    if ((v15 & 8) == 0)
      goto LABEL_281;
    goto LABEL_382;
  }
LABEL_381:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagPersonalizationCoeffIPhone);
  v198 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v198, CFSTR("tag_personalization_coeff_iPhone"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v15 & 8) == 0)
  {
LABEL_281:
    if ((v17 & 0x200000000000000) == 0)
      goto LABEL_282;
    goto LABEL_383;
  }
LABEL_382:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagPersonalizationCoeffIPad);
  v199 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v199, CFSTR("tag_personalization_coeff_iPad"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v17 & 0x200000000000000) == 0)
  {
LABEL_282:
    if ((v17 & 0x100000000000000) == 0)
      goto LABEL_283;
    goto LABEL_384;
  }
LABEL_383:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagArticleScoreCoeffIPhone);
  v200 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v200, CFSTR("tag_article_score_coeff_iPhone"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v17 & 0x100000000000000) == 0)
  {
LABEL_283:
    if ((v17 & 0x4000000000000000) == 0)
      goto LABEL_284;
    goto LABEL_385;
  }
LABEL_384:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagArticleScoreCoeffIPad);
  v201 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v201, CFSTR("tag_article_score_coeff_iPad"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v17 & 0x4000000000000000) == 0)
  {
LABEL_284:
    if ((v17 & 0x2000000000000000) == 0)
      goto LABEL_285;
    goto LABEL_386;
  }
LABEL_385:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagFavoritedCoeffIPhone);
  v202 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v202, CFSTR("tag_favorited_coeff_iPhone"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((v17 & 0x2000000000000000) == 0)
  {
LABEL_285:
    if ((v118 & 0x4000) == 0)
      goto LABEL_286;
    goto LABEL_387;
  }
LABEL_386:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagFavoritedCoeffIPad);
  v203 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v203, CFSTR("tag_favorited_coeff_iPad"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v118 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x4000) == 0)
  {
LABEL_286:
    if ((v118 & 0x2000) == 0)
      goto LABEL_287;
    goto LABEL_388;
  }
LABEL_387:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_articleEntityScoreWeightRatioIPhone);
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v204, CFSTR("article_entity_score_weight_ratio_iPhone"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)p_has & 0x2000) == 0)
  {
LABEL_287:
    if ((v14 & 0x800000) == 0)
      goto LABEL_288;
    goto LABEL_389;
  }
LABEL_388:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_articleEntityScoreWeightRatioIPad);
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v205, CFSTR("article_entity_score_weight_ratio_iPad"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x800000) == 0)
  {
LABEL_288:
    if ((v15 & 0x80000000000000) == 0)
      goto LABEL_289;
    goto LABEL_390;
  }
LABEL_389:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_muteImpressionValue);
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v206, CFSTR("mute_impression_value"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x80000000000000) == 0)
  {
LABEL_289:
    if ((v14 & 0x200000) == 0)
      goto LABEL_290;
    goto LABEL_391;
  }
LABEL_390:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unmuteImpressionValue);
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v207, CFSTR("unmute_impression_value"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x200000) == 0)
  {
LABEL_290:
    if ((v15 & 0x20000000000000) == 0)
      goto LABEL_291;
    goto LABEL_392;
  }
LABEL_391:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_muteClickValue);
  v208 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v208, CFSTR("mute_click_value"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x20000000000000) == 0)
  {
LABEL_291:
    if ((v14 & 0x1000000) == 0)
      goto LABEL_292;
    goto LABEL_393;
  }
LABEL_392:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unmuteClickValue);
  v209 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v209, CFSTR("unmute_click_value"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x1000000) == 0)
  {
LABEL_292:
    if ((v15 & 0x100000000000000) == 0)
      goto LABEL_293;
    goto LABEL_394;
  }
LABEL_393:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_muteImpressionValueBaseline);
  v210 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v210, CFSTR("mute_impression_value_baseline"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x100000000000000) == 0)
  {
LABEL_293:
    if ((v14 & 0x400000) == 0)
      goto LABEL_294;
    goto LABEL_395;
  }
LABEL_394:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unmuteImpressionValueBaseline);
  v211 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v211, CFSTR("unmute_impression_value_baseline"));

  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x400000) == 0)
  {
LABEL_294:
    if ((v15 & 0x40000000000000) == 0)
      goto LABEL_295;
    goto LABEL_396;
  }
LABEL_395:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_muteClickValueBaseline);
  v212 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v212, CFSTR("mute_click_value_baseline"));

  v17 = *((_QWORD *)&self->_has + 3);
  v117 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 4) & 0x40000000000000) == 0)
  {
LABEL_295:
    if ((v17 & 0x2000000) == 0)
      goto LABEL_296;
    goto LABEL_397;
  }
LABEL_396:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_unmuteClickValueBaseline);
  v213 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v213, CFSTR("unmute_click_value_baseline"));

  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v117 = *((_QWORD *)&self->_has + 1);
  if ((v17 & 0x2000000) == 0)
  {
LABEL_296:
    if ((v14 & 0x2000000) == 0)
      goto LABEL_297;
    goto LABEL_398;
  }
LABEL_397:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_saturatedMutedCountFactor);
  v214 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v214, CFSTR("saturated_muted_count_factor"));

  v17 = *((_QWORD *)&self->_has + 3);
  v117 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 2) & 0x2000000) == 0)
  {
LABEL_297:
    if ((v117 & 0x80000000000000) == 0)
      goto LABEL_298;
    goto LABEL_399;
  }
LABEL_398:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_mutedVoteCoefficient);
  v215 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v215, CFSTR("muted_vote_coefficient"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x80000000000000) == 0)
  {
LABEL_298:
    if ((v17 & 8) == 0)
      goto LABEL_299;
    goto LABEL_400;
  }
LABEL_399:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_importanceScalar);
  v216 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v216, CFSTR("importance_scalar"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 8) == 0)
  {
LABEL_299:
    if ((v17 & 4) == 0)
      goto LABEL_300;
    goto LABEL_401;
  }
LABEL_400:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversityMinSubscriptions);
  v217 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v217, CFSTR("publisher_diversity_min_subscriptions"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 4) == 0)
  {
LABEL_300:
    if ((v17 & 1) == 0)
      goto LABEL_301;
    goto LABEL_402;
  }
LABEL_401:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversityMinArticleCount);
  v218 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v218, CFSTR("publisher_diversity_min_article_count"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 1) == 0)
  {
LABEL_301:
    if ((v17 & 2) == 0)
      goto LABEL_302;
    goto LABEL_403;
  }
LABEL_402:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversityMaxArticleCount);
  v219 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v219, CFSTR("publisher_diversity_max_article_count"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 2) == 0)
  {
LABEL_302:
    if ((v17 & 0x400000) == 0)
      goto LABEL_303;
    goto LABEL_404;
  }
LABEL_403:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversityMaxArticleFilter);
  v220 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v220, CFSTR("publisher_diversity_max_article_filter"));

  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 0x400000) == 0)
  {
LABEL_303:
    if ((v17 & 0x1000000) == 0)
      goto LABEL_305;
    goto LABEL_304;
  }
LABEL_404:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariSignalWeight);
  v221 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v221, CFSTR("safari_signal_weight"));

  if ((*((_QWORD *)&self->_has + 3) & 0x1000000) != 0)
  {
LABEL_304:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariTimeDecayMultiplier);
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v120, CFSTR("safari_time_decay_multiplier"));

  }
LABEL_305:
  v121 = *((_QWORD *)&self->_has + 3);
  if ((v121 & 0x100000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariOccurrenceDecayMultiplier);
    v222 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v222, CFSTR("safari_occurrence_decay_multiplier"));

    v122 = *((_QWORD *)&self->_has + 4);
    v123 = *((_QWORD *)&self->_has + 5);
    v121 = *((_QWORD *)&self->_has + 3);
  }
  else
  {
    v122 = *((_QWORD *)&self->_has + 4);
    v123 = *((_QWORD *)&self->_has + 5);
  }
  v224 = *((_QWORD *)&self->_has + 1);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appUsageSignalWeight);
    v239 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v239, CFSTR("app_usage_signal_weight"));

    v122 = *((_QWORD *)&self->_has + 4);
    v123 = *((_QWORD *)&self->_has + 5);
    v223 = *((_QWORD *)&self->_has + 2);
    v121 = *((_QWORD *)&self->_has + 3);
    v225 = *(_QWORD *)p_has;
    v224 = *((_QWORD *)&self->_has + 1);
    v226 = *((_WORD *)&self->_has + 24);
    if ((*(_QWORD *)p_has & 0x1000) == 0)
    {
LABEL_409:
      if ((v225 & 0x100) == 0)
        goto LABEL_410;
      goto LABEL_465;
    }
  }
  else if ((v225 & 0x1000) == 0)
  {
    goto LABEL_409;
  }
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appUsageTimeDecayMultiplier);
  v240 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v240, CFSTR("app_usage_time_decay_multiplier"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100) == 0)
  {
LABEL_410:
    if ((v225 & 0x40000) == 0)
      goto LABEL_411;
    goto LABEL_466;
  }
LABEL_465:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appUsageOccurrenceDecayMultiplier);
  v241 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v241, CFSTR("app_usage_occurrence_decay_multiplier"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000) == 0)
  {
LABEL_411:
    if ((v225 & 0x80000) == 0)
      goto LABEL_412;
    goto LABEL_467;
  }
LABEL_466:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteGroupableMinImpressions);
  v242 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v242, CFSTR("auto_favorite_groupable_min_impressions"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000) == 0)
  {
LABEL_412:
    if ((v225 & 0x100000) == 0)
      goto LABEL_413;
    goto LABEL_468;
  }
LABEL_467:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteGroupableMinRate);
  v243 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v243, CFSTR("auto_favorite_groupable_min_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000) == 0)
  {
LABEL_413:
    if ((v225 & 0x8000) == 0)
      goto LABEL_414;
    goto LABEL_469;
  }
LABEL_468:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteGroupableMinRelativeRate);
  v244 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v244, CFSTR("auto_favorite_groupable_min_relative_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x8000) == 0)
  {
LABEL_414:
    if ((v225 & 0x10000) == 0)
      goto LABEL_415;
    goto LABEL_470;
  }
LABEL_469:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteFetchableMinImpressions);
  v245 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v245, CFSTR("auto_favorite_fetchable_min_impressions"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000) == 0)
  {
LABEL_415:
    if ((v225 & 0x20000) == 0)
      goto LABEL_416;
    goto LABEL_471;
  }
LABEL_470:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteFetchableMinRate);
  v246 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v246, CFSTR("auto_favorite_fetchable_min_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20000) == 0)
  {
LABEL_416:
    if ((v225 & 0x800000000) == 0)
      goto LABEL_417;
    goto LABEL_472;
  }
LABEL_471:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteFetchableMinRelativeRate);
  v247 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v247, CFSTR("auto_favorite_fetchable_min_relative_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  v226 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800000000) == 0)
  {
LABEL_417:
    if ((v226 & 1) == 0)
      goto LABEL_418;
    goto LABEL_473;
  }
LABEL_472:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_averageSafariVisitsPerDay);
  v248 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v248, CFSTR("average_safari_visits_per_day"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 1) == 0)
  {
LABEL_418:
    if ((v123 & 0x8000000000000000) == 0)
      goto LABEL_419;
    goto LABEL_474;
  }
LABEL_473:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_publisherDiversityMinPublisherCount);
  v249 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v249, CFSTR("publisher_diversity_min_publisher_count"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((v123 & 0x8000000000000000) == 0)
  {
LABEL_419:
    if ((v223 & 0x8000000000000) == 0)
      goto LABEL_420;
    goto LABEL_475;
  }
LABEL_474:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_publisherDiversityMaxPublisherCount);
  v250 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v250, CFSTR("publisher_diversity_max_publisher_count"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((v223 & 0x8000000000000) == 0)
  {
LABEL_420:
    if ((v225 & 0x40000000000) == 0)
      goto LABEL_421;
    goto LABEL_476;
  }
LABEL_475:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitUsageSignalWeight);
  v251 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v251, CFSTR("portrait_usage_signal_weight"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x40000000000) == 0)
  {
LABEL_421:
    if ((v225 & 0x200000000000) == 0)
      goto LABEL_422;
    goto LABEL_477;
  }
LABEL_476:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipBaselineCtrWeight);
  v252 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v252, CFSTR("cohort_membership_baseline_ctr_weight"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000000000) == 0)
  {
LABEL_422:
    if ((v225 & 0x800000000000) == 0)
      goto LABEL_423;
    goto LABEL_478;
  }
LABEL_477:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipCurveSteepness);
  v253 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v253, CFSTR("cohort_membership_curve_steepness"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x800000000000) == 0)
  {
LABEL_423:
    if ((v225 & 0x800000) == 0)
      goto LABEL_424;
    goto LABEL_479;
  }
LABEL_478:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipMinWeightedImpressions);
  v254 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v254, CFSTR("cohort_membership_min_weighted_impressions"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x800000) == 0)
  {
LABEL_424:
    if ((v225 & 0x4000000) == 0)
      goto LABEL_425;
    goto LABEL_480;
  }
LABEL_479:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinImpressions);
  v255 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v255, CFSTR("auto_favorite_min_impressions"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x4000000) == 0)
  {
LABEL_425:
    if ((v225 & 0x8000000) == 0)
      goto LABEL_426;
    goto LABEL_481;
  }
LABEL_480:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinRate);
  v256 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v256, CFSTR("auto_favorite_min_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x8000000) == 0)
  {
LABEL_426:
    if ((v225 & 0x200000000) == 0)
      goto LABEL_427;
    goto LABEL_482;
  }
LABEL_481:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinRelativeRate);
  v257 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v257, CFSTR("auto_favorite_min_relative_rate"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000000) == 0)
  {
LABEL_427:
    if ((v225 & 0x100000000) == 0)
      goto LABEL_428;
    goto LABEL_483;
  }
LABEL_482:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoUnfavoriteFactor);
  v258 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v258, CFSTR("auto_unfavorite_factor"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x100000000) == 0)
  {
LABEL_428:
    if ((v224 & 0x40000000) == 0)
      goto LABEL_429;
    goto LABEL_484;
  }
LABEL_483:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoGroupableFactor);
  v259 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v259, CFSTR("auto_groupable_factor"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  v224 = *((_QWORD *)&self->_has + 1);
  if ((v224 & 0x40000000) == 0)
  {
LABEL_429:
    if ((v224 & 0x100000000000000) == 0)
      goto LABEL_430;
    goto LABEL_485;
  }
LABEL_484:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_groupImpressionBiasCorrectionFactor);
  v260 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v260, CFSTR("group_impression_bias_correction_factor"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x100000000000000) == 0)
  {
LABEL_430:
    if ((v123 & 0x40000) == 0)
      goto LABEL_431;
    goto LABEL_486;
  }
LABEL_485:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_indexImpressionBiasCorrectionFactor);
  v261 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v261, CFSTR("index_impression_bias_correction_factor"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x40000) == 0)
  {
LABEL_431:
    if ((v123 & 0x20000) == 0)
      goto LABEL_432;
    goto LABEL_487;
  }
LABEL_486:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoInitiatePlaybackImpressionValue);
  v262 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v262, CFSTR("video_initiate_playback_impression_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x20000) == 0)
  {
LABEL_432:
    if ((v123 & 0x10000) == 0)
      goto LABEL_433;
    goto LABEL_488;
  }
LABEL_487:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoInitiatePlaybackClickValue);
  v263 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v263, CFSTR("video_initiate_playback_click_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x10000) == 0)
  {
LABEL_433:
    if ((v123 & 0x8000) == 0)
      goto LABEL_434;
    goto LABEL_489;
  }
LABEL_488:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoInitiatePlaybackBaselineImpressionValue);
  v264 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v264, CFSTR("video_initiate_playback_baseline_impression_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x8000) == 0)
  {
LABEL_434:
    if ((v123 & 0x4000) == 0)
      goto LABEL_435;
    goto LABEL_490;
  }
LABEL_489:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoInitiatePlaybackBaselineClickValue);
  v265 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v265, CFSTR("video_initiate_playback_baseline_click_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x4000) == 0)
  {
LABEL_435:
    if ((v123 & 0x2000) == 0)
      goto LABEL_436;
    goto LABEL_491;
  }
LABEL_490:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoCompletePlaybackImpressionValue);
  v266 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v266, CFSTR("video_complete_playback_impression_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x2000) == 0)
  {
LABEL_436:
    if ((v123 & 0x1000) == 0)
      goto LABEL_437;
    goto LABEL_492;
  }
LABEL_491:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoCompletePlaybackClickValue);
  v267 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v267, CFSTR("video_complete_playback_click_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v123 = *((_QWORD *)&self->_has + 5);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((v123 & 0x1000) == 0)
  {
LABEL_437:
    if ((v123 & 0x800) == 0)
      goto LABEL_438;
    goto LABEL_493;
  }
LABEL_492:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoCompletePlaybackBaselineImpressionValue);
  v268 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v268, CFSTR("video_complete_playback_baseline_impression_value"));

  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v121 = *((_QWORD *)&self->_has + 3);
  v225 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 5) & 0x800) == 0)
  {
LABEL_438:
    if ((v121 & 0x800000000000000) == 0)
      goto LABEL_439;
    goto LABEL_494;
  }
LABEL_493:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoCompletePlaybackBaselineClickValue);
  v269 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v269, CFSTR("video_complete_playback_baseline_click_value"));

  v121 = *((_QWORD *)&self->_has + 3);
  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((v121 & 0x800000000000000) == 0)
  {
LABEL_439:
    if ((v121 & 0x400000000000000) == 0)
      goto LABEL_440;
    goto LABEL_495;
  }
LABEL_494:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagAutoFavoritedCoeffIPhone);
  v270 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v270, CFSTR("tag_auto_favorited_coeff_iPhone"));

  v121 = *((_QWORD *)&self->_has + 3);
  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((v121 & 0x400000000000000) == 0)
  {
LABEL_440:
    if ((v122 & 1) == 0)
      goto LABEL_441;
    goto LABEL_496;
  }
LABEL_495:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagAutoFavoritedCoeffIPad);
  v271 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v271, CFSTR("tag_auto_favorited_coeff_iPad"));

  v121 = *((_QWORD *)&self->_has + 3);
  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((v122 & 1) == 0)
  {
LABEL_441:
    if ((v121 & 0x8000000000000000) == 0)
      goto LABEL_442;
    goto LABEL_497;
  }
LABEL_496:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagGroupableCoeffIPhone);
  v272 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v272, CFSTR("tag_groupable_coeff_iPhone"));

  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x8000000000000000) == 0)
  {
LABEL_442:
    if ((v122 & 0x100) == 0)
      goto LABEL_443;
    goto LABEL_498;
  }
LABEL_497:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagGroupableCoeffIPad);
  v273 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v273, CFSTR("tag_groupable_coeff_iPad"));

  v122 = *((_QWORD *)&self->_has + 4);
  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((v122 & 0x100) == 0)
  {
LABEL_443:
    if ((v122 & 0x80) == 0)
      goto LABEL_444;
    goto LABEL_499;
  }
LABEL_498:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagSpecificityCoeffIPhone);
  v274 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v274, CFSTR("tag_specificity_coeff_iPhone"));

  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 4) & 0x80) == 0)
  {
LABEL_444:
    if ((v223 & 0x10000000000) == 0)
      goto LABEL_445;
    goto LABEL_500;
  }
LABEL_499:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_tagSpecificityCoeffIPad);
  v275 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v275, CFSTR("tag_specificity_coeff_iPad"));

  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((v223 & 0x10000000000) == 0)
  {
LABEL_445:
    if ((v225 & 0x2000000) == 0)
      goto LABEL_446;
    goto LABEL_501;
  }
LABEL_500:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_optionalTagSpecificityScore);
  v276 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v276, CFSTR("optional_tag_specificity_score"));

  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x2000000) == 0)
  {
LABEL_446:
    if ((v225 & 0x20000000) == 0)
      goto LABEL_447;
    goto LABEL_502;
  }
LABEL_501:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinObservationsSafari);
  v277 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v277, CFSTR("auto_favorite_min_observations_safari"));

  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x20000000) == 0)
  {
LABEL_447:
    if ((v225 & 0x1000000) == 0)
      goto LABEL_448;
    goto LABEL_503;
  }
LABEL_502:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinScoreSafari);
  v278 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v278, CFSTR("auto_favorite_min_score_safari"));

  v223 = *((_QWORD *)&self->_has + 2);
  v225 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x1000000) == 0)
  {
LABEL_448:
    if ((v225 & 0x10000000) == 0)
      goto LABEL_449;
    goto LABEL_504;
  }
LABEL_503:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinObservationsExtAppUsage);
  v279 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v279, CFSTR("auto_favorite_min_observations_ext_app_usage"));

  v223 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)p_has & 0x10000000) == 0)
  {
LABEL_449:
    if ((v223 & 0x80000000000) == 0)
      goto LABEL_450;
    goto LABEL_505;
  }
LABEL_504:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinScoreExtAppUsage);
  v280 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v280, CFSTR("auto_favorite_min_score_ext_app_usage"));

  v223 = *((_QWORD *)&self->_has + 2);
  if ((v223 & 0x80000000000) == 0)
  {
LABEL_450:
    if ((v223 & 0x100000000000) == 0)
      goto LABEL_452;
    goto LABEL_451;
  }
LABEL_505:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitDecayRate);
  v281 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v281, CFSTR("portrait_decay_rate"));

  if ((*((_QWORD *)&self->_has + 2) & 0x100000000000) != 0)
  {
LABEL_451:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitGlobalThreshold);
    v227 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v227, CFSTR("portrait_global_threshold"));

  }
LABEL_452:
  if (-[NSMutableArray count](self->_portraitTagThresholds, "count"))
  {
    v228 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NSMutableArray count](self->_portraitTagThresholds, "count"));
    v455 = 0u;
    v456 = 0u;
    v457 = 0u;
    v458 = 0u;
    v229 = self->_portraitTagThresholds;
    v230 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v229, "countByEnumeratingWithState:objects:count:", &v455, v460, 16);
    if (v230)
    {
      v231 = v230;
      v232 = *(_QWORD *)v456;
      do
      {
        for (i = 0; i != v231; ++i)
        {
          if (*(_QWORD *)v456 != v232)
            objc_enumerationMutation(v229);
          objc_msgSend(*(id *)(*((_QWORD *)&v455 + 1) + 8 * i), "dictionaryRepresentation");
          v234 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v228, "addObject:", v234);

        }
        v231 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v229, "countByEnumeratingWithState:objects:count:", &v455, v460, 16);
      }
      while (v231);
    }

    objc_msgSend(v3, "setObject:forKey:", v228, CFSTR("portrait_tag_thresholds"));
  }
  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x400000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitImpressionSlope);
    v282 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v282, CFSTR("portrait_impression_slope"));

    v236 = *((_QWORD *)&self->_has + 4);
    v237 = *((_QWORD *)&self->_has + 5);
    v235 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v236 = *((_QWORD *)&self->_has + 4);
    v237 = *((_QWORD *)&self->_has + 5);
  }
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x200000000000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitImpressionIntercept);
    v299 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v299, CFSTR("portrait_impression_intercept"));

    v236 = *((_QWORD *)&self->_has + 4);
    v237 = *((_QWORD *)&self->_has + 5);
    v235 = *((_QWORD *)&self->_has + 2);
    v238 = *((_QWORD *)&self->_has + 3);
    v284 = *(_QWORD *)p_has;
    v283 = *((_QWORD *)&self->_has + 1);
    v285 = *((_WORD *)&self->_has + 24);
    if ((v235 & 0x2000000000000) == 0)
    {
LABEL_510:
      if ((v235 & 0x1000000000000) == 0)
        goto LABEL_511;
      goto LABEL_616;
    }
  }
  else if ((v235 & 0x2000000000000) == 0)
  {
    goto LABEL_510;
  }
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitRateSlope);
  v300 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v300, CFSTR("portrait_rate_slope"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x1000000000000) == 0)
  {
LABEL_511:
    if ((v235 & 0x200000000) == 0)
      goto LABEL_512;
    goto LABEL_617;
  }
LABEL_616:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitRateIntercept);
  v301 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v301, CFSTR("portrait_rate_intercept"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x200000000) == 0)
  {
LABEL_512:
    if ((v235 & 0x100000000) == 0)
      goto LABEL_513;
    goto LABEL_618;
  }
LABEL_617:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetPresentationImpressionValue);
  v302 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v302, CFSTR("news_today_widget_presentation_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x100000000) == 0)
  {
LABEL_513:
    if ((v235 & 0x80000000) == 0)
      goto LABEL_514;
    goto LABEL_619;
  }
LABEL_618:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetPresentationClickValue);
  v303 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v303, CFSTR("news_today_widget_presentation_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x80000000) == 0)
  {
LABEL_514:
    if ((v235 & 0x40000000) == 0)
      goto LABEL_515;
    goto LABEL_620;
  }
LABEL_619:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetPresentationBaselineImpressionValue);
  v304 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v304, CFSTR("news_today_widget_presentation_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x40000000) == 0)
  {
LABEL_515:
    if ((v235 & 0x20000000) == 0)
      goto LABEL_516;
    goto LABEL_621;
  }
LABEL_620:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetPresentationBaselineClickValue);
  v305 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v305, CFSTR("news_today_widget_presentation_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x20000000) == 0)
  {
LABEL_516:
    if ((v235 & 0x10000000) == 0)
      goto LABEL_517;
    goto LABEL_622;
  }
LABEL_621:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetClickImpressionValue);
  v306 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v306, CFSTR("news_today_widget_click_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x10000000) == 0)
  {
LABEL_517:
    if ((v235 & 0x8000000) == 0)
      goto LABEL_518;
    goto LABEL_623;
  }
LABEL_622:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetClickClickValue);
  v307 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v307, CFSTR("news_today_widget_click_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x8000000) == 0)
  {
LABEL_518:
    if ((v235 & 0x4000000) == 0)
      goto LABEL_519;
    goto LABEL_624;
  }
LABEL_623:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetClickBaselineImpressionValue);
  v308 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v308, CFSTR("news_today_widget_click_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x4000000) == 0)
  {
LABEL_519:
    if ((v235 & 0x2000000000) == 0)
      goto LABEL_520;
    goto LABEL_625;
  }
LABEL_624:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetClickBaselineClickValue);
  v309 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v309, CFSTR("news_today_widget_click_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x2000000000) == 0)
  {
LABEL_520:
    if ((v235 & 0x1000000000) == 0)
      goto LABEL_521;
    goto LABEL_626;
  }
LABEL_625:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetVideoPlaybackImpressionValue);
  v310 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v310, CFSTR("news_today_widget_video_playback_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x1000000000) == 0)
  {
LABEL_521:
    if ((v235 & 0x800000000) == 0)
      goto LABEL_522;
    goto LABEL_627;
  }
LABEL_626:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetVideoPlaybackClickValue);
  v311 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v311, CFSTR("news_today_widget_video_playback_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x800000000) == 0)
  {
LABEL_522:
    if ((v235 & 0x400000000) == 0)
      goto LABEL_523;
    goto LABEL_628;
  }
LABEL_627:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue);
  v312 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v312, CFSTR("news_today_widget_video_playback_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x400000000) == 0)
  {
LABEL_523:
    if ((v284 & 0x1000000000000000) == 0)
      goto LABEL_524;
    goto LABEL_629;
  }
LABEL_628:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_newsTodayWidgetVideoPlaybackBaselineClickValue);
  v313 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v313, CFSTR("news_today_widget_video_playback_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000000000) == 0)
  {
LABEL_524:
    if ((v284 & 0x4000000000000) == 0)
      goto LABEL_525;
    goto LABEL_630;
  }
LABEL_629:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithZeroSubscribed);
  v314 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v314, CFSTR("ctr_with_zero_subscribed"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000000) == 0)
  {
LABEL_525:
    if ((v284 & 0x200000000000000) == 0)
      goto LABEL_526;
    goto LABEL_631;
  }
LABEL_630:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithOneSubscribed);
  v315 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v315, CFSTR("ctr_with_one_subscribed"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x200000000000000) == 0)
  {
LABEL_526:
    if ((v284 & 0x40000000000000) == 0)
      goto LABEL_527;
    goto LABEL_632;
  }
LABEL_631:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithTwoSubscribed);
  v316 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v316, CFSTR("ctr_with_two_subscribed"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000000000000) == 0)
  {
LABEL_527:
    if ((v284 & 0x800000000000000) == 0)
      goto LABEL_528;
    goto LABEL_633;
  }
LABEL_632:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithThreeSubscribed);
  v317 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v317, CFSTR("ctr_with_three_subscribed"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800000000000000) == 0)
  {
LABEL_528:
    if ((v284 & 0x2000000000000) == 0)
      goto LABEL_529;
    goto LABEL_634;
  }
LABEL_633:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithZeroMuted);
  v318 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v318, CFSTR("ctr_with_zero_muted"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x2000000000000) == 0)
  {
LABEL_529:
    if ((v284 & 0x100000000000000) == 0)
      goto LABEL_530;
    goto LABEL_635;
  }
LABEL_634:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithOneMuted);
  v319 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v319, CFSTR("ctr_with_one_muted"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000000000000) == 0)
  {
LABEL_530:
    if ((v284 & 0x20000000000000) == 0)
      goto LABEL_531;
    goto LABEL_636;
  }
LABEL_635:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithTwoMuted);
  v320 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v320, CFSTR("ctr_with_two_muted"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20000000000000) == 0)
  {
LABEL_531:
    if ((v284 & 0x400000000000000) == 0)
      goto LABEL_532;
    goto LABEL_637;
  }
LABEL_636:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithThreeMuted);
  v321 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v321, CFSTR("ctr_with_three_muted"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000000000) == 0)
  {
LABEL_532:
    if ((v284 & 0x1000000000000) == 0)
      goto LABEL_533;
    goto LABEL_638;
  }
LABEL_637:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithZeroAutofavorited);
  v322 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v322, CFSTR("ctr_with_zero_autofavorited"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000000) == 0)
  {
LABEL_533:
    if ((v284 & 0x80000000000000) == 0)
      goto LABEL_534;
    goto LABEL_639;
  }
LABEL_638:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithOneAutofavorited);
  v323 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v323, CFSTR("ctr_with_one_autofavorited"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000000000) == 0)
  {
LABEL_534:
    if ((v284 & 0x10000000000000) == 0)
      goto LABEL_535;
    goto LABEL_640;
  }
LABEL_639:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithTwoAutofavorited);
  v324 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v324, CFSTR("ctr_with_two_autofavorited"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000000000000) == 0)
  {
LABEL_535:
    if ((v284 & 0x400000000) == 0)
      goto LABEL_536;
    goto LABEL_641;
  }
LABEL_640:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithThreeAutofavorited);
  v325 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v325, CFSTR("ctr_with_three_autofavorited"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000) == 0)
  {
LABEL_536:
    if ((v238 & 0x20) == 0)
      goto LABEL_537;
    goto LABEL_642;
  }
LABEL_641:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autofavoritedVoteCoefficient);
  v326 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v326, CFSTR("autofavorited_vote_coefficient"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x20) == 0)
  {
LABEL_537:
    if ((v283 & 0x20000000) == 0)
      goto LABEL_538;
    goto LABEL_643;
  }
LABEL_642:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_realTimeUserFeedbackCoefficient);
  v327 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v327, CFSTR("real_time_user_feedback_coefficient"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v283 & 0x20000000) == 0)
  {
LABEL_538:
    if ((v283 & 0x10000000) == 0)
      goto LABEL_539;
    goto LABEL_644;
  }
LABEL_643:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreToCtrSlope);
  v328 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v328, CFSTR("global_score_to_ctr_slope"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v283 & 0x10000000) == 0)
  {
LABEL_539:
    if ((v284 & 0x1000000000) == 0)
      goto LABEL_540;
    goto LABEL_645;
  }
LABEL_644:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreToCtrIntercept);
  v329 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v329, CFSTR("global_score_to_ctr_intercept"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000) == 0)
  {
LABEL_540:
    if ((v284 & 0x80) == 0)
      goto LABEL_541;
    goto LABEL_646;
  }
LABEL_645:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_baselineArticleScore);
  v330 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v330, CFSTR("baseline_article_score"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80) == 0)
  {
LABEL_541:
    if ((v284 & 0x40) == 0)
      goto LABEL_542;
    goto LABEL_647;
  }
LABEL_646:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInstallImpressionValue);
  v331 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v331, CFSTR("app_install_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40) == 0)
  {
LABEL_542:
    if ((v284 & 0x20) == 0)
      goto LABEL_543;
    goto LABEL_648;
  }
LABEL_647:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInstallClickValue);
  v332 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v332, CFSTR("app_install_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20) == 0)
  {
LABEL_543:
    if ((v284 & 0x10) == 0)
      goto LABEL_544;
    goto LABEL_649;
  }
LABEL_648:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInstallBaselineImpressionValue);
  v333 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v333, CFSTR("app_install_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10) == 0)
  {
LABEL_544:
    if ((v284 & 8) == 0)
      goto LABEL_545;
    goto LABEL_650;
  }
LABEL_649:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInstallBaselineClickValue);
  v334 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v334, CFSTR("app_install_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 8) == 0)
  {
LABEL_545:
    if ((v284 & 4) == 0)
      goto LABEL_546;
    goto LABEL_651;
  }
LABEL_650:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInFocusImpressionValue);
  v335 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v335, CFSTR("app_in_focus_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 4) == 0)
  {
LABEL_546:
    if ((v284 & 2) == 0)
      goto LABEL_547;
    goto LABEL_652;
  }
LABEL_651:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInFocusClickValue);
  v336 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v336, CFSTR("app_in_focus_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 2) == 0)
  {
LABEL_547:
    if ((v284 & 1) == 0)
      goto LABEL_548;
    goto LABEL_653;
  }
LABEL_652:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInFocusBaselineImpressionValue);
  v337 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v337, CFSTR("app_in_focus_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 1) == 0)
  {
LABEL_548:
    if ((v238 & 0x80000) == 0)
      goto LABEL_549;
    goto LABEL_654;
  }
LABEL_653:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appInFocusBaselineClickValue);
  v338 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v338, CFSTR("app_in_focus_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x80000) == 0)
  {
LABEL_549:
    if ((v238 & 0x40000) == 0)
      goto LABEL_550;
    goto LABEL_655;
  }
LABEL_654:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariHistoryImpressionValue);
  v339 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v339, CFSTR("safari_history_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x40000) == 0)
  {
LABEL_550:
    if ((v238 & 0x20000) == 0)
      goto LABEL_551;
    goto LABEL_656;
  }
LABEL_655:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariHistoryClickValue);
  v340 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v340, CFSTR("safari_history_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x20000) == 0)
  {
LABEL_551:
    if ((v238 & 0x10000) == 0)
      goto LABEL_552;
    goto LABEL_657;
  }
LABEL_656:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariHistoryBaselineImpressionValue);
  v341 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v341, CFSTR("safari_history_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x10000) == 0)
  {
LABEL_552:
    if ((v237 & 4) == 0)
      goto LABEL_553;
    goto LABEL_658;
  }
LABEL_657:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariHistoryBaselineClickValue);
  v342 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v342, CFSTR("safari_history_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 4) == 0)
  {
LABEL_553:
    if ((v237 & 2) == 0)
      goto LABEL_554;
    goto LABEL_659;
  }
LABEL_658:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete25ImpressionValue);
  v343 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v343, CFSTR("video_complete25_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 2) == 0)
  {
LABEL_554:
    if ((v237 & 1) == 0)
      goto LABEL_555;
    goto LABEL_660;
  }
LABEL_659:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete25ClickValue);
  v344 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v344, CFSTR("video_complete25_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 1) == 0)
  {
LABEL_555:
    if ((v236 & 0x8000000000000000) == 0)
      goto LABEL_556;
    goto LABEL_661;
  }
LABEL_660:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete25BaselineImpressionValue);
  v345 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v345, CFSTR("video_complete25_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v236 & 0x8000000000000000) == 0)
  {
LABEL_556:
    if ((v237 & 0x40) == 0)
      goto LABEL_557;
    goto LABEL_662;
  }
LABEL_661:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete25BaselineClickValue);
  v346 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v346, CFSTR("video_complete25_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x40) == 0)
  {
LABEL_557:
    if ((v237 & 0x20) == 0)
      goto LABEL_558;
    goto LABEL_663;
  }
LABEL_662:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete50ImpressionValue);
  v347 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v347, CFSTR("video_complete50_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x20) == 0)
  {
LABEL_558:
    if ((v237 & 0x10) == 0)
      goto LABEL_559;
    goto LABEL_664;
  }
LABEL_663:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete50ClickValue);
  v348 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v348, CFSTR("video_complete50_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x10) == 0)
  {
LABEL_559:
    if ((v237 & 8) == 0)
      goto LABEL_560;
    goto LABEL_665;
  }
LABEL_664:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete50BaselineImpressionValue);
  v349 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v349, CFSTR("video_complete50_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 8) == 0)
  {
LABEL_560:
    if ((v237 & 0x400) == 0)
      goto LABEL_561;
    goto LABEL_666;
  }
LABEL_665:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete50BaselineClickValue);
  v350 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v350, CFSTR("video_complete50_baseline_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x400) == 0)
  {
LABEL_561:
    if ((v237 & 0x200) == 0)
      goto LABEL_562;
    goto LABEL_667;
  }
LABEL_666:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete75ImpressionValue);
  v351 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v351, CFSTR("video_complete75_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x200) == 0)
  {
LABEL_562:
    if ((v237 & 0x100) == 0)
      goto LABEL_563;
    goto LABEL_668;
  }
LABEL_667:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete75ClickValue);
  v352 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v352, CFSTR("video_complete75_click_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x100) == 0)
  {
LABEL_563:
    if ((v237 & 0x80) == 0)
      goto LABEL_564;
    goto LABEL_669;
  }
LABEL_668:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete75BaselineImpressionValue);
  v353 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v353, CFSTR("video_complete75_baseline_impression_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x80) == 0)
  {
LABEL_564:
    if ((v284 & 0x400000) == 0)
      goto LABEL_565;
    goto LABEL_670;
  }
LABEL_669:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_videoComplete75BaselineClickValue);
  v354 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v354, CFSTR("video_complete75_baselineClick_value"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000) == 0)
  {
LABEL_565:
    if ((v283 & 0x2000000) == 0)
      goto LABEL_566;
    goto LABEL_671;
  }
LABEL_670:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMinClicks);
  v355 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v355, CFSTR("auto_favorite_min_clicks"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v283 & 0x2000000) == 0)
  {
LABEL_566:
    if ((v283 & 0x4000000) == 0)
      goto LABEL_567;
    goto LABEL_672;
  }
LABEL_671:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreCoefficientHalfLife);
  v356 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v356, CFSTR("global_score_coefficient_half_life"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v283 & 0x4000000) == 0)
  {
LABEL_567:
    if ((v237 & 0x20000000000000) == 0)
      goto LABEL_568;
    goto LABEL_673;
  }
LABEL_672:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_globalScoreCoefficientInitialMultiplier);
  v357 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v357, CFSTR("global_score_coefficient_initial_multiplier"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x20000000000000) == 0)
  {
LABEL_568:
    if ((v237 & 0x200000000000) == 0)
      goto LABEL_569;
    goto LABEL_674;
  }
LABEL_673:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minClusterSizeIPhoneAutoFavorite);
  v358 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v358, CFSTR("min_cluster_size_iPhone_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x200000000000) == 0)
  {
LABEL_569:
    if ((v237 & 0x200000000000000) == 0)
      goto LABEL_570;
    goto LABEL_675;
  }
LABEL_674:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxClusterSizeIPhoneAutoFavorite);
  v359 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v359, CFSTR("max_cluster_size_iPhone_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x200000000000000) == 0)
  {
LABEL_570:
    if ((v237 & 0x2000000000000) == 0)
      goto LABEL_571;
    goto LABEL_676;
  }
LABEL_675:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minIdealClusterSizeIPhoneAutoFavorite);
  v360 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v360, CFSTR("min_ideal_cluster_size_iPhone_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x2000000000000) == 0)
  {
LABEL_571:
    if ((v237 & 0x8000000000000) == 0)
      goto LABEL_572;
    goto LABEL_677;
  }
LABEL_676:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxIdealClusterSizeIPhoneAutoFavorite);
  v361 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v361, CFSTR("max_ideal_cluster_size_iPhone_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x8000000000000) == 0)
  {
LABEL_572:
    if ((v237 & 0x80000000000) == 0)
      goto LABEL_573;
    goto LABEL_678;
  }
LABEL_677:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minClusterSizeIPadAutoFavorite);
  v362 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v362, CFSTR("min_cluster_size_iPad_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x80000000000) == 0)
  {
LABEL_573:
    if ((v237 & 0x80000000000000) == 0)
      goto LABEL_574;
    goto LABEL_679;
  }
LABEL_678:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxClusterSizeIPadAutoFavorite);
  v363 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v363, CFSTR("max_cluster_size_iPad_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v237 = *((_QWORD *)&self->_has + 5);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v237 & 0x80000000000000) == 0)
  {
LABEL_574:
    if ((v237 & 0x800000000000) == 0)
      goto LABEL_575;
    goto LABEL_680;
  }
LABEL_679:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_minIdealClusterSizeIPadAutoFavorite);
  v364 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v364, CFSTR("min_ideal_cluster_size_iPad_auto_favorite"));

  v236 = *((_QWORD *)&self->_has + 4);
  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000) == 0)
  {
LABEL_575:
    if ((v238 & 0x80000000000000) == 0)
      goto LABEL_576;
    goto LABEL_681;
  }
LABEL_680:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_maxIdealClusterSizeIPadAutoFavorite);
  v365 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v365, CFSTR("max_ideal_cluster_size_iPad_auto_favorite"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x80000000000000) == 0)
  {
LABEL_576:
    if ((v238 & 0x40000000000000) == 0)
      goto LABEL_577;
    goto LABEL_682;
  }
LABEL_681:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_swipeToArticleWeakClickMinimumDuration);
  v366 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v366, CFSTR("swipe_to_article_weak_click_minimum_duration"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x40000000000000) == 0)
  {
LABEL_577:
    if ((v235 & 0x10) == 0)
      goto LABEL_578;
    goto LABEL_683;
  }
LABEL_682:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_swipeToArticleHeavyClickMinimumDuration);
  v367 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v367, CFSTR("swipe_to_article_heavy_click_minimum_duration"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x10) == 0)
  {
LABEL_578:
    if ((v284 & 0x400000000000) == 0)
      goto LABEL_579;
    goto LABEL_684;
  }
LABEL_683:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_maxSuggestionsCount);
  v368 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v368, CFSTR("max_suggestions_count"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000000) == 0)
  {
LABEL_579:
    if ((v284 & 0x100000000000) == 0)
      goto LABEL_580;
    goto LABEL_685;
  }
LABEL_684:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipFavoritedBoost);
  v369 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v369, CFSTR("cohort_membership_favorited_boost"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000000000) == 0)
  {
LABEL_580:
    if ((v284 & 0x80000000000) == 0)
      goto LABEL_581;
    goto LABEL_686;
  }
LABEL_685:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipCurvature);
  v370 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v370, CFSTR("cohort_membership_curvature"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000000) == 0)
  {
LABEL_581:
    if ((v238 & 0x8000) == 0)
      goto LABEL_582;
    goto LABEL_687;
  }
LABEL_686:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_cohortMembershipCtrCeiling);
  v371 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v371, CFSTR("cohort_membership_ctr_ceiling"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x8000) == 0)
  {
LABEL_582:
    if ((v284 & 0x10000000000) == 0)
      goto LABEL_583;
    goto LABEL_688;
  }
LABEL_687:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariEventBlackoutSeconds);
  v372 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v372, CFSTR("safari_event_blackout_seconds"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000000000) == 0)
  {
LABEL_583:
    if ((v238 & 0x40) == 0)
      goto LABEL_584;
    goto LABEL_689;
  }
LABEL_688:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_channelTopicDiversificationPenalty);
  v373 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v373, CFSTR("channel_topic_diversification_penalty"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x40) == 0)
  {
LABEL_584:
    if ((v284 & 0x80000000) == 0)
      goto LABEL_585;
    goto LABEL_690;
  }
LABEL_689:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient);
  v374 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v374, CFSTR("real_time_user_feedback_publish_date_half_life_coefficient"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000) == 0)
  {
LABEL_585:
    if ((v284 & 0x40000000) == 0)
      goto LABEL_586;
    goto LABEL_691;
  }
LABEL_690:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteTagFavorabilityExponent);
  v375 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v375, CFSTR("auto_favorite_tag_favorability_exponent"));

  v238 = *((_QWORD *)&self->_has + 3);
  v236 = *((_QWORD *)&self->_has + 4);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000000) == 0)
  {
LABEL_586:
    if ((v236 & 0x10000000000000) == 0)
      goto LABEL_587;
    goto LABEL_692;
  }
LABEL_691:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoritePriorFactorExponent);
  v376 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v376, CFSTR("auto_favorite_prior_factor_exponent"));

  v238 = *((_QWORD *)&self->_has + 3);
  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x10000000000000) == 0)
  {
LABEL_587:
    if ((v285 & 0x400) == 0)
      goto LABEL_588;
    goto LABEL_693;
  }
LABEL_692:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio);
  v377 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v377, CFSTR("u_group_minimum_subscribed_channel_source_feed_article_ratio"));

  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v285 & 0x400) == 0)
  {
LABEL_588:
    if ((v238 & 0x800000) == 0)
      goto LABEL_589;
    goto LABEL_694;
  }
LABEL_693:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_onlyConsiderBestSourceFeedsInForYouGroup);
  v378 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v378, CFSTR("only_consider_best_source_feeds_in_for_you_group"));

  v235 = *((_QWORD *)&self->_has + 2);
  v238 = *((_QWORD *)&self->_has + 3);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v238 & 0x800000) == 0)
  {
LABEL_589:
    if ((v238 & 0x200000) == 0)
      goto LABEL_590;
    goto LABEL_695;
  }
LABEL_694:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariTagFavorabilityExponent);
  v379 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v379, CFSTR("safari_tag_favorability_exponent"));

  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v283 = *((_QWORD *)&self->_has + 1);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 3) & 0x200000) == 0)
  {
LABEL_590:
    if ((v284 & 0x800) == 0)
      goto LABEL_591;
    goto LABEL_696;
  }
LABEL_695:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_safariPriorFactorExponent);
  v380 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v380, CFSTR("safari_prior_factor_exponent"));

  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v284 = *(_QWORD *)p_has;
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800) == 0)
  {
LABEL_591:
    if ((v284 & 0x200) == 0)
      goto LABEL_592;
    goto LABEL_697;
  }
LABEL_696:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appUsageTagFavorabilityExponent);
  v381 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v381, CFSTR("app_usage_tag_favorability_exponent"));

  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x200) == 0)
  {
LABEL_592:
    if ((v235 & 0x4000000000000) == 0)
      goto LABEL_593;
    goto LABEL_698;
  }
LABEL_697:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_appUsagePriorFactorExponent);
  v382 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v382, CFSTR("app_usage_prior_factor_exponent"));

  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x4000000000000) == 0)
  {
LABEL_593:
    if ((v235 & 0x800000000000) == 0)
      goto LABEL_594;
    goto LABEL_699;
  }
LABEL_698:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitTagFavorabilityExponent);
  v383 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v383, CFSTR("portrait_tag_favorability_exponent"));

  v283 = *((_QWORD *)&self->_has + 1);
  v235 = *((_QWORD *)&self->_has + 2);
  v285 = *((_WORD *)&self->_has + 24);
  if ((v235 & 0x800000000000) == 0)
  {
LABEL_594:
    if ((v283 & 0x200000000000000) == 0)
      goto LABEL_595;
    goto LABEL_700;
  }
LABEL_699:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_portraitPriorFactorExponent);
  v384 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v384, CFSTR("portrait_prior_factor_exponent"));

  v235 = *((_QWORD *)&self->_has + 2);
  v285 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 1) & 0x200000000000000) == 0)
  {
LABEL_595:
    if ((v285 & 0x20) == 0)
      goto LABEL_596;
    goto LABEL_701;
  }
LABEL_700:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_internalUsageSignalWeight);
  v385 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v385, CFSTR("internal_usage_signal_weight"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((*((_WORD *)&self->_has + 24) & 0x20) == 0)
  {
LABEL_596:
    if ((v235 & 0x4000000000) == 0)
      goto LABEL_597;
    goto LABEL_702;
  }
LABEL_701:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", self->_enablePreTigrisArticleScoring);
  v386 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v386, CFSTR("enable_pre_tigris_article_scoring"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x4000000000) == 0)
  {
LABEL_597:
    if ((v235 & 0x80) == 0)
      goto LABEL_598;
    goto LABEL_703;
  }
LABEL_702:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_numEventsToDisableDefaultTopics);
  v387 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v387, CFSTR("num_events_to_disable_default_topics"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x80) == 0)
  {
LABEL_598:
    if ((v235 & 0x40) == 0)
      goto LABEL_599;
    goto LABEL_704;
  }
LABEL_703:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_metaGroupingRelatednessThreshold);
  v388 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v388, CFSTR("meta_grouping_relatedness_threshold"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x40) == 0)
  {
LABEL_599:
    if ((v235 & 0x200) == 0)
      goto LABEL_600;
    goto LABEL_705;
  }
LABEL_704:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_metaGroupingRelatednessKWeight);
  v389 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v389, CFSTR("meta_grouping_relatedness_k_weight"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x200) == 0)
  {
LABEL_600:
    if ((v235 & 0x20) == 0)
      goto LABEL_601;
    goto LABEL_706;
  }
LABEL_705:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_metaGroupingTopicScoreWeight);
  v390 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v390, CFSTR("meta_grouping_topic_score_weight"));

  v235 = *((_QWORD *)&self->_has + 2);
  if ((v235 & 0x20) == 0)
  {
LABEL_601:
    if ((v235 & 0x100) == 0)
      goto LABEL_603;
    goto LABEL_602;
  }
LABEL_706:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_metaGroupingHighestScoringRelativeScoreMultiplier);
  v391 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v391, CFSTR("meta_grouping__highest_scoring_relative_score_multiplier"));

  if ((*((_QWORD *)&self->_has + 2) & 0x100) != 0)
  {
LABEL_602:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_metaGroupingSubscribedTopicMultiplier);
    v286 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v286, CFSTR("meta_grouping_subscribed_topic_multiplier"));

  }
LABEL_603:
  if (-[NSMutableArray count](self->_realTimeUserFeedbackTagCoefficients, "count"))
  {
    v287 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NSMutableArray count](self->_realTimeUserFeedbackTagCoefficients, "count"));
    v451 = 0u;
    v452 = 0u;
    v453 = 0u;
    v454 = 0u;
    v288 = self->_realTimeUserFeedbackTagCoefficients;
    v289 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v288, "countByEnumeratingWithState:objects:count:", &v451, v459, 16);
    if (v289)
    {
      v290 = v289;
      v291 = *(_QWORD *)v452;
      do
      {
        for (j = 0; j != v290; ++j)
        {
          if (*(_QWORD *)v452 != v291)
            objc_enumerationMutation(v288);
          objc_msgSend(*(id *)(*((_QWORD *)&v451 + 1) + 8 * j), "dictionaryRepresentation", (_QWORD)v451);
          v293 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v287, "addObject:", v293);

        }
        v290 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v288, "countByEnumeratingWithState:objects:count:", &v451, v459, 16);
      }
      while (v290);
    }

    objc_msgSend(v3, "setObject:forKey:", v287, CFSTR("real_time_user_feedback_tag_coefficients"));
  }
  v294 = *((_QWORD *)&self->_has + 1);
  if ((v294 & 0x8000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_expandedAutofavoriteClusterMinSizeMultiplier);
    v392 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v392, CFSTR("expanded_autofavorite_cluster_min_size_multiplier"));

    v295 = *((_QWORD *)&self->_has + 4);
    v296 = *((_QWORD *)&self->_has + 5);
    v298 = *((_QWORD *)&self->_has + 2);
    v297 = *((_QWORD *)&self->_has + 3);
    v294 = *((_QWORD *)&self->_has + 1);
  }
  else
  {
    v295 = *((_QWORD *)&self->_has + 4);
    v296 = *((_QWORD *)&self->_has + 5);
    v298 = *((_QWORD *)&self->_has + 2);
    v297 = *((_QWORD *)&self->_has + 3);
  }
  v393 = *(_QWORD *)p_has;
  if ((v294 & 0x4000) != 0)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_expandedAutofavoriteClusterMaxSizeMultiplier);
    v397 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v397, CFSTR("expanded_autofavorite_cluster_max_size_multiplier"));

    v295 = *((_QWORD *)&self->_has + 4);
    v296 = *((_QWORD *)&self->_has + 5);
    v298 = *((_QWORD *)&self->_has + 2);
    v297 = *((_QWORD *)&self->_has + 3);
    v393 = *(_QWORD *)p_has;
    v294 = *((_QWORD *)&self->_has + 1);
    if ((v298 & 8) == 0)
    {
LABEL_711:
      if ((v393 & 0x200000) == 0)
        goto LABEL_712;
      goto LABEL_768;
    }
  }
  else if ((v298 & 8) == 0)
  {
    goto LABEL_711;
  }
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_maxExpandedAutofavoriteGroupCandidateRatio, (_QWORD)v451);
  v398 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v398, CFSTR("max_expanded_autofavorite_group_candidate_ratio"));

  v295 = *((_QWORD *)&self->_has + 4);
  v296 = *((_QWORD *)&self->_has + 5);
  v298 = *((_QWORD *)&self->_has + 2);
  v297 = *((_QWORD *)&self->_has + 3);
  v393 = *(_QWORD *)p_has;
  v294 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000) == 0)
  {
LABEL_712:
    if ((v296 & 0x8000000) == 0)
      goto LABEL_713;
    goto LABEL_769;
  }
LABEL_768:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_autoFavoriteMaxIdleTime, (_QWORD)v451);
  v399 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v399, CFSTR("auto_favorite_max_idle_time"));

  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v297 = *((_QWORD *)&self->_has + 3);
  v393 = *(_QWORD *)p_has;
  v294 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 5) & 0x8000000) == 0)
  {
LABEL_713:
    if ((v298 & 0x8000000000) == 0)
      goto LABEL_714;
    goto LABEL_770;
  }
LABEL_769:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", self->_auditionedAutoFavoritesEmitterLimit, (_QWORD)v451);
  v400 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v400, CFSTR("auditioned_auto_favorites_emitter_limit"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v294 = *((_QWORD *)&self->_has + 1);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v298 & 0x8000000000) == 0)
  {
LABEL_714:
    if ((v298 & 0x1000000000000000) == 0)
      goto LABEL_715;
    goto LABEL_771;
  }
LABEL_770:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", self->_numSubscriptionsToDisableDefaultTopics, (_QWORD)v451);
  v401 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v401, CFSTR("num_subscriptions_to_disable_default_topics"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v294 = *((_QWORD *)&self->_has + 1);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v298 & 0x1000000000000000) == 0)
  {
LABEL_715:
    if ((v294 & 8) == 0)
      goto LABEL_716;
    goto LABEL_772;
  }
LABEL_771:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherAggregateWeight, (_QWORD)v451);
  v402 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v402, CFSTR("publisher_aggregate_weight"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v294 = *((_QWORD *)&self->_has + 1);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v294 & 8) == 0)
  {
LABEL_716:
    if ((v294 & 0x20) == 0)
      goto LABEL_717;
    goto LABEL_773;
  }
LABEL_772:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_diversificationInitialPenalty, (_QWORD)v451);
  v403 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v403, CFSTR("diversification_initial_penalty"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x20) == 0)
  {
LABEL_717:
    if ((v393 & 0x8000000000) == 0)
      goto LABEL_718;
    goto LABEL_774;
  }
LABEL_773:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_diversificationPenaltyHalfLife, (_QWORD)v451);
  v404 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v404, CFSTR("diversification_penalty_half_life"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x8000000000) == 0)
  {
LABEL_718:
    if ((v393 & 0x20000000000) == 0)
      goto LABEL_719;
    goto LABEL_775;
  }
LABEL_774:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_channelTopicDiversificationInitialPenalty, (_QWORD)v451);
  v405 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v405, CFSTR("channel_topic_diversification_initial_penalty"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x20000000000) == 0)
  {
LABEL_719:
    if ((v298 & 0x2000000000000000) == 0)
      goto LABEL_720;
    goto LABEL_776;
  }
LABEL_775:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_channelTopicDiversificationPenaltyHalfLife, (_QWORD)v451);
  v406 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v406, CFSTR("channel_topic_diversification_penalty_half_life"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v298 & 0x2000000000000000) == 0)
  {
LABEL_720:
    if ((v298 & 0x8000000000000000) == 0)
      goto LABEL_721;
    goto LABEL_777;
  }
LABEL_776:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversificationInitialPenalty, (_QWORD)v451);
  v407 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v407, CFSTR("publisher_diversification_initial_penalty"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v298 & 0x8000000000000000) == 0)
  {
LABEL_721:
    if ((v298 & 0x800) == 0)
      goto LABEL_722;
    goto LABEL_778;
  }
LABEL_777:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_publisherDiversificationPenaltyHalfLife, (_QWORD)v451);
  v408 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v408, CFSTR("publisher_diversification_penalty_half_life"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v298 = *((_QWORD *)&self->_has + 2);
  v393 = *(_QWORD *)p_has;
  if ((v298 & 0x800) == 0)
  {
LABEL_722:
    if ((v298 & 0x1000) == 0)
      goto LABEL_723;
    goto LABEL_779;
  }
LABEL_778:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_minimumGlobalScoreThreshold, (_QWORD)v451);
  v409 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v409, CFSTR("minimum_global_score_threshold"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 2) & 0x1000) == 0)
  {
LABEL_723:
    if ((v297 & 0x800000000000) == 0)
      goto LABEL_724;
    goto LABEL_780;
  }
LABEL_779:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_minimumGlobalScoreThresholdForSubscribedChannel, (_QWORD)v451);
  v410 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v410, CFSTR("minimum_global_score_threshold_for_subscribed_channel"));

  v297 = *((_QWORD *)&self->_has + 3);
  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v297 & 0x800000000000) == 0)
  {
LABEL_724:
    if ((v297 & 0x1000000000000) == 0)
      goto LABEL_725;
    goto LABEL_781;
  }
LABEL_780:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribedChannelScoreCoefficient, (_QWORD)v451);
  v411 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v411, CFSTR("subscribed_channel_score_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x1000000000000) == 0)
  {
LABEL_725:
    if ((v295 & 0x4000) == 0)
      goto LABEL_726;
    goto LABEL_782;
  }
LABEL_781:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_subscribedTopicsScoreCoefficient, (_QWORD)v451);
  v412 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v412, CFSTR("subscribed_topics_score_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x4000) == 0)
  {
LABEL_726:
    if ((v295 & 0x80000000) == 0)
      goto LABEL_727;
    goto LABEL_783;
  }
LABEL_782:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedBaselineRatePrior, (_QWORD)v451);
  v413 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v413, CFSTR("topic_feed_baseline_rate_prior"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x80000000) == 0)
  {
LABEL_727:
    if ((v295 & 0x100000000) == 0)
      goto LABEL_728;
    goto LABEL_784;
  }
LABEL_783:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedDecayFactor, (_QWORD)v451);
  v414 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v414, CFSTR("topic_feed_decay_factor"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x100000000) == 0)
  {
LABEL_728:
    if ((v295 & 0x20000000000) == 0)
      goto LABEL_729;
    goto LABEL_785;
  }
LABEL_784:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedDemocratizationFactor, (_QWORD)v451);
  v415 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v415, CFSTR("topic_feed_democratization_factor"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x20000000000) == 0)
  {
LABEL_729:
    if ((v295 & 0x2000000000000) == 0)
      goto LABEL_730;
    goto LABEL_786;
  }
LABEL_785:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedHalfLifeCoefficient, (_QWORD)v451);
  v416 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v416, CFSTR("topic_feed_half_life_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x2000000000000) == 0)
  {
LABEL_730:
    if ((v295 & 0x100000000000) == 0)
      goto LABEL_731;
    goto LABEL_787;
  }
LABEL_786:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedSubscribedChannelScoreCoefficient, (_QWORD)v451);
  v417 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v417, CFSTR("topic_feed_subscribed_channel_score_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x100000000000) == 0)
  {
LABEL_731:
    if ((v295 & 0x200000000000) == 0)
      goto LABEL_732;
    goto LABEL_788;
  }
LABEL_787:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedMutedVoteCoefficient, (_QWORD)v451);
  v418 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v418, CFSTR("topic_feed_muted_vote_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x200000000000) == 0)
  {
LABEL_732:
    if ((v295 & 0x400000000000) == 0)
      goto LABEL_733;
    goto LABEL_789;
  }
LABEL_788:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedPersonalizationCoefficient, (_QWORD)v451);
  v419 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v419, CFSTR("topic_feed_personalization_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x400000000000) == 0)
  {
LABEL_733:
    if ((v295 & 0x1000000000) == 0)
      goto LABEL_734;
    goto LABEL_790;
  }
LABEL_789:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedPublisherAggregateWeight, (_QWORD)v451);
  v420 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v420, CFSTR("topic_feed_publisher_aggregate_weight"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x1000000000) == 0)
  {
LABEL_734:
    if ((v295 & 0x2000000000) == 0)
      goto LABEL_735;
    goto LABEL_791;
  }
LABEL_790:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedGlobalScoreCoefficient, (_QWORD)v451);
  v421 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v421, CFSTR("topic_feed_global_score_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x2000000000) == 0)
  {
LABEL_735:
    if ((v295 & 0x4000000000) == 0)
      goto LABEL_736;
    goto LABEL_792;
  }
LABEL_791:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedGlobalScoreCoefficientHalfLife, (_QWORD)v451);
  v422 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v422, CFSTR("topic_feed_global_score_coefficient_half_life"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x4000000000) == 0)
  {
LABEL_736:
    if ((v295 & 0x8000000000) == 0)
      goto LABEL_737;
    goto LABEL_793;
  }
LABEL_792:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedGlobalScoreCoefficientInitialMultiplier, (_QWORD)v451);
  v423 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v423, CFSTR("topic_feed_global_score_coefficient_initial_multiplier"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x8000000000) == 0)
  {
LABEL_737:
    if ((v295 & 0x10000000000) == 0)
      goto LABEL_738;
    goto LABEL_794;
  }
LABEL_793:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedGlobalScoreToCtrIntercept, (_QWORD)v451);
  v424 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v424, CFSTR("topic_feed_global_score_to_ctr_intercept"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x10000000000) == 0)
  {
LABEL_738:
    if ((v295 & 0x40000000000) == 0)
      goto LABEL_739;
    goto LABEL_795;
  }
LABEL_794:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedGlobalScoreToCtrSlope, (_QWORD)v451);
  v425 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v425, CFSTR("topic_feed_global_score_to_ctr_slope"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x40000000000) == 0)
  {
LABEL_739:
    if ((v295 & 0x80000000000) == 0)
      goto LABEL_740;
    goto LABEL_796;
  }
LABEL_795:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedMinimumGlobalScoreThreshold, (_QWORD)v451);
  v426 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v426, CFSTR("topic_feed_minimum_global_score_threshold"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x80000000000) == 0)
  {
LABEL_740:
    if ((v295 & 0x800000000000) == 0)
      goto LABEL_741;
    goto LABEL_797;
  }
LABEL_796:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel, (_QWORD)v451);
  v427 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v427, CFSTR("topic_feed_minimum_global_score_threshold_for_subscribed_channel"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x800000000000) == 0)
  {
LABEL_741:
    if ((v295 & 0x1000000000000) == 0)
      goto LABEL_742;
    goto LABEL_798;
  }
LABEL_797:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedRealTimeUserFeedbackCoefficient, (_QWORD)v451);
  v428 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v428, CFSTR("topic_feed_real_time_user_feedback_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x1000000000000) == 0)
  {
LABEL_742:
    if ((v295 & 0x40000) == 0)
      goto LABEL_743;
    goto LABEL_799;
  }
LABEL_798:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient, (_QWORD)v451);
  v429 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v429, CFSTR("topic_feed_real_time_user_feedback_publish_date_half_life_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x40000) == 0)
  {
LABEL_743:
    if ((v295 & 0x80000) == 0)
      goto LABEL_744;
    goto LABEL_800;
  }
LABEL_799:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCohortMembershipCtrCeiling, (_QWORD)v451);
  v430 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v430, CFSTR("topic_feed_cohort_membership_ctr_ceiling"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x80000) == 0)
  {
LABEL_744:
    if ((v295 & 0x100000) == 0)
      goto LABEL_745;
    goto LABEL_801;
  }
LABEL_800:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCohortMembershipCurvature, (_QWORD)v451);
  v431 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v431, CFSTR("topic_feed_cohort_membership_curvature"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x100000) == 0)
  {
LABEL_745:
    if ((v295 & 0x200000) == 0)
      goto LABEL_746;
    goto LABEL_802;
  }
LABEL_801:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCohortMembershipFavoritedBoost, (_QWORD)v451);
  v432 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v432, CFSTR("topic_feed_cohort_membership_favorited_boost"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x200000) == 0)
  {
LABEL_746:
    if ((v295 & 0x4000000000000) == 0)
      goto LABEL_747;
    goto LABEL_803;
  }
LABEL_802:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCohortMembershipMinWeightedImpressions, (_QWORD)v451);
  v433 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v433, CFSTR("topic_feed_cohort_membership_min_weighted_impressions"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x4000000000000) == 0)
  {
LABEL_747:
    if ((v295 & 0x40000000) == 0)
      goto LABEL_748;
    goto LABEL_804;
  }
LABEL_803:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedSubscribedTopicsScoreCoefficient, (_QWORD)v451);
  v434 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v434, CFSTR("topic_feed_subscribed_topics_score_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x40000000) == 0)
  {
LABEL_748:
    if ((v295 & 0x800000) == 0)
      goto LABEL_749;
    goto LABEL_805;
  }
LABEL_804:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithZeroSubscribed, (_QWORD)v451);
  v435 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v435, CFSTR("topic_feed_ctr_with_zero_subscribed"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x800000) == 0)
  {
LABEL_749:
    if ((v295 & 0x10000000) == 0)
      goto LABEL_750;
    goto LABEL_806;
  }
LABEL_805:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithOneSubscribed, (_QWORD)v451);
  v436 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v436, CFSTR("topic_feed_ctr_with_one_subscribed"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x10000000) == 0)
  {
LABEL_750:
    if ((v295 & 0x4000000) == 0)
      goto LABEL_751;
    goto LABEL_807;
  }
LABEL_806:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithTwoSubscribed, (_QWORD)v451);
  v437 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v437, CFSTR("topic_feed_ctr_with_two_subscribed"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x4000000) == 0)
  {
LABEL_751:
    if ((v295 & 0x2000) == 0)
      goto LABEL_752;
    goto LABEL_808;
  }
LABEL_807:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithThreeSubscribed, (_QWORD)v451);
  v438 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v438, CFSTR("topic_feed_ctr_with_three_subscribed"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x2000) == 0)
  {
LABEL_752:
    if ((v295 & 0x20000000) == 0)
      goto LABEL_753;
    goto LABEL_809;
  }
LABEL_808:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedAutofavoritedVoteCoefficient, (_QWORD)v451);
  v439 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v439, CFSTR("topic_feed_autofavorited_vote_coefficient"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x20000000) == 0)
  {
LABEL_753:
    if ((v295 & 0x400000) == 0)
      goto LABEL_754;
    goto LABEL_810;
  }
LABEL_809:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithZeroAutofavorited, (_QWORD)v451);
  v440 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v440, CFSTR("topic_feed_ctr_with_zero_autofavorited"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x400000) == 0)
  {
LABEL_754:
    if ((v295 & 0x8000000) == 0)
      goto LABEL_755;
    goto LABEL_811;
  }
LABEL_810:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithOneAutofavorited, (_QWORD)v451);
  v441 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v441, CFSTR("topic_feed_ctr_with_one_autofavorited"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x8000000) == 0)
  {
LABEL_755:
    if ((v295 & 0x2000000) == 0)
      goto LABEL_756;
    goto LABEL_812;
  }
LABEL_811:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithTwoAutofavorited, (_QWORD)v451);
  v442 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v442, CFSTR("topic_feed_ctr_with_two_autofavorited"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x2000000) == 0)
  {
LABEL_756:
    if ((v295 & 0x200000000) == 0)
      goto LABEL_757;
    goto LABEL_813;
  }
LABEL_812:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithThreeAutofavorited, (_QWORD)v451);
  v443 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v443, CFSTR("topic_feed_ctr_with_three_autofavorited"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x200000000) == 0)
  {
LABEL_757:
    if ((v295 & 0x400000000) == 0)
      goto LABEL_758;
    goto LABEL_814;
  }
LABEL_813:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedDiversificationInitialPenalty, (_QWORD)v451);
  v444 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v444, CFSTR("topic_feed_diversification_initial_penalty"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x400000000) == 0)
  {
LABEL_758:
    if ((v295 & 0x800000000) == 0)
      goto LABEL_759;
    goto LABEL_815;
  }
LABEL_814:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedDiversificationPenalty, (_QWORD)v451);
  v445 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v445, CFSTR("topic_feed_diversification_penalty"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x800000000) == 0)
  {
LABEL_759:
    if ((v295 & 0x8000) == 0)
      goto LABEL_760;
    goto LABEL_816;
  }
LABEL_815:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedDiversificationPenaltyHalfLife, (_QWORD)v451);
  v446 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v446, CFSTR("topic_feed_diversification_penalty_half_life"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x8000) == 0)
  {
LABEL_760:
    if ((v295 & 0x10000) == 0)
      goto LABEL_761;
    goto LABEL_817;
  }
LABEL_816:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedChannelTopicDiversificationInitialPenalty, (_QWORD)v451);
  v447 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v447, CFSTR("topic_feed_channel_topic_diversification_initial_penalty"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x10000) == 0)
  {
LABEL_761:
    if ((v295 & 0x20000) == 0)
      goto LABEL_762;
    goto LABEL_818;
  }
LABEL_817:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedChannelTopicDiversificationPenalty, (_QWORD)v451);
  v448 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v448, CFSTR("topic_feed_channel_topic_diversification_penalty"));

  v295 = *((_QWORD *)&self->_has + 4);
  v393 = *(_QWORD *)p_has;
  if ((v295 & 0x20000) == 0)
  {
LABEL_762:
    if ((v393 & 0x8000000000000) == 0)
      goto LABEL_763;
LABEL_819:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_ctrWithSubscribedChannel, (_QWORD)v451);
    v450 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v450, CFSTR("ctr_with_subscribed_channel"));

    if ((*((_QWORD *)&self->_has + 4) & 0x1000000) == 0)
      goto LABEL_765;
    goto LABEL_764;
  }
LABEL_818:
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedChannelTopicDiversificationPenaltyHalfLife, (_QWORD)v451);
  v449 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v449, CFSTR("topic_feed_channel_topic_diversification_penalty_half_life"));

  v295 = *((_QWORD *)&self->_has + 4);
  if ((*(_QWORD *)p_has & 0x8000000000000) != 0)
    goto LABEL_819;
LABEL_763:
  if ((v295 & 0x1000000) != 0)
  {
LABEL_764:
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", self->_topicFeedCtrWithSubscribedChannel, (_QWORD)v451);
    v394 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v394, CFSTR("topic_feed_ctr_with_subscribed_channel"));

  }
LABEL_765:
  v395 = v3;

  return v395;
}

- (BOOL)readFrom:(id)a3
{
  return NTPBPersonalizationTreatmentReadFrom((uint64_t)self, (uint64_t)a3);
}

- (void)writeTo:(id)a3
{
  id v4;
  $92685FB1F0322ABB262316FA35568CC1 *p_has;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  NSMutableArray *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  NSMutableArray *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t j;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  _BYTE v59[128];
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  p_has = &self->_has;
  v6 = *((_QWORD *)&self->_has + 4);
  if ((v6 & 0x8000000000000) != 0)
  {
    PBDataWriterWriteInt64Field();
    v6 = *((_QWORD *)&self->_has + 4);
  }
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x2000000000000000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v6 = *((_QWORD *)&self->_has + 4);
    v7 = *((_QWORD *)&self->_has + 5);
    v9 = *((_QWORD *)&self->_has + 2);
    v8 = *((_QWORD *)&self->_has + 3);
    v11 = *(_QWORD *)p_has;
    v10 = *((_QWORD *)&self->_has + 1);
    v12 = *((_WORD *)&self->_has + 24);
    if ((*(_QWORD *)p_has & 0x2000000000) == 0)
    {
LABEL_5:
      if ((v11 & 0x4000000000) == 0)
        goto LABEL_6;
      goto LABEL_107;
    }
  }
  else if ((v11 & 0x2000000000) == 0)
  {
    goto LABEL_5;
  }
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000) == 0)
  {
LABEL_6:
    if ((v10 & 0x20000) == 0)
      goto LABEL_7;
    goto LABEL_108;
  }
LABEL_107:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000) == 0)
  {
LABEL_7:
    if ((v12 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_109;
  }
LABEL_108:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v12 & 0x40) == 0)
  {
LABEL_8:
    if ((v10 & 0x800000) == 0)
      goto LABEL_9;
    goto LABEL_110;
  }
LABEL_109:
  PBDataWriterWriteBOOLField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800000) == 0)
  {
LABEL_9:
    if ((v8 & 0x20000000000000) == 0)
      goto LABEL_10;
    goto LABEL_111;
  }
LABEL_110:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000000000) == 0)
  {
LABEL_10:
    if ((v9 & 0x40000000000) == 0)
      goto LABEL_11;
    goto LABEL_112;
  }
LABEL_111:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x40000000000) == 0)
  {
LABEL_11:
    if ((v10 & 0x1000000) == 0)
      goto LABEL_12;
    goto LABEL_113;
  }
LABEL_112:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_12:
    if ((v8 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_114;
  }
LABEL_113:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10) == 0)
  {
LABEL_13:
    if ((v9 & 0x400000000000000) == 0)
      goto LABEL_14;
    goto LABEL_115;
  }
LABEL_114:
  PBDataWriterWriteInt64Field();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x400000000000000) == 0)
  {
LABEL_14:
    if ((v10 & 0x10000000000) == 0)
      goto LABEL_15;
    goto LABEL_116;
  }
LABEL_115:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000000000) == 0)
  {
LABEL_15:
    if ((v10 & 0x1000000000000000) == 0)
      goto LABEL_16;
    goto LABEL_117;
  }
LABEL_116:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000000000000) == 0)
  {
LABEL_16:
    if ((v8 & 0x10000000000) == 0)
      goto LABEL_17;
    goto LABEL_118;
  }
LABEL_117:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_18;
    goto LABEL_119;
  }
LABEL_118:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_18:
    if ((v8 & 0x200000000000) == 0)
      goto LABEL_19;
    goto LABEL_120;
  }
LABEL_119:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x200000000000) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_121;
  }
LABEL_120:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v7 & 0x2000000) == 0)
      goto LABEL_21;
    goto LABEL_122;
  }
LABEL_121:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800000000000000) == 0)
      goto LABEL_22;
    goto LABEL_123;
  }
LABEL_122:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x800000000000000) == 0)
  {
LABEL_22:
    if ((v7 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_124;
  }
LABEL_123:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x200000) == 0)
  {
LABEL_23:
    if ((v10 & 2) == 0)
      goto LABEL_24;
    goto LABEL_125;
  }
LABEL_124:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 2) == 0)
  {
LABEL_24:
    if ((v9 & 0x100000000000000) == 0)
      goto LABEL_25;
    goto LABEL_126;
  }
LABEL_125:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x100000000000000) == 0)
  {
LABEL_25:
    if ((v10 & 0x4000000000) == 0)
      goto LABEL_26;
    goto LABEL_127;
  }
LABEL_126:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x4000000000) == 0)
  {
LABEL_26:
    if ((v10 & 0x400000000000000) == 0)
      goto LABEL_27;
    goto LABEL_128;
  }
LABEL_127:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400000000000000) == 0)
  {
LABEL_27:
    if ((v8 & 0x4000000000) == 0)
      goto LABEL_28;
    goto LABEL_129;
  }
LABEL_128:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_130;
  }
LABEL_129:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v8 & 0x80000000000) == 0)
      goto LABEL_30;
    goto LABEL_131;
  }
LABEL_130:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x80000000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x200) == 0)
      goto LABEL_31;
    goto LABEL_132;
  }
LABEL_131:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x200) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000) == 0)
      goto LABEL_32;
    goto LABEL_133;
  }
LABEL_132:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x800000) == 0)
  {
LABEL_32:
    if ((v6 & 0x200000000000000) == 0)
      goto LABEL_33;
    goto LABEL_134;
  }
LABEL_133:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x200000000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x80000) == 0)
      goto LABEL_34;
    goto LABEL_135;
  }
LABEL_134:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x80000) == 0)
  {
LABEL_34:
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_35;
    goto LABEL_136;
  }
LABEL_135:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v10 & 0x10000000000000) == 0)
      goto LABEL_36;
    goto LABEL_137;
  }
LABEL_136:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000000000000) == 0)
  {
LABEL_36:
    if ((v10 & 0x40000000000000) == 0)
      goto LABEL_37;
    goto LABEL_138;
  }
LABEL_137:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000000000000) == 0)
  {
LABEL_37:
    if ((v10 & 0x2000000000000) == 0)
      goto LABEL_38;
    goto LABEL_139;
  }
LABEL_138:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v11 = *(_QWORD *)p_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000000) == 0)
  {
LABEL_38:
    if ((v11 & 0x4000000000000000) == 0)
      goto LABEL_39;
    goto LABEL_140;
  }
LABEL_139:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000000000) == 0)
  {
LABEL_39:
    if ((v8 & 0x40000000000) == 0)
      goto LABEL_40;
    goto LABEL_141;
  }
LABEL_140:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x40000000000) == 0)
  {
LABEL_40:
    if ((v10 & 0x40000) == 0)
      goto LABEL_41;
    goto LABEL_142;
  }
LABEL_141:
  PBDataWriterWriteInt64Field();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000) == 0)
  {
LABEL_41:
    if ((v10 & 0x200000) == 0)
      goto LABEL_42;
    goto LABEL_143;
  }
LABEL_142:
  PBDataWriterWriteInt64Field();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x200000) == 0)
  {
LABEL_42:
    if ((v10 & 0x2000000000) == 0)
      goto LABEL_43;
    goto LABEL_144;
  }
LABEL_143:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000) == 0)
  {
LABEL_43:
    if ((v10 & 0x10) == 0)
      goto LABEL_44;
    goto LABEL_145;
  }
LABEL_144:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10) == 0)
  {
LABEL_44:
    if ((v10 & 0x40000000000) == 0)
      goto LABEL_45;
    goto LABEL_146;
  }
LABEL_145:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v8 & 0x8000000000000) == 0)
      goto LABEL_46;
    goto LABEL_147;
  }
LABEL_146:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000000000) == 0)
  {
LABEL_46:
    if ((v8 & 0x2000000000000) == 0)
      goto LABEL_47;
    goto LABEL_148;
  }
LABEL_147:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x2000000000000) == 0)
  {
LABEL_47:
    if ((v10 & 0x20000000000000) == 0)
      goto LABEL_48;
    goto LABEL_149;
  }
LABEL_148:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000000000000) == 0)
  {
LABEL_48:
    if ((v10 & 0x10000) == 0)
      goto LABEL_49;
    goto LABEL_150;
  }
LABEL_149:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x10000) == 0)
  {
LABEL_49:
    if ((v10 & 0x100000) == 0)
      goto LABEL_50;
    goto LABEL_151;
  }
LABEL_150:
  PBDataWriterWriteInt64Field();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x100000) == 0)
  {
LABEL_50:
    if ((v10 & 0x80000) == 0)
      goto LABEL_51;
    goto LABEL_152;
  }
LABEL_151:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x80000) == 0)
  {
LABEL_51:
    if ((v10 & 0x400000) == 0)
      goto LABEL_52;
    goto LABEL_153;
  }
LABEL_152:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400000) == 0)
  {
LABEL_52:
    if ((v9 & 0x800000000000000) == 0)
      goto LABEL_53;
    goto LABEL_154;
  }
LABEL_153:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x800000000000000) == 0)
  {
LABEL_53:
    if ((v10 & 0x20000000000) == 0)
      goto LABEL_54;
    goto LABEL_155;
  }
LABEL_154:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x20000000000) == 0)
  {
LABEL_54:
    if ((v10 & 0x2000000000000000) == 0)
      goto LABEL_55;
    goto LABEL_156;
  }
LABEL_155:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000000000000000) == 0)
  {
LABEL_55:
    if ((v8 & 0x20000000000) == 0)
      goto LABEL_56;
    goto LABEL_157;
  }
LABEL_156:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v8 & 0x40000000) == 0)
      goto LABEL_57;
    goto LABEL_158;
  }
LABEL_157:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v8 & 0x400000000000) == 0)
      goto LABEL_58;
    goto LABEL_159;
  }
LABEL_158:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x400000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_160;
  }
LABEL_159:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x1000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_161;
  }
LABEL_160:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000000000000) == 0)
      goto LABEL_61;
    goto LABEL_162;
  }
LABEL_161:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x400000) == 0)
      goto LABEL_62;
    goto LABEL_163;
  }
LABEL_162:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x400000) == 0)
  {
LABEL_62:
    if ((v10 & 4) == 0)
      goto LABEL_63;
    goto LABEL_164;
  }
LABEL_163:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 4) == 0)
  {
LABEL_63:
    if ((v8 & 0x10000000000000) == 0)
      goto LABEL_64;
    goto LABEL_165;
  }
LABEL_164:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000000000) == 0)
  {
LABEL_64:
    if ((v9 & 0x200000000000000) == 0)
      goto LABEL_65;
    goto LABEL_166;
  }
LABEL_165:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x200000000000000) == 0)
  {
LABEL_65:
    if ((v10 & 0x8000000000) == 0)
      goto LABEL_66;
    goto LABEL_167;
  }
LABEL_166:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v10 & 0x800000000000000) == 0)
      goto LABEL_67;
    goto LABEL_168;
  }
LABEL_167:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800000000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x8000000000) == 0)
      goto LABEL_68;
    goto LABEL_169;
  }
LABEL_168:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x8000000000) == 0)
  {
LABEL_68:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_69;
    goto LABEL_170;
  }
LABEL_169:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_69:
    if ((v8 & 0x100000000000) == 0)
      goto LABEL_70;
    goto LABEL_171;
  }
LABEL_170:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x400) == 0)
      goto LABEL_71;
    goto LABEL_172;
  }
LABEL_171:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v6 & 0x400) == 0)
  {
LABEL_71:
    if ((v7 & 0x1000000) == 0)
      goto LABEL_72;
    goto LABEL_173;
  }
LABEL_172:
  PBDataWriterWriteDoubleField();
  v6 = *((_QWORD *)&self->_has + 4);
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x400000000000000) == 0)
      goto LABEL_73;
    goto LABEL_174;
  }
LABEL_173:
  PBDataWriterWriteDoubleField();
  v7 = *((_QWORD *)&self->_has + 5);
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x400000000000000) == 0)
  {
LABEL_73:
    if ((v7 & 0x100000) == 0)
      goto LABEL_74;
    goto LABEL_175;
  }
LABEL_174:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x100000) == 0)
  {
LABEL_74:
    if ((v10 & 1) == 0)
      goto LABEL_75;
    goto LABEL_176;
  }
LABEL_175:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 1) == 0)
  {
LABEL_75:
    if ((v8 & 0x4000000000000) == 0)
      goto LABEL_76;
    goto LABEL_177;
  }
LABEL_176:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v10 & 0x100) == 0)
      goto LABEL_77;
    goto LABEL_178;
  }
LABEL_177:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x100) == 0)
  {
LABEL_77:
    if ((v10 & 0x40) == 0)
      goto LABEL_78;
    goto LABEL_179;
  }
LABEL_178:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40) == 0)
  {
LABEL_78:
    if ((v10 & 0x200) == 0)
      goto LABEL_79;
    goto LABEL_180;
  }
LABEL_179:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x200) == 0)
  {
LABEL_79:
    if ((v10 & 0x80) == 0)
      goto LABEL_80;
    goto LABEL_181;
  }
LABEL_180:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x80) == 0)
  {
LABEL_80:
    if ((v10 & 0x1000) == 0)
      goto LABEL_81;
    goto LABEL_182;
  }
LABEL_181:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000) == 0)
  {
LABEL_81:
    if ((v10 & 0x400) == 0)
      goto LABEL_82;
    goto LABEL_183;
  }
LABEL_182:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400) == 0)
  {
LABEL_82:
    if ((v10 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_184;
  }
LABEL_183:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x2000) == 0)
  {
LABEL_83:
    if ((v10 & 0x800) == 0)
      goto LABEL_84;
    goto LABEL_185;
  }
LABEL_184:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800) == 0)
  {
LABEL_84:
    if ((v10 & 0x8000000) == 0)
      goto LABEL_85;
    goto LABEL_186;
  }
LABEL_185:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_85:
    if ((v10 & 0x4000000000000) == 0)
      goto LABEL_86;
    goto LABEL_187;
  }
LABEL_186:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x4000000000000) == 0)
  {
LABEL_86:
    if ((v10 & 0x1000000000000) == 0)
      goto LABEL_87;
    goto LABEL_188;
  }
LABEL_187:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x1000000000000) == 0)
  {
LABEL_87:
    if ((v8 & 0x4000000) == 0)
      goto LABEL_88;
    goto LABEL_189;
  }
LABEL_188:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_88:
    if ((v9 & 0x4000000000000000) == 0)
      goto LABEL_89;
    goto LABEL_190;
  }
LABEL_189:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  v12 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x4000000000000000) == 0)
  {
LABEL_89:
    if ((v12 & 0x200) == 0)
      goto LABEL_90;
    goto LABEL_191;
  }
LABEL_190:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 0x200) == 0)
  {
LABEL_90:
    if ((v10 & 0x400000000000) == 0)
      goto LABEL_91;
    goto LABEL_192;
  }
LABEL_191:
  PBDataWriterWriteBOOLField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((v10 & 0x400000000000) == 0)
  {
LABEL_91:
    if ((v10 & 0x800000000000) == 0)
      goto LABEL_92;
    goto LABEL_193;
  }
LABEL_192:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v10 = *((_QWORD *)&self->_has + 1);
  if ((v10 & 0x800000000000) == 0)
  {
LABEL_92:
    if ((v10 & 0x8000000000000) == 0)
      goto LABEL_93;
    goto LABEL_194;
  }
LABEL_193:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v8 & 0x2000) == 0)
      goto LABEL_94;
    goto LABEL_195;
  }
LABEL_194:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x2000) == 0)
  {
LABEL_94:
    if ((v8 & 0x800) == 0)
      goto LABEL_95;
    goto LABEL_196;
  }
LABEL_195:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x800) == 0)
  {
LABEL_95:
    if ((v8 & 0x200) == 0)
      goto LABEL_96;
    goto LABEL_197;
  }
LABEL_196:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x200) == 0)
  {
LABEL_96:
    if ((v8 & 0x80) == 0)
      goto LABEL_97;
    goto LABEL_198;
  }
LABEL_197:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x80) == 0)
  {
LABEL_97:
    if ((v8 & 0x4000) == 0)
      goto LABEL_98;
    goto LABEL_199;
  }
LABEL_198:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x4000) == 0)
  {
LABEL_98:
    if ((v8 & 0x1000) == 0)
      goto LABEL_99;
    goto LABEL_200;
  }
LABEL_199:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x1000) == 0)
  {
LABEL_99:
    if ((v8 & 0x400) == 0)
      goto LABEL_100;
    goto LABEL_201;
  }
LABEL_200:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  if ((v8 & 0x400) == 0)
  {
LABEL_100:
    if ((v8 & 0x100) == 0)
      goto LABEL_101;
    goto LABEL_202;
  }
LABEL_201:
  PBDataWriterWriteDoubleField();
  v9 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 3) & 0x100) == 0)
  {
LABEL_101:
    if ((v9 & 0x40000000000000) == 0)
      goto LABEL_103;
    goto LABEL_102;
  }
LABEL_202:
  PBDataWriterWriteDoubleField();
  if ((*((_QWORD *)&self->_has + 2) & 0x40000000000000) != 0)
LABEL_102:
    PBDataWriterWriteDoubleField();
LABEL_103:
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v13 & 0x10000000000000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v14 = *((_QWORD *)&self->_has + 4);
    v15 = *((_QWORD *)&self->_has + 5);
    v13 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v14 = *((_QWORD *)&self->_has + 4);
    v15 = *((_QWORD *)&self->_has + 5);
  }
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x80000000000000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v14 = *((_QWORD *)&self->_has + 4);
    v15 = *((_QWORD *)&self->_has + 5);
    v13 = *((_QWORD *)&self->_has + 2);
    v16 = *((_QWORD *)&self->_has + 3);
    v18 = *(_QWORD *)p_has;
    v17 = *((_QWORD *)&self->_has + 1);
    v19 = *((_WORD *)&self->_has + 24);
    if ((v13 & 0x20000000000000) == 0)
    {
LABEL_207:
      if ((v17 & 0x4000000000000000) == 0)
        goto LABEL_208;
      goto LABEL_309;
    }
  }
  else if ((v13 & 0x20000000000000) == 0)
  {
    goto LABEL_207;
  }
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x4000000000000000) == 0)
  {
LABEL_208:
    if ((v13 & 0x400) == 0)
      goto LABEL_209;
    goto LABEL_310;
  }
LABEL_309:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x400) == 0)
  {
LABEL_209:
    if ((v13 & 4) == 0)
      goto LABEL_210;
    goto LABEL_311;
  }
LABEL_310:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 4) == 0)
  {
LABEL_210:
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_211;
    goto LABEL_312;
  }
LABEL_311:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x8000000000000000) == 0)
  {
LABEL_211:
    if ((v17 & 0x80000000000) == 0)
      goto LABEL_212;
    goto LABEL_313;
  }
LABEL_312:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x80000000000) == 0)
  {
LABEL_212:
    if ((v16 & 0x400000000) == 0)
      goto LABEL_213;
    goto LABEL_314;
  }
LABEL_313:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000) == 0)
  {
LABEL_213:
    if ((v16 & 0x80000000) == 0)
      goto LABEL_214;
    goto LABEL_315;
  }
LABEL_314:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x80000000) == 0)
  {
LABEL_214:
    if ((v16 & 0x2000000000) == 0)
      goto LABEL_215;
    goto LABEL_316;
  }
LABEL_315:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x2000000000) == 0)
  {
LABEL_215:
    if ((v19 & 2) == 0)
      goto LABEL_216;
    goto LABEL_317;
  }
LABEL_316:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 2) == 0)
  {
LABEL_216:
    if ((v15 & 0x400000000000000) == 0)
      goto LABEL_217;
    goto LABEL_318;
  }
LABEL_317:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x400000000000000) == 0)
  {
LABEL_217:
    if ((v15 & 0x20000000000) == 0)
      goto LABEL_218;
    goto LABEL_319;
  }
LABEL_318:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x20000000000) == 0)
  {
LABEL_218:
    if ((v15 & 0x4000000000) == 0)
      goto LABEL_219;
    goto LABEL_320;
  }
LABEL_319:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x4000000000) == 0)
  {
LABEL_219:
    if ((v15 & 0x10000000000000) == 0)
      goto LABEL_220;
    goto LABEL_321;
  }
LABEL_320:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x10000000000000) == 0)
  {
LABEL_220:
    if ((v15 & 0x100000000000) == 0)
      goto LABEL_221;
    goto LABEL_322;
  }
LABEL_321:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x100000000000) == 0)
  {
LABEL_221:
    if ((v15 & 0x100000000000000) == 0)
      goto LABEL_222;
    goto LABEL_323;
  }
LABEL_322:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x100000000000000) == 0)
  {
LABEL_222:
    if ((v15 & 0x1000000000000) == 0)
      goto LABEL_223;
    goto LABEL_324;
  }
LABEL_323:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x1000000000000) == 0)
  {
LABEL_223:
    if ((v15 & 0x4000000000000) == 0)
      goto LABEL_224;
    goto LABEL_325;
  }
LABEL_324:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x4000000000000) == 0)
  {
LABEL_224:
    if ((v15 & 0x40000000000) == 0)
      goto LABEL_225;
    goto LABEL_326;
  }
LABEL_325:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x40000000000) == 0)
  {
LABEL_225:
    if ((v15 & 0x40000000000000) == 0)
      goto LABEL_226;
    goto LABEL_327;
  }
LABEL_326:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x40000000000000) == 0)
  {
LABEL_226:
    if ((v15 & 0x400000000000) == 0)
      goto LABEL_227;
    goto LABEL_328;
  }
LABEL_327:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x400000000000) == 0)
  {
LABEL_227:
    if ((v13 & 2) == 0)
      goto LABEL_228;
    goto LABEL_329;
  }
LABEL_328:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 2) == 0)
  {
LABEL_228:
    if ((v13 & 1) == 0)
      goto LABEL_229;
    goto LABEL_330;
  }
LABEL_329:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 1) == 0)
  {
LABEL_229:
    if ((v17 & 0x200000000000) == 0)
      goto LABEL_230;
    goto LABEL_331;
  }
LABEL_330:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x200000000000) == 0)
  {
LABEL_230:
    if ((v17 & 0x100000000000) == 0)
      goto LABEL_231;
    goto LABEL_332;
  }
LABEL_331:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x100000000000) == 0)
  {
LABEL_231:
    if ((v16 & 0x1000000000) == 0)
      goto LABEL_232;
    goto LABEL_333;
  }
LABEL_332:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000) == 0)
  {
LABEL_232:
    if ((v16 & 0x800000000) == 0)
      goto LABEL_233;
    goto LABEL_334;
  }
LABEL_333:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x800000000) == 0)
  {
LABEL_233:
    if ((v16 & 0x200000000) == 0)
      goto LABEL_234;
    goto LABEL_335;
  }
LABEL_334:
  PBDataWriterWriteInt64Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x200000000) == 0)
  {
LABEL_234:
    if ((v16 & 0x100000000) == 0)
      goto LABEL_235;
    goto LABEL_336;
  }
LABEL_335:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000) == 0)
  {
LABEL_235:
    if ((v15 & 0x10000000000) == 0)
      goto LABEL_236;
    goto LABEL_337;
  }
LABEL_336:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x10000000000) == 0)
  {
LABEL_236:
    if ((v15 & 0x8000000000) == 0)
      goto LABEL_237;
    goto LABEL_338;
  }
LABEL_337:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x8000000000) == 0)
  {
LABEL_237:
    if ((v14 & 0x40) == 0)
      goto LABEL_238;
    goto LABEL_339;
  }
LABEL_338:
  PBDataWriterWriteInt32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x40) == 0)
  {
LABEL_238:
    if ((v14 & 0x20) == 0)
      goto LABEL_239;
    goto LABEL_340;
  }
LABEL_339:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x20) == 0)
  {
LABEL_239:
    if ((v14 & 4) == 0)
      goto LABEL_240;
    goto LABEL_341;
  }
LABEL_340:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 4) == 0)
  {
LABEL_240:
    if ((v14 & 2) == 0)
      goto LABEL_241;
    goto LABEL_342;
  }
LABEL_341:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 2) == 0)
  {
LABEL_241:
    if ((v13 & 0x40000) == 0)
      goto LABEL_242;
    goto LABEL_343;
  }
LABEL_342:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x40000) == 0)
  {
LABEL_242:
    if ((v13 & 0x20000) == 0)
      goto LABEL_243;
    goto LABEL_344;
  }
LABEL_343:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x20000) == 0)
  {
LABEL_243:
    if ((v13 & 0x100000) == 0)
      goto LABEL_244;
    goto LABEL_345;
  }
LABEL_344:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x100000) == 0)
  {
LABEL_244:
    if ((v13 & 0x80000) == 0)
      goto LABEL_245;
    goto LABEL_346;
  }
LABEL_345:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x80000) == 0)
  {
LABEL_245:
    if ((v16 & 0x1000000000000000) == 0)
      goto LABEL_246;
    goto LABEL_347;
  }
LABEL_346:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000000000) == 0)
  {
LABEL_246:
    if ((v13 & 0x4000) == 0)
      goto LABEL_247;
    goto LABEL_348;
  }
LABEL_347:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x4000) == 0)
  {
LABEL_247:
    if ((v13 & 0x2000) == 0)
      goto LABEL_248;
    goto LABEL_349;
  }
LABEL_348:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x2000) == 0)
  {
LABEL_248:
    if ((v15 & 0x80000000) == 0)
      goto LABEL_249;
    goto LABEL_350;
  }
LABEL_349:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_249:
    if ((v15 & 0x40000000) == 0)
      goto LABEL_250;
    goto LABEL_351;
  }
LABEL_350:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x40000000) == 0)
  {
LABEL_250:
    if ((v15 & 0x200000000) == 0)
      goto LABEL_251;
    goto LABEL_352;
  }
LABEL_351:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x200000000) == 0)
  {
LABEL_251:
    if ((v15 & 0x100000000) == 0)
      goto LABEL_252;
    goto LABEL_353;
  }
LABEL_352:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x100000000) == 0)
  {
LABEL_252:
    if ((v15 & 0x20000000) == 0)
      goto LABEL_253;
    goto LABEL_354;
  }
LABEL_353:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x20000000) == 0)
  {
LABEL_253:
    if ((v15 & 0x10000000) == 0)
      goto LABEL_254;
    goto LABEL_355;
  }
LABEL_354:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x10000000) == 0)
  {
LABEL_254:
    if ((v19 & 4) == 0)
      goto LABEL_255;
    goto LABEL_356;
  }
LABEL_355:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 4) == 0)
  {
LABEL_255:
    if ((v13 & 0x20000000000) == 0)
      goto LABEL_256;
    goto LABEL_357;
  }
LABEL_356:
  PBDataWriterWriteBOOLField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x20000000000) == 0)
  {
LABEL_256:
    if ((v13 & 0x10000) == 0)
      goto LABEL_257;
    goto LABEL_358;
  }
LABEL_357:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x10000) == 0)
  {
LABEL_257:
    if ((v13 & 0x8000) == 0)
      goto LABEL_258;
    goto LABEL_359;
  }
LABEL_358:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x8000) == 0)
  {
LABEL_258:
    if ((v17 & 0x80000000) == 0)
      goto LABEL_259;
    goto LABEL_360;
  }
LABEL_359:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x80000000) == 0)
  {
LABEL_259:
    if ((v17 & 0x100000000) == 0)
      goto LABEL_260;
    goto LABEL_361;
  }
LABEL_360:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x100000000) == 0)
  {
LABEL_260:
    if ((v17 & 0x200000000) == 0)
      goto LABEL_261;
    goto LABEL_362;
  }
LABEL_361:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x200000000) == 0)
  {
LABEL_261:
    if ((v17 & 0x400000000) == 0)
      goto LABEL_262;
    goto LABEL_363;
  }
LABEL_362:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x400000000) == 0)
  {
LABEL_262:
    if ((v17 & 0x800000000) == 0)
      goto LABEL_263;
    goto LABEL_364;
  }
LABEL_363:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x800000000) == 0)
  {
LABEL_263:
    if ((v17 & 0x1000000000) == 0)
      goto LABEL_264;
    goto LABEL_365;
  }
LABEL_364:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x1000000000) == 0)
  {
LABEL_264:
    if ((v15 & 0x400000000) == 0)
      goto LABEL_265;
    goto LABEL_366;
  }
LABEL_365:
  PBDataWriterWriteDoubleField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x400000000) == 0)
  {
LABEL_265:
    if ((v15 & 0x800000000) == 0)
      goto LABEL_266;
    goto LABEL_367;
  }
LABEL_366:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x800000000) == 0)
  {
LABEL_266:
    if ((v15 & 0x1000000000) == 0)
      goto LABEL_267;
    goto LABEL_368;
  }
LABEL_367:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x1000000000) == 0)
  {
LABEL_267:
    if ((v15 & 0x2000000000) == 0)
      goto LABEL_268;
    goto LABEL_369;
  }
LABEL_368:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x2000000000) == 0)
  {
LABEL_268:
    if ((v19 & 0x80) == 0)
      goto LABEL_269;
    goto LABEL_370;
  }
LABEL_369:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 0x80) == 0)
  {
LABEL_269:
    if ((v19 & 0x100) == 0)
      goto LABEL_270;
    goto LABEL_371;
  }
LABEL_370:
  PBDataWriterWriteBOOLField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 0x100) == 0)
  {
LABEL_270:
    if ((v19 & 0x10) == 0)
      goto LABEL_271;
    goto LABEL_372;
  }
LABEL_371:
  PBDataWriterWriteBOOLField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 0x10) == 0)
  {
LABEL_271:
    if ((v19 & 8) == 0)
      goto LABEL_272;
    goto LABEL_373;
  }
LABEL_372:
  PBDataWriterWriteBOOLField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v19 & 8) == 0)
  {
LABEL_272:
    if ((v15 & 0x4000000000000000) == 0)
      goto LABEL_273;
    goto LABEL_374;
  }
LABEL_373:
  PBDataWriterWriteBOOLField();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x4000000000000000) == 0)
  {
LABEL_273:
    if ((v15 & 0x2000000000000000) == 0)
      goto LABEL_274;
    goto LABEL_375;
  }
LABEL_374:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x2000000000000000) == 0)
  {
LABEL_274:
    if ((v15 & 0x1000000000000000) == 0)
      goto LABEL_275;
    goto LABEL_376;
  }
LABEL_375:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v15 = *((_QWORD *)&self->_has + 5);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x1000000000000000) == 0)
  {
LABEL_275:
    if ((v15 & 0x800000000000000) == 0)
      goto LABEL_276;
    goto LABEL_377;
  }
LABEL_376:
  PBDataWriterWriteUint32Field();
  v14 = *((_QWORD *)&self->_has + 4);
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v18 = *(_QWORD *)p_has;
  v17 = *((_QWORD *)&self->_has + 1);
  v19 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000000) == 0)
  {
LABEL_276:
    if ((v14 & 0x2000000000000000) == 0)
      goto LABEL_277;
    goto LABEL_378;
  }
LABEL_377:
  PBDataWriterWriteUint32Field();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x2000000000000000) == 0)
  {
LABEL_277:
    if ((v14 & 0x4000000000000000) == 0)
      goto LABEL_278;
    goto LABEL_379;
  }
LABEL_378:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  v19 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x4000000000000000) == 0)
  {
LABEL_278:
    if ((v19 & 0x800) == 0)
      goto LABEL_279;
    goto LABEL_380;
  }
LABEL_379:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((*((_WORD *)&self->_has + 24) & 0x800) == 0)
  {
LABEL_279:
    if ((v14 & 0x10) == 0)
      goto LABEL_280;
    goto LABEL_381;
  }
LABEL_380:
  PBDataWriterWriteBOOLField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v14 & 0x10) == 0)
  {
LABEL_280:
    if ((v14 & 8) == 0)
      goto LABEL_281;
    goto LABEL_382;
  }
LABEL_381:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v14 & 8) == 0)
  {
LABEL_281:
    if ((v16 & 0x200000000000000) == 0)
      goto LABEL_282;
    goto LABEL_383;
  }
LABEL_382:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v16 & 0x200000000000000) == 0)
  {
LABEL_282:
    if ((v16 & 0x100000000000000) == 0)
      goto LABEL_283;
    goto LABEL_384;
  }
LABEL_383:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v16 & 0x100000000000000) == 0)
  {
LABEL_283:
    if ((v16 & 0x4000000000000000) == 0)
      goto LABEL_284;
    goto LABEL_385;
  }
LABEL_384:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v16 & 0x4000000000000000) == 0)
  {
LABEL_284:
    if ((v16 & 0x2000000000000000) == 0)
      goto LABEL_285;
    goto LABEL_386;
  }
LABEL_385:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((v16 & 0x2000000000000000) == 0)
  {
LABEL_285:
    if ((v18 & 0x4000) == 0)
      goto LABEL_286;
    goto LABEL_387;
  }
LABEL_386:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  v18 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x4000) == 0)
  {
LABEL_286:
    if ((v18 & 0x2000) == 0)
      goto LABEL_287;
    goto LABEL_388;
  }
LABEL_387:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)p_has & 0x2000) == 0)
  {
LABEL_287:
    if ((v13 & 0x800000) == 0)
      goto LABEL_288;
    goto LABEL_389;
  }
LABEL_388:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v13 & 0x800000) == 0)
  {
LABEL_288:
    if ((v14 & 0x80000000000000) == 0)
      goto LABEL_289;
    goto LABEL_390;
  }
LABEL_389:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x80000000000000) == 0)
  {
LABEL_289:
    if ((v13 & 0x200000) == 0)
      goto LABEL_290;
    goto LABEL_391;
  }
LABEL_390:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v13 & 0x200000) == 0)
  {
LABEL_290:
    if ((v14 & 0x20000000000000) == 0)
      goto LABEL_291;
    goto LABEL_392;
  }
LABEL_391:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x20000000000000) == 0)
  {
LABEL_291:
    if ((v13 & 0x1000000) == 0)
      goto LABEL_292;
    goto LABEL_393;
  }
LABEL_392:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v13 & 0x1000000) == 0)
  {
LABEL_292:
    if ((v14 & 0x100000000000000) == 0)
      goto LABEL_293;
    goto LABEL_394;
  }
LABEL_393:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x100000000000000) == 0)
  {
LABEL_293:
    if ((v13 & 0x400000) == 0)
      goto LABEL_294;
    goto LABEL_395;
  }
LABEL_394:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v14 = *((_QWORD *)&self->_has + 4);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((v13 & 0x400000) == 0)
  {
LABEL_294:
    if ((v14 & 0x40000000000000) == 0)
      goto LABEL_295;
    goto LABEL_396;
  }
LABEL_395:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v17 = *((_QWORD *)&self->_has + 1);
  v13 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 4) & 0x40000000000000) == 0)
  {
LABEL_295:
    if ((v16 & 0x2000000) == 0)
      goto LABEL_296;
    goto LABEL_397;
  }
LABEL_396:
  PBDataWriterWriteDoubleField();
  v13 = *((_QWORD *)&self->_has + 2);
  v16 = *((_QWORD *)&self->_has + 3);
  v17 = *((_QWORD *)&self->_has + 1);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_296:
    if ((v13 & 0x2000000) == 0)
      goto LABEL_297;
    goto LABEL_398;
  }
LABEL_397:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  v17 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 2) & 0x2000000) == 0)
  {
LABEL_297:
    if ((v17 & 0x80000000000000) == 0)
      goto LABEL_298;
    goto LABEL_399;
  }
LABEL_398:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x80000000000000) == 0)
  {
LABEL_298:
    if ((v16 & 8) == 0)
      goto LABEL_299;
    goto LABEL_400;
  }
LABEL_399:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((v16 & 8) == 0)
  {
LABEL_299:
    if ((v16 & 4) == 0)
      goto LABEL_300;
    goto LABEL_401;
  }
LABEL_400:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((v16 & 4) == 0)
  {
LABEL_300:
    if ((v16 & 1) == 0)
      goto LABEL_301;
    goto LABEL_402;
  }
LABEL_401:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((v16 & 1) == 0)
  {
LABEL_301:
    if ((v16 & 2) == 0)
      goto LABEL_302;
    goto LABEL_403;
  }
LABEL_402:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((v16 & 2) == 0)
  {
LABEL_302:
    if ((v16 & 0x400000) == 0)
      goto LABEL_303;
    goto LABEL_404;
  }
LABEL_403:
  PBDataWriterWriteDoubleField();
  v16 = *((_QWORD *)&self->_has + 3);
  if ((v16 & 0x400000) == 0)
  {
LABEL_303:
    if ((v16 & 0x1000000) == 0)
      goto LABEL_305;
    goto LABEL_304;
  }
LABEL_404:
  PBDataWriterWriteDoubleField();
  if ((*((_QWORD *)&self->_has + 3) & 0x1000000) != 0)
LABEL_304:
    PBDataWriterWriteDoubleField();
LABEL_305:
  v20 = *((_QWORD *)&self->_has + 3);
  if ((v20 & 0x100000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v21 = *((_QWORD *)&self->_has + 4);
    v22 = *((_QWORD *)&self->_has + 5);
    v20 = *((_QWORD *)&self->_has + 3);
  }
  else
  {
    v21 = *((_QWORD *)&self->_has + 4);
    v22 = *((_QWORD *)&self->_has + 5);
  }
  v24 = *((_QWORD *)&self->_has + 1);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400) != 0)
  {
    PBDataWriterWriteDoubleField();
    v21 = *((_QWORD *)&self->_has + 4);
    v22 = *((_QWORD *)&self->_has + 5);
    v23 = *((_QWORD *)&self->_has + 2);
    v20 = *((_QWORD *)&self->_has + 3);
    v25 = *(_QWORD *)p_has;
    v24 = *((_QWORD *)&self->_has + 1);
    v26 = *((_WORD *)&self->_has + 24);
    if ((*(_QWORD *)p_has & 0x1000) == 0)
    {
LABEL_409:
      if ((v25 & 0x100) == 0)
        goto LABEL_410;
      goto LABEL_463;
    }
  }
  else if ((v25 & 0x1000) == 0)
  {
    goto LABEL_409;
  }
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100) == 0)
  {
LABEL_410:
    if ((v25 & 0x40000) == 0)
      goto LABEL_411;
    goto LABEL_464;
  }
LABEL_463:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000) == 0)
  {
LABEL_411:
    if ((v25 & 0x80000) == 0)
      goto LABEL_412;
    goto LABEL_465;
  }
LABEL_464:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000) == 0)
  {
LABEL_412:
    if ((v25 & 0x100000) == 0)
      goto LABEL_413;
    goto LABEL_466;
  }
LABEL_465:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000) == 0)
  {
LABEL_413:
    if ((v25 & 0x8000) == 0)
      goto LABEL_414;
    goto LABEL_467;
  }
LABEL_466:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x8000) == 0)
  {
LABEL_414:
    if ((v25 & 0x10000) == 0)
      goto LABEL_415;
    goto LABEL_468;
  }
LABEL_467:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000) == 0)
  {
LABEL_415:
    if ((v25 & 0x20000) == 0)
      goto LABEL_416;
    goto LABEL_469;
  }
LABEL_468:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20000) == 0)
  {
LABEL_416:
    if ((v25 & 0x800000000) == 0)
      goto LABEL_417;
    goto LABEL_470;
  }
LABEL_469:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  v26 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800000000) == 0)
  {
LABEL_417:
    if ((v26 & 1) == 0)
      goto LABEL_418;
    goto LABEL_471;
  }
LABEL_470:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 1) == 0)
  {
LABEL_418:
    if ((v22 & 0x8000000000000000) == 0)
      goto LABEL_419;
    goto LABEL_472;
  }
LABEL_471:
  PBDataWriterWriteUint32Field();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((v22 & 0x8000000000000000) == 0)
  {
LABEL_419:
    if ((v23 & 0x8000000000000) == 0)
      goto LABEL_420;
    goto LABEL_473;
  }
LABEL_472:
  PBDataWriterWriteUint32Field();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((v23 & 0x8000000000000) == 0)
  {
LABEL_420:
    if ((v25 & 0x40000000000) == 0)
      goto LABEL_421;
    goto LABEL_474;
  }
LABEL_473:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x40000000000) == 0)
  {
LABEL_421:
    if ((v25 & 0x200000000000) == 0)
      goto LABEL_422;
    goto LABEL_475;
  }
LABEL_474:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000000000) == 0)
  {
LABEL_422:
    if ((v25 & 0x800000000000) == 0)
      goto LABEL_423;
    goto LABEL_476;
  }
LABEL_475:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x800000000000) == 0)
  {
LABEL_423:
    if ((v25 & 0x800000) == 0)
      goto LABEL_424;
    goto LABEL_477;
  }
LABEL_476:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x800000) == 0)
  {
LABEL_424:
    if ((v25 & 0x4000000) == 0)
      goto LABEL_425;
    goto LABEL_478;
  }
LABEL_477:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x4000000) == 0)
  {
LABEL_425:
    if ((v25 & 0x8000000) == 0)
      goto LABEL_426;
    goto LABEL_479;
  }
LABEL_478:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x8000000) == 0)
  {
LABEL_426:
    if ((v25 & 0x200000000) == 0)
      goto LABEL_427;
    goto LABEL_480;
  }
LABEL_479:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000000) == 0)
  {
LABEL_427:
    if ((v25 & 0x100000000) == 0)
      goto LABEL_428;
    goto LABEL_481;
  }
LABEL_480:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x100000000) == 0)
  {
LABEL_428:
    if ((v24 & 0x40000000) == 0)
      goto LABEL_429;
    goto LABEL_482;
  }
LABEL_481:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  v24 = *((_QWORD *)&self->_has + 1);
  if ((v24 & 0x40000000) == 0)
  {
LABEL_429:
    if ((v24 & 0x100000000000000) == 0)
      goto LABEL_430;
    goto LABEL_483;
  }
LABEL_482:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x100000000000000) == 0)
  {
LABEL_430:
    if ((v22 & 0x40000) == 0)
      goto LABEL_431;
    goto LABEL_484;
  }
LABEL_483:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x40000) == 0)
  {
LABEL_431:
    if ((v22 & 0x20000) == 0)
      goto LABEL_432;
    goto LABEL_485;
  }
LABEL_484:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x20000) == 0)
  {
LABEL_432:
    if ((v22 & 0x10000) == 0)
      goto LABEL_433;
    goto LABEL_486;
  }
LABEL_485:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x10000) == 0)
  {
LABEL_433:
    if ((v22 & 0x8000) == 0)
      goto LABEL_434;
    goto LABEL_487;
  }
LABEL_486:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x8000) == 0)
  {
LABEL_434:
    if ((v22 & 0x4000) == 0)
      goto LABEL_435;
    goto LABEL_488;
  }
LABEL_487:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x4000) == 0)
  {
LABEL_435:
    if ((v22 & 0x2000) == 0)
      goto LABEL_436;
    goto LABEL_489;
  }
LABEL_488:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x2000) == 0)
  {
LABEL_436:
    if ((v22 & 0x1000) == 0)
      goto LABEL_437;
    goto LABEL_490;
  }
LABEL_489:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v22 = *((_QWORD *)&self->_has + 5);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((v22 & 0x1000) == 0)
  {
LABEL_437:
    if ((v22 & 0x800) == 0)
      goto LABEL_438;
    goto LABEL_491;
  }
LABEL_490:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v20 = *((_QWORD *)&self->_has + 3);
  v25 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 5) & 0x800) == 0)
  {
LABEL_438:
    if ((v20 & 0x800000000000000) == 0)
      goto LABEL_439;
    goto LABEL_492;
  }
LABEL_491:
  PBDataWriterWriteDoubleField();
  v20 = *((_QWORD *)&self->_has + 3);
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((v20 & 0x800000000000000) == 0)
  {
LABEL_439:
    if ((v20 & 0x400000000000000) == 0)
      goto LABEL_440;
    goto LABEL_493;
  }
LABEL_492:
  PBDataWriterWriteDoubleField();
  v20 = *((_QWORD *)&self->_has + 3);
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((v20 & 0x400000000000000) == 0)
  {
LABEL_440:
    if ((v21 & 1) == 0)
      goto LABEL_441;
    goto LABEL_494;
  }
LABEL_493:
  PBDataWriterWriteDoubleField();
  v20 = *((_QWORD *)&self->_has + 3);
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((v21 & 1) == 0)
  {
LABEL_441:
    if ((v20 & 0x8000000000000000) == 0)
      goto LABEL_442;
    goto LABEL_495;
  }
LABEL_494:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x8000000000000000) == 0)
  {
LABEL_442:
    if ((v21 & 0x100) == 0)
      goto LABEL_443;
    goto LABEL_496;
  }
LABEL_495:
  PBDataWriterWriteDoubleField();
  v21 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((v21 & 0x100) == 0)
  {
LABEL_443:
    if ((v21 & 0x80) == 0)
      goto LABEL_444;
    goto LABEL_497;
  }
LABEL_496:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 4) & 0x80) == 0)
  {
LABEL_444:
    if ((v23 & 0x10000000000) == 0)
      goto LABEL_445;
    goto LABEL_498;
  }
LABEL_497:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((v23 & 0x10000000000) == 0)
  {
LABEL_445:
    if ((v25 & 0x2000000) == 0)
      goto LABEL_446;
    goto LABEL_499;
  }
LABEL_498:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x2000000) == 0)
  {
LABEL_446:
    if ((v25 & 0x20000000) == 0)
      goto LABEL_447;
    goto LABEL_500;
  }
LABEL_499:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x20000000) == 0)
  {
LABEL_447:
    if ((v25 & 0x1000000) == 0)
      goto LABEL_448;
    goto LABEL_501;
  }
LABEL_500:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  v25 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x1000000) == 0)
  {
LABEL_448:
    if ((v25 & 0x10000000) == 0)
      goto LABEL_449;
    goto LABEL_502;
  }
LABEL_501:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)p_has & 0x10000000) == 0)
  {
LABEL_449:
    if ((v23 & 0x80000000000) == 0)
      goto LABEL_450;
    goto LABEL_503;
  }
LABEL_502:
  PBDataWriterWriteDoubleField();
  v23 = *((_QWORD *)&self->_has + 2);
  if ((v23 & 0x80000000000) == 0)
  {
LABEL_450:
    if ((v23 & 0x100000000000) == 0)
      goto LABEL_452;
    goto LABEL_451;
  }
LABEL_503:
  PBDataWriterWriteDoubleField();
  if ((*((_QWORD *)&self->_has + 2) & 0x100000000000) != 0)
LABEL_451:
    PBDataWriterWriteDoubleField();
LABEL_452:
  v56 = 0u;
  v57 = 0u;
  v54 = 0u;
  v55 = 0u;
  v27 = self->_portraitTagThresholds;
  v28 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v27, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v29; ++i)
      {
        if (*(_QWORD *)v55 != v30)
          objc_enumerationMutation(v27);
        PBDataWriterWriteSubmessage();
      }
      v29 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v27, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
    }
    while (v29);
  }

  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x400000000000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v33 = *((_QWORD *)&self->_has + 4);
    v34 = *((_QWORD *)&self->_has + 5);
    v32 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v33 = *((_QWORD *)&self->_has + 4);
    v34 = *((_QWORD *)&self->_has + 5);
  }
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x200000000000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v33 = *((_QWORD *)&self->_has + 4);
    v34 = *((_QWORD *)&self->_has + 5);
    v32 = *((_QWORD *)&self->_has + 2);
    v35 = *((_QWORD *)&self->_has + 3);
    v37 = *(_QWORD *)p_has;
    v36 = *((_QWORD *)&self->_has + 1);
    v38 = *((_WORD *)&self->_has + 24);
    if ((v32 & 0x2000000000000) == 0)
    {
LABEL_508:
      if ((v32 & 0x1000000000000) == 0)
        goto LABEL_509;
      goto LABEL_612;
    }
  }
  else if ((v32 & 0x2000000000000) == 0)
  {
    goto LABEL_508;
  }
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x1000000000000) == 0)
  {
LABEL_509:
    if ((v32 & 0x200000000) == 0)
      goto LABEL_510;
    goto LABEL_613;
  }
LABEL_612:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x200000000) == 0)
  {
LABEL_510:
    if ((v32 & 0x100000000) == 0)
      goto LABEL_511;
    goto LABEL_614;
  }
LABEL_613:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x100000000) == 0)
  {
LABEL_511:
    if ((v32 & 0x80000000) == 0)
      goto LABEL_512;
    goto LABEL_615;
  }
LABEL_614:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_512:
    if ((v32 & 0x40000000) == 0)
      goto LABEL_513;
    goto LABEL_616;
  }
LABEL_615:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x40000000) == 0)
  {
LABEL_513:
    if ((v32 & 0x20000000) == 0)
      goto LABEL_514;
    goto LABEL_617;
  }
LABEL_616:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x20000000) == 0)
  {
LABEL_514:
    if ((v32 & 0x10000000) == 0)
      goto LABEL_515;
    goto LABEL_618;
  }
LABEL_617:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x10000000) == 0)
  {
LABEL_515:
    if ((v32 & 0x8000000) == 0)
      goto LABEL_516;
    goto LABEL_619;
  }
LABEL_618:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x8000000) == 0)
  {
LABEL_516:
    if ((v32 & 0x4000000) == 0)
      goto LABEL_517;
    goto LABEL_620;
  }
LABEL_619:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x4000000) == 0)
  {
LABEL_517:
    if ((v32 & 0x2000000000) == 0)
      goto LABEL_518;
    goto LABEL_621;
  }
LABEL_620:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x2000000000) == 0)
  {
LABEL_518:
    if ((v32 & 0x1000000000) == 0)
      goto LABEL_519;
    goto LABEL_622;
  }
LABEL_621:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x1000000000) == 0)
  {
LABEL_519:
    if ((v32 & 0x800000000) == 0)
      goto LABEL_520;
    goto LABEL_623;
  }
LABEL_622:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x800000000) == 0)
  {
LABEL_520:
    if ((v32 & 0x400000000) == 0)
      goto LABEL_521;
    goto LABEL_624;
  }
LABEL_623:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x400000000) == 0)
  {
LABEL_521:
    if ((v37 & 0x1000000000000000) == 0)
      goto LABEL_522;
    goto LABEL_625;
  }
LABEL_624:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000000000) == 0)
  {
LABEL_522:
    if ((v37 & 0x4000000000000) == 0)
      goto LABEL_523;
    goto LABEL_626;
  }
LABEL_625:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x4000000000000) == 0)
  {
LABEL_523:
    if ((v37 & 0x200000000000000) == 0)
      goto LABEL_524;
    goto LABEL_627;
  }
LABEL_626:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x200000000000000) == 0)
  {
LABEL_524:
    if ((v37 & 0x40000000000000) == 0)
      goto LABEL_525;
    goto LABEL_628;
  }
LABEL_627:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000000000000) == 0)
  {
LABEL_525:
    if ((v37 & 0x800000000000000) == 0)
      goto LABEL_526;
    goto LABEL_629;
  }
LABEL_628:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800000000000000) == 0)
  {
LABEL_526:
    if ((v37 & 0x2000000000000) == 0)
      goto LABEL_527;
    goto LABEL_630;
  }
LABEL_629:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x2000000000000) == 0)
  {
LABEL_527:
    if ((v37 & 0x100000000000000) == 0)
      goto LABEL_528;
    goto LABEL_631;
  }
LABEL_630:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000000000000) == 0)
  {
LABEL_528:
    if ((v37 & 0x20000000000000) == 0)
      goto LABEL_529;
    goto LABEL_632;
  }
LABEL_631:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20000000000000) == 0)
  {
LABEL_529:
    if ((v37 & 0x400000000000000) == 0)
      goto LABEL_530;
    goto LABEL_633;
  }
LABEL_632:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000000000) == 0)
  {
LABEL_530:
    if ((v37 & 0x1000000000000) == 0)
      goto LABEL_531;
    goto LABEL_634;
  }
LABEL_633:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000000) == 0)
  {
LABEL_531:
    if ((v37 & 0x80000000000000) == 0)
      goto LABEL_532;
    goto LABEL_635;
  }
LABEL_634:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000000000) == 0)
  {
LABEL_532:
    if ((v37 & 0x10000000000000) == 0)
      goto LABEL_533;
    goto LABEL_636;
  }
LABEL_635:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000000000000) == 0)
  {
LABEL_533:
    if ((v37 & 0x400000000) == 0)
      goto LABEL_534;
    goto LABEL_637;
  }
LABEL_636:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000) == 0)
  {
LABEL_534:
    if ((v35 & 0x20) == 0)
      goto LABEL_535;
    goto LABEL_638;
  }
LABEL_637:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x20) == 0)
  {
LABEL_535:
    if ((v36 & 0x20000000) == 0)
      goto LABEL_536;
    goto LABEL_639;
  }
LABEL_638:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x20000000) == 0)
  {
LABEL_536:
    if ((v36 & 0x10000000) == 0)
      goto LABEL_537;
    goto LABEL_640;
  }
LABEL_639:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x10000000) == 0)
  {
LABEL_537:
    if ((v37 & 0x1000000000) == 0)
      goto LABEL_538;
    goto LABEL_641;
  }
LABEL_640:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x1000000000) == 0)
  {
LABEL_538:
    if ((v37 & 0x80) == 0)
      goto LABEL_539;
    goto LABEL_642;
  }
LABEL_641:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80) == 0)
  {
LABEL_539:
    if ((v37 & 0x40) == 0)
      goto LABEL_540;
    goto LABEL_643;
  }
LABEL_642:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40) == 0)
  {
LABEL_540:
    if ((v37 & 0x20) == 0)
      goto LABEL_541;
    goto LABEL_644;
  }
LABEL_643:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x20) == 0)
  {
LABEL_541:
    if ((v37 & 0x10) == 0)
      goto LABEL_542;
    goto LABEL_645;
  }
LABEL_644:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10) == 0)
  {
LABEL_542:
    if ((v37 & 8) == 0)
      goto LABEL_543;
    goto LABEL_646;
  }
LABEL_645:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 8) == 0)
  {
LABEL_543:
    if ((v37 & 4) == 0)
      goto LABEL_544;
    goto LABEL_647;
  }
LABEL_646:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 4) == 0)
  {
LABEL_544:
    if ((v37 & 2) == 0)
      goto LABEL_545;
    goto LABEL_648;
  }
LABEL_647:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 2) == 0)
  {
LABEL_545:
    if ((v37 & 1) == 0)
      goto LABEL_546;
    goto LABEL_649;
  }
LABEL_648:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 1) == 0)
  {
LABEL_546:
    if ((v35 & 0x80000) == 0)
      goto LABEL_547;
    goto LABEL_650;
  }
LABEL_649:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x80000) == 0)
  {
LABEL_547:
    if ((v35 & 0x40000) == 0)
      goto LABEL_548;
    goto LABEL_651;
  }
LABEL_650:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x40000) == 0)
  {
LABEL_548:
    if ((v35 & 0x20000) == 0)
      goto LABEL_549;
    goto LABEL_652;
  }
LABEL_651:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x20000) == 0)
  {
LABEL_549:
    if ((v35 & 0x10000) == 0)
      goto LABEL_550;
    goto LABEL_653;
  }
LABEL_652:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x10000) == 0)
  {
LABEL_550:
    if ((v34 & 4) == 0)
      goto LABEL_551;
    goto LABEL_654;
  }
LABEL_653:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 4) == 0)
  {
LABEL_551:
    if ((v34 & 2) == 0)
      goto LABEL_552;
    goto LABEL_655;
  }
LABEL_654:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 2) == 0)
  {
LABEL_552:
    if ((v34 & 1) == 0)
      goto LABEL_553;
    goto LABEL_656;
  }
LABEL_655:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 1) == 0)
  {
LABEL_553:
    if ((v33 & 0x8000000000000000) == 0)
      goto LABEL_554;
    goto LABEL_657;
  }
LABEL_656:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v33 & 0x8000000000000000) == 0)
  {
LABEL_554:
    if ((v34 & 0x40) == 0)
      goto LABEL_555;
    goto LABEL_658;
  }
LABEL_657:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x40) == 0)
  {
LABEL_555:
    if ((v34 & 0x20) == 0)
      goto LABEL_556;
    goto LABEL_659;
  }
LABEL_658:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x20) == 0)
  {
LABEL_556:
    if ((v34 & 0x10) == 0)
      goto LABEL_557;
    goto LABEL_660;
  }
LABEL_659:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x10) == 0)
  {
LABEL_557:
    if ((v34 & 8) == 0)
      goto LABEL_558;
    goto LABEL_661;
  }
LABEL_660:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 8) == 0)
  {
LABEL_558:
    if ((v34 & 0x400) == 0)
      goto LABEL_559;
    goto LABEL_662;
  }
LABEL_661:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x400) == 0)
  {
LABEL_559:
    if ((v34 & 0x200) == 0)
      goto LABEL_560;
    goto LABEL_663;
  }
LABEL_662:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x200) == 0)
  {
LABEL_560:
    if ((v34 & 0x100) == 0)
      goto LABEL_561;
    goto LABEL_664;
  }
LABEL_663:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x100) == 0)
  {
LABEL_561:
    if ((v34 & 0x80) == 0)
      goto LABEL_562;
    goto LABEL_665;
  }
LABEL_664:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x80) == 0)
  {
LABEL_562:
    if ((v37 & 0x400000) == 0)
      goto LABEL_563;
    goto LABEL_666;
  }
LABEL_665:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000) == 0)
  {
LABEL_563:
    if ((v36 & 0x2000000) == 0)
      goto LABEL_564;
    goto LABEL_667;
  }
LABEL_666:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x2000000) == 0)
  {
LABEL_564:
    if ((v36 & 0x4000000) == 0)
      goto LABEL_565;
    goto LABEL_668;
  }
LABEL_667:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x4000000) == 0)
  {
LABEL_565:
    if ((v34 & 0x20000000000000) == 0)
      goto LABEL_566;
    goto LABEL_669;
  }
LABEL_668:
  PBDataWriterWriteDoubleField();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x20000000000000) == 0)
  {
LABEL_566:
    if ((v34 & 0x200000000000) == 0)
      goto LABEL_567;
    goto LABEL_670;
  }
LABEL_669:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x200000000000) == 0)
  {
LABEL_567:
    if ((v34 & 0x200000000000000) == 0)
      goto LABEL_568;
    goto LABEL_671;
  }
LABEL_670:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x200000000000000) == 0)
  {
LABEL_568:
    if ((v34 & 0x2000000000000) == 0)
      goto LABEL_569;
    goto LABEL_672;
  }
LABEL_671:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x2000000000000) == 0)
  {
LABEL_569:
    if ((v34 & 0x8000000000000) == 0)
      goto LABEL_570;
    goto LABEL_673;
  }
LABEL_672:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x8000000000000) == 0)
  {
LABEL_570:
    if ((v34 & 0x80000000000) == 0)
      goto LABEL_571;
    goto LABEL_674;
  }
LABEL_673:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x80000000000) == 0)
  {
LABEL_571:
    if ((v34 & 0x80000000000000) == 0)
      goto LABEL_572;
    goto LABEL_675;
  }
LABEL_674:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 5);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x80000000000000) == 0)
  {
LABEL_572:
    if ((v34 & 0x800000000000) == 0)
      goto LABEL_573;
    goto LABEL_676;
  }
LABEL_675:
  PBDataWriterWriteUint32Field();
  v33 = *((_QWORD *)&self->_has + 4);
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000) == 0)
  {
LABEL_573:
    if ((v35 & 0x80000000000000) == 0)
      goto LABEL_574;
    goto LABEL_677;
  }
LABEL_676:
  PBDataWriterWriteUint32Field();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x80000000000000) == 0)
  {
LABEL_574:
    if ((v35 & 0x40000000000000) == 0)
      goto LABEL_575;
    goto LABEL_678;
  }
LABEL_677:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x40000000000000) == 0)
  {
LABEL_575:
    if ((v32 & 0x10) == 0)
      goto LABEL_576;
    goto LABEL_679;
  }
LABEL_678:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x10) == 0)
  {
LABEL_576:
    if ((v37 & 0x400000000000) == 0)
      goto LABEL_577;
    goto LABEL_680;
  }
LABEL_679:
  PBDataWriterWriteInt64Field();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x400000000000) == 0)
  {
LABEL_577:
    if ((v37 & 0x100000000000) == 0)
      goto LABEL_578;
    goto LABEL_681;
  }
LABEL_680:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x100000000000) == 0)
  {
LABEL_578:
    if ((v37 & 0x80000000000) == 0)
      goto LABEL_579;
    goto LABEL_682;
  }
LABEL_681:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000000) == 0)
  {
LABEL_579:
    if ((v35 & 0x8000) == 0)
      goto LABEL_580;
    goto LABEL_683;
  }
LABEL_682:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x8000) == 0)
  {
LABEL_580:
    if ((v37 & 0x10000000000) == 0)
      goto LABEL_581;
    goto LABEL_684;
  }
LABEL_683:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x10000000000) == 0)
  {
LABEL_581:
    if ((v35 & 0x40) == 0)
      goto LABEL_582;
    goto LABEL_685;
  }
LABEL_684:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x40) == 0)
  {
LABEL_582:
    if ((v37 & 0x80000000) == 0)
      goto LABEL_583;
    goto LABEL_686;
  }
LABEL_685:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x80000000) == 0)
  {
LABEL_583:
    if ((v37 & 0x40000000) == 0)
      goto LABEL_584;
    goto LABEL_687;
  }
LABEL_686:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v33 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x40000000) == 0)
  {
LABEL_584:
    if ((v33 & 0x10000000000000) == 0)
      goto LABEL_585;
    goto LABEL_688;
  }
LABEL_687:
  PBDataWriterWriteDoubleField();
  v35 = *((_QWORD *)&self->_has + 3);
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x10000000000000) == 0)
  {
LABEL_585:
    if ((v38 & 0x400) == 0)
      goto LABEL_586;
    goto LABEL_689;
  }
LABEL_688:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v38 & 0x400) == 0)
  {
LABEL_586:
    if ((v35 & 0x800000) == 0)
      goto LABEL_587;
    goto LABEL_690;
  }
LABEL_689:
  PBDataWriterWriteBOOLField();
  v32 = *((_QWORD *)&self->_has + 2);
  v35 = *((_QWORD *)&self->_has + 3);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x800000) == 0)
  {
LABEL_587:
    if ((v35 & 0x200000) == 0)
      goto LABEL_588;
    goto LABEL_691;
  }
LABEL_690:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v36 = *((_QWORD *)&self->_has + 1);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 3) & 0x200000) == 0)
  {
LABEL_588:
    if ((v37 & 0x800) == 0)
      goto LABEL_589;
    goto LABEL_692;
  }
LABEL_691:
  PBDataWriterWriteDoubleField();
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v37 = *(_QWORD *)p_has;
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x800) == 0)
  {
LABEL_589:
    if ((v37 & 0x200) == 0)
      goto LABEL_590;
    goto LABEL_693;
  }
LABEL_692:
  PBDataWriterWriteDoubleField();
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)p_has & 0x200) == 0)
  {
LABEL_590:
    if ((v32 & 0x4000000000000) == 0)
      goto LABEL_591;
    goto LABEL_694;
  }
LABEL_693:
  PBDataWriterWriteDoubleField();
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x4000000000000) == 0)
  {
LABEL_591:
    if ((v32 & 0x800000000000) == 0)
      goto LABEL_592;
    goto LABEL_695;
  }
LABEL_694:
  PBDataWriterWriteDoubleField();
  v36 = *((_QWORD *)&self->_has + 1);
  v32 = *((_QWORD *)&self->_has + 2);
  v38 = *((_WORD *)&self->_has + 24);
  if ((v32 & 0x800000000000) == 0)
  {
LABEL_592:
    if ((v36 & 0x200000000000000) == 0)
      goto LABEL_593;
    goto LABEL_696;
  }
LABEL_695:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  v38 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 1) & 0x200000000000000) == 0)
  {
LABEL_593:
    if ((v38 & 0x20) == 0)
      goto LABEL_594;
    goto LABEL_697;
  }
LABEL_696:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((*((_WORD *)&self->_has + 24) & 0x20) == 0)
  {
LABEL_594:
    if ((v32 & 0x4000000000) == 0)
      goto LABEL_595;
    goto LABEL_698;
  }
LABEL_697:
  PBDataWriterWriteBOOLField();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x4000000000) == 0)
  {
LABEL_595:
    if ((v32 & 0x80) == 0)
      goto LABEL_596;
    goto LABEL_699;
  }
LABEL_698:
  PBDataWriterWriteInt64Field();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x80) == 0)
  {
LABEL_596:
    if ((v32 & 0x40) == 0)
      goto LABEL_597;
    goto LABEL_700;
  }
LABEL_699:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x40) == 0)
  {
LABEL_597:
    if ((v32 & 0x200) == 0)
      goto LABEL_598;
    goto LABEL_701;
  }
LABEL_700:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x200) == 0)
  {
LABEL_598:
    if ((v32 & 0x20) == 0)
      goto LABEL_599;
    goto LABEL_702;
  }
LABEL_701:
  PBDataWriterWriteDoubleField();
  v32 = *((_QWORD *)&self->_has + 2);
  if ((v32 & 0x20) == 0)
  {
LABEL_599:
    if ((v32 & 0x100) == 0)
      goto LABEL_601;
    goto LABEL_600;
  }
LABEL_702:
  PBDataWriterWriteDoubleField();
  if ((*((_QWORD *)&self->_has + 2) & 0x100) != 0)
LABEL_600:
    PBDataWriterWriteDoubleField();
LABEL_601:
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v39 = self->_realTimeUserFeedbackTagCoefficients;
  v40 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v39, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
  if (v40)
  {
    v41 = v40;
    v42 = *(_QWORD *)v51;
    do
    {
      for (j = 0; j != v41; ++j)
      {
        if (*(_QWORD *)v51 != v42)
          objc_enumerationMutation(v39);
        PBDataWriterWriteSubmessage();
      }
      v41 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v39, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
    }
    while (v41);
  }

  v44 = *((_QWORD *)&self->_has + 1);
  if ((v44 & 0x8000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v45 = *((_QWORD *)&self->_has + 4);
    v46 = *((_QWORD *)&self->_has + 5);
    v48 = *((_QWORD *)&self->_has + 2);
    v47 = *((_QWORD *)&self->_has + 3);
    v44 = *((_QWORD *)&self->_has + 1);
  }
  else
  {
    v45 = *((_QWORD *)&self->_has + 4);
    v46 = *((_QWORD *)&self->_has + 5);
    v48 = *((_QWORD *)&self->_has + 2);
    v47 = *((_QWORD *)&self->_has + 3);
  }
  v49 = *(_QWORD *)p_has;
  if ((v44 & 0x4000) != 0)
  {
    PBDataWriterWriteDoubleField();
    v45 = *((_QWORD *)&self->_has + 4);
    v46 = *((_QWORD *)&self->_has + 5);
    v48 = *((_QWORD *)&self->_has + 2);
    v47 = *((_QWORD *)&self->_has + 3);
    v49 = *(_QWORD *)p_has;
    v44 = *((_QWORD *)&self->_has + 1);
    if ((v48 & 8) == 0)
    {
LABEL_707:
      if ((v49 & 0x200000) == 0)
        goto LABEL_708;
      goto LABEL_764;
    }
  }
  else if ((v48 & 8) == 0)
  {
    goto LABEL_707;
  }
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v46 = *((_QWORD *)&self->_has + 5);
  v48 = *((_QWORD *)&self->_has + 2);
  v47 = *((_QWORD *)&self->_has + 3);
  v49 = *(_QWORD *)p_has;
  v44 = *((_QWORD *)&self->_has + 1);
  if ((*(_QWORD *)p_has & 0x200000) == 0)
  {
LABEL_708:
    if ((v46 & 0x8000000) == 0)
      goto LABEL_709;
    goto LABEL_765;
  }
LABEL_764:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v47 = *((_QWORD *)&self->_has + 3);
  v49 = *(_QWORD *)p_has;
  v44 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 5) & 0x8000000) == 0)
  {
LABEL_709:
    if ((v48 & 0x8000000000) == 0)
      goto LABEL_710;
    goto LABEL_766;
  }
LABEL_765:
  PBDataWriterWriteUint32Field();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v44 = *((_QWORD *)&self->_has + 1);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v48 & 0x8000000000) == 0)
  {
LABEL_710:
    if ((v48 & 0x1000000000000000) == 0)
      goto LABEL_711;
    goto LABEL_767;
  }
LABEL_766:
  PBDataWriterWriteInt64Field();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v44 = *((_QWORD *)&self->_has + 1);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v48 & 0x1000000000000000) == 0)
  {
LABEL_711:
    if ((v44 & 8) == 0)
      goto LABEL_712;
    goto LABEL_768;
  }
LABEL_767:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v44 = *((_QWORD *)&self->_has + 1);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v44 & 8) == 0)
  {
LABEL_712:
    if ((v44 & 0x20) == 0)
      goto LABEL_713;
    goto LABEL_769;
  }
LABEL_768:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x20) == 0)
  {
LABEL_713:
    if ((v49 & 0x8000000000) == 0)
      goto LABEL_714;
    goto LABEL_770;
  }
LABEL_769:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x8000000000) == 0)
  {
LABEL_714:
    if ((v49 & 0x20000000000) == 0)
      goto LABEL_715;
    goto LABEL_771;
  }
LABEL_770:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((*(_QWORD *)p_has & 0x20000000000) == 0)
  {
LABEL_715:
    if ((v48 & 0x2000000000000000) == 0)
      goto LABEL_716;
    goto LABEL_772;
  }
LABEL_771:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v48 & 0x2000000000000000) == 0)
  {
LABEL_716:
    if ((v48 & 0x8000000000000000) == 0)
      goto LABEL_717;
    goto LABEL_773;
  }
LABEL_772:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v48 & 0x8000000000000000) == 0)
  {
LABEL_717:
    if ((v48 & 0x800) == 0)
      goto LABEL_718;
    goto LABEL_774;
  }
LABEL_773:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v48 = *((_QWORD *)&self->_has + 2);
  v49 = *(_QWORD *)p_has;
  if ((v48 & 0x800) == 0)
  {
LABEL_718:
    if ((v48 & 0x1000) == 0)
      goto LABEL_719;
    goto LABEL_775;
  }
LABEL_774:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 2) & 0x1000) == 0)
  {
LABEL_719:
    if ((v47 & 0x800000000000) == 0)
      goto LABEL_720;
    goto LABEL_776;
  }
LABEL_775:
  PBDataWriterWriteDoubleField();
  v47 = *((_QWORD *)&self->_has + 3);
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v47 & 0x800000000000) == 0)
  {
LABEL_720:
    if ((v47 & 0x1000000000000) == 0)
      goto LABEL_721;
    goto LABEL_777;
  }
LABEL_776:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x1000000000000) == 0)
  {
LABEL_721:
    if ((v45 & 0x4000) == 0)
      goto LABEL_722;
    goto LABEL_778;
  }
LABEL_777:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x4000) == 0)
  {
LABEL_722:
    if ((v45 & 0x80000000) == 0)
      goto LABEL_723;
    goto LABEL_779;
  }
LABEL_778:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x80000000) == 0)
  {
LABEL_723:
    if ((v45 & 0x100000000) == 0)
      goto LABEL_724;
    goto LABEL_780;
  }
LABEL_779:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x100000000) == 0)
  {
LABEL_724:
    if ((v45 & 0x20000000000) == 0)
      goto LABEL_725;
    goto LABEL_781;
  }
LABEL_780:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x20000000000) == 0)
  {
LABEL_725:
    if ((v45 & 0x2000000000000) == 0)
      goto LABEL_726;
    goto LABEL_782;
  }
LABEL_781:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x2000000000000) == 0)
  {
LABEL_726:
    if ((v45 & 0x100000000000) == 0)
      goto LABEL_727;
    goto LABEL_783;
  }
LABEL_782:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x100000000000) == 0)
  {
LABEL_727:
    if ((v45 & 0x200000000000) == 0)
      goto LABEL_728;
    goto LABEL_784;
  }
LABEL_783:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x200000000000) == 0)
  {
LABEL_728:
    if ((v45 & 0x400000000000) == 0)
      goto LABEL_729;
    goto LABEL_785;
  }
LABEL_784:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x400000000000) == 0)
  {
LABEL_729:
    if ((v45 & 0x1000000000) == 0)
      goto LABEL_730;
    goto LABEL_786;
  }
LABEL_785:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x1000000000) == 0)
  {
LABEL_730:
    if ((v45 & 0x2000000000) == 0)
      goto LABEL_731;
    goto LABEL_787;
  }
LABEL_786:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x2000000000) == 0)
  {
LABEL_731:
    if ((v45 & 0x4000000000) == 0)
      goto LABEL_732;
    goto LABEL_788;
  }
LABEL_787:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x4000000000) == 0)
  {
LABEL_732:
    if ((v45 & 0x8000000000) == 0)
      goto LABEL_733;
    goto LABEL_789;
  }
LABEL_788:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x8000000000) == 0)
  {
LABEL_733:
    if ((v45 & 0x10000000000) == 0)
      goto LABEL_734;
    goto LABEL_790;
  }
LABEL_789:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x10000000000) == 0)
  {
LABEL_734:
    if ((v45 & 0x40000000000) == 0)
      goto LABEL_735;
    goto LABEL_791;
  }
LABEL_790:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x40000000000) == 0)
  {
LABEL_735:
    if ((v45 & 0x80000000000) == 0)
      goto LABEL_736;
    goto LABEL_792;
  }
LABEL_791:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x80000000000) == 0)
  {
LABEL_736:
    if ((v45 & 0x800000000000) == 0)
      goto LABEL_737;
    goto LABEL_793;
  }
LABEL_792:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x800000000000) == 0)
  {
LABEL_737:
    if ((v45 & 0x1000000000000) == 0)
      goto LABEL_738;
    goto LABEL_794;
  }
LABEL_793:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x1000000000000) == 0)
  {
LABEL_738:
    if ((v45 & 0x40000) == 0)
      goto LABEL_739;
    goto LABEL_795;
  }
LABEL_794:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x40000) == 0)
  {
LABEL_739:
    if ((v45 & 0x80000) == 0)
      goto LABEL_740;
    goto LABEL_796;
  }
LABEL_795:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x80000) == 0)
  {
LABEL_740:
    if ((v45 & 0x100000) == 0)
      goto LABEL_741;
    goto LABEL_797;
  }
LABEL_796:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x100000) == 0)
  {
LABEL_741:
    if ((v45 & 0x200000) == 0)
      goto LABEL_742;
    goto LABEL_798;
  }
LABEL_797:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x200000) == 0)
  {
LABEL_742:
    if ((v45 & 0x4000000000000) == 0)
      goto LABEL_743;
    goto LABEL_799;
  }
LABEL_798:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x4000000000000) == 0)
  {
LABEL_743:
    if ((v45 & 0x40000000) == 0)
      goto LABEL_744;
    goto LABEL_800;
  }
LABEL_799:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x40000000) == 0)
  {
LABEL_744:
    if ((v45 & 0x800000) == 0)
      goto LABEL_745;
    goto LABEL_801;
  }
LABEL_800:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x800000) == 0)
  {
LABEL_745:
    if ((v45 & 0x10000000) == 0)
      goto LABEL_746;
    goto LABEL_802;
  }
LABEL_801:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x10000000) == 0)
  {
LABEL_746:
    if ((v45 & 0x4000000) == 0)
      goto LABEL_747;
    goto LABEL_803;
  }
LABEL_802:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x4000000) == 0)
  {
LABEL_747:
    if ((v45 & 0x2000) == 0)
      goto LABEL_748;
    goto LABEL_804;
  }
LABEL_803:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x2000) == 0)
  {
LABEL_748:
    if ((v45 & 0x20000000) == 0)
      goto LABEL_749;
    goto LABEL_805;
  }
LABEL_804:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x20000000) == 0)
  {
LABEL_749:
    if ((v45 & 0x400000) == 0)
      goto LABEL_750;
    goto LABEL_806;
  }
LABEL_805:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x400000) == 0)
  {
LABEL_750:
    if ((v45 & 0x8000000) == 0)
      goto LABEL_751;
    goto LABEL_807;
  }
LABEL_806:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x8000000) == 0)
  {
LABEL_751:
    if ((v45 & 0x2000000) == 0)
      goto LABEL_752;
    goto LABEL_808;
  }
LABEL_807:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x2000000) == 0)
  {
LABEL_752:
    if ((v45 & 0x200000000) == 0)
      goto LABEL_753;
    goto LABEL_809;
  }
LABEL_808:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x200000000) == 0)
  {
LABEL_753:
    if ((v45 & 0x400000000) == 0)
      goto LABEL_754;
    goto LABEL_810;
  }
LABEL_809:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x400000000) == 0)
  {
LABEL_754:
    if ((v45 & 0x800000000) == 0)
      goto LABEL_755;
    goto LABEL_811;
  }
LABEL_810:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x800000000) == 0)
  {
LABEL_755:
    if ((v45 & 0x8000) == 0)
      goto LABEL_756;
    goto LABEL_812;
  }
LABEL_811:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x8000) == 0)
  {
LABEL_756:
    if ((v45 & 0x10000) == 0)
      goto LABEL_757;
    goto LABEL_813;
  }
LABEL_812:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x10000) == 0)
  {
LABEL_757:
    if ((v45 & 0x20000) == 0)
      goto LABEL_758;
    goto LABEL_814;
  }
LABEL_813:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  v49 = *(_QWORD *)p_has;
  if ((v45 & 0x20000) == 0)
  {
LABEL_758:
    if ((v49 & 0x8000000000000) == 0)
      goto LABEL_759;
LABEL_815:
    PBDataWriterWriteDoubleField();
    if ((*((_QWORD *)&self->_has + 4) & 0x1000000) == 0)
      goto LABEL_761;
    goto LABEL_760;
  }
LABEL_814:
  PBDataWriterWriteDoubleField();
  v45 = *((_QWORD *)&self->_has + 4);
  if ((*(_QWORD *)p_has & 0x8000000000000) != 0)
    goto LABEL_815;
LABEL_759:
  if ((v45 & 0x1000000) != 0)
LABEL_760:
    PBDataWriterWriteDoubleField();
LABEL_761:

}

- (id)copyWithZone:(_NSZone *)a3
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t has;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  NSMutableArray *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  NSMutableArray *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t j;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[128];
  _BYTE v64[128];
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  v5 = objc_msgSend((id)objc_msgSend((id)objc_opt_class(), "allocWithZone:", a3), "init");
  v6 = v5;
  v7 = *((_QWORD *)&self->_has + 4);
  if ((v7 & 0x8000000000000) != 0)
  {
    *(_QWORD *)(v5 + 2464) = self->_treatmentId;
    *(_QWORD *)(v5 + 3000) |= 0x8000000000000uLL;
    v7 = *((_QWORD *)&self->_has + 4);
  }
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((has & 0x2000000000000000) != 0)
  {
    *(double *)(v5 + 496) = self->_decayFactor;
    *(_QWORD *)(v5 + 2968) |= 0x2000000000000000uLL;
    v7 = *((_QWORD *)&self->_has + 4);
    v8 = *((_QWORD *)&self->_has + 5);
    v10 = *((_QWORD *)&self->_has + 2);
    v9 = *((_QWORD *)&self->_has + 3);
    has = (uint64_t)self->_has;
    v11 = *((_QWORD *)&self->_has + 1);
    v13 = *((_WORD *)&self->_has + 24);
    if ((has & 0x2000000000) == 0)
    {
LABEL_5:
      if ((has & 0x4000000000) == 0)
        goto LABEL_6;
      goto LABEL_107;
    }
  }
  else if ((has & 0x2000000000) == 0)
  {
    goto LABEL_5;
  }
  *(double *)(v5 + 304) = self->_baselineImpressionPrior;
  *(_QWORD *)(v5 + 2968) |= 0x2000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((has & 0x4000000000) == 0)
  {
LABEL_6:
    if ((v11 & 0x20000) == 0)
      goto LABEL_7;
    goto LABEL_108;
  }
LABEL_107:
  *(double *)(v5 + 312) = self->_baselineRatePrior;
  *(_QWORD *)(v5 + 2968) |= 0x4000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x20000) == 0)
  {
LABEL_7:
    if ((v13 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_109;
  }
LABEL_108:
  *(double *)(v5 + 656) = self->_featureImpressionPrior;
  *(_QWORD *)(v5 + 2976) |= 0x20000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v13 & 0x40) == 0)
  {
LABEL_8:
    if ((v11 & 0x800000) == 0)
      goto LABEL_9;
    goto LABEL_110;
  }
LABEL_109:
  *(_BYTE *)(v5 + 2960) = self->_globalScoreRankingEnabled;
  *(_WORD *)(v5 + 3016) |= 0x40u;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x800000) == 0)
  {
LABEL_9:
    if ((v9 & 0x20000000000000) == 0)
      goto LABEL_10;
    goto LABEL_111;
  }
LABEL_110:
  *(double *)(v5 + 704) = self->_globalScoreBump;
  *(_QWORD *)(v5 + 2976) |= 0x800000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x20000000000000) == 0)
  {
LABEL_10:
    if ((v10 & 0x40000000000) == 0)
      goto LABEL_11;
    goto LABEL_112;
  }
LABEL_111:
  *(double *)(v5 + 1968) = self->_subscriptionVoteCoefficient;
  *(_QWORD *)(v5 + 2992) |= 0x20000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x40000000000) == 0)
  {
LABEL_11:
    if ((v11 & 0x1000000) == 0)
      goto LABEL_12;
    goto LABEL_113;
  }
LABEL_112:
  *(double *)(v5 + 1368) = self->_personalizationCoefficient;
  *(_QWORD *)(v5 + 2984) |= 0x40000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x1000000) == 0)
  {
LABEL_12:
    if ((v9 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_114;
  }
LABEL_113:
  *(double *)(v5 + 712) = self->_globalScoreCoefficient;
  *(_QWORD *)(v5 + 2976) |= 0x1000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x400000000000000) == 0)
      goto LABEL_14;
    goto LABEL_115;
  }
LABEL_114:
  *(_QWORD *)(v5 + 1576) = self->_publisherTopicIdEventCountMinimum;
  *(_QWORD *)(v5 + 2992) |= 0x10uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x400000000000000) == 0)
  {
LABEL_14:
    if ((v11 & 0x10000000000) == 0)
      goto LABEL_15;
    goto LABEL_116;
  }
LABEL_115:
  *(double *)(v5 + 1496) = self->_presentationImpressionValue;
  *(_QWORD *)(v5 + 2984) |= 0x400000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x10000000000) == 0)
  {
LABEL_15:
    if ((v11 & 0x1000000000000000) == 0)
      goto LABEL_16;
    goto LABEL_117;
  }
LABEL_116:
  *(double *)(v5 + 840) = self->_heavyClickImpressionValue;
  *(_QWORD *)(v5 + 2976) |= 0x10000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x1000000000000000) == 0)
  {
LABEL_16:
    if ((v9 & 0x10000000000) == 0)
      goto LABEL_17;
    goto LABEL_118;
  }
LABEL_117:
  *(double *)(v5 + 1000) = self->_likeImpressionValue;
  *(_QWORD *)(v5 + 2976) |= 0x1000000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v9 & 0x20000000) == 0)
      goto LABEL_18;
    goto LABEL_119;
  }
LABEL_118:
  *(double *)(v5 + 1864) = self->_shareImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x10000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_18:
    if ((v9 & 0x200000000000) == 0)
      goto LABEL_19;
    goto LABEL_120;
  }
LABEL_119:
  *(double *)(v5 + 1776) = self->_savedImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x20000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x200000000000) == 0)
  {
LABEL_19:
    if ((v7 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_121;
  }
LABEL_120:
  *(double *)(v5 + 1904) = self->_subscribeImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x200000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x800) == 0)
  {
LABEL_20:
    if ((v8 & 0x2000000) == 0)
      goto LABEL_21;
    goto LABEL_122;
  }
LABEL_121:
  *(double *)(v5 + 2144) = self->_tappedImpressionValue;
  *(_QWORD *)(v5 + 3000) |= 0x800uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v7 & 0x800000000000000) == 0)
      goto LABEL_22;
    goto LABEL_123;
  }
LABEL_122:
  *(double *)(v5 + 2768) = self->_weakClickImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x2000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x800000000000000) == 0)
  {
LABEL_22:
    if ((v8 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_124;
  }
LABEL_123:
  *(double *)(v5 + 2528) = self->_unsubscribeImpressionValue;
  *(_QWORD *)(v5 + 3000) |= 0x800000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x200000) == 0)
  {
LABEL_23:
    if ((v11 & 2) == 0)
      goto LABEL_24;
    goto LABEL_125;
  }
LABEL_124:
  *(double *)(v5 + 2736) = self->_visitImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x200000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 2) == 0)
  {
LABEL_24:
    if ((v10 & 0x100000000000000) == 0)
      goto LABEL_25;
    goto LABEL_126;
  }
LABEL_125:
  *(double *)(v5 + 528) = self->_dislikeImpressionValue;
  *(_QWORD *)(v5 + 2976) |= 2uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x100000000000000) == 0)
  {
LABEL_25:
    if ((v11 & 0x4000000000) == 0)
      goto LABEL_26;
    goto LABEL_127;
  }
LABEL_126:
  *(double *)(v5 + 1480) = self->_presentationClickValue;
  *(_QWORD *)(v5 + 2984) |= 0x100000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x4000000000) == 0)
  {
LABEL_26:
    if ((v11 & 0x400000000000000) == 0)
      goto LABEL_27;
    goto LABEL_128;
  }
LABEL_127:
  *(double *)(v5 + 824) = self->_heavyClickClickValue;
  *(_QWORD *)(v5 + 2976) |= 0x4000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x400000000000000) == 0)
  {
LABEL_27:
    if ((v9 & 0x4000000000) == 0)
      goto LABEL_28;
    goto LABEL_129;
  }
LABEL_128:
  *(double *)(v5 + 984) = self->_likeClickValue;
  *(_QWORD *)(v5 + 2976) |= 0x400000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x4000000000) == 0)
  {
LABEL_28:
    if ((v9 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_130;
  }
LABEL_129:
  *(double *)(v5 + 1848) = self->_shareClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x4000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v9 & 0x80000000000) == 0)
      goto LABEL_30;
    goto LABEL_131;
  }
LABEL_130:
  *(double *)(v5 + 1760) = self->_savedClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x8000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x80000000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x200) == 0)
      goto LABEL_31;
    goto LABEL_132;
  }
LABEL_131:
  *(double *)(v5 + 1888) = self->_subscribeClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x80000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x200) == 0)
  {
LABEL_31:
    if ((v8 & 0x800000) == 0)
      goto LABEL_32;
    goto LABEL_133;
  }
LABEL_132:
  *(double *)(v5 + 2128) = self->_tappedClickValue;
  *(_QWORD *)(v5 + 3000) |= 0x200uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x800000) == 0)
  {
LABEL_32:
    if ((v7 & 0x200000000000000) == 0)
      goto LABEL_33;
    goto LABEL_134;
  }
LABEL_133:
  *(double *)(v5 + 2752) = self->_weakClickClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x800000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x200000000000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x80000) == 0)
      goto LABEL_34;
    goto LABEL_135;
  }
LABEL_134:
  *(double *)(v5 + 2512) = self->_unsubscribeClickValue;
  *(_QWORD *)(v5 + 3000) |= 0x200000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x80000) == 0)
  {
LABEL_34:
    if ((has & 0x8000000000000000) == 0)
      goto LABEL_35;
    goto LABEL_136;
  }
LABEL_135:
  *(double *)(v5 + 2720) = self->_visitClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x80000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((has & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v11 & 0x10000000000000) == 0)
      goto LABEL_36;
    goto LABEL_137;
  }
LABEL_136:
  *(double *)(v5 + 512) = self->_dislikeClickValue;
  *(_QWORD *)(v5 + 2968) |= 0x8000000000000000;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x10000000000000) == 0)
  {
LABEL_36:
    if ((v11 & 0x40000000000000) == 0)
      goto LABEL_37;
    goto LABEL_138;
  }
LABEL_137:
  *(double *)(v5 + 936) = self->_hourlyFlowRateMinimum;
  *(_QWORD *)(v5 + 2976) |= 0x10000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x40000000000000) == 0)
  {
LABEL_37:
    if ((v11 & 0x2000000000000) == 0)
      goto LABEL_38;
    goto LABEL_139;
  }
LABEL_138:
  *(double *)(v5 + 952) = self->_hourlyFlowRateSubscriptionCountBuffer;
  *(_QWORD *)(v5 + 2976) |= 0x40000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x2000000000000) == 0)
  {
LABEL_38:
    if ((has & 0x4000000000000000) == 0)
      goto LABEL_39;
    goto LABEL_140;
  }
LABEL_139:
  *(double *)(v5 + 912) = self->_hourlyFlowRateDampeningFactor;
  *(_QWORD *)(v5 + 2976) |= 0x2000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)&self->_has & 0x4000000000000000) == 0)
  {
LABEL_39:
    if ((v9 & 0x40000000000) == 0)
      goto LABEL_40;
    goto LABEL_141;
  }
LABEL_140:
  *(double *)(v5 + 504) = self->_democratizationFactor;
  *(_QWORD *)(v5 + 2968) |= 0x4000000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x40000000000) == 0)
  {
LABEL_40:
    if ((v11 & 0x40000) == 0)
      goto LABEL_41;
    goto LABEL_142;
  }
LABEL_141:
  *(_QWORD *)(v5 + 1880) = self->_sliceTimeInterval;
  *(_QWORD *)(v5 + 2992) |= 0x40000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x40000) == 0)
  {
LABEL_41:
    if ((v11 & 0x200000) == 0)
      goto LABEL_42;
    goto LABEL_143;
  }
LABEL_142:
  *(_QWORD *)(v5 + 664) = self->_flowRateDampeningSliceCount;
  *(_QWORD *)(v5 + 2976) |= 0x40000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x200000) == 0)
  {
LABEL_42:
    if ((v11 & 0x2000000000) == 0)
      goto LABEL_43;
    goto LABEL_144;
  }
LABEL_143:
  *(double *)(v5 + 688) = self->_flowRateMinimumDampeningFactor;
  *(_QWORD *)(v5 + 2976) |= 0x200000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x2000000000) == 0)
  {
LABEL_43:
    if ((v11 & 0x10) == 0)
      goto LABEL_44;
    goto LABEL_145;
  }
LABEL_144:
  *(double *)(v5 + 816) = self->_halfLifeCoefficient;
  *(_QWORD *)(v5 + 2976) |= 0x2000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x10) == 0)
  {
LABEL_44:
    if ((v11 & 0x40000000000) == 0)
      goto LABEL_45;
    goto LABEL_146;
  }
LABEL_145:
  *(double *)(v5 + 552) = self->_diversificationPenalty;
  *(_QWORD *)(v5 + 2976) |= 0x10uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v9 & 0x8000000000000) == 0)
      goto LABEL_46;
    goto LABEL_147;
  }
LABEL_146:
  *(double *)(v5 + 856) = self->_heavyClickMinimumDuration;
  *(_QWORD *)(v5 + 2976) |= 0x40000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x8000000000000) == 0)
  {
LABEL_46:
    if ((v9 & 0x2000000000000) == 0)
      goto LABEL_47;
    goto LABEL_148;
  }
LABEL_147:
  *(double *)(v5 + 1952) = self->_subscriptionRelatedImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x8000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x2000000000000) == 0)
  {
LABEL_47:
    if ((v11 & 0x20000000000000) == 0)
      goto LABEL_48;
    goto LABEL_149;
  }
LABEL_148:
  *(double *)(v5 + 1936) = self->_subscriptionRelatedClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x2000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x20000000000000) == 0)
  {
LABEL_48:
    if ((v11 & 0x10000) == 0)
      goto LABEL_49;
    goto LABEL_150;
  }
LABEL_149:
  *(double *)(v5 + 944) = self->_hourlyFlowRatePerSubscription;
  *(_QWORD *)(v5 + 2976) |= 0x20000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x10000) == 0)
  {
LABEL_49:
    if ((v11 & 0x100000) == 0)
      goto LABEL_50;
    goto LABEL_151;
  }
LABEL_150:
  *(_QWORD *)(v5 + 648) = self->_extraHeadlinesToShowTheUser;
  *(_QWORD *)(v5 + 2976) |= 0x10000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x100000) == 0)
  {
LABEL_50:
    if ((v11 & 0x80000) == 0)
      goto LABEL_51;
    goto LABEL_152;
  }
LABEL_151:
  *(double *)(v5 + 680) = self->_flowRateDegreeOfDynamism;
  *(_QWORD *)(v5 + 2976) |= 0x100000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x80000) == 0)
  {
LABEL_51:
    if ((v11 & 0x400000) == 0)
      goto LABEL_52;
    goto LABEL_153;
  }
LABEL_152:
  *(double *)(v5 + 672) = self->_flowRateDecayFactor;
  *(_QWORD *)(v5 + 2976) |= 0x80000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x400000) == 0)
  {
LABEL_52:
    if ((v10 & 0x800000000000000) == 0)
      goto LABEL_53;
    goto LABEL_154;
  }
LABEL_153:
  *(double *)(v5 + 696) = self->_flowRatePriorWeight;
  *(_QWORD *)(v5 + 2976) |= 0x400000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x800000000000000) == 0)
  {
LABEL_53:
    if ((v11 & 0x20000000000) == 0)
      goto LABEL_54;
    goto LABEL_155;
  }
LABEL_154:
  *(double *)(v5 + 1504) = self->_presentationImpressionValueBaseline;
  *(_QWORD *)(v5 + 2984) |= 0x800000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x20000000000) == 0)
  {
LABEL_54:
    if ((v11 & 0x2000000000000000) == 0)
      goto LABEL_55;
    goto LABEL_156;
  }
LABEL_155:
  *(double *)(v5 + 848) = self->_heavyClickImpressionValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x20000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x2000000000000000) == 0)
  {
LABEL_55:
    if ((v9 & 0x20000000000) == 0)
      goto LABEL_56;
    goto LABEL_157;
  }
LABEL_156:
  *(double *)(v5 + 1008) = self->_likeImpressionValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x2000000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v9 & 0x40000000) == 0)
      goto LABEL_57;
    goto LABEL_158;
  }
LABEL_157:
  *(double *)(v5 + 1872) = self->_shareImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x20000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v9 & 0x400000000000) == 0)
      goto LABEL_58;
    goto LABEL_159;
  }
LABEL_158:
  *(double *)(v5 + 1784) = self->_savedImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x40000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x400000000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_160;
  }
LABEL_159:
  *(double *)(v5 + 1912) = self->_subscribeImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x400000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x1000) == 0)
  {
LABEL_59:
    if ((v8 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_161;
  }
LABEL_160:
  *(double *)(v5 + 2152) = self->_tappedImpressionValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x1000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x1000000000000000) == 0)
      goto LABEL_61;
    goto LABEL_162;
  }
LABEL_161:
  *(double *)(v5 + 2776) = self->_weakClickImpressionValueBaseline;
  *(_QWORD *)(v5 + 3008) |= 0x4000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v8 & 0x400000) == 0)
      goto LABEL_62;
    goto LABEL_163;
  }
LABEL_162:
  *(double *)(v5 + 2536) = self->_unsubscribeImpressionValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x1000000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x400000) == 0)
  {
LABEL_62:
    if ((v11 & 4) == 0)
      goto LABEL_63;
    goto LABEL_164;
  }
LABEL_163:
  *(double *)(v5 + 2744) = self->_visitImpressionValueBaseline;
  *(_QWORD *)(v5 + 3008) |= 0x400000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 4) == 0)
  {
LABEL_63:
    if ((v9 & 0x10000000000000) == 0)
      goto LABEL_64;
    goto LABEL_165;
  }
LABEL_164:
  *(double *)(v5 + 536) = self->_dislikeImpressionValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 4uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x10000000000000) == 0)
  {
LABEL_64:
    if ((v10 & 0x200000000000000) == 0)
      goto LABEL_65;
    goto LABEL_166;
  }
LABEL_165:
  *(double *)(v5 + 1960) = self->_subscriptionRelatedImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x10000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x200000000000000) == 0)
  {
LABEL_65:
    if ((v11 & 0x8000000000) == 0)
      goto LABEL_66;
    goto LABEL_167;
  }
LABEL_166:
  *(double *)(v5 + 1488) = self->_presentationClickValueBaseline;
  *(_QWORD *)(v5 + 2984) |= 0x200000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v11 & 0x800000000000000) == 0)
      goto LABEL_67;
    goto LABEL_168;
  }
LABEL_167:
  *(double *)(v5 + 832) = self->_heavyClickClickValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x8000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x800000000000000) == 0)
  {
LABEL_67:
    if ((v9 & 0x8000000000) == 0)
      goto LABEL_68;
    goto LABEL_169;
  }
LABEL_168:
  *(double *)(v5 + 992) = self->_likeClickValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x800000000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x8000000000) == 0)
  {
LABEL_68:
    if ((v9 & 0x10000000) == 0)
      goto LABEL_69;
    goto LABEL_170;
  }
LABEL_169:
  *(double *)(v5 + 1856) = self->_shareClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x8000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_69:
    if ((v9 & 0x100000000000) == 0)
      goto LABEL_70;
    goto LABEL_171;
  }
LABEL_170:
  *(double *)(v5 + 1768) = self->_savedClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x10000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v7 & 0x400) == 0)
      goto LABEL_71;
    goto LABEL_172;
  }
LABEL_171:
  *(double *)(v5 + 1896) = self->_subscribeClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x100000000000uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v7 & 0x400) == 0)
  {
LABEL_71:
    if ((v8 & 0x1000000) == 0)
      goto LABEL_72;
    goto LABEL_173;
  }
LABEL_172:
  *(double *)(v5 + 2136) = self->_tappedClickValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x400uLL;
  v7 = *((_QWORD *)&self->_has + 4);
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v8 & 0x1000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x400000000000000) == 0)
      goto LABEL_73;
    goto LABEL_174;
  }
LABEL_173:
  *(double *)(v5 + 2760) = self->_weakClickClickValueBaseline;
  *(_QWORD *)(v5 + 3008) |= 0x1000000uLL;
  v8 = *((_QWORD *)&self->_has + 5);
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x400000000000000) == 0)
  {
LABEL_73:
    if ((v8 & 0x100000) == 0)
      goto LABEL_74;
    goto LABEL_175;
  }
LABEL_174:
  *(double *)(v5 + 2520) = self->_unsubscribeClickValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x400000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x100000) == 0)
  {
LABEL_74:
    if ((v11 & 1) == 0)
      goto LABEL_75;
    goto LABEL_176;
  }
LABEL_175:
  *(double *)(v5 + 2728) = self->_visitClickValueBaseline;
  *(_QWORD *)(v5 + 3008) |= 0x100000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 1) == 0)
  {
LABEL_75:
    if ((v9 & 0x4000000000000) == 0)
      goto LABEL_76;
    goto LABEL_177;
  }
LABEL_176:
  *(double *)(v5 + 520) = self->_dislikeClickValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 1uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v11 & 0x100) == 0)
      goto LABEL_77;
    goto LABEL_178;
  }
LABEL_177:
  *(double *)(v5 + 1944) = self->_subscriptionRelatedClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x4000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x100) == 0)
  {
LABEL_77:
    if ((v11 & 0x40) == 0)
      goto LABEL_78;
    goto LABEL_179;
  }
LABEL_178:
  *(double *)(v5 + 584) = self->_existingSubscriptionImpressionValue;
  *(_QWORD *)(v5 + 2976) |= 0x100uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x40) == 0)
  {
LABEL_78:
    if ((v11 & 0x200) == 0)
      goto LABEL_79;
    goto LABEL_180;
  }
LABEL_179:
  *(double *)(v5 + 568) = self->_existingSubscriptionClickValue;
  *(_QWORD *)(v5 + 2976) |= 0x40uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x200) == 0)
  {
LABEL_79:
    if ((v11 & 0x80) == 0)
      goto LABEL_80;
    goto LABEL_181;
  }
LABEL_180:
  *(double *)(v5 + 592) = self->_existingSubscriptionImpressionValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x200uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x80) == 0)
  {
LABEL_80:
    if ((v11 & 0x1000) == 0)
      goto LABEL_81;
    goto LABEL_182;
  }
LABEL_181:
  *(double *)(v5 + 576) = self->_existingSubscriptionClickValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x80uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x1000) == 0)
  {
LABEL_81:
    if ((v11 & 0x400) == 0)
      goto LABEL_82;
    goto LABEL_183;
  }
LABEL_182:
  *(double *)(v5 + 616) = self->_existingSubscriptionRelatedImpressionValue;
  *(_QWORD *)(v5 + 2976) |= 0x1000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x400) == 0)
  {
LABEL_82:
    if ((v11 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_184;
  }
LABEL_183:
  *(double *)(v5 + 600) = self->_existingSubscriptionRelatedClickValue;
  *(_QWORD *)(v5 + 2976) |= 0x400uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x2000) == 0)
  {
LABEL_83:
    if ((v11 & 0x800) == 0)
      goto LABEL_84;
    goto LABEL_185;
  }
LABEL_184:
  *(double *)(v5 + 624) = self->_existingSubscriptionRelatedImpressionValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x2000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x800) == 0)
  {
LABEL_84:
    if ((v11 & 0x8000000) == 0)
      goto LABEL_85;
    goto LABEL_186;
  }
LABEL_185:
  *(double *)(v5 + 608) = self->_existingSubscriptionRelatedClickValueBaseline;
  *(_QWORD *)(v5 + 2976) |= 0x800uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x8000000) == 0)
  {
LABEL_85:
    if ((v11 & 0x4000000000000) == 0)
      goto LABEL_86;
    goto LABEL_187;
  }
LABEL_186:
  *(double *)(v5 + 736) = self->_globalScoreStretchingFactor;
  *(_QWORD *)(v5 + 2976) |= 0x8000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x4000000000000) == 0)
  {
LABEL_86:
    if ((v11 & 0x1000000000000) == 0)
      goto LABEL_87;
    goto LABEL_188;
  }
LABEL_187:
  *(double *)(v5 + 920) = self->_hourlyFlowRateFloor;
  *(_QWORD *)(v5 + 2976) |= 0x4000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v11 & 0x1000000000000) == 0)
  {
LABEL_87:
    if ((v9 & 0x4000000) == 0)
      goto LABEL_88;
    goto LABEL_189;
  }
LABEL_188:
  *(double *)(v5 + 904) = self->_hourlyFlowRateCeiling;
  *(_QWORD *)(v5 + 2976) |= 0x1000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_88:
    if ((v10 & 0x4000000000000000) == 0)
      goto LABEL_89;
    goto LABEL_190;
  }
LABEL_189:
  *(double *)(v5 + 1752) = self->_saturatedSubscriptionCountFactor;
  *(_QWORD *)(v5 + 2992) |= 0x4000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  v13 = *((_WORD *)&self->_has + 24);
  if ((v10 & 0x4000000000000000) == 0)
  {
LABEL_89:
    if ((v13 & 0x200) == 0)
      goto LABEL_90;
    goto LABEL_191;
  }
LABEL_190:
  *(double *)(v5 + 1528) = self->_publisherDiversificationPenalty;
  *(_QWORD *)(v5 + 2984) |= 0x4000000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 0x200) == 0)
  {
LABEL_90:
    if ((v11 & 0x400000000000) == 0)
      goto LABEL_91;
    goto LABEL_192;
  }
LABEL_191:
  *(_BYTE *)(v5 + 2963) = self->_hardAgeBeforePublisherDiversification;
  *(_WORD *)(v5 + 3016) |= 0x200u;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  if ((v11 & 0x400000000000) == 0)
  {
LABEL_91:
    if ((v11 & 0x800000000000) == 0)
      goto LABEL_92;
    goto LABEL_193;
  }
LABEL_192:
  *(double *)(v5 + 888) = self->_hourlyFlowRateAlpha;
  *(_QWORD *)(v5 + 2976) |= 0x400000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  v11 = *((_QWORD *)&self->_has + 1);
  if ((v11 & 0x800000000000) == 0)
  {
LABEL_92:
    if ((v11 & 0x8000000000000) == 0)
      goto LABEL_93;
    goto LABEL_194;
  }
LABEL_193:
  *(double *)(v5 + 896) = self->_hourlyFlowRateBeta;
  *(_QWORD *)(v5 + 2976) |= 0x800000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v9 & 0x2000) == 0)
      goto LABEL_94;
    goto LABEL_195;
  }
LABEL_194:
  *(double *)(v5 + 928) = self->_hourlyFlowRateGamma;
  *(_QWORD *)(v5 + 2976) |= 0x8000000000000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x2000) == 0)
  {
LABEL_94:
    if ((v9 & 0x800) == 0)
      goto LABEL_95;
    goto LABEL_196;
  }
LABEL_195:
  *(double *)(v5 + 1648) = self->_recommendationPresentationFeedImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x2000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x800) == 0)
  {
LABEL_95:
    if ((v9 & 0x200) == 0)
      goto LABEL_96;
    goto LABEL_197;
  }
LABEL_196:
  *(double *)(v5 + 1632) = self->_recommendationPresentationFeedClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x800uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x200) == 0)
  {
LABEL_96:
    if ((v9 & 0x80) == 0)
      goto LABEL_97;
    goto LABEL_198;
  }
LABEL_197:
  *(double *)(v5 + 1616) = self->_recommendationPresentationExploreImpressionValue;
  *(_QWORD *)(v5 + 2992) |= 0x200uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x80) == 0)
  {
LABEL_97:
    if ((v9 & 0x4000) == 0)
      goto LABEL_98;
    goto LABEL_199;
  }
LABEL_198:
  *(double *)(v5 + 1600) = self->_recommendationPresentationExploreClickValue;
  *(_QWORD *)(v5 + 2992) |= 0x80uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x4000) == 0)
  {
LABEL_98:
    if ((v9 & 0x1000) == 0)
      goto LABEL_99;
    goto LABEL_200;
  }
LABEL_199:
  *(double *)(v5 + 1656) = self->_recommendationPresentationFeedImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x4000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x1000) == 0)
  {
LABEL_99:
    if ((v9 & 0x400) == 0)
      goto LABEL_100;
    goto LABEL_201;
  }
LABEL_200:
  *(double *)(v5 + 1640) = self->_recommendationPresentationFeedClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x1000uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  v9 = *((_QWORD *)&self->_has + 3);
  if ((v9 & 0x400) == 0)
  {
LABEL_100:
    if ((v9 & 0x100) == 0)
      goto LABEL_101;
    goto LABEL_202;
  }
LABEL_201:
  *(double *)(v5 + 1624) = self->_recommendationPresentationExploreImpressionValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x400uLL;
  v10 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 3) & 0x100) == 0)
  {
LABEL_101:
    if ((v10 & 0x40000000000000) == 0)
      goto LABEL_103;
    goto LABEL_102;
  }
LABEL_202:
  *(double *)(v5 + 1608) = self->_recommendationPresentationExploreClickValueBaseline;
  *(_QWORD *)(v5 + 2992) |= 0x100uLL;
  if ((*((_QWORD *)&self->_has + 2) & 0x40000000000000) != 0)
  {
LABEL_102:
    *(double *)(v5 + 1464) = self->_premiumSubscriptionActivationImpressionValue;
    *(_QWORD *)(v5 + 2984) |= 0x40000000000000uLL;
  }
LABEL_103:
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x10000000000000) != 0)
  {
    *(double *)(v5 + 1448) = self->_premiumSubscriptionActivationClickValue;
    *(_QWORD *)(v5 + 2984) |= 0x10000000000000uLL;
    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
    v14 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
  }
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x80000000000000) != 0)
  {
    *(double *)(v5 + 1472) = self->_premiumSubscriptionActivationImpressionValueBaseline;
    *(_QWORD *)(v5 + 2984) |= 0x80000000000000uLL;
    v15 = *((_QWORD *)&self->_has + 4);
    v16 = *((_QWORD *)&self->_has + 5);
    v14 = *((_QWORD *)&self->_has + 2);
    v17 = *((_QWORD *)&self->_has + 3);
    v19 = (uint64_t)self->_has;
    v18 = *((_QWORD *)&self->_has + 1);
    v20 = *((_WORD *)&self->_has + 24);
    if ((v14 & 0x20000000000000) == 0)
    {
LABEL_207:
      if ((v18 & 0x4000000000000000) == 0)
        goto LABEL_208;
      goto LABEL_309;
    }
  }
  else if ((v14 & 0x20000000000000) == 0)
  {
    goto LABEL_207;
  }
  *(double *)(v5 + 1456) = self->_premiumSubscriptionActivationClickValueBaseline;
  *(_QWORD *)(v5 + 2984) |= 0x20000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x4000000000000000) == 0)
  {
LABEL_208:
    if ((v14 & 0x400) == 0)
      goto LABEL_209;
    goto LABEL_310;
  }
LABEL_309:
  *(double *)(v5 + 1016) = self->_lowQualityArticleRatio;
  *(_QWORD *)(v5 + 2976) |= 0x4000000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x400) == 0)
  {
LABEL_209:
    if ((v14 & 4) == 0)
      goto LABEL_210;
    goto LABEL_311;
  }
LABEL_310:
  *(_QWORD *)(v5 + 1112) = self->_minClusterSize;
  *(_QWORD *)(v5 + 2984) |= 0x400uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 4) == 0)
  {
LABEL_210:
    if ((v18 & 0x8000000000000000) == 0)
      goto LABEL_211;
    goto LABEL_312;
  }
LABEL_311:
  *(_QWORD *)(v5 + 1048) = self->_maxClusterSize;
  *(_QWORD *)(v5 + 2984) |= 4uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x8000000000000000) == 0)
  {
LABEL_211:
    if ((v18 & 0x80000000000) == 0)
      goto LABEL_212;
    goto LABEL_313;
  }
LABEL_312:
  *(_QWORD *)(v5 + 1024) = self->_maxArticleCombos;
  *(_QWORD *)(v5 + 2976) |= 0x8000000000000000;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x80000000000) == 0)
  {
LABEL_212:
    if ((v17 & 0x400000000) == 0)
      goto LABEL_213;
    goto LABEL_314;
  }
LABEL_313:
  *(_QWORD *)(v5 + 864) = self->_heuristicSampleSize;
  *(_QWORD *)(v5 + 2976) |= 0x80000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x400000000) == 0)
  {
LABEL_213:
    if ((v17 & 0x80000000) == 0)
      goto LABEL_214;
    goto LABEL_315;
  }
LABEL_314:
  *(_QWORD *)(v5 + 1816) = self->_searchBranchMultiplier;
  *(_QWORD *)(v5 + 2992) |= 0x400000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x80000000) == 0)
  {
LABEL_214:
    if ((v17 & 0x2000000000) == 0)
      goto LABEL_215;
    goto LABEL_316;
  }
LABEL_315:
  *(double *)(v5 + 1792) = self->_searchBranchDecay;
  *(_QWORD *)(v5 + 2992) |= 0x80000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x2000000000) == 0)
  {
LABEL_215:
    if ((v20 & 2) == 0)
      goto LABEL_216;
    goto LABEL_317;
  }
LABEL_316:
  *(double *)(v5 + 1840) = self->_searchTimeLimit;
  *(_QWORD *)(v5 + 2992) |= 0x2000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 2) == 0)
  {
LABEL_216:
    if ((v16 & 0x400000000000000) == 0)
      goto LABEL_217;
    goto LABEL_318;
  }
LABEL_317:
  *(_DWORD *)(v5 + 2952) = self->_tagOrder;
  *(_WORD *)(v5 + 3016) |= 2u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000000000) == 0)
  {
LABEL_217:
    if ((v16 & 0x20000000000) == 0)
      goto LABEL_218;
    goto LABEL_319;
  }
LABEL_318:
  *(_DWORD *)(v5 + 2908) = self->_moveOrder;
  *(_QWORD *)(v5 + 3008) |= 0x400000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x20000000000) == 0)
  {
LABEL_218:
    if ((v16 & 0x4000000000) == 0)
      goto LABEL_219;
    goto LABEL_320;
  }
LABEL_319:
  *(_DWORD *)(v5 + 2840) = self->_heuristicOrder;
  *(_QWORD *)(v5 + 3008) |= 0x20000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000) == 0)
  {
LABEL_219:
    if ((v16 & 0x10000000000000) == 0)
      goto LABEL_220;
    goto LABEL_321;
  }
LABEL_320:
  *(_DWORD *)(v5 + 2828) = self->_heuristicOption;
  *(_QWORD *)(v5 + 3008) |= 0x4000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000000000) == 0)
  {
LABEL_220:
    if ((v16 & 0x100000000000) == 0)
      goto LABEL_221;
    goto LABEL_322;
  }
LABEL_321:
  *(_DWORD *)(v5 + 2884) = self->_minClusterSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x10000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000000) == 0)
  {
LABEL_221:
    if ((v16 & 0x100000000000000) == 0)
      goto LABEL_222;
    goto LABEL_323;
  }
LABEL_322:
  *(_DWORD *)(v5 + 2852) = self->_maxClusterSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x100000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000000000) == 0)
  {
LABEL_222:
    if ((v16 & 0x1000000000000) == 0)
      goto LABEL_223;
    goto LABEL_324;
  }
LABEL_323:
  *(_DWORD *)(v5 + 2900) = self->_minIdealClusterSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x100000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000000) == 0)
  {
LABEL_223:
    if ((v16 & 0x4000000000000) == 0)
      goto LABEL_224;
    goto LABEL_325;
  }
LABEL_324:
  *(_DWORD *)(v5 + 2868) = self->_maxIdealClusterSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x1000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000000) == 0)
  {
LABEL_224:
    if ((v16 & 0x40000000000) == 0)
      goto LABEL_225;
    goto LABEL_326;
  }
LABEL_325:
  *(_DWORD *)(v5 + 2876) = self->_minClusterSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x4000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000000) == 0)
  {
LABEL_225:
    if ((v16 & 0x40000000000000) == 0)
      goto LABEL_226;
    goto LABEL_327;
  }
LABEL_326:
  *(_DWORD *)(v5 + 2844) = self->_maxClusterSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x40000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000000000) == 0)
  {
LABEL_226:
    if ((v16 & 0x400000000000) == 0)
      goto LABEL_227;
    goto LABEL_328;
  }
LABEL_327:
  *(_DWORD *)(v5 + 2892) = self->_minIdealClusterSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x40000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000000) == 0)
  {
LABEL_227:
    if ((v14 & 2) == 0)
      goto LABEL_228;
    goto LABEL_329;
  }
LABEL_328:
  *(_DWORD *)(v5 + 2860) = self->_maxIdealClusterSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x400000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 2) == 0)
  {
LABEL_228:
    if ((v14 & 1) == 0)
      goto LABEL_229;
    goto LABEL_330;
  }
LABEL_329:
  *(_QWORD *)(v5 + 1040) = self->_maxArticleCombosIPhone;
  *(_QWORD *)(v5 + 2984) |= 2uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 1) == 0)
  {
LABEL_229:
    if ((v18 & 0x200000000000) == 0)
      goto LABEL_230;
    goto LABEL_331;
  }
LABEL_330:
  *(_QWORD *)(v5 + 1032) = self->_maxArticleCombosIPad;
  *(_QWORD *)(v5 + 2984) |= 1uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x200000000000) == 0)
  {
LABEL_230:
    if ((v18 & 0x100000000000) == 0)
      goto LABEL_231;
    goto LABEL_332;
  }
LABEL_331:
  *(_QWORD *)(v5 + 880) = self->_heuristicSampleSizeIPhone;
  *(_QWORD *)(v5 + 2976) |= 0x200000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x100000000000) == 0)
  {
LABEL_231:
    if ((v17 & 0x1000000000) == 0)
      goto LABEL_232;
    goto LABEL_333;
  }
LABEL_332:
  *(_QWORD *)(v5 + 872) = self->_heuristicSampleSizeIPad;
  *(_QWORD *)(v5 + 2976) |= 0x100000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x1000000000) == 0)
  {
LABEL_232:
    if ((v17 & 0x800000000) == 0)
      goto LABEL_233;
    goto LABEL_334;
  }
LABEL_333:
  *(_QWORD *)(v5 + 1832) = self->_searchBranchMultiplierIPhone;
  *(_QWORD *)(v5 + 2992) |= 0x1000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x800000000) == 0)
  {
LABEL_233:
    if ((v17 & 0x200000000) == 0)
      goto LABEL_234;
    goto LABEL_335;
  }
LABEL_334:
  *(_QWORD *)(v5 + 1824) = self->_searchBranchMultiplierIPad;
  *(_QWORD *)(v5 + 2992) |= 0x800000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x200000000) == 0)
  {
LABEL_234:
    if ((v17 & 0x100000000) == 0)
      goto LABEL_235;
    goto LABEL_336;
  }
LABEL_335:
  *(double *)(v5 + 1808) = self->_searchBranchDecayIPhone;
  *(_QWORD *)(v5 + 2992) |= 0x200000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x100000000) == 0)
  {
LABEL_235:
    if ((v16 & 0x10000000000) == 0)
      goto LABEL_236;
    goto LABEL_337;
  }
LABEL_336:
  *(double *)(v5 + 1800) = self->_searchBranchDecayIPad;
  *(_QWORD *)(v5 + 2992) |= 0x100000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000000) == 0)
  {
LABEL_236:
    if ((v16 & 0x8000000000) == 0)
      goto LABEL_237;
    goto LABEL_338;
  }
LABEL_337:
  *(_DWORD *)(v5 + 2836) = self->_heuristicOptionIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x10000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x8000000000) == 0)
  {
LABEL_237:
    if ((v15 & 0x40) == 0)
      goto LABEL_238;
    goto LABEL_339;
  }
LABEL_338:
  *(_DWORD *)(v5 + 2832) = self->_heuristicOptionIPad;
  *(_QWORD *)(v5 + 3008) |= 0x8000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x40) == 0)
  {
LABEL_238:
    if ((v15 & 0x20) == 0)
      goto LABEL_239;
    goto LABEL_340;
  }
LABEL_339:
  *(double *)(v5 + 2104) = self->_tagSizeCoeffIPhone;
  *(_QWORD *)(v5 + 3000) |= 0x40uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x20) == 0)
  {
LABEL_239:
    if ((v15 & 4) == 0)
      goto LABEL_240;
    goto LABEL_341;
  }
LABEL_340:
  *(double *)(v5 + 2096) = self->_tagSizeCoeffIPad;
  *(_QWORD *)(v5 + 3000) |= 0x20uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 4) == 0)
  {
LABEL_240:
    if ((v15 & 2) == 0)
      goto LABEL_241;
    goto LABEL_342;
  }
LABEL_341:
  *(double *)(v5 + 2072) = self->_tagPairsCoeffIPhone;
  *(_QWORD *)(v5 + 3000) |= 4uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 2) == 0)
  {
LABEL_241:
    if ((v14 & 0x40000) == 0)
      goto LABEL_242;
    goto LABEL_343;
  }
LABEL_342:
  *(double *)(v5 + 2064) = self->_tagPairsCoeffIPad;
  *(_QWORD *)(v5 + 3000) |= 2uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x40000) == 0)
  {
LABEL_242:
    if ((v14 & 0x20000) == 0)
      goto LABEL_243;
    goto LABEL_344;
  }
LABEL_343:
  *(double *)(v5 + 1176) = self->_moveNewOrphansCoeffIPhone;
  *(_QWORD *)(v5 + 2984) |= 0x40000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x20000) == 0)
  {
LABEL_243:
    if ((v14 & 0x100000) == 0)
      goto LABEL_244;
    goto LABEL_345;
  }
LABEL_344:
  *(double *)(v5 + 1168) = self->_moveNewOrphansCoeffIPad;
  *(_QWORD *)(v5 + 2984) |= 0x20000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x100000) == 0)
  {
LABEL_244:
    if ((v14 & 0x80000) == 0)
      goto LABEL_245;
    goto LABEL_346;
  }
LABEL_345:
  *(double *)(v5 + 1192) = self->_moveSizeCoeffIPhone;
  *(_QWORD *)(v5 + 2984) |= 0x100000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x80000) == 0)
  {
LABEL_245:
    if ((v17 & 0x1000000000000000) == 0)
      goto LABEL_246;
    goto LABEL_347;
  }
LABEL_346:
  *(double *)(v5 + 1184) = self->_moveSizeCoeffIPad;
  *(_QWORD *)(v5 + 2984) |= 0x80000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v17 & 0x1000000000000000) == 0)
  {
LABEL_246:
    if ((v14 & 0x4000) == 0)
      goto LABEL_247;
    goto LABEL_348;
  }
LABEL_347:
  *(double *)(v5 + 2024) = self->_tagFavoritedCoeff;
  *(_QWORD *)(v5 + 2992) |= 0x1000000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x4000) == 0)
  {
LABEL_247:
    if ((v14 & 0x2000) == 0)
      goto LABEL_248;
    goto LABEL_349;
  }
LABEL_348:
  *(double *)(v5 + 1144) = self->_moveAboutnessNoiseStdIPhone;
  *(_QWORD *)(v5 + 2984) |= 0x4000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x2000) == 0)
  {
LABEL_248:
    if ((v16 & 0x80000000) == 0)
      goto LABEL_249;
    goto LABEL_350;
  }
LABEL_349:
  *(double *)(v5 + 1136) = self->_moveAboutnessNoiseStdIPad;
  *(_QWORD *)(v5 + 2984) |= 0x2000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x80000000) == 0)
  {
LABEL_249:
    if ((v16 & 0x40000000) == 0)
      goto LABEL_250;
    goto LABEL_351;
  }
LABEL_350:
  *(_DWORD *)(v5 + 2800) = self->_dynamicMaxClusterSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x80000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x40000000) == 0)
  {
LABEL_250:
    if ((v16 & 0x200000000) == 0)
      goto LABEL_251;
    goto LABEL_352;
  }
LABEL_351:
  *(_DWORD *)(v5 + 2796) = self->_dynamicMaxClusterSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x40000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x200000000) == 0)
  {
LABEL_251:
    if ((v16 & 0x100000000) == 0)
      goto LABEL_252;
    goto LABEL_353;
  }
LABEL_352:
  *(_DWORD *)(v5 + 2808) = self->_dynamicMinArticleSetSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x200000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x100000000) == 0)
  {
LABEL_252:
    if ((v16 & 0x20000000) == 0)
      goto LABEL_253;
    goto LABEL_354;
  }
LABEL_353:
  *(_DWORD *)(v5 + 2804) = self->_dynamicMinArticleSetSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x100000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x20000000) == 0)
  {
LABEL_253:
    if ((v16 & 0x10000000) == 0)
      goto LABEL_254;
    goto LABEL_355;
  }
LABEL_354:
  *(_DWORD *)(v5 + 2792) = self->_dynamicMaxArticleSetSizeIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x20000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x10000000) == 0)
  {
LABEL_254:
    if ((v20 & 4) == 0)
      goto LABEL_255;
    goto LABEL_356;
  }
LABEL_355:
  *(_DWORD *)(v5 + 2788) = self->_dynamicMaxArticleSetSizeIPad;
  *(_QWORD *)(v5 + 3008) |= 0x10000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 4) == 0)
  {
LABEL_255:
    if ((v14 & 0x20000000000) == 0)
      goto LABEL_256;
    goto LABEL_357;
  }
LABEL_356:
  *(_BYTE *)(v5 + 2956) = self->_deleteOrphansFromOverflow;
  *(_WORD *)(v5 + 3016) |= 4u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x20000000000) == 0)
  {
LABEL_256:
    if ((v14 & 0x10000) == 0)
      goto LABEL_257;
    goto LABEL_358;
  }
LABEL_357:
  *(double *)(v5 + 1360) = self->_overflownOrphansFilterCoeff;
  *(_QWORD *)(v5 + 2984) |= 0x20000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x10000) == 0)
  {
LABEL_257:
    if ((v14 & 0x8000) == 0)
      goto LABEL_258;
    goto LABEL_359;
  }
LABEL_358:
  *(double *)(v5 + 1160) = self->_moveAboutnessWeightRatioIPhone;
  *(_QWORD *)(v5 + 2984) |= 0x10000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v14 & 0x8000) == 0)
  {
LABEL_258:
    if ((v18 & 0x80000000) == 0)
      goto LABEL_259;
    goto LABEL_360;
  }
LABEL_359:
  *(double *)(v5 + 1152) = self->_moveAboutnessWeightRatioIPad;
  *(_QWORD *)(v5 + 2984) |= 0x8000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x80000000) == 0)
  {
LABEL_259:
    if ((v18 & 0x100000000) == 0)
      goto LABEL_260;
    goto LABEL_361;
  }
LABEL_360:
  *(double *)(v5 + 768) = self->_groupingDoubleParam1;
  *(_QWORD *)(v5 + 2976) |= 0x80000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x100000000) == 0)
  {
LABEL_260:
    if ((v18 & 0x200000000) == 0)
      goto LABEL_261;
    goto LABEL_362;
  }
LABEL_361:
  *(double *)(v5 + 776) = self->_groupingDoubleParam2;
  *(_QWORD *)(v5 + 2976) |= 0x100000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x200000000) == 0)
  {
LABEL_261:
    if ((v18 & 0x400000000) == 0)
      goto LABEL_262;
    goto LABEL_363;
  }
LABEL_362:
  *(double *)(v5 + 784) = self->_groupingDoubleParam3;
  *(_QWORD *)(v5 + 2976) |= 0x200000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x400000000) == 0)
  {
LABEL_262:
    if ((v18 & 0x800000000) == 0)
      goto LABEL_263;
    goto LABEL_364;
  }
LABEL_363:
  *(double *)(v5 + 792) = self->_groupingDoubleParam4;
  *(_QWORD *)(v5 + 2976) |= 0x400000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x800000000) == 0)
  {
LABEL_263:
    if ((v18 & 0x1000000000) == 0)
      goto LABEL_264;
    goto LABEL_365;
  }
LABEL_364:
  *(double *)(v5 + 800) = self->_groupingDoubleParam5;
  *(_QWORD *)(v5 + 2976) |= 0x800000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v18 & 0x1000000000) == 0)
  {
LABEL_264:
    if ((v16 & 0x400000000) == 0)
      goto LABEL_265;
    goto LABEL_366;
  }
LABEL_365:
  *(double *)(v5 + 808) = self->_groupingDoubleParam6;
  *(_QWORD *)(v5 + 2976) |= 0x1000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x400000000) == 0)
  {
LABEL_265:
    if ((v16 & 0x800000000) == 0)
      goto LABEL_266;
    goto LABEL_367;
  }
LABEL_366:
  *(_DWORD *)(v5 + 2812) = self->_groupingIntParam1;
  *(_QWORD *)(v5 + 3008) |= 0x400000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x800000000) == 0)
  {
LABEL_266:
    if ((v16 & 0x1000000000) == 0)
      goto LABEL_267;
    goto LABEL_368;
  }
LABEL_367:
  *(_DWORD *)(v5 + 2816) = self->_groupingIntParam2;
  *(_QWORD *)(v5 + 3008) |= 0x800000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000) == 0)
  {
LABEL_267:
    if ((v16 & 0x2000000000) == 0)
      goto LABEL_268;
    goto LABEL_369;
  }
LABEL_368:
  *(_DWORD *)(v5 + 2820) = self->_groupingIntParam3;
  *(_QWORD *)(v5 + 3008) |= 0x1000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x2000000000) == 0)
  {
LABEL_268:
    if ((v20 & 0x80) == 0)
      goto LABEL_269;
    goto LABEL_370;
  }
LABEL_369:
  *(_DWORD *)(v5 + 2824) = self->_groupingIntParam4;
  *(_QWORD *)(v5 + 3008) |= 0x2000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 0x80) == 0)
  {
LABEL_269:
    if ((v20 & 0x100) == 0)
      goto LABEL_270;
    goto LABEL_371;
  }
LABEL_370:
  *(_BYTE *)(v5 + 2961) = self->_groupingBoolParam1;
  *(_WORD *)(v5 + 3016) |= 0x80u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 0x100) == 0)
  {
LABEL_270:
    if ((v20 & 0x10) == 0)
      goto LABEL_271;
    goto LABEL_372;
  }
LABEL_371:
  *(_BYTE *)(v5 + 2962) = self->_groupingBoolParam2;
  *(_WORD *)(v5 + 3016) |= 0x100u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 0x10) == 0)
  {
LABEL_271:
    if ((v20 & 8) == 0)
      goto LABEL_272;
    goto LABEL_373;
  }
LABEL_372:
  *(_BYTE *)(v5 + 2958) = self->_enableOptimizedLayoutIPhone;
  *(_WORD *)(v5 + 3016) |= 0x10u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v20 & 8) == 0)
  {
LABEL_272:
    if ((v16 & 0x4000000000000000) == 0)
      goto LABEL_273;
    goto LABEL_374;
  }
LABEL_373:
  *(_BYTE *)(v5 + 2957) = self->_enableOptimizedLayoutIPad;
  *(_WORD *)(v5 + 3016) |= 8u;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x4000000000000000) == 0)
  {
LABEL_273:
    if ((v16 & 0x2000000000000000) == 0)
      goto LABEL_274;
    goto LABEL_375;
  }
LABEL_374:
  *(_DWORD *)(v5 + 2924) = self->_optimizedLayoutSizeThresholdIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x4000000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x2000000000000000) == 0)
  {
LABEL_274:
    if ((v16 & 0x1000000000000000) == 0)
      goto LABEL_275;
    goto LABEL_376;
  }
LABEL_375:
  *(_DWORD *)(v5 + 2920) = self->_optimizedLayoutSizeThresholdIPad;
  *(_QWORD *)(v5 + 3008) |= 0x2000000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v16 = *((_QWORD *)&self->_has + 5);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((v16 & 0x1000000000000000) == 0)
  {
LABEL_275:
    if ((v16 & 0x800000000000000) == 0)
      goto LABEL_276;
    goto LABEL_377;
  }
LABEL_376:
  *(_DWORD *)(v5 + 2916) = self->_optimizedLayoutIncrementUnitIPhone;
  *(_QWORD *)(v5 + 3008) |= 0x1000000000000000uLL;
  v15 = *((_QWORD *)&self->_has + 4);
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v19 = (uint64_t)self->_has;
  v18 = *((_QWORD *)&self->_has + 1);
  v20 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000000) == 0)
  {
LABEL_276:
    if ((v15 & 0x2000000000000000) == 0)
      goto LABEL_277;
    goto LABEL_378;
  }
LABEL_377:
  *(_DWORD *)(v5 + 2912) = self->_optimizedLayoutIncrementUnitIPad;
  *(_QWORD *)(v5 + 3008) |= 0x800000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x2000000000000000) == 0)
  {
LABEL_277:
    if ((v15 & 0x4000000000000000) == 0)
      goto LABEL_278;
    goto LABEL_379;
  }
LABEL_378:
  *(double *)(v5 + 2544) = self->_utilityWeightAlpha;
  *(_QWORD *)(v5 + 3000) |= 0x2000000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  v20 = *((_WORD *)&self->_has + 24);
  if ((v15 & 0x4000000000000000) == 0)
  {
LABEL_278:
    if ((v20 & 0x800) == 0)
      goto LABEL_279;
    goto LABEL_380;
  }
LABEL_379:
  *(double *)(v5 + 2552) = self->_utilityWeightBeta;
  *(_QWORD *)(v5 + 3000) |= 0x4000000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((*((_WORD *)&self->_has + 24) & 0x800) == 0)
  {
LABEL_279:
    if ((v15 & 0x10) == 0)
      goto LABEL_280;
    goto LABEL_381;
  }
LABEL_380:
  *(_BYTE *)(v5 + 2965) = self->_replaceAboutness;
  *(_WORD *)(v5 + 3016) |= 0x800u;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v15 & 0x10) == 0)
  {
LABEL_280:
    if ((v15 & 8) == 0)
      goto LABEL_281;
    goto LABEL_382;
  }
LABEL_381:
  *(double *)(v5 + 2088) = self->_tagPersonalizationCoeffIPhone;
  *(_QWORD *)(v5 + 3000) |= 0x10uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v15 & 8) == 0)
  {
LABEL_281:
    if ((v17 & 0x200000000000000) == 0)
      goto LABEL_282;
    goto LABEL_383;
  }
LABEL_382:
  *(double *)(v5 + 2080) = self->_tagPersonalizationCoeffIPad;
  *(_QWORD *)(v5 + 3000) |= 8uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v17 & 0x200000000000000) == 0)
  {
LABEL_282:
    if ((v17 & 0x100000000000000) == 0)
      goto LABEL_283;
    goto LABEL_384;
  }
LABEL_383:
  *(double *)(v5 + 2000) = self->_tagArticleScoreCoeffIPhone;
  *(_QWORD *)(v5 + 2992) |= 0x200000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v17 & 0x100000000000000) == 0)
  {
LABEL_283:
    if ((v17 & 0x4000000000000000) == 0)
      goto LABEL_284;
    goto LABEL_385;
  }
LABEL_384:
  *(double *)(v5 + 1992) = self->_tagArticleScoreCoeffIPad;
  *(_QWORD *)(v5 + 2992) |= 0x100000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v17 & 0x4000000000000000) == 0)
  {
LABEL_284:
    if ((v17 & 0x2000000000000000) == 0)
      goto LABEL_285;
    goto LABEL_386;
  }
LABEL_385:
  *(double *)(v5 + 2040) = self->_tagFavoritedCoeffIPhone;
  *(_QWORD *)(v5 + 2992) |= 0x4000000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v17 & 0x2000000000000000) == 0)
  {
LABEL_285:
    if ((v19 & 0x4000) == 0)
      goto LABEL_286;
    goto LABEL_387;
  }
LABEL_386:
  *(double *)(v5 + 2032) = self->_tagFavoritedCoeffIPad;
  *(_QWORD *)(v5 + 2992) |= 0x2000000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  v19 = (uint64_t)self->_has;
  if ((v19 & 0x4000) == 0)
  {
LABEL_286:
    if ((v19 & 0x2000) == 0)
      goto LABEL_287;
    goto LABEL_388;
  }
LABEL_387:
  *(double *)(v5 + 120) = self->_articleEntityScoreWeightRatioIPhone;
  *(_QWORD *)(v5 + 2968) |= 0x4000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)&self->_has & 0x2000) == 0)
  {
LABEL_287:
    if ((v14 & 0x800000) == 0)
      goto LABEL_288;
    goto LABEL_389;
  }
LABEL_388:
  *(double *)(v5 + 112) = self->_articleEntityScoreWeightRatioIPad;
  *(_QWORD *)(v5 + 2968) |= 0x2000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x800000) == 0)
  {
LABEL_288:
    if ((v15 & 0x80000000000000) == 0)
      goto LABEL_289;
    goto LABEL_390;
  }
LABEL_389:
  *(double *)(v5 + 1216) = self->_muteImpressionValue;
  *(_QWORD *)(v5 + 2984) |= 0x800000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x80000000000000) == 0)
  {
LABEL_289:
    if ((v14 & 0x200000) == 0)
      goto LABEL_290;
    goto LABEL_391;
  }
LABEL_390:
  *(double *)(v5 + 2496) = self->_unmuteImpressionValue;
  *(_QWORD *)(v5 + 3000) |= 0x80000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x200000) == 0)
  {
LABEL_290:
    if ((v15 & 0x20000000000000) == 0)
      goto LABEL_291;
    goto LABEL_392;
  }
LABEL_391:
  *(double *)(v5 + 1200) = self->_muteClickValue;
  *(_QWORD *)(v5 + 2984) |= 0x200000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x20000000000000) == 0)
  {
LABEL_291:
    if ((v14 & 0x1000000) == 0)
      goto LABEL_292;
    goto LABEL_393;
  }
LABEL_392:
  *(double *)(v5 + 2480) = self->_unmuteClickValue;
  *(_QWORD *)(v5 + 3000) |= 0x20000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x1000000) == 0)
  {
LABEL_292:
    if ((v15 & 0x100000000000000) == 0)
      goto LABEL_293;
    goto LABEL_394;
  }
LABEL_393:
  *(double *)(v5 + 1224) = self->_muteImpressionValueBaseline;
  *(_QWORD *)(v5 + 2984) |= 0x1000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v15 & 0x100000000000000) == 0)
  {
LABEL_293:
    if ((v14 & 0x400000) == 0)
      goto LABEL_294;
    goto LABEL_395;
  }
LABEL_394:
  *(double *)(v5 + 2504) = self->_unmuteImpressionValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x100000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v15 = *((_QWORD *)&self->_has + 4);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((v14 & 0x400000) == 0)
  {
LABEL_294:
    if ((v15 & 0x40000000000000) == 0)
      goto LABEL_295;
    goto LABEL_396;
  }
LABEL_395:
  *(double *)(v5 + 1208) = self->_muteClickValueBaseline;
  *(_QWORD *)(v5 + 2984) |= 0x400000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v18 = *((_QWORD *)&self->_has + 1);
  v14 = *((_QWORD *)&self->_has + 2);
  if ((*((_QWORD *)&self->_has + 4) & 0x40000000000000) == 0)
  {
LABEL_295:
    if ((v17 & 0x2000000) == 0)
      goto LABEL_296;
    goto LABEL_397;
  }
LABEL_396:
  *(double *)(v5 + 2488) = self->_unmuteClickValueBaseline;
  *(_QWORD *)(v5 + 3000) |= 0x40000000000000uLL;
  v14 = *((_QWORD *)&self->_has + 2);
  v17 = *((_QWORD *)&self->_has + 3);
  v18 = *((_QWORD *)&self->_has + 1);
  if ((v17 & 0x2000000) == 0)
  {
LABEL_296:
    if ((v14 & 0x2000000) == 0)
      goto LABEL_297;
    goto LABEL_398;
  }
LABEL_397:
  *(double *)(v5 + 1744) = self->_saturatedMutedCountFactor;
  *(_QWORD *)(v5 + 2992) |= 0x2000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  v18 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 2) & 0x2000000) == 0)
  {
LABEL_297:
    if ((v18 & 0x80000000000000) == 0)
      goto LABEL_298;
    goto LABEL_399;
  }
LABEL_398:
  *(double *)(v5 + 1232) = self->_mutedVoteCoefficient;
  *(_QWORD *)(v5 + 2984) |= 0x2000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((*((_QWORD *)&self->_has + 1) & 0x80000000000000) == 0)
  {
LABEL_298:
    if ((v17 & 8) == 0)
      goto LABEL_299;
    goto LABEL_400;
  }
LABEL_399:
  *(double *)(v5 + 960) = self->_importanceScalar;
  *(_QWORD *)(v5 + 2976) |= 0x80000000000000uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 8) == 0)
  {
LABEL_299:
    if ((v17 & 4) == 0)
      goto LABEL_300;
    goto LABEL_401;
  }
LABEL_400:
  *(double *)(v5 + 1568) = self->_publisherDiversityMinSubscriptions;
  *(_QWORD *)(v5 + 2992) |= 8uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 4) == 0)
  {
LABEL_300:
    if ((v17 & 1) == 0)
      goto LABEL_301;
    goto LABEL_402;
  }
LABEL_401:
  *(double *)(v5 + 1560) = self->_publisherDiversityMinArticleCount;
  *(_QWORD *)(v5 + 2992) |= 4uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 1) == 0)
  {
LABEL_301:
    if ((v17 & 2) == 0)
      goto LABEL_302;
    goto LABEL_403;
  }
LABEL_402:
  *(double *)(v5 + 1544) = self->_publisherDiversityMaxArticleCount;
  *(_QWORD *)(v5 + 2992) |= 1uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 2) == 0)
  {
LABEL_302:
    if ((v17 & 0x400000) == 0)
      goto LABEL_303;
    goto LABEL_404;
  }
LABEL_403:
  *(double *)(v5 + 1552) = self->_publisherDiversityMaxArticleFilter;
  *(_QWORD *)(v5 + 2992) |= 2uLL;
  v17 = *((_QWORD *)&self->_has + 3);
  if ((v17 & 0x400000) == 0)
  {
LABEL_303:
    if ((v17 & 0x1000000) == 0)
      goto LABEL_305;
    goto LABEL_304;
  }
LABEL_404:
  *(double *)(v5 + 1720) = self->_safariSignalWeight;
  *(_QWORD *)(v5 + 2992) |= 0x400000uLL;
  if ((*((_QWORD *)&self->_has + 3) & 0x1000000) != 0)
  {
LABEL_304:
    *(double *)(v5 + 1736) = self->_safariTimeDecayMultiplier;
    *(_QWORD *)(v5 + 2992) |= 0x1000000uLL;
  }
LABEL_305:
  v21 = *((_QWORD *)&self->_has + 3);
  if ((v21 & 0x100000) != 0)
  {
    *(double *)(v5 + 1704) = self->_safariOccurrenceDecayMultiplier;
    *(_QWORD *)(v5 + 2992) |= 0x100000uLL;
    v22 = *((_QWORD *)&self->_has + 4);
    v23 = *((_QWORD *)&self->_has + 5);
    v21 = *((_QWORD *)&self->_has + 3);
  }
  else
  {
    v22 = *((_QWORD *)&self->_has + 4);
    v23 = *((_QWORD *)&self->_has + 5);
  }
  v25 = *((_QWORD *)&self->_has + 1);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x400) != 0)
  {
    *(double *)(v5 + 88) = self->_appUsageSignalWeight;
    *(_QWORD *)(v5 + 2968) |= 0x400uLL;
    v22 = *((_QWORD *)&self->_has + 4);
    v23 = *((_QWORD *)&self->_has + 5);
    v24 = *((_QWORD *)&self->_has + 2);
    v21 = *((_QWORD *)&self->_has + 3);
    v26 = (uint64_t)self->_has;
    v25 = *((_QWORD *)&self->_has + 1);
    v27 = *((_WORD *)&self->_has + 24);
    if ((v26 & 0x1000) == 0)
    {
LABEL_409:
      if ((v26 & 0x100) == 0)
        goto LABEL_410;
      goto LABEL_463;
    }
  }
  else if ((v26 & 0x1000) == 0)
  {
    goto LABEL_409;
  }
  *(double *)(v5 + 104) = self->_appUsageTimeDecayMultiplier;
  *(_QWORD *)(v5 + 2968) |= 0x1000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x100) == 0)
  {
LABEL_410:
    if ((v26 & 0x40000) == 0)
      goto LABEL_411;
    goto LABEL_464;
  }
LABEL_463:
  *(double *)(v5 + 72) = self->_appUsageOccurrenceDecayMultiplier;
  *(_QWORD *)(v5 + 2968) |= 0x100uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x40000) == 0)
  {
LABEL_411:
    if ((v26 & 0x80000) == 0)
      goto LABEL_412;
    goto LABEL_465;
  }
LABEL_464:
  *(double *)(v5 + 152) = self->_autoFavoriteGroupableMinImpressions;
  *(_QWORD *)(v5 + 2968) |= 0x40000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x80000) == 0)
  {
LABEL_412:
    if ((v26 & 0x100000) == 0)
      goto LABEL_413;
    goto LABEL_466;
  }
LABEL_465:
  *(double *)(v5 + 160) = self->_autoFavoriteGroupableMinRate;
  *(_QWORD *)(v5 + 2968) |= 0x80000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x100000) == 0)
  {
LABEL_413:
    if ((v26 & 0x8000) == 0)
      goto LABEL_414;
    goto LABEL_467;
  }
LABEL_466:
  *(double *)(v5 + 168) = self->_autoFavoriteGroupableMinRelativeRate;
  *(_QWORD *)(v5 + 2968) |= 0x100000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x8000) == 0)
  {
LABEL_414:
    if ((v26 & 0x10000) == 0)
      goto LABEL_415;
    goto LABEL_468;
  }
LABEL_467:
  *(double *)(v5 + 128) = self->_autoFavoriteFetchableMinImpressions;
  *(_QWORD *)(v5 + 2968) |= 0x8000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x10000) == 0)
  {
LABEL_415:
    if ((v26 & 0x20000) == 0)
      goto LABEL_416;
    goto LABEL_469;
  }
LABEL_468:
  *(double *)(v5 + 136) = self->_autoFavoriteFetchableMinRate;
  *(_QWORD *)(v5 + 2968) |= 0x10000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x20000) == 0)
  {
LABEL_416:
    if ((v26 & 0x800000000) == 0)
      goto LABEL_417;
    goto LABEL_470;
  }
LABEL_469:
  *(double *)(v5 + 144) = self->_autoFavoriteFetchableMinRelativeRate;
  *(_QWORD *)(v5 + 2968) |= 0x20000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  v27 = *((_WORD *)&self->_has + 24);
  if ((v26 & 0x800000000) == 0)
  {
LABEL_417:
    if ((v27 & 1) == 0)
      goto LABEL_418;
    goto LABEL_471;
  }
LABEL_470:
  *(double *)(v5 + 288) = self->_averageSafariVisitsPerDay;
  *(_QWORD *)(v5 + 2968) |= 0x800000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((*((_WORD *)&self->_has + 24) & 1) == 0)
  {
LABEL_418:
    if ((v23 & 0x8000000000000000) == 0)
      goto LABEL_419;
    goto LABEL_472;
  }
LABEL_471:
  *(_DWORD *)(v5 + 2940) = self->_publisherDiversityMinPublisherCount;
  *(_WORD *)(v5 + 3016) |= 1u;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v23 & 0x8000000000000000) == 0)
  {
LABEL_419:
    if ((v24 & 0x8000000000000) == 0)
      goto LABEL_420;
    goto LABEL_473;
  }
LABEL_472:
  *(_DWORD *)(v5 + 2936) = self->_publisherDiversityMaxPublisherCount;
  *(_QWORD *)(v5 + 3008) |= 0x8000000000000000;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v24 & 0x8000000000000) == 0)
  {
LABEL_420:
    if ((v26 & 0x40000000000) == 0)
      goto LABEL_421;
    goto LABEL_474;
  }
LABEL_473:
  *(double *)(v5 + 1440) = self->_portraitUsageSignalWeight;
  *(_QWORD *)(v5 + 2984) |= 0x8000000000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x40000000000) == 0)
  {
LABEL_421:
    if ((v26 & 0x200000000000) == 0)
      goto LABEL_422;
    goto LABEL_475;
  }
LABEL_474:
  *(double *)(v5 + 344) = self->_cohortMembershipBaselineCtrWeight;
  *(_QWORD *)(v5 + 2968) |= 0x40000000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x200000000000) == 0)
  {
LABEL_422:
    if ((v26 & 0x800000000000) == 0)
      goto LABEL_423;
    goto LABEL_476;
  }
LABEL_475:
  *(double *)(v5 + 368) = self->_cohortMembershipCurveSteepness;
  *(_QWORD *)(v5 + 2968) |= 0x200000000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x800000000000) == 0)
  {
LABEL_423:
    if ((v26 & 0x800000) == 0)
      goto LABEL_424;
    goto LABEL_477;
  }
LABEL_476:
  *(double *)(v5 + 384) = self->_cohortMembershipMinWeightedImpressions;
  *(_QWORD *)(v5 + 2968) |= 0x800000000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x800000) == 0)
  {
LABEL_424:
    if ((v26 & 0x4000000) == 0)
      goto LABEL_425;
    goto LABEL_478;
  }
LABEL_477:
  *(double *)(v5 + 192) = self->_autoFavoriteMinImpressions;
  *(_QWORD *)(v5 + 2968) |= 0x800000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x4000000) == 0)
  {
LABEL_425:
    if ((v26 & 0x8000000) == 0)
      goto LABEL_426;
    goto LABEL_479;
  }
LABEL_478:
  *(double *)(v5 + 216) = self->_autoFavoriteMinRate;
  *(_QWORD *)(v5 + 2968) |= 0x4000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x8000000) == 0)
  {
LABEL_426:
    if ((v26 & 0x200000000) == 0)
      goto LABEL_427;
    goto LABEL_480;
  }
LABEL_479:
  *(double *)(v5 + 224) = self->_autoFavoriteMinRelativeRate;
  *(_QWORD *)(v5 + 2968) |= 0x8000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x200000000) == 0)
  {
LABEL_427:
    if ((v26 & 0x100000000) == 0)
      goto LABEL_428;
    goto LABEL_481;
  }
LABEL_480:
  *(double *)(v5 + 272) = self->_autoUnfavoriteFactor;
  *(_QWORD *)(v5 + 2968) |= 0x200000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v26 & 0x100000000) == 0)
  {
LABEL_428:
    if ((v25 & 0x40000000) == 0)
      goto LABEL_429;
    goto LABEL_482;
  }
LABEL_481:
  *(double *)(v5 + 264) = self->_autoGroupableFactor;
  *(_QWORD *)(v5 + 2968) |= 0x100000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  v25 = *((_QWORD *)&self->_has + 1);
  if ((v25 & 0x40000000) == 0)
  {
LABEL_429:
    if ((v25 & 0x100000000000000) == 0)
      goto LABEL_430;
    goto LABEL_483;
  }
LABEL_482:
  *(double *)(v5 + 760) = self->_groupImpressionBiasCorrectionFactor;
  *(_QWORD *)(v5 + 2976) |= 0x40000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x100000000000000) == 0)
  {
LABEL_430:
    if ((v23 & 0x40000) == 0)
      goto LABEL_431;
    goto LABEL_484;
  }
LABEL_483:
  *(double *)(v5 + 968) = self->_indexImpressionBiasCorrectionFactor;
  *(_QWORD *)(v5 + 2976) |= 0x100000000000000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x40000) == 0)
  {
LABEL_431:
    if ((v23 & 0x20000) == 0)
      goto LABEL_432;
    goto LABEL_485;
  }
LABEL_484:
  *(double *)(v5 + 2712) = self->_videoInitiatePlaybackImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x40000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x20000) == 0)
  {
LABEL_432:
    if ((v23 & 0x10000) == 0)
      goto LABEL_433;
    goto LABEL_486;
  }
LABEL_485:
  *(double *)(v5 + 2704) = self->_videoInitiatePlaybackClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x20000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x10000) == 0)
  {
LABEL_433:
    if ((v23 & 0x8000) == 0)
      goto LABEL_434;
    goto LABEL_487;
  }
LABEL_486:
  *(double *)(v5 + 2696) = self->_videoInitiatePlaybackBaselineImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x10000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x8000) == 0)
  {
LABEL_434:
    if ((v23 & 0x4000) == 0)
      goto LABEL_435;
    goto LABEL_488;
  }
LABEL_487:
  *(double *)(v5 + 2688) = self->_videoInitiatePlaybackBaselineClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x8000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x4000) == 0)
  {
LABEL_435:
    if ((v23 & 0x2000) == 0)
      goto LABEL_436;
    goto LABEL_489;
  }
LABEL_488:
  *(double *)(v5 + 2680) = self->_videoCompletePlaybackImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x4000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x2000) == 0)
  {
LABEL_436:
    if ((v23 & 0x1000) == 0)
      goto LABEL_437;
    goto LABEL_490;
  }
LABEL_489:
  *(double *)(v5 + 2672) = self->_videoCompletePlaybackClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x2000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v23 = *((_QWORD *)&self->_has + 5);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((v23 & 0x1000) == 0)
  {
LABEL_437:
    if ((v23 & 0x800) == 0)
      goto LABEL_438;
    goto LABEL_491;
  }
LABEL_490:
  *(double *)(v5 + 2664) = self->_videoCompletePlaybackBaselineImpressionValue;
  *(_QWORD *)(v5 + 3008) |= 0x1000uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v21 = *((_QWORD *)&self->_has + 3);
  v26 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 5) & 0x800) == 0)
  {
LABEL_438:
    if ((v21 & 0x800000000000000) == 0)
      goto LABEL_439;
    goto LABEL_492;
  }
LABEL_491:
  *(double *)(v5 + 2656) = self->_videoCompletePlaybackBaselineClickValue;
  *(_QWORD *)(v5 + 3008) |= 0x800uLL;
  v21 = *((_QWORD *)&self->_has + 3);
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v21 & 0x800000000000000) == 0)
  {
LABEL_439:
    if ((v21 & 0x400000000000000) == 0)
      goto LABEL_440;
    goto LABEL_493;
  }
LABEL_492:
  *(double *)(v5 + 2016) = self->_tagAutoFavoritedCoeffIPhone;
  *(_QWORD *)(v5 + 2992) |= 0x800000000000000uLL;
  v21 = *((_QWORD *)&self->_has + 3);
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v21 & 0x400000000000000) == 0)
  {
LABEL_440:
    if ((v22 & 1) == 0)
      goto LABEL_441;
    goto LABEL_494;
  }
LABEL_493:
  *(double *)(v5 + 2008) = self->_tagAutoFavoritedCoeffIPad;
  *(_QWORD *)(v5 + 2992) |= 0x400000000000000uLL;
  v21 = *((_QWORD *)&self->_has + 3);
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v22 & 1) == 0)
  {
LABEL_441:
    if ((v21 & 0x8000000000000000) == 0)
      goto LABEL_442;
    goto LABEL_495;
  }
LABEL_494:
  *(double *)(v5 + 2056) = self->_tagGroupableCoeffIPhone;
  *(_QWORD *)(v5 + 3000) |= 1uLL;
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x8000000000000000) == 0)
  {
LABEL_442:
    if ((v22 & 0x100) == 0)
      goto LABEL_443;
    goto LABEL_496;
  }
LABEL_495:
  *(double *)(v5 + 2048) = self->_tagGroupableCoeffIPad;
  *(_QWORD *)(v5 + 2992) |= 0x8000000000000000;
  v22 = *((_QWORD *)&self->_has + 4);
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v22 & 0x100) == 0)
  {
LABEL_443:
    if ((v22 & 0x80) == 0)
      goto LABEL_444;
    goto LABEL_497;
  }
LABEL_496:
  *(double *)(v5 + 2120) = self->_tagSpecificityCoeffIPhone;
  *(_QWORD *)(v5 + 3000) |= 0x100uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 4) & 0x80) == 0)
  {
LABEL_444:
    if ((v24 & 0x10000000000) == 0)
      goto LABEL_445;
    goto LABEL_498;
  }
LABEL_497:
  *(double *)(v5 + 2112) = self->_tagSpecificityCoeffIPad;
  *(_QWORD *)(v5 + 3000) |= 0x80uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v24 & 0x10000000000) == 0)
  {
LABEL_445:
    if ((v26 & 0x2000000) == 0)
      goto LABEL_446;
    goto LABEL_499;
  }
LABEL_498:
  *(double *)(v5 + 1352) = self->_optionalTagSpecificityScore;
  *(_QWORD *)(v5 + 2984) |= 0x10000000000uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v26 & 0x2000000) == 0)
  {
LABEL_446:
    if ((v26 & 0x20000000) == 0)
      goto LABEL_447;
    goto LABEL_500;
  }
LABEL_499:
  *(double *)(v5 + 208) = self->_autoFavoriteMinObservationsSafari;
  *(_QWORD *)(v5 + 2968) |= 0x2000000uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v26 & 0x20000000) == 0)
  {
LABEL_447:
    if ((v26 & 0x1000000) == 0)
      goto LABEL_448;
    goto LABEL_501;
  }
LABEL_500:
  *(double *)(v5 + 240) = self->_autoFavoriteMinScoreSafari;
  *(_QWORD *)(v5 + 2968) |= 0x20000000uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  v26 = (uint64_t)self->_has;
  if ((v26 & 0x1000000) == 0)
  {
LABEL_448:
    if ((v26 & 0x10000000) == 0)
      goto LABEL_449;
    goto LABEL_502;
  }
LABEL_501:
  *(double *)(v5 + 200) = self->_autoFavoriteMinObservationsExtAppUsage;
  *(_QWORD *)(v5 + 2968) |= 0x1000000uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  if ((*(_QWORD *)&self->_has & 0x10000000) == 0)
  {
LABEL_449:
    if ((v24 & 0x80000000000) == 0)
      goto LABEL_450;
    goto LABEL_503;
  }
LABEL_502:
  *(double *)(v5 + 232) = self->_autoFavoriteMinScoreExtAppUsage;
  *(_QWORD *)(v5 + 2968) |= 0x10000000uLL;
  v24 = *((_QWORD *)&self->_has + 2);
  if ((v24 & 0x80000000000) == 0)
  {
LABEL_450:
    if ((v24 & 0x100000000000) == 0)
      goto LABEL_452;
    goto LABEL_451;
  }
LABEL_503:
  *(double *)(v5 + 1376) = self->_portraitDecayRate;
  *(_QWORD *)(v5 + 2984) |= 0x80000000000uLL;
  if ((*((_QWORD *)&self->_has + 2) & 0x100000000000) != 0)
  {
LABEL_451:
    *(double *)(v5 + 1384) = self->_portraitGlobalThreshold;
    *(_QWORD *)(v5 + 2984) |= 0x100000000000uLL;
  }
LABEL_452:
  v61 = 0u;
  v62 = 0u;
  v59 = 0u;
  v60 = 0u;
  v28 = self->_portraitTagThresholds;
  v29 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v28, "countByEnumeratingWithState:objects:count:", &v59, v64, 16);
  if (v29)
  {
    v30 = v29;
    v31 = *(_QWORD *)v60;
    do
    {
      for (i = 0; i != v30; ++i)
      {
        if (*(_QWORD *)v60 != v31)
          objc_enumerationMutation(v28);
        v33 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v59 + 1) + 8 * i), "copyWithZone:", a3);
        objc_msgSend((id)v6, "addPortraitTagThresholds:", v33);

      }
      v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v28, "countByEnumeratingWithState:objects:count:", &v59, v64, 16);
    }
    while (v30);
  }

  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x400000000000) != 0)
  {
    *(double *)(v6 + 1400) = self->_portraitImpressionSlope;
    *(_QWORD *)(v6 + 2984) |= 0x400000000000uLL;
    v35 = *((_QWORD *)&self->_has + 4);
    v36 = *((_QWORD *)&self->_has + 5);
    v34 = *((_QWORD *)&self->_has + 2);
  }
  else
  {
    v35 = *((_QWORD *)&self->_has + 4);
    v36 = *((_QWORD *)&self->_has + 5);
  }
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x200000000000) != 0)
  {
    *(double *)(v6 + 1392) = self->_portraitImpressionIntercept;
    *(_QWORD *)(v6 + 2984) |= 0x200000000000uLL;
    v35 = *((_QWORD *)&self->_has + 4);
    v36 = *((_QWORD *)&self->_has + 5);
    v34 = *((_QWORD *)&self->_has + 2);
    v37 = *((_QWORD *)&self->_has + 3);
    v39 = (uint64_t)self->_has;
    v38 = *((_QWORD *)&self->_has + 1);
    v40 = *((_WORD *)&self->_has + 24);
    if ((v34 & 0x2000000000000) == 0)
    {
LABEL_508:
      if ((v34 & 0x1000000000000) == 0)
        goto LABEL_509;
      goto LABEL_612;
    }
  }
  else if ((v34 & 0x2000000000000) == 0)
  {
    goto LABEL_508;
  }
  *(double *)(v6 + 1424) = self->_portraitRateSlope;
  *(_QWORD *)(v6 + 2984) |= 0x2000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x1000000000000) == 0)
  {
LABEL_509:
    if ((v34 & 0x200000000) == 0)
      goto LABEL_510;
    goto LABEL_613;
  }
LABEL_612:
  *(double *)(v6 + 1416) = self->_portraitRateIntercept;
  *(_QWORD *)(v6 + 2984) |= 0x1000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x200000000) == 0)
  {
LABEL_510:
    if ((v34 & 0x100000000) == 0)
      goto LABEL_511;
    goto LABEL_614;
  }
LABEL_613:
  *(double *)(v6 + 1296) = self->_newsTodayWidgetPresentationImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x200000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x100000000) == 0)
  {
LABEL_511:
    if ((v34 & 0x80000000) == 0)
      goto LABEL_512;
    goto LABEL_615;
  }
LABEL_614:
  *(double *)(v6 + 1288) = self->_newsTodayWidgetPresentationClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x100000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_512:
    if ((v34 & 0x40000000) == 0)
      goto LABEL_513;
    goto LABEL_616;
  }
LABEL_615:
  *(double *)(v6 + 1280) = self->_newsTodayWidgetPresentationBaselineImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x80000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x40000000) == 0)
  {
LABEL_513:
    if ((v34 & 0x20000000) == 0)
      goto LABEL_514;
    goto LABEL_617;
  }
LABEL_616:
  *(double *)(v6 + 1272) = self->_newsTodayWidgetPresentationBaselineClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x40000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x20000000) == 0)
  {
LABEL_514:
    if ((v34 & 0x10000000) == 0)
      goto LABEL_515;
    goto LABEL_618;
  }
LABEL_617:
  *(double *)(v6 + 1264) = self->_newsTodayWidgetClickImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x20000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x10000000) == 0)
  {
LABEL_515:
    if ((v34 & 0x8000000) == 0)
      goto LABEL_516;
    goto LABEL_619;
  }
LABEL_618:
  *(double *)(v6 + 1256) = self->_newsTodayWidgetClickClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x10000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x8000000) == 0)
  {
LABEL_516:
    if ((v34 & 0x4000000) == 0)
      goto LABEL_517;
    goto LABEL_620;
  }
LABEL_619:
  *(double *)(v6 + 1248) = self->_newsTodayWidgetClickBaselineImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x8000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x4000000) == 0)
  {
LABEL_517:
    if ((v34 & 0x2000000000) == 0)
      goto LABEL_518;
    goto LABEL_621;
  }
LABEL_620:
  *(double *)(v6 + 1240) = self->_newsTodayWidgetClickBaselineClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x4000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x2000000000) == 0)
  {
LABEL_518:
    if ((v34 & 0x1000000000) == 0)
      goto LABEL_519;
    goto LABEL_622;
  }
LABEL_621:
  *(double *)(v6 + 1328) = self->_newsTodayWidgetVideoPlaybackImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x2000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x1000000000) == 0)
  {
LABEL_519:
    if ((v34 & 0x800000000) == 0)
      goto LABEL_520;
    goto LABEL_623;
  }
LABEL_622:
  *(double *)(v6 + 1320) = self->_newsTodayWidgetVideoPlaybackClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x1000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x800000000) == 0)
  {
LABEL_520:
    if ((v34 & 0x400000000) == 0)
      goto LABEL_521;
    goto LABEL_624;
  }
LABEL_623:
  *(double *)(v6 + 1312) = self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue;
  *(_QWORD *)(v6 + 2984) |= 0x800000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x400000000) == 0)
  {
LABEL_521:
    if ((v39 & 0x1000000000000000) == 0)
      goto LABEL_522;
    goto LABEL_625;
  }
LABEL_624:
  *(double *)(v6 + 1304) = self->_newsTodayWidgetVideoPlaybackBaselineClickValue;
  *(_QWORD *)(v6 + 2984) |= 0x400000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x1000000000000000) == 0)
  {
LABEL_522:
    if ((v39 & 0x4000000000000) == 0)
      goto LABEL_523;
    goto LABEL_626;
  }
LABEL_625:
  *(double *)(v6 + 488) = self->_ctrWithZeroSubscribed;
  *(_QWORD *)(v6 + 2968) |= 0x1000000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x4000000000000) == 0)
  {
LABEL_523:
    if ((v39 & 0x200000000000000) == 0)
      goto LABEL_524;
    goto LABEL_627;
  }
LABEL_626:
  *(double *)(v6 + 408) = self->_ctrWithOneSubscribed;
  *(_QWORD *)(v6 + 2968) |= 0x4000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x200000000000000) == 0)
  {
LABEL_524:
    if ((v39 & 0x40000000000000) == 0)
      goto LABEL_525;
    goto LABEL_628;
  }
LABEL_627:
  *(double *)(v6 + 464) = self->_ctrWithTwoSubscribed;
  *(_QWORD *)(v6 + 2968) |= 0x200000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x40000000000000) == 0)
  {
LABEL_525:
    if ((v39 & 0x800000000000000) == 0)
      goto LABEL_526;
    goto LABEL_629;
  }
LABEL_628:
  *(double *)(v6 + 440) = self->_ctrWithThreeSubscribed;
  *(_QWORD *)(v6 + 2968) |= 0x40000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x800000000000000) == 0)
  {
LABEL_526:
    if ((v39 & 0x2000000000000) == 0)
      goto LABEL_527;
    goto LABEL_630;
  }
LABEL_629:
  *(double *)(v6 + 480) = self->_ctrWithZeroMuted;
  *(_QWORD *)(v6 + 2968) |= 0x800000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x2000000000000) == 0)
  {
LABEL_527:
    if ((v39 & 0x100000000000000) == 0)
      goto LABEL_528;
    goto LABEL_631;
  }
LABEL_630:
  *(double *)(v6 + 400) = self->_ctrWithOneMuted;
  *(_QWORD *)(v6 + 2968) |= 0x2000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x100000000000000) == 0)
  {
LABEL_528:
    if ((v39 & 0x20000000000000) == 0)
      goto LABEL_529;
    goto LABEL_632;
  }
LABEL_631:
  *(double *)(v6 + 456) = self->_ctrWithTwoMuted;
  *(_QWORD *)(v6 + 2968) |= 0x100000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x20000000000000) == 0)
  {
LABEL_529:
    if ((v39 & 0x400000000000000) == 0)
      goto LABEL_530;
    goto LABEL_633;
  }
LABEL_632:
  *(double *)(v6 + 432) = self->_ctrWithThreeMuted;
  *(_QWORD *)(v6 + 2968) |= 0x20000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x400000000000000) == 0)
  {
LABEL_530:
    if ((v39 & 0x1000000000000) == 0)
      goto LABEL_531;
    goto LABEL_634;
  }
LABEL_633:
  *(double *)(v6 + 472) = self->_ctrWithZeroAutofavorited;
  *(_QWORD *)(v6 + 2968) |= 0x400000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x1000000000000) == 0)
  {
LABEL_531:
    if ((v39 & 0x80000000000000) == 0)
      goto LABEL_532;
    goto LABEL_635;
  }
LABEL_634:
  *(double *)(v6 + 392) = self->_ctrWithOneAutofavorited;
  *(_QWORD *)(v6 + 2968) |= 0x1000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x80000000000000) == 0)
  {
LABEL_532:
    if ((v39 & 0x10000000000000) == 0)
      goto LABEL_533;
    goto LABEL_636;
  }
LABEL_635:
  *(double *)(v6 + 448) = self->_ctrWithTwoAutofavorited;
  *(_QWORD *)(v6 + 2968) |= 0x80000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x10000000000000) == 0)
  {
LABEL_533:
    if ((v39 & 0x400000000) == 0)
      goto LABEL_534;
    goto LABEL_637;
  }
LABEL_636:
  *(double *)(v6 + 424) = self->_ctrWithThreeAutofavorited;
  *(_QWORD *)(v6 + 2968) |= 0x10000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x400000000) == 0)
  {
LABEL_534:
    if ((v37 & 0x20) == 0)
      goto LABEL_535;
    goto LABEL_638;
  }
LABEL_637:
  *(double *)(v6 + 280) = self->_autofavoritedVoteCoefficient;
  *(_QWORD *)(v6 + 2968) |= 0x400000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x20) == 0)
  {
LABEL_535:
    if ((v38 & 0x20000000) == 0)
      goto LABEL_536;
    goto LABEL_639;
  }
LABEL_638:
  *(double *)(v6 + 1584) = self->_realTimeUserFeedbackCoefficient;
  *(_QWORD *)(v6 + 2992) |= 0x20uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v38 & 0x20000000) == 0)
  {
LABEL_536:
    if ((v38 & 0x10000000) == 0)
      goto LABEL_537;
    goto LABEL_640;
  }
LABEL_639:
  *(double *)(v6 + 752) = self->_globalScoreToCtrSlope;
  *(_QWORD *)(v6 + 2976) |= 0x20000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v38 & 0x10000000) == 0)
  {
LABEL_537:
    if ((v39 & 0x1000000000) == 0)
      goto LABEL_538;
    goto LABEL_641;
  }
LABEL_640:
  *(double *)(v6 + 744) = self->_globalScoreToCtrIntercept;
  *(_QWORD *)(v6 + 2976) |= 0x10000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x1000000000) == 0)
  {
LABEL_538:
    if ((v39 & 0x80) == 0)
      goto LABEL_539;
    goto LABEL_642;
  }
LABEL_641:
  *(double *)(v6 + 296) = self->_baselineArticleScore;
  *(_QWORD *)(v6 + 2968) |= 0x1000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x80) == 0)
  {
LABEL_539:
    if ((v39 & 0x40) == 0)
      goto LABEL_540;
    goto LABEL_643;
  }
LABEL_642:
  *(double *)(v6 + 64) = self->_appInstallImpressionValue;
  *(_QWORD *)(v6 + 2968) |= 0x80uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x40) == 0)
  {
LABEL_540:
    if ((v39 & 0x20) == 0)
      goto LABEL_541;
    goto LABEL_644;
  }
LABEL_643:
  *(double *)(v6 + 56) = self->_appInstallClickValue;
  *(_QWORD *)(v6 + 2968) |= 0x40uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x20) == 0)
  {
LABEL_541:
    if ((v39 & 0x10) == 0)
      goto LABEL_542;
    goto LABEL_645;
  }
LABEL_644:
  *(double *)(v6 + 48) = self->_appInstallBaselineImpressionValue;
  *(_QWORD *)(v6 + 2968) |= 0x20uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x10) == 0)
  {
LABEL_542:
    if ((v39 & 8) == 0)
      goto LABEL_543;
    goto LABEL_646;
  }
LABEL_645:
  *(double *)(v6 + 40) = self->_appInstallBaselineClickValue;
  *(_QWORD *)(v6 + 2968) |= 0x10uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 8) == 0)
  {
LABEL_543:
    if ((v39 & 4) == 0)
      goto LABEL_544;
    goto LABEL_647;
  }
LABEL_646:
  *(double *)(v6 + 32) = self->_appInFocusImpressionValue;
  *(_QWORD *)(v6 + 2968) |= 8uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 4) == 0)
  {
LABEL_544:
    if ((v39 & 2) == 0)
      goto LABEL_545;
    goto LABEL_648;
  }
LABEL_647:
  *(double *)(v6 + 24) = self->_appInFocusClickValue;
  *(_QWORD *)(v6 + 2968) |= 4uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 2) == 0)
  {
LABEL_545:
    if ((v39 & 1) == 0)
      goto LABEL_546;
    goto LABEL_649;
  }
LABEL_648:
  *(double *)(v6 + 16) = self->_appInFocusBaselineImpressionValue;
  *(_QWORD *)(v6 + 2968) |= 2uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 1) == 0)
  {
LABEL_546:
    if ((v37 & 0x80000) == 0)
      goto LABEL_547;
    goto LABEL_650;
  }
LABEL_649:
  *(double *)(v6 + 8) = self->_appInFocusBaselineClickValue;
  *(_QWORD *)(v6 + 2968) |= 1uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x80000) == 0)
  {
LABEL_547:
    if ((v37 & 0x40000) == 0)
      goto LABEL_548;
    goto LABEL_651;
  }
LABEL_650:
  *(double *)(v6 + 1696) = self->_safariHistoryImpressionValue;
  *(_QWORD *)(v6 + 2992) |= 0x80000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x40000) == 0)
  {
LABEL_548:
    if ((v37 & 0x20000) == 0)
      goto LABEL_549;
    goto LABEL_652;
  }
LABEL_651:
  *(double *)(v6 + 1688) = self->_safariHistoryClickValue;
  *(_QWORD *)(v6 + 2992) |= 0x40000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x20000) == 0)
  {
LABEL_549:
    if ((v37 & 0x10000) == 0)
      goto LABEL_550;
    goto LABEL_653;
  }
LABEL_652:
  *(double *)(v6 + 1680) = self->_safariHistoryBaselineImpressionValue;
  *(_QWORD *)(v6 + 2992) |= 0x20000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x10000) == 0)
  {
LABEL_550:
    if ((v36 & 4) == 0)
      goto LABEL_551;
    goto LABEL_654;
  }
LABEL_653:
  *(double *)(v6 + 1672) = self->_safariHistoryBaselineClickValue;
  *(_QWORD *)(v6 + 2992) |= 0x10000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 4) == 0)
  {
LABEL_551:
    if ((v36 & 2) == 0)
      goto LABEL_552;
    goto LABEL_655;
  }
LABEL_654:
  *(double *)(v6 + 2584) = self->_videoComplete25ImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 4uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 2) == 0)
  {
LABEL_552:
    if ((v36 & 1) == 0)
      goto LABEL_553;
    goto LABEL_656;
  }
LABEL_655:
  *(double *)(v6 + 2576) = self->_videoComplete25ClickValue;
  *(_QWORD *)(v6 + 3008) |= 2uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 1) == 0)
  {
LABEL_553:
    if ((v35 & 0x8000000000000000) == 0)
      goto LABEL_554;
    goto LABEL_657;
  }
LABEL_656:
  *(double *)(v6 + 2568) = self->_videoComplete25BaselineImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 1uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v35 & 0x8000000000000000) == 0)
  {
LABEL_554:
    if ((v36 & 0x40) == 0)
      goto LABEL_555;
    goto LABEL_658;
  }
LABEL_657:
  *(double *)(v6 + 2560) = self->_videoComplete25BaselineClickValue;
  *(_QWORD *)(v6 + 3000) |= 0x8000000000000000;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x40) == 0)
  {
LABEL_555:
    if ((v36 & 0x20) == 0)
      goto LABEL_556;
    goto LABEL_659;
  }
LABEL_658:
  *(double *)(v6 + 2616) = self->_videoComplete50ImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 0x40uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x20) == 0)
  {
LABEL_556:
    if ((v36 & 0x10) == 0)
      goto LABEL_557;
    goto LABEL_660;
  }
LABEL_659:
  *(double *)(v6 + 2608) = self->_videoComplete50ClickValue;
  *(_QWORD *)(v6 + 3008) |= 0x20uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x10) == 0)
  {
LABEL_557:
    if ((v36 & 8) == 0)
      goto LABEL_558;
    goto LABEL_661;
  }
LABEL_660:
  *(double *)(v6 + 2600) = self->_videoComplete50BaselineImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 0x10uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 8) == 0)
  {
LABEL_558:
    if ((v36 & 0x400) == 0)
      goto LABEL_559;
    goto LABEL_662;
  }
LABEL_661:
  *(double *)(v6 + 2592) = self->_videoComplete50BaselineClickValue;
  *(_QWORD *)(v6 + 3008) |= 8uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x400) == 0)
  {
LABEL_559:
    if ((v36 & 0x200) == 0)
      goto LABEL_560;
    goto LABEL_663;
  }
LABEL_662:
  *(double *)(v6 + 2648) = self->_videoComplete75ImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 0x400uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x200) == 0)
  {
LABEL_560:
    if ((v36 & 0x100) == 0)
      goto LABEL_561;
    goto LABEL_664;
  }
LABEL_663:
  *(double *)(v6 + 2640) = self->_videoComplete75ClickValue;
  *(_QWORD *)(v6 + 3008) |= 0x200uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x100) == 0)
  {
LABEL_561:
    if ((v36 & 0x80) == 0)
      goto LABEL_562;
    goto LABEL_665;
  }
LABEL_664:
  *(double *)(v6 + 2632) = self->_videoComplete75BaselineImpressionValue;
  *(_QWORD *)(v6 + 3008) |= 0x100uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x80) == 0)
  {
LABEL_562:
    if ((v39 & 0x400000) == 0)
      goto LABEL_563;
    goto LABEL_666;
  }
LABEL_665:
  *(double *)(v6 + 2624) = self->_videoComplete75BaselineClickValue;
  *(_QWORD *)(v6 + 3008) |= 0x80uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x400000) == 0)
  {
LABEL_563:
    if ((v38 & 0x2000000) == 0)
      goto LABEL_564;
    goto LABEL_667;
  }
LABEL_666:
  *(double *)(v6 + 184) = self->_autoFavoriteMinClicks;
  *(_QWORD *)(v6 + 2968) |= 0x400000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v38 & 0x2000000) == 0)
  {
LABEL_564:
    if ((v38 & 0x4000000) == 0)
      goto LABEL_565;
    goto LABEL_668;
  }
LABEL_667:
  *(double *)(v6 + 720) = self->_globalScoreCoefficientHalfLife;
  *(_QWORD *)(v6 + 2976) |= 0x2000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v38 & 0x4000000) == 0)
  {
LABEL_565:
    if ((v36 & 0x20000000000000) == 0)
      goto LABEL_566;
    goto LABEL_669;
  }
LABEL_668:
  *(double *)(v6 + 728) = self->_globalScoreCoefficientInitialMultiplier;
  *(_QWORD *)(v6 + 2976) |= 0x4000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x20000000000000) == 0)
  {
LABEL_566:
    if ((v36 & 0x200000000000) == 0)
      goto LABEL_567;
    goto LABEL_670;
  }
LABEL_669:
  *(_DWORD *)(v6 + 2888) = self->_minClusterSizeIPhoneAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x20000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x200000000000) == 0)
  {
LABEL_567:
    if ((v36 & 0x200000000000000) == 0)
      goto LABEL_568;
    goto LABEL_671;
  }
LABEL_670:
  *(_DWORD *)(v6 + 2856) = self->_maxClusterSizeIPhoneAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x200000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x200000000000000) == 0)
  {
LABEL_568:
    if ((v36 & 0x2000000000000) == 0)
      goto LABEL_569;
    goto LABEL_672;
  }
LABEL_671:
  *(_DWORD *)(v6 + 2904) = self->_minIdealClusterSizeIPhoneAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x200000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x2000000000000) == 0)
  {
LABEL_569:
    if ((v36 & 0x8000000000000) == 0)
      goto LABEL_570;
    goto LABEL_673;
  }
LABEL_672:
  *(_DWORD *)(v6 + 2872) = self->_maxIdealClusterSizeIPhoneAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x2000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x8000000000000) == 0)
  {
LABEL_570:
    if ((v36 & 0x80000000000) == 0)
      goto LABEL_571;
    goto LABEL_674;
  }
LABEL_673:
  *(_DWORD *)(v6 + 2880) = self->_minClusterSizeIPadAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x8000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x80000000000) == 0)
  {
LABEL_571:
    if ((v36 & 0x80000000000000) == 0)
      goto LABEL_572;
    goto LABEL_675;
  }
LABEL_674:
  *(_DWORD *)(v6 + 2848) = self->_maxClusterSizeIPadAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x80000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v36 = *((_QWORD *)&self->_has + 5);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v36 & 0x80000000000000) == 0)
  {
LABEL_572:
    if ((v36 & 0x800000000000) == 0)
      goto LABEL_573;
    goto LABEL_676;
  }
LABEL_675:
  *(_DWORD *)(v6 + 2896) = self->_minIdealClusterSizeIPadAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x80000000000000uLL;
  v35 = *((_QWORD *)&self->_has + 4);
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 5) & 0x800000000000) == 0)
  {
LABEL_573:
    if ((v37 & 0x80000000000000) == 0)
      goto LABEL_574;
    goto LABEL_677;
  }
LABEL_676:
  *(_DWORD *)(v6 + 2864) = self->_maxIdealClusterSizeIPadAutoFavorite;
  *(_QWORD *)(v6 + 3008) |= 0x800000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x80000000000000) == 0)
  {
LABEL_574:
    if ((v37 & 0x40000000000000) == 0)
      goto LABEL_575;
    goto LABEL_678;
  }
LABEL_677:
  *(double *)(v6 + 1984) = self->_swipeToArticleWeakClickMinimumDuration;
  *(_QWORD *)(v6 + 2992) |= 0x80000000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x40000000000000) == 0)
  {
LABEL_575:
    if ((v34 & 0x10) == 0)
      goto LABEL_576;
    goto LABEL_679;
  }
LABEL_678:
  *(double *)(v6 + 1976) = self->_swipeToArticleHeavyClickMinimumDuration;
  *(_QWORD *)(v6 + 2992) |= 0x40000000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x10) == 0)
  {
LABEL_576:
    if ((v39 & 0x400000000000) == 0)
      goto LABEL_577;
    goto LABEL_680;
  }
LABEL_679:
  *(_QWORD *)(v6 + 1064) = self->_maxSuggestionsCount;
  *(_QWORD *)(v6 + 2984) |= 0x10uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x400000000000) == 0)
  {
LABEL_577:
    if ((v39 & 0x100000000000) == 0)
      goto LABEL_578;
    goto LABEL_681;
  }
LABEL_680:
  *(double *)(v6 + 376) = self->_cohortMembershipFavoritedBoost;
  *(_QWORD *)(v6 + 2968) |= 0x400000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x100000000000) == 0)
  {
LABEL_578:
    if ((v39 & 0x80000000000) == 0)
      goto LABEL_579;
    goto LABEL_682;
  }
LABEL_681:
  *(double *)(v6 + 360) = self->_cohortMembershipCurvature;
  *(_QWORD *)(v6 + 2968) |= 0x100000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x80000000000) == 0)
  {
LABEL_579:
    if ((v37 & 0x8000) == 0)
      goto LABEL_580;
    goto LABEL_683;
  }
LABEL_682:
  *(double *)(v6 + 352) = self->_cohortMembershipCtrCeiling;
  *(_QWORD *)(v6 + 2968) |= 0x80000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x8000) == 0)
  {
LABEL_580:
    if ((v39 & 0x10000000000) == 0)
      goto LABEL_581;
    goto LABEL_684;
  }
LABEL_683:
  *(double *)(v6 + 1664) = self->_safariEventBlackoutSeconds;
  *(_QWORD *)(v6 + 2992) |= 0x8000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x10000000000) == 0)
  {
LABEL_581:
    if ((v37 & 0x40) == 0)
      goto LABEL_582;
    goto LABEL_685;
  }
LABEL_684:
  *(double *)(v6 + 328) = self->_channelTopicDiversificationPenalty;
  *(_QWORD *)(v6 + 2968) |= 0x10000000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x40) == 0)
  {
LABEL_582:
    if ((v39 & 0x80000000) == 0)
      goto LABEL_583;
    goto LABEL_686;
  }
LABEL_685:
  *(double *)(v6 + 1592) = self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient;
  *(_QWORD *)(v6 + 2992) |= 0x40uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x80000000) == 0)
  {
LABEL_583:
    if ((v39 & 0x40000000) == 0)
      goto LABEL_584;
    goto LABEL_687;
  }
LABEL_686:
  *(double *)(v6 + 256) = self->_autoFavoriteTagFavorabilityExponent;
  *(_QWORD *)(v6 + 2968) |= 0x80000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v35 = *((_QWORD *)&self->_has + 4);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x40000000) == 0)
  {
LABEL_584:
    if ((v35 & 0x10000000000000) == 0)
      goto LABEL_585;
    goto LABEL_688;
  }
LABEL_687:
  *(double *)(v6 + 248) = self->_autoFavoritePriorFactorExponent;
  *(_QWORD *)(v6 + 2968) |= 0x40000000uLL;
  v37 = *((_QWORD *)&self->_has + 3);
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 4) & 0x10000000000000) == 0)
  {
LABEL_585:
    if ((v40 & 0x400) == 0)
      goto LABEL_586;
    goto LABEL_689;
  }
LABEL_688:
  *(double *)(v6 + 2472) = self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
  *(_QWORD *)(v6 + 3000) |= 0x10000000000000uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v40 & 0x400) == 0)
  {
LABEL_586:
    if ((v37 & 0x800000) == 0)
      goto LABEL_587;
    goto LABEL_690;
  }
LABEL_689:
  *(_BYTE *)(v6 + 2964) = self->_onlyConsiderBestSourceFeedsInForYouGroup;
  *(_WORD *)(v6 + 3016) |= 0x400u;
  v34 = *((_QWORD *)&self->_has + 2);
  v37 = *((_QWORD *)&self->_has + 3);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v37 & 0x800000) == 0)
  {
LABEL_587:
    if ((v37 & 0x200000) == 0)
      goto LABEL_588;
    goto LABEL_691;
  }
LABEL_690:
  *(double *)(v6 + 1728) = self->_safariTagFavorabilityExponent;
  *(_QWORD *)(v6 + 2992) |= 0x800000uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v38 = *((_QWORD *)&self->_has + 1);
  v40 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 3) & 0x200000) == 0)
  {
LABEL_588:
    if ((v39 & 0x800) == 0)
      goto LABEL_589;
    goto LABEL_692;
  }
LABEL_691:
  *(double *)(v6 + 1712) = self->_safariPriorFactorExponent;
  *(_QWORD *)(v6 + 2992) |= 0x200000uLL;
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v39 = (uint64_t)self->_has;
  v40 = *((_WORD *)&self->_has + 24);
  if ((v39 & 0x800) == 0)
  {
LABEL_589:
    if ((v39 & 0x200) == 0)
      goto LABEL_590;
    goto LABEL_693;
  }
LABEL_692:
  *(double *)(v6 + 96) = self->_appUsageTagFavorabilityExponent;
  *(_QWORD *)(v6 + 2968) |= 0x800uLL;
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v40 = *((_WORD *)&self->_has + 24);
  if ((*(_QWORD *)&self->_has & 0x200) == 0)
  {
LABEL_590:
    if ((v34 & 0x4000000000000) == 0)
      goto LABEL_591;
    goto LABEL_694;
  }
LABEL_693:
  *(double *)(v6 + 80) = self->_appUsagePriorFactorExponent;
  *(_QWORD *)(v6 + 2968) |= 0x200uLL;
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x4000000000000) == 0)
  {
LABEL_591:
    if ((v34 & 0x800000000000) == 0)
      goto LABEL_592;
    goto LABEL_695;
  }
LABEL_694:
  *(double *)(v6 + 1432) = self->_portraitTagFavorabilityExponent;
  *(_QWORD *)(v6 + 2984) |= 0x4000000000000uLL;
  v38 = *((_QWORD *)&self->_has + 1);
  v34 = *((_QWORD *)&self->_has + 2);
  v40 = *((_WORD *)&self->_has + 24);
  if ((v34 & 0x800000000000) == 0)
  {
LABEL_592:
    if ((v38 & 0x200000000000000) == 0)
      goto LABEL_593;
    goto LABEL_696;
  }
LABEL_695:
  *(double *)(v6 + 1408) = self->_portraitPriorFactorExponent;
  *(_QWORD *)(v6 + 2984) |= 0x800000000000uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  v40 = *((_WORD *)&self->_has + 24);
  if ((*((_QWORD *)&self->_has + 1) & 0x200000000000000) == 0)
  {
LABEL_593:
    if ((v40 & 0x20) == 0)
      goto LABEL_594;
    goto LABEL_697;
  }
LABEL_696:
  *(double *)(v6 + 976) = self->_internalUsageSignalWeight;
  *(_QWORD *)(v6 + 2976) |= 0x200000000000000uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((*((_WORD *)&self->_has + 24) & 0x20) == 0)
  {
LABEL_594:
    if ((v34 & 0x4000000000) == 0)
      goto LABEL_595;
    goto LABEL_698;
  }
LABEL_697:
  *(_BYTE *)(v6 + 2959) = self->_enablePreTigrisArticleScoring;
  *(_WORD *)(v6 + 3016) |= 0x20u;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x4000000000) == 0)
  {
LABEL_595:
    if ((v34 & 0x80) == 0)
      goto LABEL_596;
    goto LABEL_699;
  }
LABEL_698:
  *(_QWORD *)(v6 + 1336) = self->_numEventsToDisableDefaultTopics;
  *(_QWORD *)(v6 + 2984) |= 0x4000000000uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x80) == 0)
  {
LABEL_596:
    if ((v34 & 0x40) == 0)
      goto LABEL_597;
    goto LABEL_700;
  }
LABEL_699:
  *(double *)(v6 + 1088) = self->_metaGroupingRelatednessThreshold;
  *(_QWORD *)(v6 + 2984) |= 0x80uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x40) == 0)
  {
LABEL_597:
    if ((v34 & 0x200) == 0)
      goto LABEL_598;
    goto LABEL_701;
  }
LABEL_700:
  *(double *)(v6 + 1080) = self->_metaGroupingRelatednessKWeight;
  *(_QWORD *)(v6 + 2984) |= 0x40uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x200) == 0)
  {
LABEL_598:
    if ((v34 & 0x20) == 0)
      goto LABEL_599;
    goto LABEL_702;
  }
LABEL_701:
  *(double *)(v6 + 1104) = self->_metaGroupingTopicScoreWeight;
  *(_QWORD *)(v6 + 2984) |= 0x200uLL;
  v34 = *((_QWORD *)&self->_has + 2);
  if ((v34 & 0x20) == 0)
  {
LABEL_599:
    if ((v34 & 0x100) == 0)
      goto LABEL_601;
    goto LABEL_600;
  }
LABEL_702:
  *(double *)(v6 + 1072) = self->_metaGroupingHighestScoringRelativeScoreMultiplier;
  *(_QWORD *)(v6 + 2984) |= 0x20uLL;
  if ((*((_QWORD *)&self->_has + 2) & 0x100) != 0)
  {
LABEL_600:
    *(double *)(v6 + 1096) = self->_metaGroupingSubscribedTopicMultiplier;
    *(_QWORD *)(v6 + 2984) |= 0x100uLL;
  }
LABEL_601:
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v41 = self->_realTimeUserFeedbackTagCoefficients;
  v42 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v41, "countByEnumeratingWithState:objects:count:", &v55, v63, 16);
  if (v42)
  {
    v43 = v42;
    v44 = *(_QWORD *)v56;
    do
    {
      for (j = 0; j != v43; ++j)
      {
        if (*(_QWORD *)v56 != v44)
          objc_enumerationMutation(v41);
        v46 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v55 + 1) + 8 * j), "copyWithZone:", a3, (_QWORD)v55);
        objc_msgSend((id)v6, "addRealTimeUserFeedbackTagCoefficients:", v46);

      }
      v43 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v41, "countByEnumeratingWithState:objects:count:", &v55, v63, 16);
    }
    while (v43);
  }

  v47 = *((_QWORD *)&self->_has + 1);
  if ((v47 & 0x8000) != 0)
  {
    *(double *)(v6 + 640) = self->_expandedAutofavoriteClusterMinSizeMultiplier;
    *(_QWORD *)(v6 + 2976) |= 0x8000uLL;
    v48 = *((_QWORD *)&self->_has + 4);
    v49 = *((_QWORD *)&self->_has + 5);
    v51 = *((_QWORD *)&self->_has + 2);
    v50 = *((_QWORD *)&self->_has + 3);
    v47 = *((_QWORD *)&self->_has + 1);
  }
  else
  {
    v48 = *((_QWORD *)&self->_has + 4);
    v49 = *((_QWORD *)&self->_has + 5);
    v51 = *((_QWORD *)&self->_has + 2);
    v50 = *((_QWORD *)&self->_has + 3);
  }
  v52 = (uint64_t)self->_has;
  if ((v47 & 0x4000) != 0)
  {
    *(double *)(v6 + 632) = self->_expandedAutofavoriteClusterMaxSizeMultiplier;
    *(_QWORD *)(v6 + 2976) |= 0x4000uLL;
    v48 = *((_QWORD *)&self->_has + 4);
    v49 = *((_QWORD *)&self->_has + 5);
    v51 = *((_QWORD *)&self->_has + 2);
    v50 = *((_QWORD *)&self->_has + 3);
    v52 = (uint64_t)self->_has;
    v47 = *((_QWORD *)&self->_has + 1);
    if ((v51 & 8) == 0)
    {
LABEL_707:
      if ((v52 & 0x200000) == 0)
        goto LABEL_708;
      goto LABEL_764;
    }
  }
  else if ((v51 & 8) == 0)
  {
    goto LABEL_707;
  }
  *(double *)(v6 + 1056) = self->_maxExpandedAutofavoriteGroupCandidateRatio;
  *(_QWORD *)(v6 + 2984) |= 8uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v49 = *((_QWORD *)&self->_has + 5);
  v51 = *((_QWORD *)&self->_has + 2);
  v50 = *((_QWORD *)&self->_has + 3);
  v52 = (uint64_t)self->_has;
  v47 = *((_QWORD *)&self->_has + 1);
  if ((v52 & 0x200000) == 0)
  {
LABEL_708:
    if ((v49 & 0x8000000) == 0)
      goto LABEL_709;
    goto LABEL_765;
  }
LABEL_764:
  *(double *)(v6 + 176) = self->_autoFavoriteMaxIdleTime;
  *(_QWORD *)(v6 + 2968) |= 0x200000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v50 = *((_QWORD *)&self->_has + 3);
  v52 = (uint64_t)self->_has;
  v47 = *((_QWORD *)&self->_has + 1);
  if ((*((_QWORD *)&self->_has + 5) & 0x8000000) == 0)
  {
LABEL_709:
    if ((v51 & 0x8000000000) == 0)
      goto LABEL_710;
    goto LABEL_766;
  }
LABEL_765:
  *(_DWORD *)(v6 + 2784) = self->_auditionedAutoFavoritesEmitterLimit;
  *(_QWORD *)(v6 + 3008) |= 0x8000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v47 = *((_QWORD *)&self->_has + 1);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v51 & 0x8000000000) == 0)
  {
LABEL_710:
    if ((v51 & 0x1000000000000000) == 0)
      goto LABEL_711;
    goto LABEL_767;
  }
LABEL_766:
  *(_QWORD *)(v6 + 1344) = self->_numSubscriptionsToDisableDefaultTopics;
  *(_QWORD *)(v6 + 2984) |= 0x8000000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v47 = *((_QWORD *)&self->_has + 1);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v51 & 0x1000000000000000) == 0)
  {
LABEL_711:
    if ((v47 & 8) == 0)
      goto LABEL_712;
    goto LABEL_768;
  }
LABEL_767:
  *(double *)(v6 + 1512) = self->_publisherAggregateWeight;
  *(_QWORD *)(v6 + 2984) |= 0x1000000000000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v47 = *((_QWORD *)&self->_has + 1);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v47 & 8) == 0)
  {
LABEL_712:
    if ((v47 & 0x20) == 0)
      goto LABEL_713;
    goto LABEL_769;
  }
LABEL_768:
  *(double *)(v6 + 544) = self->_diversificationInitialPenalty;
  *(_QWORD *)(v6 + 2976) |= 8uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 1) & 0x20) == 0)
  {
LABEL_713:
    if ((v52 & 0x8000000000) == 0)
      goto LABEL_714;
    goto LABEL_770;
  }
LABEL_769:
  *(double *)(v6 + 560) = self->_diversificationPenaltyHalfLife;
  *(_QWORD *)(v6 + 2976) |= 0x20uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v52 & 0x8000000000) == 0)
  {
LABEL_714:
    if ((v52 & 0x20000000000) == 0)
      goto LABEL_715;
    goto LABEL_771;
  }
LABEL_770:
  *(double *)(v6 + 320) = self->_channelTopicDiversificationInitialPenalty;
  *(_QWORD *)(v6 + 2968) |= 0x8000000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v52 & 0x20000000000) == 0)
  {
LABEL_715:
    if ((v51 & 0x2000000000000000) == 0)
      goto LABEL_716;
    goto LABEL_772;
  }
LABEL_771:
  *(double *)(v6 + 336) = self->_channelTopicDiversificationPenaltyHalfLife;
  *(_QWORD *)(v6 + 2968) |= 0x20000000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v51 & 0x2000000000000000) == 0)
  {
LABEL_716:
    if ((v51 & 0x8000000000000000) == 0)
      goto LABEL_717;
    goto LABEL_773;
  }
LABEL_772:
  *(double *)(v6 + 1520) = self->_publisherDiversificationInitialPenalty;
  *(_QWORD *)(v6 + 2984) |= 0x2000000000000000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v51 & 0x8000000000000000) == 0)
  {
LABEL_717:
    if ((v51 & 0x800) == 0)
      goto LABEL_718;
    goto LABEL_774;
  }
LABEL_773:
  *(double *)(v6 + 1536) = self->_publisherDiversificationPenaltyHalfLife;
  *(_QWORD *)(v6 + 2984) |= 0x8000000000000000;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v51 = *((_QWORD *)&self->_has + 2);
  v52 = (uint64_t)self->_has;
  if ((v51 & 0x800) == 0)
  {
LABEL_718:
    if ((v51 & 0x1000) == 0)
      goto LABEL_719;
    goto LABEL_775;
  }
LABEL_774:
  *(double *)(v6 + 1120) = self->_minimumGlobalScoreThreshold;
  *(_QWORD *)(v6 + 2984) |= 0x800uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 2) & 0x1000) == 0)
  {
LABEL_719:
    if ((v50 & 0x800000000000) == 0)
      goto LABEL_720;
    goto LABEL_776;
  }
LABEL_775:
  *(double *)(v6 + 1128) = self->_minimumGlobalScoreThresholdForSubscribedChannel;
  *(_QWORD *)(v6 + 2984) |= 0x1000uLL;
  v50 = *((_QWORD *)&self->_has + 3);
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v50 & 0x800000000000) == 0)
  {
LABEL_720:
    if ((v50 & 0x1000000000000) == 0)
      goto LABEL_721;
    goto LABEL_777;
  }
LABEL_776:
  *(double *)(v6 + 1920) = self->_subscribedChannelScoreCoefficient;
  *(_QWORD *)(v6 + 2992) |= 0x800000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((*((_QWORD *)&self->_has + 3) & 0x1000000000000) == 0)
  {
LABEL_721:
    if ((v48 & 0x4000) == 0)
      goto LABEL_722;
    goto LABEL_778;
  }
LABEL_777:
  *(double *)(v6 + 1928) = self->_subscribedTopicsScoreCoefficient;
  *(_QWORD *)(v6 + 2992) |= 0x1000000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x4000) == 0)
  {
LABEL_722:
    if ((v48 & 0x80000000) == 0)
      goto LABEL_723;
    goto LABEL_779;
  }
LABEL_778:
  *(double *)(v6 + 2168) = self->_topicFeedBaselineRatePrior;
  *(_QWORD *)(v6 + 3000) |= 0x4000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x80000000) == 0)
  {
LABEL_723:
    if ((v48 & 0x100000000) == 0)
      goto LABEL_724;
    goto LABEL_780;
  }
LABEL_779:
  *(double *)(v6 + 2304) = self->_topicFeedDecayFactor;
  *(_QWORD *)(v6 + 3000) |= 0x80000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x100000000) == 0)
  {
LABEL_724:
    if ((v48 & 0x20000000000) == 0)
      goto LABEL_725;
    goto LABEL_781;
  }
LABEL_780:
  *(double *)(v6 + 2312) = self->_topicFeedDemocratizationFactor;
  *(_QWORD *)(v6 + 3000) |= 0x100000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x20000000000) == 0)
  {
LABEL_725:
    if ((v48 & 0x2000000000000) == 0)
      goto LABEL_726;
    goto LABEL_782;
  }
LABEL_781:
  *(double *)(v6 + 2384) = self->_topicFeedHalfLifeCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x20000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x2000000000000) == 0)
  {
LABEL_726:
    if ((v48 & 0x100000000000) == 0)
      goto LABEL_727;
    goto LABEL_783;
  }
LABEL_782:
  *(double *)(v6 + 2448) = self->_topicFeedSubscribedChannelScoreCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x2000000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x100000000000) == 0)
  {
LABEL_727:
    if ((v48 & 0x200000000000) == 0)
      goto LABEL_728;
    goto LABEL_784;
  }
LABEL_783:
  *(double *)(v6 + 2408) = self->_topicFeedMutedVoteCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x100000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x200000000000) == 0)
  {
LABEL_728:
    if ((v48 & 0x400000000000) == 0)
      goto LABEL_729;
    goto LABEL_785;
  }
LABEL_784:
  *(double *)(v6 + 2416) = self->_topicFeedPersonalizationCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x200000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x400000000000) == 0)
  {
LABEL_729:
    if ((v48 & 0x1000000000) == 0)
      goto LABEL_730;
    goto LABEL_786;
  }
LABEL_785:
  *(double *)(v6 + 2424) = self->_topicFeedPublisherAggregateWeight;
  *(_QWORD *)(v6 + 3000) |= 0x400000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x1000000000) == 0)
  {
LABEL_730:
    if ((v48 & 0x2000000000) == 0)
      goto LABEL_731;
    goto LABEL_787;
  }
LABEL_786:
  *(double *)(v6 + 2344) = self->_topicFeedGlobalScoreCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x1000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x2000000000) == 0)
  {
LABEL_731:
    if ((v48 & 0x4000000000) == 0)
      goto LABEL_732;
    goto LABEL_788;
  }
LABEL_787:
  *(double *)(v6 + 2352) = self->_topicFeedGlobalScoreCoefficientHalfLife;
  *(_QWORD *)(v6 + 3000) |= 0x2000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x4000000000) == 0)
  {
LABEL_732:
    if ((v48 & 0x8000000000) == 0)
      goto LABEL_733;
    goto LABEL_789;
  }
LABEL_788:
  *(double *)(v6 + 2360) = self->_topicFeedGlobalScoreCoefficientInitialMultiplier;
  *(_QWORD *)(v6 + 3000) |= 0x4000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x8000000000) == 0)
  {
LABEL_733:
    if ((v48 & 0x10000000000) == 0)
      goto LABEL_734;
    goto LABEL_790;
  }
LABEL_789:
  *(double *)(v6 + 2368) = self->_topicFeedGlobalScoreToCtrIntercept;
  *(_QWORD *)(v6 + 3000) |= 0x8000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x10000000000) == 0)
  {
LABEL_734:
    if ((v48 & 0x40000000000) == 0)
      goto LABEL_735;
    goto LABEL_791;
  }
LABEL_790:
  *(double *)(v6 + 2376) = self->_topicFeedGlobalScoreToCtrSlope;
  *(_QWORD *)(v6 + 3000) |= 0x10000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x40000000000) == 0)
  {
LABEL_735:
    if ((v48 & 0x80000000000) == 0)
      goto LABEL_736;
    goto LABEL_792;
  }
LABEL_791:
  *(double *)(v6 + 2392) = self->_topicFeedMinimumGlobalScoreThreshold;
  *(_QWORD *)(v6 + 3000) |= 0x40000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x80000000000) == 0)
  {
LABEL_736:
    if ((v48 & 0x800000000000) == 0)
      goto LABEL_737;
    goto LABEL_793;
  }
LABEL_792:
  *(double *)(v6 + 2400) = self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
  *(_QWORD *)(v6 + 3000) |= 0x80000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x800000000000) == 0)
  {
LABEL_737:
    if ((v48 & 0x1000000000000) == 0)
      goto LABEL_738;
    goto LABEL_794;
  }
LABEL_793:
  *(double *)(v6 + 2432) = self->_topicFeedRealTimeUserFeedbackCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x800000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x1000000000000) == 0)
  {
LABEL_738:
    if ((v48 & 0x40000) == 0)
      goto LABEL_739;
    goto LABEL_795;
  }
LABEL_794:
  *(double *)(v6 + 2440) = self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x1000000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x40000) == 0)
  {
LABEL_739:
    if ((v48 & 0x80000) == 0)
      goto LABEL_740;
    goto LABEL_796;
  }
LABEL_795:
  *(double *)(v6 + 2200) = self->_topicFeedCohortMembershipCtrCeiling;
  *(_QWORD *)(v6 + 3000) |= 0x40000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x80000) == 0)
  {
LABEL_740:
    if ((v48 & 0x100000) == 0)
      goto LABEL_741;
    goto LABEL_797;
  }
LABEL_796:
  *(double *)(v6 + 2208) = self->_topicFeedCohortMembershipCurvature;
  *(_QWORD *)(v6 + 3000) |= 0x80000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x100000) == 0)
  {
LABEL_741:
    if ((v48 & 0x200000) == 0)
      goto LABEL_742;
    goto LABEL_798;
  }
LABEL_797:
  *(double *)(v6 + 2216) = self->_topicFeedCohortMembershipFavoritedBoost;
  *(_QWORD *)(v6 + 3000) |= 0x100000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x200000) == 0)
  {
LABEL_742:
    if ((v48 & 0x4000000000000) == 0)
      goto LABEL_743;
    goto LABEL_799;
  }
LABEL_798:
  *(double *)(v6 + 2224) = self->_topicFeedCohortMembershipMinWeightedImpressions;
  *(_QWORD *)(v6 + 3000) |= 0x200000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x4000000000000) == 0)
  {
LABEL_743:
    if ((v48 & 0x40000000) == 0)
      goto LABEL_744;
    goto LABEL_800;
  }
LABEL_799:
  *(double *)(v6 + 2456) = self->_topicFeedSubscribedTopicsScoreCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x4000000000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x40000000) == 0)
  {
LABEL_744:
    if ((v48 & 0x800000) == 0)
      goto LABEL_745;
    goto LABEL_801;
  }
LABEL_800:
  *(double *)(v6 + 2296) = self->_topicFeedCtrWithZeroSubscribed;
  *(_QWORD *)(v6 + 3000) |= 0x40000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x800000) == 0)
  {
LABEL_745:
    if ((v48 & 0x10000000) == 0)
      goto LABEL_746;
    goto LABEL_802;
  }
LABEL_801:
  *(double *)(v6 + 2240) = self->_topicFeedCtrWithOneSubscribed;
  *(_QWORD *)(v6 + 3000) |= 0x800000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x10000000) == 0)
  {
LABEL_746:
    if ((v48 & 0x4000000) == 0)
      goto LABEL_747;
    goto LABEL_803;
  }
LABEL_802:
  *(double *)(v6 + 2280) = self->_topicFeedCtrWithTwoSubscribed;
  *(_QWORD *)(v6 + 3000) |= 0x10000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x4000000) == 0)
  {
LABEL_747:
    if ((v48 & 0x2000) == 0)
      goto LABEL_748;
    goto LABEL_804;
  }
LABEL_803:
  *(double *)(v6 + 2264) = self->_topicFeedCtrWithThreeSubscribed;
  *(_QWORD *)(v6 + 3000) |= 0x4000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x2000) == 0)
  {
LABEL_748:
    if ((v48 & 0x20000000) == 0)
      goto LABEL_749;
    goto LABEL_805;
  }
LABEL_804:
  *(double *)(v6 + 2160) = self->_topicFeedAutofavoritedVoteCoefficient;
  *(_QWORD *)(v6 + 3000) |= 0x2000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x20000000) == 0)
  {
LABEL_749:
    if ((v48 & 0x400000) == 0)
      goto LABEL_750;
    goto LABEL_806;
  }
LABEL_805:
  *(double *)(v6 + 2288) = self->_topicFeedCtrWithZeroAutofavorited;
  *(_QWORD *)(v6 + 3000) |= 0x20000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x400000) == 0)
  {
LABEL_750:
    if ((v48 & 0x8000000) == 0)
      goto LABEL_751;
    goto LABEL_807;
  }
LABEL_806:
  *(double *)(v6 + 2232) = self->_topicFeedCtrWithOneAutofavorited;
  *(_QWORD *)(v6 + 3000) |= 0x400000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x8000000) == 0)
  {
LABEL_751:
    if ((v48 & 0x2000000) == 0)
      goto LABEL_752;
    goto LABEL_808;
  }
LABEL_807:
  *(double *)(v6 + 2272) = self->_topicFeedCtrWithTwoAutofavorited;
  *(_QWORD *)(v6 + 3000) |= 0x8000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x2000000) == 0)
  {
LABEL_752:
    if ((v48 & 0x200000000) == 0)
      goto LABEL_753;
    goto LABEL_809;
  }
LABEL_808:
  *(double *)(v6 + 2256) = self->_topicFeedCtrWithThreeAutofavorited;
  *(_QWORD *)(v6 + 3000) |= 0x2000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x200000000) == 0)
  {
LABEL_753:
    if ((v48 & 0x400000000) == 0)
      goto LABEL_754;
    goto LABEL_810;
  }
LABEL_809:
  *(double *)(v6 + 2320) = self->_topicFeedDiversificationInitialPenalty;
  *(_QWORD *)(v6 + 3000) |= 0x200000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x400000000) == 0)
  {
LABEL_754:
    if ((v48 & 0x800000000) == 0)
      goto LABEL_755;
    goto LABEL_811;
  }
LABEL_810:
  *(double *)(v6 + 2328) = self->_topicFeedDiversificationPenalty;
  *(_QWORD *)(v6 + 3000) |= 0x400000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x800000000) == 0)
  {
LABEL_755:
    if ((v48 & 0x8000) == 0)
      goto LABEL_756;
    goto LABEL_812;
  }
LABEL_811:
  *(double *)(v6 + 2336) = self->_topicFeedDiversificationPenaltyHalfLife;
  *(_QWORD *)(v6 + 3000) |= 0x800000000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x8000) == 0)
  {
LABEL_756:
    if ((v48 & 0x10000) == 0)
      goto LABEL_757;
    goto LABEL_813;
  }
LABEL_812:
  *(double *)(v6 + 2176) = self->_topicFeedChannelTopicDiversificationInitialPenalty;
  *(_QWORD *)(v6 + 3000) |= 0x8000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x10000) == 0)
  {
LABEL_757:
    if ((v48 & 0x20000) == 0)
      goto LABEL_758;
    goto LABEL_814;
  }
LABEL_813:
  *(double *)(v6 + 2184) = self->_topicFeedChannelTopicDiversificationPenalty;
  *(_QWORD *)(v6 + 3000) |= 0x10000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  v52 = (uint64_t)self->_has;
  if ((v48 & 0x20000) == 0)
  {
LABEL_758:
    if ((v52 & 0x8000000000000) == 0)
      goto LABEL_759;
LABEL_815:
    *(double *)(v6 + 416) = self->_ctrWithSubscribedChannel;
    *(_QWORD *)(v6 + 2968) |= 0x8000000000000uLL;
    if ((*((_QWORD *)&self->_has + 4) & 0x1000000) == 0)
      goto LABEL_761;
    goto LABEL_760;
  }
LABEL_814:
  *(double *)(v6 + 2192) = self->_topicFeedChannelTopicDiversificationPenaltyHalfLife;
  *(_QWORD *)(v6 + 3000) |= 0x20000uLL;
  v48 = *((_QWORD *)&self->_has + 4);
  if ((*(_QWORD *)&self->_has & 0x8000000000000) != 0)
    goto LABEL_815;
LABEL_759:
  if ((v48 & 0x1000000) != 0)
  {
LABEL_760:
    *(double *)(v6 + 2248) = self->_topicFeedCtrWithSubscribedChannel;
    *(_QWORD *)(v6 + 3000) |= 0x1000000uLL;
  }
LABEL_761:
  v53 = (id)v6;

  return v53;
}

- (BOOL)isEqual:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t has;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int16 v43;
  NSMutableArray *portraitTagThresholds;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  NSMutableArray *realTimeUserFeedbackTagCoefficients;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;

  v4 = a3;
  if (!objc_msgSend(v4, "isMemberOfClass:", objc_opt_class()))
    goto LABEL_2016;
  v5 = *((_QWORD *)&self->_has + 4);
  v6 = *((_QWORD *)&self->_has + 5);
  v7 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  has = (uint64_t)self->_has;
  v10 = *((_QWORD *)&self->_has + 1);
  v11 = *((_WORD *)&self->_has + 24);
  v13 = *((_QWORD *)v4 + 375);
  v12 = *((_QWORD *)v4 + 376);
  v14 = *((_QWORD *)v4 + 373);
  v15 = *((_QWORD *)v4 + 374);
  v17 = *((_QWORD *)v4 + 371);
  v16 = *((_QWORD *)v4 + 372);
  v18 = *((_WORD *)v4 + 1508);
  if ((v5 & 0x8000000000000) != 0)
  {
    if ((v13 & 0x8000000000000) == 0 || self->_treatmentId != *((_QWORD *)v4 + 308))
      goto LABEL_2016;
  }
  else if ((v13 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x2000000000000000) != 0)
  {
    if ((v17 & 0x2000000000000000) == 0 || self->_decayFactor != *((double *)v4 + 62))
      goto LABEL_2016;
  }
  else if ((v17 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x2000000000) != 0)
  {
    if ((v17 & 0x2000000000) == 0 || self->_baselineImpressionPrior != *((double *)v4 + 38))
      goto LABEL_2016;
  }
  else if ((v17 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x4000000000) != 0)
  {
    if ((v17 & 0x4000000000) == 0 || self->_baselineRatePrior != *((double *)v4 + 39))
      goto LABEL_2016;
  }
  else if ((v17 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x20000) != 0)
  {
    if ((v16 & 0x20000) == 0 || self->_featureImpressionPrior != *((double *)v4 + 82))
      goto LABEL_2016;
  }
  else if ((v16 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 0x40) != 0)
  {
    if ((v18 & 0x40) == 0)
      goto LABEL_2016;
    if (self->_globalScoreRankingEnabled)
    {
      if (!*((_BYTE *)v4 + 2960))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2960))
    {
      goto LABEL_2016;
    }
  }
  else if ((v18 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x800000) != 0)
  {
    if ((v16 & 0x800000) == 0 || self->_globalScoreBump != *((double *)v4 + 88))
      goto LABEL_2016;
  }
  else if ((v16 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x20000000000000) != 0)
  {
    if ((v15 & 0x20000000000000) == 0 || self->_subscriptionVoteCoefficient != *((double *)v4 + 246))
      goto LABEL_2016;
  }
  else if ((v15 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x40000000000) != 0)
  {
    if ((v14 & 0x40000000000) == 0 || self->_personalizationCoefficient != *((double *)v4 + 171))
      goto LABEL_2016;
  }
  else if ((v14 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x1000000) != 0)
  {
    if ((v16 & 0x1000000) == 0 || self->_globalScoreCoefficient != *((double *)v4 + 89))
      goto LABEL_2016;
  }
  else if ((v16 & 0x1000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x10) != 0)
  {
    if ((v15 & 0x10) == 0 || self->_publisherTopicIdEventCountMinimum != *((_QWORD *)v4 + 197))
      goto LABEL_2016;
  }
  else if ((v15 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x400000000000000) != 0)
  {
    if ((v14 & 0x400000000000000) == 0 || self->_presentationImpressionValue != *((double *)v4 + 187))
      goto LABEL_2016;
  }
  else if ((v14 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x10000000000) != 0)
  {
    if ((v16 & 0x10000000000) == 0 || self->_heavyClickImpressionValue != *((double *)v4 + 105))
      goto LABEL_2016;
  }
  else if ((v16 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    if ((v16 & 0x1000000000000000) == 0 || self->_likeImpressionValue != *((double *)v4 + 125))
      goto LABEL_2016;
  }
  else if ((v16 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x10000000000) != 0)
  {
    if ((v15 & 0x10000000000) == 0 || self->_shareImpressionValue != *((double *)v4 + 233))
      goto LABEL_2016;
  }
  else if ((v15 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x20000000) != 0)
  {
    if ((v15 & 0x20000000) == 0 || self->_savedImpressionValue != *((double *)v4 + 222))
      goto LABEL_2016;
  }
  else if ((v15 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x200000000000) != 0)
  {
    if ((v15 & 0x200000000000) == 0 || self->_subscribeImpressionValue != *((double *)v4 + 238))
      goto LABEL_2016;
  }
  else if ((v15 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x800) != 0)
  {
    if ((v13 & 0x800) == 0 || self->_tappedImpressionValue != *((double *)v4 + 268))
      goto LABEL_2016;
  }
  else if ((v13 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x2000000) != 0)
  {
    if ((v12 & 0x2000000) == 0 || self->_weakClickImpressionValue != *((double *)v4 + 346))
      goto LABEL_2016;
  }
  else if ((v12 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x800000000000000) != 0)
  {
    if ((v13 & 0x800000000000000) == 0 || self->_unsubscribeImpressionValue != *((double *)v4 + 316))
      goto LABEL_2016;
  }
  else if ((v13 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x200000) != 0)
  {
    if ((v12 & 0x200000) == 0 || self->_visitImpressionValue != *((double *)v4 + 342))
      goto LABEL_2016;
  }
  else if ((v12 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 2) != 0)
  {
    if ((v16 & 2) == 0 || self->_dislikeImpressionValue != *((double *)v4 + 66))
      goto LABEL_2016;
  }
  else if ((v16 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x100000000000000) != 0)
  {
    if ((v14 & 0x100000000000000) == 0 || self->_presentationClickValue != *((double *)v4 + 185))
      goto LABEL_2016;
  }
  else if ((v14 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x4000000000) != 0)
  {
    if ((v16 & 0x4000000000) == 0 || self->_heavyClickClickValue != *((double *)v4 + 103))
      goto LABEL_2016;
  }
  else if ((v16 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x400000000000000) != 0)
  {
    if ((v16 & 0x400000000000000) == 0 || self->_likeClickValue != *((double *)v4 + 123))
      goto LABEL_2016;
  }
  else if ((v16 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x4000000000) != 0)
  {
    if ((v15 & 0x4000000000) == 0 || self->_shareClickValue != *((double *)v4 + 231))
      goto LABEL_2016;
  }
  else if ((v15 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x8000000) != 0)
  {
    if ((v15 & 0x8000000) == 0 || self->_savedClickValue != *((double *)v4 + 220))
      goto LABEL_2016;
  }
  else if ((v15 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x80000000000) != 0)
  {
    if ((v15 & 0x80000000000) == 0 || self->_subscribeClickValue != *((double *)v4 + 236))
      goto LABEL_2016;
  }
  else if ((v15 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x200) != 0)
  {
    if ((v13 & 0x200) == 0 || self->_tappedClickValue != *((double *)v4 + 266))
      goto LABEL_2016;
  }
  else if ((v13 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x800000) != 0)
  {
    if ((v12 & 0x800000) == 0 || self->_weakClickClickValue != *((double *)v4 + 344))
      goto LABEL_2016;
  }
  else if ((v12 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x200000000000000) != 0)
  {
    if ((v13 & 0x200000000000000) == 0 || self->_unsubscribeClickValue != *((double *)v4 + 314))
      goto LABEL_2016;
  }
  else if ((v13 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x80000) != 0)
  {
    if ((v12 & 0x80000) == 0 || self->_visitClickValue != *((double *)v4 + 340))
      goto LABEL_2016;
  }
  else if ((v12 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if (has < 0)
  {
    if ((v17 & 0x8000000000000000) == 0 || self->_dislikeClickValue != *((double *)v4 + 64))
      goto LABEL_2016;
  }
  else if (v17 < 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x10000000000000) != 0)
  {
    if ((v16 & 0x10000000000000) == 0 || self->_hourlyFlowRateMinimum != *((double *)v4 + 117))
      goto LABEL_2016;
  }
  else if ((v16 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x40000000000000) != 0)
  {
    if ((v16 & 0x40000000000000) == 0 || self->_hourlyFlowRateSubscriptionCountBuffer != *((double *)v4 + 119))
      goto LABEL_2016;
  }
  else if ((v16 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x2000000000000) != 0)
  {
    if ((v16 & 0x2000000000000) == 0 || self->_hourlyFlowRateDampeningFactor != *((double *)v4 + 114))
      goto LABEL_2016;
  }
  else if ((v16 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x4000000000000000) != 0)
  {
    if ((v17 & 0x4000000000000000) == 0 || self->_democratizationFactor != *((double *)v4 + 63))
      goto LABEL_2016;
  }
  else if ((v17 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x40000000000) != 0)
  {
    if ((v15 & 0x40000000000) == 0 || self->_sliceTimeInterval != *((_QWORD *)v4 + 235))
      goto LABEL_2016;
  }
  else if ((v15 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x40000) != 0)
  {
    if ((v16 & 0x40000) == 0 || self->_flowRateDampeningSliceCount != *((_QWORD *)v4 + 83))
      goto LABEL_2016;
  }
  else if ((v16 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x200000) != 0)
  {
    if ((v16 & 0x200000) == 0 || self->_flowRateMinimumDampeningFactor != *((double *)v4 + 86))
      goto LABEL_2016;
  }
  else if ((v16 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x2000000000) != 0)
  {
    if ((v16 & 0x2000000000) == 0 || self->_halfLifeCoefficient != *((double *)v4 + 102))
      goto LABEL_2016;
  }
  else if ((v16 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x10) != 0)
  {
    if ((v16 & 0x10) == 0 || self->_diversificationPenalty != *((double *)v4 + 69))
      goto LABEL_2016;
  }
  else if ((v16 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x40000000000) != 0)
  {
    if ((v16 & 0x40000000000) == 0 || self->_heavyClickMinimumDuration != *((double *)v4 + 107))
      goto LABEL_2016;
  }
  else if ((v16 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x8000000000000) != 0)
  {
    if ((v15 & 0x8000000000000) == 0 || self->_subscriptionRelatedImpressionValue != *((double *)v4 + 244))
      goto LABEL_2016;
  }
  else if ((v15 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x2000000000000) != 0)
  {
    if ((v15 & 0x2000000000000) == 0 || self->_subscriptionRelatedClickValue != *((double *)v4 + 242))
      goto LABEL_2016;
  }
  else if ((v15 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x20000000000000) != 0)
  {
    if ((v16 & 0x20000000000000) == 0 || self->_hourlyFlowRatePerSubscription != *((double *)v4 + 118))
      goto LABEL_2016;
  }
  else if ((v16 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x10000) != 0)
  {
    if ((v16 & 0x10000) == 0 || self->_extraHeadlinesToShowTheUser != *((_QWORD *)v4 + 81))
      goto LABEL_2016;
  }
  else if ((v16 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x100000) != 0)
  {
    if ((v16 & 0x100000) == 0 || self->_flowRateDegreeOfDynamism != *((double *)v4 + 85))
      goto LABEL_2016;
  }
  else if ((v16 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x80000) != 0)
  {
    if ((v16 & 0x80000) == 0 || self->_flowRateDecayFactor != *((double *)v4 + 84))
      goto LABEL_2016;
  }
  else if ((v16 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x400000) != 0)
  {
    if ((v16 & 0x400000) == 0 || self->_flowRatePriorWeight != *((double *)v4 + 87))
      goto LABEL_2016;
  }
  else if ((v16 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  v20 = *((_QWORD *)v4 + 375);
  v19 = *((_QWORD *)v4 + 376);
  v21 = *((_QWORD *)v4 + 373);
  v22 = *((_QWORD *)v4 + 374);
  v23 = *((_QWORD *)v4 + 372);
  if ((v7 & 0x800000000000000) != 0)
  {
    if ((v21 & 0x800000000000000) == 0 || self->_presentationImpressionValueBaseline != *((double *)v4 + 188))
      goto LABEL_2016;
  }
  else if ((v21 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x20000000000) != 0)
  {
    if ((v23 & 0x20000000000) == 0 || self->_heavyClickImpressionValueBaseline != *((double *)v4 + 106))
      goto LABEL_2016;
  }
  else if ((v23 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    if ((v23 & 0x2000000000000000) == 0 || self->_likeImpressionValueBaseline != *((double *)v4 + 126))
      goto LABEL_2016;
  }
  else if ((v23 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x20000000000) != 0)
  {
    if ((v22 & 0x20000000000) == 0 || self->_shareImpressionValueBaseline != *((double *)v4 + 234))
      goto LABEL_2016;
  }
  else if ((v22 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x40000000) != 0)
  {
    if ((v22 & 0x40000000) == 0 || self->_savedImpressionValueBaseline != *((double *)v4 + 223))
      goto LABEL_2016;
  }
  else if ((v22 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x400000000000) != 0)
  {
    if ((v22 & 0x400000000000) == 0 || self->_subscribeImpressionValueBaseline != *((double *)v4 + 239))
      goto LABEL_2016;
  }
  else if ((v22 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x1000) != 0)
  {
    if ((v20 & 0x1000) == 0 || self->_tappedImpressionValueBaseline != *((double *)v4 + 269))
      goto LABEL_2016;
  }
  else if ((v20 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x4000000) != 0)
  {
    if ((v19 & 0x4000000) == 0 || self->_weakClickImpressionValueBaseline != *((double *)v4 + 347))
      goto LABEL_2016;
  }
  else if ((v19 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x1000000000000000) != 0)
  {
    if ((v20 & 0x1000000000000000) == 0 || self->_unsubscribeImpressionValueBaseline != *((double *)v4 + 317))
      goto LABEL_2016;
  }
  else if ((v20 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x400000) != 0)
  {
    if ((v19 & 0x400000) == 0 || self->_visitImpressionValueBaseline != *((double *)v4 + 343))
      goto LABEL_2016;
  }
  else if ((v19 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 4) != 0)
  {
    if ((v23 & 4) == 0 || self->_dislikeImpressionValueBaseline != *((double *)v4 + 67))
      goto LABEL_2016;
  }
  else if ((v23 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x10000000000000) != 0)
  {
    if ((v22 & 0x10000000000000) == 0 || self->_subscriptionRelatedImpressionValueBaseline != *((double *)v4 + 245))
      goto LABEL_2016;
  }
  else if ((v22 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x200000000000000) != 0)
  {
    if ((v21 & 0x200000000000000) == 0 || self->_presentationClickValueBaseline != *((double *)v4 + 186))
      goto LABEL_2016;
  }
  else if ((v21 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x8000000000) != 0)
  {
    if ((v23 & 0x8000000000) == 0 || self->_heavyClickClickValueBaseline != *((double *)v4 + 104))
      goto LABEL_2016;
  }
  else if ((v23 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x800000000000000) != 0)
  {
    if ((v23 & 0x800000000000000) == 0 || self->_likeClickValueBaseline != *((double *)v4 + 124))
      goto LABEL_2016;
  }
  else if ((v23 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x8000000000) != 0)
  {
    if ((v22 & 0x8000000000) == 0 || self->_shareClickValueBaseline != *((double *)v4 + 232))
      goto LABEL_2016;
  }
  else if ((v22 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x10000000) != 0)
  {
    if ((v22 & 0x10000000) == 0 || self->_savedClickValueBaseline != *((double *)v4 + 221))
      goto LABEL_2016;
  }
  else if ((v22 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x100000000000) != 0)
  {
    if ((v22 & 0x100000000000) == 0 || self->_subscribeClickValueBaseline != *((double *)v4 + 237))
      goto LABEL_2016;
  }
  else if ((v22 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x400) != 0)
  {
    if ((v20 & 0x400) == 0 || self->_tappedClickValueBaseline != *((double *)v4 + 267))
      goto LABEL_2016;
  }
  else if ((v20 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x1000000) != 0)
  {
    if ((v19 & 0x1000000) == 0 || self->_weakClickClickValueBaseline != *((double *)v4 + 345))
      goto LABEL_2016;
  }
  else if ((v19 & 0x1000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x400000000000000) != 0)
  {
    if ((v20 & 0x400000000000000) == 0 || self->_unsubscribeClickValueBaseline != *((double *)v4 + 315))
      goto LABEL_2016;
  }
  else if ((v20 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x100000) != 0)
  {
    if ((v19 & 0x100000) == 0 || self->_visitClickValueBaseline != *((double *)v4 + 341))
      goto LABEL_2016;
  }
  else if ((v19 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 1) != 0)
  {
    if ((v23 & 1) == 0 || self->_dislikeClickValueBaseline != *((double *)v4 + 65))
      goto LABEL_2016;
  }
  else if ((v23 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x4000000000000) != 0)
  {
    if ((v22 & 0x4000000000000) == 0 || self->_subscriptionRelatedClickValueBaseline != *((double *)v4 + 243))
      goto LABEL_2016;
  }
  else if ((v22 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x100) != 0)
  {
    if ((v23 & 0x100) == 0 || self->_existingSubscriptionImpressionValue != *((double *)v4 + 73))
      goto LABEL_2016;
  }
  else if ((v23 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x40) != 0)
  {
    if ((v23 & 0x40) == 0 || self->_existingSubscriptionClickValue != *((double *)v4 + 71))
      goto LABEL_2016;
  }
  else if ((v23 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x200) != 0)
  {
    if ((v23 & 0x200) == 0 || self->_existingSubscriptionImpressionValueBaseline != *((double *)v4 + 74))
      goto LABEL_2016;
  }
  else if ((v23 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x80) != 0)
  {
    if ((v23 & 0x80) == 0 || self->_existingSubscriptionClickValueBaseline != *((double *)v4 + 72))
      goto LABEL_2016;
  }
  else if ((v23 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x1000) != 0)
  {
    if ((v23 & 0x1000) == 0 || self->_existingSubscriptionRelatedImpressionValue != *((double *)v4 + 77))
      goto LABEL_2016;
  }
  else if ((v23 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x400) != 0)
  {
    if ((v23 & 0x400) == 0 || self->_existingSubscriptionRelatedClickValue != *((double *)v4 + 75))
      goto LABEL_2016;
  }
  else if ((v23 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x2000) != 0)
  {
    if ((v23 & 0x2000) == 0 || self->_existingSubscriptionRelatedImpressionValueBaseline != *((double *)v4 + 78))
      goto LABEL_2016;
  }
  else if ((v23 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x800) != 0)
  {
    if ((v23 & 0x800) == 0 || self->_existingSubscriptionRelatedClickValueBaseline != *((double *)v4 + 76))
      goto LABEL_2016;
  }
  else if ((v23 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x8000000) != 0)
  {
    if ((v23 & 0x8000000) == 0 || self->_globalScoreStretchingFactor != *((double *)v4 + 92))
      goto LABEL_2016;
  }
  else if ((v23 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x4000000000000) != 0)
  {
    if ((v23 & 0x4000000000000) == 0 || self->_hourlyFlowRateFloor != *((double *)v4 + 115))
      goto LABEL_2016;
  }
  else if ((v23 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x1000000000000) != 0)
  {
    if ((v23 & 0x1000000000000) == 0 || self->_hourlyFlowRateCeiling != *((double *)v4 + 113))
      goto LABEL_2016;
  }
  else if ((v23 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x4000000) != 0)
  {
    if ((v22 & 0x4000000) == 0 || self->_saturatedSubscriptionCountFactor != *((double *)v4 + 219))
      goto LABEL_2016;
  }
  else if ((v22 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x4000000000000000) != 0)
  {
    if ((v21 & 0x4000000000000000) == 0 || self->_publisherDiversificationPenalty != *((double *)v4 + 191))
      goto LABEL_2016;
  }
  else if ((v21 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_WORD *)&self->_has + 24) & 0x200) != 0)
  {
    if ((*((_WORD *)v4 + 1508) & 0x200) == 0)
      goto LABEL_2016;
    if (self->_hardAgeBeforePublisherDiversification)
    {
      if (!*((_BYTE *)v4 + 2963))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2963))
    {
      goto LABEL_2016;
    }
  }
  else if ((*((_WORD *)v4 + 1508) & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x400000000000) != 0)
  {
    if ((v23 & 0x400000000000) == 0 || self->_hourlyFlowRateAlpha != *((double *)v4 + 111))
      goto LABEL_2016;
  }
  else if ((v23 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x800000000000) != 0)
  {
    if ((v23 & 0x800000000000) == 0 || self->_hourlyFlowRateBeta != *((double *)v4 + 112))
      goto LABEL_2016;
  }
  else if ((v23 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x8000000000000) != 0)
  {
    if ((v23 & 0x8000000000000) == 0 || self->_hourlyFlowRateGamma != *((double *)v4 + 116))
      goto LABEL_2016;
  }
  else if ((v23 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x2000) != 0)
  {
    if ((v22 & 0x2000) == 0 || self->_recommendationPresentationFeedImpressionValue != *((double *)v4 + 206))
      goto LABEL_2016;
  }
  else if ((v22 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x800) != 0)
  {
    if ((v22 & 0x800) == 0 || self->_recommendationPresentationFeedClickValue != *((double *)v4 + 204))
      goto LABEL_2016;
  }
  else if ((v22 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x200) != 0)
  {
    if ((v22 & 0x200) == 0 || self->_recommendationPresentationExploreImpressionValue != *((double *)v4 + 202))
      goto LABEL_2016;
  }
  else if ((v22 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x80) != 0)
  {
    if ((v22 & 0x80) == 0 || self->_recommendationPresentationExploreClickValue != *((double *)v4 + 200))
      goto LABEL_2016;
  }
  else if ((v22 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x4000) != 0)
  {
    if ((v22 & 0x4000) == 0 || self->_recommendationPresentationFeedImpressionValueBaseline != *((double *)v4 + 207))
      goto LABEL_2016;
  }
  else if ((v22 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x1000) != 0)
  {
    if ((v22 & 0x1000) == 0 || self->_recommendationPresentationFeedClickValueBaseline != *((double *)v4 + 205))
      goto LABEL_2016;
  }
  else if ((v22 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x400) != 0)
  {
    if ((v22 & 0x400) == 0 || self->_recommendationPresentationExploreImpressionValueBaseline != *((double *)v4 + 203))
      goto LABEL_2016;
  }
  else if ((v22 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x100) != 0)
  {
    if ((v22 & 0x100) == 0 || self->_recommendationPresentationExploreClickValueBaseline != *((double *)v4 + 201))
      goto LABEL_2016;
  }
  else if ((v22 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x40000000000000) != 0)
  {
    if ((v21 & 0x40000000000000) == 0 || self->_premiumSubscriptionActivationImpressionValue != *((double *)v4 + 183))
      goto LABEL_2016;
  }
  else if ((v21 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  v24 = *((_QWORD *)v4 + 375);
  v25 = *((_QWORD *)v4 + 376);
  v27 = *((_QWORD *)v4 + 373);
  v26 = *((_QWORD *)v4 + 374);
  v28 = *((_QWORD *)v4 + 372);
  v29 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x10000000000000) != 0)
  {
    if ((v27 & 0x10000000000000) == 0 || self->_premiumSubscriptionActivationClickValue != *((double *)v4 + 181))
      goto LABEL_2016;
  }
  else if ((v27 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x80000000000000) != 0)
  {
    if ((v27 & 0x80000000000000) == 0
      || self->_premiumSubscriptionActivationImpressionValueBaseline != *((double *)v4 + 184))
    {
      goto LABEL_2016;
    }
  }
  else if ((v27 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x20000000000000) != 0)
  {
    if ((v27 & 0x20000000000000) == 0
      || self->_premiumSubscriptionActivationClickValueBaseline != *((double *)v4 + 182))
    {
      goto LABEL_2016;
    }
  }
  else if ((v27 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x4000000000000000) != 0)
  {
    if ((v28 & 0x4000000000000000) == 0 || self->_lowQualityArticleRatio != *((double *)v4 + 127))
      goto LABEL_2016;
  }
  else if ((v28 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x400) != 0)
  {
    if ((v27 & 0x400) == 0 || self->_minClusterSize != *((_QWORD *)v4 + 139))
      goto LABEL_2016;
  }
  else if ((v27 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 4) != 0)
  {
    if ((v27 & 4) == 0 || self->_maxClusterSize != *((_QWORD *)v4 + 131))
      goto LABEL_2016;
  }
  else if ((v27 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if (v10 < 0)
  {
    if ((v28 & 0x8000000000000000) == 0 || self->_maxArticleCombos != *((_QWORD *)v4 + 128))
      goto LABEL_2016;
  }
  else if (v28 < 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x80000000000) != 0)
  {
    if ((v28 & 0x80000000000) == 0 || self->_heuristicSampleSize != *((_QWORD *)v4 + 108))
      goto LABEL_2016;
  }
  else if ((v28 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x400000000) != 0)
  {
    if ((v26 & 0x400000000) == 0 || self->_searchBranchMultiplier != *((_QWORD *)v4 + 227))
      goto LABEL_2016;
  }
  else if ((v26 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x80000000) != 0)
  {
    if ((v26 & 0x80000000) == 0 || self->_searchBranchDecay != *((double *)v4 + 224))
      goto LABEL_2016;
  }
  else if ((v26 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x2000000000) != 0)
  {
    if ((v26 & 0x2000000000) == 0 || self->_searchTimeLimit != *((double *)v4 + 230))
      goto LABEL_2016;
  }
  else if ((v26 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 2) != 0)
  {
    if ((v29 & 2) == 0 || self->_tagOrder != *((_DWORD *)v4 + 738))
      goto LABEL_2016;
  }
  else if ((v29 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x400000000000000) != 0)
  {
    if ((v25 & 0x400000000000000) == 0 || self->_moveOrder != *((_DWORD *)v4 + 727))
      goto LABEL_2016;
  }
  else if ((v25 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x20000000000) != 0)
  {
    if ((v25 & 0x20000000000) == 0 || self->_heuristicOrder != *((_DWORD *)v4 + 710))
      goto LABEL_2016;
  }
  else if ((v25 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x4000000000) != 0)
  {
    if ((v25 & 0x4000000000) == 0 || self->_heuristicOption != *((_DWORD *)v4 + 707))
      goto LABEL_2016;
  }
  else if ((v25 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x10000000000000) != 0)
  {
    if ((v25 & 0x10000000000000) == 0 || self->_minClusterSizeIPhone != *((_DWORD *)v4 + 721))
      goto LABEL_2016;
  }
  else if ((v25 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x100000000000) != 0)
  {
    if ((v25 & 0x100000000000) == 0 || self->_maxClusterSizeIPhone != *((_DWORD *)v4 + 713))
      goto LABEL_2016;
  }
  else if ((v25 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x100000000000000) != 0)
  {
    if ((v25 & 0x100000000000000) == 0 || self->_minIdealClusterSizeIPhone != *((_DWORD *)v4 + 725))
      goto LABEL_2016;
  }
  else if ((v25 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x1000000000000) != 0)
  {
    if ((v25 & 0x1000000000000) == 0 || self->_maxIdealClusterSizeIPhone != *((_DWORD *)v4 + 717))
      goto LABEL_2016;
  }
  else if ((v25 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x4000000000000) != 0)
  {
    if ((v25 & 0x4000000000000) == 0 || self->_minClusterSizeIPad != *((_DWORD *)v4 + 719))
      goto LABEL_2016;
  }
  else if ((v25 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x40000000000) != 0)
  {
    if ((v25 & 0x40000000000) == 0 || self->_maxClusterSizeIPad != *((_DWORD *)v4 + 711))
      goto LABEL_2016;
  }
  else if ((v25 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x40000000000000) != 0)
  {
    if ((v25 & 0x40000000000000) == 0 || self->_minIdealClusterSizeIPad != *((_DWORD *)v4 + 723))
      goto LABEL_2016;
  }
  else if ((v25 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x400000000000) != 0)
  {
    if ((v25 & 0x400000000000) == 0 || self->_maxIdealClusterSizeIPad != *((_DWORD *)v4 + 715))
      goto LABEL_2016;
  }
  else if ((v25 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 2) != 0)
  {
    if ((v27 & 2) == 0 || self->_maxArticleCombosIPhone != *((_QWORD *)v4 + 130))
      goto LABEL_2016;
  }
  else if ((v27 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 1) != 0)
  {
    if ((v27 & 1) == 0 || self->_maxArticleCombosIPad != *((_QWORD *)v4 + 129))
      goto LABEL_2016;
  }
  else if ((v27 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x200000000000) != 0)
  {
    if ((v28 & 0x200000000000) == 0 || self->_heuristicSampleSizeIPhone != *((_QWORD *)v4 + 110))
      goto LABEL_2016;
  }
  else if ((v28 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x100000000000) != 0)
  {
    if ((v28 & 0x100000000000) == 0 || self->_heuristicSampleSizeIPad != *((_QWORD *)v4 + 109))
      goto LABEL_2016;
  }
  else if ((v28 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x1000000000) != 0)
  {
    if ((v26 & 0x1000000000) == 0 || self->_searchBranchMultiplierIPhone != *((_QWORD *)v4 + 229))
      goto LABEL_2016;
  }
  else if ((v26 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x800000000) != 0)
  {
    if ((v26 & 0x800000000) == 0 || self->_searchBranchMultiplierIPad != *((_QWORD *)v4 + 228))
      goto LABEL_2016;
  }
  else if ((v26 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x200000000) != 0)
  {
    if ((v26 & 0x200000000) == 0 || self->_searchBranchDecayIPhone != *((double *)v4 + 226))
      goto LABEL_2016;
  }
  else if ((v26 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x100000000) != 0)
  {
    if ((v26 & 0x100000000) == 0 || self->_searchBranchDecayIPad != *((double *)v4 + 225))
      goto LABEL_2016;
  }
  else if ((v26 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x10000000000) != 0)
  {
    if ((v25 & 0x10000000000) == 0 || self->_heuristicOptionIPhone != *((_DWORD *)v4 + 709))
      goto LABEL_2016;
  }
  else if ((v25 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x8000000000) != 0)
  {
    if ((v25 & 0x8000000000) == 0 || self->_heuristicOptionIPad != *((_DWORD *)v4 + 708))
      goto LABEL_2016;
  }
  else if ((v25 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x40) != 0)
  {
    if ((v24 & 0x40) == 0 || self->_tagSizeCoeffIPhone != *((double *)v4 + 263))
      goto LABEL_2016;
  }
  else if ((v24 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x20) != 0)
  {
    if ((v24 & 0x20) == 0 || self->_tagSizeCoeffIPad != *((double *)v4 + 262))
      goto LABEL_2016;
  }
  else if ((v24 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 4) != 0)
  {
    if ((v24 & 4) == 0 || self->_tagPairsCoeffIPhone != *((double *)v4 + 259))
      goto LABEL_2016;
  }
  else if ((v24 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 2) != 0)
  {
    if ((v24 & 2) == 0 || self->_tagPairsCoeffIPad != *((double *)v4 + 258))
      goto LABEL_2016;
  }
  else if ((v24 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x40000) != 0)
  {
    if ((v27 & 0x40000) == 0 || self->_moveNewOrphansCoeffIPhone != *((double *)v4 + 147))
      goto LABEL_2016;
  }
  else if ((v27 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x20000) != 0)
  {
    if ((v27 & 0x20000) == 0 || self->_moveNewOrphansCoeffIPad != *((double *)v4 + 146))
      goto LABEL_2016;
  }
  else if ((v27 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x100000) != 0)
  {
    if ((v27 & 0x100000) == 0 || self->_moveSizeCoeffIPhone != *((double *)v4 + 149))
      goto LABEL_2016;
  }
  else if ((v27 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x80000) != 0)
  {
    if ((v27 & 0x80000) == 0 || self->_moveSizeCoeffIPad != *((double *)v4 + 148))
      goto LABEL_2016;
  }
  else if ((v27 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    if ((v26 & 0x1000000000000000) == 0 || self->_tagFavoritedCoeff != *((double *)v4 + 253))
      goto LABEL_2016;
  }
  else if ((v26 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x4000) != 0)
  {
    if ((v27 & 0x4000) == 0 || self->_moveAboutnessNoiseStdIPhone != *((double *)v4 + 143))
      goto LABEL_2016;
  }
  else if ((v27 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x2000) != 0)
  {
    if ((v27 & 0x2000) == 0 || self->_moveAboutnessNoiseStdIPad != *((double *)v4 + 142))
      goto LABEL_2016;
  }
  else if ((v27 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x80000000) != 0)
  {
    if ((v25 & 0x80000000) == 0 || self->_dynamicMaxClusterSizeIPhone != *((_DWORD *)v4 + 700))
      goto LABEL_2016;
  }
  else if ((v25 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x40000000) != 0)
  {
    if ((v25 & 0x40000000) == 0 || self->_dynamicMaxClusterSizeIPad != *((_DWORD *)v4 + 699))
      goto LABEL_2016;
  }
  else if ((v25 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x200000000) != 0)
  {
    if ((v25 & 0x200000000) == 0 || self->_dynamicMinArticleSetSizeIPhone != *((_DWORD *)v4 + 702))
      goto LABEL_2016;
  }
  else if ((v25 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x100000000) != 0)
  {
    if ((v25 & 0x100000000) == 0 || self->_dynamicMinArticleSetSizeIPad != *((_DWORD *)v4 + 701))
      goto LABEL_2016;
  }
  else if ((v25 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x20000000) != 0)
  {
    if ((v25 & 0x20000000) == 0 || self->_dynamicMaxArticleSetSizeIPhone != *((_DWORD *)v4 + 698))
      goto LABEL_2016;
  }
  else if ((v25 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x10000000) != 0)
  {
    if ((v25 & 0x10000000) == 0 || self->_dynamicMaxArticleSetSizeIPad != *((_DWORD *)v4 + 697))
      goto LABEL_2016;
  }
  else if ((v25 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 4) != 0)
  {
    if ((v29 & 4) == 0)
      goto LABEL_2016;
    if (self->_deleteOrphansFromOverflow)
    {
      if (!*((_BYTE *)v4 + 2956))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2956))
    {
      goto LABEL_2016;
    }
  }
  else if ((v29 & 4) != 0)
  {
    goto LABEL_2016;
  }
  v30 = *((_QWORD *)v4 + 375);
  v31 = *((_QWORD *)v4 + 376);
  v33 = *((_QWORD *)v4 + 373);
  v32 = *((_QWORD *)v4 + 374);
  v34 = *((_QWORD *)v4 + 371);
  v35 = *((_QWORD *)v4 + 372);
  v36 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x20000000000) != 0)
  {
    if ((v33 & 0x20000000000) == 0 || self->_overflownOrphansFilterCoeff != *((double *)v4 + 170))
      goto LABEL_2016;
  }
  else if ((v33 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x10000) != 0)
  {
    if ((v33 & 0x10000) == 0 || self->_moveAboutnessWeightRatioIPhone != *((double *)v4 + 145))
      goto LABEL_2016;
  }
  else if ((v33 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x8000) != 0)
  {
    if ((v33 & 0x8000) == 0 || self->_moveAboutnessWeightRatioIPad != *((double *)v4 + 144))
      goto LABEL_2016;
  }
  else if ((v33 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x80000000) != 0)
  {
    if ((v35 & 0x80000000) == 0 || self->_groupingDoubleParam1 != *((double *)v4 + 96))
      goto LABEL_2016;
  }
  else if ((v35 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x100000000) != 0)
  {
    if ((v35 & 0x100000000) == 0 || self->_groupingDoubleParam2 != *((double *)v4 + 97))
      goto LABEL_2016;
  }
  else if ((v35 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x200000000) != 0)
  {
    if ((v35 & 0x200000000) == 0 || self->_groupingDoubleParam3 != *((double *)v4 + 98))
      goto LABEL_2016;
  }
  else if ((v35 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x400000000) != 0)
  {
    if ((v35 & 0x400000000) == 0 || self->_groupingDoubleParam4 != *((double *)v4 + 99))
      goto LABEL_2016;
  }
  else if ((v35 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x800000000) != 0)
  {
    if ((v35 & 0x800000000) == 0 || self->_groupingDoubleParam5 != *((double *)v4 + 100))
      goto LABEL_2016;
  }
  else if ((v35 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x1000000000) != 0)
  {
    if ((v35 & 0x1000000000) == 0 || self->_groupingDoubleParam6 != *((double *)v4 + 101))
      goto LABEL_2016;
  }
  else if ((v35 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x400000000) != 0)
  {
    if ((v31 & 0x400000000) == 0 || self->_groupingIntParam1 != *((_DWORD *)v4 + 703))
      goto LABEL_2016;
  }
  else if ((v31 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x800000000) != 0)
  {
    if ((v31 & 0x800000000) == 0 || self->_groupingIntParam2 != *((_DWORD *)v4 + 704))
      goto LABEL_2016;
  }
  else if ((v31 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x1000000000) != 0)
  {
    if ((v31 & 0x1000000000) == 0 || self->_groupingIntParam3 != *((_DWORD *)v4 + 705))
      goto LABEL_2016;
  }
  else if ((v31 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x2000000000) != 0)
  {
    if ((v31 & 0x2000000000) == 0 || self->_groupingIntParam4 != *((_DWORD *)v4 + 706))
      goto LABEL_2016;
  }
  else if ((v31 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 0x80) != 0)
  {
    if ((v36 & 0x80) == 0)
      goto LABEL_2016;
    if (self->_groupingBoolParam1)
    {
      if (!*((_BYTE *)v4 + 2961))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2961))
    {
      goto LABEL_2016;
    }
  }
  else if ((v36 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_WORD *)&self->_has + 24) & 0x100) != 0)
  {
    if ((*((_WORD *)v4 + 1508) & 0x100) == 0)
      goto LABEL_2016;
    if (self->_groupingBoolParam2)
    {
      if (!*((_BYTE *)v4 + 2962))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2962))
    {
      goto LABEL_2016;
    }
  }
  else if ((*((_WORD *)v4 + 1508) & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 0x10) != 0)
  {
    if ((v36 & 0x10) == 0)
      goto LABEL_2016;
    if (self->_enableOptimizedLayoutIPhone)
    {
      if (!*((_BYTE *)v4 + 2958))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2958))
    {
      goto LABEL_2016;
    }
  }
  else if ((v36 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 8) != 0)
  {
    if ((v36 & 8) == 0)
      goto LABEL_2016;
    if (self->_enableOptimizedLayoutIPad)
    {
      if (!*((_BYTE *)v4 + 2957))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2957))
    {
      goto LABEL_2016;
    }
  }
  else if ((v36 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x4000000000000000) != 0)
  {
    if ((v31 & 0x4000000000000000) == 0 || self->_optimizedLayoutSizeThresholdIPhone != *((_DWORD *)v4 + 731))
      goto LABEL_2016;
  }
  else if ((v31 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    if ((v31 & 0x2000000000000000) == 0 || self->_optimizedLayoutSizeThresholdIPad != *((_DWORD *)v4 + 730))
      goto LABEL_2016;
  }
  else if ((v31 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    if ((v31 & 0x1000000000000000) == 0 || self->_optimizedLayoutIncrementUnitIPhone != *((_DWORD *)v4 + 729))
      goto LABEL_2016;
  }
  else if ((v31 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x800000000000000) != 0)
  {
    if ((v31 & 0x800000000000000) == 0 || self->_optimizedLayoutIncrementUnitIPad != *((_DWORD *)v4 + 728))
      goto LABEL_2016;
  }
  else if ((v31 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x2000000000000000) != 0)
  {
    if ((v30 & 0x2000000000000000) == 0 || self->_utilityWeightAlpha != *((double *)v4 + 318))
      goto LABEL_2016;
  }
  else if ((v30 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x4000000000000000) != 0)
  {
    if ((v30 & 0x4000000000000000) == 0 || self->_utilityWeightBeta != *((double *)v4 + 319))
      goto LABEL_2016;
  }
  else if ((v30 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_WORD *)&self->_has + 24) & 0x800) != 0)
  {
    if ((*((_WORD *)v4 + 1508) & 0x800) == 0)
      goto LABEL_2016;
    if (self->_replaceAboutness)
    {
      if (!*((_BYTE *)v4 + 2965))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2965))
    {
      goto LABEL_2016;
    }
  }
  else if ((*((_WORD *)v4 + 1508) & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x10) != 0)
  {
    if ((v30 & 0x10) == 0 || self->_tagPersonalizationCoeffIPhone != *((double *)v4 + 261))
      goto LABEL_2016;
  }
  else if ((v30 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 8) != 0)
  {
    if ((v30 & 8) == 0 || self->_tagPersonalizationCoeffIPad != *((double *)v4 + 260))
      goto LABEL_2016;
  }
  else if ((v30 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x200000000000000) != 0)
  {
    if ((v32 & 0x200000000000000) == 0 || self->_tagArticleScoreCoeffIPhone != *((double *)v4 + 250))
      goto LABEL_2016;
  }
  else if ((v32 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x100000000000000) != 0)
  {
    if ((v32 & 0x100000000000000) == 0 || self->_tagArticleScoreCoeffIPad != *((double *)v4 + 249))
      goto LABEL_2016;
  }
  else if ((v32 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x4000000000000000) != 0)
  {
    if ((v32 & 0x4000000000000000) == 0 || self->_tagFavoritedCoeffIPhone != *((double *)v4 + 255))
      goto LABEL_2016;
  }
  else if ((v32 & 0x4000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x2000000000000000) != 0)
  {
    if ((v32 & 0x2000000000000000) == 0 || self->_tagFavoritedCoeffIPad != *((double *)v4 + 254))
      goto LABEL_2016;
  }
  else if ((v32 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x4000) != 0)
  {
    if ((v34 & 0x4000) == 0 || self->_articleEntityScoreWeightRatioIPhone != *((double *)v4 + 15))
      goto LABEL_2016;
  }
  else if ((v34 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x2000) != 0)
  {
    if ((v34 & 0x2000) == 0 || self->_articleEntityScoreWeightRatioIPad != *((double *)v4 + 14))
      goto LABEL_2016;
  }
  else if ((v34 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x800000) != 0)
  {
    if ((v33 & 0x800000) == 0 || self->_muteImpressionValue != *((double *)v4 + 152))
      goto LABEL_2016;
  }
  else if ((v33 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x80000000000000) != 0)
  {
    if ((v30 & 0x80000000000000) == 0 || self->_unmuteImpressionValue != *((double *)v4 + 312))
      goto LABEL_2016;
  }
  else if ((v30 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x200000) != 0)
  {
    if ((v33 & 0x200000) == 0 || self->_muteClickValue != *((double *)v4 + 150))
      goto LABEL_2016;
  }
  else if ((v33 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x20000000000000) != 0)
  {
    if ((v30 & 0x20000000000000) == 0 || self->_unmuteClickValue != *((double *)v4 + 310))
      goto LABEL_2016;
  }
  else if ((v30 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x1000000) != 0)
  {
    if ((v33 & 0x1000000) == 0 || self->_muteImpressionValueBaseline != *((double *)v4 + 153))
      goto LABEL_2016;
  }
  else if ((v33 & 0x1000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x100000000000000) != 0)
  {
    if ((v30 & 0x100000000000000) == 0 || self->_unmuteImpressionValueBaseline != *((double *)v4 + 313))
      goto LABEL_2016;
  }
  else if ((v30 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x400000) != 0)
  {
    if ((v33 & 0x400000) == 0 || self->_muteClickValueBaseline != *((double *)v4 + 151))
      goto LABEL_2016;
  }
  else if ((v33 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x40000000000000) != 0)
  {
    if ((v30 & 0x40000000000000) == 0 || self->_unmuteClickValueBaseline != *((double *)v4 + 311))
      goto LABEL_2016;
  }
  else if ((v30 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x2000000) != 0)
  {
    if ((v32 & 0x2000000) == 0 || self->_saturatedMutedCountFactor != *((double *)v4 + 218))
      goto LABEL_2016;
  }
  else if ((v32 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x2000000) != 0)
  {
    if ((v33 & 0x2000000) == 0 || self->_mutedVoteCoefficient != *((double *)v4 + 154))
      goto LABEL_2016;
  }
  else if ((v33 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x80000000000000) != 0)
  {
    if ((v35 & 0x80000000000000) == 0 || self->_importanceScalar != *((double *)v4 + 120))
      goto LABEL_2016;
  }
  else if ((v35 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 8) != 0)
  {
    if ((v32 & 8) == 0 || self->_publisherDiversityMinSubscriptions != *((double *)v4 + 196))
      goto LABEL_2016;
  }
  else if ((v32 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 4) != 0)
  {
    if ((v32 & 4) == 0 || self->_publisherDiversityMinArticleCount != *((double *)v4 + 195))
      goto LABEL_2016;
  }
  else if ((v32 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 1) != 0)
  {
    if ((v32 & 1) == 0 || self->_publisherDiversityMaxArticleCount != *((double *)v4 + 193))
      goto LABEL_2016;
  }
  else if ((v32 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 2) != 0)
  {
    if ((v32 & 2) == 0 || self->_publisherDiversityMaxArticleFilter != *((double *)v4 + 194))
      goto LABEL_2016;
  }
  else if ((v32 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x400000) != 0)
  {
    if ((v32 & 0x400000) == 0 || self->_safariSignalWeight != *((double *)v4 + 215))
      goto LABEL_2016;
  }
  else if ((v32 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  v38 = *((_QWORD *)v4 + 375);
  v37 = *((_QWORD *)v4 + 376);
  v40 = *((_QWORD *)v4 + 373);
  v39 = *((_QWORD *)v4 + 374);
  v42 = *((_QWORD *)v4 + 371);
  v41 = *((_QWORD *)v4 + 372);
  v43 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x1000000) != 0)
  {
    if ((v39 & 0x1000000) == 0 || self->_safariTimeDecayMultiplier != *((double *)v4 + 217))
      goto LABEL_2016;
  }
  else if ((v39 & 0x1000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x100000) != 0)
  {
    if ((v39 & 0x100000) == 0 || self->_safariOccurrenceDecayMultiplier != *((double *)v4 + 213))
      goto LABEL_2016;
  }
  else if ((v39 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x400) != 0)
  {
    if ((v42 & 0x400) == 0 || self->_appUsageSignalWeight != *((double *)v4 + 11))
      goto LABEL_2016;
  }
  else if ((v42 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x1000) != 0)
  {
    if ((v42 & 0x1000) == 0 || self->_appUsageTimeDecayMultiplier != *((double *)v4 + 13))
      goto LABEL_2016;
  }
  else if ((v42 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x100) != 0)
  {
    if ((v42 & 0x100) == 0 || self->_appUsageOccurrenceDecayMultiplier != *((double *)v4 + 9))
      goto LABEL_2016;
  }
  else if ((v42 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x40000) != 0)
  {
    if ((v42 & 0x40000) == 0 || self->_autoFavoriteGroupableMinImpressions != *((double *)v4 + 19))
      goto LABEL_2016;
  }
  else if ((v42 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x80000) != 0)
  {
    if ((v42 & 0x80000) == 0 || self->_autoFavoriteGroupableMinRate != *((double *)v4 + 20))
      goto LABEL_2016;
  }
  else if ((v42 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x100000) != 0)
  {
    if ((v42 & 0x100000) == 0 || self->_autoFavoriteGroupableMinRelativeRate != *((double *)v4 + 21))
      goto LABEL_2016;
  }
  else if ((v42 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x8000) != 0)
  {
    if ((v42 & 0x8000) == 0 || self->_autoFavoriteFetchableMinImpressions != *((double *)v4 + 16))
      goto LABEL_2016;
  }
  else if ((v42 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x10000) != 0)
  {
    if ((v42 & 0x10000) == 0 || self->_autoFavoriteFetchableMinRate != *((double *)v4 + 17))
      goto LABEL_2016;
  }
  else if ((v42 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x20000) != 0)
  {
    if ((v42 & 0x20000) == 0 || self->_autoFavoriteFetchableMinRelativeRate != *((double *)v4 + 18))
      goto LABEL_2016;
  }
  else if ((v42 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x800000000) != 0)
  {
    if ((v42 & 0x800000000) == 0 || self->_averageSafariVisitsPerDay != *((double *)v4 + 36))
      goto LABEL_2016;
  }
  else if ((v42 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v11 & 1) != 0)
  {
    if ((v43 & 1) == 0 || self->_publisherDiversityMinPublisherCount != *((_DWORD *)v4 + 735))
      goto LABEL_2016;
  }
  else if ((v43 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if (v6 < 0)
  {
    if ((v37 & 0x8000000000000000) == 0 || self->_publisherDiversityMaxPublisherCount != *((_DWORD *)v4 + 734))
      goto LABEL_2016;
  }
  else if (v37 < 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x8000000000000) != 0)
  {
    if ((v40 & 0x8000000000000) == 0 || self->_portraitUsageSignalWeight != *((double *)v4 + 180))
      goto LABEL_2016;
  }
  else if ((v40 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x40000000000) != 0)
  {
    if ((v42 & 0x40000000000) == 0 || self->_cohortMembershipBaselineCtrWeight != *((double *)v4 + 43))
      goto LABEL_2016;
  }
  else if ((v42 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x200000000000) != 0)
  {
    if ((v42 & 0x200000000000) == 0 || self->_cohortMembershipCurveSteepness != *((double *)v4 + 46))
      goto LABEL_2016;
  }
  else if ((v42 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x800000000000) != 0)
  {
    if ((v42 & 0x800000000000) == 0 || self->_cohortMembershipMinWeightedImpressions != *((double *)v4 + 48))
      goto LABEL_2016;
  }
  else if ((v42 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x800000) != 0)
  {
    if ((v42 & 0x800000) == 0 || self->_autoFavoriteMinImpressions != *((double *)v4 + 24))
      goto LABEL_2016;
  }
  else if ((v42 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x4000000) != 0)
  {
    if ((v42 & 0x4000000) == 0 || self->_autoFavoriteMinRate != *((double *)v4 + 27))
      goto LABEL_2016;
  }
  else if ((v42 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x8000000) != 0)
  {
    if ((v42 & 0x8000000) == 0 || self->_autoFavoriteMinRelativeRate != *((double *)v4 + 28))
      goto LABEL_2016;
  }
  else if ((v42 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x200000000) != 0)
  {
    if ((v42 & 0x200000000) == 0 || self->_autoUnfavoriteFactor != *((double *)v4 + 34))
      goto LABEL_2016;
  }
  else if ((v42 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x100000000) != 0)
  {
    if ((v42 & 0x100000000) == 0 || self->_autoGroupableFactor != *((double *)v4 + 33))
      goto LABEL_2016;
  }
  else if ((v42 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x40000000) != 0)
  {
    if ((v41 & 0x40000000) == 0 || self->_groupImpressionBiasCorrectionFactor != *((double *)v4 + 95))
      goto LABEL_2016;
  }
  else if ((v41 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v10 & 0x100000000000000) != 0)
  {
    if ((v41 & 0x100000000000000) == 0 || self->_indexImpressionBiasCorrectionFactor != *((double *)v4 + 121))
      goto LABEL_2016;
  }
  else if ((v41 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x40000) != 0)
  {
    if ((v37 & 0x40000) == 0 || self->_videoInitiatePlaybackImpressionValue != *((double *)v4 + 339))
      goto LABEL_2016;
  }
  else if ((v37 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x20000) != 0)
  {
    if ((v37 & 0x20000) == 0 || self->_videoInitiatePlaybackClickValue != *((double *)v4 + 338))
      goto LABEL_2016;
  }
  else if ((v37 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x10000) != 0)
  {
    if ((v37 & 0x10000) == 0 || self->_videoInitiatePlaybackBaselineImpressionValue != *((double *)v4 + 337))
      goto LABEL_2016;
  }
  else if ((v37 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x8000) != 0)
  {
    if ((v37 & 0x8000) == 0 || self->_videoInitiatePlaybackBaselineClickValue != *((double *)v4 + 336))
      goto LABEL_2016;
  }
  else if ((v37 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x4000) != 0)
  {
    if ((v37 & 0x4000) == 0 || self->_videoCompletePlaybackImpressionValue != *((double *)v4 + 335))
      goto LABEL_2016;
  }
  else if ((v37 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x2000) != 0)
  {
    if ((v37 & 0x2000) == 0 || self->_videoCompletePlaybackClickValue != *((double *)v4 + 334))
      goto LABEL_2016;
  }
  else if ((v37 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x1000) != 0)
  {
    if ((v37 & 0x1000) == 0 || self->_videoCompletePlaybackBaselineImpressionValue != *((double *)v4 + 333))
      goto LABEL_2016;
  }
  else if ((v37 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v6 & 0x800) != 0)
  {
    if ((v37 & 0x800) == 0 || self->_videoCompletePlaybackBaselineClickValue != *((double *)v4 + 332))
      goto LABEL_2016;
  }
  else if ((v37 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x800000000000000) != 0)
  {
    if ((v39 & 0x800000000000000) == 0 || self->_tagAutoFavoritedCoeffIPhone != *((double *)v4 + 252))
      goto LABEL_2016;
  }
  else if ((v39 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v8 & 0x400000000000000) != 0)
  {
    if ((v39 & 0x400000000000000) == 0 || self->_tagAutoFavoritedCoeffIPad != *((double *)v4 + 251))
      goto LABEL_2016;
  }
  else if ((v39 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 1) != 0)
  {
    if ((v38 & 1) == 0 || self->_tagGroupableCoeffIPhone != *((double *)v4 + 257))
      goto LABEL_2016;
  }
  else if ((v38 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if (v8 < 0)
  {
    if ((v39 & 0x8000000000000000) == 0 || self->_tagGroupableCoeffIPad != *((double *)v4 + 256))
      goto LABEL_2016;
  }
  else if (v39 < 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x100) != 0)
  {
    if ((v38 & 0x100) == 0 || self->_tagSpecificityCoeffIPhone != *((double *)v4 + 265))
      goto LABEL_2016;
  }
  else if ((v38 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((v5 & 0x80) != 0)
  {
    if ((v38 & 0x80) == 0 || self->_tagSpecificityCoeffIPad != *((double *)v4 + 264))
      goto LABEL_2016;
  }
  else if ((v38 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x10000000000) != 0)
  {
    if ((v40 & 0x10000000000) == 0 || self->_optionalTagSpecificityScore != *((double *)v4 + 169))
      goto LABEL_2016;
  }
  else if ((v40 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x2000000) != 0)
  {
    if ((v42 & 0x2000000) == 0 || self->_autoFavoriteMinObservationsSafari != *((double *)v4 + 26))
      goto LABEL_2016;
  }
  else if ((v42 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x20000000) != 0)
  {
    if ((v42 & 0x20000000) == 0 || self->_autoFavoriteMinScoreSafari != *((double *)v4 + 30))
      goto LABEL_2016;
  }
  else if ((v42 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x1000000) != 0)
  {
    if ((v42 & 0x1000000) == 0 || self->_autoFavoriteMinObservationsExtAppUsage != *((double *)v4 + 25))
      goto LABEL_2016;
  }
  else if ((v42 & 0x1000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((has & 0x10000000) != 0)
  {
    if ((v42 & 0x10000000) == 0 || self->_autoFavoriteMinScoreExtAppUsage != *((double *)v4 + 29))
      goto LABEL_2016;
  }
  else if ((v42 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x80000000000) != 0)
  {
    if ((v40 & 0x80000000000) == 0 || self->_portraitDecayRate != *((double *)v4 + 172))
      goto LABEL_2016;
  }
  else if ((v40 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v7 & 0x100000000000) != 0)
  {
    if ((v40 & 0x100000000000) == 0 || self->_portraitGlobalThreshold != *((double *)v4 + 173))
      goto LABEL_2016;
  }
  else if ((v40 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  portraitTagThresholds = self->_portraitTagThresholds;
  if ((unint64_t)portraitTagThresholds | *((_QWORD *)v4 + 366)
    && !-[NSMutableArray isEqual:](portraitTagThresholds, "isEqual:"))
  {
    goto LABEL_2016;
  }
  v45 = *((_QWORD *)&self->_has + 4);
  v46 = *((_QWORD *)&self->_has + 5);
  v47 = *((_QWORD *)&self->_has + 2);
  v48 = *((_QWORD *)&self->_has + 3);
  v50 = (uint64_t)self->_has;
  v49 = *((_QWORD *)&self->_has + 1);
  v52 = *((_QWORD *)v4 + 375);
  v51 = *((_QWORD *)v4 + 376);
  v53 = *((_QWORD *)v4 + 373);
  v54 = *((_QWORD *)v4 + 374);
  v55 = *((_QWORD *)v4 + 371);
  v56 = *((_QWORD *)v4 + 372);
  if ((v47 & 0x400000000000) != 0)
  {
    if ((v53 & 0x400000000000) == 0 || self->_portraitImpressionSlope != *((double *)v4 + 175))
      goto LABEL_2016;
  }
  else if ((v53 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x200000000000) != 0)
  {
    if ((v53 & 0x200000000000) == 0 || self->_portraitImpressionIntercept != *((double *)v4 + 174))
      goto LABEL_2016;
  }
  else if ((v53 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x2000000000000) != 0)
  {
    if ((v53 & 0x2000000000000) == 0 || self->_portraitRateSlope != *((double *)v4 + 178))
      goto LABEL_2016;
  }
  else if ((v53 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x1000000000000) != 0)
  {
    if ((v53 & 0x1000000000000) == 0 || self->_portraitRateIntercept != *((double *)v4 + 177))
      goto LABEL_2016;
  }
  else if ((v53 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x200000000) != 0)
  {
    if ((v53 & 0x200000000) == 0 || self->_newsTodayWidgetPresentationImpressionValue != *((double *)v4 + 162))
      goto LABEL_2016;
  }
  else if ((v53 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x100000000) != 0)
  {
    if ((v53 & 0x100000000) == 0 || self->_newsTodayWidgetPresentationClickValue != *((double *)v4 + 161))
      goto LABEL_2016;
  }
  else if ((v53 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x80000000) != 0)
  {
    if ((v53 & 0x80000000) == 0 || self->_newsTodayWidgetPresentationBaselineImpressionValue != *((double *)v4 + 160))
      goto LABEL_2016;
  }
  else if ((v53 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x40000000) != 0)
  {
    if ((v53 & 0x40000000) == 0 || self->_newsTodayWidgetPresentationBaselineClickValue != *((double *)v4 + 159))
      goto LABEL_2016;
  }
  else if ((v53 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x20000000) != 0)
  {
    if ((v53 & 0x20000000) == 0 || self->_newsTodayWidgetClickImpressionValue != *((double *)v4 + 158))
      goto LABEL_2016;
  }
  else if ((v53 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x10000000) != 0)
  {
    if ((v53 & 0x10000000) == 0 || self->_newsTodayWidgetClickClickValue != *((double *)v4 + 157))
      goto LABEL_2016;
  }
  else if ((v53 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x8000000) != 0)
  {
    if ((v53 & 0x8000000) == 0 || self->_newsTodayWidgetClickBaselineImpressionValue != *((double *)v4 + 156))
      goto LABEL_2016;
  }
  else if ((v53 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x4000000) != 0)
  {
    if ((v53 & 0x4000000) == 0 || self->_newsTodayWidgetClickBaselineClickValue != *((double *)v4 + 155))
      goto LABEL_2016;
  }
  else if ((v53 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x2000000000) != 0)
  {
    if ((v53 & 0x2000000000) == 0 || self->_newsTodayWidgetVideoPlaybackImpressionValue != *((double *)v4 + 166))
      goto LABEL_2016;
  }
  else if ((v53 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x1000000000) != 0)
  {
    if ((v53 & 0x1000000000) == 0 || self->_newsTodayWidgetVideoPlaybackClickValue != *((double *)v4 + 165))
      goto LABEL_2016;
  }
  else if ((v53 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x800000000) != 0)
  {
    if ((v53 & 0x800000000) == 0
      || self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue != *((double *)v4 + 164))
    {
      goto LABEL_2016;
    }
  }
  else if ((v53 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x400000000) != 0)
  {
    if ((v53 & 0x400000000) == 0 || self->_newsTodayWidgetVideoPlaybackBaselineClickValue != *((double *)v4 + 163))
      goto LABEL_2016;
  }
  else if ((v53 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x1000000000000000) != 0)
  {
    if ((v55 & 0x1000000000000000) == 0 || self->_ctrWithZeroSubscribed != *((double *)v4 + 61))
      goto LABEL_2016;
  }
  else if ((v55 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x4000000000000) != 0)
  {
    if ((v55 & 0x4000000000000) == 0 || self->_ctrWithOneSubscribed != *((double *)v4 + 51))
      goto LABEL_2016;
  }
  else if ((v55 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x200000000000000) != 0)
  {
    if ((v55 & 0x200000000000000) == 0 || self->_ctrWithTwoSubscribed != *((double *)v4 + 58))
      goto LABEL_2016;
  }
  else if ((v55 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x40000000000000) != 0)
  {
    if ((v55 & 0x40000000000000) == 0 || self->_ctrWithThreeSubscribed != *((double *)v4 + 55))
      goto LABEL_2016;
  }
  else if ((v55 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x800000000000000) != 0)
  {
    if ((v55 & 0x800000000000000) == 0 || self->_ctrWithZeroMuted != *((double *)v4 + 60))
      goto LABEL_2016;
  }
  else if ((v55 & 0x800000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x2000000000000) != 0)
  {
    if ((v55 & 0x2000000000000) == 0 || self->_ctrWithOneMuted != *((double *)v4 + 50))
      goto LABEL_2016;
  }
  else if ((v55 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x100000000000000) != 0)
  {
    if ((v55 & 0x100000000000000) == 0 || self->_ctrWithTwoMuted != *((double *)v4 + 57))
      goto LABEL_2016;
  }
  else if ((v55 & 0x100000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x20000000000000) != 0)
  {
    if ((v55 & 0x20000000000000) == 0 || self->_ctrWithThreeMuted != *((double *)v4 + 54))
      goto LABEL_2016;
  }
  else if ((v55 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x400000000000000) != 0)
  {
    if ((v55 & 0x400000000000000) == 0 || self->_ctrWithZeroAutofavorited != *((double *)v4 + 59))
      goto LABEL_2016;
  }
  else if ((v55 & 0x400000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x1000000000000) != 0)
  {
    if ((v55 & 0x1000000000000) == 0 || self->_ctrWithOneAutofavorited != *((double *)v4 + 49))
      goto LABEL_2016;
  }
  else if ((v55 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x80000000000000) != 0)
  {
    if ((v55 & 0x80000000000000) == 0 || self->_ctrWithTwoAutofavorited != *((double *)v4 + 56))
      goto LABEL_2016;
  }
  else if ((v55 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x10000000000000) != 0)
  {
    if ((v55 & 0x10000000000000) == 0 || self->_ctrWithThreeAutofavorited != *((double *)v4 + 53))
      goto LABEL_2016;
  }
  else if ((v55 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x400000000) != 0)
  {
    if ((v55 & 0x400000000) == 0 || self->_autofavoritedVoteCoefficient != *((double *)v4 + 35))
      goto LABEL_2016;
  }
  else if ((v55 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x20) != 0)
  {
    if ((v54 & 0x20) == 0 || self->_realTimeUserFeedbackCoefficient != *((double *)v4 + 198))
      goto LABEL_2016;
  }
  else if ((v54 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  if ((v49 & 0x20000000) != 0)
  {
    if ((v56 & 0x20000000) == 0 || self->_globalScoreToCtrSlope != *((double *)v4 + 94))
      goto LABEL_2016;
  }
  else if ((v56 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v49 & 0x10000000) != 0)
  {
    if ((v56 & 0x10000000) == 0 || self->_globalScoreToCtrIntercept != *((double *)v4 + 93))
      goto LABEL_2016;
  }
  else if ((v56 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x1000000000) != 0)
  {
    if ((v55 & 0x1000000000) == 0 || self->_baselineArticleScore != *((double *)v4 + 37))
      goto LABEL_2016;
  }
  else if ((v55 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x80) != 0)
  {
    if ((v55 & 0x80) == 0 || self->_appInstallImpressionValue != *((double *)v4 + 8))
      goto LABEL_2016;
  }
  else if ((v55 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x40) != 0)
  {
    if ((v55 & 0x40) == 0 || self->_appInstallClickValue != *((double *)v4 + 7))
      goto LABEL_2016;
  }
  else if ((v55 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x20) != 0)
  {
    if ((v55 & 0x20) == 0 || self->_appInstallBaselineImpressionValue != *((double *)v4 + 6))
      goto LABEL_2016;
  }
  else if ((v55 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x10) != 0)
  {
    if ((v55 & 0x10) == 0 || self->_appInstallBaselineClickValue != *((double *)v4 + 5))
      goto LABEL_2016;
  }
  else if ((v55 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 8) != 0)
  {
    if ((v55 & 8) == 0 || self->_appInFocusImpressionValue != *((double *)v4 + 4))
      goto LABEL_2016;
  }
  else if ((v55 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 4) != 0)
  {
    if ((v55 & 4) == 0 || self->_appInFocusClickValue != *((double *)v4 + 3))
      goto LABEL_2016;
  }
  else if ((v55 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 2) != 0)
  {
    if ((v55 & 2) == 0 || self->_appInFocusBaselineImpressionValue != *((double *)v4 + 2))
      goto LABEL_2016;
  }
  else if ((v55 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 1) != 0)
  {
    if ((v55 & 1) == 0 || self->_appInFocusBaselineClickValue != *((double *)v4 + 1))
      goto LABEL_2016;
  }
  else if ((v55 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x80000) != 0)
  {
    if ((v54 & 0x80000) == 0 || self->_safariHistoryImpressionValue != *((double *)v4 + 212))
      goto LABEL_2016;
  }
  else if ((v54 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x40000) != 0)
  {
    if ((v54 & 0x40000) == 0 || self->_safariHistoryClickValue != *((double *)v4 + 211))
      goto LABEL_2016;
  }
  else if ((v54 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x20000) != 0)
  {
    if ((v54 & 0x20000) == 0 || self->_safariHistoryBaselineImpressionValue != *((double *)v4 + 210))
      goto LABEL_2016;
  }
  else if ((v54 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x10000) != 0)
  {
    if ((v54 & 0x10000) == 0 || self->_safariHistoryBaselineClickValue != *((double *)v4 + 209))
      goto LABEL_2016;
  }
  else if ((v54 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 4) != 0)
  {
    if ((v51 & 4) == 0 || self->_videoComplete25ImpressionValue != *((double *)v4 + 323))
      goto LABEL_2016;
  }
  else if ((v51 & 4) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 2) != 0)
  {
    if ((v51 & 2) == 0 || self->_videoComplete25ClickValue != *((double *)v4 + 322))
      goto LABEL_2016;
  }
  else if ((v51 & 2) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 1) != 0)
  {
    if ((v51 & 1) == 0 || self->_videoComplete25BaselineImpressionValue != *((double *)v4 + 321))
      goto LABEL_2016;
  }
  else if ((v51 & 1) != 0)
  {
    goto LABEL_2016;
  }
  if (v45 < 0)
  {
    if ((v52 & 0x8000000000000000) == 0 || self->_videoComplete25BaselineClickValue != *((double *)v4 + 320))
      goto LABEL_2016;
  }
  else if (v52 < 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x40) != 0)
  {
    if ((v51 & 0x40) == 0 || self->_videoComplete50ImpressionValue != *((double *)v4 + 327))
      goto LABEL_2016;
  }
  else if ((v51 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x20) != 0)
  {
    if ((v51 & 0x20) == 0 || self->_videoComplete50ClickValue != *((double *)v4 + 326))
      goto LABEL_2016;
  }
  else if ((v51 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  v57 = *((_QWORD *)v4 + 375);
  v58 = *((_QWORD *)v4 + 376);
  v60 = *((_QWORD *)v4 + 373);
  v59 = *((_QWORD *)v4 + 374);
  v61 = *((_QWORD *)v4 + 371);
  v62 = *((_QWORD *)v4 + 372);
  v63 = *((_WORD *)v4 + 1508);
  if ((v46 & 0x10) != 0)
  {
    if ((v58 & 0x10) == 0 || self->_videoComplete50BaselineImpressionValue != *((double *)v4 + 325))
      goto LABEL_2016;
  }
  else if ((v58 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 8) != 0)
  {
    if ((v58 & 8) == 0 || self->_videoComplete50BaselineClickValue != *((double *)v4 + 324))
      goto LABEL_2016;
  }
  else if ((v58 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x400) != 0)
  {
    if ((v58 & 0x400) == 0 || self->_videoComplete75ImpressionValue != *((double *)v4 + 331))
      goto LABEL_2016;
  }
  else if ((v58 & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x200) != 0)
  {
    if ((v58 & 0x200) == 0 || self->_videoComplete75ClickValue != *((double *)v4 + 330))
      goto LABEL_2016;
  }
  else if ((v58 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x100) != 0)
  {
    if ((v58 & 0x100) == 0 || self->_videoComplete75BaselineImpressionValue != *((double *)v4 + 329))
      goto LABEL_2016;
  }
  else if ((v58 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x80) != 0)
  {
    if ((v58 & 0x80) == 0 || self->_videoComplete75BaselineClickValue != *((double *)v4 + 328))
      goto LABEL_2016;
  }
  else if ((v58 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x400000) != 0)
  {
    if ((v61 & 0x400000) == 0 || self->_autoFavoriteMinClicks != *((double *)v4 + 23))
      goto LABEL_2016;
  }
  else if ((v61 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v49 & 0x2000000) != 0)
  {
    if ((v62 & 0x2000000) == 0 || self->_globalScoreCoefficientHalfLife != *((double *)v4 + 90))
      goto LABEL_2016;
  }
  else if ((v62 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v49 & 0x4000000) != 0)
  {
    if ((v62 & 0x4000000) == 0 || self->_globalScoreCoefficientInitialMultiplier != *((double *)v4 + 91))
      goto LABEL_2016;
  }
  else if ((v62 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x20000000000000) != 0)
  {
    if ((v58 & 0x20000000000000) == 0 || self->_minClusterSizeIPhoneAutoFavorite != *((_DWORD *)v4 + 722))
      goto LABEL_2016;
  }
  else if ((v58 & 0x20000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x200000000000) != 0)
  {
    if ((v58 & 0x200000000000) == 0 || self->_maxClusterSizeIPhoneAutoFavorite != *((_DWORD *)v4 + 714))
      goto LABEL_2016;
  }
  else if ((v58 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x200000000000000) != 0)
  {
    if ((v58 & 0x200000000000000) == 0 || self->_minIdealClusterSizeIPhoneAutoFavorite != *((_DWORD *)v4 + 726))
      goto LABEL_2016;
  }
  else if ((v58 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x2000000000000) != 0)
  {
    if ((v58 & 0x2000000000000) == 0 || self->_maxIdealClusterSizeIPhoneAutoFavorite != *((_DWORD *)v4 + 718))
      goto LABEL_2016;
  }
  else if ((v58 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x8000000000000) != 0)
  {
    if ((v58 & 0x8000000000000) == 0 || self->_minClusterSizeIPadAutoFavorite != *((_DWORD *)v4 + 720))
      goto LABEL_2016;
  }
  else if ((v58 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x80000000000) != 0)
  {
    if ((v58 & 0x80000000000) == 0 || self->_maxClusterSizeIPadAutoFavorite != *((_DWORD *)v4 + 712))
      goto LABEL_2016;
  }
  else if ((v58 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x80000000000000) != 0)
  {
    if ((v58 & 0x80000000000000) == 0 || self->_minIdealClusterSizeIPadAutoFavorite != *((_DWORD *)v4 + 724))
      goto LABEL_2016;
  }
  else if ((v58 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v46 & 0x800000000000) != 0)
  {
    if ((v58 & 0x800000000000) == 0 || self->_maxIdealClusterSizeIPadAutoFavorite != *((_DWORD *)v4 + 716))
      goto LABEL_2016;
  }
  else if ((v58 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x80000000000000) != 0)
  {
    if ((v59 & 0x80000000000000) == 0 || self->_swipeToArticleWeakClickMinimumDuration != *((double *)v4 + 248))
      goto LABEL_2016;
  }
  else if ((v59 & 0x80000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x40000000000000) != 0)
  {
    if ((v59 & 0x40000000000000) == 0 || self->_swipeToArticleHeavyClickMinimumDuration != *((double *)v4 + 247))
      goto LABEL_2016;
  }
  else if ((v59 & 0x40000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x10) != 0)
  {
    if ((v60 & 0x10) == 0 || self->_maxSuggestionsCount != *((_QWORD *)v4 + 133))
      goto LABEL_2016;
  }
  else if ((v60 & 0x10) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x400000000000) != 0)
  {
    if ((v61 & 0x400000000000) == 0 || self->_cohortMembershipFavoritedBoost != *((double *)v4 + 47))
      goto LABEL_2016;
  }
  else if ((v61 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x100000000000) != 0)
  {
    if ((v61 & 0x100000000000) == 0 || self->_cohortMembershipCurvature != *((double *)v4 + 45))
      goto LABEL_2016;
  }
  else if ((v61 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x80000000000) != 0)
  {
    if ((v61 & 0x80000000000) == 0 || self->_cohortMembershipCtrCeiling != *((double *)v4 + 44))
      goto LABEL_2016;
  }
  else if ((v61 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x8000) != 0)
  {
    if ((v59 & 0x8000) == 0 || self->_safariEventBlackoutSeconds != *((double *)v4 + 208))
      goto LABEL_2016;
  }
  else if ((v59 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x10000000000) != 0)
  {
    if ((v61 & 0x10000000000) == 0 || self->_channelTopicDiversificationPenalty != *((double *)v4 + 41))
      goto LABEL_2016;
  }
  else if ((v61 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x40) != 0)
  {
    if ((v59 & 0x40) == 0 || self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient != *((double *)v4 + 199))
      goto LABEL_2016;
  }
  else if ((v59 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x80000000) != 0)
  {
    if ((v61 & 0x80000000) == 0 || self->_autoFavoriteTagFavorabilityExponent != *((double *)v4 + 32))
      goto LABEL_2016;
  }
  else if ((v61 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x40000000) != 0)
  {
    if ((v61 & 0x40000000) == 0 || self->_autoFavoritePriorFactorExponent != *((double *)v4 + 31))
      goto LABEL_2016;
  }
  else if ((v61 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v45 & 0x10000000000000) != 0)
  {
    if ((v57 & 0x10000000000000) == 0
      || self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio != *((double *)v4 + 309))
    {
      goto LABEL_2016;
    }
  }
  else if ((v57 & 0x10000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_WORD *)&self->_has + 24) & 0x400) != 0)
  {
    if ((*((_WORD *)v4 + 1508) & 0x400) == 0)
      goto LABEL_2016;
    if (self->_onlyConsiderBestSourceFeedsInForYouGroup)
    {
      if (!*((_BYTE *)v4 + 2964))
        goto LABEL_2016;
    }
    else if (*((_BYTE *)v4 + 2964))
    {
      goto LABEL_2016;
    }
  }
  else if ((*((_WORD *)v4 + 1508) & 0x400) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x800000) != 0)
  {
    if ((v59 & 0x800000) == 0 || self->_safariTagFavorabilityExponent != *((double *)v4 + 216))
      goto LABEL_2016;
  }
  else if ((v59 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v48 & 0x200000) != 0)
  {
    if ((v59 & 0x200000) == 0 || self->_safariPriorFactorExponent != *((double *)v4 + 214))
      goto LABEL_2016;
  }
  else if ((v59 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x800) != 0)
  {
    if ((v61 & 0x800) == 0 || self->_appUsageTagFavorabilityExponent != *((double *)v4 + 12))
      goto LABEL_2016;
  }
  else if ((v61 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v50 & 0x200) != 0)
  {
    if ((v61 & 0x200) == 0 || self->_appUsagePriorFactorExponent != *((double *)v4 + 10))
      goto LABEL_2016;
  }
  else if ((v61 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x4000000000000) != 0)
  {
    if ((v60 & 0x4000000000000) == 0 || self->_portraitTagFavorabilityExponent != *((double *)v4 + 179))
      goto LABEL_2016;
  }
  else if ((v60 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x800000000000) != 0)
  {
    if ((v60 & 0x800000000000) == 0 || self->_portraitPriorFactorExponent != *((double *)v4 + 176))
      goto LABEL_2016;
  }
  else if ((v60 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v49 & 0x200000000000000) != 0)
  {
    if ((v62 & 0x200000000000000) == 0 || self->_internalUsageSignalWeight != *((double *)v4 + 122))
      goto LABEL_2016;
  }
  else if ((v62 & 0x200000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_WORD *)&self->_has + 24) & 0x20) != 0)
  {
    if ((v63 & 0x20) != 0)
    {
      if (self->_enablePreTigrisArticleScoring)
      {
        if (!*((_BYTE *)v4 + 2959))
          goto LABEL_2016;
        goto LABEL_1704;
      }
      if (!*((_BYTE *)v4 + 2959))
        goto LABEL_1704;
    }
LABEL_2016:
    v78 = 0;
    goto LABEL_2017;
  }
  if ((v63 & 0x20) != 0)
    goto LABEL_2016;
LABEL_1704:
  if ((v47 & 0x4000000000) != 0)
  {
    if ((v60 & 0x4000000000) == 0 || self->_numEventsToDisableDefaultTopics != *((_QWORD *)v4 + 167))
      goto LABEL_2016;
  }
  else if ((v60 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x80) != 0)
  {
    if ((v60 & 0x80) == 0 || self->_metaGroupingRelatednessThreshold != *((double *)v4 + 136))
      goto LABEL_2016;
  }
  else if ((v60 & 0x80) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x40) != 0)
  {
    if ((v60 & 0x40) == 0 || self->_metaGroupingRelatednessKWeight != *((double *)v4 + 135))
      goto LABEL_2016;
  }
  else if ((v60 & 0x40) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x200) != 0)
  {
    if ((v60 & 0x200) == 0 || self->_metaGroupingTopicScoreWeight != *((double *)v4 + 138))
      goto LABEL_2016;
  }
  else if ((v60 & 0x200) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x20) != 0)
  {
    if ((v60 & 0x20) == 0 || self->_metaGroupingHighestScoringRelativeScoreMultiplier != *((double *)v4 + 134))
      goto LABEL_2016;
  }
  else if ((v60 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  if ((v47 & 0x100) != 0)
  {
    if ((v60 & 0x100) == 0 || self->_metaGroupingSubscribedTopicMultiplier != *((double *)v4 + 137))
      goto LABEL_2016;
  }
  else if ((v60 & 0x100) != 0)
  {
    goto LABEL_2016;
  }
  realTimeUserFeedbackTagCoefficients = self->_realTimeUserFeedbackTagCoefficients;
  if ((unint64_t)realTimeUserFeedbackTagCoefficients | *((_QWORD *)v4 + 368)
    && !-[NSMutableArray isEqual:](realTimeUserFeedbackTagCoefficients, "isEqual:"))
  {
    goto LABEL_2016;
  }
  v65 = *((_QWORD *)&self->_has + 4);
  v67 = *((_QWORD *)&self->_has + 2);
  v66 = *((_QWORD *)&self->_has + 3);
  v68 = (uint64_t)self->_has;
  v69 = *((_QWORD *)&self->_has + 1);
  v71 = *((_QWORD *)v4 + 375);
  v70 = *((_QWORD *)v4 + 376);
  v73 = *((_QWORD *)v4 + 373);
  v72 = *((_QWORD *)v4 + 374);
  v74 = *((_QWORD *)v4 + 371);
  v75 = *((_QWORD *)v4 + 372);
  if ((v69 & 0x8000) != 0)
  {
    if ((v75 & 0x8000) == 0 || self->_expandedAutofavoriteClusterMinSizeMultiplier != *((double *)v4 + 80))
      goto LABEL_2016;
  }
  else if ((v75 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v69 & 0x4000) != 0)
  {
    if ((v75 & 0x4000) == 0 || self->_expandedAutofavoriteClusterMaxSizeMultiplier != *((double *)v4 + 79))
      goto LABEL_2016;
  }
  else if ((v75 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 8) != 0)
  {
    if ((v73 & 8) == 0 || self->_maxExpandedAutofavoriteGroupCandidateRatio != *((double *)v4 + 132))
      goto LABEL_2016;
  }
  else if ((v73 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v68 & 0x200000) != 0)
  {
    if ((v74 & 0x200000) == 0 || self->_autoFavoriteMaxIdleTime != *((double *)v4 + 22))
      goto LABEL_2016;
  }
  else if ((v74 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((*((_QWORD *)&self->_has + 5) & 0x8000000) != 0)
  {
    if ((v70 & 0x8000000) == 0 || self->_auditionedAutoFavoritesEmitterLimit != *((_DWORD *)v4 + 696))
      goto LABEL_2016;
  }
  else if ((v70 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 0x8000000000) != 0)
  {
    if ((v73 & 0x8000000000) == 0 || self->_numSubscriptionsToDisableDefaultTopics != *((_QWORD *)v4 + 168))
      goto LABEL_2016;
  }
  else if ((v73 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 0x1000000000000000) != 0)
  {
    if ((v73 & 0x1000000000000000) == 0 || self->_publisherAggregateWeight != *((double *)v4 + 189))
      goto LABEL_2016;
  }
  else if ((v73 & 0x1000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v69 & 8) != 0)
  {
    if ((v75 & 8) == 0 || self->_diversificationInitialPenalty != *((double *)v4 + 68))
      goto LABEL_2016;
  }
  else if ((v75 & 8) != 0)
  {
    goto LABEL_2016;
  }
  if ((v69 & 0x20) != 0)
  {
    if ((v75 & 0x20) == 0 || self->_diversificationPenaltyHalfLife != *((double *)v4 + 70))
      goto LABEL_2016;
  }
  else if ((v75 & 0x20) != 0)
  {
    goto LABEL_2016;
  }
  if ((v68 & 0x8000000000) != 0)
  {
    if ((v74 & 0x8000000000) == 0 || self->_channelTopicDiversificationInitialPenalty != *((double *)v4 + 40))
      goto LABEL_2016;
  }
  else if ((v74 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v68 & 0x20000000000) != 0)
  {
    if ((v74 & 0x20000000000) == 0 || self->_channelTopicDiversificationPenaltyHalfLife != *((double *)v4 + 42))
      goto LABEL_2016;
  }
  else if ((v74 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 0x2000000000000000) != 0)
  {
    if ((v73 & 0x2000000000000000) == 0 || self->_publisherDiversificationInitialPenalty != *((double *)v4 + 190))
      goto LABEL_2016;
  }
  else if ((v73 & 0x2000000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if (v67 < 0)
  {
    if ((v73 & 0x8000000000000000) == 0 || self->_publisherDiversificationPenaltyHalfLife != *((double *)v4 + 192))
      goto LABEL_2016;
  }
  else if (v73 < 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 0x800) != 0)
  {
    if ((v73 & 0x800) == 0 || self->_minimumGlobalScoreThreshold != *((double *)v4 + 140))
      goto LABEL_2016;
  }
  else if ((v73 & 0x800) != 0)
  {
    goto LABEL_2016;
  }
  if ((v67 & 0x1000) != 0)
  {
    if ((v73 & 0x1000) == 0 || self->_minimumGlobalScoreThresholdForSubscribedChannel != *((double *)v4 + 141))
      goto LABEL_2016;
  }
  else if ((v73 & 0x1000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v66 & 0x800000000000) != 0)
  {
    if ((v72 & 0x800000000000) == 0 || self->_subscribedChannelScoreCoefficient != *((double *)v4 + 240))
      goto LABEL_2016;
  }
  else if ((v72 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v66 & 0x1000000000000) != 0)
  {
    if ((v72 & 0x1000000000000) == 0 || self->_subscribedTopicsScoreCoefficient != *((double *)v4 + 241))
      goto LABEL_2016;
  }
  else if ((v72 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x4000) != 0)
  {
    if ((v71 & 0x4000) == 0 || self->_topicFeedBaselineRatePrior != *((double *)v4 + 271))
      goto LABEL_2016;
  }
  else if ((v71 & 0x4000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x80000000) != 0)
  {
    if ((v71 & 0x80000000) == 0 || self->_topicFeedDecayFactor != *((double *)v4 + 288))
      goto LABEL_2016;
  }
  else if ((v71 & 0x80000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x100000000) != 0)
  {
    if ((v71 & 0x100000000) == 0 || self->_topicFeedDemocratizationFactor != *((double *)v4 + 289))
      goto LABEL_2016;
  }
  else if ((v71 & 0x100000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x20000000000) != 0)
  {
    if ((v71 & 0x20000000000) == 0 || self->_topicFeedHalfLifeCoefficient != *((double *)v4 + 298))
      goto LABEL_2016;
  }
  else if ((v71 & 0x20000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x2000000000000) != 0)
  {
    if ((v71 & 0x2000000000000) == 0 || self->_topicFeedSubscribedChannelScoreCoefficient != *((double *)v4 + 306))
      goto LABEL_2016;
  }
  else if ((v71 & 0x2000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x100000000000) != 0)
  {
    if ((v71 & 0x100000000000) == 0 || self->_topicFeedMutedVoteCoefficient != *((double *)v4 + 301))
      goto LABEL_2016;
  }
  else if ((v71 & 0x100000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x200000000000) != 0)
  {
    if ((v71 & 0x200000000000) == 0 || self->_topicFeedPersonalizationCoefficient != *((double *)v4 + 302))
      goto LABEL_2016;
  }
  else if ((v71 & 0x200000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x400000000000) != 0)
  {
    if ((v71 & 0x400000000000) == 0 || self->_topicFeedPublisherAggregateWeight != *((double *)v4 + 303))
      goto LABEL_2016;
  }
  else if ((v71 & 0x400000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x1000000000) != 0)
  {
    if ((v71 & 0x1000000000) == 0 || self->_topicFeedGlobalScoreCoefficient != *((double *)v4 + 293))
      goto LABEL_2016;
  }
  else if ((v71 & 0x1000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x2000000000) != 0)
  {
    if ((v71 & 0x2000000000) == 0 || self->_topicFeedGlobalScoreCoefficientHalfLife != *((double *)v4 + 294))
      goto LABEL_2016;
  }
  else if ((v71 & 0x2000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x4000000000) != 0)
  {
    if ((v71 & 0x4000000000) == 0 || self->_topicFeedGlobalScoreCoefficientInitialMultiplier != *((double *)v4 + 295))
      goto LABEL_2016;
  }
  else if ((v71 & 0x4000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x8000000000) != 0)
  {
    if ((v71 & 0x8000000000) == 0 || self->_topicFeedGlobalScoreToCtrIntercept != *((double *)v4 + 296))
      goto LABEL_2016;
  }
  else if ((v71 & 0x8000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x10000000000) != 0)
  {
    if ((v71 & 0x10000000000) == 0 || self->_topicFeedGlobalScoreToCtrSlope != *((double *)v4 + 297))
      goto LABEL_2016;
  }
  else if ((v71 & 0x10000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x40000000000) != 0)
  {
    if ((v71 & 0x40000000000) == 0 || self->_topicFeedMinimumGlobalScoreThreshold != *((double *)v4 + 299))
      goto LABEL_2016;
  }
  else if ((v71 & 0x40000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x80000000000) != 0)
  {
    if ((v71 & 0x80000000000) == 0
      || self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel != *((double *)v4 + 300))
    {
      goto LABEL_2016;
    }
  }
  else if ((v71 & 0x80000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x800000000000) != 0)
  {
    if ((v71 & 0x800000000000) == 0 || self->_topicFeedRealTimeUserFeedbackCoefficient != *((double *)v4 + 304))
      goto LABEL_2016;
  }
  else if ((v71 & 0x800000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x1000000000000) != 0)
  {
    if ((v71 & 0x1000000000000) == 0
      || self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient != *((double *)v4 + 305))
    {
      goto LABEL_2016;
    }
  }
  else if ((v71 & 0x1000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x40000) != 0)
  {
    if ((v71 & 0x40000) == 0 || self->_topicFeedCohortMembershipCtrCeiling != *((double *)v4 + 275))
      goto LABEL_2016;
  }
  else if ((v71 & 0x40000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x80000) != 0)
  {
    if ((v71 & 0x80000) == 0 || self->_topicFeedCohortMembershipCurvature != *((double *)v4 + 276))
      goto LABEL_2016;
  }
  else if ((v71 & 0x80000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x100000) != 0)
  {
    if ((v71 & 0x100000) == 0 || self->_topicFeedCohortMembershipFavoritedBoost != *((double *)v4 + 277))
      goto LABEL_2016;
  }
  else if ((v71 & 0x100000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x200000) != 0)
  {
    if ((v71 & 0x200000) == 0 || self->_topicFeedCohortMembershipMinWeightedImpressions != *((double *)v4 + 278))
      goto LABEL_2016;
  }
  else if ((v71 & 0x200000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x4000000000000) != 0)
  {
    if ((v71 & 0x4000000000000) == 0 || self->_topicFeedSubscribedTopicsScoreCoefficient != *((double *)v4 + 307))
      goto LABEL_2016;
  }
  else if ((v71 & 0x4000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x40000000) != 0)
  {
    if ((v71 & 0x40000000) == 0 || self->_topicFeedCtrWithZeroSubscribed != *((double *)v4 + 287))
      goto LABEL_2016;
  }
  else if ((v71 & 0x40000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x800000) != 0)
  {
    if ((v71 & 0x800000) == 0 || self->_topicFeedCtrWithOneSubscribed != *((double *)v4 + 280))
      goto LABEL_2016;
  }
  else if ((v71 & 0x800000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x10000000) != 0)
  {
    if ((v71 & 0x10000000) == 0 || self->_topicFeedCtrWithTwoSubscribed != *((double *)v4 + 285))
      goto LABEL_2016;
  }
  else if ((v71 & 0x10000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x4000000) != 0)
  {
    if ((v71 & 0x4000000) == 0 || self->_topicFeedCtrWithThreeSubscribed != *((double *)v4 + 283))
      goto LABEL_2016;
  }
  else if ((v71 & 0x4000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x2000) != 0)
  {
    if ((v71 & 0x2000) == 0 || self->_topicFeedAutofavoritedVoteCoefficient != *((double *)v4 + 270))
      goto LABEL_2016;
  }
  else if ((v71 & 0x2000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x20000000) != 0)
  {
    if ((v71 & 0x20000000) == 0 || self->_topicFeedCtrWithZeroAutofavorited != *((double *)v4 + 286))
      goto LABEL_2016;
  }
  else if ((v71 & 0x20000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x400000) != 0)
  {
    if ((v71 & 0x400000) == 0 || self->_topicFeedCtrWithOneAutofavorited != *((double *)v4 + 279))
      goto LABEL_2016;
  }
  else if ((v71 & 0x400000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x8000000) != 0)
  {
    if ((v71 & 0x8000000) == 0 || self->_topicFeedCtrWithTwoAutofavorited != *((double *)v4 + 284))
      goto LABEL_2016;
  }
  else if ((v71 & 0x8000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x2000000) != 0)
  {
    if ((v71 & 0x2000000) == 0 || self->_topicFeedCtrWithThreeAutofavorited != *((double *)v4 + 282))
      goto LABEL_2016;
  }
  else if ((v71 & 0x2000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x200000000) != 0)
  {
    if ((v71 & 0x200000000) == 0 || self->_topicFeedDiversificationInitialPenalty != *((double *)v4 + 290))
      goto LABEL_2016;
  }
  else if ((v71 & 0x200000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x400000000) != 0)
  {
    if ((v71 & 0x400000000) == 0 || self->_topicFeedDiversificationPenalty != *((double *)v4 + 291))
      goto LABEL_2016;
  }
  else if ((v71 & 0x400000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x800000000) != 0)
  {
    if ((v71 & 0x800000000) == 0 || self->_topicFeedDiversificationPenaltyHalfLife != *((double *)v4 + 292))
      goto LABEL_2016;
  }
  else if ((v71 & 0x800000000) != 0)
  {
    goto LABEL_2016;
  }
  v76 = *((_QWORD *)v4 + 375);
  v77 = *((_QWORD *)v4 + 371);
  if ((v65 & 0x8000) != 0)
  {
    if ((v76 & 0x8000) == 0 || self->_topicFeedChannelTopicDiversificationInitialPenalty != *((double *)v4 + 272))
      goto LABEL_2016;
  }
  else if ((v76 & 0x8000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x10000) != 0)
  {
    if ((v76 & 0x10000) == 0 || self->_topicFeedChannelTopicDiversificationPenalty != *((double *)v4 + 273))
      goto LABEL_2016;
  }
  else if ((v76 & 0x10000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x20000) != 0)
  {
    if ((v76 & 0x20000) == 0 || self->_topicFeedChannelTopicDiversificationPenaltyHalfLife != *((double *)v4 + 274))
      goto LABEL_2016;
  }
  else if ((v76 & 0x20000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v68 & 0x8000000000000) != 0)
  {
    if ((v77 & 0x8000000000000) == 0 || self->_ctrWithSubscribedChannel != *((double *)v4 + 52))
      goto LABEL_2016;
  }
  else if ((v77 & 0x8000000000000) != 0)
  {
    goto LABEL_2016;
  }
  if ((v65 & 0x1000000) != 0)
  {
    if ((v76 & 0x1000000) == 0 || self->_topicFeedCtrWithSubscribedChannel != *((double *)v4 + 281))
      goto LABEL_2016;
    v78 = 1;
  }
  else
  {
    v78 = (*((_QWORD *)v4 + 375) & 0x1000000) == 0;
  }
LABEL_2017:

  return v78;
}

- (unint64_t)hash
{
  uint64_t v3;
  uint64_t has;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double decayFactor;
  double v12;
  long double v13;
  double v14;
  double baselineImpressionPrior;
  double v16;
  long double v17;
  double v18;
  double v19;
  unint64_t v20;
  double baselineRatePrior;
  double v22;
  long double v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  double featureImpressionPrior;
  double v29;
  long double v30;
  double v31;
  double globalScoreBump;
  double v33;
  long double v34;
  double v35;
  double v36;
  unint64_t v37;
  double subscriptionVoteCoefficient;
  double v39;
  long double v40;
  double v41;
  double v42;
  unint64_t v43;
  double personalizationCoefficient;
  double v45;
  long double v46;
  double v47;
  double v48;
  unint64_t v49;
  unint64_t v50;
  double globalScoreCoefficient;
  double v52;
  long double v53;
  double v54;
  double presentationImpressionValue;
  double v56;
  long double v57;
  double v58;
  double v59;
  unint64_t v60;
  double heavyClickImpressionValue;
  double v62;
  long double v63;
  double v64;
  double v65;
  unint64_t v66;
  double likeImpressionValue;
  double v68;
  long double v69;
  double v70;
  double v71;
  unint64_t v72;
  double shareImpressionValue;
  double v74;
  long double v75;
  double v76;
  double v77;
  unint64_t v78;
  double savedImpressionValue;
  double v80;
  long double v81;
  double v82;
  double v83;
  unint64_t v84;
  double subscribeImpressionValue;
  double v86;
  long double v87;
  double v88;
  double v89;
  unint64_t v90;
  double tappedImpressionValue;
  double v92;
  long double v93;
  double v94;
  double v95;
  unint64_t v96;
  double weakClickImpressionValue;
  double v98;
  long double v99;
  double v100;
  double v101;
  unint64_t v102;
  double unsubscribeImpressionValue;
  double v104;
  long double v105;
  double v106;
  double v107;
  unint64_t v108;
  double visitImpressionValue;
  double v110;
  long double v111;
  double v112;
  double v113;
  unint64_t v114;
  double dislikeImpressionValue;
  double v116;
  long double v117;
  double v118;
  double v119;
  unint64_t v120;
  double presentationClickValue;
  double v122;
  long double v123;
  double v124;
  double v125;
  unint64_t v126;
  double heavyClickClickValue;
  double v128;
  long double v129;
  double v130;
  double v131;
  unint64_t v132;
  unint64_t v133;
  double likeClickValue;
  double v135;
  long double v136;
  double v137;
  unint64_t v138;
  double shareClickValue;
  double v140;
  long double v141;
  double v142;
  unint64_t v143;
  double savedClickValue;
  double v145;
  long double v146;
  double v147;
  unint64_t v148;
  double subscribeClickValue;
  double v150;
  long double v151;
  double v152;
  unint64_t v153;
  double tappedClickValue;
  double v155;
  long double v156;
  double v157;
  unint64_t v158;
  double weakClickClickValue;
  double v160;
  long double v161;
  double v162;
  unint64_t v163;
  double unsubscribeClickValue;
  double v165;
  long double v166;
  double v167;
  unint64_t v168;
  double visitClickValue;
  double v170;
  long double v171;
  double v172;
  unint64_t v173;
  double dislikeClickValue;
  double v175;
  long double v176;
  double v177;
  unint64_t v178;
  double hourlyFlowRateMinimum;
  double v180;
  long double v181;
  double v182;
  unint64_t v183;
  double hourlyFlowRateSubscriptionCountBuffer;
  double v185;
  long double v186;
  double v187;
  unint64_t v188;
  double hourlyFlowRateDampeningFactor;
  double v190;
  long double v191;
  double v192;
  unint64_t v193;
  double democratizationFactor;
  double v195;
  long double v196;
  double v197;
  double flowRateMinimumDampeningFactor;
  double v199;
  long double v200;
  double v201;
  unint64_t v202;
  unint64_t v203;
  double halfLifeCoefficient;
  double v205;
  long double v206;
  double v207;
  unint64_t v208;
  double diversificationPenalty;
  double v210;
  long double v211;
  double v212;
  unint64_t v213;
  double heavyClickMinimumDuration;
  double v215;
  long double v216;
  double v217;
  unint64_t v218;
  double subscriptionRelatedImpressionValue;
  double v220;
  long double v221;
  double v222;
  unint64_t v223;
  double subscriptionRelatedClickValue;
  double v225;
  long double v226;
  double v227;
  unint64_t v228;
  double hourlyFlowRatePerSubscription;
  double v230;
  long double v231;
  double v232;
  double flowRateDegreeOfDynamism;
  double v234;
  long double v235;
  double v236;
  unint64_t v237;
  unint64_t v238;
  double flowRateDecayFactor;
  double v240;
  long double v241;
  double v242;
  unint64_t v243;
  double flowRatePriorWeight;
  double v245;
  long double v246;
  double v247;
  unint64_t v248;
  double presentationImpressionValueBaseline;
  double v250;
  long double v251;
  double v252;
  unint64_t v253;
  double heavyClickImpressionValueBaseline;
  double v255;
  long double v256;
  double v257;
  unint64_t v258;
  double likeImpressionValueBaseline;
  double v260;
  long double v261;
  double v262;
  unint64_t v263;
  double shareImpressionValueBaseline;
  double v265;
  long double v266;
  double v267;
  unint64_t v268;
  double savedImpressionValueBaseline;
  double v270;
  long double v271;
  double v272;
  unint64_t v273;
  double subscribeImpressionValueBaseline;
  double v275;
  long double v276;
  double v277;
  unint64_t v278;
  double tappedImpressionValueBaseline;
  double v280;
  long double v281;
  double v282;
  unint64_t v283;
  double weakClickImpressionValueBaseline;
  double v285;
  long double v286;
  double v287;
  unint64_t v288;
  double unsubscribeImpressionValueBaseline;
  double v290;
  long double v291;
  double v292;
  unint64_t v293;
  double visitImpressionValueBaseline;
  double v295;
  long double v296;
  double v297;
  unint64_t v298;
  double dislikeImpressionValueBaseline;
  double v300;
  long double v301;
  double v302;
  unint64_t v303;
  double subscriptionRelatedImpressionValueBaseline;
  double v305;
  long double v306;
  double v307;
  unint64_t v308;
  double presentationClickValueBaseline;
  double v310;
  long double v311;
  double v312;
  unint64_t v313;
  double heavyClickClickValueBaseline;
  double v315;
  long double v316;
  double v317;
  unint64_t v318;
  double likeClickValueBaseline;
  double v320;
  long double v321;
  double v322;
  unint64_t v323;
  double shareClickValueBaseline;
  double v325;
  long double v326;
  double v327;
  unint64_t v328;
  double savedClickValueBaseline;
  double v330;
  long double v331;
  double v332;
  unint64_t v333;
  double subscribeClickValueBaseline;
  double v335;
  long double v336;
  double v337;
  unint64_t v338;
  double tappedClickValueBaseline;
  double v340;
  long double v341;
  double v342;
  unint64_t v343;
  double weakClickClickValueBaseline;
  double v345;
  long double v346;
  double v347;
  unint64_t v348;
  double unsubscribeClickValueBaseline;
  double v350;
  long double v351;
  double v352;
  unint64_t v353;
  double visitClickValueBaseline;
  double v355;
  long double v356;
  double v357;
  unint64_t v358;
  double dislikeClickValueBaseline;
  double v360;
  long double v361;
  double v362;
  unint64_t v363;
  double subscriptionRelatedClickValueBaseline;
  double v365;
  long double v366;
  double v367;
  unint64_t v368;
  double existingSubscriptionImpressionValue;
  double v370;
  long double v371;
  double v372;
  unint64_t v373;
  double existingSubscriptionClickValue;
  double v375;
  long double v376;
  double v377;
  unint64_t v378;
  double existingSubscriptionImpressionValueBaseline;
  double v380;
  long double v381;
  double v382;
  unint64_t v383;
  double existingSubscriptionClickValueBaseline;
  double v385;
  long double v386;
  double v387;
  unint64_t v388;
  double existingSubscriptionRelatedImpressionValue;
  double v390;
  long double v391;
  double v392;
  unint64_t v393;
  double existingSubscriptionRelatedClickValue;
  double v395;
  long double v396;
  double v397;
  unint64_t v398;
  double existingSubscriptionRelatedImpressionValueBaseline;
  double v400;
  long double v401;
  double v402;
  unint64_t v403;
  double existingSubscriptionRelatedClickValueBaseline;
  double v405;
  long double v406;
  double v407;
  unint64_t v408;
  double globalScoreStretchingFactor;
  double v410;
  long double v411;
  double v412;
  unint64_t v413;
  double hourlyFlowRateFloor;
  double v415;
  long double v416;
  double v417;
  unint64_t v418;
  double hourlyFlowRateCeiling;
  double v420;
  long double v421;
  double v422;
  unint64_t v423;
  double saturatedSubscriptionCountFactor;
  double v425;
  long double v426;
  double v427;
  unint64_t v428;
  double publisherDiversificationPenalty;
  double v430;
  long double v431;
  double v432;
  double hourlyFlowRateAlpha;
  double v434;
  long double v435;
  double v436;
  unint64_t v437;
  unint64_t v438;
  double hourlyFlowRateBeta;
  double v440;
  long double v441;
  double v442;
  unint64_t v443;
  double hourlyFlowRateGamma;
  double v445;
  long double v446;
  double v447;
  unint64_t v448;
  double recommendationPresentationFeedImpressionValue;
  double v450;
  long double v451;
  double v452;
  unint64_t v453;
  double recommendationPresentationFeedClickValue;
  double v455;
  long double v456;
  double v457;
  unint64_t v458;
  double recommendationPresentationExploreImpressionValue;
  double v460;
  long double v461;
  double v462;
  unint64_t v463;
  double recommendationPresentationExploreClickValue;
  double v465;
  long double v466;
  double v467;
  unint64_t v468;
  double recommendationPresentationFeedImpressionValueBaseline;
  double v470;
  long double v471;
  double v472;
  unint64_t v473;
  double recommendationPresentationFeedClickValueBaseline;
  double v475;
  long double v476;
  double v477;
  unint64_t v478;
  double recommendationPresentationExploreImpressionValueBaseline;
  double v480;
  long double v481;
  double v482;
  unint64_t v483;
  double recommendationPresentationExploreClickValueBaseline;
  double v485;
  long double v486;
  double v487;
  unint64_t v488;
  double premiumSubscriptionActivationImpressionValue;
  double v490;
  long double v491;
  double v492;
  unint64_t v493;
  double premiumSubscriptionActivationClickValue;
  double v495;
  long double v496;
  double v497;
  unint64_t v498;
  double premiumSubscriptionActivationImpressionValueBaseline;
  double v500;
  long double v501;
  double v502;
  unint64_t v503;
  double premiumSubscriptionActivationClickValueBaseline;
  double v505;
  long double v506;
  double v507;
  unint64_t v508;
  double lowQualityArticleRatio;
  double v510;
  long double v511;
  double v512;
  double searchBranchDecay;
  double v514;
  long double v515;
  double v516;
  unint64_t v517;
  unint64_t v518;
  double searchTimeLimit;
  double v520;
  long double v521;
  double v522;
  double searchBranchDecayIPhone;
  double v524;
  long double v525;
  double v526;
  unint64_t v527;
  unint64_t v528;
  double searchBranchDecayIPad;
  double v530;
  long double v531;
  double v532;
  double tagSizeCoeffIPhone;
  double v534;
  long double v535;
  double v536;
  unint64_t v537;
  unint64_t v538;
  double tagSizeCoeffIPad;
  double v540;
  long double v541;
  double v542;
  unint64_t v543;
  double tagPairsCoeffIPhone;
  double v545;
  long double v546;
  double v547;
  unint64_t v548;
  double tagPairsCoeffIPad;
  double v550;
  long double v551;
  double v552;
  unint64_t v553;
  double moveNewOrphansCoeffIPhone;
  double v555;
  long double v556;
  double v557;
  unint64_t v558;
  double moveNewOrphansCoeffIPad;
  double v560;
  long double v561;
  double v562;
  unint64_t v563;
  double moveSizeCoeffIPhone;
  double v565;
  long double v566;
  double v567;
  unint64_t v568;
  double moveSizeCoeffIPad;
  double v570;
  long double v571;
  double v572;
  unint64_t v573;
  double tagFavoritedCoeff;
  double v575;
  long double v576;
  double v577;
  unint64_t v578;
  double moveAboutnessNoiseStdIPhone;
  double v580;
  long double v581;
  double v582;
  unint64_t v583;
  double moveAboutnessNoiseStdIPad;
  double v585;
  long double v586;
  double v587;
  double overflownOrphansFilterCoeff;
  double v589;
  long double v590;
  double v591;
  unint64_t v592;
  unint64_t v593;
  double moveAboutnessWeightRatioIPhone;
  double v595;
  long double v596;
  double v597;
  unint64_t v598;
  double moveAboutnessWeightRatioIPad;
  double v600;
  long double v601;
  double v602;
  unint64_t v603;
  double groupingDoubleParam1;
  double v605;
  long double v606;
  double v607;
  unint64_t v608;
  double groupingDoubleParam2;
  double v610;
  long double v611;
  double v612;
  unint64_t v613;
  double groupingDoubleParam3;
  double v615;
  long double v616;
  double v617;
  unint64_t v618;
  double groupingDoubleParam4;
  double v620;
  long double v621;
  double v622;
  unint64_t v623;
  double groupingDoubleParam5;
  double v625;
  long double v626;
  double v627;
  unint64_t v628;
  double groupingDoubleParam6;
  double v630;
  long double v631;
  double v632;
  double utilityWeightAlpha;
  double v634;
  long double v635;
  double v636;
  unint64_t v637;
  unint64_t v638;
  double utilityWeightBeta;
  double v640;
  long double v641;
  double v642;
  double tagPersonalizationCoeffIPhone;
  double v644;
  long double v645;
  double v646;
  unint64_t v647;
  unint64_t v648;
  double tagPersonalizationCoeffIPad;
  double v650;
  long double v651;
  double v652;
  unint64_t v653;
  double tagArticleScoreCoeffIPhone;
  double v655;
  long double v656;
  double v657;
  unint64_t v658;
  double tagArticleScoreCoeffIPad;
  double v660;
  long double v661;
  double v662;
  unint64_t v663;
  double tagFavoritedCoeffIPhone;
  double v665;
  long double v666;
  double v667;
  unint64_t v668;
  double tagFavoritedCoeffIPad;
  double v670;
  long double v671;
  double v672;
  unint64_t v673;
  double articleEntityScoreWeightRatioIPhone;
  double v675;
  long double v676;
  double v677;
  unint64_t v678;
  double articleEntityScoreWeightRatioIPad;
  double v680;
  long double v681;
  double v682;
  unint64_t v683;
  double muteImpressionValue;
  double v685;
  long double v686;
  double v687;
  unint64_t v688;
  double unmuteImpressionValue;
  double v690;
  long double v691;
  double v692;
  unint64_t v693;
  double muteClickValue;
  double v695;
  long double v696;
  double v697;
  unint64_t v698;
  double unmuteClickValue;
  double v700;
  long double v701;
  double v702;
  unint64_t v703;
  double muteImpressionValueBaseline;
  double v705;
  long double v706;
  double v707;
  unint64_t v708;
  double unmuteImpressionValueBaseline;
  double v710;
  long double v711;
  double v712;
  unint64_t v713;
  double muteClickValueBaseline;
  double v715;
  long double v716;
  double v717;
  unint64_t v718;
  double unmuteClickValueBaseline;
  double v720;
  long double v721;
  double v722;
  unint64_t v723;
  double saturatedMutedCountFactor;
  double v725;
  long double v726;
  double v727;
  unint64_t v728;
  double mutedVoteCoefficient;
  double v730;
  long double v731;
  double v732;
  unint64_t v733;
  double importanceScalar;
  double v735;
  long double v736;
  double v737;
  unint64_t v738;
  double publisherDiversityMinSubscriptions;
  double v740;
  long double v741;
  double v742;
  unint64_t v743;
  double publisherDiversityMinArticleCount;
  double v745;
  long double v746;
  double v747;
  unint64_t v748;
  double publisherDiversityMaxArticleCount;
  double v750;
  long double v751;
  double v752;
  unint64_t v753;
  double publisherDiversityMaxArticleFilter;
  double v755;
  long double v756;
  double v757;
  unint64_t v758;
  double safariSignalWeight;
  double v760;
  long double v761;
  double v762;
  unint64_t v763;
  double safariTimeDecayMultiplier;
  double v765;
  long double v766;
  double v767;
  unint64_t v768;
  double safariOccurrenceDecayMultiplier;
  double v770;
  long double v771;
  double v772;
  unint64_t v773;
  double appUsageSignalWeight;
  double v775;
  long double v776;
  double v777;
  unint64_t v778;
  double appUsageTimeDecayMultiplier;
  double v780;
  long double v781;
  double v782;
  unint64_t v783;
  double appUsageOccurrenceDecayMultiplier;
  double v785;
  long double v786;
  double v787;
  unint64_t v788;
  double autoFavoriteGroupableMinImpressions;
  double v790;
  long double v791;
  double v792;
  unint64_t v793;
  double autoFavoriteGroupableMinRate;
  double v795;
  long double v796;
  double v797;
  unint64_t v798;
  double autoFavoriteGroupableMinRelativeRate;
  double v800;
  long double v801;
  double v802;
  unint64_t v803;
  double autoFavoriteFetchableMinImpressions;
  double v805;
  long double v806;
  double v807;
  unint64_t v808;
  double autoFavoriteFetchableMinRate;
  double v810;
  long double v811;
  double v812;
  unint64_t v813;
  double autoFavoriteFetchableMinRelativeRate;
  double v815;
  long double v816;
  double v817;
  unint64_t v818;
  double averageSafariVisitsPerDay;
  double v820;
  long double v821;
  double v822;
  double portraitUsageSignalWeight;
  double v824;
  long double v825;
  double v826;
  unint64_t v827;
  unint64_t v828;
  double cohortMembershipBaselineCtrWeight;
  double v830;
  long double v831;
  double v832;
  unint64_t v833;
  double cohortMembershipCurveSteepness;
  double v835;
  long double v836;
  double v837;
  unint64_t v838;
  double cohortMembershipMinWeightedImpressions;
  double v840;
  long double v841;
  double v842;
  unint64_t v843;
  double autoFavoriteMinImpressions;
  double v845;
  long double v846;
  double v847;
  unint64_t v848;
  double autoFavoriteMinRate;
  double v850;
  long double v851;
  double v852;
  unint64_t v853;
  double autoFavoriteMinRelativeRate;
  double v855;
  long double v856;
  double v857;
  unint64_t v858;
  double autoUnfavoriteFactor;
  double v860;
  long double v861;
  double v862;
  unint64_t v863;
  double autoGroupableFactor;
  double v865;
  long double v866;
  double v867;
  unint64_t v868;
  double groupImpressionBiasCorrectionFactor;
  double v870;
  long double v871;
  double v872;
  unint64_t v873;
  double indexImpressionBiasCorrectionFactor;
  double v875;
  long double v876;
  double v877;
  unint64_t v878;
  double videoInitiatePlaybackImpressionValue;
  double v880;
  long double v881;
  double v882;
  unint64_t v883;
  double videoInitiatePlaybackClickValue;
  double v885;
  long double v886;
  double v887;
  unint64_t v888;
  double videoInitiatePlaybackBaselineImpressionValue;
  double v890;
  long double v891;
  double v892;
  unint64_t v893;
  double videoInitiatePlaybackBaselineClickValue;
  double v895;
  long double v896;
  double v897;
  unint64_t v898;
  double videoCompletePlaybackImpressionValue;
  double v900;
  long double v901;
  double v902;
  unint64_t v903;
  double videoCompletePlaybackClickValue;
  double v905;
  long double v906;
  double v907;
  unint64_t v908;
  double videoCompletePlaybackBaselineImpressionValue;
  double v910;
  long double v911;
  double v912;
  double videoCompletePlaybackBaselineClickValue;
  double v914;
  long double v915;
  double v916;
  double v917;
  unint64_t v918;
  double tagAutoFavoritedCoeffIPhone;
  double v920;
  long double v921;
  double v922;
  unint64_t v923;
  double tagAutoFavoritedCoeffIPad;
  double v925;
  long double v926;
  double v927;
  unint64_t v928;
  double tagGroupableCoeffIPhone;
  double v930;
  long double v931;
  double v932;
  unint64_t v933;
  double tagGroupableCoeffIPad;
  double v935;
  long double v936;
  double v937;
  unint64_t v938;
  double tagSpecificityCoeffIPhone;
  double v940;
  long double v941;
  double v942;
  unint64_t v943;
  double tagSpecificityCoeffIPad;
  double v945;
  long double v946;
  double v947;
  unint64_t v948;
  double optionalTagSpecificityScore;
  double v950;
  long double v951;
  double v952;
  unint64_t v953;
  double autoFavoriteMinObservationsSafari;
  double v955;
  long double v956;
  double v957;
  unint64_t v958;
  double autoFavoriteMinScoreSafari;
  double v960;
  long double v961;
  double v962;
  unint64_t v963;
  double autoFavoriteMinObservationsExtAppUsage;
  double v965;
  long double v966;
  double v967;
  unint64_t v968;
  double autoFavoriteMinScoreExtAppUsage;
  double v970;
  long double v971;
  double v972;
  unint64_t v973;
  double portraitDecayRate;
  double v975;
  long double v976;
  double v977;
  unint64_t v978;
  double portraitGlobalThreshold;
  double v980;
  long double v981;
  double v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  unint64_t v989;
  double portraitImpressionSlope;
  double v991;
  long double v992;
  double v993;
  unint64_t v994;
  double portraitImpressionIntercept;
  double v996;
  long double v997;
  double v998;
  unint64_t v999;
  double portraitRateSlope;
  double v1001;
  long double v1002;
  double v1003;
  unint64_t v1004;
  double portraitRateIntercept;
  double v1006;
  long double v1007;
  double v1008;
  unint64_t v1009;
  double newsTodayWidgetPresentationImpressionValue;
  double v1011;
  long double v1012;
  double v1013;
  unint64_t v1014;
  double newsTodayWidgetPresentationClickValue;
  double v1016;
  long double v1017;
  double v1018;
  unint64_t v1019;
  double newsTodayWidgetPresentationBaselineImpressionValue;
  double v1021;
  long double v1022;
  double v1023;
  unint64_t v1024;
  double newsTodayWidgetPresentationBaselineClickValue;
  double v1026;
  long double v1027;
  double v1028;
  unint64_t v1029;
  double newsTodayWidgetClickImpressionValue;
  double v1031;
  long double v1032;
  double v1033;
  unint64_t v1034;
  double newsTodayWidgetClickClickValue;
  double v1036;
  long double v1037;
  double v1038;
  unint64_t v1039;
  double newsTodayWidgetClickBaselineImpressionValue;
  double v1041;
  long double v1042;
  double v1043;
  unint64_t v1044;
  double newsTodayWidgetClickBaselineClickValue;
  double v1046;
  long double v1047;
  double v1048;
  unint64_t v1049;
  double newsTodayWidgetVideoPlaybackImpressionValue;
  double v1051;
  long double v1052;
  double v1053;
  unint64_t v1054;
  double newsTodayWidgetVideoPlaybackClickValue;
  double v1056;
  long double v1057;
  double v1058;
  unint64_t v1059;
  double newsTodayWidgetVideoPlaybackBaselineImpressionValue;
  double v1061;
  long double v1062;
  double v1063;
  unint64_t v1064;
  double newsTodayWidgetVideoPlaybackBaselineClickValue;
  double v1066;
  long double v1067;
  double v1068;
  unint64_t v1069;
  double ctrWithZeroSubscribed;
  double v1071;
  long double v1072;
  double v1073;
  unint64_t v1074;
  double ctrWithOneSubscribed;
  double v1076;
  long double v1077;
  double v1078;
  unint64_t v1079;
  double ctrWithTwoSubscribed;
  double v1081;
  long double v1082;
  double v1083;
  unint64_t v1084;
  double ctrWithThreeSubscribed;
  double v1086;
  long double v1087;
  double v1088;
  unint64_t v1089;
  double ctrWithZeroMuted;
  double v1091;
  long double v1092;
  double v1093;
  unint64_t v1094;
  double ctrWithOneMuted;
  double v1096;
  long double v1097;
  double v1098;
  unint64_t v1099;
  double ctrWithTwoMuted;
  double v1101;
  long double v1102;
  double v1103;
  unint64_t v1104;
  double ctrWithThreeMuted;
  double v1106;
  long double v1107;
  double v1108;
  unint64_t v1109;
  double ctrWithZeroAutofavorited;
  double v1111;
  long double v1112;
  double v1113;
  unint64_t v1114;
  double ctrWithOneAutofavorited;
  double v1116;
  long double v1117;
  double v1118;
  unint64_t v1119;
  double ctrWithTwoAutofavorited;
  double v1121;
  long double v1122;
  double v1123;
  unint64_t v1124;
  double ctrWithThreeAutofavorited;
  double v1126;
  long double v1127;
  double v1128;
  unint64_t v1129;
  double autofavoritedVoteCoefficient;
  double v1131;
  long double v1132;
  double v1133;
  unint64_t v1134;
  double realTimeUserFeedbackCoefficient;
  double v1136;
  long double v1137;
  double v1138;
  unint64_t v1139;
  double globalScoreToCtrSlope;
  double v1141;
  long double v1142;
  double v1143;
  unint64_t v1144;
  double globalScoreToCtrIntercept;
  double v1146;
  long double v1147;
  double v1148;
  unint64_t v1149;
  double baselineArticleScore;
  double v1151;
  long double v1152;
  double v1153;
  unint64_t v1154;
  double appInstallImpressionValue;
  double v1156;
  long double v1157;
  double v1158;
  unint64_t v1159;
  double appInstallClickValue;
  double v1161;
  long double v1162;
  double v1163;
  unint64_t v1164;
  double appInstallBaselineImpressionValue;
  double v1166;
  long double v1167;
  double v1168;
  unint64_t v1169;
  double appInstallBaselineClickValue;
  double v1171;
  long double v1172;
  double v1173;
  unint64_t v1174;
  double appInFocusImpressionValue;
  double v1176;
  long double v1177;
  double v1178;
  unint64_t v1179;
  double appInFocusClickValue;
  double v1181;
  long double v1182;
  double v1183;
  unint64_t v1184;
  double appInFocusBaselineImpressionValue;
  double v1186;
  long double v1187;
  double v1188;
  unint64_t v1189;
  double appInFocusBaselineClickValue;
  double v1191;
  long double v1192;
  double v1193;
  unint64_t v1194;
  double safariHistoryImpressionValue;
  double v1196;
  long double v1197;
  double v1198;
  unint64_t v1199;
  double safariHistoryClickValue;
  double v1201;
  long double v1202;
  double v1203;
  unint64_t v1204;
  double safariHistoryBaselineImpressionValue;
  double v1206;
  long double v1207;
  double v1208;
  unint64_t v1209;
  double safariHistoryBaselineClickValue;
  double v1211;
  long double v1212;
  double v1213;
  unint64_t v1214;
  double videoComplete25ImpressionValue;
  double v1216;
  long double v1217;
  double v1218;
  unint64_t v1219;
  double videoComplete25ClickValue;
  double v1221;
  long double v1222;
  double v1223;
  unint64_t v1224;
  double videoComplete25BaselineImpressionValue;
  double v1226;
  long double v1227;
  double v1228;
  unint64_t v1229;
  double videoComplete25BaselineClickValue;
  double v1231;
  long double v1232;
  double v1233;
  unint64_t v1234;
  double videoComplete50ImpressionValue;
  double v1236;
  long double v1237;
  double v1238;
  unint64_t v1239;
  double videoComplete50ClickValue;
  double v1241;
  long double v1242;
  double v1243;
  unint64_t v1244;
  double videoComplete50BaselineImpressionValue;
  double v1246;
  long double v1247;
  double v1248;
  unint64_t v1249;
  double videoComplete50BaselineClickValue;
  double v1251;
  long double v1252;
  double v1253;
  unint64_t v1254;
  double videoComplete75ImpressionValue;
  double v1256;
  long double v1257;
  double v1258;
  unint64_t v1259;
  double videoComplete75ClickValue;
  double v1261;
  long double v1262;
  double v1263;
  unint64_t v1264;
  double videoComplete75BaselineImpressionValue;
  double v1266;
  long double v1267;
  double v1268;
  unint64_t v1269;
  double videoComplete75BaselineClickValue;
  double v1271;
  long double v1272;
  double v1273;
  unint64_t v1274;
  double autoFavoriteMinClicks;
  double v1276;
  long double v1277;
  double v1278;
  unint64_t v1279;
  double globalScoreCoefficientHalfLife;
  double v1281;
  long double v1282;
  double v1283;
  unint64_t v1284;
  double globalScoreCoefficientInitialMultiplier;
  double v1286;
  long double v1287;
  double v1288;
  double swipeToArticleWeakClickMinimumDuration;
  double v1290;
  long double v1291;
  double v1292;
  unint64_t v1293;
  unint64_t v1294;
  double swipeToArticleHeavyClickMinimumDuration;
  double v1296;
  long double v1297;
  double v1298;
  double cohortMembershipFavoritedBoost;
  double v1300;
  long double v1301;
  double v1302;
  unint64_t v1303;
  unint64_t v1304;
  double cohortMembershipCurvature;
  double v1306;
  long double v1307;
  double v1308;
  unint64_t v1309;
  double cohortMembershipCtrCeiling;
  double v1311;
  long double v1312;
  double v1313;
  unint64_t v1314;
  double safariEventBlackoutSeconds;
  double v1316;
  long double v1317;
  double v1318;
  unint64_t v1319;
  double channelTopicDiversificationPenalty;
  double v1321;
  long double v1322;
  double v1323;
  unint64_t v1324;
  double realTimeUserFeedbackPublishDateHalfLifeCoefficient;
  double v1326;
  long double v1327;
  double v1328;
  unint64_t v1329;
  double autoFavoriteTagFavorabilityExponent;
  double v1331;
  long double v1332;
  double v1333;
  unint64_t v1334;
  double autoFavoritePriorFactorExponent;
  double v1336;
  long double v1337;
  double v1338;
  double uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
  double v1340;
  long double v1341;
  double v1342;
  double v1343;
  __int16 v1344;
  double safariTagFavorabilityExponent;
  double v1346;
  long double v1347;
  double v1348;
  unint64_t v1349;
  unint64_t v1350;
  double safariPriorFactorExponent;
  double v1352;
  long double v1353;
  double v1354;
  unint64_t v1355;
  double appUsageTagFavorabilityExponent;
  double v1357;
  long double v1358;
  double v1359;
  unint64_t v1360;
  double appUsagePriorFactorExponent;
  double v1362;
  long double v1363;
  double v1364;
  unint64_t v1365;
  double portraitTagFavorabilityExponent;
  double v1367;
  long double v1368;
  double v1369;
  unint64_t v1370;
  double portraitPriorFactorExponent;
  double v1372;
  long double v1373;
  double v1374;
  unint64_t v1375;
  double internalUsageSignalWeight;
  double v1377;
  long double v1378;
  double v1379;
  double metaGroupingRelatednessThreshold;
  double v1381;
  long double v1382;
  double v1383;
  unint64_t v1384;
  unint64_t v1385;
  double metaGroupingRelatednessKWeight;
  double v1387;
  long double v1388;
  double v1389;
  unint64_t v1390;
  double metaGroupingTopicScoreWeight;
  double v1392;
  long double v1393;
  double v1394;
  unint64_t v1395;
  double metaGroupingHighestScoringRelativeScoreMultiplier;
  double v1397;
  long double v1398;
  double v1399;
  unint64_t v1400;
  double metaGroupingSubscribedTopicMultiplier;
  double v1402;
  long double v1403;
  double v1404;
  uint64_t v1405;
  uint64_t v1406;
  uint64_t v1407;
  uint64_t v1408;
  uint64_t v1409;
  unint64_t v1410;
  double expandedAutofavoriteClusterMinSizeMultiplier;
  double v1412;
  long double v1413;
  double v1414;
  unint64_t v1415;
  double expandedAutofavoriteClusterMaxSizeMultiplier;
  double v1417;
  long double v1418;
  double v1419;
  unint64_t v1420;
  double maxExpandedAutofavoriteGroupCandidateRatio;
  double v1422;
  long double v1423;
  double v1424;
  unint64_t v1425;
  double autoFavoriteMaxIdleTime;
  double v1427;
  long double v1428;
  double v1429;
  double publisherAggregateWeight;
  double v1431;
  long double v1432;
  double v1433;
  unint64_t v1434;
  unint64_t v1435;
  double diversificationInitialPenalty;
  double v1437;
  long double v1438;
  double v1439;
  unint64_t v1440;
  double diversificationPenaltyHalfLife;
  double v1442;
  long double v1443;
  double v1444;
  unint64_t v1445;
  double channelTopicDiversificationInitialPenalty;
  double v1447;
  long double v1448;
  double v1449;
  unint64_t v1450;
  double channelTopicDiversificationPenaltyHalfLife;
  double v1452;
  long double v1453;
  double v1454;
  unint64_t v1455;
  double publisherDiversificationInitialPenalty;
  double v1457;
  long double v1458;
  double v1459;
  unint64_t v1460;
  double publisherDiversificationPenaltyHalfLife;
  double v1462;
  long double v1463;
  double v1464;
  unint64_t v1465;
  double minimumGlobalScoreThreshold;
  double v1467;
  long double v1468;
  double v1469;
  unint64_t v1470;
  double minimumGlobalScoreThresholdForSubscribedChannel;
  double v1472;
  long double v1473;
  double v1474;
  unint64_t v1475;
  double subscribedChannelScoreCoefficient;
  double v1477;
  long double v1478;
  double v1479;
  unint64_t v1480;
  double subscribedTopicsScoreCoefficient;
  double v1482;
  long double v1483;
  double v1484;
  unint64_t v1485;
  double topicFeedBaselineRatePrior;
  double v1487;
  long double v1488;
  double v1489;
  unint64_t v1490;
  double topicFeedDecayFactor;
  double v1492;
  long double v1493;
  double v1494;
  unint64_t v1495;
  double topicFeedDemocratizationFactor;
  double v1497;
  long double v1498;
  double v1499;
  unint64_t v1500;
  double topicFeedHalfLifeCoefficient;
  double v1502;
  long double v1503;
  double v1504;
  unint64_t v1505;
  double topicFeedSubscribedChannelScoreCoefficient;
  double v1507;
  long double v1508;
  double v1509;
  unint64_t v1510;
  double topicFeedMutedVoteCoefficient;
  double v1512;
  long double v1513;
  double v1514;
  unint64_t v1515;
  double topicFeedPersonalizationCoefficient;
  double v1517;
  long double v1518;
  double v1519;
  unint64_t v1520;
  double topicFeedPublisherAggregateWeight;
  double v1522;
  long double v1523;
  double v1524;
  unint64_t v1525;
  double topicFeedGlobalScoreCoefficient;
  double v1527;
  long double v1528;
  double v1529;
  unint64_t v1530;
  double topicFeedGlobalScoreCoefficientHalfLife;
  double v1532;
  long double v1533;
  double v1534;
  unint64_t v1535;
  double topicFeedGlobalScoreCoefficientInitialMultiplier;
  double v1537;
  long double v1538;
  double v1539;
  unint64_t v1540;
  double topicFeedGlobalScoreToCtrIntercept;
  double v1542;
  long double v1543;
  double v1544;
  unint64_t v1545;
  double topicFeedGlobalScoreToCtrSlope;
  double v1547;
  long double v1548;
  double v1549;
  unint64_t v1550;
  double topicFeedMinimumGlobalScoreThreshold;
  double v1552;
  long double v1553;
  double v1554;
  unint64_t v1555;
  double topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
  double v1557;
  long double v1558;
  double v1559;
  unint64_t v1560;
  double topicFeedRealTimeUserFeedbackCoefficient;
  double v1562;
  long double v1563;
  double v1564;
  unint64_t v1565;
  double topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
  double v1567;
  long double v1568;
  double v1569;
  unint64_t v1570;
  double topicFeedCohortMembershipCtrCeiling;
  double v1572;
  long double v1573;
  double v1574;
  unint64_t v1575;
  double topicFeedCohortMembershipCurvature;
  double v1577;
  long double v1578;
  double v1579;
  unint64_t v1580;
  double topicFeedCohortMembershipFavoritedBoost;
  double v1582;
  long double v1583;
  double v1584;
  unint64_t v1585;
  double topicFeedCohortMembershipMinWeightedImpressions;
  double v1587;
  long double v1588;
  double v1589;
  unint64_t v1590;
  double topicFeedSubscribedTopicsScoreCoefficient;
  double v1592;
  long double v1593;
  double v1594;
  unint64_t v1595;
  double topicFeedCtrWithZeroSubscribed;
  double v1597;
  long double v1598;
  double v1599;
  unint64_t v1600;
  double topicFeedCtrWithOneSubscribed;
  double v1602;
  long double v1603;
  double v1604;
  unint64_t v1605;
  double topicFeedCtrWithTwoSubscribed;
  double v1607;
  long double v1608;
  double v1609;
  unint64_t v1610;
  double topicFeedCtrWithThreeSubscribed;
  double v1612;
  long double v1613;
  double v1614;
  unint64_t v1615;
  double topicFeedAutofavoritedVoteCoefficient;
  double v1617;
  long double v1618;
  double v1619;
  unint64_t v1620;
  double topicFeedCtrWithZeroAutofavorited;
  double v1622;
  long double v1623;
  double v1624;
  unint64_t v1625;
  double topicFeedCtrWithOneAutofavorited;
  double v1627;
  long double v1628;
  double v1629;
  unint64_t v1630;
  double topicFeedCtrWithTwoAutofavorited;
  double v1632;
  long double v1633;
  double v1634;
  unint64_t v1635;
  double topicFeedCtrWithThreeAutofavorited;
  double v1637;
  long double v1638;
  double v1639;
  unint64_t v1640;
  double topicFeedDiversificationInitialPenalty;
  double v1642;
  long double v1643;
  double v1644;
  unint64_t v1645;
  double topicFeedDiversificationPenalty;
  double v1647;
  long double v1648;
  double v1649;
  unint64_t v1650;
  double topicFeedDiversificationPenaltyHalfLife;
  double v1652;
  long double v1653;
  double v1654;
  unint64_t v1655;
  double topicFeedChannelTopicDiversificationInitialPenalty;
  double v1657;
  long double v1658;
  double v1659;
  unint64_t v1660;
  unint64_t v1661;
  double topicFeedChannelTopicDiversificationPenalty;
  double v1663;
  long double v1664;
  double v1665;
  unint64_t v1666;
  unint64_t v1667;
  double topicFeedChannelTopicDiversificationPenaltyHalfLife;
  double v1669;
  long double v1670;
  double v1671;
  unint64_t v1672;
  unint64_t v1673;
  double ctrWithSubscribedChannel;
  double v1675;
  long double v1676;
  double v1677;
  unint64_t v1678;
  double topicFeedCtrWithSubscribedChannel;
  double v1680;
  long double v1681;
  double v1682;
  unint64_t v1683;
  unint64_t v1684;
  unint64_t v1685;
  unint64_t v1686;
  unint64_t v1687;
  unint64_t v1688;
  unint64_t v1689;
  unint64_t v1690;
  unint64_t v1691;
  unint64_t v1692;
  unint64_t v1693;
  unint64_t v1694;
  unint64_t v1695;
  unint64_t v1696;
  unint64_t v1697;
  unint64_t v1698;
  unint64_t v1699;
  unint64_t v1700;
  uint64_t v1701;
  unint64_t v1702;
  unint64_t v1703;
  unint64_t v1705;
  unint64_t v1706;
  unint64_t v1707;
  unint64_t v1708;
  unint64_t v1709;
  unint64_t v1710;
  unint64_t v1711;
  unint64_t v1712;
  unint64_t v1713;
  unint64_t v1714;
  unint64_t v1715;
  unint64_t v1716;
  unint64_t v1717;
  unint64_t v1718;
  unint64_t v1719;
  unint64_t v1720;
  unint64_t v1721;
  unint64_t v1722;
  unint64_t v1723;
  unint64_t v1724;
  unint64_t v1725;
  unint64_t v1726;
  unint64_t v1727;
  unint64_t v1728;
  unint64_t v1729;
  unint64_t v1730;
  unint64_t v1731;
  unint64_t v1732;
  unint64_t v1733;
  unint64_t v1734;
  unint64_t v1735;
  unint64_t v1736;
  unint64_t v1737;
  unint64_t v1738;
  unint64_t v1739;
  unint64_t v1740;
  unint64_t v1741;
  unint64_t v1742;
  unint64_t v1743;
  unint64_t v1744;
  unint64_t v1745;
  unint64_t v1746;
  unint64_t v1747;
  unint64_t v1748;
  uint64_t v1749;
  uint64_t v1750;
  unint64_t v1751;
  unint64_t v1752;
  unint64_t v1753;
  uint64_t v1754;
  unint64_t v1755;
  unint64_t v1756;
  unint64_t v1757;
  unint64_t v1758;
  unint64_t v1759;
  uint64_t v1760;
  uint64_t v1761;
  unint64_t v1762;
  unint64_t v1763;
  unint64_t v1764;
  unint64_t v1765;
  unint64_t v1766;
  unint64_t v1767;
  uint64_t v1768;
  unint64_t v1769;
  unint64_t v1770;
  unint64_t v1771;
  unint64_t v1772;
  unint64_t v1773;
  unint64_t v1774;
  unint64_t v1775;
  unint64_t v1776;
  uint64_t v1777;
  unint64_t v1778;
  unint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  uint64_t v1782;
  uint64_t v1783;
  uint64_t v1784;
  uint64_t v1785;
  uint64_t v1786;
  uint64_t v1787;
  unint64_t v1788;
  unint64_t v1789;
  unint64_t v1790;
  unint64_t v1791;
  unint64_t v1792;
  unint64_t v1793;
  unint64_t v1794;
  unint64_t v1795;
  unint64_t v1796;
  unint64_t v1797;
  unint64_t v1798;
  unint64_t v1799;
  unint64_t v1800;
  unint64_t v1801;
  unint64_t v1802;
  unint64_t v1803;
  unint64_t v1804;
  unint64_t v1805;
  unint64_t v1806;
  unint64_t v1807;
  unint64_t v1808;
  unint64_t v1809;
  unint64_t v1810;
  unint64_t v1811;
  unint64_t v1812;
  unint64_t v1813;
  unint64_t v1814;
  unint64_t v1815;
  unint64_t v1816;
  unint64_t v1817;
  unint64_t v1818;
  unint64_t v1819;
  unint64_t v1820;
  unint64_t v1821;
  unint64_t v1822;
  unint64_t v1823;
  unint64_t v1824;
  unint64_t v1825;
  unint64_t v1826;
  unint64_t v1827;
  unint64_t v1828;
  unint64_t v1829;
  unint64_t v1830;
  unint64_t v1831;
  unint64_t v1832;
  unint64_t v1833;
  unint64_t v1834;
  unint64_t v1835;
  unint64_t v1836;
  unint64_t v1837;
  unint64_t v1838;
  unint64_t v1839;
  unint64_t v1840;
  unint64_t v1841;
  unint64_t v1842;
  unint64_t v1843;
  unint64_t v1844;
  unint64_t v1845;
  unint64_t v1846;
  unint64_t v1847;
  uint64_t v1848;
  unint64_t v1849;
  unint64_t v1850;
  unint64_t v1851;
  unint64_t v1852;
  unint64_t v1853;
  unint64_t v1854;
  unint64_t v1855;
  unint64_t v1856;
  unint64_t v1857;
  unint64_t v1858;
  unint64_t v1859;
  unint64_t v1860;
  unint64_t v1861;
  unint64_t v1862;
  unint64_t v1863;
  unint64_t v1864;
  unint64_t v1865;
  unint64_t v1866;
  unint64_t v1867;
  unint64_t v1868;
  unint64_t v1869;
  unint64_t v1870;
  unint64_t v1871;
  unint64_t v1872;
  unint64_t v1873;
  unint64_t v1874;
  unint64_t v1875;
  unint64_t v1876;
  unint64_t v1877;
  unint64_t v1878;
  __int16 v1879;
  unint64_t v1880;
  uint64_t v1881;
  uint64_t v1882;
  unint64_t v1883;
  unint64_t v1884;
  unint64_t v1885;
  unint64_t v1886;
  unint64_t v1887;
  unint64_t v1888;
  unint64_t v1889;
  unint64_t v1890;
  unint64_t v1891;
  unint64_t v1892;
  unint64_t v1893;
  unint64_t v1894;
  unint64_t v1895;
  unint64_t v1896;
  unint64_t v1897;
  unint64_t v1898;
  unint64_t v1899;
  unint64_t v1900;
  unint64_t v1901;
  unint64_t v1902;
  unint64_t v1903;
  unint64_t v1904;
  unint64_t v1905;
  unint64_t v1906;
  unint64_t v1907;
  unint64_t v1908;
  unint64_t v1909;
  unint64_t v1910;
  unint64_t v1911;
  unint64_t v1912;
  unint64_t v1913;
  unint64_t v1914;
  unint64_t v1915;
  unint64_t v1916;
  unint64_t v1917;
  unint64_t v1918;
  uint64_t v1919;
  unint64_t v1920;
  unint64_t v1921;
  uint64_t v1922;
  uint64_t v1923;
  uint64_t v1924;
  uint64_t v1925;
  uint64_t v1926;
  uint64_t v1927;
  uint64_t v1928;
  uint64_t v1929;
  uint64_t v1930;
  uint64_t v1931;
  uint64_t v1932;
  uint64_t v1933;
  unint64_t v1934;
  unint64_t v1935;
  unint64_t v1936;
  unint64_t v1937;
  unint64_t v1938;
  unint64_t v1939;
  unint64_t v1940;
  unint64_t v1941;
  unint64_t v1942;
  uint64_t v1943;
  uint64_t v1944;
  uint64_t v1945;
  uint64_t v1946;
  uint64_t v1947;
  uint64_t v1948;
  uint64_t v1949;
  unint64_t v1950;
  unint64_t v1951;
  unint64_t v1952;
  unint64_t v1953;
  unint64_t v1954;
  unint64_t v1955;
  unint64_t v1956;
  unint64_t v1957;
  unint64_t v1958;
  unint64_t v1959;
  unint64_t v1960;
  uint64_t v1961;
  uint64_t v1962;
  unint64_t v1963;
  unint64_t v1964;
  uint64_t v1965;
  uint64_t v1966;
  uint64_t v1967;
  uint64_t v1968;
  uint64_t v1969;
  uint64_t v1970;
  uint64_t v1971;
  uint64_t v1972;
  uint64_t v1973;
  uint64_t v1974;
  uint64_t v1975;
  uint64_t v1976;
  uint64_t v1977;
  uint64_t v1978;
  uint64_t v1979;
  uint64_t v1980;
  uint64_t v1981;
  uint64_t v1982;
  unint64_t v1983;
  unint64_t v1984;
  uint64_t v1985;
  uint64_t v1986;
  uint64_t v1987;
  uint64_t v1988;
  uint64_t v1989;
  unint64_t v1990;
  unint64_t v1991;
  unint64_t v1992;
  unint64_t v1993;
  unint64_t v1994;
  unint64_t v1995;
  unint64_t v1996;
  unint64_t v1997;
  unint64_t v1998;
  unint64_t v1999;
  unint64_t v2000;
  unint64_t v2001;
  unint64_t v2002;
  unint64_t v2003;
  unint64_t v2004;
  unint64_t v2005;
  uint64_t v2006;
  unint64_t v2007;
  unint64_t v2008;
  unint64_t v2009;
  unint64_t v2010;
  unint64_t v2011;
  unint64_t v2012;
  unint64_t v2013;
  unint64_t v2014;
  unint64_t v2015;
  unint64_t v2016;
  unint64_t v2017;
  unint64_t v2018;
  unint64_t v2019;
  unint64_t v2020;
  unint64_t v2021;
  unint64_t v2022;
  unint64_t v2023;
  unint64_t v2024;
  unint64_t v2025;
  unint64_t v2026;
  unint64_t v2027;
  unint64_t v2028;
  unint64_t v2029;
  unint64_t v2030;
  unint64_t v2031;
  unint64_t v2032;
  unint64_t v2033;
  unint64_t v2034;
  unint64_t v2035;
  unint64_t v2036;
  unint64_t v2037;
  unint64_t v2038;
  unint64_t v2039;
  unint64_t v2040;
  unint64_t v2041;
  unint64_t v2042;
  unint64_t v2043;
  unint64_t v2044;
  unint64_t v2045;
  unint64_t v2046;
  uint64_t v2047;
  unint64_t v2048;
  unint64_t v2049;
  unint64_t v2050;
  unint64_t v2051;
  unint64_t v2052;
  unint64_t v2053;
  unint64_t v2054;
  uint64_t v2055;
  uint64_t v2056;
  unint64_t v2057;
  unint64_t v2058;
  unint64_t v2059;
  unint64_t v2060;
  unint64_t v2061;
  unint64_t v2062;
  unint64_t v2063;
  unint64_t v2064;
  unint64_t v2065;
  unint64_t v2066;
  unint64_t v2067;
  unint64_t v2068;
  unint64_t v2069;
  uint64_t v2070;
  unint64_t v2071;
  uint64_t v2072;
  unint64_t v2073;
  unint64_t v2074;
  uint64_t v2075;
  unint64_t v2076;
  unint64_t v2077;
  unint64_t v2078;
  unint64_t v2079;
  unint64_t v2080;
  unint64_t v2081;
  unint64_t v2082;
  unint64_t v2083;
  unint64_t v2084;
  unint64_t v2085;
  unint64_t v2086;
  unint64_t v2087;
  unint64_t v2088;
  unint64_t v2089;
  unint64_t v2090;
  unint64_t v2091;
  unint64_t v2092;
  unint64_t v2093;
  unint64_t v2094;
  unint64_t v2095;
  uint64_t v2096;

  v3 = *((_QWORD *)&self->_has + 4);
  has = (uint64_t)self->_has;
  if ((v3 & 0x8000000000000) != 0)
    v2075 = 2654435761 * self->_treatmentId;
  else
    v2075 = 0;
  v5 = *((_WORD *)&self->_has + 24);
  v6 = *((_QWORD *)&self->_has + 5);
  v7 = *((_QWORD *)&self->_has + 2);
  v8 = *((_QWORD *)&self->_has + 3);
  v9 = *((_QWORD *)&self->_has + 1);
  if ((has & 0x2000000000000000) != 0)
  {
    decayFactor = self->_decayFactor;
    v12 = -decayFactor;
    if (decayFactor >= 0.0)
      v12 = self->_decayFactor;
    v13 = floor(v12 + 0.5);
    v14 = (v12 - v13) * 1.84467441e19;
    v10 = 2654435761u * (unint64_t)fmod(v13, 1.84467441e19);
    if (v14 >= 0.0)
    {
      if (v14 > 0.0)
        v10 += (unint64_t)v14;
    }
    else
    {
      v10 -= (unint64_t)fabs(v14);
    }
  }
  else
  {
    v10 = 0;
  }
  if ((has & 0x2000000000) == 0)
  {
    v2095 = 0;
    goto LABEL_21;
  }
  baselineImpressionPrior = self->_baselineImpressionPrior;
  v16 = -baselineImpressionPrior;
  if (baselineImpressionPrior >= 0.0)
    v16 = self->_baselineImpressionPrior;
  v17 = floor(v16 + 0.5);
  v18 = (v16 - v17) * 1.84467441e19;
  v19 = fmod(v17, 1.84467441e19);
  if (v18 >= 0.0)
  {
    v2095 = 2654435761u * (unint64_t)v19;
    if (v18 <= 0.0)
      goto LABEL_21;
    v20 = v2095 + (unint64_t)v18;
  }
  else
  {
    v20 = 2654435761u * (unint64_t)v19 - (unint64_t)fabs(v18);
  }
  v2095 = v20;
LABEL_21:
  if ((has & 0x4000000000) == 0)
  {
    v2094 = 0;
    goto LABEL_30;
  }
  baselineRatePrior = self->_baselineRatePrior;
  v22 = -baselineRatePrior;
  if (baselineRatePrior >= 0.0)
    v22 = self->_baselineRatePrior;
  v23 = floor(v22 + 0.5);
  v24 = (v22 - v23) * 1.84467441e19;
  v25 = fmod(v23, 1.84467441e19);
  if (v24 >= 0.0)
  {
    v2094 = 2654435761u * (unint64_t)v25;
    if (v24 <= 0.0)
      goto LABEL_30;
    v26 = v2094 + (unint64_t)v24;
  }
  else
  {
    v26 = 2654435761u * (unint64_t)v25 - (unint64_t)fabs(v24);
  }
  v2094 = v26;
LABEL_30:
  if ((v9 & 0x20000) != 0)
  {
    featureImpressionPrior = self->_featureImpressionPrior;
    v29 = -featureImpressionPrior;
    if (featureImpressionPrior >= 0.0)
      v29 = self->_featureImpressionPrior;
    v30 = floor(v29 + 0.5);
    v31 = (v29 - v30) * 1.84467441e19;
    v27 = 2654435761u * (unint64_t)fmod(v30, 1.84467441e19);
    if (v31 >= 0.0)
    {
      if (v31 > 0.0)
        v27 += (unint64_t)v31;
    }
    else
    {
      v27 -= (unint64_t)fabs(v31);
    }
  }
  else
  {
    v27 = 0;
  }
  v2073 = v27;
  if ((v5 & 0x40) == 0)
  {
    v2072 = 0;
    if ((v9 & 0x800000) != 0)
      goto LABEL_40;
LABEL_45:
    v2093 = 0;
    goto LABEL_49;
  }
  v2072 = 2654435761 * self->_globalScoreRankingEnabled;
  if ((v9 & 0x800000) == 0)
    goto LABEL_45;
LABEL_40:
  globalScoreBump = self->_globalScoreBump;
  v33 = -globalScoreBump;
  if (globalScoreBump >= 0.0)
    v33 = self->_globalScoreBump;
  v34 = floor(v33 + 0.5);
  v35 = (v33 - v34) * 1.84467441e19;
  v36 = fmod(v34, 1.84467441e19);
  if (v35 >= 0.0)
  {
    v2093 = 2654435761u * (unint64_t)v36;
    if (v35 <= 0.0)
      goto LABEL_49;
    v37 = v2093 + (unint64_t)v35;
  }
  else
  {
    v37 = 2654435761u * (unint64_t)v36 - (unint64_t)fabs(v35);
  }
  v2093 = v37;
LABEL_49:
  if ((v8 & 0x20000000000000) == 0)
  {
    v2092 = 0;
    goto LABEL_58;
  }
  subscriptionVoteCoefficient = self->_subscriptionVoteCoefficient;
  v39 = -subscriptionVoteCoefficient;
  if (subscriptionVoteCoefficient >= 0.0)
    v39 = self->_subscriptionVoteCoefficient;
  v40 = floor(v39 + 0.5);
  v41 = (v39 - v40) * 1.84467441e19;
  v42 = fmod(v40, 1.84467441e19);
  if (v41 >= 0.0)
  {
    v2092 = 2654435761u * (unint64_t)v42;
    if (v41 <= 0.0)
      goto LABEL_58;
    v43 = v2092 + (unint64_t)v41;
  }
  else
  {
    v43 = 2654435761u * (unint64_t)v42 - (unint64_t)fabs(v41);
  }
  v2092 = v43;
LABEL_58:
  if ((v7 & 0x40000000000) == 0)
  {
    v2091 = 0;
    goto LABEL_67;
  }
  personalizationCoefficient = self->_personalizationCoefficient;
  v45 = -personalizationCoefficient;
  if (personalizationCoefficient >= 0.0)
    v45 = self->_personalizationCoefficient;
  v46 = floor(v45 + 0.5);
  v47 = (v45 - v46) * 1.84467441e19;
  v48 = fmod(v46, 1.84467441e19);
  if (v47 >= 0.0)
  {
    v2091 = 2654435761u * (unint64_t)v48;
    if (v47 <= 0.0)
      goto LABEL_67;
    v49 = v2091 + (unint64_t)v47;
  }
  else
  {
    v49 = 2654435761u * (unint64_t)v48 - (unint64_t)fabs(v47);
  }
  v2091 = v49;
LABEL_67:
  if ((v9 & 0x1000000) != 0)
  {
    globalScoreCoefficient = self->_globalScoreCoefficient;
    v52 = -globalScoreCoefficient;
    if (globalScoreCoefficient >= 0.0)
      v52 = self->_globalScoreCoefficient;
    v53 = floor(v52 + 0.5);
    v54 = (v52 - v53) * 1.84467441e19;
    v50 = 2654435761u * (unint64_t)fmod(v53, 1.84467441e19);
    if (v54 >= 0.0)
    {
      if (v54 > 0.0)
        v50 += (unint64_t)v54;
    }
    else
    {
      v50 -= (unint64_t)fabs(v54);
    }
  }
  else
  {
    v50 = 0;
  }
  v2071 = v50;
  if ((v8 & 0x10) == 0)
  {
    v2070 = 0;
    if ((v7 & 0x400000000000000) != 0)
      goto LABEL_77;
LABEL_82:
    v2090 = 0;
    goto LABEL_86;
  }
  v2070 = 2654435761 * self->_publisherTopicIdEventCountMinimum;
  if ((v7 & 0x400000000000000) == 0)
    goto LABEL_82;
LABEL_77:
  presentationImpressionValue = self->_presentationImpressionValue;
  v56 = -presentationImpressionValue;
  if (presentationImpressionValue >= 0.0)
    v56 = self->_presentationImpressionValue;
  v57 = floor(v56 + 0.5);
  v58 = (v56 - v57) * 1.84467441e19;
  v59 = fmod(v57, 1.84467441e19);
  if (v58 >= 0.0)
  {
    v2090 = 2654435761u * (unint64_t)v59;
    if (v58 <= 0.0)
      goto LABEL_86;
    v60 = v2090 + (unint64_t)v58;
  }
  else
  {
    v60 = 2654435761u * (unint64_t)v59 - (unint64_t)fabs(v58);
  }
  v2090 = v60;
LABEL_86:
  if ((v9 & 0x10000000000) == 0)
  {
    v2089 = 0;
    goto LABEL_95;
  }
  heavyClickImpressionValue = self->_heavyClickImpressionValue;
  v62 = -heavyClickImpressionValue;
  if (heavyClickImpressionValue >= 0.0)
    v62 = self->_heavyClickImpressionValue;
  v63 = floor(v62 + 0.5);
  v64 = (v62 - v63) * 1.84467441e19;
  v65 = fmod(v63, 1.84467441e19);
  if (v64 >= 0.0)
  {
    v2089 = 2654435761u * (unint64_t)v65;
    if (v64 <= 0.0)
      goto LABEL_95;
    v66 = v2089 + (unint64_t)v64;
  }
  else
  {
    v66 = 2654435761u * (unint64_t)v65 - (unint64_t)fabs(v64);
  }
  v2089 = v66;
LABEL_95:
  if ((v9 & 0x1000000000000000) == 0)
  {
    v2088 = 0;
    goto LABEL_104;
  }
  likeImpressionValue = self->_likeImpressionValue;
  v68 = -likeImpressionValue;
  if (likeImpressionValue >= 0.0)
    v68 = self->_likeImpressionValue;
  v69 = floor(v68 + 0.5);
  v70 = (v68 - v69) * 1.84467441e19;
  v71 = fmod(v69, 1.84467441e19);
  if (v70 >= 0.0)
  {
    v2088 = 2654435761u * (unint64_t)v71;
    if (v70 <= 0.0)
      goto LABEL_104;
    v72 = v2088 + (unint64_t)v70;
  }
  else
  {
    v72 = 2654435761u * (unint64_t)v71 - (unint64_t)fabs(v70);
  }
  v2088 = v72;
LABEL_104:
  if ((v8 & 0x10000000000) == 0)
  {
    v2087 = 0;
    goto LABEL_113;
  }
  shareImpressionValue = self->_shareImpressionValue;
  v74 = -shareImpressionValue;
  if (shareImpressionValue >= 0.0)
    v74 = self->_shareImpressionValue;
  v75 = floor(v74 + 0.5);
  v76 = (v74 - v75) * 1.84467441e19;
  v77 = fmod(v75, 1.84467441e19);
  if (v76 >= 0.0)
  {
    v2087 = 2654435761u * (unint64_t)v77;
    if (v76 <= 0.0)
      goto LABEL_113;
    v78 = v2087 + (unint64_t)v76;
  }
  else
  {
    v78 = 2654435761u * (unint64_t)v77 - (unint64_t)fabs(v76);
  }
  v2087 = v78;
LABEL_113:
  if ((v8 & 0x20000000) == 0)
  {
    v2086 = 0;
    goto LABEL_122;
  }
  savedImpressionValue = self->_savedImpressionValue;
  v80 = -savedImpressionValue;
  if (savedImpressionValue >= 0.0)
    v80 = self->_savedImpressionValue;
  v81 = floor(v80 + 0.5);
  v82 = (v80 - v81) * 1.84467441e19;
  v83 = fmod(v81, 1.84467441e19);
  if (v82 >= 0.0)
  {
    v2086 = 2654435761u * (unint64_t)v83;
    if (v82 <= 0.0)
      goto LABEL_122;
    v84 = v2086 + (unint64_t)v82;
  }
  else
  {
    v84 = 2654435761u * (unint64_t)v83 - (unint64_t)fabs(v82);
  }
  v2086 = v84;
LABEL_122:
  if ((v8 & 0x200000000000) == 0)
  {
    v2085 = 0;
    goto LABEL_131;
  }
  subscribeImpressionValue = self->_subscribeImpressionValue;
  v86 = -subscribeImpressionValue;
  if (subscribeImpressionValue >= 0.0)
    v86 = self->_subscribeImpressionValue;
  v87 = floor(v86 + 0.5);
  v88 = (v86 - v87) * 1.84467441e19;
  v89 = fmod(v87, 1.84467441e19);
  if (v88 >= 0.0)
  {
    v2085 = 2654435761u * (unint64_t)v89;
    if (v88 <= 0.0)
      goto LABEL_131;
    v90 = v2085 + (unint64_t)v88;
  }
  else
  {
    v90 = 2654435761u * (unint64_t)v89 - (unint64_t)fabs(v88);
  }
  v2085 = v90;
LABEL_131:
  if ((v3 & 0x800) == 0)
  {
    v2084 = 0;
    goto LABEL_140;
  }
  tappedImpressionValue = self->_tappedImpressionValue;
  v92 = -tappedImpressionValue;
  if (tappedImpressionValue >= 0.0)
    v92 = self->_tappedImpressionValue;
  v93 = floor(v92 + 0.5);
  v94 = (v92 - v93) * 1.84467441e19;
  v95 = fmod(v93, 1.84467441e19);
  if (v94 >= 0.0)
  {
    v2084 = 2654435761u * (unint64_t)v95;
    if (v94 <= 0.0)
      goto LABEL_140;
    v96 = v2084 + (unint64_t)v94;
  }
  else
  {
    v96 = 2654435761u * (unint64_t)v95 - (unint64_t)fabs(v94);
  }
  v2084 = v96;
LABEL_140:
  if ((v6 & 0x2000000) == 0)
  {
    v2083 = 0;
    goto LABEL_149;
  }
  weakClickImpressionValue = self->_weakClickImpressionValue;
  v98 = -weakClickImpressionValue;
  if (weakClickImpressionValue >= 0.0)
    v98 = self->_weakClickImpressionValue;
  v99 = floor(v98 + 0.5);
  v100 = (v98 - v99) * 1.84467441e19;
  v101 = fmod(v99, 1.84467441e19);
  if (v100 >= 0.0)
  {
    v2083 = 2654435761u * (unint64_t)v101;
    if (v100 <= 0.0)
      goto LABEL_149;
    v102 = v2083 + (unint64_t)v100;
  }
  else
  {
    v102 = 2654435761u * (unint64_t)v101 - (unint64_t)fabs(v100);
  }
  v2083 = v102;
LABEL_149:
  if ((v3 & 0x800000000000000) == 0)
  {
    v2082 = 0;
    goto LABEL_158;
  }
  unsubscribeImpressionValue = self->_unsubscribeImpressionValue;
  v104 = -unsubscribeImpressionValue;
  if (unsubscribeImpressionValue >= 0.0)
    v104 = self->_unsubscribeImpressionValue;
  v105 = floor(v104 + 0.5);
  v106 = (v104 - v105) * 1.84467441e19;
  v107 = fmod(v105, 1.84467441e19);
  if (v106 >= 0.0)
  {
    v2082 = 2654435761u * (unint64_t)v107;
    if (v106 <= 0.0)
      goto LABEL_158;
    v108 = v2082 + (unint64_t)v106;
  }
  else
  {
    v108 = 2654435761u * (unint64_t)v107 - (unint64_t)fabs(v106);
  }
  v2082 = v108;
LABEL_158:
  if ((v6 & 0x200000) == 0)
  {
    v2081 = 0;
    goto LABEL_167;
  }
  visitImpressionValue = self->_visitImpressionValue;
  v110 = -visitImpressionValue;
  if (visitImpressionValue >= 0.0)
    v110 = self->_visitImpressionValue;
  v111 = floor(v110 + 0.5);
  v112 = (v110 - v111) * 1.84467441e19;
  v113 = fmod(v111, 1.84467441e19);
  if (v112 >= 0.0)
  {
    v2081 = 2654435761u * (unint64_t)v113;
    if (v112 <= 0.0)
      goto LABEL_167;
    v114 = v2081 + (unint64_t)v112;
  }
  else
  {
    v114 = 2654435761u * (unint64_t)v113 - (unint64_t)fabs(v112);
  }
  v2081 = v114;
LABEL_167:
  if ((v9 & 2) == 0)
  {
    v2080 = 0;
    goto LABEL_176;
  }
  dislikeImpressionValue = self->_dislikeImpressionValue;
  v116 = -dislikeImpressionValue;
  if (dislikeImpressionValue >= 0.0)
    v116 = self->_dislikeImpressionValue;
  v117 = floor(v116 + 0.5);
  v118 = (v116 - v117) * 1.84467441e19;
  v119 = fmod(v117, 1.84467441e19);
  if (v118 >= 0.0)
  {
    v2080 = 2654435761u * (unint64_t)v119;
    if (v118 <= 0.0)
      goto LABEL_176;
    v120 = v2080 + (unint64_t)v118;
  }
  else
  {
    v120 = 2654435761u * (unint64_t)v119 - (unint64_t)fabs(v118);
  }
  v2080 = v120;
LABEL_176:
  if ((v7 & 0x100000000000000) == 0)
  {
    v2079 = 0;
    goto LABEL_185;
  }
  presentationClickValue = self->_presentationClickValue;
  v122 = -presentationClickValue;
  if (presentationClickValue >= 0.0)
    v122 = self->_presentationClickValue;
  v123 = floor(v122 + 0.5);
  v124 = (v122 - v123) * 1.84467441e19;
  v125 = fmod(v123, 1.84467441e19);
  if (v124 >= 0.0)
  {
    v2079 = 2654435761u * (unint64_t)v125;
    if (v124 <= 0.0)
      goto LABEL_185;
    v126 = v2079 + (unint64_t)v124;
  }
  else
  {
    v126 = 2654435761u * (unint64_t)v125 - (unint64_t)fabs(v124);
  }
  v2079 = v126;
LABEL_185:
  if ((v9 & 0x4000000000) == 0)
  {
    v2078 = 0;
    goto LABEL_194;
  }
  heavyClickClickValue = self->_heavyClickClickValue;
  v128 = -heavyClickClickValue;
  if (heavyClickClickValue >= 0.0)
    v128 = self->_heavyClickClickValue;
  v129 = floor(v128 + 0.5);
  v130 = (v128 - v129) * 1.84467441e19;
  v131 = fmod(v129, 1.84467441e19);
  if (v130 >= 0.0)
  {
    v2078 = 2654435761u * (unint64_t)v131;
    if (v130 <= 0.0)
      goto LABEL_194;
    v132 = v2078 + (unint64_t)v130;
  }
  else
  {
    v132 = 2654435761u * (unint64_t)v131 - (unint64_t)fabs(v130);
  }
  v2078 = v132;
LABEL_194:
  if ((v9 & 0x400000000000000) != 0)
  {
    likeClickValue = self->_likeClickValue;
    v135 = -likeClickValue;
    if (likeClickValue >= 0.0)
      v135 = self->_likeClickValue;
    v136 = floor(v135 + 0.5);
    v137 = (v135 - v136) * 1.84467441e19;
    v133 = 2654435761u * (unint64_t)fmod(v136, 1.84467441e19);
    if (v137 >= 0.0)
    {
      if (v137 > 0.0)
        v133 += (unint64_t)v137;
    }
    else
    {
      v133 -= (unint64_t)fabs(v137);
    }
  }
  else
  {
    v133 = 0;
  }
  v2069 = v133;
  if ((v8 & 0x4000000000) != 0)
  {
    shareClickValue = self->_shareClickValue;
    v140 = -shareClickValue;
    if (shareClickValue >= 0.0)
      v140 = self->_shareClickValue;
    v141 = floor(v140 + 0.5);
    v142 = (v140 - v141) * 1.84467441e19;
    v138 = 2654435761u * (unint64_t)fmod(v141, 1.84467441e19);
    if (v142 >= 0.0)
    {
      if (v142 > 0.0)
        v138 += (unint64_t)v142;
    }
    else
    {
      v138 -= (unint64_t)fabs(v142);
    }
  }
  else
  {
    v138 = 0;
  }
  v2068 = v138;
  if ((v8 & 0x8000000) != 0)
  {
    savedClickValue = self->_savedClickValue;
    v145 = -savedClickValue;
    if (savedClickValue >= 0.0)
      v145 = self->_savedClickValue;
    v146 = floor(v145 + 0.5);
    v147 = (v145 - v146) * 1.84467441e19;
    v143 = 2654435761u * (unint64_t)fmod(v146, 1.84467441e19);
    if (v147 >= 0.0)
    {
      if (v147 > 0.0)
        v143 += (unint64_t)v147;
    }
    else
    {
      v143 -= (unint64_t)fabs(v147);
    }
  }
  else
  {
    v143 = 0;
  }
  v2067 = v143;
  if ((v8 & 0x80000000000) != 0)
  {
    subscribeClickValue = self->_subscribeClickValue;
    v150 = -subscribeClickValue;
    if (subscribeClickValue >= 0.0)
      v150 = self->_subscribeClickValue;
    v151 = floor(v150 + 0.5);
    v152 = (v150 - v151) * 1.84467441e19;
    v148 = 2654435761u * (unint64_t)fmod(v151, 1.84467441e19);
    if (v152 >= 0.0)
    {
      if (v152 > 0.0)
        v148 += (unint64_t)v152;
    }
    else
    {
      v148 -= (unint64_t)fabs(v152);
    }
  }
  else
  {
    v148 = 0;
  }
  v2066 = v148;
  if ((v3 & 0x200) != 0)
  {
    tappedClickValue = self->_tappedClickValue;
    v155 = -tappedClickValue;
    if (tappedClickValue >= 0.0)
      v155 = self->_tappedClickValue;
    v156 = floor(v155 + 0.5);
    v157 = (v155 - v156) * 1.84467441e19;
    v153 = 2654435761u * (unint64_t)fmod(v156, 1.84467441e19);
    if (v157 >= 0.0)
    {
      if (v157 > 0.0)
        v153 += (unint64_t)v157;
    }
    else
    {
      v153 -= (unint64_t)fabs(v157);
    }
  }
  else
  {
    v153 = 0;
  }
  v2065 = v153;
  if ((v6 & 0x800000) != 0)
  {
    weakClickClickValue = self->_weakClickClickValue;
    v160 = -weakClickClickValue;
    if (weakClickClickValue >= 0.0)
      v160 = self->_weakClickClickValue;
    v161 = floor(v160 + 0.5);
    v162 = (v160 - v161) * 1.84467441e19;
    v158 = 2654435761u * (unint64_t)fmod(v161, 1.84467441e19);
    if (v162 >= 0.0)
    {
      if (v162 > 0.0)
        v158 += (unint64_t)v162;
    }
    else
    {
      v158 -= (unint64_t)fabs(v162);
    }
  }
  else
  {
    v158 = 0;
  }
  v2064 = v158;
  if ((v3 & 0x200000000000000) != 0)
  {
    unsubscribeClickValue = self->_unsubscribeClickValue;
    v165 = -unsubscribeClickValue;
    if (unsubscribeClickValue >= 0.0)
      v165 = self->_unsubscribeClickValue;
    v166 = floor(v165 + 0.5);
    v167 = (v165 - v166) * 1.84467441e19;
    v163 = 2654435761u * (unint64_t)fmod(v166, 1.84467441e19);
    if (v167 >= 0.0)
    {
      if (v167 > 0.0)
        v163 += (unint64_t)v167;
    }
    else
    {
      v163 -= (unint64_t)fabs(v167);
    }
  }
  else
  {
    v163 = 0;
  }
  v2063 = v163;
  if ((v6 & 0x80000) != 0)
  {
    visitClickValue = self->_visitClickValue;
    v170 = -visitClickValue;
    if (visitClickValue >= 0.0)
      v170 = self->_visitClickValue;
    v171 = floor(v170 + 0.5);
    v172 = (v170 - v171) * 1.84467441e19;
    v168 = 2654435761u * (unint64_t)fmod(v171, 1.84467441e19);
    if (v172 >= 0.0)
    {
      if (v172 > 0.0)
        v168 += (unint64_t)v172;
    }
    else
    {
      v168 -= (unint64_t)fabs(v172);
    }
  }
  else
  {
    v168 = 0;
  }
  v2062 = v168;
  if (has < 0)
  {
    dislikeClickValue = self->_dislikeClickValue;
    v175 = -dislikeClickValue;
    if (dislikeClickValue >= 0.0)
      v175 = self->_dislikeClickValue;
    v176 = floor(v175 + 0.5);
    v177 = (v175 - v176) * 1.84467441e19;
    v173 = 2654435761u * (unint64_t)fmod(v176, 1.84467441e19);
    if (v177 >= 0.0)
    {
      if (v177 > 0.0)
        v173 += (unint64_t)v177;
    }
    else
    {
      v173 -= (unint64_t)fabs(v177);
    }
  }
  else
  {
    v173 = 0;
  }
  v2061 = v173;
  if ((v9 & 0x10000000000000) != 0)
  {
    hourlyFlowRateMinimum = self->_hourlyFlowRateMinimum;
    v180 = -hourlyFlowRateMinimum;
    if (hourlyFlowRateMinimum >= 0.0)
      v180 = self->_hourlyFlowRateMinimum;
    v181 = floor(v180 + 0.5);
    v182 = (v180 - v181) * 1.84467441e19;
    v178 = 2654435761u * (unint64_t)fmod(v181, 1.84467441e19);
    if (v182 >= 0.0)
    {
      if (v182 > 0.0)
        v178 += (unint64_t)v182;
    }
    else
    {
      v178 -= (unint64_t)fabs(v182);
    }
  }
  else
  {
    v178 = 0;
  }
  v2060 = v178;
  if ((v9 & 0x40000000000000) != 0)
  {
    hourlyFlowRateSubscriptionCountBuffer = self->_hourlyFlowRateSubscriptionCountBuffer;
    v185 = -hourlyFlowRateSubscriptionCountBuffer;
    if (hourlyFlowRateSubscriptionCountBuffer >= 0.0)
      v185 = self->_hourlyFlowRateSubscriptionCountBuffer;
    v186 = floor(v185 + 0.5);
    v187 = (v185 - v186) * 1.84467441e19;
    v183 = 2654435761u * (unint64_t)fmod(v186, 1.84467441e19);
    if (v187 >= 0.0)
    {
      if (v187 > 0.0)
        v183 += (unint64_t)v187;
    }
    else
    {
      v183 -= (unint64_t)fabs(v187);
    }
  }
  else
  {
    v183 = 0;
  }
  v2059 = v183;
  if ((v9 & 0x2000000000000) != 0)
  {
    hourlyFlowRateDampeningFactor = self->_hourlyFlowRateDampeningFactor;
    v190 = -hourlyFlowRateDampeningFactor;
    if (hourlyFlowRateDampeningFactor >= 0.0)
      v190 = self->_hourlyFlowRateDampeningFactor;
    v191 = floor(v190 + 0.5);
    v192 = (v190 - v191) * 1.84467441e19;
    v188 = 2654435761u * (unint64_t)fmod(v191, 1.84467441e19);
    if (v192 >= 0.0)
    {
      if (v192 > 0.0)
        v188 += (unint64_t)v192;
    }
    else
    {
      v188 -= (unint64_t)fabs(v192);
    }
  }
  else
  {
    v188 = 0;
  }
  v2058 = v188;
  if ((has & 0x4000000000000000) != 0)
  {
    democratizationFactor = self->_democratizationFactor;
    v195 = -democratizationFactor;
    if (democratizationFactor >= 0.0)
      v195 = self->_democratizationFactor;
    v196 = floor(v195 + 0.5);
    v197 = (v195 - v196) * 1.84467441e19;
    v193 = 2654435761u * (unint64_t)fmod(v196, 1.84467441e19);
    if (v197 >= 0.0)
    {
      if (v197 > 0.0)
        v193 += (unint64_t)v197;
    }
    else
    {
      v193 -= (unint64_t)fabs(v197);
    }
  }
  else
  {
    v193 = 0;
  }
  v2057 = v193;
  if ((v8 & 0x40000000000) == 0)
  {
    v2056 = 0;
    if ((v9 & 0x40000) != 0)
      goto LABEL_300;
LABEL_306:
    v2055 = 0;
    if ((v9 & 0x200000) != 0)
      goto LABEL_301;
LABEL_307:
    v202 = 0;
    goto LABEL_310;
  }
  v2056 = 2654435761 * self->_sliceTimeInterval;
  if ((v9 & 0x40000) == 0)
    goto LABEL_306;
LABEL_300:
  v2055 = 2654435761 * self->_flowRateDampeningSliceCount;
  if ((v9 & 0x200000) == 0)
    goto LABEL_307;
LABEL_301:
  flowRateMinimumDampeningFactor = self->_flowRateMinimumDampeningFactor;
  v199 = -flowRateMinimumDampeningFactor;
  if (flowRateMinimumDampeningFactor >= 0.0)
    v199 = self->_flowRateMinimumDampeningFactor;
  v200 = floor(v199 + 0.5);
  v201 = (v199 - v200) * 1.84467441e19;
  v202 = 2654435761u * (unint64_t)fmod(v200, 1.84467441e19);
  if (v201 >= 0.0)
  {
    if (v201 > 0.0)
      v202 += (unint64_t)v201;
  }
  else
  {
    v202 -= (unint64_t)fabs(v201);
  }
LABEL_310:
  v2054 = v202;
  if ((v9 & 0x2000000000) != 0)
  {
    halfLifeCoefficient = self->_halfLifeCoefficient;
    v205 = -halfLifeCoefficient;
    if (halfLifeCoefficient >= 0.0)
      v205 = self->_halfLifeCoefficient;
    v206 = floor(v205 + 0.5);
    v207 = (v205 - v206) * 1.84467441e19;
    v203 = 2654435761u * (unint64_t)fmod(v206, 1.84467441e19);
    if (v207 >= 0.0)
    {
      if (v207 > 0.0)
        v203 += (unint64_t)v207;
    }
    else
    {
      v203 -= (unint64_t)fabs(v207);
    }
  }
  else
  {
    v203 = 0;
  }
  v2053 = v203;
  if ((v9 & 0x10) != 0)
  {
    diversificationPenalty = self->_diversificationPenalty;
    v210 = -diversificationPenalty;
    if (diversificationPenalty >= 0.0)
      v210 = self->_diversificationPenalty;
    v211 = floor(v210 + 0.5);
    v212 = (v210 - v211) * 1.84467441e19;
    v208 = 2654435761u * (unint64_t)fmod(v211, 1.84467441e19);
    if (v212 >= 0.0)
    {
      if (v212 > 0.0)
        v208 += (unint64_t)v212;
    }
    else
    {
      v208 -= (unint64_t)fabs(v212);
    }
  }
  else
  {
    v208 = 0;
  }
  v2052 = v208;
  if ((v9 & 0x40000000000) != 0)
  {
    heavyClickMinimumDuration = self->_heavyClickMinimumDuration;
    v215 = -heavyClickMinimumDuration;
    if (heavyClickMinimumDuration >= 0.0)
      v215 = self->_heavyClickMinimumDuration;
    v216 = floor(v215 + 0.5);
    v217 = (v215 - v216) * 1.84467441e19;
    v213 = 2654435761u * (unint64_t)fmod(v216, 1.84467441e19);
    if (v217 >= 0.0)
    {
      if (v217 > 0.0)
        v213 += (unint64_t)v217;
    }
    else
    {
      v213 -= (unint64_t)fabs(v217);
    }
  }
  else
  {
    v213 = 0;
  }
  v2051 = v213;
  if ((v8 & 0x8000000000000) != 0)
  {
    subscriptionRelatedImpressionValue = self->_subscriptionRelatedImpressionValue;
    v220 = -subscriptionRelatedImpressionValue;
    if (subscriptionRelatedImpressionValue >= 0.0)
      v220 = self->_subscriptionRelatedImpressionValue;
    v221 = floor(v220 + 0.5);
    v222 = (v220 - v221) * 1.84467441e19;
    v218 = 2654435761u * (unint64_t)fmod(v221, 1.84467441e19);
    if (v222 >= 0.0)
    {
      if (v222 > 0.0)
        v218 += (unint64_t)v222;
    }
    else
    {
      v218 -= (unint64_t)fabs(v222);
    }
  }
  else
  {
    v218 = 0;
  }
  v2050 = v218;
  if ((v8 & 0x2000000000000) != 0)
  {
    subscriptionRelatedClickValue = self->_subscriptionRelatedClickValue;
    v225 = -subscriptionRelatedClickValue;
    if (subscriptionRelatedClickValue >= 0.0)
      v225 = self->_subscriptionRelatedClickValue;
    v226 = floor(v225 + 0.5);
    v227 = (v225 - v226) * 1.84467441e19;
    v223 = 2654435761u * (unint64_t)fmod(v226, 1.84467441e19);
    if (v227 >= 0.0)
    {
      if (v227 > 0.0)
        v223 += (unint64_t)v227;
    }
    else
    {
      v223 -= (unint64_t)fabs(v227);
    }
  }
  else
  {
    v223 = 0;
  }
  v2049 = v223;
  if ((v9 & 0x20000000000000) != 0)
  {
    hourlyFlowRatePerSubscription = self->_hourlyFlowRatePerSubscription;
    v230 = -hourlyFlowRatePerSubscription;
    if (hourlyFlowRatePerSubscription >= 0.0)
      v230 = self->_hourlyFlowRatePerSubscription;
    v231 = floor(v230 + 0.5);
    v232 = (v230 - v231) * 1.84467441e19;
    v228 = 2654435761u * (unint64_t)fmod(v231, 1.84467441e19);
    if (v232 >= 0.0)
    {
      if (v232 > 0.0)
        v228 += (unint64_t)v232;
    }
    else
    {
      v228 -= (unint64_t)fabs(v232);
    }
  }
  else
  {
    v228 = 0;
  }
  v2048 = v228;
  if ((v9 & 0x10000) != 0)
  {
    v2047 = 2654435761 * self->_extraHeadlinesToShowTheUser;
    if ((v9 & 0x100000) != 0)
      goto LABEL_360;
LABEL_365:
    v237 = 0;
    goto LABEL_368;
  }
  v2047 = 0;
  if ((v9 & 0x100000) == 0)
    goto LABEL_365;
LABEL_360:
  flowRateDegreeOfDynamism = self->_flowRateDegreeOfDynamism;
  v234 = -flowRateDegreeOfDynamism;
  if (flowRateDegreeOfDynamism >= 0.0)
    v234 = self->_flowRateDegreeOfDynamism;
  v235 = floor(v234 + 0.5);
  v236 = (v234 - v235) * 1.84467441e19;
  v237 = 2654435761u * (unint64_t)fmod(v235, 1.84467441e19);
  if (v236 >= 0.0)
  {
    if (v236 > 0.0)
      v237 += (unint64_t)v236;
  }
  else
  {
    v237 -= (unint64_t)fabs(v236);
  }
LABEL_368:
  v2046 = v237;
  if ((v9 & 0x80000) != 0)
  {
    flowRateDecayFactor = self->_flowRateDecayFactor;
    v240 = -flowRateDecayFactor;
    if (flowRateDecayFactor >= 0.0)
      v240 = self->_flowRateDecayFactor;
    v241 = floor(v240 + 0.5);
    v242 = (v240 - v241) * 1.84467441e19;
    v238 = 2654435761u * (unint64_t)fmod(v241, 1.84467441e19);
    if (v242 >= 0.0)
    {
      if (v242 > 0.0)
        v238 += (unint64_t)v242;
    }
    else
    {
      v238 -= (unint64_t)fabs(v242);
    }
  }
  else
  {
    v238 = 0;
  }
  v2045 = v238;
  if ((v9 & 0x400000) != 0)
  {
    flowRatePriorWeight = self->_flowRatePriorWeight;
    v245 = -flowRatePriorWeight;
    if (flowRatePriorWeight >= 0.0)
      v245 = self->_flowRatePriorWeight;
    v246 = floor(v245 + 0.5);
    v247 = (v245 - v246) * 1.84467441e19;
    v243 = 2654435761u * (unint64_t)fmod(v246, 1.84467441e19);
    if (v247 >= 0.0)
    {
      if (v247 > 0.0)
        v243 += (unint64_t)v247;
    }
    else
    {
      v243 -= (unint64_t)fabs(v247);
    }
  }
  else
  {
    v243 = 0;
  }
  v2044 = v243;
  if ((v7 & 0x800000000000000) != 0)
  {
    presentationImpressionValueBaseline = self->_presentationImpressionValueBaseline;
    v250 = -presentationImpressionValueBaseline;
    if (presentationImpressionValueBaseline >= 0.0)
      v250 = self->_presentationImpressionValueBaseline;
    v251 = floor(v250 + 0.5);
    v252 = (v250 - v251) * 1.84467441e19;
    v248 = 2654435761u * (unint64_t)fmod(v251, 1.84467441e19);
    if (v252 >= 0.0)
    {
      if (v252 > 0.0)
        v248 += (unint64_t)v252;
    }
    else
    {
      v248 -= (unint64_t)fabs(v252);
    }
  }
  else
  {
    v248 = 0;
  }
  v2043 = v248;
  if ((v9 & 0x20000000000) != 0)
  {
    heavyClickImpressionValueBaseline = self->_heavyClickImpressionValueBaseline;
    v255 = -heavyClickImpressionValueBaseline;
    if (heavyClickImpressionValueBaseline >= 0.0)
      v255 = self->_heavyClickImpressionValueBaseline;
    v256 = floor(v255 + 0.5);
    v257 = (v255 - v256) * 1.84467441e19;
    v253 = 2654435761u * (unint64_t)fmod(v256, 1.84467441e19);
    if (v257 >= 0.0)
    {
      if (v257 > 0.0)
        v253 += (unint64_t)v257;
    }
    else
    {
      v253 -= (unint64_t)fabs(v257);
    }
  }
  else
  {
    v253 = 0;
  }
  v2042 = v253;
  if ((v9 & 0x2000000000000000) != 0)
  {
    likeImpressionValueBaseline = self->_likeImpressionValueBaseline;
    v260 = -likeImpressionValueBaseline;
    if (likeImpressionValueBaseline >= 0.0)
      v260 = self->_likeImpressionValueBaseline;
    v261 = floor(v260 + 0.5);
    v262 = (v260 - v261) * 1.84467441e19;
    v258 = 2654435761u * (unint64_t)fmod(v261, 1.84467441e19);
    if (v262 >= 0.0)
    {
      if (v262 > 0.0)
        v258 += (unint64_t)v262;
    }
    else
    {
      v258 -= (unint64_t)fabs(v262);
    }
  }
  else
  {
    v258 = 0;
  }
  v2041 = v258;
  if ((v8 & 0x20000000000) != 0)
  {
    shareImpressionValueBaseline = self->_shareImpressionValueBaseline;
    v265 = -shareImpressionValueBaseline;
    if (shareImpressionValueBaseline >= 0.0)
      v265 = self->_shareImpressionValueBaseline;
    v266 = floor(v265 + 0.5);
    v267 = (v265 - v266) * 1.84467441e19;
    v263 = 2654435761u * (unint64_t)fmod(v266, 1.84467441e19);
    if (v267 >= 0.0)
    {
      if (v267 > 0.0)
        v263 += (unint64_t)v267;
    }
    else
    {
      v263 -= (unint64_t)fabs(v267);
    }
  }
  else
  {
    v263 = 0;
  }
  v2040 = v263;
  if ((v8 & 0x40000000) != 0)
  {
    savedImpressionValueBaseline = self->_savedImpressionValueBaseline;
    v270 = -savedImpressionValueBaseline;
    if (savedImpressionValueBaseline >= 0.0)
      v270 = self->_savedImpressionValueBaseline;
    v271 = floor(v270 + 0.5);
    v272 = (v270 - v271) * 1.84467441e19;
    v268 = 2654435761u * (unint64_t)fmod(v271, 1.84467441e19);
    if (v272 >= 0.0)
    {
      if (v272 > 0.0)
        v268 += (unint64_t)v272;
    }
    else
    {
      v268 -= (unint64_t)fabs(v272);
    }
  }
  else
  {
    v268 = 0;
  }
  v2039 = v268;
  if ((v8 & 0x400000000000) != 0)
  {
    subscribeImpressionValueBaseline = self->_subscribeImpressionValueBaseline;
    v275 = -subscribeImpressionValueBaseline;
    if (subscribeImpressionValueBaseline >= 0.0)
      v275 = self->_subscribeImpressionValueBaseline;
    v276 = floor(v275 + 0.5);
    v277 = (v275 - v276) * 1.84467441e19;
    v273 = 2654435761u * (unint64_t)fmod(v276, 1.84467441e19);
    if (v277 >= 0.0)
    {
      if (v277 > 0.0)
        v273 += (unint64_t)v277;
    }
    else
    {
      v273 -= (unint64_t)fabs(v277);
    }
  }
  else
  {
    v273 = 0;
  }
  v2038 = v273;
  if ((v3 & 0x1000) != 0)
  {
    tappedImpressionValueBaseline = self->_tappedImpressionValueBaseline;
    v280 = -tappedImpressionValueBaseline;
    if (tappedImpressionValueBaseline >= 0.0)
      v280 = self->_tappedImpressionValueBaseline;
    v281 = floor(v280 + 0.5);
    v282 = (v280 - v281) * 1.84467441e19;
    v278 = 2654435761u * (unint64_t)fmod(v281, 1.84467441e19);
    if (v282 >= 0.0)
    {
      if (v282 > 0.0)
        v278 += (unint64_t)v282;
    }
    else
    {
      v278 -= (unint64_t)fabs(v282);
    }
  }
  else
  {
    v278 = 0;
  }
  v2037 = v278;
  if ((v6 & 0x4000000) != 0)
  {
    weakClickImpressionValueBaseline = self->_weakClickImpressionValueBaseline;
    v285 = -weakClickImpressionValueBaseline;
    if (weakClickImpressionValueBaseline >= 0.0)
      v285 = self->_weakClickImpressionValueBaseline;
    v286 = floor(v285 + 0.5);
    v287 = (v285 - v286) * 1.84467441e19;
    v283 = 2654435761u * (unint64_t)fmod(v286, 1.84467441e19);
    if (v287 >= 0.0)
    {
      if (v287 > 0.0)
        v283 += (unint64_t)v287;
    }
    else
    {
      v283 -= (unint64_t)fabs(v287);
    }
  }
  else
  {
    v283 = 0;
  }
  v2036 = v283;
  if ((v3 & 0x1000000000000000) != 0)
  {
    unsubscribeImpressionValueBaseline = self->_unsubscribeImpressionValueBaseline;
    v290 = -unsubscribeImpressionValueBaseline;
    if (unsubscribeImpressionValueBaseline >= 0.0)
      v290 = self->_unsubscribeImpressionValueBaseline;
    v291 = floor(v290 + 0.5);
    v292 = (v290 - v291) * 1.84467441e19;
    v288 = 2654435761u * (unint64_t)fmod(v291, 1.84467441e19);
    if (v292 >= 0.0)
    {
      if (v292 > 0.0)
        v288 += (unint64_t)v292;
    }
    else
    {
      v288 -= (unint64_t)fabs(v292);
    }
  }
  else
  {
    v288 = 0;
  }
  v2035 = v288;
  if ((v6 & 0x400000) != 0)
  {
    visitImpressionValueBaseline = self->_visitImpressionValueBaseline;
    v295 = -visitImpressionValueBaseline;
    if (visitImpressionValueBaseline >= 0.0)
      v295 = self->_visitImpressionValueBaseline;
    v296 = floor(v295 + 0.5);
    v297 = (v295 - v296) * 1.84467441e19;
    v293 = 2654435761u * (unint64_t)fmod(v296, 1.84467441e19);
    if (v297 >= 0.0)
    {
      if (v297 > 0.0)
        v293 += (unint64_t)v297;
    }
    else
    {
      v293 -= (unint64_t)fabs(v297);
    }
  }
  else
  {
    v293 = 0;
  }
  v2034 = v293;
  if ((v9 & 4) != 0)
  {
    dislikeImpressionValueBaseline = self->_dislikeImpressionValueBaseline;
    v300 = -dislikeImpressionValueBaseline;
    if (dislikeImpressionValueBaseline >= 0.0)
      v300 = self->_dislikeImpressionValueBaseline;
    v301 = floor(v300 + 0.5);
    v302 = (v300 - v301) * 1.84467441e19;
    v298 = 2654435761u * (unint64_t)fmod(v301, 1.84467441e19);
    if (v302 >= 0.0)
    {
      if (v302 > 0.0)
        v298 += (unint64_t)v302;
    }
    else
    {
      v298 -= (unint64_t)fabs(v302);
    }
  }
  else
  {
    v298 = 0;
  }
  v2033 = v298;
  if ((v8 & 0x10000000000000) != 0)
  {
    subscriptionRelatedImpressionValueBaseline = self->_subscriptionRelatedImpressionValueBaseline;
    v305 = -subscriptionRelatedImpressionValueBaseline;
    if (subscriptionRelatedImpressionValueBaseline >= 0.0)
      v305 = self->_subscriptionRelatedImpressionValueBaseline;
    v306 = floor(v305 + 0.5);
    v307 = (v305 - v306) * 1.84467441e19;
    v303 = 2654435761u * (unint64_t)fmod(v306, 1.84467441e19);
    if (v307 >= 0.0)
    {
      if (v307 > 0.0)
        v303 += (unint64_t)v307;
    }
    else
    {
      v303 -= (unint64_t)fabs(v307);
    }
  }
  else
  {
    v303 = 0;
  }
  v2032 = v303;
  if ((v7 & 0x200000000000000) != 0)
  {
    presentationClickValueBaseline = self->_presentationClickValueBaseline;
    v310 = -presentationClickValueBaseline;
    if (presentationClickValueBaseline >= 0.0)
      v310 = self->_presentationClickValueBaseline;
    v311 = floor(v310 + 0.5);
    v312 = (v310 - v311) * 1.84467441e19;
    v308 = 2654435761u * (unint64_t)fmod(v311, 1.84467441e19);
    if (v312 >= 0.0)
    {
      if (v312 > 0.0)
        v308 += (unint64_t)v312;
    }
    else
    {
      v308 -= (unint64_t)fabs(v312);
    }
  }
  else
  {
    v308 = 0;
  }
  v2031 = v308;
  if ((v9 & 0x8000000000) != 0)
  {
    heavyClickClickValueBaseline = self->_heavyClickClickValueBaseline;
    v315 = -heavyClickClickValueBaseline;
    if (heavyClickClickValueBaseline >= 0.0)
      v315 = self->_heavyClickClickValueBaseline;
    v316 = floor(v315 + 0.5);
    v317 = (v315 - v316) * 1.84467441e19;
    v313 = 2654435761u * (unint64_t)fmod(v316, 1.84467441e19);
    if (v317 >= 0.0)
    {
      if (v317 > 0.0)
        v313 += (unint64_t)v317;
    }
    else
    {
      v313 -= (unint64_t)fabs(v317);
    }
  }
  else
  {
    v313 = 0;
  }
  v2030 = v313;
  if ((v9 & 0x800000000000000) != 0)
  {
    likeClickValueBaseline = self->_likeClickValueBaseline;
    v320 = -likeClickValueBaseline;
    if (likeClickValueBaseline >= 0.0)
      v320 = self->_likeClickValueBaseline;
    v321 = floor(v320 + 0.5);
    v322 = (v320 - v321) * 1.84467441e19;
    v318 = 2654435761u * (unint64_t)fmod(v321, 1.84467441e19);
    if (v322 >= 0.0)
    {
      if (v322 > 0.0)
        v318 += (unint64_t)v322;
    }
    else
    {
      v318 -= (unint64_t)fabs(v322);
    }
  }
  else
  {
    v318 = 0;
  }
  v2029 = v318;
  if ((v8 & 0x8000000000) != 0)
  {
    shareClickValueBaseline = self->_shareClickValueBaseline;
    v325 = -shareClickValueBaseline;
    if (shareClickValueBaseline >= 0.0)
      v325 = self->_shareClickValueBaseline;
    v326 = floor(v325 + 0.5);
    v327 = (v325 - v326) * 1.84467441e19;
    v323 = 2654435761u * (unint64_t)fmod(v326, 1.84467441e19);
    if (v327 >= 0.0)
    {
      if (v327 > 0.0)
        v323 += (unint64_t)v327;
    }
    else
    {
      v323 -= (unint64_t)fabs(v327);
    }
  }
  else
  {
    v323 = 0;
  }
  v2028 = v323;
  if ((v8 & 0x10000000) != 0)
  {
    savedClickValueBaseline = self->_savedClickValueBaseline;
    v330 = -savedClickValueBaseline;
    if (savedClickValueBaseline >= 0.0)
      v330 = self->_savedClickValueBaseline;
    v331 = floor(v330 + 0.5);
    v332 = (v330 - v331) * 1.84467441e19;
    v328 = 2654435761u * (unint64_t)fmod(v331, 1.84467441e19);
    if (v332 >= 0.0)
    {
      if (v332 > 0.0)
        v328 += (unint64_t)v332;
    }
    else
    {
      v328 -= (unint64_t)fabs(v332);
    }
  }
  else
  {
    v328 = 0;
  }
  v2027 = v328;
  if ((v8 & 0x100000000000) != 0)
  {
    subscribeClickValueBaseline = self->_subscribeClickValueBaseline;
    v335 = -subscribeClickValueBaseline;
    if (subscribeClickValueBaseline >= 0.0)
      v335 = self->_subscribeClickValueBaseline;
    v336 = floor(v335 + 0.5);
    v337 = (v335 - v336) * 1.84467441e19;
    v333 = 2654435761u * (unint64_t)fmod(v336, 1.84467441e19);
    if (v337 >= 0.0)
    {
      if (v337 > 0.0)
        v333 += (unint64_t)v337;
    }
    else
    {
      v333 -= (unint64_t)fabs(v337);
    }
  }
  else
  {
    v333 = 0;
  }
  v2026 = v333;
  if ((v3 & 0x400) != 0)
  {
    tappedClickValueBaseline = self->_tappedClickValueBaseline;
    v340 = -tappedClickValueBaseline;
    if (tappedClickValueBaseline >= 0.0)
      v340 = self->_tappedClickValueBaseline;
    v341 = floor(v340 + 0.5);
    v342 = (v340 - v341) * 1.84467441e19;
    v338 = 2654435761u * (unint64_t)fmod(v341, 1.84467441e19);
    if (v342 >= 0.0)
    {
      if (v342 > 0.0)
        v338 += (unint64_t)v342;
    }
    else
    {
      v338 -= (unint64_t)fabs(v342);
    }
  }
  else
  {
    v338 = 0;
  }
  v2025 = v338;
  if ((v6 & 0x1000000) != 0)
  {
    weakClickClickValueBaseline = self->_weakClickClickValueBaseline;
    v345 = -weakClickClickValueBaseline;
    if (weakClickClickValueBaseline >= 0.0)
      v345 = self->_weakClickClickValueBaseline;
    v346 = floor(v345 + 0.5);
    v347 = (v345 - v346) * 1.84467441e19;
    v343 = 2654435761u * (unint64_t)fmod(v346, 1.84467441e19);
    if (v347 >= 0.0)
    {
      if (v347 > 0.0)
        v343 += (unint64_t)v347;
    }
    else
    {
      v343 -= (unint64_t)fabs(v347);
    }
  }
  else
  {
    v343 = 0;
  }
  v2024 = v343;
  if ((v3 & 0x400000000000000) != 0)
  {
    unsubscribeClickValueBaseline = self->_unsubscribeClickValueBaseline;
    v350 = -unsubscribeClickValueBaseline;
    if (unsubscribeClickValueBaseline >= 0.0)
      v350 = self->_unsubscribeClickValueBaseline;
    v351 = floor(v350 + 0.5);
    v352 = (v350 - v351) * 1.84467441e19;
    v348 = 2654435761u * (unint64_t)fmod(v351, 1.84467441e19);
    if (v352 >= 0.0)
    {
      if (v352 > 0.0)
        v348 += (unint64_t)v352;
    }
    else
    {
      v348 -= (unint64_t)fabs(v352);
    }
  }
  else
  {
    v348 = 0;
  }
  v2023 = v348;
  if ((v6 & 0x100000) != 0)
  {
    visitClickValueBaseline = self->_visitClickValueBaseline;
    v355 = -visitClickValueBaseline;
    if (visitClickValueBaseline >= 0.0)
      v355 = self->_visitClickValueBaseline;
    v356 = floor(v355 + 0.5);
    v357 = (v355 - v356) * 1.84467441e19;
    v353 = 2654435761u * (unint64_t)fmod(v356, 1.84467441e19);
    if (v357 >= 0.0)
    {
      if (v357 > 0.0)
        v353 += (unint64_t)v357;
    }
    else
    {
      v353 -= (unint64_t)fabs(v357);
    }
  }
  else
  {
    v353 = 0;
  }
  v2022 = v353;
  if ((v9 & 1) != 0)
  {
    dislikeClickValueBaseline = self->_dislikeClickValueBaseline;
    v360 = -dislikeClickValueBaseline;
    if (dislikeClickValueBaseline >= 0.0)
      v360 = self->_dislikeClickValueBaseline;
    v361 = floor(v360 + 0.5);
    v362 = (v360 - v361) * 1.84467441e19;
    v358 = 2654435761u * (unint64_t)fmod(v361, 1.84467441e19);
    if (v362 >= 0.0)
    {
      if (v362 > 0.0)
        v358 += (unint64_t)v362;
    }
    else
    {
      v358 -= (unint64_t)fabs(v362);
    }
  }
  else
  {
    v358 = 0;
  }
  v2021 = v358;
  if ((v8 & 0x4000000000000) != 0)
  {
    subscriptionRelatedClickValueBaseline = self->_subscriptionRelatedClickValueBaseline;
    v365 = -subscriptionRelatedClickValueBaseline;
    if (subscriptionRelatedClickValueBaseline >= 0.0)
      v365 = self->_subscriptionRelatedClickValueBaseline;
    v366 = floor(v365 + 0.5);
    v367 = (v365 - v366) * 1.84467441e19;
    v363 = 2654435761u * (unint64_t)fmod(v366, 1.84467441e19);
    if (v367 >= 0.0)
    {
      if (v367 > 0.0)
        v363 += (unint64_t)v367;
    }
    else
    {
      v363 -= (unint64_t)fabs(v367);
    }
  }
  else
  {
    v363 = 0;
  }
  v2020 = v363;
  if ((v9 & 0x100) != 0)
  {
    existingSubscriptionImpressionValue = self->_existingSubscriptionImpressionValue;
    v370 = -existingSubscriptionImpressionValue;
    if (existingSubscriptionImpressionValue >= 0.0)
      v370 = self->_existingSubscriptionImpressionValue;
    v371 = floor(v370 + 0.5);
    v372 = (v370 - v371) * 1.84467441e19;
    v368 = 2654435761u * (unint64_t)fmod(v371, 1.84467441e19);
    if (v372 >= 0.0)
    {
      if (v372 > 0.0)
        v368 += (unint64_t)v372;
    }
    else
    {
      v368 -= (unint64_t)fabs(v372);
    }
  }
  else
  {
    v368 = 0;
  }
  v2019 = v368;
  if ((v9 & 0x40) != 0)
  {
    existingSubscriptionClickValue = self->_existingSubscriptionClickValue;
    v375 = -existingSubscriptionClickValue;
    if (existingSubscriptionClickValue >= 0.0)
      v375 = self->_existingSubscriptionClickValue;
    v376 = floor(v375 + 0.5);
    v377 = (v375 - v376) * 1.84467441e19;
    v373 = 2654435761u * (unint64_t)fmod(v376, 1.84467441e19);
    if (v377 >= 0.0)
    {
      if (v377 > 0.0)
        v373 += (unint64_t)v377;
    }
    else
    {
      v373 -= (unint64_t)fabs(v377);
    }
  }
  else
  {
    v373 = 0;
  }
  v2018 = v373;
  if ((v9 & 0x200) != 0)
  {
    existingSubscriptionImpressionValueBaseline = self->_existingSubscriptionImpressionValueBaseline;
    v380 = -existingSubscriptionImpressionValueBaseline;
    if (existingSubscriptionImpressionValueBaseline >= 0.0)
      v380 = self->_existingSubscriptionImpressionValueBaseline;
    v381 = floor(v380 + 0.5);
    v382 = (v380 - v381) * 1.84467441e19;
    v378 = 2654435761u * (unint64_t)fmod(v381, 1.84467441e19);
    if (v382 >= 0.0)
    {
      if (v382 > 0.0)
        v378 += (unint64_t)v382;
    }
    else
    {
      v378 -= (unint64_t)fabs(v382);
    }
  }
  else
  {
    v378 = 0;
  }
  v2017 = v378;
  if ((v9 & 0x80) != 0)
  {
    existingSubscriptionClickValueBaseline = self->_existingSubscriptionClickValueBaseline;
    v385 = -existingSubscriptionClickValueBaseline;
    if (existingSubscriptionClickValueBaseline >= 0.0)
      v385 = self->_existingSubscriptionClickValueBaseline;
    v386 = floor(v385 + 0.5);
    v387 = (v385 - v386) * 1.84467441e19;
    v383 = 2654435761u * (unint64_t)fmod(v386, 1.84467441e19);
    if (v387 >= 0.0)
    {
      if (v387 > 0.0)
        v383 += (unint64_t)v387;
    }
    else
    {
      v383 -= (unint64_t)fabs(v387);
    }
  }
  else
  {
    v383 = 0;
  }
  v2016 = v383;
  if ((v9 & 0x1000) != 0)
  {
    existingSubscriptionRelatedImpressionValue = self->_existingSubscriptionRelatedImpressionValue;
    v390 = -existingSubscriptionRelatedImpressionValue;
    if (existingSubscriptionRelatedImpressionValue >= 0.0)
      v390 = self->_existingSubscriptionRelatedImpressionValue;
    v391 = floor(v390 + 0.5);
    v392 = (v390 - v391) * 1.84467441e19;
    v388 = 2654435761u * (unint64_t)fmod(v391, 1.84467441e19);
    if (v392 >= 0.0)
    {
      if (v392 > 0.0)
        v388 += (unint64_t)v392;
    }
    else
    {
      v388 -= (unint64_t)fabs(v392);
    }
  }
  else
  {
    v388 = 0;
  }
  v2015 = v388;
  if ((v9 & 0x400) != 0)
  {
    existingSubscriptionRelatedClickValue = self->_existingSubscriptionRelatedClickValue;
    v395 = -existingSubscriptionRelatedClickValue;
    if (existingSubscriptionRelatedClickValue >= 0.0)
      v395 = self->_existingSubscriptionRelatedClickValue;
    v396 = floor(v395 + 0.5);
    v397 = (v395 - v396) * 1.84467441e19;
    v393 = 2654435761u * (unint64_t)fmod(v396, 1.84467441e19);
    if (v397 >= 0.0)
    {
      if (v397 > 0.0)
        v393 += (unint64_t)v397;
    }
    else
    {
      v393 -= (unint64_t)fabs(v397);
    }
  }
  else
  {
    v393 = 0;
  }
  v2014 = v393;
  if ((v9 & 0x2000) != 0)
  {
    existingSubscriptionRelatedImpressionValueBaseline = self->_existingSubscriptionRelatedImpressionValueBaseline;
    v400 = -existingSubscriptionRelatedImpressionValueBaseline;
    if (existingSubscriptionRelatedImpressionValueBaseline >= 0.0)
      v400 = self->_existingSubscriptionRelatedImpressionValueBaseline;
    v401 = floor(v400 + 0.5);
    v402 = (v400 - v401) * 1.84467441e19;
    v398 = 2654435761u * (unint64_t)fmod(v401, 1.84467441e19);
    if (v402 >= 0.0)
    {
      if (v402 > 0.0)
        v398 += (unint64_t)v402;
    }
    else
    {
      v398 -= (unint64_t)fabs(v402);
    }
  }
  else
  {
    v398 = 0;
  }
  v2013 = v398;
  if ((v9 & 0x800) != 0)
  {
    existingSubscriptionRelatedClickValueBaseline = self->_existingSubscriptionRelatedClickValueBaseline;
    v405 = -existingSubscriptionRelatedClickValueBaseline;
    if (existingSubscriptionRelatedClickValueBaseline >= 0.0)
      v405 = self->_existingSubscriptionRelatedClickValueBaseline;
    v406 = floor(v405 + 0.5);
    v407 = (v405 - v406) * 1.84467441e19;
    v403 = 2654435761u * (unint64_t)fmod(v406, 1.84467441e19);
    if (v407 >= 0.0)
    {
      if (v407 > 0.0)
        v403 += (unint64_t)v407;
    }
    else
    {
      v403 -= (unint64_t)fabs(v407);
    }
  }
  else
  {
    v403 = 0;
  }
  v2012 = v403;
  if ((v9 & 0x8000000) != 0)
  {
    globalScoreStretchingFactor = self->_globalScoreStretchingFactor;
    v410 = -globalScoreStretchingFactor;
    if (globalScoreStretchingFactor >= 0.0)
      v410 = self->_globalScoreStretchingFactor;
    v411 = floor(v410 + 0.5);
    v412 = (v410 - v411) * 1.84467441e19;
    v408 = 2654435761u * (unint64_t)fmod(v411, 1.84467441e19);
    if (v412 >= 0.0)
    {
      if (v412 > 0.0)
        v408 += (unint64_t)v412;
    }
    else
    {
      v408 -= (unint64_t)fabs(v412);
    }
  }
  else
  {
    v408 = 0;
  }
  v2011 = v408;
  if ((v9 & 0x4000000000000) != 0)
  {
    hourlyFlowRateFloor = self->_hourlyFlowRateFloor;
    v415 = -hourlyFlowRateFloor;
    if (hourlyFlowRateFloor >= 0.0)
      v415 = self->_hourlyFlowRateFloor;
    v416 = floor(v415 + 0.5);
    v417 = (v415 - v416) * 1.84467441e19;
    v413 = 2654435761u * (unint64_t)fmod(v416, 1.84467441e19);
    if (v417 >= 0.0)
    {
      if (v417 > 0.0)
        v413 += (unint64_t)v417;
    }
    else
    {
      v413 -= (unint64_t)fabs(v417);
    }
  }
  else
  {
    v413 = 0;
  }
  v2010 = v413;
  if ((v9 & 0x1000000000000) != 0)
  {
    hourlyFlowRateCeiling = self->_hourlyFlowRateCeiling;
    v420 = -hourlyFlowRateCeiling;
    if (hourlyFlowRateCeiling >= 0.0)
      v420 = self->_hourlyFlowRateCeiling;
    v421 = floor(v420 + 0.5);
    v422 = (v420 - v421) * 1.84467441e19;
    v418 = 2654435761u * (unint64_t)fmod(v421, 1.84467441e19);
    if (v422 >= 0.0)
    {
      if (v422 > 0.0)
        v418 += (unint64_t)v422;
    }
    else
    {
      v418 -= (unint64_t)fabs(v422);
    }
  }
  else
  {
    v418 = 0;
  }
  v2009 = v418;
  if ((v8 & 0x4000000) != 0)
  {
    saturatedSubscriptionCountFactor = self->_saturatedSubscriptionCountFactor;
    v425 = -saturatedSubscriptionCountFactor;
    if (saturatedSubscriptionCountFactor >= 0.0)
      v425 = self->_saturatedSubscriptionCountFactor;
    v426 = floor(v425 + 0.5);
    v427 = (v425 - v426) * 1.84467441e19;
    v423 = 2654435761u * (unint64_t)fmod(v426, 1.84467441e19);
    if (v427 >= 0.0)
    {
      if (v427 > 0.0)
        v423 += (unint64_t)v427;
    }
    else
    {
      v423 -= (unint64_t)fabs(v427);
    }
  }
  else
  {
    v423 = 0;
  }
  v2008 = v423;
  if ((v7 & 0x4000000000000000) != 0)
  {
    publisherDiversificationPenalty = self->_publisherDiversificationPenalty;
    v430 = -publisherDiversificationPenalty;
    if (publisherDiversificationPenalty >= 0.0)
      v430 = self->_publisherDiversificationPenalty;
    v431 = floor(v430 + 0.5);
    v432 = (v430 - v431) * 1.84467441e19;
    v428 = 2654435761u * (unint64_t)fmod(v431, 1.84467441e19);
    if (v432 >= 0.0)
    {
      if (v432 > 0.0)
        v428 += (unint64_t)v432;
    }
    else
    {
      v428 -= (unint64_t)fabs(v432);
    }
  }
  else
  {
    v428 = 0;
  }
  v2007 = v428;
  if ((v5 & 0x200) != 0)
  {
    v2006 = 2654435761 * self->_hardAgeBeforePublisherDiversification;
    if ((v9 & 0x400000000000) != 0)
      goto LABEL_682;
LABEL_687:
    v437 = 0;
    goto LABEL_690;
  }
  v2006 = 0;
  if ((v9 & 0x400000000000) == 0)
    goto LABEL_687;
LABEL_682:
  hourlyFlowRateAlpha = self->_hourlyFlowRateAlpha;
  v434 = -hourlyFlowRateAlpha;
  if (hourlyFlowRateAlpha >= 0.0)
    v434 = self->_hourlyFlowRateAlpha;
  v435 = floor(v434 + 0.5);
  v436 = (v434 - v435) * 1.84467441e19;
  v437 = 2654435761u * (unint64_t)fmod(v435, 1.84467441e19);
  if (v436 >= 0.0)
  {
    if (v436 > 0.0)
      v437 += (unint64_t)v436;
  }
  else
  {
    v437 -= (unint64_t)fabs(v436);
  }
LABEL_690:
  v2005 = v437;
  if ((v9 & 0x800000000000) != 0)
  {
    hourlyFlowRateBeta = self->_hourlyFlowRateBeta;
    v440 = -hourlyFlowRateBeta;
    if (hourlyFlowRateBeta >= 0.0)
      v440 = self->_hourlyFlowRateBeta;
    v441 = floor(v440 + 0.5);
    v442 = (v440 - v441) * 1.84467441e19;
    v438 = 2654435761u * (unint64_t)fmod(v441, 1.84467441e19);
    if (v442 >= 0.0)
    {
      if (v442 > 0.0)
        v438 += (unint64_t)v442;
    }
    else
    {
      v438 -= (unint64_t)fabs(v442);
    }
  }
  else
  {
    v438 = 0;
  }
  v2004 = v438;
  if ((v9 & 0x8000000000000) != 0)
  {
    hourlyFlowRateGamma = self->_hourlyFlowRateGamma;
    v445 = -hourlyFlowRateGamma;
    if (hourlyFlowRateGamma >= 0.0)
      v445 = self->_hourlyFlowRateGamma;
    v446 = floor(v445 + 0.5);
    v447 = (v445 - v446) * 1.84467441e19;
    v443 = 2654435761u * (unint64_t)fmod(v446, 1.84467441e19);
    if (v447 >= 0.0)
    {
      if (v447 > 0.0)
        v443 += (unint64_t)v447;
    }
    else
    {
      v443 -= (unint64_t)fabs(v447);
    }
  }
  else
  {
    v443 = 0;
  }
  v2003 = v443;
  if ((v8 & 0x2000) != 0)
  {
    recommendationPresentationFeedImpressionValue = self->_recommendationPresentationFeedImpressionValue;
    v450 = -recommendationPresentationFeedImpressionValue;
    if (recommendationPresentationFeedImpressionValue >= 0.0)
      v450 = self->_recommendationPresentationFeedImpressionValue;
    v451 = floor(v450 + 0.5);
    v452 = (v450 - v451) * 1.84467441e19;
    v448 = 2654435761u * (unint64_t)fmod(v451, 1.84467441e19);
    if (v452 >= 0.0)
    {
      if (v452 > 0.0)
        v448 += (unint64_t)v452;
    }
    else
    {
      v448 -= (unint64_t)fabs(v452);
    }
  }
  else
  {
    v448 = 0;
  }
  v2002 = v448;
  if ((v8 & 0x800) != 0)
  {
    recommendationPresentationFeedClickValue = self->_recommendationPresentationFeedClickValue;
    v455 = -recommendationPresentationFeedClickValue;
    if (recommendationPresentationFeedClickValue >= 0.0)
      v455 = self->_recommendationPresentationFeedClickValue;
    v456 = floor(v455 + 0.5);
    v457 = (v455 - v456) * 1.84467441e19;
    v453 = 2654435761u * (unint64_t)fmod(v456, 1.84467441e19);
    if (v457 >= 0.0)
    {
      if (v457 > 0.0)
        v453 += (unint64_t)v457;
    }
    else
    {
      v453 -= (unint64_t)fabs(v457);
    }
  }
  else
  {
    v453 = 0;
  }
  v2001 = v453;
  if ((v8 & 0x200) != 0)
  {
    recommendationPresentationExploreImpressionValue = self->_recommendationPresentationExploreImpressionValue;
    v460 = -recommendationPresentationExploreImpressionValue;
    if (recommendationPresentationExploreImpressionValue >= 0.0)
      v460 = self->_recommendationPresentationExploreImpressionValue;
    v461 = floor(v460 + 0.5);
    v462 = (v460 - v461) * 1.84467441e19;
    v458 = 2654435761u * (unint64_t)fmod(v461, 1.84467441e19);
    if (v462 >= 0.0)
    {
      if (v462 > 0.0)
        v458 += (unint64_t)v462;
    }
    else
    {
      v458 -= (unint64_t)fabs(v462);
    }
  }
  else
  {
    v458 = 0;
  }
  v2000 = v458;
  if ((v8 & 0x80) != 0)
  {
    recommendationPresentationExploreClickValue = self->_recommendationPresentationExploreClickValue;
    v465 = -recommendationPresentationExploreClickValue;
    if (recommendationPresentationExploreClickValue >= 0.0)
      v465 = self->_recommendationPresentationExploreClickValue;
    v466 = floor(v465 + 0.5);
    v467 = (v465 - v466) * 1.84467441e19;
    v463 = 2654435761u * (unint64_t)fmod(v466, 1.84467441e19);
    if (v467 >= 0.0)
    {
      if (v467 > 0.0)
        v463 += (unint64_t)v467;
    }
    else
    {
      v463 -= (unint64_t)fabs(v467);
    }
  }
  else
  {
    v463 = 0;
  }
  v1999 = v463;
  if ((v8 & 0x4000) != 0)
  {
    recommendationPresentationFeedImpressionValueBaseline = self->_recommendationPresentationFeedImpressionValueBaseline;
    v470 = -recommendationPresentationFeedImpressionValueBaseline;
    if (recommendationPresentationFeedImpressionValueBaseline >= 0.0)
      v470 = self->_recommendationPresentationFeedImpressionValueBaseline;
    v471 = floor(v470 + 0.5);
    v472 = (v470 - v471) * 1.84467441e19;
    v468 = 2654435761u * (unint64_t)fmod(v471, 1.84467441e19);
    if (v472 >= 0.0)
    {
      if (v472 > 0.0)
        v468 += (unint64_t)v472;
    }
    else
    {
      v468 -= (unint64_t)fabs(v472);
    }
  }
  else
  {
    v468 = 0;
  }
  v1998 = v468;
  if ((v8 & 0x1000) != 0)
  {
    recommendationPresentationFeedClickValueBaseline = self->_recommendationPresentationFeedClickValueBaseline;
    v475 = -recommendationPresentationFeedClickValueBaseline;
    if (recommendationPresentationFeedClickValueBaseline >= 0.0)
      v475 = self->_recommendationPresentationFeedClickValueBaseline;
    v476 = floor(v475 + 0.5);
    v477 = (v475 - v476) * 1.84467441e19;
    v473 = 2654435761u * (unint64_t)fmod(v476, 1.84467441e19);
    if (v477 >= 0.0)
    {
      if (v477 > 0.0)
        v473 += (unint64_t)v477;
    }
    else
    {
      v473 -= (unint64_t)fabs(v477);
    }
  }
  else
  {
    v473 = 0;
  }
  v1997 = v473;
  if ((v8 & 0x400) != 0)
  {
    recommendationPresentationExploreImpressionValueBaseline = self->_recommendationPresentationExploreImpressionValueBaseline;
    v480 = -recommendationPresentationExploreImpressionValueBaseline;
    if (recommendationPresentationExploreImpressionValueBaseline >= 0.0)
      v480 = self->_recommendationPresentationExploreImpressionValueBaseline;
    v481 = floor(v480 + 0.5);
    v482 = (v480 - v481) * 1.84467441e19;
    v478 = 2654435761u * (unint64_t)fmod(v481, 1.84467441e19);
    if (v482 >= 0.0)
    {
      if (v482 > 0.0)
        v478 += (unint64_t)v482;
    }
    else
    {
      v478 -= (unint64_t)fabs(v482);
    }
  }
  else
  {
    v478 = 0;
  }
  v1996 = v478;
  if ((v8 & 0x100) != 0)
  {
    recommendationPresentationExploreClickValueBaseline = self->_recommendationPresentationExploreClickValueBaseline;
    v485 = -recommendationPresentationExploreClickValueBaseline;
    if (recommendationPresentationExploreClickValueBaseline >= 0.0)
      v485 = self->_recommendationPresentationExploreClickValueBaseline;
    v486 = floor(v485 + 0.5);
    v487 = (v485 - v486) * 1.84467441e19;
    v483 = 2654435761u * (unint64_t)fmod(v486, 1.84467441e19);
    if (v487 >= 0.0)
    {
      if (v487 > 0.0)
        v483 += (unint64_t)v487;
    }
    else
    {
      v483 -= (unint64_t)fabs(v487);
    }
  }
  else
  {
    v483 = 0;
  }
  v1995 = v483;
  if ((v7 & 0x40000000000000) != 0)
  {
    premiumSubscriptionActivationImpressionValue = self->_premiumSubscriptionActivationImpressionValue;
    v490 = -premiumSubscriptionActivationImpressionValue;
    if (premiumSubscriptionActivationImpressionValue >= 0.0)
      v490 = self->_premiumSubscriptionActivationImpressionValue;
    v491 = floor(v490 + 0.5);
    v492 = (v490 - v491) * 1.84467441e19;
    v488 = 2654435761u * (unint64_t)fmod(v491, 1.84467441e19);
    if (v492 >= 0.0)
    {
      if (v492 > 0.0)
        v488 += (unint64_t)v492;
    }
    else
    {
      v488 -= (unint64_t)fabs(v492);
    }
  }
  else
  {
    v488 = 0;
  }
  v1994 = v488;
  if ((v7 & 0x10000000000000) != 0)
  {
    premiumSubscriptionActivationClickValue = self->_premiumSubscriptionActivationClickValue;
    v495 = -premiumSubscriptionActivationClickValue;
    if (premiumSubscriptionActivationClickValue >= 0.0)
      v495 = self->_premiumSubscriptionActivationClickValue;
    v496 = floor(v495 + 0.5);
    v497 = (v495 - v496) * 1.84467441e19;
    v493 = 2654435761u * (unint64_t)fmod(v496, 1.84467441e19);
    if (v497 >= 0.0)
    {
      if (v497 > 0.0)
        v493 += (unint64_t)v497;
    }
    else
    {
      v493 -= (unint64_t)fabs(v497);
    }
  }
  else
  {
    v493 = 0;
  }
  v1993 = v493;
  if ((v7 & 0x80000000000000) != 0)
  {
    premiumSubscriptionActivationImpressionValueBaseline = self->_premiumSubscriptionActivationImpressionValueBaseline;
    v500 = -premiumSubscriptionActivationImpressionValueBaseline;
    if (premiumSubscriptionActivationImpressionValueBaseline >= 0.0)
      v500 = self->_premiumSubscriptionActivationImpressionValueBaseline;
    v501 = floor(v500 + 0.5);
    v502 = (v500 - v501) * 1.84467441e19;
    v498 = 2654435761u * (unint64_t)fmod(v501, 1.84467441e19);
    if (v502 >= 0.0)
    {
      if (v502 > 0.0)
        v498 += (unint64_t)v502;
    }
    else
    {
      v498 -= (unint64_t)fabs(v502);
    }
  }
  else
  {
    v498 = 0;
  }
  v1992 = v498;
  if ((v7 & 0x20000000000000) != 0)
  {
    premiumSubscriptionActivationClickValueBaseline = self->_premiumSubscriptionActivationClickValueBaseline;
    v505 = -premiumSubscriptionActivationClickValueBaseline;
    if (premiumSubscriptionActivationClickValueBaseline >= 0.0)
      v505 = self->_premiumSubscriptionActivationClickValueBaseline;
    v506 = floor(v505 + 0.5);
    v507 = (v505 - v506) * 1.84467441e19;
    v503 = 2654435761u * (unint64_t)fmod(v506, 1.84467441e19);
    if (v507 >= 0.0)
    {
      if (v507 > 0.0)
        v503 += (unint64_t)v507;
    }
    else
    {
      v503 -= (unint64_t)fabs(v507);
    }
  }
  else
  {
    v503 = 0;
  }
  v1991 = v503;
  if ((v9 & 0x4000000000000000) != 0)
  {
    lowQualityArticleRatio = self->_lowQualityArticleRatio;
    v510 = -lowQualityArticleRatio;
    if (lowQualityArticleRatio >= 0.0)
      v510 = self->_lowQualityArticleRatio;
    v511 = floor(v510 + 0.5);
    v512 = (v510 - v511) * 1.84467441e19;
    v508 = 2654435761u * (unint64_t)fmod(v511, 1.84467441e19);
    if (v512 >= 0.0)
    {
      if (v512 > 0.0)
        v508 += (unint64_t)v512;
    }
    else
    {
      v508 -= (unint64_t)fabs(v512);
    }
  }
  else
  {
    v508 = 0;
  }
  v1990 = v508;
  if ((v7 & 0x400) != 0)
  {
    v1989 = 2654435761 * self->_minClusterSize;
    if ((v7 & 4) != 0)
    {
LABEL_812:
      v1988 = 2654435761 * self->_maxClusterSize;
      if (v9 < 0)
        goto LABEL_813;
      goto LABEL_822;
    }
  }
  else
  {
    v1989 = 0;
    if ((v7 & 4) != 0)
      goto LABEL_812;
  }
  v1988 = 0;
  if (v9 < 0)
  {
LABEL_813:
    v1987 = 2654435761 * self->_maxArticleCombos;
    if ((v9 & 0x80000000000) != 0)
      goto LABEL_814;
    goto LABEL_823;
  }
LABEL_822:
  v1987 = 0;
  if ((v9 & 0x80000000000) != 0)
  {
LABEL_814:
    v1986 = 2654435761 * self->_heuristicSampleSize;
    if ((v8 & 0x400000000) != 0)
      goto LABEL_815;
LABEL_824:
    v1985 = 0;
    if ((v8 & 0x80000000) != 0)
      goto LABEL_816;
LABEL_825:
    v517 = 0;
    goto LABEL_828;
  }
LABEL_823:
  v1986 = 0;
  if ((v8 & 0x400000000) == 0)
    goto LABEL_824;
LABEL_815:
  v1985 = 2654435761 * self->_searchBranchMultiplier;
  if ((v8 & 0x80000000) == 0)
    goto LABEL_825;
LABEL_816:
  searchBranchDecay = self->_searchBranchDecay;
  v514 = -searchBranchDecay;
  if (searchBranchDecay >= 0.0)
    v514 = self->_searchBranchDecay;
  v515 = floor(v514 + 0.5);
  v516 = (v514 - v515) * 1.84467441e19;
  v517 = 2654435761u * (unint64_t)fmod(v515, 1.84467441e19);
  if (v516 >= 0.0)
  {
    if (v516 > 0.0)
      v517 += (unint64_t)v516;
  }
  else
  {
    v517 -= (unint64_t)fabs(v516);
  }
LABEL_828:
  v1984 = v517;
  if ((v8 & 0x2000000000) != 0)
  {
    searchTimeLimit = self->_searchTimeLimit;
    v520 = -searchTimeLimit;
    if (searchTimeLimit >= 0.0)
      v520 = self->_searchTimeLimit;
    v521 = floor(v520 + 0.5);
    v522 = (v520 - v521) * 1.84467441e19;
    v518 = 2654435761u * (unint64_t)fmod(v521, 1.84467441e19);
    if (v522 >= 0.0)
    {
      if (v522 > 0.0)
        v518 += (unint64_t)v522;
    }
    else
    {
      v518 -= (unint64_t)fabs(v522);
    }
  }
  else
  {
    v518 = 0;
  }
  v1983 = v518;
  if ((v5 & 2) != 0)
  {
    v1982 = 2654435761 * self->_tagOrder;
    if ((v6 & 0x400000000000000) != 0)
    {
LABEL_838:
      v1981 = 2654435761 * self->_moveOrder;
      if ((v6 & 0x20000000000) != 0)
        goto LABEL_839;
      goto LABEL_861;
    }
  }
  else
  {
    v1982 = 0;
    if ((v6 & 0x400000000000000) != 0)
      goto LABEL_838;
  }
  v1981 = 0;
  if ((v6 & 0x20000000000) != 0)
  {
LABEL_839:
    v1980 = 2654435761 * self->_heuristicOrder;
    if ((v6 & 0x4000000000) != 0)
      goto LABEL_840;
    goto LABEL_862;
  }
LABEL_861:
  v1980 = 0;
  if ((v6 & 0x4000000000) != 0)
  {
LABEL_840:
    v1979 = 2654435761 * self->_heuristicOption;
    if ((v6 & 0x10000000000000) != 0)
      goto LABEL_841;
    goto LABEL_863;
  }
LABEL_862:
  v1979 = 0;
  if ((v6 & 0x10000000000000) != 0)
  {
LABEL_841:
    v1978 = 2654435761 * self->_minClusterSizeIPhone;
    if ((v6 & 0x100000000000) != 0)
      goto LABEL_842;
    goto LABEL_864;
  }
LABEL_863:
  v1978 = 0;
  if ((v6 & 0x100000000000) != 0)
  {
LABEL_842:
    v1977 = 2654435761 * self->_maxClusterSizeIPhone;
    if ((v6 & 0x100000000000000) != 0)
      goto LABEL_843;
    goto LABEL_865;
  }
LABEL_864:
  v1977 = 0;
  if ((v6 & 0x100000000000000) != 0)
  {
LABEL_843:
    v1976 = 2654435761 * self->_minIdealClusterSizeIPhone;
    if ((v6 & 0x1000000000000) != 0)
      goto LABEL_844;
    goto LABEL_866;
  }
LABEL_865:
  v1976 = 0;
  if ((v6 & 0x1000000000000) != 0)
  {
LABEL_844:
    v1975 = 2654435761 * self->_maxIdealClusterSizeIPhone;
    if ((v6 & 0x4000000000000) != 0)
      goto LABEL_845;
    goto LABEL_867;
  }
LABEL_866:
  v1975 = 0;
  if ((v6 & 0x4000000000000) != 0)
  {
LABEL_845:
    v1974 = 2654435761 * self->_minClusterSizeIPad;
    if ((v6 & 0x40000000000) != 0)
      goto LABEL_846;
    goto LABEL_868;
  }
LABEL_867:
  v1974 = 0;
  if ((v6 & 0x40000000000) != 0)
  {
LABEL_846:
    v1973 = 2654435761 * self->_maxClusterSizeIPad;
    if ((v6 & 0x40000000000000) != 0)
      goto LABEL_847;
    goto LABEL_869;
  }
LABEL_868:
  v1973 = 0;
  if ((v6 & 0x40000000000000) != 0)
  {
LABEL_847:
    v1972 = 2654435761 * self->_minIdealClusterSizeIPad;
    if ((v6 & 0x400000000000) != 0)
      goto LABEL_848;
    goto LABEL_870;
  }
LABEL_869:
  v1972 = 0;
  if ((v6 & 0x400000000000) != 0)
  {
LABEL_848:
    v1971 = 2654435761 * self->_maxIdealClusterSizeIPad;
    if ((v7 & 2) != 0)
      goto LABEL_849;
    goto LABEL_871;
  }
LABEL_870:
  v1971 = 0;
  if ((v7 & 2) != 0)
  {
LABEL_849:
    v1970 = 2654435761 * self->_maxArticleCombosIPhone;
    if ((v7 & 1) != 0)
      goto LABEL_850;
    goto LABEL_872;
  }
LABEL_871:
  v1970 = 0;
  if ((v7 & 1) != 0)
  {
LABEL_850:
    v1969 = 2654435761 * self->_maxArticleCombosIPad;
    if ((v9 & 0x200000000000) != 0)
      goto LABEL_851;
    goto LABEL_873;
  }
LABEL_872:
  v1969 = 0;
  if ((v9 & 0x200000000000) != 0)
  {
LABEL_851:
    v1968 = 2654435761 * self->_heuristicSampleSizeIPhone;
    if ((v9 & 0x100000000000) != 0)
      goto LABEL_852;
    goto LABEL_874;
  }
LABEL_873:
  v1968 = 0;
  if ((v9 & 0x100000000000) != 0)
  {
LABEL_852:
    v1967 = 2654435761 * self->_heuristicSampleSizeIPad;
    if ((v8 & 0x1000000000) != 0)
      goto LABEL_853;
    goto LABEL_875;
  }
LABEL_874:
  v1967 = 0;
  if ((v8 & 0x1000000000) != 0)
  {
LABEL_853:
    v1966 = 2654435761 * self->_searchBranchMultiplierIPhone;
    if ((v8 & 0x800000000) != 0)
      goto LABEL_854;
LABEL_876:
    v1965 = 0;
    if ((v8 & 0x200000000) != 0)
      goto LABEL_855;
LABEL_877:
    v527 = 0;
    goto LABEL_880;
  }
LABEL_875:
  v1966 = 0;
  if ((v8 & 0x800000000) == 0)
    goto LABEL_876;
LABEL_854:
  v1965 = 2654435761 * self->_searchBranchMultiplierIPad;
  if ((v8 & 0x200000000) == 0)
    goto LABEL_877;
LABEL_855:
  searchBranchDecayIPhone = self->_searchBranchDecayIPhone;
  v524 = -searchBranchDecayIPhone;
  if (searchBranchDecayIPhone >= 0.0)
    v524 = self->_searchBranchDecayIPhone;
  v525 = floor(v524 + 0.5);
  v526 = (v524 - v525) * 1.84467441e19;
  v527 = 2654435761u * (unint64_t)fmod(v525, 1.84467441e19);
  if (v526 >= 0.0)
  {
    if (v526 > 0.0)
      v527 += (unint64_t)v526;
  }
  else
  {
    v527 -= (unint64_t)fabs(v526);
  }
LABEL_880:
  v1964 = v527;
  if ((v8 & 0x100000000) != 0)
  {
    searchBranchDecayIPad = self->_searchBranchDecayIPad;
    v530 = -searchBranchDecayIPad;
    if (searchBranchDecayIPad >= 0.0)
      v530 = self->_searchBranchDecayIPad;
    v531 = floor(v530 + 0.5);
    v532 = (v530 - v531) * 1.84467441e19;
    v528 = 2654435761u * (unint64_t)fmod(v531, 1.84467441e19);
    if (v532 >= 0.0)
    {
      if (v532 > 0.0)
        v528 += (unint64_t)v532;
    }
    else
    {
      v528 -= (unint64_t)fabs(v532);
    }
  }
  else
  {
    v528 = 0;
  }
  v1963 = v528;
  if ((v6 & 0x10000000000) == 0)
  {
    v1962 = 0;
    if ((v6 & 0x8000000000) != 0)
      goto LABEL_890;
LABEL_896:
    v1961 = 0;
    if ((v3 & 0x40) != 0)
      goto LABEL_891;
LABEL_897:
    v537 = 0;
    goto LABEL_900;
  }
  v1962 = 2654435761 * self->_heuristicOptionIPhone;
  if ((v6 & 0x8000000000) == 0)
    goto LABEL_896;
LABEL_890:
  v1961 = 2654435761 * self->_heuristicOptionIPad;
  if ((v3 & 0x40) == 0)
    goto LABEL_897;
LABEL_891:
  tagSizeCoeffIPhone = self->_tagSizeCoeffIPhone;
  v534 = -tagSizeCoeffIPhone;
  if (tagSizeCoeffIPhone >= 0.0)
    v534 = self->_tagSizeCoeffIPhone;
  v535 = floor(v534 + 0.5);
  v536 = (v534 - v535) * 1.84467441e19;
  v537 = 2654435761u * (unint64_t)fmod(v535, 1.84467441e19);
  if (v536 >= 0.0)
  {
    if (v536 > 0.0)
      v537 += (unint64_t)v536;
  }
  else
  {
    v537 -= (unint64_t)fabs(v536);
  }
LABEL_900:
  v1960 = v537;
  if ((v3 & 0x20) != 0)
  {
    tagSizeCoeffIPad = self->_tagSizeCoeffIPad;
    v540 = -tagSizeCoeffIPad;
    if (tagSizeCoeffIPad >= 0.0)
      v540 = self->_tagSizeCoeffIPad;
    v541 = floor(v540 + 0.5);
    v542 = (v540 - v541) * 1.84467441e19;
    v538 = 2654435761u * (unint64_t)fmod(v541, 1.84467441e19);
    if (v542 >= 0.0)
    {
      if (v542 > 0.0)
        v538 += (unint64_t)v542;
    }
    else
    {
      v538 -= (unint64_t)fabs(v542);
    }
  }
  else
  {
    v538 = 0;
  }
  v1959 = v538;
  if ((v3 & 4) != 0)
  {
    tagPairsCoeffIPhone = self->_tagPairsCoeffIPhone;
    v545 = -tagPairsCoeffIPhone;
    if (tagPairsCoeffIPhone >= 0.0)
      v545 = self->_tagPairsCoeffIPhone;
    v546 = floor(v545 + 0.5);
    v547 = (v545 - v546) * 1.84467441e19;
    v543 = 2654435761u * (unint64_t)fmod(v546, 1.84467441e19);
    if (v547 >= 0.0)
    {
      if (v547 > 0.0)
        v543 += (unint64_t)v547;
    }
    else
    {
      v543 -= (unint64_t)fabs(v547);
    }
  }
  else
  {
    v543 = 0;
  }
  v1958 = v543;
  if ((v3 & 2) != 0)
  {
    tagPairsCoeffIPad = self->_tagPairsCoeffIPad;
    v550 = -tagPairsCoeffIPad;
    if (tagPairsCoeffIPad >= 0.0)
      v550 = self->_tagPairsCoeffIPad;
    v551 = floor(v550 + 0.5);
    v552 = (v550 - v551) * 1.84467441e19;
    v548 = 2654435761u * (unint64_t)fmod(v551, 1.84467441e19);
    if (v552 >= 0.0)
    {
      if (v552 > 0.0)
        v548 += (unint64_t)v552;
    }
    else
    {
      v548 -= (unint64_t)fabs(v552);
    }
  }
  else
  {
    v548 = 0;
  }
  v1957 = v548;
  if ((v7 & 0x40000) != 0)
  {
    moveNewOrphansCoeffIPhone = self->_moveNewOrphansCoeffIPhone;
    v555 = -moveNewOrphansCoeffIPhone;
    if (moveNewOrphansCoeffIPhone >= 0.0)
      v555 = self->_moveNewOrphansCoeffIPhone;
    v556 = floor(v555 + 0.5);
    v557 = (v555 - v556) * 1.84467441e19;
    v553 = 2654435761u * (unint64_t)fmod(v556, 1.84467441e19);
    if (v557 >= 0.0)
    {
      if (v557 > 0.0)
        v553 += (unint64_t)v557;
    }
    else
    {
      v553 -= (unint64_t)fabs(v557);
    }
  }
  else
  {
    v553 = 0;
  }
  v1956 = v553;
  if ((v7 & 0x20000) != 0)
  {
    moveNewOrphansCoeffIPad = self->_moveNewOrphansCoeffIPad;
    v560 = -moveNewOrphansCoeffIPad;
    if (moveNewOrphansCoeffIPad >= 0.0)
      v560 = self->_moveNewOrphansCoeffIPad;
    v561 = floor(v560 + 0.5);
    v562 = (v560 - v561) * 1.84467441e19;
    v558 = 2654435761u * (unint64_t)fmod(v561, 1.84467441e19);
    if (v562 >= 0.0)
    {
      if (v562 > 0.0)
        v558 += (unint64_t)v562;
    }
    else
    {
      v558 -= (unint64_t)fabs(v562);
    }
  }
  else
  {
    v558 = 0;
  }
  v1955 = v558;
  if ((v7 & 0x100000) != 0)
  {
    moveSizeCoeffIPhone = self->_moveSizeCoeffIPhone;
    v565 = -moveSizeCoeffIPhone;
    if (moveSizeCoeffIPhone >= 0.0)
      v565 = self->_moveSizeCoeffIPhone;
    v566 = floor(v565 + 0.5);
    v567 = (v565 - v566) * 1.84467441e19;
    v563 = 2654435761u * (unint64_t)fmod(v566, 1.84467441e19);
    if (v567 >= 0.0)
    {
      if (v567 > 0.0)
        v563 += (unint64_t)v567;
    }
    else
    {
      v563 -= (unint64_t)fabs(v567);
    }
  }
  else
  {
    v563 = 0;
  }
  v1954 = v563;
  if ((v7 & 0x80000) != 0)
  {
    moveSizeCoeffIPad = self->_moveSizeCoeffIPad;
    v570 = -moveSizeCoeffIPad;
    if (moveSizeCoeffIPad >= 0.0)
      v570 = self->_moveSizeCoeffIPad;
    v571 = floor(v570 + 0.5);
    v572 = (v570 - v571) * 1.84467441e19;
    v568 = 2654435761u * (unint64_t)fmod(v571, 1.84467441e19);
    if (v572 >= 0.0)
    {
      if (v572 > 0.0)
        v568 += (unint64_t)v572;
    }
    else
    {
      v568 -= (unint64_t)fabs(v572);
    }
  }
  else
  {
    v568 = 0;
  }
  v1953 = v568;
  if ((v8 & 0x1000000000000000) != 0)
  {
    tagFavoritedCoeff = self->_tagFavoritedCoeff;
    v575 = -tagFavoritedCoeff;
    if (tagFavoritedCoeff >= 0.0)
      v575 = self->_tagFavoritedCoeff;
    v576 = floor(v575 + 0.5);
    v577 = (v575 - v576) * 1.84467441e19;
    v573 = 2654435761u * (unint64_t)fmod(v576, 1.84467441e19);
    if (v577 >= 0.0)
    {
      if (v577 > 0.0)
        v573 += (unint64_t)v577;
    }
    else
    {
      v573 -= (unint64_t)fabs(v577);
    }
  }
  else
  {
    v573 = 0;
  }
  v1952 = v573;
  if ((v7 & 0x4000) != 0)
  {
    moveAboutnessNoiseStdIPhone = self->_moveAboutnessNoiseStdIPhone;
    v580 = -moveAboutnessNoiseStdIPhone;
    if (moveAboutnessNoiseStdIPhone >= 0.0)
      v580 = self->_moveAboutnessNoiseStdIPhone;
    v581 = floor(v580 + 0.5);
    v582 = (v580 - v581) * 1.84467441e19;
    v578 = 2654435761u * (unint64_t)fmod(v581, 1.84467441e19);
    if (v582 >= 0.0)
    {
      if (v582 > 0.0)
        v578 += (unint64_t)v582;
    }
    else
    {
      v578 -= (unint64_t)fabs(v582);
    }
  }
  else
  {
    v578 = 0;
  }
  v1951 = v578;
  if ((v7 & 0x2000) != 0)
  {
    moveAboutnessNoiseStdIPad = self->_moveAboutnessNoiseStdIPad;
    v585 = -moveAboutnessNoiseStdIPad;
    if (moveAboutnessNoiseStdIPad >= 0.0)
      v585 = self->_moveAboutnessNoiseStdIPad;
    v586 = floor(v585 + 0.5);
    v587 = (v585 - v586) * 1.84467441e19;
    v583 = 2654435761u * (unint64_t)fmod(v586, 1.84467441e19);
    if (v587 >= 0.0)
    {
      if (v587 > 0.0)
        v583 += (unint64_t)v587;
    }
    else
    {
      v583 -= (unint64_t)fabs(v587);
    }
  }
  else
  {
    v583 = 0;
  }
  v1950 = v583;
  if ((v6 & 0x80000000) != 0)
  {
    v1949 = 2654435761 * self->_dynamicMaxClusterSizeIPhone;
    if ((v6 & 0x40000000) != 0)
    {
LABEL_982:
      v1948 = 2654435761 * self->_dynamicMaxClusterSizeIPad;
      if ((v6 & 0x200000000) != 0)
        goto LABEL_983;
      goto LABEL_994;
    }
  }
  else
  {
    v1949 = 0;
    if ((v6 & 0x40000000) != 0)
      goto LABEL_982;
  }
  v1948 = 0;
  if ((v6 & 0x200000000) != 0)
  {
LABEL_983:
    v1947 = 2654435761 * self->_dynamicMinArticleSetSizeIPhone;
    if ((v6 & 0x100000000) != 0)
      goto LABEL_984;
    goto LABEL_995;
  }
LABEL_994:
  v1947 = 0;
  if ((v6 & 0x100000000) != 0)
  {
LABEL_984:
    v1946 = 2654435761 * self->_dynamicMinArticleSetSizeIPad;
    if ((v6 & 0x20000000) != 0)
      goto LABEL_985;
    goto LABEL_996;
  }
LABEL_995:
  v1946 = 0;
  if ((v6 & 0x20000000) != 0)
  {
LABEL_985:
    v1945 = 2654435761 * self->_dynamicMaxArticleSetSizeIPhone;
    if ((v6 & 0x10000000) != 0)
      goto LABEL_986;
    goto LABEL_997;
  }
LABEL_996:
  v1945 = 0;
  if ((v6 & 0x10000000) != 0)
  {
LABEL_986:
    v1944 = 2654435761 * self->_dynamicMaxArticleSetSizeIPad;
    if ((v5 & 4) != 0)
      goto LABEL_987;
LABEL_998:
    v1943 = 0;
    if ((v7 & 0x20000000000) != 0)
      goto LABEL_988;
LABEL_999:
    v592 = 0;
    goto LABEL_1002;
  }
LABEL_997:
  v1944 = 0;
  if ((v5 & 4) == 0)
    goto LABEL_998;
LABEL_987:
  v1943 = 2654435761 * self->_deleteOrphansFromOverflow;
  if ((v7 & 0x20000000000) == 0)
    goto LABEL_999;
LABEL_988:
  overflownOrphansFilterCoeff = self->_overflownOrphansFilterCoeff;
  v589 = -overflownOrphansFilterCoeff;
  if (overflownOrphansFilterCoeff >= 0.0)
    v589 = self->_overflownOrphansFilterCoeff;
  v590 = floor(v589 + 0.5);
  v591 = (v589 - v590) * 1.84467441e19;
  v592 = 2654435761u * (unint64_t)fmod(v590, 1.84467441e19);
  if (v591 >= 0.0)
  {
    if (v591 > 0.0)
      v592 += (unint64_t)v591;
  }
  else
  {
    v592 -= (unint64_t)fabs(v591);
  }
LABEL_1002:
  v1942 = v592;
  if ((v7 & 0x10000) != 0)
  {
    moveAboutnessWeightRatioIPhone = self->_moveAboutnessWeightRatioIPhone;
    v595 = -moveAboutnessWeightRatioIPhone;
    if (moveAboutnessWeightRatioIPhone >= 0.0)
      v595 = self->_moveAboutnessWeightRatioIPhone;
    v596 = floor(v595 + 0.5);
    v597 = (v595 - v596) * 1.84467441e19;
    v593 = 2654435761u * (unint64_t)fmod(v596, 1.84467441e19);
    if (v597 >= 0.0)
    {
      if (v597 > 0.0)
        v593 += (unint64_t)v597;
    }
    else
    {
      v593 -= (unint64_t)fabs(v597);
    }
  }
  else
  {
    v593 = 0;
  }
  v1941 = v593;
  if ((v7 & 0x8000) != 0)
  {
    moveAboutnessWeightRatioIPad = self->_moveAboutnessWeightRatioIPad;
    v600 = -moveAboutnessWeightRatioIPad;
    if (moveAboutnessWeightRatioIPad >= 0.0)
      v600 = self->_moveAboutnessWeightRatioIPad;
    v601 = floor(v600 + 0.5);
    v602 = (v600 - v601) * 1.84467441e19;
    v598 = 2654435761u * (unint64_t)fmod(v601, 1.84467441e19);
    if (v602 >= 0.0)
    {
      if (v602 > 0.0)
        v598 += (unint64_t)v602;
    }
    else
    {
      v598 -= (unint64_t)fabs(v602);
    }
  }
  else
  {
    v598 = 0;
  }
  v1940 = v598;
  if ((v9 & 0x80000000) != 0)
  {
    groupingDoubleParam1 = self->_groupingDoubleParam1;
    v605 = -groupingDoubleParam1;
    if (groupingDoubleParam1 >= 0.0)
      v605 = self->_groupingDoubleParam1;
    v606 = floor(v605 + 0.5);
    v607 = (v605 - v606) * 1.84467441e19;
    v603 = 2654435761u * (unint64_t)fmod(v606, 1.84467441e19);
    if (v607 >= 0.0)
    {
      if (v607 > 0.0)
        v603 += (unint64_t)v607;
    }
    else
    {
      v603 -= (unint64_t)fabs(v607);
    }
  }
  else
  {
    v603 = 0;
  }
  v1939 = v603;
  if ((v9 & 0x100000000) != 0)
  {
    groupingDoubleParam2 = self->_groupingDoubleParam2;
    v610 = -groupingDoubleParam2;
    if (groupingDoubleParam2 >= 0.0)
      v610 = self->_groupingDoubleParam2;
    v611 = floor(v610 + 0.5);
    v612 = (v610 - v611) * 1.84467441e19;
    v608 = 2654435761u * (unint64_t)fmod(v611, 1.84467441e19);
    if (v612 >= 0.0)
    {
      if (v612 > 0.0)
        v608 += (unint64_t)v612;
    }
    else
    {
      v608 -= (unint64_t)fabs(v612);
    }
  }
  else
  {
    v608 = 0;
  }
  v1938 = v608;
  if ((v9 & 0x200000000) != 0)
  {
    groupingDoubleParam3 = self->_groupingDoubleParam3;
    v615 = -groupingDoubleParam3;
    if (groupingDoubleParam3 >= 0.0)
      v615 = self->_groupingDoubleParam3;
    v616 = floor(v615 + 0.5);
    v617 = (v615 - v616) * 1.84467441e19;
    v613 = 2654435761u * (unint64_t)fmod(v616, 1.84467441e19);
    if (v617 >= 0.0)
    {
      if (v617 > 0.0)
        v613 += (unint64_t)v617;
    }
    else
    {
      v613 -= (unint64_t)fabs(v617);
    }
  }
  else
  {
    v613 = 0;
  }
  v1937 = v613;
  if ((v9 & 0x400000000) != 0)
  {
    groupingDoubleParam4 = self->_groupingDoubleParam4;
    v620 = -groupingDoubleParam4;
    if (groupingDoubleParam4 >= 0.0)
      v620 = self->_groupingDoubleParam4;
    v621 = floor(v620 + 0.5);
    v622 = (v620 - v621) * 1.84467441e19;
    v618 = 2654435761u * (unint64_t)fmod(v621, 1.84467441e19);
    if (v622 >= 0.0)
    {
      if (v622 > 0.0)
        v618 += (unint64_t)v622;
    }
    else
    {
      v618 -= (unint64_t)fabs(v622);
    }
  }
  else
  {
    v618 = 0;
  }
  v1936 = v618;
  if ((v9 & 0x800000000) != 0)
  {
    groupingDoubleParam5 = self->_groupingDoubleParam5;
    v625 = -groupingDoubleParam5;
    if (groupingDoubleParam5 >= 0.0)
      v625 = self->_groupingDoubleParam5;
    v626 = floor(v625 + 0.5);
    v627 = (v625 - v626) * 1.84467441e19;
    v623 = 2654435761u * (unint64_t)fmod(v626, 1.84467441e19);
    if (v627 >= 0.0)
    {
      if (v627 > 0.0)
        v623 += (unint64_t)v627;
    }
    else
    {
      v623 -= (unint64_t)fabs(v627);
    }
  }
  else
  {
    v623 = 0;
  }
  v1935 = v623;
  if ((v9 & 0x1000000000) != 0)
  {
    groupingDoubleParam6 = self->_groupingDoubleParam6;
    v630 = -groupingDoubleParam6;
    if (groupingDoubleParam6 >= 0.0)
      v630 = self->_groupingDoubleParam6;
    v631 = floor(v630 + 0.5);
    v632 = (v630 - v631) * 1.84467441e19;
    v628 = 2654435761u * (unint64_t)fmod(v631, 1.84467441e19);
    if (v632 >= 0.0)
    {
      if (v632 > 0.0)
        v628 += (unint64_t)v632;
    }
    else
    {
      v628 -= (unint64_t)fabs(v632);
    }
  }
  else
  {
    v628 = 0;
  }
  v1934 = v628;
  if ((v6 & 0x400000000) != 0)
  {
    v1933 = 2654435761 * self->_groupingIntParam1;
    if ((v6 & 0x800000000) != 0)
    {
LABEL_1068:
      v1932 = 2654435761 * self->_groupingIntParam2;
      if ((v6 & 0x1000000000) != 0)
        goto LABEL_1069;
      goto LABEL_1085;
    }
  }
  else
  {
    v1933 = 0;
    if ((v6 & 0x800000000) != 0)
      goto LABEL_1068;
  }
  v1932 = 0;
  if ((v6 & 0x1000000000) != 0)
  {
LABEL_1069:
    v1931 = 2654435761 * self->_groupingIntParam3;
    if ((v6 & 0x2000000000) != 0)
      goto LABEL_1070;
    goto LABEL_1086;
  }
LABEL_1085:
  v1931 = 0;
  if ((v6 & 0x2000000000) != 0)
  {
LABEL_1070:
    v1930 = 2654435761 * self->_groupingIntParam4;
    if ((v5 & 0x80) != 0)
      goto LABEL_1071;
    goto LABEL_1087;
  }
LABEL_1086:
  v1930 = 0;
  if ((v5 & 0x80) != 0)
  {
LABEL_1071:
    v1929 = 2654435761 * self->_groupingBoolParam1;
    if ((v5 & 0x100) != 0)
      goto LABEL_1072;
    goto LABEL_1088;
  }
LABEL_1087:
  v1929 = 0;
  if ((v5 & 0x100) != 0)
  {
LABEL_1072:
    v1928 = 2654435761 * self->_groupingBoolParam2;
    if ((v5 & 0x10) != 0)
      goto LABEL_1073;
    goto LABEL_1089;
  }
LABEL_1088:
  v1928 = 0;
  if ((v5 & 0x10) != 0)
  {
LABEL_1073:
    v1927 = 2654435761 * self->_enableOptimizedLayoutIPhone;
    if ((v5 & 8) != 0)
      goto LABEL_1074;
    goto LABEL_1090;
  }
LABEL_1089:
  v1927 = 0;
  if ((v5 & 8) != 0)
  {
LABEL_1074:
    v1926 = 2654435761 * self->_enableOptimizedLayoutIPad;
    if ((v6 & 0x4000000000000000) != 0)
      goto LABEL_1075;
    goto LABEL_1091;
  }
LABEL_1090:
  v1926 = 0;
  if ((v6 & 0x4000000000000000) != 0)
  {
LABEL_1075:
    v1925 = 2654435761 * self->_optimizedLayoutSizeThresholdIPhone;
    if ((v6 & 0x2000000000000000) != 0)
      goto LABEL_1076;
    goto LABEL_1092;
  }
LABEL_1091:
  v1925 = 0;
  if ((v6 & 0x2000000000000000) != 0)
  {
LABEL_1076:
    v1924 = 2654435761 * self->_optimizedLayoutSizeThresholdIPad;
    if ((v6 & 0x1000000000000000) != 0)
      goto LABEL_1077;
    goto LABEL_1093;
  }
LABEL_1092:
  v1924 = 0;
  if ((v6 & 0x1000000000000000) != 0)
  {
LABEL_1077:
    v1923 = 2654435761 * self->_optimizedLayoutIncrementUnitIPhone;
    if ((v6 & 0x800000000000000) != 0)
      goto LABEL_1078;
LABEL_1094:
    v1922 = 0;
    if ((v3 & 0x2000000000000000) != 0)
      goto LABEL_1079;
LABEL_1095:
    v637 = 0;
    goto LABEL_1098;
  }
LABEL_1093:
  v1923 = 0;
  if ((v6 & 0x800000000000000) == 0)
    goto LABEL_1094;
LABEL_1078:
  v1922 = 2654435761 * self->_optimizedLayoutIncrementUnitIPad;
  if ((v3 & 0x2000000000000000) == 0)
    goto LABEL_1095;
LABEL_1079:
  utilityWeightAlpha = self->_utilityWeightAlpha;
  v634 = -utilityWeightAlpha;
  if (utilityWeightAlpha >= 0.0)
    v634 = self->_utilityWeightAlpha;
  v635 = floor(v634 + 0.5);
  v636 = (v634 - v635) * 1.84467441e19;
  v637 = 2654435761u * (unint64_t)fmod(v635, 1.84467441e19);
  if (v636 >= 0.0)
  {
    if (v636 > 0.0)
      v637 += (unint64_t)v636;
  }
  else
  {
    v637 -= (unint64_t)fabs(v636);
  }
LABEL_1098:
  v1921 = v637;
  if ((v3 & 0x4000000000000000) != 0)
  {
    utilityWeightBeta = self->_utilityWeightBeta;
    v640 = -utilityWeightBeta;
    if (utilityWeightBeta >= 0.0)
      v640 = self->_utilityWeightBeta;
    v641 = floor(v640 + 0.5);
    v642 = (v640 - v641) * 1.84467441e19;
    v638 = 2654435761u * (unint64_t)fmod(v641, 1.84467441e19);
    if (v642 >= 0.0)
    {
      if (v642 > 0.0)
        v638 += (unint64_t)v642;
    }
    else
    {
      v638 -= (unint64_t)fabs(v642);
    }
  }
  else
  {
    v638 = 0;
  }
  v1920 = v638;
  if ((v5 & 0x800) != 0)
  {
    v1919 = 2654435761 * self->_replaceAboutness;
    if ((v3 & 0x10) != 0)
      goto LABEL_1108;
LABEL_1113:
    v647 = 0;
    goto LABEL_1116;
  }
  v1919 = 0;
  if ((v3 & 0x10) == 0)
    goto LABEL_1113;
LABEL_1108:
  tagPersonalizationCoeffIPhone = self->_tagPersonalizationCoeffIPhone;
  v644 = -tagPersonalizationCoeffIPhone;
  if (tagPersonalizationCoeffIPhone >= 0.0)
    v644 = self->_tagPersonalizationCoeffIPhone;
  v645 = floor(v644 + 0.5);
  v646 = (v644 - v645) * 1.84467441e19;
  v647 = 2654435761u * (unint64_t)fmod(v645, 1.84467441e19);
  if (v646 >= 0.0)
  {
    if (v646 > 0.0)
      v647 += (unint64_t)v646;
  }
  else
  {
    v647 -= (unint64_t)fabs(v646);
  }
LABEL_1116:
  v1918 = v647;
  if ((v3 & 8) != 0)
  {
    tagPersonalizationCoeffIPad = self->_tagPersonalizationCoeffIPad;
    v650 = -tagPersonalizationCoeffIPad;
    if (tagPersonalizationCoeffIPad >= 0.0)
      v650 = self->_tagPersonalizationCoeffIPad;
    v651 = floor(v650 + 0.5);
    v652 = (v650 - v651) * 1.84467441e19;
    v648 = 2654435761u * (unint64_t)fmod(v651, 1.84467441e19);
    if (v652 >= 0.0)
    {
      if (v652 > 0.0)
        v648 += (unint64_t)v652;
    }
    else
    {
      v648 -= (unint64_t)fabs(v652);
    }
  }
  else
  {
    v648 = 0;
  }
  v1917 = v648;
  if ((v8 & 0x200000000000000) != 0)
  {
    tagArticleScoreCoeffIPhone = self->_tagArticleScoreCoeffIPhone;
    v655 = -tagArticleScoreCoeffIPhone;
    if (tagArticleScoreCoeffIPhone >= 0.0)
      v655 = self->_tagArticleScoreCoeffIPhone;
    v656 = floor(v655 + 0.5);
    v657 = (v655 - v656) * 1.84467441e19;
    v653 = 2654435761u * (unint64_t)fmod(v656, 1.84467441e19);
    if (v657 >= 0.0)
    {
      if (v657 > 0.0)
        v653 += (unint64_t)v657;
    }
    else
    {
      v653 -= (unint64_t)fabs(v657);
    }
  }
  else
  {
    v653 = 0;
  }
  v1916 = v653;
  if ((v8 & 0x100000000000000) != 0)
  {
    tagArticleScoreCoeffIPad = self->_tagArticleScoreCoeffIPad;
    v660 = -tagArticleScoreCoeffIPad;
    if (tagArticleScoreCoeffIPad >= 0.0)
      v660 = self->_tagArticleScoreCoeffIPad;
    v661 = floor(v660 + 0.5);
    v662 = (v660 - v661) * 1.84467441e19;
    v658 = 2654435761u * (unint64_t)fmod(v661, 1.84467441e19);
    if (v662 >= 0.0)
    {
      if (v662 > 0.0)
        v658 += (unint64_t)v662;
    }
    else
    {
      v658 -= (unint64_t)fabs(v662);
    }
  }
  else
  {
    v658 = 0;
  }
  v1915 = v658;
  if ((v8 & 0x4000000000000000) != 0)
  {
    tagFavoritedCoeffIPhone = self->_tagFavoritedCoeffIPhone;
    v665 = -tagFavoritedCoeffIPhone;
    if (tagFavoritedCoeffIPhone >= 0.0)
      v665 = self->_tagFavoritedCoeffIPhone;
    v666 = floor(v665 + 0.5);
    v667 = (v665 - v666) * 1.84467441e19;
    v663 = 2654435761u * (unint64_t)fmod(v666, 1.84467441e19);
    if (v667 >= 0.0)
    {
      if (v667 > 0.0)
        v663 += (unint64_t)v667;
    }
    else
    {
      v663 -= (unint64_t)fabs(v667);
    }
  }
  else
  {
    v663 = 0;
  }
  v1914 = v663;
  if ((v8 & 0x2000000000000000) != 0)
  {
    tagFavoritedCoeffIPad = self->_tagFavoritedCoeffIPad;
    v670 = -tagFavoritedCoeffIPad;
    if (tagFavoritedCoeffIPad >= 0.0)
      v670 = self->_tagFavoritedCoeffIPad;
    v671 = floor(v670 + 0.5);
    v672 = (v670 - v671) * 1.84467441e19;
    v668 = 2654435761u * (unint64_t)fmod(v671, 1.84467441e19);
    if (v672 >= 0.0)
    {
      if (v672 > 0.0)
        v668 += (unint64_t)v672;
    }
    else
    {
      v668 -= (unint64_t)fabs(v672);
    }
  }
  else
  {
    v668 = 0;
  }
  v1913 = v668;
  if ((has & 0x4000) != 0)
  {
    articleEntityScoreWeightRatioIPhone = self->_articleEntityScoreWeightRatioIPhone;
    v675 = -articleEntityScoreWeightRatioIPhone;
    if (articleEntityScoreWeightRatioIPhone >= 0.0)
      v675 = self->_articleEntityScoreWeightRatioIPhone;
    v676 = floor(v675 + 0.5);
    v677 = (v675 - v676) * 1.84467441e19;
    v673 = 2654435761u * (unint64_t)fmod(v676, 1.84467441e19);
    if (v677 >= 0.0)
    {
      if (v677 > 0.0)
        v673 += (unint64_t)v677;
    }
    else
    {
      v673 -= (unint64_t)fabs(v677);
    }
  }
  else
  {
    v673 = 0;
  }
  v1912 = v673;
  if ((has & 0x2000) != 0)
  {
    articleEntityScoreWeightRatioIPad = self->_articleEntityScoreWeightRatioIPad;
    v680 = -articleEntityScoreWeightRatioIPad;
    if (articleEntityScoreWeightRatioIPad >= 0.0)
      v680 = self->_articleEntityScoreWeightRatioIPad;
    v681 = floor(v680 + 0.5);
    v682 = (v680 - v681) * 1.84467441e19;
    v678 = 2654435761u * (unint64_t)fmod(v681, 1.84467441e19);
    if (v682 >= 0.0)
    {
      if (v682 > 0.0)
        v678 += (unint64_t)v682;
    }
    else
    {
      v678 -= (unint64_t)fabs(v682);
    }
  }
  else
  {
    v678 = 0;
  }
  v1911 = v678;
  if ((v7 & 0x800000) != 0)
  {
    muteImpressionValue = self->_muteImpressionValue;
    v685 = -muteImpressionValue;
    if (muteImpressionValue >= 0.0)
      v685 = self->_muteImpressionValue;
    v686 = floor(v685 + 0.5);
    v687 = (v685 - v686) * 1.84467441e19;
    v683 = 2654435761u * (unint64_t)fmod(v686, 1.84467441e19);
    if (v687 >= 0.0)
    {
      if (v687 > 0.0)
        v683 += (unint64_t)v687;
    }
    else
    {
      v683 -= (unint64_t)fabs(v687);
    }
  }
  else
  {
    v683 = 0;
  }
  v1910 = v683;
  if ((v3 & 0x80000000000000) != 0)
  {
    unmuteImpressionValue = self->_unmuteImpressionValue;
    v690 = -unmuteImpressionValue;
    if (unmuteImpressionValue >= 0.0)
      v690 = self->_unmuteImpressionValue;
    v691 = floor(v690 + 0.5);
    v692 = (v690 - v691) * 1.84467441e19;
    v688 = 2654435761u * (unint64_t)fmod(v691, 1.84467441e19);
    if (v692 >= 0.0)
    {
      if (v692 > 0.0)
        v688 += (unint64_t)v692;
    }
    else
    {
      v688 -= (unint64_t)fabs(v692);
    }
  }
  else
  {
    v688 = 0;
  }
  v1909 = v688;
  if ((v7 & 0x200000) != 0)
  {
    muteClickValue = self->_muteClickValue;
    v695 = -muteClickValue;
    if (muteClickValue >= 0.0)
      v695 = self->_muteClickValue;
    v696 = floor(v695 + 0.5);
    v697 = (v695 - v696) * 1.84467441e19;
    v693 = 2654435761u * (unint64_t)fmod(v696, 1.84467441e19);
    if (v697 >= 0.0)
    {
      if (v697 > 0.0)
        v693 += (unint64_t)v697;
    }
    else
    {
      v693 -= (unint64_t)fabs(v697);
    }
  }
  else
  {
    v693 = 0;
  }
  v1908 = v693;
  if ((v3 & 0x20000000000000) != 0)
  {
    unmuteClickValue = self->_unmuteClickValue;
    v700 = -unmuteClickValue;
    if (unmuteClickValue >= 0.0)
      v700 = self->_unmuteClickValue;
    v701 = floor(v700 + 0.5);
    v702 = (v700 - v701) * 1.84467441e19;
    v698 = 2654435761u * (unint64_t)fmod(v701, 1.84467441e19);
    if (v702 >= 0.0)
    {
      if (v702 > 0.0)
        v698 += (unint64_t)v702;
    }
    else
    {
      v698 -= (unint64_t)fabs(v702);
    }
  }
  else
  {
    v698 = 0;
  }
  v1907 = v698;
  if ((v7 & 0x1000000) != 0)
  {
    muteImpressionValueBaseline = self->_muteImpressionValueBaseline;
    v705 = -muteImpressionValueBaseline;
    if (muteImpressionValueBaseline >= 0.0)
      v705 = self->_muteImpressionValueBaseline;
    v706 = floor(v705 + 0.5);
    v707 = (v705 - v706) * 1.84467441e19;
    v703 = 2654435761u * (unint64_t)fmod(v706, 1.84467441e19);
    if (v707 >= 0.0)
    {
      if (v707 > 0.0)
        v703 += (unint64_t)v707;
    }
    else
    {
      v703 -= (unint64_t)fabs(v707);
    }
  }
  else
  {
    v703 = 0;
  }
  v1906 = v703;
  if ((v3 & 0x100000000000000) != 0)
  {
    unmuteImpressionValueBaseline = self->_unmuteImpressionValueBaseline;
    v710 = -unmuteImpressionValueBaseline;
    if (unmuteImpressionValueBaseline >= 0.0)
      v710 = self->_unmuteImpressionValueBaseline;
    v711 = floor(v710 + 0.5);
    v712 = (v710 - v711) * 1.84467441e19;
    v708 = 2654435761u * (unint64_t)fmod(v711, 1.84467441e19);
    if (v712 >= 0.0)
    {
      if (v712 > 0.0)
        v708 += (unint64_t)v712;
    }
    else
    {
      v708 -= (unint64_t)fabs(v712);
    }
  }
  else
  {
    v708 = 0;
  }
  v1905 = v708;
  if ((v7 & 0x400000) != 0)
  {
    muteClickValueBaseline = self->_muteClickValueBaseline;
    v715 = -muteClickValueBaseline;
    if (muteClickValueBaseline >= 0.0)
      v715 = self->_muteClickValueBaseline;
    v716 = floor(v715 + 0.5);
    v717 = (v715 - v716) * 1.84467441e19;
    v713 = 2654435761u * (unint64_t)fmod(v716, 1.84467441e19);
    if (v717 >= 0.0)
    {
      if (v717 > 0.0)
        v713 += (unint64_t)v717;
    }
    else
    {
      v713 -= (unint64_t)fabs(v717);
    }
  }
  else
  {
    v713 = 0;
  }
  v1904 = v713;
  if ((v3 & 0x40000000000000) != 0)
  {
    unmuteClickValueBaseline = self->_unmuteClickValueBaseline;
    v720 = -unmuteClickValueBaseline;
    if (unmuteClickValueBaseline >= 0.0)
      v720 = self->_unmuteClickValueBaseline;
    v721 = floor(v720 + 0.5);
    v722 = (v720 - v721) * 1.84467441e19;
    v718 = 2654435761u * (unint64_t)fmod(v721, 1.84467441e19);
    if (v722 >= 0.0)
    {
      if (v722 > 0.0)
        v718 += (unint64_t)v722;
    }
    else
    {
      v718 -= (unint64_t)fabs(v722);
    }
  }
  else
  {
    v718 = 0;
  }
  v1903 = v718;
  if ((v8 & 0x2000000) != 0)
  {
    saturatedMutedCountFactor = self->_saturatedMutedCountFactor;
    v725 = -saturatedMutedCountFactor;
    if (saturatedMutedCountFactor >= 0.0)
      v725 = self->_saturatedMutedCountFactor;
    v726 = floor(v725 + 0.5);
    v727 = (v725 - v726) * 1.84467441e19;
    v723 = 2654435761u * (unint64_t)fmod(v726, 1.84467441e19);
    if (v727 >= 0.0)
    {
      if (v727 > 0.0)
        v723 += (unint64_t)v727;
    }
    else
    {
      v723 -= (unint64_t)fabs(v727);
    }
  }
  else
  {
    v723 = 0;
  }
  v1902 = v723;
  if ((v7 & 0x2000000) != 0)
  {
    mutedVoteCoefficient = self->_mutedVoteCoefficient;
    v730 = -mutedVoteCoefficient;
    if (mutedVoteCoefficient >= 0.0)
      v730 = self->_mutedVoteCoefficient;
    v731 = floor(v730 + 0.5);
    v732 = (v730 - v731) * 1.84467441e19;
    v728 = 2654435761u * (unint64_t)fmod(v731, 1.84467441e19);
    if (v732 >= 0.0)
    {
      if (v732 > 0.0)
        v728 += (unint64_t)v732;
    }
    else
    {
      v728 -= (unint64_t)fabs(v732);
    }
  }
  else
  {
    v728 = 0;
  }
  v1901 = v728;
  if ((v9 & 0x80000000000000) != 0)
  {
    importanceScalar = self->_importanceScalar;
    v735 = -importanceScalar;
    if (importanceScalar >= 0.0)
      v735 = self->_importanceScalar;
    v736 = floor(v735 + 0.5);
    v737 = (v735 - v736) * 1.84467441e19;
    v733 = 2654435761u * (unint64_t)fmod(v736, 1.84467441e19);
    if (v737 >= 0.0)
    {
      if (v737 > 0.0)
        v733 += (unint64_t)v737;
    }
    else
    {
      v733 -= (unint64_t)fabs(v737);
    }
  }
  else
  {
    v733 = 0;
  }
  v1900 = v733;
  if ((v8 & 8) != 0)
  {
    publisherDiversityMinSubscriptions = self->_publisherDiversityMinSubscriptions;
    v740 = -publisherDiversityMinSubscriptions;
    if (publisherDiversityMinSubscriptions >= 0.0)
      v740 = self->_publisherDiversityMinSubscriptions;
    v741 = floor(v740 + 0.5);
    v742 = (v740 - v741) * 1.84467441e19;
    v738 = 2654435761u * (unint64_t)fmod(v741, 1.84467441e19);
    if (v742 >= 0.0)
    {
      if (v742 > 0.0)
        v738 += (unint64_t)v742;
    }
    else
    {
      v738 -= (unint64_t)fabs(v742);
    }
  }
  else
  {
    v738 = 0;
  }
  v1899 = v738;
  if ((v8 & 4) != 0)
  {
    publisherDiversityMinArticleCount = self->_publisherDiversityMinArticleCount;
    v745 = -publisherDiversityMinArticleCount;
    if (publisherDiversityMinArticleCount >= 0.0)
      v745 = self->_publisherDiversityMinArticleCount;
    v746 = floor(v745 + 0.5);
    v747 = (v745 - v746) * 1.84467441e19;
    v743 = 2654435761u * (unint64_t)fmod(v746, 1.84467441e19);
    if (v747 >= 0.0)
    {
      if (v747 > 0.0)
        v743 += (unint64_t)v747;
    }
    else
    {
      v743 -= (unint64_t)fabs(v747);
    }
  }
  else
  {
    v743 = 0;
  }
  v1898 = v743;
  if ((v8 & 1) != 0)
  {
    publisherDiversityMaxArticleCount = self->_publisherDiversityMaxArticleCount;
    v750 = -publisherDiversityMaxArticleCount;
    if (publisherDiversityMaxArticleCount >= 0.0)
      v750 = self->_publisherDiversityMaxArticleCount;
    v751 = floor(v750 + 0.5);
    v752 = (v750 - v751) * 1.84467441e19;
    v748 = 2654435761u * (unint64_t)fmod(v751, 1.84467441e19);
    if (v752 >= 0.0)
    {
      if (v752 > 0.0)
        v748 += (unint64_t)v752;
    }
    else
    {
      v748 -= (unint64_t)fabs(v752);
    }
  }
  else
  {
    v748 = 0;
  }
  v1897 = v748;
  if ((v8 & 2) != 0)
  {
    publisherDiversityMaxArticleFilter = self->_publisherDiversityMaxArticleFilter;
    v755 = -publisherDiversityMaxArticleFilter;
    if (publisherDiversityMaxArticleFilter >= 0.0)
      v755 = self->_publisherDiversityMaxArticleFilter;
    v756 = floor(v755 + 0.5);
    v757 = (v755 - v756) * 1.84467441e19;
    v753 = 2654435761u * (unint64_t)fmod(v756, 1.84467441e19);
    if (v757 >= 0.0)
    {
      if (v757 > 0.0)
        v753 += (unint64_t)v757;
    }
    else
    {
      v753 -= (unint64_t)fabs(v757);
    }
  }
  else
  {
    v753 = 0;
  }
  v1896 = v753;
  if ((v8 & 0x400000) != 0)
  {
    safariSignalWeight = self->_safariSignalWeight;
    v760 = -safariSignalWeight;
    if (safariSignalWeight >= 0.0)
      v760 = self->_safariSignalWeight;
    v761 = floor(v760 + 0.5);
    v762 = (v760 - v761) * 1.84467441e19;
    v758 = 2654435761u * (unint64_t)fmod(v761, 1.84467441e19);
    if (v762 >= 0.0)
    {
      if (v762 > 0.0)
        v758 += (unint64_t)v762;
    }
    else
    {
      v758 -= (unint64_t)fabs(v762);
    }
  }
  else
  {
    v758 = 0;
  }
  v1895 = v758;
  if ((v8 & 0x1000000) != 0)
  {
    safariTimeDecayMultiplier = self->_safariTimeDecayMultiplier;
    v765 = -safariTimeDecayMultiplier;
    if (safariTimeDecayMultiplier >= 0.0)
      v765 = self->_safariTimeDecayMultiplier;
    v766 = floor(v765 + 0.5);
    v767 = (v765 - v766) * 1.84467441e19;
    v763 = 2654435761u * (unint64_t)fmod(v766, 1.84467441e19);
    if (v767 >= 0.0)
    {
      if (v767 > 0.0)
        v763 += (unint64_t)v767;
    }
    else
    {
      v763 -= (unint64_t)fabs(v767);
    }
  }
  else
  {
    v763 = 0;
  }
  v1894 = v763;
  if ((v8 & 0x100000) != 0)
  {
    safariOccurrenceDecayMultiplier = self->_safariOccurrenceDecayMultiplier;
    v770 = -safariOccurrenceDecayMultiplier;
    if (safariOccurrenceDecayMultiplier >= 0.0)
      v770 = self->_safariOccurrenceDecayMultiplier;
    v771 = floor(v770 + 0.5);
    v772 = (v770 - v771) * 1.84467441e19;
    v768 = 2654435761u * (unint64_t)fmod(v771, 1.84467441e19);
    if (v772 >= 0.0)
    {
      if (v772 > 0.0)
        v768 += (unint64_t)v772;
    }
    else
    {
      v768 -= (unint64_t)fabs(v772);
    }
  }
  else
  {
    v768 = 0;
  }
  v1893 = v768;
  if ((has & 0x400) != 0)
  {
    appUsageSignalWeight = self->_appUsageSignalWeight;
    v775 = -appUsageSignalWeight;
    if (appUsageSignalWeight >= 0.0)
      v775 = self->_appUsageSignalWeight;
    v776 = floor(v775 + 0.5);
    v777 = (v775 - v776) * 1.84467441e19;
    v773 = 2654435761u * (unint64_t)fmod(v776, 1.84467441e19);
    if (v777 >= 0.0)
    {
      if (v777 > 0.0)
        v773 += (unint64_t)v777;
    }
    else
    {
      v773 -= (unint64_t)fabs(v777);
    }
  }
  else
  {
    v773 = 0;
  }
  v1892 = v773;
  if ((has & 0x1000) != 0)
  {
    appUsageTimeDecayMultiplier = self->_appUsageTimeDecayMultiplier;
    v780 = -appUsageTimeDecayMultiplier;
    if (appUsageTimeDecayMultiplier >= 0.0)
      v780 = self->_appUsageTimeDecayMultiplier;
    v781 = floor(v780 + 0.5);
    v782 = (v780 - v781) * 1.84467441e19;
    v778 = 2654435761u * (unint64_t)fmod(v781, 1.84467441e19);
    if (v782 >= 0.0)
    {
      if (v782 > 0.0)
        v778 += (unint64_t)v782;
    }
    else
    {
      v778 -= (unint64_t)fabs(v782);
    }
  }
  else
  {
    v778 = 0;
  }
  v1891 = v778;
  if ((has & 0x100) != 0)
  {
    appUsageOccurrenceDecayMultiplier = self->_appUsageOccurrenceDecayMultiplier;
    v785 = -appUsageOccurrenceDecayMultiplier;
    if (appUsageOccurrenceDecayMultiplier >= 0.0)
      v785 = self->_appUsageOccurrenceDecayMultiplier;
    v786 = floor(v785 + 0.5);
    v787 = (v785 - v786) * 1.84467441e19;
    v783 = 2654435761u * (unint64_t)fmod(v786, 1.84467441e19);
    if (v787 >= 0.0)
    {
      if (v787 > 0.0)
        v783 += (unint64_t)v787;
    }
    else
    {
      v783 -= (unint64_t)fabs(v787);
    }
  }
  else
  {
    v783 = 0;
  }
  v1890 = v783;
  if ((has & 0x40000) != 0)
  {
    autoFavoriteGroupableMinImpressions = self->_autoFavoriteGroupableMinImpressions;
    v790 = -autoFavoriteGroupableMinImpressions;
    if (autoFavoriteGroupableMinImpressions >= 0.0)
      v790 = self->_autoFavoriteGroupableMinImpressions;
    v791 = floor(v790 + 0.5);
    v792 = (v790 - v791) * 1.84467441e19;
    v788 = 2654435761u * (unint64_t)fmod(v791, 1.84467441e19);
    if (v792 >= 0.0)
    {
      if (v792 > 0.0)
        v788 += (unint64_t)v792;
    }
    else
    {
      v788 -= (unint64_t)fabs(v792);
    }
  }
  else
  {
    v788 = 0;
  }
  v1889 = v788;
  if ((has & 0x80000) != 0)
  {
    autoFavoriteGroupableMinRate = self->_autoFavoriteGroupableMinRate;
    v795 = -autoFavoriteGroupableMinRate;
    if (autoFavoriteGroupableMinRate >= 0.0)
      v795 = self->_autoFavoriteGroupableMinRate;
    v796 = floor(v795 + 0.5);
    v797 = (v795 - v796) * 1.84467441e19;
    v793 = 2654435761u * (unint64_t)fmod(v796, 1.84467441e19);
    if (v797 >= 0.0)
    {
      if (v797 > 0.0)
        v793 += (unint64_t)v797;
    }
    else
    {
      v793 -= (unint64_t)fabs(v797);
    }
  }
  else
  {
    v793 = 0;
  }
  v1888 = v793;
  if ((has & 0x100000) != 0)
  {
    autoFavoriteGroupableMinRelativeRate = self->_autoFavoriteGroupableMinRelativeRate;
    v800 = -autoFavoriteGroupableMinRelativeRate;
    if (autoFavoriteGroupableMinRelativeRate >= 0.0)
      v800 = self->_autoFavoriteGroupableMinRelativeRate;
    v801 = floor(v800 + 0.5);
    v802 = (v800 - v801) * 1.84467441e19;
    v798 = 2654435761u * (unint64_t)fmod(v801, 1.84467441e19);
    if (v802 >= 0.0)
    {
      if (v802 > 0.0)
        v798 += (unint64_t)v802;
    }
    else
    {
      v798 -= (unint64_t)fabs(v802);
    }
  }
  else
  {
    v798 = 0;
  }
  v1887 = v798;
  if ((has & 0x8000) != 0)
  {
    autoFavoriteFetchableMinImpressions = self->_autoFavoriteFetchableMinImpressions;
    v805 = -autoFavoriteFetchableMinImpressions;
    if (autoFavoriteFetchableMinImpressions >= 0.0)
      v805 = self->_autoFavoriteFetchableMinImpressions;
    v806 = floor(v805 + 0.5);
    v807 = (v805 - v806) * 1.84467441e19;
    v803 = 2654435761u * (unint64_t)fmod(v806, 1.84467441e19);
    if (v807 >= 0.0)
    {
      if (v807 > 0.0)
        v803 += (unint64_t)v807;
    }
    else
    {
      v803 -= (unint64_t)fabs(v807);
    }
  }
  else
  {
    v803 = 0;
  }
  v1886 = v803;
  if ((has & 0x10000) != 0)
  {
    autoFavoriteFetchableMinRate = self->_autoFavoriteFetchableMinRate;
    v810 = -autoFavoriteFetchableMinRate;
    if (autoFavoriteFetchableMinRate >= 0.0)
      v810 = self->_autoFavoriteFetchableMinRate;
    v811 = floor(v810 + 0.5);
    v812 = (v810 - v811) * 1.84467441e19;
    v808 = 2654435761u * (unint64_t)fmod(v811, 1.84467441e19);
    if (v812 >= 0.0)
    {
      if (v812 > 0.0)
        v808 += (unint64_t)v812;
    }
    else
    {
      v808 -= (unint64_t)fabs(v812);
    }
  }
  else
  {
    v808 = 0;
  }
  v1885 = v808;
  if ((has & 0x20000) != 0)
  {
    autoFavoriteFetchableMinRelativeRate = self->_autoFavoriteFetchableMinRelativeRate;
    v815 = -autoFavoriteFetchableMinRelativeRate;
    if (autoFavoriteFetchableMinRelativeRate >= 0.0)
      v815 = self->_autoFavoriteFetchableMinRelativeRate;
    v816 = floor(v815 + 0.5);
    v817 = (v815 - v816) * 1.84467441e19;
    v813 = 2654435761u * (unint64_t)fmod(v816, 1.84467441e19);
    if (v817 >= 0.0)
    {
      if (v817 > 0.0)
        v813 += (unint64_t)v817;
    }
    else
    {
      v813 -= (unint64_t)fabs(v817);
    }
  }
  else
  {
    v813 = 0;
  }
  v1884 = v813;
  if ((has & 0x800000000) != 0)
  {
    averageSafariVisitsPerDay = self->_averageSafariVisitsPerDay;
    v820 = -averageSafariVisitsPerDay;
    if (averageSafariVisitsPerDay >= 0.0)
      v820 = self->_averageSafariVisitsPerDay;
    v821 = floor(v820 + 0.5);
    v822 = (v820 - v821) * 1.84467441e19;
    v818 = 2654435761u * (unint64_t)fmod(v821, 1.84467441e19);
    if (v822 >= 0.0)
    {
      if (v822 > 0.0)
        v818 += (unint64_t)v822;
    }
    else
    {
      v818 -= (unint64_t)fabs(v822);
    }
  }
  else
  {
    v818 = 0;
  }
  v1883 = v818;
  if ((v5 & 1) == 0)
  {
    v1882 = 0;
    if (v6 < 0)
      goto LABEL_1398;
LABEL_1404:
    v1881 = 0;
    if ((v7 & 0x8000000000000) != 0)
      goto LABEL_1399;
LABEL_1405:
    v827 = 0;
    goto LABEL_1408;
  }
  v1882 = 2654435761 * self->_publisherDiversityMinPublisherCount;
  if ((v6 & 0x8000000000000000) == 0)
    goto LABEL_1404;
LABEL_1398:
  v1881 = 2654435761 * self->_publisherDiversityMaxPublisherCount;
  if ((v7 & 0x8000000000000) == 0)
    goto LABEL_1405;
LABEL_1399:
  portraitUsageSignalWeight = self->_portraitUsageSignalWeight;
  v824 = -portraitUsageSignalWeight;
  if (portraitUsageSignalWeight >= 0.0)
    v824 = self->_portraitUsageSignalWeight;
  v825 = floor(v824 + 0.5);
  v826 = (v824 - v825) * 1.84467441e19;
  v827 = 2654435761u * (unint64_t)fmod(v825, 1.84467441e19);
  if (v826 >= 0.0)
  {
    if (v826 > 0.0)
      v827 += (unint64_t)v826;
  }
  else
  {
    v827 -= (unint64_t)fabs(v826);
  }
LABEL_1408:
  if ((has & 0x40000000000) != 0)
  {
    cohortMembershipBaselineCtrWeight = self->_cohortMembershipBaselineCtrWeight;
    v830 = -cohortMembershipBaselineCtrWeight;
    if (cohortMembershipBaselineCtrWeight >= 0.0)
      v830 = self->_cohortMembershipBaselineCtrWeight;
    v831 = floor(v830 + 0.5);
    v832 = (v830 - v831) * 1.84467441e19;
    v828 = 2654435761u * (unint64_t)fmod(v831, 1.84467441e19);
    if (v832 >= 0.0)
    {
      if (v832 > 0.0)
        v828 += (unint64_t)v832;
    }
    else
    {
      v828 -= (unint64_t)fabs(v832);
    }
  }
  else
  {
    v828 = 0;
  }
  v1878 = v828;
  if ((has & 0x200000000000) != 0)
  {
    cohortMembershipCurveSteepness = self->_cohortMembershipCurveSteepness;
    v835 = -cohortMembershipCurveSteepness;
    if (cohortMembershipCurveSteepness >= 0.0)
      v835 = self->_cohortMembershipCurveSteepness;
    v836 = floor(v835 + 0.5);
    v837 = (v835 - v836) * 1.84467441e19;
    v833 = 2654435761u * (unint64_t)fmod(v836, 1.84467441e19);
    if (v837 >= 0.0)
    {
      if (v837 > 0.0)
        v833 += (unint64_t)v837;
    }
    else
    {
      v833 -= (unint64_t)fabs(v837);
    }
  }
  else
  {
    v833 = 0;
  }
  v1877 = v833;
  if ((has & 0x800000000000) != 0)
  {
    cohortMembershipMinWeightedImpressions = self->_cohortMembershipMinWeightedImpressions;
    v840 = -cohortMembershipMinWeightedImpressions;
    if (cohortMembershipMinWeightedImpressions >= 0.0)
      v840 = self->_cohortMembershipMinWeightedImpressions;
    v841 = floor(v840 + 0.5);
    v842 = (v840 - v841) * 1.84467441e19;
    v838 = 2654435761u * (unint64_t)fmod(v841, 1.84467441e19);
    if (v842 >= 0.0)
    {
      if (v842 > 0.0)
        v838 += (unint64_t)v842;
    }
    else
    {
      v838 -= (unint64_t)fabs(v842);
    }
  }
  else
  {
    v838 = 0;
  }
  v1876 = v838;
  if ((has & 0x800000) != 0)
  {
    autoFavoriteMinImpressions = self->_autoFavoriteMinImpressions;
    v845 = -autoFavoriteMinImpressions;
    if (autoFavoriteMinImpressions >= 0.0)
      v845 = self->_autoFavoriteMinImpressions;
    v846 = floor(v845 + 0.5);
    v847 = (v845 - v846) * 1.84467441e19;
    v843 = 2654435761u * (unint64_t)fmod(v846, 1.84467441e19);
    if (v847 >= 0.0)
    {
      if (v847 > 0.0)
        v843 += (unint64_t)v847;
    }
    else
    {
      v843 -= (unint64_t)fabs(v847);
    }
  }
  else
  {
    v843 = 0;
  }
  v1875 = v843;
  if ((has & 0x4000000) != 0)
  {
    autoFavoriteMinRate = self->_autoFavoriteMinRate;
    v850 = -autoFavoriteMinRate;
    if (autoFavoriteMinRate >= 0.0)
      v850 = self->_autoFavoriteMinRate;
    v851 = floor(v850 + 0.5);
    v852 = (v850 - v851) * 1.84467441e19;
    v848 = 2654435761u * (unint64_t)fmod(v851, 1.84467441e19);
    if (v852 >= 0.0)
    {
      if (v852 > 0.0)
        v848 += (unint64_t)v852;
    }
    else
    {
      v848 -= (unint64_t)fabs(v852);
    }
  }
  else
  {
    v848 = 0;
  }
  v1874 = v848;
  if ((has & 0x8000000) != 0)
  {
    autoFavoriteMinRelativeRate = self->_autoFavoriteMinRelativeRate;
    v855 = -autoFavoriteMinRelativeRate;
    if (autoFavoriteMinRelativeRate >= 0.0)
      v855 = self->_autoFavoriteMinRelativeRate;
    v856 = floor(v855 + 0.5);
    v857 = (v855 - v856) * 1.84467441e19;
    v853 = 2654435761u * (unint64_t)fmod(v856, 1.84467441e19);
    if (v857 >= 0.0)
    {
      if (v857 > 0.0)
        v853 += (unint64_t)v857;
    }
    else
    {
      v853 -= (unint64_t)fabs(v857);
    }
  }
  else
  {
    v853 = 0;
  }
  v1873 = v853;
  if ((has & 0x200000000) != 0)
  {
    autoUnfavoriteFactor = self->_autoUnfavoriteFactor;
    v860 = -autoUnfavoriteFactor;
    if (autoUnfavoriteFactor >= 0.0)
      v860 = self->_autoUnfavoriteFactor;
    v861 = floor(v860 + 0.5);
    v862 = (v860 - v861) * 1.84467441e19;
    v858 = 2654435761u * (unint64_t)fmod(v861, 1.84467441e19);
    if (v862 >= 0.0)
    {
      if (v862 > 0.0)
        v858 += (unint64_t)v862;
    }
    else
    {
      v858 -= (unint64_t)fabs(v862);
    }
  }
  else
  {
    v858 = 0;
  }
  v1872 = v858;
  if ((has & 0x100000000) != 0)
  {
    autoGroupableFactor = self->_autoGroupableFactor;
    v865 = -autoGroupableFactor;
    if (autoGroupableFactor >= 0.0)
      v865 = self->_autoGroupableFactor;
    v866 = floor(v865 + 0.5);
    v867 = (v865 - v866) * 1.84467441e19;
    v863 = 2654435761u * (unint64_t)fmod(v866, 1.84467441e19);
    if (v867 >= 0.0)
    {
      if (v867 > 0.0)
        v863 += (unint64_t)v867;
    }
    else
    {
      v863 -= (unint64_t)fabs(v867);
    }
  }
  else
  {
    v863 = 0;
  }
  v1871 = v863;
  if ((v9 & 0x40000000) != 0)
  {
    groupImpressionBiasCorrectionFactor = self->_groupImpressionBiasCorrectionFactor;
    v870 = -groupImpressionBiasCorrectionFactor;
    if (groupImpressionBiasCorrectionFactor >= 0.0)
      v870 = self->_groupImpressionBiasCorrectionFactor;
    v871 = floor(v870 + 0.5);
    v872 = (v870 - v871) * 1.84467441e19;
    v868 = 2654435761u * (unint64_t)fmod(v871, 1.84467441e19);
    if (v872 >= 0.0)
    {
      if (v872 > 0.0)
        v868 += (unint64_t)v872;
    }
    else
    {
      v868 -= (unint64_t)fabs(v872);
    }
  }
  else
  {
    v868 = 0;
  }
  v1870 = v868;
  if ((v9 & 0x100000000000000) != 0)
  {
    indexImpressionBiasCorrectionFactor = self->_indexImpressionBiasCorrectionFactor;
    v875 = -indexImpressionBiasCorrectionFactor;
    if (indexImpressionBiasCorrectionFactor >= 0.0)
      v875 = self->_indexImpressionBiasCorrectionFactor;
    v876 = floor(v875 + 0.5);
    v877 = (v875 - v876) * 1.84467441e19;
    v873 = 2654435761u * (unint64_t)fmod(v876, 1.84467441e19);
    if (v877 >= 0.0)
    {
      if (v877 > 0.0)
        v873 += (unint64_t)v877;
    }
    else
    {
      v873 -= (unint64_t)fabs(v877);
    }
  }
  else
  {
    v873 = 0;
  }
  if ((v6 & 0x40000) != 0)
  {
    videoInitiatePlaybackImpressionValue = self->_videoInitiatePlaybackImpressionValue;
    v880 = -videoInitiatePlaybackImpressionValue;
    if (videoInitiatePlaybackImpressionValue >= 0.0)
      v880 = self->_videoInitiatePlaybackImpressionValue;
    v881 = floor(v880 + 0.5);
    v882 = (v880 - v881) * 1.84467441e19;
    v878 = 2654435761u * (unint64_t)fmod(v881, 1.84467441e19);
    if (v882 >= 0.0)
    {
      if (v882 > 0.0)
        v878 += (unint64_t)v882;
    }
    else
    {
      v878 -= (unint64_t)fabs(v882);
    }
  }
  else
  {
    v878 = 0;
  }
  v1868 = v878;
  if ((v6 & 0x20000) != 0)
  {
    videoInitiatePlaybackClickValue = self->_videoInitiatePlaybackClickValue;
    v885 = -videoInitiatePlaybackClickValue;
    if (videoInitiatePlaybackClickValue >= 0.0)
      v885 = self->_videoInitiatePlaybackClickValue;
    v886 = floor(v885 + 0.5);
    v887 = (v885 - v886) * 1.84467441e19;
    v883 = 2654435761u * (unint64_t)fmod(v886, 1.84467441e19);
    if (v887 >= 0.0)
    {
      if (v887 > 0.0)
        v883 += (unint64_t)v887;
    }
    else
    {
      v883 -= (unint64_t)fabs(v887);
    }
  }
  else
  {
    v883 = 0;
  }
  v1867 = v883;
  if ((v6 & 0x10000) != 0)
  {
    videoInitiatePlaybackBaselineImpressionValue = self->_videoInitiatePlaybackBaselineImpressionValue;
    v890 = -videoInitiatePlaybackBaselineImpressionValue;
    if (videoInitiatePlaybackBaselineImpressionValue >= 0.0)
      v890 = self->_videoInitiatePlaybackBaselineImpressionValue;
    v891 = floor(v890 + 0.5);
    v892 = (v890 - v891) * 1.84467441e19;
    v888 = 2654435761u * (unint64_t)fmod(v891, 1.84467441e19);
    if (v892 >= 0.0)
    {
      if (v892 > 0.0)
        v888 += (unint64_t)v892;
    }
    else
    {
      v888 -= (unint64_t)fabs(v892);
    }
  }
  else
  {
    v888 = 0;
  }
  v1866 = v888;
  if ((v6 & 0x8000) != 0)
  {
    videoInitiatePlaybackBaselineClickValue = self->_videoInitiatePlaybackBaselineClickValue;
    v895 = -videoInitiatePlaybackBaselineClickValue;
    if (videoInitiatePlaybackBaselineClickValue >= 0.0)
      v895 = self->_videoInitiatePlaybackBaselineClickValue;
    v896 = floor(v895 + 0.5);
    v897 = (v895 - v896) * 1.84467441e19;
    v893 = 2654435761u * (unint64_t)fmod(v896, 1.84467441e19);
    if (v897 >= 0.0)
    {
      if (v897 > 0.0)
        v893 += (unint64_t)v897;
    }
    else
    {
      v893 -= (unint64_t)fabs(v897);
    }
  }
  else
  {
    v893 = 0;
  }
  v1865 = v893;
  if ((v6 & 0x4000) != 0)
  {
    videoCompletePlaybackImpressionValue = self->_videoCompletePlaybackImpressionValue;
    v900 = -videoCompletePlaybackImpressionValue;
    if (videoCompletePlaybackImpressionValue >= 0.0)
      v900 = self->_videoCompletePlaybackImpressionValue;
    v901 = floor(v900 + 0.5);
    v902 = (v900 - v901) * 1.84467441e19;
    v898 = 2654435761u * (unint64_t)fmod(v901, 1.84467441e19);
    if (v902 >= 0.0)
    {
      if (v902 > 0.0)
        v898 += (unint64_t)v902;
    }
    else
    {
      v898 -= (unint64_t)fabs(v902);
    }
  }
  else
  {
    v898 = 0;
  }
  v1864 = v898;
  if ((v6 & 0x2000) != 0)
  {
    videoCompletePlaybackClickValue = self->_videoCompletePlaybackClickValue;
    v905 = -videoCompletePlaybackClickValue;
    if (videoCompletePlaybackClickValue >= 0.0)
      v905 = self->_videoCompletePlaybackClickValue;
    v906 = floor(v905 + 0.5);
    v907 = (v905 - v906) * 1.84467441e19;
    v903 = 2654435761u * (unint64_t)fmod(v906, 1.84467441e19);
    if (v907 >= 0.0)
    {
      if (v907 > 0.0)
        v903 += (unint64_t)v907;
    }
    else
    {
      v903 -= (unint64_t)fabs(v907);
    }
  }
  else
  {
    v903 = 0;
  }
  v1863 = v903;
  if ((v6 & 0x1000) != 0)
  {
    videoCompletePlaybackBaselineImpressionValue = self->_videoCompletePlaybackBaselineImpressionValue;
    v910 = -videoCompletePlaybackBaselineImpressionValue;
    if (videoCompletePlaybackBaselineImpressionValue >= 0.0)
      v910 = self->_videoCompletePlaybackBaselineImpressionValue;
    v911 = floor(v910 + 0.5);
    v912 = (v910 - v911) * 1.84467441e19;
    v908 = 2654435761u * (unint64_t)fmod(v911, 1.84467441e19);
    if (v912 >= 0.0)
    {
      if (v912 > 0.0)
        v908 += (unint64_t)v912;
    }
    else
    {
      v908 -= (unint64_t)fabs(v912);
    }
  }
  else
  {
    v908 = 0;
  }
  v1862 = v908;
  if ((v6 & 0x800) != 0)
  {
    videoCompletePlaybackBaselineClickValue = self->_videoCompletePlaybackBaselineClickValue;
    v914 = -videoCompletePlaybackBaselineClickValue;
    if (videoCompletePlaybackBaselineClickValue >= 0.0)
      v914 = self->_videoCompletePlaybackBaselineClickValue;
    v915 = floor(v914 + 0.5);
    v916 = (v914 - v915) * 1.84467441e19;
    v917 = fmod(v915, 1.84467441e19);
    if (v916 >= 0.0)
    {
      v2077 = 2654435761u * (unint64_t)v917;
      if (v916 > 0.0)
        v2077 += (unint64_t)v916;
    }
    else
    {
      v2077 = 2654435761u * (unint64_t)v917 - (unint64_t)fabs(v916);
    }
  }
  else
  {
    v2077 = 0;
  }
  if ((v8 & 0x800000000000000) != 0)
  {
    tagAutoFavoritedCoeffIPhone = self->_tagAutoFavoritedCoeffIPhone;
    v920 = -tagAutoFavoritedCoeffIPhone;
    if (tagAutoFavoritedCoeffIPhone >= 0.0)
      v920 = self->_tagAutoFavoritedCoeffIPhone;
    v921 = floor(v920 + 0.5);
    v922 = (v920 - v921) * 1.84467441e19;
    v918 = 2654435761u * (unint64_t)fmod(v921, 1.84467441e19);
    if (v922 >= 0.0)
    {
      if (v922 > 0.0)
        v918 += (unint64_t)v922;
    }
    else
    {
      v918 -= (unint64_t)fabs(v922);
    }
  }
  else
  {
    v918 = 0;
  }
  v1861 = v918;
  if ((v8 & 0x400000000000000) != 0)
  {
    tagAutoFavoritedCoeffIPad = self->_tagAutoFavoritedCoeffIPad;
    v925 = -tagAutoFavoritedCoeffIPad;
    if (tagAutoFavoritedCoeffIPad >= 0.0)
      v925 = self->_tagAutoFavoritedCoeffIPad;
    v926 = floor(v925 + 0.5);
    v927 = (v925 - v926) * 1.84467441e19;
    v923 = 2654435761u * (unint64_t)fmod(v926, 1.84467441e19);
    if (v927 >= 0.0)
    {
      if (v927 > 0.0)
        v923 += (unint64_t)v927;
    }
    else
    {
      v923 -= (unint64_t)fabs(v927);
    }
  }
  else
  {
    v923 = 0;
  }
  v1860 = v923;
  if ((v3 & 1) != 0)
  {
    tagGroupableCoeffIPhone = self->_tagGroupableCoeffIPhone;
    v930 = -tagGroupableCoeffIPhone;
    if (tagGroupableCoeffIPhone >= 0.0)
      v930 = self->_tagGroupableCoeffIPhone;
    v931 = floor(v930 + 0.5);
    v932 = (v930 - v931) * 1.84467441e19;
    v928 = 2654435761u * (unint64_t)fmod(v931, 1.84467441e19);
    if (v932 >= 0.0)
    {
      if (v932 > 0.0)
        v928 += (unint64_t)v932;
    }
    else
    {
      v928 -= (unint64_t)fabs(v932);
    }
  }
  else
  {
    v928 = 0;
  }
  v1859 = v928;
  if (v8 < 0)
  {
    tagGroupableCoeffIPad = self->_tagGroupableCoeffIPad;
    v935 = -tagGroupableCoeffIPad;
    if (tagGroupableCoeffIPad >= 0.0)
      v935 = self->_tagGroupableCoeffIPad;
    v936 = floor(v935 + 0.5);
    v937 = (v935 - v936) * 1.84467441e19;
    v933 = 2654435761u * (unint64_t)fmod(v936, 1.84467441e19);
    if (v937 >= 0.0)
    {
      if (v937 > 0.0)
        v933 += (unint64_t)v937;
    }
    else
    {
      v933 -= (unint64_t)fabs(v937);
    }
  }
  else
  {
    v933 = 0;
  }
  if ((v3 & 0x100) != 0)
  {
    tagSpecificityCoeffIPhone = self->_tagSpecificityCoeffIPhone;
    v940 = -tagSpecificityCoeffIPhone;
    if (tagSpecificityCoeffIPhone >= 0.0)
      v940 = self->_tagSpecificityCoeffIPhone;
    v941 = floor(v940 + 0.5);
    v942 = (v940 - v941) * 1.84467441e19;
    v938 = 2654435761u * (unint64_t)fmod(v941, 1.84467441e19);
    if (v942 >= 0.0)
    {
      if (v942 > 0.0)
        v938 += (unint64_t)v942;
    }
    else
    {
      v938 -= (unint64_t)fabs(v942);
    }
  }
  else
  {
    v938 = 0;
  }
  v1857 = v938;
  if ((v3 & 0x80) != 0)
  {
    tagSpecificityCoeffIPad = self->_tagSpecificityCoeffIPad;
    v945 = -tagSpecificityCoeffIPad;
    if (tagSpecificityCoeffIPad >= 0.0)
      v945 = self->_tagSpecificityCoeffIPad;
    v946 = floor(v945 + 0.5);
    v947 = (v945 - v946) * 1.84467441e19;
    v943 = 2654435761u * (unint64_t)fmod(v946, 1.84467441e19);
    if (v947 >= 0.0)
    {
      if (v947 > 0.0)
        v943 += (unint64_t)v947;
    }
    else
    {
      v943 -= (unint64_t)fabs(v947);
    }
  }
  else
  {
    v943 = 0;
  }
  if ((v7 & 0x10000000000) != 0)
  {
    optionalTagSpecificityScore = self->_optionalTagSpecificityScore;
    v950 = -optionalTagSpecificityScore;
    if (optionalTagSpecificityScore >= 0.0)
      v950 = self->_optionalTagSpecificityScore;
    v951 = floor(v950 + 0.5);
    v952 = (v950 - v951) * 1.84467441e19;
    v948 = 2654435761u * (unint64_t)fmod(v951, 1.84467441e19);
    if (v952 >= 0.0)
    {
      if (v952 > 0.0)
        v948 += (unint64_t)v952;
    }
    else
    {
      v948 -= (unint64_t)fabs(v952);
    }
  }
  else
  {
    v948 = 0;
  }
  v1855 = v948;
  if ((has & 0x2000000) != 0)
  {
    autoFavoriteMinObservationsSafari = self->_autoFavoriteMinObservationsSafari;
    v955 = -autoFavoriteMinObservationsSafari;
    if (autoFavoriteMinObservationsSafari >= 0.0)
      v955 = self->_autoFavoriteMinObservationsSafari;
    v956 = floor(v955 + 0.5);
    v957 = (v955 - v956) * 1.84467441e19;
    v953 = 2654435761u * (unint64_t)fmod(v956, 1.84467441e19);
    if (v957 >= 0.0)
    {
      if (v957 > 0.0)
        v953 += (unint64_t)v957;
    }
    else
    {
      v953 -= (unint64_t)fabs(v957);
    }
  }
  else
  {
    v953 = 0;
  }
  v1854 = v953;
  if ((has & 0x20000000) != 0)
  {
    autoFavoriteMinScoreSafari = self->_autoFavoriteMinScoreSafari;
    v960 = -autoFavoriteMinScoreSafari;
    if (autoFavoriteMinScoreSafari >= 0.0)
      v960 = self->_autoFavoriteMinScoreSafari;
    v961 = floor(v960 + 0.5);
    v962 = (v960 - v961) * 1.84467441e19;
    v958 = 2654435761u * (unint64_t)fmod(v961, 1.84467441e19);
    if (v962 >= 0.0)
    {
      if (v962 > 0.0)
        v958 += (unint64_t)v962;
    }
    else
    {
      v958 -= (unint64_t)fabs(v962);
    }
  }
  else
  {
    v958 = 0;
  }
  v1853 = v958;
  if ((has & 0x1000000) != 0)
  {
    autoFavoriteMinObservationsExtAppUsage = self->_autoFavoriteMinObservationsExtAppUsage;
    v965 = -autoFavoriteMinObservationsExtAppUsage;
    if (autoFavoriteMinObservationsExtAppUsage >= 0.0)
      v965 = self->_autoFavoriteMinObservationsExtAppUsage;
    v966 = floor(v965 + 0.5);
    v967 = (v965 - v966) * 1.84467441e19;
    v963 = 2654435761u * (unint64_t)fmod(v966, 1.84467441e19);
    if (v967 >= 0.0)
    {
      if (v967 > 0.0)
        v963 += (unint64_t)v967;
    }
    else
    {
      v963 -= (unint64_t)fabs(v967);
    }
  }
  else
  {
    v963 = 0;
  }
  v1852 = v963;
  if ((has & 0x10000000) != 0)
  {
    autoFavoriteMinScoreExtAppUsage = self->_autoFavoriteMinScoreExtAppUsage;
    v970 = -autoFavoriteMinScoreExtAppUsage;
    if (autoFavoriteMinScoreExtAppUsage >= 0.0)
      v970 = self->_autoFavoriteMinScoreExtAppUsage;
    v971 = floor(v970 + 0.5);
    v972 = (v970 - v971) * 1.84467441e19;
    v968 = 2654435761u * (unint64_t)fmod(v971, 1.84467441e19);
    if (v972 >= 0.0)
    {
      if (v972 > 0.0)
        v968 += (unint64_t)v972;
    }
    else
    {
      v968 -= (unint64_t)fabs(v972);
    }
  }
  else
  {
    v968 = 0;
  }
  if ((v7 & 0x80000000000) != 0)
  {
    portraitDecayRate = self->_portraitDecayRate;
    v975 = -portraitDecayRate;
    if (portraitDecayRate >= 0.0)
      v975 = self->_portraitDecayRate;
    v976 = floor(v975 + 0.5);
    v977 = (v975 - v976) * 1.84467441e19;
    v973 = 2654435761u * (unint64_t)fmod(v976, 1.84467441e19);
    if (v977 >= 0.0)
    {
      if (v977 > 0.0)
        v973 += (unint64_t)v977;
    }
    else
    {
      v973 -= (unint64_t)fabs(v977);
    }
  }
  else
  {
    v973 = 0;
  }
  v1850 = v973;
  v2074 = v10;
  v1869 = v873;
  v1858 = v933;
  v1856 = v943;
  v1851 = v968;
  if ((v7 & 0x100000000000) != 0)
  {
    portraitGlobalThreshold = self->_portraitGlobalThreshold;
    v980 = -portraitGlobalThreshold;
    if (portraitGlobalThreshold >= 0.0)
      v980 = self->_portraitGlobalThreshold;
    v981 = floor(v980 + 0.5);
    v982 = (v980 - v981) * 1.84467441e19;
    v978 = 2654435761u * (unint64_t)fmod(v981, 1.84467441e19);
    if (v982 >= 0.0)
    {
      if (v982 > 0.0)
        v978 += (unint64_t)v982;
    }
    else
    {
      v978 -= (unint64_t)fabs(v982);
    }
  }
  else
  {
    v978 = 0;
  }
  v1849 = v978;
  v1848 = -[NSMutableArray hash](self->_portraitTagThresholds, "hash");
  v983 = *((_QWORD *)&self->_has + 4);
  v984 = *((_QWORD *)&self->_has + 5);
  v985 = *((_QWORD *)&self->_has + 2);
  v986 = *((_QWORD *)&self->_has + 3);
  v988 = (uint64_t)self->_has;
  v987 = *((_QWORD *)&self->_has + 1);
  v1879 = *((_WORD *)&self->_has + 24);
  if ((v985 & 0x400000000000) != 0)
  {
    portraitImpressionSlope = self->_portraitImpressionSlope;
    v991 = -portraitImpressionSlope;
    if (portraitImpressionSlope >= 0.0)
      v991 = self->_portraitImpressionSlope;
    v992 = floor(v991 + 0.5);
    v993 = (v991 - v992) * 1.84467441e19;
    v989 = 2654435761u * (unint64_t)fmod(v992, 1.84467441e19);
    if (v993 >= 0.0)
    {
      if (v993 > 0.0)
        v989 += (unint64_t)v993;
    }
    else
    {
      v989 -= (unint64_t)fabs(v993);
    }
  }
  else
  {
    v989 = 0;
  }
  v1847 = v989;
  if ((v985 & 0x200000000000) != 0)
  {
    portraitImpressionIntercept = self->_portraitImpressionIntercept;
    v996 = -portraitImpressionIntercept;
    if (portraitImpressionIntercept >= 0.0)
      v996 = self->_portraitImpressionIntercept;
    v997 = floor(v996 + 0.5);
    v998 = (v996 - v997) * 1.84467441e19;
    v994 = 2654435761u * (unint64_t)fmod(v997, 1.84467441e19);
    if (v998 >= 0.0)
    {
      if (v998 > 0.0)
        v994 += (unint64_t)v998;
    }
    else
    {
      v994 -= (unint64_t)fabs(v998);
    }
  }
  else
  {
    v994 = 0;
  }
  v1846 = v994;
  if ((v985 & 0x2000000000000) != 0)
  {
    portraitRateSlope = self->_portraitRateSlope;
    v1001 = -portraitRateSlope;
    if (portraitRateSlope >= 0.0)
      v1001 = self->_portraitRateSlope;
    v1002 = floor(v1001 + 0.5);
    v1003 = (v1001 - v1002) * 1.84467441e19;
    v999 = 2654435761u * (unint64_t)fmod(v1002, 1.84467441e19);
    if (v1003 >= 0.0)
    {
      if (v1003 > 0.0)
        v999 += (unint64_t)v1003;
    }
    else
    {
      v999 -= (unint64_t)fabs(v1003);
    }
  }
  else
  {
    v999 = 0;
  }
  v1845 = v999;
  if ((v985 & 0x1000000000000) != 0)
  {
    portraitRateIntercept = self->_portraitRateIntercept;
    v1006 = -portraitRateIntercept;
    if (portraitRateIntercept >= 0.0)
      v1006 = self->_portraitRateIntercept;
    v1007 = floor(v1006 + 0.5);
    v1008 = (v1006 - v1007) * 1.84467441e19;
    v1004 = 2654435761u * (unint64_t)fmod(v1007, 1.84467441e19);
    if (v1008 >= 0.0)
    {
      if (v1008 > 0.0)
        v1004 += (unint64_t)v1008;
    }
    else
    {
      v1004 -= (unint64_t)fabs(v1008);
    }
  }
  else
  {
    v1004 = 0;
  }
  v1844 = v1004;
  if ((v985 & 0x200000000) != 0)
  {
    newsTodayWidgetPresentationImpressionValue = self->_newsTodayWidgetPresentationImpressionValue;
    v1011 = -newsTodayWidgetPresentationImpressionValue;
    if (newsTodayWidgetPresentationImpressionValue >= 0.0)
      v1011 = self->_newsTodayWidgetPresentationImpressionValue;
    v1012 = floor(v1011 + 0.5);
    v1013 = (v1011 - v1012) * 1.84467441e19;
    v1009 = 2654435761u * (unint64_t)fmod(v1012, 1.84467441e19);
    if (v1013 >= 0.0)
    {
      if (v1013 > 0.0)
        v1009 += (unint64_t)v1013;
    }
    else
    {
      v1009 -= (unint64_t)fabs(v1013);
    }
  }
  else
  {
    v1009 = 0;
  }
  v1843 = v1009;
  if ((v985 & 0x100000000) != 0)
  {
    newsTodayWidgetPresentationClickValue = self->_newsTodayWidgetPresentationClickValue;
    v1016 = -newsTodayWidgetPresentationClickValue;
    if (newsTodayWidgetPresentationClickValue >= 0.0)
      v1016 = self->_newsTodayWidgetPresentationClickValue;
    v1017 = floor(v1016 + 0.5);
    v1018 = (v1016 - v1017) * 1.84467441e19;
    v1014 = 2654435761u * (unint64_t)fmod(v1017, 1.84467441e19);
    if (v1018 >= 0.0)
    {
      if (v1018 > 0.0)
        v1014 += (unint64_t)v1018;
    }
    else
    {
      v1014 -= (unint64_t)fabs(v1018);
    }
  }
  else
  {
    v1014 = 0;
  }
  v1842 = v1014;
  if ((v985 & 0x80000000) != 0)
  {
    newsTodayWidgetPresentationBaselineImpressionValue = self->_newsTodayWidgetPresentationBaselineImpressionValue;
    v1021 = -newsTodayWidgetPresentationBaselineImpressionValue;
    if (newsTodayWidgetPresentationBaselineImpressionValue >= 0.0)
      v1021 = self->_newsTodayWidgetPresentationBaselineImpressionValue;
    v1022 = floor(v1021 + 0.5);
    v1023 = (v1021 - v1022) * 1.84467441e19;
    v1019 = 2654435761u * (unint64_t)fmod(v1022, 1.84467441e19);
    if (v1023 >= 0.0)
    {
      if (v1023 > 0.0)
        v1019 += (unint64_t)v1023;
    }
    else
    {
      v1019 -= (unint64_t)fabs(v1023);
    }
  }
  else
  {
    v1019 = 0;
  }
  v1841 = v1019;
  if ((v985 & 0x40000000) != 0)
  {
    newsTodayWidgetPresentationBaselineClickValue = self->_newsTodayWidgetPresentationBaselineClickValue;
    v1026 = -newsTodayWidgetPresentationBaselineClickValue;
    if (newsTodayWidgetPresentationBaselineClickValue >= 0.0)
      v1026 = self->_newsTodayWidgetPresentationBaselineClickValue;
    v1027 = floor(v1026 + 0.5);
    v1028 = (v1026 - v1027) * 1.84467441e19;
    v1024 = 2654435761u * (unint64_t)fmod(v1027, 1.84467441e19);
    if (v1028 >= 0.0)
    {
      if (v1028 > 0.0)
        v1024 += (unint64_t)v1028;
    }
    else
    {
      v1024 -= (unint64_t)fabs(v1028);
    }
  }
  else
  {
    v1024 = 0;
  }
  v1840 = v1024;
  if ((v985 & 0x20000000) != 0)
  {
    newsTodayWidgetClickImpressionValue = self->_newsTodayWidgetClickImpressionValue;
    v1031 = -newsTodayWidgetClickImpressionValue;
    if (newsTodayWidgetClickImpressionValue >= 0.0)
      v1031 = self->_newsTodayWidgetClickImpressionValue;
    v1032 = floor(v1031 + 0.5);
    v1033 = (v1031 - v1032) * 1.84467441e19;
    v1029 = 2654435761u * (unint64_t)fmod(v1032, 1.84467441e19);
    if (v1033 >= 0.0)
    {
      if (v1033 > 0.0)
        v1029 += (unint64_t)v1033;
    }
    else
    {
      v1029 -= (unint64_t)fabs(v1033);
    }
  }
  else
  {
    v1029 = 0;
  }
  v1839 = v1029;
  if ((v985 & 0x10000000) != 0)
  {
    newsTodayWidgetClickClickValue = self->_newsTodayWidgetClickClickValue;
    v1036 = -newsTodayWidgetClickClickValue;
    if (newsTodayWidgetClickClickValue >= 0.0)
      v1036 = self->_newsTodayWidgetClickClickValue;
    v1037 = floor(v1036 + 0.5);
    v1038 = (v1036 - v1037) * 1.84467441e19;
    v1034 = 2654435761u * (unint64_t)fmod(v1037, 1.84467441e19);
    if (v1038 >= 0.0)
    {
      if (v1038 > 0.0)
        v1034 += (unint64_t)v1038;
    }
    else
    {
      v1034 -= (unint64_t)fabs(v1038);
    }
  }
  else
  {
    v1034 = 0;
  }
  v1838 = v1034;
  if ((v985 & 0x8000000) != 0)
  {
    newsTodayWidgetClickBaselineImpressionValue = self->_newsTodayWidgetClickBaselineImpressionValue;
    v1041 = -newsTodayWidgetClickBaselineImpressionValue;
    if (newsTodayWidgetClickBaselineImpressionValue >= 0.0)
      v1041 = self->_newsTodayWidgetClickBaselineImpressionValue;
    v1042 = floor(v1041 + 0.5);
    v1043 = (v1041 - v1042) * 1.84467441e19;
    v1039 = 2654435761u * (unint64_t)fmod(v1042, 1.84467441e19);
    if (v1043 >= 0.0)
    {
      if (v1043 > 0.0)
        v1039 += (unint64_t)v1043;
    }
    else
    {
      v1039 -= (unint64_t)fabs(v1043);
    }
  }
  else
  {
    v1039 = 0;
  }
  v1837 = v1039;
  if ((v985 & 0x4000000) != 0)
  {
    newsTodayWidgetClickBaselineClickValue = self->_newsTodayWidgetClickBaselineClickValue;
    v1046 = -newsTodayWidgetClickBaselineClickValue;
    if (newsTodayWidgetClickBaselineClickValue >= 0.0)
      v1046 = self->_newsTodayWidgetClickBaselineClickValue;
    v1047 = floor(v1046 + 0.5);
    v1048 = (v1046 - v1047) * 1.84467441e19;
    v1044 = 2654435761u * (unint64_t)fmod(v1047, 1.84467441e19);
    if (v1048 >= 0.0)
    {
      if (v1048 > 0.0)
        v1044 += (unint64_t)v1048;
    }
    else
    {
      v1044 -= (unint64_t)fabs(v1048);
    }
  }
  else
  {
    v1044 = 0;
  }
  v1836 = v1044;
  if ((v985 & 0x2000000000) != 0)
  {
    newsTodayWidgetVideoPlaybackImpressionValue = self->_newsTodayWidgetVideoPlaybackImpressionValue;
    v1051 = -newsTodayWidgetVideoPlaybackImpressionValue;
    if (newsTodayWidgetVideoPlaybackImpressionValue >= 0.0)
      v1051 = self->_newsTodayWidgetVideoPlaybackImpressionValue;
    v1052 = floor(v1051 + 0.5);
    v1053 = (v1051 - v1052) * 1.84467441e19;
    v1049 = 2654435761u * (unint64_t)fmod(v1052, 1.84467441e19);
    if (v1053 >= 0.0)
    {
      if (v1053 > 0.0)
        v1049 += (unint64_t)v1053;
    }
    else
    {
      v1049 -= (unint64_t)fabs(v1053);
    }
  }
  else
  {
    v1049 = 0;
  }
  v1835 = v1049;
  if ((v985 & 0x1000000000) != 0)
  {
    newsTodayWidgetVideoPlaybackClickValue = self->_newsTodayWidgetVideoPlaybackClickValue;
    v1056 = -newsTodayWidgetVideoPlaybackClickValue;
    if (newsTodayWidgetVideoPlaybackClickValue >= 0.0)
      v1056 = self->_newsTodayWidgetVideoPlaybackClickValue;
    v1057 = floor(v1056 + 0.5);
    v1058 = (v1056 - v1057) * 1.84467441e19;
    v1054 = 2654435761u * (unint64_t)fmod(v1057, 1.84467441e19);
    if (v1058 >= 0.0)
    {
      if (v1058 > 0.0)
        v1054 += (unint64_t)v1058;
    }
    else
    {
      v1054 -= (unint64_t)fabs(v1058);
    }
  }
  else
  {
    v1054 = 0;
  }
  v1834 = v1054;
  if ((v985 & 0x800000000) != 0)
  {
    newsTodayWidgetVideoPlaybackBaselineImpressionValue = self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue;
    v1061 = -newsTodayWidgetVideoPlaybackBaselineImpressionValue;
    if (newsTodayWidgetVideoPlaybackBaselineImpressionValue >= 0.0)
      v1061 = self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue;
    v1062 = floor(v1061 + 0.5);
    v1063 = (v1061 - v1062) * 1.84467441e19;
    v1059 = 2654435761u * (unint64_t)fmod(v1062, 1.84467441e19);
    if (v1063 >= 0.0)
    {
      if (v1063 > 0.0)
        v1059 += (unint64_t)v1063;
    }
    else
    {
      v1059 -= (unint64_t)fabs(v1063);
    }
  }
  else
  {
    v1059 = 0;
  }
  v1833 = v1059;
  if ((v985 & 0x400000000) != 0)
  {
    newsTodayWidgetVideoPlaybackBaselineClickValue = self->_newsTodayWidgetVideoPlaybackBaselineClickValue;
    v1066 = -newsTodayWidgetVideoPlaybackBaselineClickValue;
    if (newsTodayWidgetVideoPlaybackBaselineClickValue >= 0.0)
      v1066 = self->_newsTodayWidgetVideoPlaybackBaselineClickValue;
    v1067 = floor(v1066 + 0.5);
    v1068 = (v1066 - v1067) * 1.84467441e19;
    v1064 = 2654435761u * (unint64_t)fmod(v1067, 1.84467441e19);
    if (v1068 >= 0.0)
    {
      if (v1068 > 0.0)
        v1064 += (unint64_t)v1068;
    }
    else
    {
      v1064 -= (unint64_t)fabs(v1068);
    }
  }
  else
  {
    v1064 = 0;
  }
  v1832 = v1064;
  if ((v988 & 0x1000000000000000) != 0)
  {
    ctrWithZeroSubscribed = self->_ctrWithZeroSubscribed;
    v1071 = -ctrWithZeroSubscribed;
    if (ctrWithZeroSubscribed >= 0.0)
      v1071 = self->_ctrWithZeroSubscribed;
    v1072 = floor(v1071 + 0.5);
    v1073 = (v1071 - v1072) * 1.84467441e19;
    v1069 = 2654435761u * (unint64_t)fmod(v1072, 1.84467441e19);
    if (v1073 >= 0.0)
    {
      if (v1073 > 0.0)
        v1069 += (unint64_t)v1073;
    }
    else
    {
      v1069 -= (unint64_t)fabs(v1073);
    }
  }
  else
  {
    v1069 = 0;
  }
  v1831 = v1069;
  if ((v988 & 0x4000000000000) != 0)
  {
    ctrWithOneSubscribed = self->_ctrWithOneSubscribed;
    v1076 = -ctrWithOneSubscribed;
    if (ctrWithOneSubscribed >= 0.0)
      v1076 = self->_ctrWithOneSubscribed;
    v1077 = floor(v1076 + 0.5);
    v1078 = (v1076 - v1077) * 1.84467441e19;
    v1074 = 2654435761u * (unint64_t)fmod(v1077, 1.84467441e19);
    if (v1078 >= 0.0)
    {
      if (v1078 > 0.0)
        v1074 += (unint64_t)v1078;
    }
    else
    {
      v1074 -= (unint64_t)fabs(v1078);
    }
  }
  else
  {
    v1074 = 0;
  }
  v1830 = v1074;
  if ((v988 & 0x200000000000000) != 0)
  {
    ctrWithTwoSubscribed = self->_ctrWithTwoSubscribed;
    v1081 = -ctrWithTwoSubscribed;
    if (ctrWithTwoSubscribed >= 0.0)
      v1081 = self->_ctrWithTwoSubscribed;
    v1082 = floor(v1081 + 0.5);
    v1083 = (v1081 - v1082) * 1.84467441e19;
    v1079 = 2654435761u * (unint64_t)fmod(v1082, 1.84467441e19);
    if (v1083 >= 0.0)
    {
      if (v1083 > 0.0)
        v1079 += (unint64_t)v1083;
    }
    else
    {
      v1079 -= (unint64_t)fabs(v1083);
    }
  }
  else
  {
    v1079 = 0;
  }
  v1829 = v1079;
  if ((v988 & 0x40000000000000) != 0)
  {
    ctrWithThreeSubscribed = self->_ctrWithThreeSubscribed;
    v1086 = -ctrWithThreeSubscribed;
    if (ctrWithThreeSubscribed >= 0.0)
      v1086 = self->_ctrWithThreeSubscribed;
    v1087 = floor(v1086 + 0.5);
    v1088 = (v1086 - v1087) * 1.84467441e19;
    v1084 = 2654435761u * (unint64_t)fmod(v1087, 1.84467441e19);
    if (v1088 >= 0.0)
    {
      if (v1088 > 0.0)
        v1084 += (unint64_t)v1088;
    }
    else
    {
      v1084 -= (unint64_t)fabs(v1088);
    }
  }
  else
  {
    v1084 = 0;
  }
  v1828 = v1084;
  if ((v988 & 0x800000000000000) != 0)
  {
    ctrWithZeroMuted = self->_ctrWithZeroMuted;
    v1091 = -ctrWithZeroMuted;
    if (ctrWithZeroMuted >= 0.0)
      v1091 = self->_ctrWithZeroMuted;
    v1092 = floor(v1091 + 0.5);
    v1093 = (v1091 - v1092) * 1.84467441e19;
    v1089 = 2654435761u * (unint64_t)fmod(v1092, 1.84467441e19);
    if (v1093 >= 0.0)
    {
      if (v1093 > 0.0)
        v1089 += (unint64_t)v1093;
    }
    else
    {
      v1089 -= (unint64_t)fabs(v1093);
    }
  }
  else
  {
    v1089 = 0;
  }
  v1827 = v1089;
  if ((v988 & 0x2000000000000) != 0)
  {
    ctrWithOneMuted = self->_ctrWithOneMuted;
    v1096 = -ctrWithOneMuted;
    if (ctrWithOneMuted >= 0.0)
      v1096 = self->_ctrWithOneMuted;
    v1097 = floor(v1096 + 0.5);
    v1098 = (v1096 - v1097) * 1.84467441e19;
    v1094 = 2654435761u * (unint64_t)fmod(v1097, 1.84467441e19);
    if (v1098 >= 0.0)
    {
      if (v1098 > 0.0)
        v1094 += (unint64_t)v1098;
    }
    else
    {
      v1094 -= (unint64_t)fabs(v1098);
    }
  }
  else
  {
    v1094 = 0;
  }
  v1826 = v1094;
  if ((v988 & 0x100000000000000) != 0)
  {
    ctrWithTwoMuted = self->_ctrWithTwoMuted;
    v1101 = -ctrWithTwoMuted;
    if (ctrWithTwoMuted >= 0.0)
      v1101 = self->_ctrWithTwoMuted;
    v1102 = floor(v1101 + 0.5);
    v1103 = (v1101 - v1102) * 1.84467441e19;
    v1099 = 2654435761u * (unint64_t)fmod(v1102, 1.84467441e19);
    if (v1103 >= 0.0)
    {
      if (v1103 > 0.0)
        v1099 += (unint64_t)v1103;
    }
    else
    {
      v1099 -= (unint64_t)fabs(v1103);
    }
  }
  else
  {
    v1099 = 0;
  }
  v1825 = v1099;
  if ((v988 & 0x20000000000000) != 0)
  {
    ctrWithThreeMuted = self->_ctrWithThreeMuted;
    v1106 = -ctrWithThreeMuted;
    if (ctrWithThreeMuted >= 0.0)
      v1106 = self->_ctrWithThreeMuted;
    v1107 = floor(v1106 + 0.5);
    v1108 = (v1106 - v1107) * 1.84467441e19;
    v1104 = 2654435761u * (unint64_t)fmod(v1107, 1.84467441e19);
    if (v1108 >= 0.0)
    {
      if (v1108 > 0.0)
        v1104 += (unint64_t)v1108;
    }
    else
    {
      v1104 -= (unint64_t)fabs(v1108);
    }
  }
  else
  {
    v1104 = 0;
  }
  v1824 = v1104;
  if ((v988 & 0x400000000000000) != 0)
  {
    ctrWithZeroAutofavorited = self->_ctrWithZeroAutofavorited;
    v1111 = -ctrWithZeroAutofavorited;
    if (ctrWithZeroAutofavorited >= 0.0)
      v1111 = self->_ctrWithZeroAutofavorited;
    v1112 = floor(v1111 + 0.5);
    v1113 = (v1111 - v1112) * 1.84467441e19;
    v1109 = 2654435761u * (unint64_t)fmod(v1112, 1.84467441e19);
    if (v1113 >= 0.0)
    {
      if (v1113 > 0.0)
        v1109 += (unint64_t)v1113;
    }
    else
    {
      v1109 -= (unint64_t)fabs(v1113);
    }
  }
  else
  {
    v1109 = 0;
  }
  v1823 = v1109;
  if ((v988 & 0x1000000000000) != 0)
  {
    ctrWithOneAutofavorited = self->_ctrWithOneAutofavorited;
    v1116 = -ctrWithOneAutofavorited;
    if (ctrWithOneAutofavorited >= 0.0)
      v1116 = self->_ctrWithOneAutofavorited;
    v1117 = floor(v1116 + 0.5);
    v1118 = (v1116 - v1117) * 1.84467441e19;
    v1114 = 2654435761u * (unint64_t)fmod(v1117, 1.84467441e19);
    if (v1118 >= 0.0)
    {
      if (v1118 > 0.0)
        v1114 += (unint64_t)v1118;
    }
    else
    {
      v1114 -= (unint64_t)fabs(v1118);
    }
  }
  else
  {
    v1114 = 0;
  }
  v1822 = v1114;
  if ((v988 & 0x80000000000000) != 0)
  {
    ctrWithTwoAutofavorited = self->_ctrWithTwoAutofavorited;
    v1121 = -ctrWithTwoAutofavorited;
    if (ctrWithTwoAutofavorited >= 0.0)
      v1121 = self->_ctrWithTwoAutofavorited;
    v1122 = floor(v1121 + 0.5);
    v1123 = (v1121 - v1122) * 1.84467441e19;
    v1119 = 2654435761u * (unint64_t)fmod(v1122, 1.84467441e19);
    if (v1123 >= 0.0)
    {
      if (v1123 > 0.0)
        v1119 += (unint64_t)v1123;
    }
    else
    {
      v1119 -= (unint64_t)fabs(v1123);
    }
  }
  else
  {
    v1119 = 0;
  }
  v1821 = v1119;
  if ((v988 & 0x10000000000000) != 0)
  {
    ctrWithThreeAutofavorited = self->_ctrWithThreeAutofavorited;
    v1126 = -ctrWithThreeAutofavorited;
    if (ctrWithThreeAutofavorited >= 0.0)
      v1126 = self->_ctrWithThreeAutofavorited;
    v1127 = floor(v1126 + 0.5);
    v1128 = (v1126 - v1127) * 1.84467441e19;
    v1124 = 2654435761u * (unint64_t)fmod(v1127, 1.84467441e19);
    if (v1128 >= 0.0)
    {
      if (v1128 > 0.0)
        v1124 += (unint64_t)v1128;
    }
    else
    {
      v1124 -= (unint64_t)fabs(v1128);
    }
  }
  else
  {
    v1124 = 0;
  }
  v1820 = v1124;
  if ((v988 & 0x400000000) != 0)
  {
    autofavoritedVoteCoefficient = self->_autofavoritedVoteCoefficient;
    v1131 = -autofavoritedVoteCoefficient;
    if (autofavoritedVoteCoefficient >= 0.0)
      v1131 = self->_autofavoritedVoteCoefficient;
    v1132 = floor(v1131 + 0.5);
    v1133 = (v1131 - v1132) * 1.84467441e19;
    v1129 = 2654435761u * (unint64_t)fmod(v1132, 1.84467441e19);
    if (v1133 >= 0.0)
    {
      if (v1133 > 0.0)
        v1129 += (unint64_t)v1133;
    }
    else
    {
      v1129 -= (unint64_t)fabs(v1133);
    }
  }
  else
  {
    v1129 = 0;
  }
  v1819 = v1129;
  if ((v986 & 0x20) != 0)
  {
    realTimeUserFeedbackCoefficient = self->_realTimeUserFeedbackCoefficient;
    v1136 = -realTimeUserFeedbackCoefficient;
    if (realTimeUserFeedbackCoefficient >= 0.0)
      v1136 = self->_realTimeUserFeedbackCoefficient;
    v1137 = floor(v1136 + 0.5);
    v1138 = (v1136 - v1137) * 1.84467441e19;
    v1134 = 2654435761u * (unint64_t)fmod(v1137, 1.84467441e19);
    if (v1138 >= 0.0)
    {
      if (v1138 > 0.0)
        v1134 += (unint64_t)v1138;
    }
    else
    {
      v1134 -= (unint64_t)fabs(v1138);
    }
  }
  else
  {
    v1134 = 0;
  }
  v1818 = v1134;
  if ((v987 & 0x20000000) != 0)
  {
    globalScoreToCtrSlope = self->_globalScoreToCtrSlope;
    v1141 = -globalScoreToCtrSlope;
    if (globalScoreToCtrSlope >= 0.0)
      v1141 = self->_globalScoreToCtrSlope;
    v1142 = floor(v1141 + 0.5);
    v1143 = (v1141 - v1142) * 1.84467441e19;
    v1139 = 2654435761u * (unint64_t)fmod(v1142, 1.84467441e19);
    if (v1143 >= 0.0)
    {
      if (v1143 > 0.0)
        v1139 += (unint64_t)v1143;
    }
    else
    {
      v1139 -= (unint64_t)fabs(v1143);
    }
  }
  else
  {
    v1139 = 0;
  }
  v1817 = v1139;
  if ((v987 & 0x10000000) != 0)
  {
    globalScoreToCtrIntercept = self->_globalScoreToCtrIntercept;
    v1146 = -globalScoreToCtrIntercept;
    if (globalScoreToCtrIntercept >= 0.0)
      v1146 = self->_globalScoreToCtrIntercept;
    v1147 = floor(v1146 + 0.5);
    v1148 = (v1146 - v1147) * 1.84467441e19;
    v1144 = 2654435761u * (unint64_t)fmod(v1147, 1.84467441e19);
    if (v1148 >= 0.0)
    {
      if (v1148 > 0.0)
        v1144 += (unint64_t)v1148;
    }
    else
    {
      v1144 -= (unint64_t)fabs(v1148);
    }
  }
  else
  {
    v1144 = 0;
  }
  v1816 = v1144;
  if ((v988 & 0x1000000000) != 0)
  {
    baselineArticleScore = self->_baselineArticleScore;
    v1151 = -baselineArticleScore;
    if (baselineArticleScore >= 0.0)
      v1151 = self->_baselineArticleScore;
    v1152 = floor(v1151 + 0.5);
    v1153 = (v1151 - v1152) * 1.84467441e19;
    v1149 = 2654435761u * (unint64_t)fmod(v1152, 1.84467441e19);
    if (v1153 >= 0.0)
    {
      if (v1153 > 0.0)
        v1149 += (unint64_t)v1153;
    }
    else
    {
      v1149 -= (unint64_t)fabs(v1153);
    }
  }
  else
  {
    v1149 = 0;
  }
  v1815 = v1149;
  if ((v988 & 0x80) != 0)
  {
    appInstallImpressionValue = self->_appInstallImpressionValue;
    v1156 = -appInstallImpressionValue;
    if (appInstallImpressionValue >= 0.0)
      v1156 = self->_appInstallImpressionValue;
    v1157 = floor(v1156 + 0.5);
    v1158 = (v1156 - v1157) * 1.84467441e19;
    v1154 = 2654435761u * (unint64_t)fmod(v1157, 1.84467441e19);
    if (v1158 >= 0.0)
    {
      if (v1158 > 0.0)
        v1154 += (unint64_t)v1158;
    }
    else
    {
      v1154 -= (unint64_t)fabs(v1158);
    }
  }
  else
  {
    v1154 = 0;
  }
  v1814 = v1154;
  if ((v988 & 0x40) != 0)
  {
    appInstallClickValue = self->_appInstallClickValue;
    v1161 = -appInstallClickValue;
    if (appInstallClickValue >= 0.0)
      v1161 = self->_appInstallClickValue;
    v1162 = floor(v1161 + 0.5);
    v1163 = (v1161 - v1162) * 1.84467441e19;
    v1159 = 2654435761u * (unint64_t)fmod(v1162, 1.84467441e19);
    if (v1163 >= 0.0)
    {
      if (v1163 > 0.0)
        v1159 += (unint64_t)v1163;
    }
    else
    {
      v1159 -= (unint64_t)fabs(v1163);
    }
  }
  else
  {
    v1159 = 0;
  }
  v1813 = v1159;
  if ((v988 & 0x20) != 0)
  {
    appInstallBaselineImpressionValue = self->_appInstallBaselineImpressionValue;
    v1166 = -appInstallBaselineImpressionValue;
    if (appInstallBaselineImpressionValue >= 0.0)
      v1166 = self->_appInstallBaselineImpressionValue;
    v1167 = floor(v1166 + 0.5);
    v1168 = (v1166 - v1167) * 1.84467441e19;
    v1164 = 2654435761u * (unint64_t)fmod(v1167, 1.84467441e19);
    if (v1168 >= 0.0)
    {
      if (v1168 > 0.0)
        v1164 += (unint64_t)v1168;
    }
    else
    {
      v1164 -= (unint64_t)fabs(v1168);
    }
  }
  else
  {
    v1164 = 0;
  }
  v1812 = v1164;
  if ((v988 & 0x10) != 0)
  {
    appInstallBaselineClickValue = self->_appInstallBaselineClickValue;
    v1171 = -appInstallBaselineClickValue;
    if (appInstallBaselineClickValue >= 0.0)
      v1171 = self->_appInstallBaselineClickValue;
    v1172 = floor(v1171 + 0.5);
    v1173 = (v1171 - v1172) * 1.84467441e19;
    v1169 = 2654435761u * (unint64_t)fmod(v1172, 1.84467441e19);
    if (v1173 >= 0.0)
    {
      if (v1173 > 0.0)
        v1169 += (unint64_t)v1173;
    }
    else
    {
      v1169 -= (unint64_t)fabs(v1173);
    }
  }
  else
  {
    v1169 = 0;
  }
  v1811 = v1169;
  if ((v988 & 8) != 0)
  {
    appInFocusImpressionValue = self->_appInFocusImpressionValue;
    v1176 = -appInFocusImpressionValue;
    if (appInFocusImpressionValue >= 0.0)
      v1176 = self->_appInFocusImpressionValue;
    v1177 = floor(v1176 + 0.5);
    v1178 = (v1176 - v1177) * 1.84467441e19;
    v1174 = 2654435761u * (unint64_t)fmod(v1177, 1.84467441e19);
    if (v1178 >= 0.0)
    {
      if (v1178 > 0.0)
        v1174 += (unint64_t)v1178;
    }
    else
    {
      v1174 -= (unint64_t)fabs(v1178);
    }
  }
  else
  {
    v1174 = 0;
  }
  v1810 = v1174;
  if ((v988 & 4) != 0)
  {
    appInFocusClickValue = self->_appInFocusClickValue;
    v1181 = -appInFocusClickValue;
    if (appInFocusClickValue >= 0.0)
      v1181 = self->_appInFocusClickValue;
    v1182 = floor(v1181 + 0.5);
    v1183 = (v1181 - v1182) * 1.84467441e19;
    v1179 = 2654435761u * (unint64_t)fmod(v1182, 1.84467441e19);
    if (v1183 >= 0.0)
    {
      if (v1183 > 0.0)
        v1179 += (unint64_t)v1183;
    }
    else
    {
      v1179 -= (unint64_t)fabs(v1183);
    }
  }
  else
  {
    v1179 = 0;
  }
  v1809 = v1179;
  if ((v988 & 2) != 0)
  {
    appInFocusBaselineImpressionValue = self->_appInFocusBaselineImpressionValue;
    v1186 = -appInFocusBaselineImpressionValue;
    if (appInFocusBaselineImpressionValue >= 0.0)
      v1186 = self->_appInFocusBaselineImpressionValue;
    v1187 = floor(v1186 + 0.5);
    v1188 = (v1186 - v1187) * 1.84467441e19;
    v1184 = 2654435761u * (unint64_t)fmod(v1187, 1.84467441e19);
    if (v1188 >= 0.0)
    {
      if (v1188 > 0.0)
        v1184 += (unint64_t)v1188;
    }
    else
    {
      v1184 -= (unint64_t)fabs(v1188);
    }
  }
  else
  {
    v1184 = 0;
  }
  v1808 = v1184;
  if ((v988 & 1) != 0)
  {
    appInFocusBaselineClickValue = self->_appInFocusBaselineClickValue;
    v1191 = -appInFocusBaselineClickValue;
    if (appInFocusBaselineClickValue >= 0.0)
      v1191 = self->_appInFocusBaselineClickValue;
    v1192 = floor(v1191 + 0.5);
    v1193 = (v1191 - v1192) * 1.84467441e19;
    v1189 = 2654435761u * (unint64_t)fmod(v1192, 1.84467441e19);
    if (v1193 >= 0.0)
    {
      if (v1193 > 0.0)
        v1189 += (unint64_t)v1193;
    }
    else
    {
      v1189 -= (unint64_t)fabs(v1193);
    }
  }
  else
  {
    v1189 = 0;
  }
  v1807 = v1189;
  if ((v986 & 0x80000) != 0)
  {
    safariHistoryImpressionValue = self->_safariHistoryImpressionValue;
    v1196 = -safariHistoryImpressionValue;
    if (safariHistoryImpressionValue >= 0.0)
      v1196 = self->_safariHistoryImpressionValue;
    v1197 = floor(v1196 + 0.5);
    v1198 = (v1196 - v1197) * 1.84467441e19;
    v1194 = 2654435761u * (unint64_t)fmod(v1197, 1.84467441e19);
    if (v1198 >= 0.0)
    {
      if (v1198 > 0.0)
        v1194 += (unint64_t)v1198;
    }
    else
    {
      v1194 -= (unint64_t)fabs(v1198);
    }
  }
  else
  {
    v1194 = 0;
  }
  v1806 = v1194;
  if ((v986 & 0x40000) != 0)
  {
    safariHistoryClickValue = self->_safariHistoryClickValue;
    v1201 = -safariHistoryClickValue;
    if (safariHistoryClickValue >= 0.0)
      v1201 = self->_safariHistoryClickValue;
    v1202 = floor(v1201 + 0.5);
    v1203 = (v1201 - v1202) * 1.84467441e19;
    v1199 = 2654435761u * (unint64_t)fmod(v1202, 1.84467441e19);
    if (v1203 >= 0.0)
    {
      if (v1203 > 0.0)
        v1199 += (unint64_t)v1203;
    }
    else
    {
      v1199 -= (unint64_t)fabs(v1203);
    }
  }
  else
  {
    v1199 = 0;
  }
  v1805 = v1199;
  if ((v986 & 0x20000) != 0)
  {
    safariHistoryBaselineImpressionValue = self->_safariHistoryBaselineImpressionValue;
    v1206 = -safariHistoryBaselineImpressionValue;
    if (safariHistoryBaselineImpressionValue >= 0.0)
      v1206 = self->_safariHistoryBaselineImpressionValue;
    v1207 = floor(v1206 + 0.5);
    v1208 = (v1206 - v1207) * 1.84467441e19;
    v1204 = 2654435761u * (unint64_t)fmod(v1207, 1.84467441e19);
    if (v1208 >= 0.0)
    {
      if (v1208 > 0.0)
        v1204 += (unint64_t)v1208;
    }
    else
    {
      v1204 -= (unint64_t)fabs(v1208);
    }
  }
  else
  {
    v1204 = 0;
  }
  v1804 = v1204;
  if ((v986 & 0x10000) != 0)
  {
    safariHistoryBaselineClickValue = self->_safariHistoryBaselineClickValue;
    v1211 = -safariHistoryBaselineClickValue;
    if (safariHistoryBaselineClickValue >= 0.0)
      v1211 = self->_safariHistoryBaselineClickValue;
    v1212 = floor(v1211 + 0.5);
    v1213 = (v1211 - v1212) * 1.84467441e19;
    v1209 = 2654435761u * (unint64_t)fmod(v1212, 1.84467441e19);
    if (v1213 >= 0.0)
    {
      if (v1213 > 0.0)
        v1209 += (unint64_t)v1213;
    }
    else
    {
      v1209 -= (unint64_t)fabs(v1213);
    }
  }
  else
  {
    v1209 = 0;
  }
  v1803 = v1209;
  if ((v984 & 4) != 0)
  {
    videoComplete25ImpressionValue = self->_videoComplete25ImpressionValue;
    v1216 = -videoComplete25ImpressionValue;
    if (videoComplete25ImpressionValue >= 0.0)
      v1216 = self->_videoComplete25ImpressionValue;
    v1217 = floor(v1216 + 0.5);
    v1218 = (v1216 - v1217) * 1.84467441e19;
    v1214 = 2654435761u * (unint64_t)fmod(v1217, 1.84467441e19);
    if (v1218 >= 0.0)
    {
      if (v1218 > 0.0)
        v1214 += (unint64_t)v1218;
    }
    else
    {
      v1214 -= (unint64_t)fabs(v1218);
    }
  }
  else
  {
    v1214 = 0;
  }
  v1802 = v1214;
  if ((v984 & 2) != 0)
  {
    videoComplete25ClickValue = self->_videoComplete25ClickValue;
    v1221 = -videoComplete25ClickValue;
    if (videoComplete25ClickValue >= 0.0)
      v1221 = self->_videoComplete25ClickValue;
    v1222 = floor(v1221 + 0.5);
    v1223 = (v1221 - v1222) * 1.84467441e19;
    v1219 = 2654435761u * (unint64_t)fmod(v1222, 1.84467441e19);
    if (v1223 >= 0.0)
    {
      if (v1223 > 0.0)
        v1219 += (unint64_t)v1223;
    }
    else
    {
      v1219 -= (unint64_t)fabs(v1223);
    }
  }
  else
  {
    v1219 = 0;
  }
  v1801 = v1219;
  if ((v984 & 1) != 0)
  {
    videoComplete25BaselineImpressionValue = self->_videoComplete25BaselineImpressionValue;
    v1226 = -videoComplete25BaselineImpressionValue;
    if (videoComplete25BaselineImpressionValue >= 0.0)
      v1226 = self->_videoComplete25BaselineImpressionValue;
    v1227 = floor(v1226 + 0.5);
    v1228 = (v1226 - v1227) * 1.84467441e19;
    v1224 = 2654435761u * (unint64_t)fmod(v1227, 1.84467441e19);
    if (v1228 >= 0.0)
    {
      if (v1228 > 0.0)
        v1224 += (unint64_t)v1228;
    }
    else
    {
      v1224 -= (unint64_t)fabs(v1228);
    }
  }
  else
  {
    v1224 = 0;
  }
  v1800 = v1224;
  if (v983 < 0)
  {
    videoComplete25BaselineClickValue = self->_videoComplete25BaselineClickValue;
    v1231 = -videoComplete25BaselineClickValue;
    if (videoComplete25BaselineClickValue >= 0.0)
      v1231 = self->_videoComplete25BaselineClickValue;
    v1232 = floor(v1231 + 0.5);
    v1233 = (v1231 - v1232) * 1.84467441e19;
    v1229 = 2654435761u * (unint64_t)fmod(v1232, 1.84467441e19);
    if (v1233 >= 0.0)
    {
      if (v1233 > 0.0)
        v1229 += (unint64_t)v1233;
    }
    else
    {
      v1229 -= (unint64_t)fabs(v1233);
    }
  }
  else
  {
    v1229 = 0;
  }
  v1799 = v1229;
  if ((v984 & 0x40) != 0)
  {
    videoComplete50ImpressionValue = self->_videoComplete50ImpressionValue;
    v1236 = -videoComplete50ImpressionValue;
    if (videoComplete50ImpressionValue >= 0.0)
      v1236 = self->_videoComplete50ImpressionValue;
    v1237 = floor(v1236 + 0.5);
    v1238 = (v1236 - v1237) * 1.84467441e19;
    v1234 = 2654435761u * (unint64_t)fmod(v1237, 1.84467441e19);
    if (v1238 >= 0.0)
    {
      if (v1238 > 0.0)
        v1234 += (unint64_t)v1238;
    }
    else
    {
      v1234 -= (unint64_t)fabs(v1238);
    }
  }
  else
  {
    v1234 = 0;
  }
  v1798 = v1234;
  if ((v984 & 0x20) != 0)
  {
    videoComplete50ClickValue = self->_videoComplete50ClickValue;
    v1241 = -videoComplete50ClickValue;
    if (videoComplete50ClickValue >= 0.0)
      v1241 = self->_videoComplete50ClickValue;
    v1242 = floor(v1241 + 0.5);
    v1243 = (v1241 - v1242) * 1.84467441e19;
    v1239 = 2654435761u * (unint64_t)fmod(v1242, 1.84467441e19);
    if (v1243 >= 0.0)
    {
      if (v1243 > 0.0)
        v1239 += (unint64_t)v1243;
    }
    else
    {
      v1239 -= (unint64_t)fabs(v1243);
    }
  }
  else
  {
    v1239 = 0;
  }
  v1797 = v1239;
  if ((v984 & 0x10) != 0)
  {
    videoComplete50BaselineImpressionValue = self->_videoComplete50BaselineImpressionValue;
    v1246 = -videoComplete50BaselineImpressionValue;
    if (videoComplete50BaselineImpressionValue >= 0.0)
      v1246 = self->_videoComplete50BaselineImpressionValue;
    v1247 = floor(v1246 + 0.5);
    v1248 = (v1246 - v1247) * 1.84467441e19;
    v1244 = 2654435761u * (unint64_t)fmod(v1247, 1.84467441e19);
    if (v1248 >= 0.0)
    {
      if (v1248 > 0.0)
        v1244 += (unint64_t)v1248;
    }
    else
    {
      v1244 -= (unint64_t)fabs(v1248);
    }
  }
  else
  {
    v1244 = 0;
  }
  v1796 = v1244;
  if ((v984 & 8) != 0)
  {
    videoComplete50BaselineClickValue = self->_videoComplete50BaselineClickValue;
    v1251 = -videoComplete50BaselineClickValue;
    if (videoComplete50BaselineClickValue >= 0.0)
      v1251 = self->_videoComplete50BaselineClickValue;
    v1252 = floor(v1251 + 0.5);
    v1253 = (v1251 - v1252) * 1.84467441e19;
    v1249 = 2654435761u * (unint64_t)fmod(v1252, 1.84467441e19);
    if (v1253 >= 0.0)
    {
      if (v1253 > 0.0)
        v1249 += (unint64_t)v1253;
    }
    else
    {
      v1249 -= (unint64_t)fabs(v1253);
    }
  }
  else
  {
    v1249 = 0;
  }
  v1795 = v1249;
  if ((v984 & 0x400) != 0)
  {
    videoComplete75ImpressionValue = self->_videoComplete75ImpressionValue;
    v1256 = -videoComplete75ImpressionValue;
    if (videoComplete75ImpressionValue >= 0.0)
      v1256 = self->_videoComplete75ImpressionValue;
    v1257 = floor(v1256 + 0.5);
    v1258 = (v1256 - v1257) * 1.84467441e19;
    v1254 = 2654435761u * (unint64_t)fmod(v1257, 1.84467441e19);
    if (v1258 >= 0.0)
    {
      if (v1258 > 0.0)
        v1254 += (unint64_t)v1258;
    }
    else
    {
      v1254 -= (unint64_t)fabs(v1258);
    }
  }
  else
  {
    v1254 = 0;
  }
  v1794 = v1254;
  if ((v984 & 0x200) != 0)
  {
    videoComplete75ClickValue = self->_videoComplete75ClickValue;
    v1261 = -videoComplete75ClickValue;
    if (videoComplete75ClickValue >= 0.0)
      v1261 = self->_videoComplete75ClickValue;
    v1262 = floor(v1261 + 0.5);
    v1263 = (v1261 - v1262) * 1.84467441e19;
    v1259 = 2654435761u * (unint64_t)fmod(v1262, 1.84467441e19);
    if (v1263 >= 0.0)
    {
      if (v1263 > 0.0)
        v1259 += (unint64_t)v1263;
    }
    else
    {
      v1259 -= (unint64_t)fabs(v1263);
    }
  }
  else
  {
    v1259 = 0;
  }
  v1793 = v1259;
  if ((v984 & 0x100) != 0)
  {
    videoComplete75BaselineImpressionValue = self->_videoComplete75BaselineImpressionValue;
    v1266 = -videoComplete75BaselineImpressionValue;
    if (videoComplete75BaselineImpressionValue >= 0.0)
      v1266 = self->_videoComplete75BaselineImpressionValue;
    v1267 = floor(v1266 + 0.5);
    v1268 = (v1266 - v1267) * 1.84467441e19;
    v1264 = 2654435761u * (unint64_t)fmod(v1267, 1.84467441e19);
    if (v1268 >= 0.0)
    {
      if (v1268 > 0.0)
        v1264 += (unint64_t)v1268;
    }
    else
    {
      v1264 -= (unint64_t)fabs(v1268);
    }
  }
  else
  {
    v1264 = 0;
  }
  v1792 = v1264;
  if ((v984 & 0x80) != 0)
  {
    videoComplete75BaselineClickValue = self->_videoComplete75BaselineClickValue;
    v1271 = -videoComplete75BaselineClickValue;
    if (videoComplete75BaselineClickValue >= 0.0)
      v1271 = self->_videoComplete75BaselineClickValue;
    v1272 = floor(v1271 + 0.5);
    v1273 = (v1271 - v1272) * 1.84467441e19;
    v1269 = 2654435761u * (unint64_t)fmod(v1272, 1.84467441e19);
    if (v1273 >= 0.0)
    {
      if (v1273 > 0.0)
        v1269 += (unint64_t)v1273;
    }
    else
    {
      v1269 -= (unint64_t)fabs(v1273);
    }
  }
  else
  {
    v1269 = 0;
  }
  v1791 = v1269;
  if ((v988 & 0x400000) != 0)
  {
    autoFavoriteMinClicks = self->_autoFavoriteMinClicks;
    v1276 = -autoFavoriteMinClicks;
    if (autoFavoriteMinClicks >= 0.0)
      v1276 = self->_autoFavoriteMinClicks;
    v1277 = floor(v1276 + 0.5);
    v1278 = (v1276 - v1277) * 1.84467441e19;
    v1274 = 2654435761u * (unint64_t)fmod(v1277, 1.84467441e19);
    if (v1278 >= 0.0)
    {
      if (v1278 > 0.0)
        v1274 += (unint64_t)v1278;
    }
    else
    {
      v1274 -= (unint64_t)fabs(v1278);
    }
  }
  else
  {
    v1274 = 0;
  }
  v1790 = v1274;
  if ((v987 & 0x2000000) != 0)
  {
    globalScoreCoefficientHalfLife = self->_globalScoreCoefficientHalfLife;
    v1281 = -globalScoreCoefficientHalfLife;
    if (globalScoreCoefficientHalfLife >= 0.0)
      v1281 = self->_globalScoreCoefficientHalfLife;
    v1282 = floor(v1281 + 0.5);
    v1283 = (v1281 - v1282) * 1.84467441e19;
    v1279 = 2654435761u * (unint64_t)fmod(v1282, 1.84467441e19);
    if (v1283 >= 0.0)
    {
      if (v1283 > 0.0)
        v1279 += (unint64_t)v1283;
    }
    else
    {
      v1279 -= (unint64_t)fabs(v1283);
    }
  }
  else
  {
    v1279 = 0;
  }
  v1789 = v1279;
  if ((v987 & 0x4000000) != 0)
  {
    globalScoreCoefficientInitialMultiplier = self->_globalScoreCoefficientInitialMultiplier;
    v1286 = -globalScoreCoefficientInitialMultiplier;
    if (globalScoreCoefficientInitialMultiplier >= 0.0)
      v1286 = self->_globalScoreCoefficientInitialMultiplier;
    v1287 = floor(v1286 + 0.5);
    v1288 = (v1286 - v1287) * 1.84467441e19;
    v1284 = 2654435761u * (unint64_t)fmod(v1287, 1.84467441e19);
    if (v1288 >= 0.0)
    {
      if (v1288 > 0.0)
        v1284 += (unint64_t)v1288;
    }
    else
    {
      v1284 -= (unint64_t)fabs(v1288);
    }
  }
  else
  {
    v1284 = 0;
  }
  v1788 = v1284;
  if ((v984 & 0x20000000000000) != 0)
  {
    v1787 = 2654435761 * self->_minClusterSizeIPhoneAutoFavorite;
    if ((v984 & 0x200000000000) != 0)
    {
LABEL_2138:
      v1786 = 2654435761 * self->_maxClusterSizeIPhoneAutoFavorite;
      if ((v984 & 0x200000000000000) != 0)
        goto LABEL_2139;
      goto LABEL_2151;
    }
  }
  else
  {
    v1787 = 0;
    if ((v984 & 0x200000000000) != 0)
      goto LABEL_2138;
  }
  v1786 = 0;
  if ((v984 & 0x200000000000000) != 0)
  {
LABEL_2139:
    v1785 = 2654435761 * self->_minIdealClusterSizeIPhoneAutoFavorite;
    if ((v984 & 0x2000000000000) != 0)
      goto LABEL_2140;
    goto LABEL_2152;
  }
LABEL_2151:
  v1785 = 0;
  if ((v984 & 0x2000000000000) != 0)
  {
LABEL_2140:
    v1784 = 2654435761 * self->_maxIdealClusterSizeIPhoneAutoFavorite;
    if ((v984 & 0x8000000000000) != 0)
      goto LABEL_2141;
    goto LABEL_2153;
  }
LABEL_2152:
  v1784 = 0;
  if ((v984 & 0x8000000000000) != 0)
  {
LABEL_2141:
    v1783 = 2654435761 * self->_minClusterSizeIPadAutoFavorite;
    if ((v984 & 0x80000000000) != 0)
      goto LABEL_2142;
    goto LABEL_2154;
  }
LABEL_2153:
  v1783 = 0;
  if ((v984 & 0x80000000000) != 0)
  {
LABEL_2142:
    v1782 = 2654435761 * self->_maxClusterSizeIPadAutoFavorite;
    if ((v984 & 0x80000000000000) != 0)
      goto LABEL_2143;
    goto LABEL_2155;
  }
LABEL_2154:
  v1782 = 0;
  if ((v984 & 0x80000000000000) != 0)
  {
LABEL_2143:
    v1781 = 2654435761 * self->_minIdealClusterSizeIPadAutoFavorite;
    if ((v984 & 0x800000000000) != 0)
      goto LABEL_2144;
LABEL_2156:
    v1780 = 0;
    if ((v986 & 0x80000000000000) != 0)
      goto LABEL_2145;
LABEL_2157:
    v1293 = 0;
    goto LABEL_2160;
  }
LABEL_2155:
  v1781 = 0;
  if ((v984 & 0x800000000000) == 0)
    goto LABEL_2156;
LABEL_2144:
  v1780 = 2654435761 * self->_maxIdealClusterSizeIPadAutoFavorite;
  if ((v986 & 0x80000000000000) == 0)
    goto LABEL_2157;
LABEL_2145:
  swipeToArticleWeakClickMinimumDuration = self->_swipeToArticleWeakClickMinimumDuration;
  v1290 = -swipeToArticleWeakClickMinimumDuration;
  if (swipeToArticleWeakClickMinimumDuration >= 0.0)
    v1290 = self->_swipeToArticleWeakClickMinimumDuration;
  v1291 = floor(v1290 + 0.5);
  v1292 = (v1290 - v1291) * 1.84467441e19;
  v1293 = 2654435761u * (unint64_t)fmod(v1291, 1.84467441e19);
  if (v1292 >= 0.0)
  {
    if (v1292 > 0.0)
      v1293 += (unint64_t)v1292;
  }
  else
  {
    v1293 -= (unint64_t)fabs(v1292);
  }
LABEL_2160:
  if ((v986 & 0x40000000000000) != 0)
  {
    swipeToArticleHeavyClickMinimumDuration = self->_swipeToArticleHeavyClickMinimumDuration;
    v1296 = -swipeToArticleHeavyClickMinimumDuration;
    if (swipeToArticleHeavyClickMinimumDuration >= 0.0)
      v1296 = self->_swipeToArticleHeavyClickMinimumDuration;
    v1297 = floor(v1296 + 0.5);
    v1298 = (v1296 - v1297) * 1.84467441e19;
    v1294 = 2654435761u * (unint64_t)fmod(v1297, 1.84467441e19);
    if (v1298 >= 0.0)
    {
      if (v1298 > 0.0)
        v1294 += (unint64_t)v1298;
    }
    else
    {
      v1294 -= (unint64_t)fabs(v1298);
    }
  }
  else
  {
    v1294 = 0;
  }
  v1778 = v1294;
  if ((v985 & 0x10) != 0)
  {
    v1777 = 2654435761 * self->_maxSuggestionsCount;
    if ((v988 & 0x400000000000) != 0)
      goto LABEL_2170;
LABEL_2175:
    v1303 = 0;
    goto LABEL_2178;
  }
  v1777 = 0;
  if ((v988 & 0x400000000000) == 0)
    goto LABEL_2175;
LABEL_2170:
  cohortMembershipFavoritedBoost = self->_cohortMembershipFavoritedBoost;
  v1300 = -cohortMembershipFavoritedBoost;
  if (cohortMembershipFavoritedBoost >= 0.0)
    v1300 = self->_cohortMembershipFavoritedBoost;
  v1301 = floor(v1300 + 0.5);
  v1302 = (v1300 - v1301) * 1.84467441e19;
  v1303 = 2654435761u * (unint64_t)fmod(v1301, 1.84467441e19);
  if (v1302 >= 0.0)
  {
    if (v1302 > 0.0)
      v1303 += (unint64_t)v1302;
  }
  else
  {
    v1303 -= (unint64_t)fabs(v1302);
  }
LABEL_2178:
  v1776 = v1303;
  if ((v988 & 0x100000000000) != 0)
  {
    cohortMembershipCurvature = self->_cohortMembershipCurvature;
    v1306 = -cohortMembershipCurvature;
    if (cohortMembershipCurvature >= 0.0)
      v1306 = self->_cohortMembershipCurvature;
    v1307 = floor(v1306 + 0.5);
    v1308 = (v1306 - v1307) * 1.84467441e19;
    v1304 = 2654435761u * (unint64_t)fmod(v1307, 1.84467441e19);
    if (v1308 >= 0.0)
    {
      if (v1308 > 0.0)
        v1304 += (unint64_t)v1308;
    }
    else
    {
      v1304 -= (unint64_t)fabs(v1308);
    }
  }
  else
  {
    v1304 = 0;
  }
  v1775 = v1304;
  if ((v988 & 0x80000000000) != 0)
  {
    cohortMembershipCtrCeiling = self->_cohortMembershipCtrCeiling;
    v1311 = -cohortMembershipCtrCeiling;
    if (cohortMembershipCtrCeiling >= 0.0)
      v1311 = self->_cohortMembershipCtrCeiling;
    v1312 = floor(v1311 + 0.5);
    v1313 = (v1311 - v1312) * 1.84467441e19;
    v1309 = 2654435761u * (unint64_t)fmod(v1312, 1.84467441e19);
    if (v1313 >= 0.0)
    {
      if (v1313 > 0.0)
        v1309 += (unint64_t)v1313;
    }
    else
    {
      v1309 -= (unint64_t)fabs(v1313);
    }
  }
  else
  {
    v1309 = 0;
  }
  v1774 = v1309;
  if ((v986 & 0x8000) != 0)
  {
    safariEventBlackoutSeconds = self->_safariEventBlackoutSeconds;
    v1316 = -safariEventBlackoutSeconds;
    if (safariEventBlackoutSeconds >= 0.0)
      v1316 = self->_safariEventBlackoutSeconds;
    v1317 = floor(v1316 + 0.5);
    v1318 = (v1316 - v1317) * 1.84467441e19;
    v1314 = 2654435761u * (unint64_t)fmod(v1317, 1.84467441e19);
    if (v1318 >= 0.0)
    {
      if (v1318 > 0.0)
        v1314 += (unint64_t)v1318;
    }
    else
    {
      v1314 -= (unint64_t)fabs(v1318);
    }
  }
  else
  {
    v1314 = 0;
  }
  v1773 = v1314;
  if ((v988 & 0x10000000000) != 0)
  {
    channelTopicDiversificationPenalty = self->_channelTopicDiversificationPenalty;
    v1321 = -channelTopicDiversificationPenalty;
    if (channelTopicDiversificationPenalty >= 0.0)
      v1321 = self->_channelTopicDiversificationPenalty;
    v1322 = floor(v1321 + 0.5);
    v1323 = (v1321 - v1322) * 1.84467441e19;
    v1319 = 2654435761u * (unint64_t)fmod(v1322, 1.84467441e19);
    if (v1323 >= 0.0)
    {
      if (v1323 > 0.0)
        v1319 += (unint64_t)v1323;
    }
    else
    {
      v1319 -= (unint64_t)fabs(v1323);
    }
  }
  else
  {
    v1319 = 0;
  }
  v1772 = v1319;
  if ((v986 & 0x40) != 0)
  {
    realTimeUserFeedbackPublishDateHalfLifeCoefficient = self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient;
    v1326 = -realTimeUserFeedbackPublishDateHalfLifeCoefficient;
    if (realTimeUserFeedbackPublishDateHalfLifeCoefficient >= 0.0)
      v1326 = self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient;
    v1327 = floor(v1326 + 0.5);
    v1328 = (v1326 - v1327) * 1.84467441e19;
    v1324 = 2654435761u * (unint64_t)fmod(v1327, 1.84467441e19);
    if (v1328 >= 0.0)
    {
      if (v1328 > 0.0)
        v1324 += (unint64_t)v1328;
    }
    else
    {
      v1324 -= (unint64_t)fabs(v1328);
    }
  }
  else
  {
    v1324 = 0;
  }
  v1771 = v1324;
  if ((v988 & 0x80000000) != 0)
  {
    autoFavoriteTagFavorabilityExponent = self->_autoFavoriteTagFavorabilityExponent;
    v1331 = -autoFavoriteTagFavorabilityExponent;
    if (autoFavoriteTagFavorabilityExponent >= 0.0)
      v1331 = self->_autoFavoriteTagFavorabilityExponent;
    v1332 = floor(v1331 + 0.5);
    v1333 = (v1331 - v1332) * 1.84467441e19;
    v1329 = 2654435761u * (unint64_t)fmod(v1332, 1.84467441e19);
    if (v1333 >= 0.0)
    {
      if (v1333 > 0.0)
        v1329 += (unint64_t)v1333;
    }
    else
    {
      v1329 -= (unint64_t)fabs(v1333);
    }
  }
  else
  {
    v1329 = 0;
  }
  v1770 = v1329;
  if ((v988 & 0x40000000) != 0)
  {
    autoFavoritePriorFactorExponent = self->_autoFavoritePriorFactorExponent;
    v1336 = -autoFavoritePriorFactorExponent;
    if (autoFavoritePriorFactorExponent >= 0.0)
      v1336 = self->_autoFavoritePriorFactorExponent;
    v1337 = floor(v1336 + 0.5);
    v1338 = (v1336 - v1337) * 1.84467441e19;
    v1334 = 2654435761u * (unint64_t)fmod(v1337, 1.84467441e19);
    if (v1338 >= 0.0)
    {
      if (v1338 > 0.0)
        v1334 += (unint64_t)v1338;
    }
    else
    {
      v1334 -= (unint64_t)fabs(v1338);
    }
  }
  else
  {
    v1334 = 0;
  }
  v1769 = v1334;
  if ((v983 & 0x10000000000000) == 0)
  {
    v2076 = 0;
LABEL_2240:
    v1344 = v1879;
    goto LABEL_2241;
  }
  uGroupMinimumSubscribedChannelSourceFeedArticleRatio = self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
  v1340 = -uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
  if (uGroupMinimumSubscribedChannelSourceFeedArticleRatio >= 0.0)
    v1340 = self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
  v1341 = floor(v1340 + 0.5);
  v1342 = (v1340 - v1341) * 1.84467441e19;
  v1343 = fmod(v1341, 1.84467441e19);
  if (v1342 < 0.0)
  {
    v2076 = 2654435761u * (unint64_t)v1343 - (unint64_t)fabs(v1342);
    goto LABEL_2240;
  }
  v2076 = 2654435761u * (unint64_t)v1343;
  v1344 = v1879;
  if (v1342 > 0.0)
    v2076 += (unint64_t)v1342;
LABEL_2241:
  if ((v1344 & 0x400) != 0)
  {
    v1768 = 2654435761 * self->_onlyConsiderBestSourceFeedsInForYouGroup;
    if ((v986 & 0x800000) != 0)
      goto LABEL_2243;
LABEL_2248:
    v1349 = 0;
    goto LABEL_2253;
  }
  v1768 = 0;
  if ((v986 & 0x800000) == 0)
    goto LABEL_2248;
LABEL_2243:
  safariTagFavorabilityExponent = self->_safariTagFavorabilityExponent;
  v1346 = -safariTagFavorabilityExponent;
  if (safariTagFavorabilityExponent >= 0.0)
    v1346 = self->_safariTagFavorabilityExponent;
  v1347 = floor(v1346 + 0.5);
  v1348 = (v1346 - v1347) * 1.84467441e19;
  v1349 = 2654435761u * (unint64_t)fmod(v1347, 1.84467441e19);
  if (v1348 >= 0.0)
  {
    if (v1348 > 0.0)
      v1349 += (unint64_t)v1348;
  }
  else
  {
    v1349 -= (unint64_t)fabs(v1348);
  }
LABEL_2253:
  v1767 = v1349;
  if ((v986 & 0x200000) != 0)
  {
    safariPriorFactorExponent = self->_safariPriorFactorExponent;
    v1352 = -safariPriorFactorExponent;
    if (safariPriorFactorExponent >= 0.0)
      v1352 = self->_safariPriorFactorExponent;
    v1353 = floor(v1352 + 0.5);
    v1354 = (v1352 - v1353) * 1.84467441e19;
    v1350 = 2654435761u * (unint64_t)fmod(v1353, 1.84467441e19);
    if (v1354 >= 0.0)
    {
      if (v1354 > 0.0)
        v1350 += (unint64_t)v1354;
    }
    else
    {
      v1350 -= (unint64_t)fabs(v1354);
    }
  }
  else
  {
    v1350 = 0;
  }
  if ((v988 & 0x800) != 0)
  {
    appUsageTagFavorabilityExponent = self->_appUsageTagFavorabilityExponent;
    v1357 = -appUsageTagFavorabilityExponent;
    if (appUsageTagFavorabilityExponent >= 0.0)
      v1357 = self->_appUsageTagFavorabilityExponent;
    v1358 = floor(v1357 + 0.5);
    v1359 = (v1357 - v1358) * 1.84467441e19;
    v1355 = 2654435761u * (unint64_t)fmod(v1358, 1.84467441e19);
    if (v1359 >= 0.0)
    {
      if (v1359 > 0.0)
        v1355 += (unint64_t)v1359;
    }
    else
    {
      v1355 -= (unint64_t)fabs(v1359);
    }
  }
  else
  {
    v1355 = 0;
  }
  v1765 = v1355;
  if ((v988 & 0x200) != 0)
  {
    appUsagePriorFactorExponent = self->_appUsagePriorFactorExponent;
    v1362 = -appUsagePriorFactorExponent;
    if (appUsagePriorFactorExponent >= 0.0)
      v1362 = self->_appUsagePriorFactorExponent;
    v1363 = floor(v1362 + 0.5);
    v1364 = (v1362 - v1363) * 1.84467441e19;
    v1360 = 2654435761u * (unint64_t)fmod(v1363, 1.84467441e19);
    if (v1364 >= 0.0)
    {
      if (v1364 > 0.0)
        v1360 += (unint64_t)v1364;
    }
    else
    {
      v1360 -= (unint64_t)fabs(v1364);
    }
  }
  else
  {
    v1360 = 0;
  }
  if ((v985 & 0x4000000000000) != 0)
  {
    portraitTagFavorabilityExponent = self->_portraitTagFavorabilityExponent;
    v1367 = -portraitTagFavorabilityExponent;
    if (portraitTagFavorabilityExponent >= 0.0)
      v1367 = self->_portraitTagFavorabilityExponent;
    v1368 = floor(v1367 + 0.5);
    v1369 = (v1367 - v1368) * 1.84467441e19;
    v1365 = 2654435761u * (unint64_t)fmod(v1368, 1.84467441e19);
    if (v1369 >= 0.0)
    {
      if (v1369 > 0.0)
        v1365 += (unint64_t)v1369;
    }
    else
    {
      v1365 -= (unint64_t)fabs(v1369);
    }
  }
  else
  {
    v1365 = 0;
  }
  v1764 = v1365;
  if ((v985 & 0x800000000000) != 0)
  {
    portraitPriorFactorExponent = self->_portraitPriorFactorExponent;
    v1372 = -portraitPriorFactorExponent;
    if (portraitPriorFactorExponent >= 0.0)
      v1372 = self->_portraitPriorFactorExponent;
    v1373 = floor(v1372 + 0.5);
    v1374 = (v1372 - v1373) * 1.84467441e19;
    v1370 = 2654435761u * (unint64_t)fmod(v1373, 1.84467441e19);
    if (v1374 >= 0.0)
    {
      if (v1374 > 0.0)
        v1370 += (unint64_t)v1374;
    }
    else
    {
      v1370 -= (unint64_t)fabs(v1374);
    }
  }
  else
  {
    v1370 = 0;
  }
  v1763 = v1370;
  if ((v987 & 0x200000000000000) != 0)
  {
    internalUsageSignalWeight = self->_internalUsageSignalWeight;
    v1377 = -internalUsageSignalWeight;
    if (internalUsageSignalWeight >= 0.0)
      v1377 = self->_internalUsageSignalWeight;
    v1378 = floor(v1377 + 0.5);
    v1379 = (v1377 - v1378) * 1.84467441e19;
    v1375 = 2654435761u * (unint64_t)fmod(v1378, 1.84467441e19);
    if (v1379 >= 0.0)
    {
      if (v1379 > 0.0)
        v1375 += (unint64_t)v1379;
    }
    else
    {
      v1375 -= (unint64_t)fabs(v1379);
    }
  }
  else
  {
    v1375 = 0;
  }
  if ((v1344 & 0x20) == 0)
  {
    v1761 = 0;
    if ((v985 & 0x4000000000) != 0)
      goto LABEL_2303;
LABEL_2309:
    v1760 = 0;
    if ((v985 & 0x80) != 0)
      goto LABEL_2304;
LABEL_2310:
    v1384 = 0;
    goto LABEL_2313;
  }
  v1761 = 2654435761 * self->_enablePreTigrisArticleScoring;
  if ((v985 & 0x4000000000) == 0)
    goto LABEL_2309;
LABEL_2303:
  v1760 = 2654435761 * self->_numEventsToDisableDefaultTopics;
  if ((v985 & 0x80) == 0)
    goto LABEL_2310;
LABEL_2304:
  metaGroupingRelatednessThreshold = self->_metaGroupingRelatednessThreshold;
  v1381 = -metaGroupingRelatednessThreshold;
  if (metaGroupingRelatednessThreshold >= 0.0)
    v1381 = self->_metaGroupingRelatednessThreshold;
  v1382 = floor(v1381 + 0.5);
  v1383 = (v1381 - v1382) * 1.84467441e19;
  v1384 = 2654435761u * (unint64_t)fmod(v1382, 1.84467441e19);
  if (v1383 >= 0.0)
  {
    if (v1383 > 0.0)
      v1384 += (unint64_t)v1383;
  }
  else
  {
    v1384 -= (unint64_t)fabs(v1383);
  }
LABEL_2313:
  if ((v985 & 0x40) != 0)
  {
    metaGroupingRelatednessKWeight = self->_metaGroupingRelatednessKWeight;
    v1387 = -metaGroupingRelatednessKWeight;
    if (metaGroupingRelatednessKWeight >= 0.0)
      v1387 = self->_metaGroupingRelatednessKWeight;
    v1388 = floor(v1387 + 0.5);
    v1389 = (v1387 - v1388) * 1.84467441e19;
    v1385 = 2654435761u * (unint64_t)fmod(v1388, 1.84467441e19);
    if (v1389 >= 0.0)
    {
      if (v1389 > 0.0)
        v1385 += (unint64_t)v1389;
    }
    else
    {
      v1385 -= (unint64_t)fabs(v1389);
    }
  }
  else
  {
    v1385 = 0;
  }
  v1758 = v1385;
  if ((v985 & 0x200) != 0)
  {
    metaGroupingTopicScoreWeight = self->_metaGroupingTopicScoreWeight;
    v1392 = -metaGroupingTopicScoreWeight;
    if (metaGroupingTopicScoreWeight >= 0.0)
      v1392 = self->_metaGroupingTopicScoreWeight;
    v1393 = floor(v1392 + 0.5);
    v1394 = (v1392 - v1393) * 1.84467441e19;
    v1390 = 2654435761u * (unint64_t)fmod(v1393, 1.84467441e19);
    if (v1394 >= 0.0)
    {
      if (v1394 > 0.0)
        v1390 += (unint64_t)v1394;
    }
    else
    {
      v1390 -= (unint64_t)fabs(v1394);
    }
  }
  else
  {
    v1390 = 0;
  }
  v1757 = v1390;
  if ((v985 & 0x20) != 0)
  {
    metaGroupingHighestScoringRelativeScoreMultiplier = self->_metaGroupingHighestScoringRelativeScoreMultiplier;
    v1397 = -metaGroupingHighestScoringRelativeScoreMultiplier;
    if (metaGroupingHighestScoringRelativeScoreMultiplier >= 0.0)
      v1397 = self->_metaGroupingHighestScoringRelativeScoreMultiplier;
    v1398 = floor(v1397 + 0.5);
    v1399 = (v1397 - v1398) * 1.84467441e19;
    v1395 = 2654435761u * (unint64_t)fmod(v1398, 1.84467441e19);
    if (v1399 >= 0.0)
    {
      if (v1399 > 0.0)
        v1395 += (unint64_t)v1399;
    }
    else
    {
      v1395 -= (unint64_t)fabs(v1399);
    }
  }
  else
  {
    v1395 = 0;
  }
  v1756 = v1395;
  v1779 = v1293;
  v1766 = v1350;
  v1762 = v1375;
  v1759 = v1384;
  if ((v985 & 0x100) != 0)
  {
    metaGroupingSubscribedTopicMultiplier = self->_metaGroupingSubscribedTopicMultiplier;
    v1402 = -metaGroupingSubscribedTopicMultiplier;
    if (metaGroupingSubscribedTopicMultiplier >= 0.0)
      v1402 = self->_metaGroupingSubscribedTopicMultiplier;
    v1403 = floor(v1402 + 0.5);
    v1404 = (v1402 - v1403) * 1.84467441e19;
    v1400 = 2654435761u * (unint64_t)fmod(v1403, 1.84467441e19);
    if (v1404 >= 0.0)
    {
      if (v1404 > 0.0)
        v1400 += (unint64_t)v1404;
    }
    else
    {
      v1400 -= (unint64_t)fabs(v1404);
    }
  }
  else
  {
    v1400 = 0;
  }
  v1755 = v1400;
  v1754 = -[NSMutableArray hash](self->_realTimeUserFeedbackTagCoefficients, "hash");
  v1405 = *((_QWORD *)&self->_has + 4);
  v1406 = *((_QWORD *)&self->_has + 5);
  v1408 = *((_QWORD *)&self->_has + 2);
  v1407 = *((_QWORD *)&self->_has + 3);
  v1409 = *((_QWORD *)&self->_has + 1);
  v2096 = (uint64_t)self->_has;
  if ((v1409 & 0x8000) != 0)
  {
    expandedAutofavoriteClusterMinSizeMultiplier = self->_expandedAutofavoriteClusterMinSizeMultiplier;
    v1412 = -expandedAutofavoriteClusterMinSizeMultiplier;
    if (expandedAutofavoriteClusterMinSizeMultiplier >= 0.0)
      v1412 = self->_expandedAutofavoriteClusterMinSizeMultiplier;
    v1413 = floor(v1412 + 0.5);
    v1414 = (v1412 - v1413) * 1.84467441e19;
    v1410 = 2654435761u * (unint64_t)fmod(v1413, 1.84467441e19);
    if (v1414 >= 0.0)
    {
      if (v1414 > 0.0)
        v1410 += (unint64_t)v1414;
    }
    else
    {
      v1410 -= (unint64_t)fabs(v1414);
    }
  }
  else
  {
    v1410 = 0;
  }
  if ((v1409 & 0x4000) != 0)
  {
    expandedAutofavoriteClusterMaxSizeMultiplier = self->_expandedAutofavoriteClusterMaxSizeMultiplier;
    v1417 = -expandedAutofavoriteClusterMaxSizeMultiplier;
    if (expandedAutofavoriteClusterMaxSizeMultiplier >= 0.0)
      v1417 = self->_expandedAutofavoriteClusterMaxSizeMultiplier;
    v1418 = floor(v1417 + 0.5);
    v1419 = (v1417 - v1418) * 1.84467441e19;
    v1415 = 2654435761u * (unint64_t)fmod(v1418, 1.84467441e19);
    if (v1419 >= 0.0)
    {
      if (v1419 > 0.0)
        v1415 += (unint64_t)v1419;
    }
    else
    {
      v1415 -= (unint64_t)fabs(v1419);
    }
  }
  else
  {
    v1415 = 0;
  }
  v1753 = v1415;
  if ((v1408 & 8) != 0)
  {
    maxExpandedAutofavoriteGroupCandidateRatio = self->_maxExpandedAutofavoriteGroupCandidateRatio;
    v1422 = -maxExpandedAutofavoriteGroupCandidateRatio;
    if (maxExpandedAutofavoriteGroupCandidateRatio >= 0.0)
      v1422 = self->_maxExpandedAutofavoriteGroupCandidateRatio;
    v1423 = floor(v1422 + 0.5);
    v1424 = (v1422 - v1423) * 1.84467441e19;
    v1420 = 2654435761u * (unint64_t)fmod(v1423, 1.84467441e19);
    if (v1424 >= 0.0)
    {
      if (v1424 > 0.0)
        v1420 += (unint64_t)v1424;
    }
    else
    {
      v1420 -= (unint64_t)fabs(v1424);
    }
  }
  else
  {
    v1420 = 0;
  }
  v1752 = v1420;
  if ((v2096 & 0x200000) != 0)
  {
    autoFavoriteMaxIdleTime = self->_autoFavoriteMaxIdleTime;
    v1427 = -autoFavoriteMaxIdleTime;
    if (autoFavoriteMaxIdleTime >= 0.0)
      v1427 = self->_autoFavoriteMaxIdleTime;
    v1428 = floor(v1427 + 0.5);
    v1429 = (v1427 - v1428) * 1.84467441e19;
    v1425 = 2654435761u * (unint64_t)fmod(v1428, 1.84467441e19);
    if (v1429 >= 0.0)
    {
      if (v1429 > 0.0)
        v1425 += (unint64_t)v1429;
    }
    else
    {
      v1425 -= (unint64_t)fabs(v1429);
    }
  }
  else
  {
    v1425 = 0;
  }
  v1751 = v1425;
  if ((v1406 & 0x8000000) == 0)
  {
    v1750 = 0;
    if ((v1408 & 0x8000000000) != 0)
      goto LABEL_2379;
LABEL_2385:
    v1749 = 0;
    if ((v1408 & 0x1000000000000000) != 0)
      goto LABEL_2380;
LABEL_2386:
    v1434 = 0;
    goto LABEL_2389;
  }
  v1750 = 2654435761 * self->_auditionedAutoFavoritesEmitterLimit;
  if ((v1408 & 0x8000000000) == 0)
    goto LABEL_2385;
LABEL_2379:
  v1749 = 2654435761 * self->_numSubscriptionsToDisableDefaultTopics;
  if ((v1408 & 0x1000000000000000) == 0)
    goto LABEL_2386;
LABEL_2380:
  publisherAggregateWeight = self->_publisherAggregateWeight;
  v1431 = -publisherAggregateWeight;
  if (publisherAggregateWeight >= 0.0)
    v1431 = self->_publisherAggregateWeight;
  v1432 = floor(v1431 + 0.5);
  v1433 = (v1431 - v1432) * 1.84467441e19;
  v1434 = 2654435761u * (unint64_t)fmod(v1432, 1.84467441e19);
  if (v1433 >= 0.0)
  {
    if (v1433 > 0.0)
      v1434 += (unint64_t)v1433;
  }
  else
  {
    v1434 -= (unint64_t)fabs(v1433);
  }
LABEL_2389:
  if ((v1409 & 8) != 0)
  {
    diversificationInitialPenalty = self->_diversificationInitialPenalty;
    v1437 = -diversificationInitialPenalty;
    if (diversificationInitialPenalty >= 0.0)
      v1437 = self->_diversificationInitialPenalty;
    v1438 = floor(v1437 + 0.5);
    v1439 = (v1437 - v1438) * 1.84467441e19;
    v1435 = 2654435761u * (unint64_t)fmod(v1438, 1.84467441e19);
    if (v1439 >= 0.0)
    {
      if (v1439 > 0.0)
        v1435 += (unint64_t)v1439;
    }
    else
    {
      v1435 -= (unint64_t)fabs(v1439);
    }
  }
  else
  {
    v1435 = 0;
  }
  v1747 = v1435;
  if ((v1409 & 0x20) != 0)
  {
    diversificationPenaltyHalfLife = self->_diversificationPenaltyHalfLife;
    v1442 = -diversificationPenaltyHalfLife;
    if (diversificationPenaltyHalfLife >= 0.0)
      v1442 = self->_diversificationPenaltyHalfLife;
    v1443 = floor(v1442 + 0.5);
    v1444 = (v1442 - v1443) * 1.84467441e19;
    v1440 = 2654435761u * (unint64_t)fmod(v1443, 1.84467441e19);
    if (v1444 >= 0.0)
    {
      if (v1444 > 0.0)
        v1440 += (unint64_t)v1444;
    }
    else
    {
      v1440 -= (unint64_t)fabs(v1444);
    }
  }
  else
  {
    v1440 = 0;
  }
  if ((v2096 & 0x8000000000) != 0)
  {
    channelTopicDiversificationInitialPenalty = self->_channelTopicDiversificationInitialPenalty;
    v1447 = -channelTopicDiversificationInitialPenalty;
    if (channelTopicDiversificationInitialPenalty >= 0.0)
      v1447 = self->_channelTopicDiversificationInitialPenalty;
    v1448 = floor(v1447 + 0.5);
    v1449 = (v1447 - v1448) * 1.84467441e19;
    v1445 = 2654435761u * (unint64_t)fmod(v1448, 1.84467441e19);
    if (v1449 >= 0.0)
    {
      if (v1449 > 0.0)
        v1445 += (unint64_t)v1449;
    }
    else
    {
      v1445 -= (unint64_t)fabs(v1449);
    }
  }
  else
  {
    v1445 = 0;
  }
  v1746 = v1445;
  if ((v2096 & 0x20000000000) != 0)
  {
    channelTopicDiversificationPenaltyHalfLife = self->_channelTopicDiversificationPenaltyHalfLife;
    v1452 = -channelTopicDiversificationPenaltyHalfLife;
    if (channelTopicDiversificationPenaltyHalfLife >= 0.0)
      v1452 = self->_channelTopicDiversificationPenaltyHalfLife;
    v1453 = floor(v1452 + 0.5);
    v1454 = (v1452 - v1453) * 1.84467441e19;
    v1450 = 2654435761u * (unint64_t)fmod(v1453, 1.84467441e19);
    if (v1454 >= 0.0)
    {
      if (v1454 > 0.0)
        v1450 += (unint64_t)v1454;
    }
    else
    {
      v1450 -= (unint64_t)fabs(v1454);
    }
  }
  else
  {
    v1450 = 0;
  }
  v1745 = v1450;
  if ((v1408 & 0x2000000000000000) != 0)
  {
    publisherDiversificationInitialPenalty = self->_publisherDiversificationInitialPenalty;
    v1457 = -publisherDiversificationInitialPenalty;
    if (publisherDiversificationInitialPenalty >= 0.0)
      v1457 = self->_publisherDiversificationInitialPenalty;
    v1458 = floor(v1457 + 0.5);
    v1459 = (v1457 - v1458) * 1.84467441e19;
    v1455 = 2654435761u * (unint64_t)fmod(v1458, 1.84467441e19);
    if (v1459 >= 0.0)
    {
      if (v1459 > 0.0)
        v1455 += (unint64_t)v1459;
    }
    else
    {
      v1455 -= (unint64_t)fabs(v1459);
    }
  }
  else
  {
    v1455 = 0;
  }
  v1744 = v1455;
  if (v1408 < 0)
  {
    publisherDiversificationPenaltyHalfLife = self->_publisherDiversificationPenaltyHalfLife;
    v1462 = -publisherDiversificationPenaltyHalfLife;
    if (publisherDiversificationPenaltyHalfLife >= 0.0)
      v1462 = self->_publisherDiversificationPenaltyHalfLife;
    v1463 = floor(v1462 + 0.5);
    v1464 = (v1462 - v1463) * 1.84467441e19;
    v1460 = 2654435761u * (unint64_t)fmod(v1463, 1.84467441e19);
    if (v1464 >= 0.0)
    {
      if (v1464 > 0.0)
        v1460 += (unint64_t)v1464;
    }
    else
    {
      v1460 -= (unint64_t)fabs(v1464);
    }
  }
  else
  {
    v1460 = 0;
  }
  v1743 = v1460;
  if ((v1408 & 0x800) != 0)
  {
    minimumGlobalScoreThreshold = self->_minimumGlobalScoreThreshold;
    v1467 = -minimumGlobalScoreThreshold;
    if (minimumGlobalScoreThreshold >= 0.0)
      v1467 = self->_minimumGlobalScoreThreshold;
    v1468 = floor(v1467 + 0.5);
    v1469 = (v1467 - v1468) * 1.84467441e19;
    v1465 = 2654435761u * (unint64_t)fmod(v1468, 1.84467441e19);
    if (v1469 >= 0.0)
    {
      if (v1469 > 0.0)
        v1465 += (unint64_t)v1469;
    }
    else
    {
      v1465 -= (unint64_t)fabs(v1469);
    }
  }
  else
  {
    v1465 = 0;
  }
  v1742 = v1465;
  if ((v1408 & 0x1000) != 0)
  {
    minimumGlobalScoreThresholdForSubscribedChannel = self->_minimumGlobalScoreThresholdForSubscribedChannel;
    v1472 = -minimumGlobalScoreThresholdForSubscribedChannel;
    if (minimumGlobalScoreThresholdForSubscribedChannel >= 0.0)
      v1472 = self->_minimumGlobalScoreThresholdForSubscribedChannel;
    v1473 = floor(v1472 + 0.5);
    v1474 = (v1472 - v1473) * 1.84467441e19;
    v1470 = 2654435761u * (unint64_t)fmod(v1473, 1.84467441e19);
    if (v1474 >= 0.0)
    {
      if (v1474 > 0.0)
        v1470 += (unint64_t)v1474;
    }
    else
    {
      v1470 -= (unint64_t)fabs(v1474);
    }
  }
  else
  {
    v1470 = 0;
  }
  if ((v1407 & 0x800000000000) != 0)
  {
    subscribedChannelScoreCoefficient = self->_subscribedChannelScoreCoefficient;
    v1477 = -subscribedChannelScoreCoefficient;
    if (subscribedChannelScoreCoefficient >= 0.0)
      v1477 = self->_subscribedChannelScoreCoefficient;
    v1478 = floor(v1477 + 0.5);
    v1479 = (v1477 - v1478) * 1.84467441e19;
    v1475 = 2654435761u * (unint64_t)fmod(v1478, 1.84467441e19);
    if (v1479 >= 0.0)
    {
      if (v1479 > 0.0)
        v1475 += (unint64_t)v1479;
    }
    else
    {
      v1475 -= (unint64_t)fabs(v1479);
    }
  }
  else
  {
    v1475 = 0;
  }
  v1740 = v1475;
  if ((v1407 & 0x1000000000000) != 0)
  {
    subscribedTopicsScoreCoefficient = self->_subscribedTopicsScoreCoefficient;
    v1482 = -subscribedTopicsScoreCoefficient;
    if (subscribedTopicsScoreCoefficient >= 0.0)
      v1482 = self->_subscribedTopicsScoreCoefficient;
    v1483 = floor(v1482 + 0.5);
    v1484 = (v1482 - v1483) * 1.84467441e19;
    v1480 = 2654435761u * (unint64_t)fmod(v1483, 1.84467441e19);
    if (v1484 >= 0.0)
    {
      if (v1484 > 0.0)
        v1480 += (unint64_t)v1484;
    }
    else
    {
      v1480 -= (unint64_t)fabs(v1484);
    }
  }
  else
  {
    v1480 = 0;
  }
  if ((v1405 & 0x4000) != 0)
  {
    topicFeedBaselineRatePrior = self->_topicFeedBaselineRatePrior;
    v1487 = -topicFeedBaselineRatePrior;
    if (topicFeedBaselineRatePrior >= 0.0)
      v1487 = self->_topicFeedBaselineRatePrior;
    v1488 = floor(v1487 + 0.5);
    v1489 = (v1487 - v1488) * 1.84467441e19;
    v1485 = 2654435761u * (unint64_t)fmod(v1488, 1.84467441e19);
    if (v1489 >= 0.0)
    {
      if (v1489 > 0.0)
        v1485 += (unint64_t)v1489;
    }
    else
    {
      v1485 -= (unint64_t)fabs(v1489);
    }
  }
  else
  {
    v1485 = 0;
  }
  v1738 = v1485;
  if ((v1405 & 0x80000000) != 0)
  {
    topicFeedDecayFactor = self->_topicFeedDecayFactor;
    v1492 = -topicFeedDecayFactor;
    if (topicFeedDecayFactor >= 0.0)
      v1492 = self->_topicFeedDecayFactor;
    v1493 = floor(v1492 + 0.5);
    v1494 = (v1492 - v1493) * 1.84467441e19;
    v1490 = 2654435761u * (unint64_t)fmod(v1493, 1.84467441e19);
    if (v1494 >= 0.0)
    {
      if (v1494 > 0.0)
        v1490 += (unint64_t)v1494;
    }
    else
    {
      v1490 -= (unint64_t)fabs(v1494);
    }
  }
  else
  {
    v1490 = 0;
  }
  v1737 = v1490;
  if ((v1405 & 0x100000000) != 0)
  {
    topicFeedDemocratizationFactor = self->_topicFeedDemocratizationFactor;
    v1497 = -topicFeedDemocratizationFactor;
    if (topicFeedDemocratizationFactor >= 0.0)
      v1497 = self->_topicFeedDemocratizationFactor;
    v1498 = floor(v1497 + 0.5);
    v1499 = (v1497 - v1498) * 1.84467441e19;
    v1495 = 2654435761u * (unint64_t)fmod(v1498, 1.84467441e19);
    if (v1499 >= 0.0)
    {
      if (v1499 > 0.0)
        v1495 += (unint64_t)v1499;
    }
    else
    {
      v1495 -= (unint64_t)fabs(v1499);
    }
  }
  else
  {
    v1495 = 0;
  }
  v1736 = v1495;
  if ((v1405 & 0x20000000000) != 0)
  {
    topicFeedHalfLifeCoefficient = self->_topicFeedHalfLifeCoefficient;
    v1502 = -topicFeedHalfLifeCoefficient;
    if (topicFeedHalfLifeCoefficient >= 0.0)
      v1502 = self->_topicFeedHalfLifeCoefficient;
    v1503 = floor(v1502 + 0.5);
    v1504 = (v1502 - v1503) * 1.84467441e19;
    v1500 = 2654435761u * (unint64_t)fmod(v1503, 1.84467441e19);
    if (v1504 >= 0.0)
    {
      if (v1504 > 0.0)
        v1500 += (unint64_t)v1504;
    }
    else
    {
      v1500 -= (unint64_t)fabs(v1504);
    }
  }
  else
  {
    v1500 = 0;
  }
  v1735 = v1500;
  if ((v1405 & 0x2000000000000) != 0)
  {
    topicFeedSubscribedChannelScoreCoefficient = self->_topicFeedSubscribedChannelScoreCoefficient;
    v1507 = -topicFeedSubscribedChannelScoreCoefficient;
    if (topicFeedSubscribedChannelScoreCoefficient >= 0.0)
      v1507 = self->_topicFeedSubscribedChannelScoreCoefficient;
    v1508 = floor(v1507 + 0.5);
    v1509 = (v1507 - v1508) * 1.84467441e19;
    v1505 = 2654435761u * (unint64_t)fmod(v1508, 1.84467441e19);
    if (v1509 >= 0.0)
    {
      if (v1509 > 0.0)
        v1505 += (unint64_t)v1509;
    }
    else
    {
      v1505 -= (unint64_t)fabs(v1509);
    }
  }
  else
  {
    v1505 = 0;
  }
  v1734 = v1505;
  if ((v1405 & 0x100000000000) != 0)
  {
    topicFeedMutedVoteCoefficient = self->_topicFeedMutedVoteCoefficient;
    v1512 = -topicFeedMutedVoteCoefficient;
    if (topicFeedMutedVoteCoefficient >= 0.0)
      v1512 = self->_topicFeedMutedVoteCoefficient;
    v1513 = floor(v1512 + 0.5);
    v1514 = (v1512 - v1513) * 1.84467441e19;
    v1510 = 2654435761u * (unint64_t)fmod(v1513, 1.84467441e19);
    if (v1514 >= 0.0)
    {
      if (v1514 > 0.0)
        v1510 += (unint64_t)v1514;
    }
    else
    {
      v1510 -= (unint64_t)fabs(v1514);
    }
  }
  else
  {
    v1510 = 0;
  }
  v1733 = v1510;
  if ((v1405 & 0x200000000000) != 0)
  {
    topicFeedPersonalizationCoefficient = self->_topicFeedPersonalizationCoefficient;
    v1517 = -topicFeedPersonalizationCoefficient;
    if (topicFeedPersonalizationCoefficient >= 0.0)
      v1517 = self->_topicFeedPersonalizationCoefficient;
    v1518 = floor(v1517 + 0.5);
    v1519 = (v1517 - v1518) * 1.84467441e19;
    v1515 = 2654435761u * (unint64_t)fmod(v1518, 1.84467441e19);
    if (v1519 >= 0.0)
    {
      if (v1519 > 0.0)
        v1515 += (unint64_t)v1519;
    }
    else
    {
      v1515 -= (unint64_t)fabs(v1519);
    }
  }
  else
  {
    v1515 = 0;
  }
  v1732 = v1515;
  if ((v1405 & 0x400000000000) != 0)
  {
    topicFeedPublisherAggregateWeight = self->_topicFeedPublisherAggregateWeight;
    v1522 = -topicFeedPublisherAggregateWeight;
    if (topicFeedPublisherAggregateWeight >= 0.0)
      v1522 = self->_topicFeedPublisherAggregateWeight;
    v1523 = floor(v1522 + 0.5);
    v1524 = (v1522 - v1523) * 1.84467441e19;
    v1520 = 2654435761u * (unint64_t)fmod(v1523, 1.84467441e19);
    if (v1524 >= 0.0)
    {
      if (v1524 > 0.0)
        v1520 += (unint64_t)v1524;
    }
    else
    {
      v1520 -= (unint64_t)fabs(v1524);
    }
  }
  else
  {
    v1520 = 0;
  }
  v1731 = v1520;
  if ((v1405 & 0x1000000000) != 0)
  {
    topicFeedGlobalScoreCoefficient = self->_topicFeedGlobalScoreCoefficient;
    v1527 = -topicFeedGlobalScoreCoefficient;
    if (topicFeedGlobalScoreCoefficient >= 0.0)
      v1527 = self->_topicFeedGlobalScoreCoefficient;
    v1528 = floor(v1527 + 0.5);
    v1529 = (v1527 - v1528) * 1.84467441e19;
    v1525 = 2654435761u * (unint64_t)fmod(v1528, 1.84467441e19);
    if (v1529 >= 0.0)
    {
      if (v1529 > 0.0)
        v1525 += (unint64_t)v1529;
    }
    else
    {
      v1525 -= (unint64_t)fabs(v1529);
    }
  }
  else
  {
    v1525 = 0;
  }
  v1730 = v1525;
  if ((v1405 & 0x2000000000) != 0)
  {
    topicFeedGlobalScoreCoefficientHalfLife = self->_topicFeedGlobalScoreCoefficientHalfLife;
    v1532 = -topicFeedGlobalScoreCoefficientHalfLife;
    if (topicFeedGlobalScoreCoefficientHalfLife >= 0.0)
      v1532 = self->_topicFeedGlobalScoreCoefficientHalfLife;
    v1533 = floor(v1532 + 0.5);
    v1534 = (v1532 - v1533) * 1.84467441e19;
    v1530 = 2654435761u * (unint64_t)fmod(v1533, 1.84467441e19);
    if (v1534 >= 0.0)
    {
      if (v1534 > 0.0)
        v1530 += (unint64_t)v1534;
    }
    else
    {
      v1530 -= (unint64_t)fabs(v1534);
    }
  }
  else
  {
    v1530 = 0;
  }
  v1729 = v1530;
  if ((v1405 & 0x4000000000) != 0)
  {
    topicFeedGlobalScoreCoefficientInitialMultiplier = self->_topicFeedGlobalScoreCoefficientInitialMultiplier;
    v1537 = -topicFeedGlobalScoreCoefficientInitialMultiplier;
    if (topicFeedGlobalScoreCoefficientInitialMultiplier >= 0.0)
      v1537 = self->_topicFeedGlobalScoreCoefficientInitialMultiplier;
    v1538 = floor(v1537 + 0.5);
    v1539 = (v1537 - v1538) * 1.84467441e19;
    v1535 = 2654435761u * (unint64_t)fmod(v1538, 1.84467441e19);
    if (v1539 >= 0.0)
    {
      if (v1539 > 0.0)
        v1535 += (unint64_t)v1539;
    }
    else
    {
      v1535 -= (unint64_t)fabs(v1539);
    }
  }
  else
  {
    v1535 = 0;
  }
  v1728 = v1535;
  if ((v1405 & 0x8000000000) != 0)
  {
    topicFeedGlobalScoreToCtrIntercept = self->_topicFeedGlobalScoreToCtrIntercept;
    v1542 = -topicFeedGlobalScoreToCtrIntercept;
    if (topicFeedGlobalScoreToCtrIntercept >= 0.0)
      v1542 = self->_topicFeedGlobalScoreToCtrIntercept;
    v1543 = floor(v1542 + 0.5);
    v1544 = (v1542 - v1543) * 1.84467441e19;
    v1540 = 2654435761u * (unint64_t)fmod(v1543, 1.84467441e19);
    if (v1544 >= 0.0)
    {
      if (v1544 > 0.0)
        v1540 += (unint64_t)v1544;
    }
    else
    {
      v1540 -= (unint64_t)fabs(v1544);
    }
  }
  else
  {
    v1540 = 0;
  }
  v1727 = v1540;
  if ((v1405 & 0x10000000000) != 0)
  {
    topicFeedGlobalScoreToCtrSlope = self->_topicFeedGlobalScoreToCtrSlope;
    v1547 = -topicFeedGlobalScoreToCtrSlope;
    if (topicFeedGlobalScoreToCtrSlope >= 0.0)
      v1547 = self->_topicFeedGlobalScoreToCtrSlope;
    v1548 = floor(v1547 + 0.5);
    v1549 = (v1547 - v1548) * 1.84467441e19;
    v1545 = 2654435761u * (unint64_t)fmod(v1548, 1.84467441e19);
    if (v1549 >= 0.0)
    {
      if (v1549 > 0.0)
        v1545 += (unint64_t)v1549;
    }
    else
    {
      v1545 -= (unint64_t)fabs(v1549);
    }
  }
  else
  {
    v1545 = 0;
  }
  v1726 = v1545;
  if ((v1405 & 0x40000000000) != 0)
  {
    topicFeedMinimumGlobalScoreThreshold = self->_topicFeedMinimumGlobalScoreThreshold;
    v1552 = -topicFeedMinimumGlobalScoreThreshold;
    if (topicFeedMinimumGlobalScoreThreshold >= 0.0)
      v1552 = self->_topicFeedMinimumGlobalScoreThreshold;
    v1553 = floor(v1552 + 0.5);
    v1554 = (v1552 - v1553) * 1.84467441e19;
    v1550 = 2654435761u * (unint64_t)fmod(v1553, 1.84467441e19);
    if (v1554 >= 0.0)
    {
      if (v1554 > 0.0)
        v1550 += (unint64_t)v1554;
    }
    else
    {
      v1550 -= (unint64_t)fabs(v1554);
    }
  }
  else
  {
    v1550 = 0;
  }
  v1725 = v1550;
  if ((v1405 & 0x80000000000) != 0)
  {
    topicFeedMinimumGlobalScoreThresholdForSubscribedChannel = self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
    v1557 = -topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
    if (topicFeedMinimumGlobalScoreThresholdForSubscribedChannel >= 0.0)
      v1557 = self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
    v1558 = floor(v1557 + 0.5);
    v1559 = (v1557 - v1558) * 1.84467441e19;
    v1555 = 2654435761u * (unint64_t)fmod(v1558, 1.84467441e19);
    if (v1559 >= 0.0)
    {
      if (v1559 > 0.0)
        v1555 += (unint64_t)v1559;
    }
    else
    {
      v1555 -= (unint64_t)fabs(v1559);
    }
  }
  else
  {
    v1555 = 0;
  }
  v1724 = v1555;
  if ((v1405 & 0x800000000000) != 0)
  {
    topicFeedRealTimeUserFeedbackCoefficient = self->_topicFeedRealTimeUserFeedbackCoefficient;
    v1562 = -topicFeedRealTimeUserFeedbackCoefficient;
    if (topicFeedRealTimeUserFeedbackCoefficient >= 0.0)
      v1562 = self->_topicFeedRealTimeUserFeedbackCoefficient;
    v1563 = floor(v1562 + 0.5);
    v1564 = (v1562 - v1563) * 1.84467441e19;
    v1560 = 2654435761u * (unint64_t)fmod(v1563, 1.84467441e19);
    if (v1564 >= 0.0)
    {
      if (v1564 > 0.0)
        v1560 += (unint64_t)v1564;
    }
    else
    {
      v1560 -= (unint64_t)fabs(v1564);
    }
  }
  else
  {
    v1560 = 0;
  }
  v1723 = v1560;
  if ((v1405 & 0x1000000000000) != 0)
  {
    topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient = self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
    v1567 = -topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
    if (topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient >= 0.0)
      v1567 = self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
    v1568 = floor(v1567 + 0.5);
    v1569 = (v1567 - v1568) * 1.84467441e19;
    v1565 = 2654435761u * (unint64_t)fmod(v1568, 1.84467441e19);
    if (v1569 >= 0.0)
    {
      if (v1569 > 0.0)
        v1565 += (unint64_t)v1569;
    }
    else
    {
      v1565 -= (unint64_t)fabs(v1569);
    }
  }
  else
  {
    v1565 = 0;
  }
  v1722 = v1565;
  if ((v1405 & 0x40000) != 0)
  {
    topicFeedCohortMembershipCtrCeiling = self->_topicFeedCohortMembershipCtrCeiling;
    v1572 = -topicFeedCohortMembershipCtrCeiling;
    if (topicFeedCohortMembershipCtrCeiling >= 0.0)
      v1572 = self->_topicFeedCohortMembershipCtrCeiling;
    v1573 = floor(v1572 + 0.5);
    v1574 = (v1572 - v1573) * 1.84467441e19;
    v1570 = 2654435761u * (unint64_t)fmod(v1573, 1.84467441e19);
    if (v1574 >= 0.0)
    {
      if (v1574 > 0.0)
        v1570 += (unint64_t)v1574;
    }
    else
    {
      v1570 -= (unint64_t)fabs(v1574);
    }
  }
  else
  {
    v1570 = 0;
  }
  v1721 = v1570;
  if ((v1405 & 0x80000) != 0)
  {
    topicFeedCohortMembershipCurvature = self->_topicFeedCohortMembershipCurvature;
    v1577 = -topicFeedCohortMembershipCurvature;
    if (topicFeedCohortMembershipCurvature >= 0.0)
      v1577 = self->_topicFeedCohortMembershipCurvature;
    v1578 = floor(v1577 + 0.5);
    v1579 = (v1577 - v1578) * 1.84467441e19;
    v1575 = 2654435761u * (unint64_t)fmod(v1578, 1.84467441e19);
    if (v1579 >= 0.0)
    {
      if (v1579 > 0.0)
        v1575 += (unint64_t)v1579;
    }
    else
    {
      v1575 -= (unint64_t)fabs(v1579);
    }
  }
  else
  {
    v1575 = 0;
  }
  v1720 = v1575;
  if ((v1405 & 0x100000) != 0)
  {
    topicFeedCohortMembershipFavoritedBoost = self->_topicFeedCohortMembershipFavoritedBoost;
    v1582 = -topicFeedCohortMembershipFavoritedBoost;
    if (topicFeedCohortMembershipFavoritedBoost >= 0.0)
      v1582 = self->_topicFeedCohortMembershipFavoritedBoost;
    v1583 = floor(v1582 + 0.5);
    v1584 = (v1582 - v1583) * 1.84467441e19;
    v1580 = 2654435761u * (unint64_t)fmod(v1583, 1.84467441e19);
    if (v1584 >= 0.0)
    {
      if (v1584 > 0.0)
        v1580 += (unint64_t)v1584;
    }
    else
    {
      v1580 -= (unint64_t)fabs(v1584);
    }
  }
  else
  {
    v1580 = 0;
  }
  v1719 = v1580;
  if ((v1405 & 0x200000) != 0)
  {
    topicFeedCohortMembershipMinWeightedImpressions = self->_topicFeedCohortMembershipMinWeightedImpressions;
    v1587 = -topicFeedCohortMembershipMinWeightedImpressions;
    if (topicFeedCohortMembershipMinWeightedImpressions >= 0.0)
      v1587 = self->_topicFeedCohortMembershipMinWeightedImpressions;
    v1588 = floor(v1587 + 0.5);
    v1589 = (v1587 - v1588) * 1.84467441e19;
    v1585 = 2654435761u * (unint64_t)fmod(v1588, 1.84467441e19);
    if (v1589 >= 0.0)
    {
      if (v1589 > 0.0)
        v1585 += (unint64_t)v1589;
    }
    else
    {
      v1585 -= (unint64_t)fabs(v1589);
    }
  }
  else
  {
    v1585 = 0;
  }
  v1718 = v1585;
  if ((v1405 & 0x4000000000000) != 0)
  {
    topicFeedSubscribedTopicsScoreCoefficient = self->_topicFeedSubscribedTopicsScoreCoefficient;
    v1592 = -topicFeedSubscribedTopicsScoreCoefficient;
    if (topicFeedSubscribedTopicsScoreCoefficient >= 0.0)
      v1592 = self->_topicFeedSubscribedTopicsScoreCoefficient;
    v1593 = floor(v1592 + 0.5);
    v1594 = (v1592 - v1593) * 1.84467441e19;
    v1590 = 2654435761u * (unint64_t)fmod(v1593, 1.84467441e19);
    if (v1594 >= 0.0)
    {
      if (v1594 > 0.0)
        v1590 += (unint64_t)v1594;
    }
    else
    {
      v1590 -= (unint64_t)fabs(v1594);
    }
  }
  else
  {
    v1590 = 0;
  }
  v1717 = v1590;
  if ((v1405 & 0x40000000) != 0)
  {
    topicFeedCtrWithZeroSubscribed = self->_topicFeedCtrWithZeroSubscribed;
    v1597 = -topicFeedCtrWithZeroSubscribed;
    if (topicFeedCtrWithZeroSubscribed >= 0.0)
      v1597 = self->_topicFeedCtrWithZeroSubscribed;
    v1598 = floor(v1597 + 0.5);
    v1599 = (v1597 - v1598) * 1.84467441e19;
    v1595 = 2654435761u * (unint64_t)fmod(v1598, 1.84467441e19);
    if (v1599 >= 0.0)
    {
      if (v1599 > 0.0)
        v1595 += (unint64_t)v1599;
    }
    else
    {
      v1595 -= (unint64_t)fabs(v1599);
    }
  }
  else
  {
    v1595 = 0;
  }
  v1716 = v1595;
  if ((v1405 & 0x800000) != 0)
  {
    topicFeedCtrWithOneSubscribed = self->_topicFeedCtrWithOneSubscribed;
    v1602 = -topicFeedCtrWithOneSubscribed;
    if (topicFeedCtrWithOneSubscribed >= 0.0)
      v1602 = self->_topicFeedCtrWithOneSubscribed;
    v1603 = floor(v1602 + 0.5);
    v1604 = (v1602 - v1603) * 1.84467441e19;
    v1600 = 2654435761u * (unint64_t)fmod(v1603, 1.84467441e19);
    if (v1604 >= 0.0)
    {
      if (v1604 > 0.0)
        v1600 += (unint64_t)v1604;
    }
    else
    {
      v1600 -= (unint64_t)fabs(v1604);
    }
  }
  else
  {
    v1600 = 0;
  }
  v1715 = v1600;
  if ((v1405 & 0x10000000) != 0)
  {
    topicFeedCtrWithTwoSubscribed = self->_topicFeedCtrWithTwoSubscribed;
    v1607 = -topicFeedCtrWithTwoSubscribed;
    if (topicFeedCtrWithTwoSubscribed >= 0.0)
      v1607 = self->_topicFeedCtrWithTwoSubscribed;
    v1608 = floor(v1607 + 0.5);
    v1609 = (v1607 - v1608) * 1.84467441e19;
    v1605 = 2654435761u * (unint64_t)fmod(v1608, 1.84467441e19);
    if (v1609 >= 0.0)
    {
      if (v1609 > 0.0)
        v1605 += (unint64_t)v1609;
    }
    else
    {
      v1605 -= (unint64_t)fabs(v1609);
    }
  }
  else
  {
    v1605 = 0;
  }
  v1714 = v1605;
  if ((v1405 & 0x4000000) != 0)
  {
    topicFeedCtrWithThreeSubscribed = self->_topicFeedCtrWithThreeSubscribed;
    v1612 = -topicFeedCtrWithThreeSubscribed;
    if (topicFeedCtrWithThreeSubscribed >= 0.0)
      v1612 = self->_topicFeedCtrWithThreeSubscribed;
    v1613 = floor(v1612 + 0.5);
    v1614 = (v1612 - v1613) * 1.84467441e19;
    v1610 = 2654435761u * (unint64_t)fmod(v1613, 1.84467441e19);
    if (v1614 >= 0.0)
    {
      if (v1614 > 0.0)
        v1610 += (unint64_t)v1614;
    }
    else
    {
      v1610 -= (unint64_t)fabs(v1614);
    }
  }
  else
  {
    v1610 = 0;
  }
  v1713 = v1610;
  if ((v1405 & 0x2000) != 0)
  {
    topicFeedAutofavoritedVoteCoefficient = self->_topicFeedAutofavoritedVoteCoefficient;
    v1617 = -topicFeedAutofavoritedVoteCoefficient;
    if (topicFeedAutofavoritedVoteCoefficient >= 0.0)
      v1617 = self->_topicFeedAutofavoritedVoteCoefficient;
    v1618 = floor(v1617 + 0.5);
    v1619 = (v1617 - v1618) * 1.84467441e19;
    v1615 = 2654435761u * (unint64_t)fmod(v1618, 1.84467441e19);
    if (v1619 >= 0.0)
    {
      if (v1619 > 0.0)
        v1615 += (unint64_t)v1619;
    }
    else
    {
      v1615 -= (unint64_t)fabs(v1619);
    }
  }
  else
  {
    v1615 = 0;
  }
  v1712 = v1615;
  if ((v1405 & 0x20000000) != 0)
  {
    topicFeedCtrWithZeroAutofavorited = self->_topicFeedCtrWithZeroAutofavorited;
    v1622 = -topicFeedCtrWithZeroAutofavorited;
    if (topicFeedCtrWithZeroAutofavorited >= 0.0)
      v1622 = self->_topicFeedCtrWithZeroAutofavorited;
    v1623 = floor(v1622 + 0.5);
    v1624 = (v1622 - v1623) * 1.84467441e19;
    v1620 = 2654435761u * (unint64_t)fmod(v1623, 1.84467441e19);
    if (v1624 >= 0.0)
    {
      if (v1624 > 0.0)
        v1620 += (unint64_t)v1624;
    }
    else
    {
      v1620 -= (unint64_t)fabs(v1624);
    }
  }
  else
  {
    v1620 = 0;
  }
  v1711 = v1620;
  if ((v1405 & 0x400000) != 0)
  {
    topicFeedCtrWithOneAutofavorited = self->_topicFeedCtrWithOneAutofavorited;
    v1627 = -topicFeedCtrWithOneAutofavorited;
    if (topicFeedCtrWithOneAutofavorited >= 0.0)
      v1627 = self->_topicFeedCtrWithOneAutofavorited;
    v1628 = floor(v1627 + 0.5);
    v1629 = (v1627 - v1628) * 1.84467441e19;
    v1625 = 2654435761u * (unint64_t)fmod(v1628, 1.84467441e19);
    if (v1629 >= 0.0)
    {
      if (v1629 > 0.0)
        v1625 += (unint64_t)v1629;
    }
    else
    {
      v1625 -= (unint64_t)fabs(v1629);
    }
  }
  else
  {
    v1625 = 0;
  }
  v1710 = v1625;
  if ((v1405 & 0x8000000) != 0)
  {
    topicFeedCtrWithTwoAutofavorited = self->_topicFeedCtrWithTwoAutofavorited;
    v1632 = -topicFeedCtrWithTwoAutofavorited;
    if (topicFeedCtrWithTwoAutofavorited >= 0.0)
      v1632 = self->_topicFeedCtrWithTwoAutofavorited;
    v1633 = floor(v1632 + 0.5);
    v1634 = (v1632 - v1633) * 1.84467441e19;
    v1630 = 2654435761u * (unint64_t)fmod(v1633, 1.84467441e19);
    if (v1634 >= 0.0)
    {
      if (v1634 > 0.0)
        v1630 += (unint64_t)v1634;
    }
    else
    {
      v1630 -= (unint64_t)fabs(v1634);
    }
  }
  else
  {
    v1630 = 0;
  }
  v1709 = v1630;
  if ((v1405 & 0x2000000) != 0)
  {
    topicFeedCtrWithThreeAutofavorited = self->_topicFeedCtrWithThreeAutofavorited;
    v1637 = -topicFeedCtrWithThreeAutofavorited;
    if (topicFeedCtrWithThreeAutofavorited >= 0.0)
      v1637 = self->_topicFeedCtrWithThreeAutofavorited;
    v1638 = floor(v1637 + 0.5);
    v1639 = (v1637 - v1638) * 1.84467441e19;
    v1635 = 2654435761u * (unint64_t)fmod(v1638, 1.84467441e19);
    if (v1639 >= 0.0)
    {
      if (v1639 > 0.0)
        v1635 += (unint64_t)v1639;
    }
    else
    {
      v1635 -= (unint64_t)fabs(v1639);
    }
  }
  else
  {
    v1635 = 0;
  }
  v1708 = v1635;
  if ((v1405 & 0x200000000) != 0)
  {
    topicFeedDiversificationInitialPenalty = self->_topicFeedDiversificationInitialPenalty;
    v1642 = -topicFeedDiversificationInitialPenalty;
    if (topicFeedDiversificationInitialPenalty >= 0.0)
      v1642 = self->_topicFeedDiversificationInitialPenalty;
    v1643 = floor(v1642 + 0.5);
    v1644 = (v1642 - v1643) * 1.84467441e19;
    v1640 = 2654435761u * (unint64_t)fmod(v1643, 1.84467441e19);
    if (v1644 >= 0.0)
    {
      if (v1644 > 0.0)
        v1640 += (unint64_t)v1644;
    }
    else
    {
      v1640 -= (unint64_t)fabs(v1644);
    }
  }
  else
  {
    v1640 = 0;
  }
  v1707 = v1640;
  v1880 = v827;
  if ((v1405 & 0x400000000) != 0)
  {
    topicFeedDiversificationPenalty = self->_topicFeedDiversificationPenalty;
    v1647 = -topicFeedDiversificationPenalty;
    if (topicFeedDiversificationPenalty >= 0.0)
      v1647 = self->_topicFeedDiversificationPenalty;
    v1648 = floor(v1647 + 0.5);
    v1649 = (v1647 - v1648) * 1.84467441e19;
    v1645 = 2654435761u * (unint64_t)fmod(v1648, 1.84467441e19);
    if (v1649 >= 0.0)
    {
      if (v1649 > 0.0)
        v1645 += (unint64_t)v1649;
    }
    else
    {
      v1645 -= (unint64_t)fabs(v1649);
    }
  }
  else
  {
    v1645 = 0;
  }
  if ((v1405 & 0x800000000) != 0)
  {
    topicFeedDiversificationPenaltyHalfLife = self->_topicFeedDiversificationPenaltyHalfLife;
    v1652 = -topicFeedDiversificationPenaltyHalfLife;
    if (topicFeedDiversificationPenaltyHalfLife >= 0.0)
      v1652 = self->_topicFeedDiversificationPenaltyHalfLife;
    v1653 = floor(v1652 + 0.5);
    v1654 = (v1652 - v1653) * 1.84467441e19;
    v1650 = 2654435761u * (unint64_t)fmod(v1653, 1.84467441e19);
    if (v1654 >= 0.0)
    {
      if (v1654 > 0.0)
        v1650 += (unint64_t)v1654;
    }
    else
    {
      v1650 -= (unint64_t)fabs(v1654);
    }
  }
  else
  {
    v1650 = 0;
  }
  v1705 = v1650;
  v1748 = v1410;
  v1741 = v1470;
  v1739 = v1440;
  if ((v1405 & 0x8000) != 0)
  {
    topicFeedChannelTopicDiversificationInitialPenalty = self->_topicFeedChannelTopicDiversificationInitialPenalty;
    v1657 = -topicFeedChannelTopicDiversificationInitialPenalty;
    if (topicFeedChannelTopicDiversificationInitialPenalty >= 0.0)
      v1657 = self->_topicFeedChannelTopicDiversificationInitialPenalty;
    v1658 = floor(v1657 + 0.5);
    v1659 = (v1657 - v1658) * 1.84467441e19;
    v1655 = 2654435761u * (unint64_t)fmod(v1658, 1.84467441e19);
    if (v1659 >= 0.0)
    {
      if (v1659 > 0.0)
        v1655 += (unint64_t)v1659;
    }
    else
    {
      v1655 -= (unint64_t)fabs(v1659);
    }
  }
  else
  {
    v1655 = 0;
  }
  v1660 = v1360;
  if ((v1405 & 0x10000) != 0)
  {
    topicFeedChannelTopicDiversificationPenalty = self->_topicFeedChannelTopicDiversificationPenalty;
    v1663 = -topicFeedChannelTopicDiversificationPenalty;
    if (topicFeedChannelTopicDiversificationPenalty >= 0.0)
      v1663 = self->_topicFeedChannelTopicDiversificationPenalty;
    v1664 = floor(v1663 + 0.5);
    v1665 = (v1663 - v1664) * 1.84467441e19;
    v1661 = 2654435761u * (unint64_t)fmod(v1664, 1.84467441e19);
    if (v1665 >= 0.0)
    {
      if (v1665 > 0.0)
        v1661 += (unint64_t)v1665;
    }
    else
    {
      v1661 -= (unint64_t)fabs(v1665);
    }
  }
  else
  {
    v1661 = 0;
  }
  v1666 = v1480;
  v1706 = v1645;
  if ((v1405 & 0x20000) != 0)
  {
    topicFeedChannelTopicDiversificationPenaltyHalfLife = self->_topicFeedChannelTopicDiversificationPenaltyHalfLife;
    v1669 = -topicFeedChannelTopicDiversificationPenaltyHalfLife;
    if (topicFeedChannelTopicDiversificationPenaltyHalfLife >= 0.0)
      v1669 = self->_topicFeedChannelTopicDiversificationPenaltyHalfLife;
    v1670 = floor(v1669 + 0.5);
    v1671 = (v1669 - v1670) * 1.84467441e19;
    v1667 = 2654435761u * (unint64_t)fmod(v1670, 1.84467441e19);
    if (v1671 >= 0.0)
    {
      if (v1671 > 0.0)
        v1667 += (unint64_t)v1671;
    }
    else
    {
      v1667 -= (unint64_t)fabs(v1671);
    }
  }
  else
  {
    v1667 = 0;
  }
  v1672 = v1434;
  if ((v2096 & 0x8000000000000) != 0)
  {
    ctrWithSubscribedChannel = self->_ctrWithSubscribedChannel;
    v1675 = -ctrWithSubscribedChannel;
    if (ctrWithSubscribedChannel >= 0.0)
      v1675 = self->_ctrWithSubscribedChannel;
    v1676 = floor(v1675 + 0.5);
    v1677 = (v1675 - v1676) * 1.84467441e19;
    v1673 = 2654435761u * (unint64_t)fmod(v1676, 1.84467441e19);
    if (v1677 >= 0.0)
    {
      if (v1677 > 0.0)
        v1673 += (unint64_t)v1677;
    }
    else
    {
      v1673 -= (unint64_t)fabs(v1677);
    }
  }
  else
  {
    v1673 = 0;
  }
  if ((v1405 & 0x1000000) == 0)
  {
    v1678 = 0;
LABEL_2779:
    v1684 = v2094;
    v1683 = v2095;
    v1686 = v2092;
    v1685 = v2093;
    v1688 = v2090;
    v1687 = v2091;
    v1689 = v2088;
    v1690 = v2089;
    v1692 = v2086;
    v1691 = v2087;
    v1694 = v2084;
    v1693 = v2085;
    v1696 = v2082;
    v1695 = v2083;
    v1698 = v2080;
    v1697 = v2081;
    v1700 = v2078;
    v1699 = v2079;
    goto LABEL_2780;
  }
  topicFeedCtrWithSubscribedChannel = self->_topicFeedCtrWithSubscribedChannel;
  v1680 = -topicFeedCtrWithSubscribedChannel;
  if (topicFeedCtrWithSubscribedChannel >= 0.0)
    v1680 = self->_topicFeedCtrWithSubscribedChannel;
  v1681 = floor(v1680 + 0.5);
  v1682 = (v1680 - v1681) * 1.84467441e19;
  v1678 = 2654435761u * (unint64_t)fmod(v1681, 1.84467441e19);
  if (v1682 < 0.0)
  {
    v1678 -= (unint64_t)fabs(v1682);
    goto LABEL_2779;
  }
  v1684 = v2094;
  v1683 = v2095;
  v1686 = v2092;
  v1685 = v2093;
  v1688 = v2090;
  v1687 = v2091;
  v1689 = v2088;
  v1690 = v2089;
  v1692 = v2086;
  v1691 = v2087;
  v1694 = v2084;
  v1693 = v2085;
  v1696 = v2082;
  v1695 = v2083;
  v1698 = v2080;
  v1697 = v2081;
  v1700 = v2078;
  v1699 = v2079;
  if (v1682 > 0.0)
    v1678 += (unint64_t)v1682;
LABEL_2780:
  v1701 = v2074 ^ v2075 ^ v1683 ^ v1684 ^ v2073 ^ v2072 ^ v1685 ^ v1686 ^ v1687 ^ v2071 ^ v2070 ^ v1688 ^ v1690 ^ v1689 ^ v1691 ^ v1692 ^ v1693 ^ v1694 ^ v1695 ^ v1696 ^ v1697 ^ v1698 ^ v1699 ^ v1700 ^ v2069 ^ v2068 ^ v2067 ^ v2066 ^ v2065 ^ v2064 ^ v2063 ^ v2062 ^ v2061 ^ v2060 ^ v2059 ^ v2058 ^ v2057 ^ v2056 ^ v2055 ^ v2054 ^ v2053 ^ v2052 ^ v2051 ^ v2050 ^ v2049 ^ v2048 ^ v2047 ^ v2046 ^ v2045 ^ v2044 ^ v2043 ^ v2042 ^ v2041 ^ v2040 ^ v2039 ^ v2038 ^ v2037 ^ v2036 ^ v2035 ^ v2034 ^ v2033 ^ v2032 ^ v2031 ^ v2030 ^ v2029 ^ v2028 ^ v2027 ^ v2026 ^ v2025 ^ v2024 ^ v2023 ^ v2022 ^ v2021 ^ v2020 ^ v2019 ^ v2018 ^ v2017 ^ v2016 ^ v2015 ^ v2014 ^ v2013 ^ v2012 ^ v2011 ^ v2010 ^ v2009 ^ v2008 ^ v2007 ^ v2006 ^ v2005 ^ v2004 ^ v2003 ^ v2002 ^ v2001 ^ v2000 ^ v1999 ^ v1998 ^ v1997 ^ v1996 ^ v1995 ^ v1994 ^ v1993 ^ v1992 ^ v1991 ^ v1990 ^ v1989 ^ v1988 ^ v1987 ^ v1986 ^ v1985 ^ v1984 ^ v1983 ^ v1982 ^ v1981 ^ v1980 ^ v1979 ^ v1978 ^ v1977 ^ v1976 ^ v1975 ^ v1974 ^ v1973;
  v1702 = v1701 ^ v1972 ^ v1971 ^ v1970 ^ v1969 ^ v1968 ^ v1967 ^ v1966 ^ v1965 ^ v1964 ^ v1963 ^ v1962 ^ v1961 ^ v1960 ^ v1959 ^ v1958 ^ v1957 ^ v1956 ^ v1955 ^ v1954 ^ v1953 ^ v1952 ^ v1951 ^ v1950 ^ v1949 ^ v1948 ^ v1947 ^ v1946 ^ v1945 ^ v1944 ^ v1943 ^ v1942 ^ v1941 ^ v1940 ^ v1939 ^ v1938 ^ v1937 ^ v1936 ^ v1935 ^ v1934 ^ v1933 ^ v1932 ^ v1931 ^ v1930 ^ v1929 ^ v1928 ^ v1927 ^ v1926 ^ v1925 ^ v1924 ^ v1923 ^ v1922 ^ v1921 ^ v1920 ^ v1919 ^ v1918 ^ v1917 ^ v1916 ^ v1915 ^ v1914 ^ v1913 ^ v1912 ^ v1911 ^ v1910 ^ v1909 ^ v1908 ^ v1907 ^ v1906 ^ v1905 ^ v1904 ^ v1903 ^ v1902 ^ v1901 ^ v1900 ^ v1899 ^ v1898 ^ v1897 ^ v1896 ^ v1895 ^ v1894 ^ v1893 ^ v1892 ^ v1891 ^ v1890 ^ v1889 ^ v1888 ^ v1887 ^ v1886 ^ v1885 ^ v1884 ^ v1883 ^ v1882 ^ v1881 ^ v1880 ^ v1878 ^ v1877 ^ v1876 ^ v1875 ^ v1874 ^ v1873 ^ v1872 ^ v1871 ^ v1870 ^ v1869 ^ v1868 ^ v1867 ^ v1866 ^ v1865 ^ v1864 ^ v1863 ^ v1862 ^ v2077;
  v1703 = v1702 ^ v1861 ^ v1860 ^ v1859 ^ v1858 ^ v1857 ^ v1856 ^ v1855 ^ v1854 ^ v1853 ^ v1852 ^ v1851 ^ v1850 ^ v1849 ^ v1848 ^ v1847 ^ v1846 ^ v1845 ^ v1844 ^ v1843 ^ v1842 ^ v1841 ^ v1840 ^ v1839 ^ v1838 ^ v1837 ^ v1836 ^ v1835 ^ v1834 ^ v1833 ^ v1832 ^ v1831 ^ v1830 ^ v1829 ^ v1828 ^ v1827 ^ v1826 ^ v1825 ^ v1824 ^ v1823 ^ v1822 ^ v1821 ^ v1820 ^ v1819 ^ v1818 ^ v1817 ^ v1816 ^ v1815 ^ v1814 ^ v1813 ^ v1812 ^ v1811 ^ v1810 ^ v1809 ^ v1808 ^ v1807 ^ v1806 ^ v1805 ^ v1804 ^ v1803 ^ v1802 ^ v1801 ^ v1800 ^ v1799 ^ v1798 ^ v1797 ^ v1796 ^ v1795 ^ v1794 ^ v1793 ^ v1792 ^ v1791 ^ v1790 ^ v1789 ^ v1788 ^ v1787 ^ v1786 ^ v1785 ^ v1784 ^ v1783 ^ v1782 ^ v1781 ^ v1780 ^ v1779 ^ v1778 ^ v1777 ^ v1776 ^ v1775 ^ v1774 ^ v1773 ^ v1772 ^ v1771 ^ v1770 ^ v1769 ^ v2076 ^ v1768 ^ v1767 ^ v1766 ^ v1765 ^ v1660 ^ v1764 ^ v1763 ^ v1762 ^ v1761 ^ v1760 ^ v1759 ^ v1758 ^ v1757 ^ v1756 ^ v1755 ^ v1754 ^ v1748 ^ v1753 ^ v1752 ^ v1751 ^ v1750 ^ v1749 ^ v1672 ^ v1747 ^ v1739 ^ v1746;
  return v1703 ^ v1745 ^ v1744 ^ v1743 ^ v1742 ^ v1741 ^ v1740 ^ v1666 ^ v1738 ^ v1737 ^ v1736 ^ v1735 ^ v1734 ^ v1733 ^ v1732 ^ v1731 ^ v1730 ^ v1729 ^ v1728 ^ v1727 ^ v1726 ^ v1725 ^ v1724 ^ v1723 ^ v1722 ^ v1721 ^ v1720 ^ v1719 ^ v1718 ^ v1717 ^ v1716 ^ v1715 ^ v1714 ^ v1713 ^ v1712 ^ v1711 ^ v1710 ^ v1709 ^ v1708 ^ v1707 ^ v1706 ^ v1705 ^ v1655 ^ v1661 ^ v1667 ^ v1673 ^ v1678;
}

- (void)mergeFrom:(id)a3
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t j;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  _BYTE v59[128];
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = v4;
  v6 = *((_QWORD *)v4 + 375);
  if ((v6 & 0x8000000000000) != 0)
  {
    self->_treatmentId = *((_QWORD *)v4 + 308);
    *((_QWORD *)&self->_has + 4) |= 0x8000000000000uLL;
    v6 = *((_QWORD *)v4 + 375);
  }
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v11 & 0x2000000000000000) != 0)
  {
    self->_decayFactor = *((double *)v4 + 62);
    *(_QWORD *)&self->_has |= 0x2000000000000000uLL;
    v6 = *((_QWORD *)v4 + 375);
    v7 = *((_QWORD *)v4 + 376);
    v9 = *((_QWORD *)v4 + 373);
    v8 = *((_QWORD *)v4 + 374);
    v11 = *((_QWORD *)v4 + 371);
    v10 = *((_QWORD *)v4 + 372);
    v12 = *((_WORD *)v4 + 1508);
    if ((v11 & 0x2000000000) == 0)
    {
LABEL_5:
      if ((v11 & 0x4000000000) == 0)
        goto LABEL_6;
      goto LABEL_107;
    }
  }
  else if ((v11 & 0x2000000000) == 0)
  {
    goto LABEL_5;
  }
  self->_baselineImpressionPrior = *((double *)v4 + 38);
  *(_QWORD *)&self->_has |= 0x2000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v11 & 0x4000000000) == 0)
  {
LABEL_6:
    if ((v10 & 0x20000) == 0)
      goto LABEL_7;
    goto LABEL_108;
  }
LABEL_107:
  self->_baselineRatePrior = *((double *)v4 + 39);
  *(_QWORD *)&self->_has |= 0x4000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x20000) == 0)
  {
LABEL_7:
    if ((v12 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_109;
  }
LABEL_108:
  self->_featureImpressionPrior = *((double *)v4 + 82);
  *((_QWORD *)&self->_has + 1) |= 0x20000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v12 & 0x40) == 0)
  {
LABEL_8:
    if ((v10 & 0x800000) == 0)
      goto LABEL_9;
    goto LABEL_110;
  }
LABEL_109:
  self->_globalScoreRankingEnabled = *((_BYTE *)v4 + 2960);
  *((_WORD *)&self->_has + 24) |= 0x40u;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x800000) == 0)
  {
LABEL_9:
    if ((v8 & 0x20000000000000) == 0)
      goto LABEL_10;
    goto LABEL_111;
  }
LABEL_110:
  self->_globalScoreBump = *((double *)v4 + 88);
  *((_QWORD *)&self->_has + 1) |= 0x800000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x20000000000000) == 0)
  {
LABEL_10:
    if ((v9 & 0x40000000000) == 0)
      goto LABEL_11;
    goto LABEL_112;
  }
LABEL_111:
  self->_subscriptionVoteCoefficient = *((double *)v4 + 246);
  *((_QWORD *)&self->_has + 3) |= 0x20000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x40000000000) == 0)
  {
LABEL_11:
    if ((v10 & 0x1000000) == 0)
      goto LABEL_12;
    goto LABEL_113;
  }
LABEL_112:
  self->_personalizationCoefficient = *((double *)v4 + 171);
  *((_QWORD *)&self->_has + 2) |= 0x40000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_12:
    if ((v8 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_114;
  }
LABEL_113:
  self->_globalScoreCoefficient = *((double *)v4 + 89);
  *((_QWORD *)&self->_has + 1) |= 0x1000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x10) == 0)
  {
LABEL_13:
    if ((v9 & 0x400000000000000) == 0)
      goto LABEL_14;
    goto LABEL_115;
  }
LABEL_114:
  self->_publisherTopicIdEventCountMinimum = *((_QWORD *)v4 + 197);
  *((_QWORD *)&self->_has + 3) |= 0x10uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x400000000000000) == 0)
  {
LABEL_14:
    if ((v10 & 0x10000000000) == 0)
      goto LABEL_15;
    goto LABEL_116;
  }
LABEL_115:
  self->_presentationImpressionValue = *((double *)v4 + 187);
  *((_QWORD *)&self->_has + 2) |= 0x400000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x10000000000) == 0)
  {
LABEL_15:
    if ((v10 & 0x1000000000000000) == 0)
      goto LABEL_16;
    goto LABEL_117;
  }
LABEL_116:
  self->_heavyClickImpressionValue = *((double *)v4 + 105);
  *((_QWORD *)&self->_has + 1) |= 0x10000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x1000000000000000) == 0)
  {
LABEL_16:
    if ((v8 & 0x10000000000) == 0)
      goto LABEL_17;
    goto LABEL_118;
  }
LABEL_117:
  self->_likeImpressionValue = *((double *)v4 + 125);
  *((_QWORD *)&self->_has + 1) |= 0x1000000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_18;
    goto LABEL_119;
  }
LABEL_118:
  self->_shareImpressionValue = *((double *)v4 + 233);
  *((_QWORD *)&self->_has + 3) |= 0x10000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_18:
    if ((v8 & 0x200000000000) == 0)
      goto LABEL_19;
    goto LABEL_120;
  }
LABEL_119:
  self->_savedImpressionValue = *((double *)v4 + 222);
  *((_QWORD *)&self->_has + 3) |= 0x20000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x200000000000) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0)
      goto LABEL_20;
    goto LABEL_121;
  }
LABEL_120:
  self->_subscribeImpressionValue = *((double *)v4 + 238);
  *((_QWORD *)&self->_has + 3) |= 0x200000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v7 & 0x2000000) == 0)
      goto LABEL_21;
    goto LABEL_122;
  }
LABEL_121:
  self->_tappedImpressionValue = *((double *)v4 + 268);
  *((_QWORD *)&self->_has + 4) |= 0x800uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800000000000000) == 0)
      goto LABEL_22;
    goto LABEL_123;
  }
LABEL_122:
  self->_weakClickImpressionValue = *((double *)v4 + 346);
  *((_QWORD *)&self->_has + 5) |= 0x2000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x800000000000000) == 0)
  {
LABEL_22:
    if ((v7 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_124;
  }
LABEL_123:
  self->_unsubscribeImpressionValue = *((double *)v4 + 316);
  *((_QWORD *)&self->_has + 4) |= 0x800000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x200000) == 0)
  {
LABEL_23:
    if ((v10 & 2) == 0)
      goto LABEL_24;
    goto LABEL_125;
  }
LABEL_124:
  self->_visitImpressionValue = *((double *)v4 + 342);
  *((_QWORD *)&self->_has + 5) |= 0x200000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 2) == 0)
  {
LABEL_24:
    if ((v9 & 0x100000000000000) == 0)
      goto LABEL_25;
    goto LABEL_126;
  }
LABEL_125:
  self->_dislikeImpressionValue = *((double *)v4 + 66);
  *((_QWORD *)&self->_has + 1) |= 2uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x100000000000000) == 0)
  {
LABEL_25:
    if ((v10 & 0x4000000000) == 0)
      goto LABEL_26;
    goto LABEL_127;
  }
LABEL_126:
  self->_presentationClickValue = *((double *)v4 + 185);
  *((_QWORD *)&self->_has + 2) |= 0x100000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x4000000000) == 0)
  {
LABEL_26:
    if ((v10 & 0x400000000000000) == 0)
      goto LABEL_27;
    goto LABEL_128;
  }
LABEL_127:
  self->_heavyClickClickValue = *((double *)v4 + 103);
  *((_QWORD *)&self->_has + 1) |= 0x4000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x400000000000000) == 0)
  {
LABEL_27:
    if ((v8 & 0x4000000000) == 0)
      goto LABEL_28;
    goto LABEL_129;
  }
LABEL_128:
  self->_likeClickValue = *((double *)v4 + 123);
  *((_QWORD *)&self->_has + 1) |= 0x400000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x4000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_130;
  }
LABEL_129:
  self->_shareClickValue = *((double *)v4 + 231);
  *((_QWORD *)&self->_has + 3) |= 0x4000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v8 & 0x80000000000) == 0)
      goto LABEL_30;
    goto LABEL_131;
  }
LABEL_130:
  self->_savedClickValue = *((double *)v4 + 220);
  *((_QWORD *)&self->_has + 3) |= 0x8000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x80000000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x200) == 0)
      goto LABEL_31;
    goto LABEL_132;
  }
LABEL_131:
  self->_subscribeClickValue = *((double *)v4 + 236);
  *((_QWORD *)&self->_has + 3) |= 0x80000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x200) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000) == 0)
      goto LABEL_32;
    goto LABEL_133;
  }
LABEL_132:
  self->_tappedClickValue = *((double *)v4 + 266);
  *((_QWORD *)&self->_has + 4) |= 0x200uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x800000) == 0)
  {
LABEL_32:
    if ((v6 & 0x200000000000000) == 0)
      goto LABEL_33;
    goto LABEL_134;
  }
LABEL_133:
  self->_weakClickClickValue = *((double *)v4 + 344);
  *((_QWORD *)&self->_has + 5) |= 0x800000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x200000000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x80000) == 0)
      goto LABEL_34;
    goto LABEL_135;
  }
LABEL_134:
  self->_unsubscribeClickValue = *((double *)v4 + 314);
  *((_QWORD *)&self->_has + 4) |= 0x200000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x80000) == 0)
  {
LABEL_34:
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_35;
    goto LABEL_136;
  }
LABEL_135:
  self->_visitClickValue = *((double *)v4 + 340);
  *((_QWORD *)&self->_has + 5) |= 0x80000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v11 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v10 & 0x10000000000000) == 0)
      goto LABEL_36;
    goto LABEL_137;
  }
LABEL_136:
  self->_dislikeClickValue = *((double *)v4 + 64);
  *(_QWORD *)&self->_has |= 0x8000000000000000;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x10000000000000) == 0)
  {
LABEL_36:
    if ((v10 & 0x40000000000000) == 0)
      goto LABEL_37;
    goto LABEL_138;
  }
LABEL_137:
  self->_hourlyFlowRateMinimum = *((double *)v4 + 117);
  *((_QWORD *)&self->_has + 1) |= 0x10000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x40000000000000) == 0)
  {
LABEL_37:
    if ((v10 & 0x2000000000000) == 0)
      goto LABEL_38;
    goto LABEL_139;
  }
LABEL_138:
  self->_hourlyFlowRateSubscriptionCountBuffer = *((double *)v4 + 119);
  *((_QWORD *)&self->_has + 1) |= 0x40000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v11 = *((_QWORD *)v4 + 371);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x2000000000000) == 0)
  {
LABEL_38:
    if ((v11 & 0x4000000000000000) == 0)
      goto LABEL_39;
    goto LABEL_140;
  }
LABEL_139:
  self->_hourlyFlowRateDampeningFactor = *((double *)v4 + 114);
  *((_QWORD *)&self->_has + 1) |= 0x2000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((*((_QWORD *)v4 + 371) & 0x4000000000000000) == 0)
  {
LABEL_39:
    if ((v8 & 0x40000000000) == 0)
      goto LABEL_40;
    goto LABEL_141;
  }
LABEL_140:
  self->_democratizationFactor = *((double *)v4 + 63);
  *(_QWORD *)&self->_has |= 0x4000000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x40000000000) == 0)
  {
LABEL_40:
    if ((v10 & 0x40000) == 0)
      goto LABEL_41;
    goto LABEL_142;
  }
LABEL_141:
  self->_sliceTimeInterval = *((_QWORD *)v4 + 235);
  *((_QWORD *)&self->_has + 3) |= 0x40000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x40000) == 0)
  {
LABEL_41:
    if ((v10 & 0x200000) == 0)
      goto LABEL_42;
    goto LABEL_143;
  }
LABEL_142:
  self->_flowRateDampeningSliceCount = *((_QWORD *)v4 + 83);
  *((_QWORD *)&self->_has + 1) |= 0x40000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x200000) == 0)
  {
LABEL_42:
    if ((v10 & 0x2000000000) == 0)
      goto LABEL_43;
    goto LABEL_144;
  }
LABEL_143:
  self->_flowRateMinimumDampeningFactor = *((double *)v4 + 86);
  *((_QWORD *)&self->_has + 1) |= 0x200000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x2000000000) == 0)
  {
LABEL_43:
    if ((v10 & 0x10) == 0)
      goto LABEL_44;
    goto LABEL_145;
  }
LABEL_144:
  self->_halfLifeCoefficient = *((double *)v4 + 102);
  *((_QWORD *)&self->_has + 1) |= 0x2000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x10) == 0)
  {
LABEL_44:
    if ((v10 & 0x40000000000) == 0)
      goto LABEL_45;
    goto LABEL_146;
  }
LABEL_145:
  self->_diversificationPenalty = *((double *)v4 + 69);
  *((_QWORD *)&self->_has + 1) |= 0x10uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x40000000000) == 0)
  {
LABEL_45:
    if ((v8 & 0x8000000000000) == 0)
      goto LABEL_46;
    goto LABEL_147;
  }
LABEL_146:
  self->_heavyClickMinimumDuration = *((double *)v4 + 107);
  *((_QWORD *)&self->_has + 1) |= 0x40000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x8000000000000) == 0)
  {
LABEL_46:
    if ((v8 & 0x2000000000000) == 0)
      goto LABEL_47;
    goto LABEL_148;
  }
LABEL_147:
  self->_subscriptionRelatedImpressionValue = *((double *)v4 + 244);
  *((_QWORD *)&self->_has + 3) |= 0x8000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x2000000000000) == 0)
  {
LABEL_47:
    if ((v10 & 0x20000000000000) == 0)
      goto LABEL_48;
    goto LABEL_149;
  }
LABEL_148:
  self->_subscriptionRelatedClickValue = *((double *)v4 + 242);
  *((_QWORD *)&self->_has + 3) |= 0x2000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x20000000000000) == 0)
  {
LABEL_48:
    if ((v10 & 0x10000) == 0)
      goto LABEL_49;
    goto LABEL_150;
  }
LABEL_149:
  self->_hourlyFlowRatePerSubscription = *((double *)v4 + 118);
  *((_QWORD *)&self->_has + 1) |= 0x20000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x10000) == 0)
  {
LABEL_49:
    if ((v10 & 0x100000) == 0)
      goto LABEL_50;
    goto LABEL_151;
  }
LABEL_150:
  self->_extraHeadlinesToShowTheUser = *((_QWORD *)v4 + 81);
  *((_QWORD *)&self->_has + 1) |= 0x10000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x100000) == 0)
  {
LABEL_50:
    if ((v10 & 0x80000) == 0)
      goto LABEL_51;
    goto LABEL_152;
  }
LABEL_151:
  self->_flowRateDegreeOfDynamism = *((double *)v4 + 85);
  *((_QWORD *)&self->_has + 1) |= 0x100000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x80000) == 0)
  {
LABEL_51:
    if ((v10 & 0x400000) == 0)
      goto LABEL_52;
    goto LABEL_153;
  }
LABEL_152:
  self->_flowRateDecayFactor = *((double *)v4 + 84);
  *((_QWORD *)&self->_has + 1) |= 0x80000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x400000) == 0)
  {
LABEL_52:
    if ((v9 & 0x800000000000000) == 0)
      goto LABEL_53;
    goto LABEL_154;
  }
LABEL_153:
  self->_flowRatePriorWeight = *((double *)v4 + 87);
  *((_QWORD *)&self->_has + 1) |= 0x400000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x800000000000000) == 0)
  {
LABEL_53:
    if ((v10 & 0x20000000000) == 0)
      goto LABEL_54;
    goto LABEL_155;
  }
LABEL_154:
  self->_presentationImpressionValueBaseline = *((double *)v4 + 188);
  *((_QWORD *)&self->_has + 2) |= 0x800000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x20000000000) == 0)
  {
LABEL_54:
    if ((v10 & 0x2000000000000000) == 0)
      goto LABEL_55;
    goto LABEL_156;
  }
LABEL_155:
  self->_heavyClickImpressionValueBaseline = *((double *)v4 + 106);
  *((_QWORD *)&self->_has + 1) |= 0x20000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x2000000000000000) == 0)
  {
LABEL_55:
    if ((v8 & 0x20000000000) == 0)
      goto LABEL_56;
    goto LABEL_157;
  }
LABEL_156:
  self->_likeImpressionValueBaseline = *((double *)v4 + 126);
  *((_QWORD *)&self->_has + 1) |= 0x2000000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v8 & 0x40000000) == 0)
      goto LABEL_57;
    goto LABEL_158;
  }
LABEL_157:
  self->_shareImpressionValueBaseline = *((double *)v4 + 234);
  *((_QWORD *)&self->_has + 3) |= 0x20000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v8 & 0x400000000000) == 0)
      goto LABEL_58;
    goto LABEL_159;
  }
LABEL_158:
  self->_savedImpressionValueBaseline = *((double *)v4 + 223);
  *((_QWORD *)&self->_has + 3) |= 0x40000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x400000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_160;
  }
LABEL_159:
  self->_subscribeImpressionValueBaseline = *((double *)v4 + 239);
  *((_QWORD *)&self->_has + 3) |= 0x400000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x1000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0)
      goto LABEL_60;
    goto LABEL_161;
  }
LABEL_160:
  self->_tappedImpressionValueBaseline = *((double *)v4 + 269);
  *((_QWORD *)&self->_has + 4) |= 0x1000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000000000000) == 0)
      goto LABEL_61;
    goto LABEL_162;
  }
LABEL_161:
  self->_weakClickImpressionValueBaseline = *((double *)v4 + 347);
  *((_QWORD *)&self->_has + 5) |= 0x4000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x400000) == 0)
      goto LABEL_62;
    goto LABEL_163;
  }
LABEL_162:
  self->_unsubscribeImpressionValueBaseline = *((double *)v4 + 317);
  *((_QWORD *)&self->_has + 4) |= 0x1000000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x400000) == 0)
  {
LABEL_62:
    if ((v10 & 4) == 0)
      goto LABEL_63;
    goto LABEL_164;
  }
LABEL_163:
  self->_visitImpressionValueBaseline = *((double *)v4 + 343);
  *((_QWORD *)&self->_has + 5) |= 0x400000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 4) == 0)
  {
LABEL_63:
    if ((v8 & 0x10000000000000) == 0)
      goto LABEL_64;
    goto LABEL_165;
  }
LABEL_164:
  self->_dislikeImpressionValueBaseline = *((double *)v4 + 67);
  *((_QWORD *)&self->_has + 1) |= 4uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x10000000000000) == 0)
  {
LABEL_64:
    if ((v9 & 0x200000000000000) == 0)
      goto LABEL_65;
    goto LABEL_166;
  }
LABEL_165:
  self->_subscriptionRelatedImpressionValueBaseline = *((double *)v4 + 245);
  *((_QWORD *)&self->_has + 3) |= 0x10000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x200000000000000) == 0)
  {
LABEL_65:
    if ((v10 & 0x8000000000) == 0)
      goto LABEL_66;
    goto LABEL_167;
  }
LABEL_166:
  self->_presentationClickValueBaseline = *((double *)v4 + 186);
  *((_QWORD *)&self->_has + 2) |= 0x200000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v10 & 0x800000000000000) == 0)
      goto LABEL_67;
    goto LABEL_168;
  }
LABEL_167:
  self->_heavyClickClickValueBaseline = *((double *)v4 + 104);
  *((_QWORD *)&self->_has + 1) |= 0x8000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x800000000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x8000000000) == 0)
      goto LABEL_68;
    goto LABEL_169;
  }
LABEL_168:
  self->_likeClickValueBaseline = *((double *)v4 + 124);
  *((_QWORD *)&self->_has + 1) |= 0x800000000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x8000000000) == 0)
  {
LABEL_68:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_69;
    goto LABEL_170;
  }
LABEL_169:
  self->_shareClickValueBaseline = *((double *)v4 + 232);
  *((_QWORD *)&self->_has + 3) |= 0x8000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_69:
    if ((v8 & 0x100000000000) == 0)
      goto LABEL_70;
    goto LABEL_171;
  }
LABEL_170:
  self->_savedClickValueBaseline = *((double *)v4 + 221);
  *((_QWORD *)&self->_has + 3) |= 0x10000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x400) == 0)
      goto LABEL_71;
    goto LABEL_172;
  }
LABEL_171:
  self->_subscribeClickValueBaseline = *((double *)v4 + 237);
  *((_QWORD *)&self->_has + 3) |= 0x100000000000uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v6 & 0x400) == 0)
  {
LABEL_71:
    if ((v7 & 0x1000000) == 0)
      goto LABEL_72;
    goto LABEL_173;
  }
LABEL_172:
  self->_tappedClickValueBaseline = *((double *)v4 + 267);
  *((_QWORD *)&self->_has + 4) |= 0x400uLL;
  v6 = *((_QWORD *)v4 + 375);
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x400000000000000) == 0)
      goto LABEL_73;
    goto LABEL_174;
  }
LABEL_173:
  self->_weakClickClickValueBaseline = *((double *)v4 + 345);
  *((_QWORD *)&self->_has + 5) |= 0x1000000uLL;
  v7 = *((_QWORD *)v4 + 376);
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((*((_QWORD *)v4 + 375) & 0x400000000000000) == 0)
  {
LABEL_73:
    if ((v7 & 0x100000) == 0)
      goto LABEL_74;
    goto LABEL_175;
  }
LABEL_174:
  self->_unsubscribeClickValueBaseline = *((double *)v4 + 315);
  *((_QWORD *)&self->_has + 4) |= 0x400000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((*((_QWORD *)v4 + 376) & 0x100000) == 0)
  {
LABEL_74:
    if ((v10 & 1) == 0)
      goto LABEL_75;
    goto LABEL_176;
  }
LABEL_175:
  self->_visitClickValueBaseline = *((double *)v4 + 341);
  *((_QWORD *)&self->_has + 5) |= 0x100000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 1) == 0)
  {
LABEL_75:
    if ((v8 & 0x4000000000000) == 0)
      goto LABEL_76;
    goto LABEL_177;
  }
LABEL_176:
  self->_dislikeClickValueBaseline = *((double *)v4 + 65);
  *((_QWORD *)&self->_has + 1) |= 1uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v10 & 0x100) == 0)
      goto LABEL_77;
    goto LABEL_178;
  }
LABEL_177:
  self->_subscriptionRelatedClickValueBaseline = *((double *)v4 + 243);
  *((_QWORD *)&self->_has + 3) |= 0x4000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x100) == 0)
  {
LABEL_77:
    if ((v10 & 0x40) == 0)
      goto LABEL_78;
    goto LABEL_179;
  }
LABEL_178:
  self->_existingSubscriptionImpressionValue = *((double *)v4 + 73);
  *((_QWORD *)&self->_has + 1) |= 0x100uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x40) == 0)
  {
LABEL_78:
    if ((v10 & 0x200) == 0)
      goto LABEL_79;
    goto LABEL_180;
  }
LABEL_179:
  self->_existingSubscriptionClickValue = *((double *)v4 + 71);
  *((_QWORD *)&self->_has + 1) |= 0x40uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x200) == 0)
  {
LABEL_79:
    if ((v10 & 0x80) == 0)
      goto LABEL_80;
    goto LABEL_181;
  }
LABEL_180:
  self->_existingSubscriptionImpressionValueBaseline = *((double *)v4 + 74);
  *((_QWORD *)&self->_has + 1) |= 0x200uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x80) == 0)
  {
LABEL_80:
    if ((v10 & 0x1000) == 0)
      goto LABEL_81;
    goto LABEL_182;
  }
LABEL_181:
  self->_existingSubscriptionClickValueBaseline = *((double *)v4 + 72);
  *((_QWORD *)&self->_has + 1) |= 0x80uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x1000) == 0)
  {
LABEL_81:
    if ((v10 & 0x400) == 0)
      goto LABEL_82;
    goto LABEL_183;
  }
LABEL_182:
  self->_existingSubscriptionRelatedImpressionValue = *((double *)v4 + 77);
  *((_QWORD *)&self->_has + 1) |= 0x1000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x400) == 0)
  {
LABEL_82:
    if ((v10 & 0x2000) == 0)
      goto LABEL_83;
    goto LABEL_184;
  }
LABEL_183:
  self->_existingSubscriptionRelatedClickValue = *((double *)v4 + 75);
  *((_QWORD *)&self->_has + 1) |= 0x400uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x2000) == 0)
  {
LABEL_83:
    if ((v10 & 0x800) == 0)
      goto LABEL_84;
    goto LABEL_185;
  }
LABEL_184:
  self->_existingSubscriptionRelatedImpressionValueBaseline = *((double *)v4 + 78);
  *((_QWORD *)&self->_has + 1) |= 0x2000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x800) == 0)
  {
LABEL_84:
    if ((v10 & 0x8000000) == 0)
      goto LABEL_85;
    goto LABEL_186;
  }
LABEL_185:
  self->_existingSubscriptionRelatedClickValueBaseline = *((double *)v4 + 76);
  *((_QWORD *)&self->_has + 1) |= 0x800uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_85:
    if ((v10 & 0x4000000000000) == 0)
      goto LABEL_86;
    goto LABEL_187;
  }
LABEL_186:
  self->_globalScoreStretchingFactor = *((double *)v4 + 92);
  *((_QWORD *)&self->_has + 1) |= 0x8000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x4000000000000) == 0)
  {
LABEL_86:
    if ((v10 & 0x1000000000000) == 0)
      goto LABEL_87;
    goto LABEL_188;
  }
LABEL_187:
  self->_hourlyFlowRateFloor = *((double *)v4 + 115);
  *((_QWORD *)&self->_has + 1) |= 0x4000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v10 & 0x1000000000000) == 0)
  {
LABEL_87:
    if ((v8 & 0x4000000) == 0)
      goto LABEL_88;
    goto LABEL_189;
  }
LABEL_188:
  self->_hourlyFlowRateCeiling = *((double *)v4 + 113);
  *((_QWORD *)&self->_has + 1) |= 0x1000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_88:
    if ((v9 & 0x4000000000000000) == 0)
      goto LABEL_89;
    goto LABEL_190;
  }
LABEL_189:
  self->_saturatedSubscriptionCountFactor = *((double *)v4 + 219);
  *((_QWORD *)&self->_has + 3) |= 0x4000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  v12 = *((_WORD *)v4 + 1508);
  if ((v9 & 0x4000000000000000) == 0)
  {
LABEL_89:
    if ((v12 & 0x200) == 0)
      goto LABEL_90;
    goto LABEL_191;
  }
LABEL_190:
  self->_publisherDiversificationPenalty = *((double *)v4 + 191);
  *((_QWORD *)&self->_has + 2) |= 0x4000000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  if ((*((_WORD *)v4 + 1508) & 0x200) == 0)
  {
LABEL_90:
    if ((v10 & 0x400000000000) == 0)
      goto LABEL_91;
    goto LABEL_192;
  }
LABEL_191:
  self->_hardAgeBeforePublisherDiversification = *((_BYTE *)v4 + 2963);
  *((_WORD *)&self->_has + 24) |= 0x200u;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  if ((v10 & 0x400000000000) == 0)
  {
LABEL_91:
    if ((v10 & 0x800000000000) == 0)
      goto LABEL_92;
    goto LABEL_193;
  }
LABEL_192:
  self->_hourlyFlowRateAlpha = *((double *)v4 + 111);
  *((_QWORD *)&self->_has + 1) |= 0x400000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  v10 = *((_QWORD *)v4 + 372);
  if ((v10 & 0x800000000000) == 0)
  {
LABEL_92:
    if ((v10 & 0x8000000000000) == 0)
      goto LABEL_93;
    goto LABEL_194;
  }
LABEL_193:
  self->_hourlyFlowRateBeta = *((double *)v4 + 112);
  *((_QWORD *)&self->_has + 1) |= 0x800000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((*((_QWORD *)v4 + 372) & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v8 & 0x2000) == 0)
      goto LABEL_94;
    goto LABEL_195;
  }
LABEL_194:
  self->_hourlyFlowRateGamma = *((double *)v4 + 116);
  *((_QWORD *)&self->_has + 1) |= 0x8000000000000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x2000) == 0)
  {
LABEL_94:
    if ((v8 & 0x800) == 0)
      goto LABEL_95;
    goto LABEL_196;
  }
LABEL_195:
  self->_recommendationPresentationFeedImpressionValue = *((double *)v4 + 206);
  *((_QWORD *)&self->_has + 3) |= 0x2000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x800) == 0)
  {
LABEL_95:
    if ((v8 & 0x200) == 0)
      goto LABEL_96;
    goto LABEL_197;
  }
LABEL_196:
  self->_recommendationPresentationFeedClickValue = *((double *)v4 + 204);
  *((_QWORD *)&self->_has + 3) |= 0x800uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x200) == 0)
  {
LABEL_96:
    if ((v8 & 0x80) == 0)
      goto LABEL_97;
    goto LABEL_198;
  }
LABEL_197:
  self->_recommendationPresentationExploreImpressionValue = *((double *)v4 + 202);
  *((_QWORD *)&self->_has + 3) |= 0x200uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x80) == 0)
  {
LABEL_97:
    if ((v8 & 0x4000) == 0)
      goto LABEL_98;
    goto LABEL_199;
  }
LABEL_198:
  self->_recommendationPresentationExploreClickValue = *((double *)v4 + 200);
  *((_QWORD *)&self->_has + 3) |= 0x80uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x4000) == 0)
  {
LABEL_98:
    if ((v8 & 0x1000) == 0)
      goto LABEL_99;
    goto LABEL_200;
  }
LABEL_199:
  self->_recommendationPresentationFeedImpressionValueBaseline = *((double *)v4 + 207);
  *((_QWORD *)&self->_has + 3) |= 0x4000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x1000) == 0)
  {
LABEL_99:
    if ((v8 & 0x400) == 0)
      goto LABEL_100;
    goto LABEL_201;
  }
LABEL_200:
  self->_recommendationPresentationFeedClickValueBaseline = *((double *)v4 + 205);
  *((_QWORD *)&self->_has + 3) |= 0x1000uLL;
  v9 = *((_QWORD *)v4 + 373);
  v8 = *((_QWORD *)v4 + 374);
  if ((v8 & 0x400) == 0)
  {
LABEL_100:
    if ((v8 & 0x100) == 0)
      goto LABEL_101;
    goto LABEL_202;
  }
LABEL_201:
  self->_recommendationPresentationExploreImpressionValueBaseline = *((double *)v4 + 203);
  *((_QWORD *)&self->_has + 3) |= 0x400uLL;
  v9 = *((_QWORD *)v4 + 373);
  if ((*((_QWORD *)v4 + 374) & 0x100) == 0)
  {
LABEL_101:
    if ((v9 & 0x40000000000000) == 0)
      goto LABEL_103;
    goto LABEL_102;
  }
LABEL_202:
  self->_recommendationPresentationExploreClickValueBaseline = *((double *)v4 + 201);
  *((_QWORD *)&self->_has + 3) |= 0x100uLL;
  if ((*((_QWORD *)v4 + 373) & 0x40000000000000) != 0)
  {
LABEL_102:
    self->_premiumSubscriptionActivationImpressionValue = *((double *)v4 + 183);
    *((_QWORD *)&self->_has + 2) |= 0x40000000000000uLL;
  }
LABEL_103:
  v13 = *((_QWORD *)v4 + 373);
  if ((v13 & 0x10000000000000) != 0)
  {
    self->_premiumSubscriptionActivationClickValue = *((double *)v4 + 181);
    *((_QWORD *)&self->_has + 2) |= 0x10000000000000uLL;
    v14 = *((_QWORD *)v4 + 375);
    v15 = *((_QWORD *)v4 + 376);
    v13 = *((_QWORD *)v4 + 373);
  }
  else
  {
    v14 = *((_QWORD *)v4 + 375);
    v15 = *((_QWORD *)v4 + 376);
  }
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x80000000000000) != 0)
  {
    self->_premiumSubscriptionActivationImpressionValueBaseline = *((double *)v4 + 184);
    *((_QWORD *)&self->_has + 2) |= 0x80000000000000uLL;
    v14 = *((_QWORD *)v4 + 375);
    v15 = *((_QWORD *)v4 + 376);
    v13 = *((_QWORD *)v4 + 373);
    v16 = *((_QWORD *)v4 + 374);
    v18 = *((_QWORD *)v4 + 371);
    v17 = *((_QWORD *)v4 + 372);
    v19 = *((_WORD *)v4 + 1508);
    if ((v13 & 0x20000000000000) == 0)
    {
LABEL_207:
      if ((v17 & 0x4000000000000000) == 0)
        goto LABEL_208;
      goto LABEL_309;
    }
  }
  else if ((v13 & 0x20000000000000) == 0)
  {
    goto LABEL_207;
  }
  self->_premiumSubscriptionActivationClickValueBaseline = *((double *)v4 + 182);
  *((_QWORD *)&self->_has + 2) |= 0x20000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x4000000000000000) == 0)
  {
LABEL_208:
    if ((v13 & 0x400) == 0)
      goto LABEL_209;
    goto LABEL_310;
  }
LABEL_309:
  self->_lowQualityArticleRatio = *((double *)v4 + 127);
  *((_QWORD *)&self->_has + 1) |= 0x4000000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x400) == 0)
  {
LABEL_209:
    if ((v13 & 4) == 0)
      goto LABEL_210;
    goto LABEL_311;
  }
LABEL_310:
  self->_minClusterSize = *((_QWORD *)v4 + 139);
  *((_QWORD *)&self->_has + 2) |= 0x400uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 4) == 0)
  {
LABEL_210:
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_211;
    goto LABEL_312;
  }
LABEL_311:
  self->_maxClusterSize = *((_QWORD *)v4 + 131);
  *((_QWORD *)&self->_has + 2) |= 4uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x8000000000000000) == 0)
  {
LABEL_211:
    if ((v17 & 0x80000000000) == 0)
      goto LABEL_212;
    goto LABEL_313;
  }
LABEL_312:
  self->_maxArticleCombos = *((_QWORD *)v4 + 128);
  *((_QWORD *)&self->_has + 1) |= 0x8000000000000000;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x80000000000) == 0)
  {
LABEL_212:
    if ((v16 & 0x400000000) == 0)
      goto LABEL_213;
    goto LABEL_314;
  }
LABEL_313:
  self->_heuristicSampleSize = *((_QWORD *)v4 + 108);
  *((_QWORD *)&self->_has + 1) |= 0x80000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x400000000) == 0)
  {
LABEL_213:
    if ((v16 & 0x80000000) == 0)
      goto LABEL_214;
    goto LABEL_315;
  }
LABEL_314:
  self->_searchBranchMultiplier = *((_QWORD *)v4 + 227);
  *((_QWORD *)&self->_has + 3) |= 0x400000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x80000000) == 0)
  {
LABEL_214:
    if ((v16 & 0x2000000000) == 0)
      goto LABEL_215;
    goto LABEL_316;
  }
LABEL_315:
  self->_searchBranchDecay = *((double *)v4 + 224);
  *((_QWORD *)&self->_has + 3) |= 0x80000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x2000000000) == 0)
  {
LABEL_215:
    if ((v19 & 2) == 0)
      goto LABEL_216;
    goto LABEL_317;
  }
LABEL_316:
  self->_searchTimeLimit = *((double *)v4 + 230);
  *((_QWORD *)&self->_has + 3) |= 0x2000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 2) == 0)
  {
LABEL_216:
    if ((v15 & 0x400000000000000) == 0)
      goto LABEL_217;
    goto LABEL_318;
  }
LABEL_317:
  self->_tagOrder = *((_DWORD *)v4 + 738);
  *((_WORD *)&self->_has + 24) |= 2u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x400000000000000) == 0)
  {
LABEL_217:
    if ((v15 & 0x20000000000) == 0)
      goto LABEL_218;
    goto LABEL_319;
  }
LABEL_318:
  self->_moveOrder = *((_DWORD *)v4 + 727);
  *((_QWORD *)&self->_has + 5) |= 0x400000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x20000000000) == 0)
  {
LABEL_218:
    if ((v15 & 0x4000000000) == 0)
      goto LABEL_219;
    goto LABEL_320;
  }
LABEL_319:
  self->_heuristicOrder = *((_DWORD *)v4 + 710);
  *((_QWORD *)&self->_has + 5) |= 0x20000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x4000000000) == 0)
  {
LABEL_219:
    if ((v15 & 0x10000000000000) == 0)
      goto LABEL_220;
    goto LABEL_321;
  }
LABEL_320:
  self->_heuristicOption = *((_DWORD *)v4 + 707);
  *((_QWORD *)&self->_has + 5) |= 0x4000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x10000000000000) == 0)
  {
LABEL_220:
    if ((v15 & 0x100000000000) == 0)
      goto LABEL_221;
    goto LABEL_322;
  }
LABEL_321:
  self->_minClusterSizeIPhone = *((_DWORD *)v4 + 721);
  *((_QWORD *)&self->_has + 5) |= 0x10000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x100000000000) == 0)
  {
LABEL_221:
    if ((v15 & 0x100000000000000) == 0)
      goto LABEL_222;
    goto LABEL_323;
  }
LABEL_322:
  self->_maxClusterSizeIPhone = *((_DWORD *)v4 + 713);
  *((_QWORD *)&self->_has + 5) |= 0x100000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x100000000000000) == 0)
  {
LABEL_222:
    if ((v15 & 0x1000000000000) == 0)
      goto LABEL_223;
    goto LABEL_324;
  }
LABEL_323:
  self->_minIdealClusterSizeIPhone = *((_DWORD *)v4 + 725);
  *((_QWORD *)&self->_has + 5) |= 0x100000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x1000000000000) == 0)
  {
LABEL_223:
    if ((v15 & 0x4000000000000) == 0)
      goto LABEL_224;
    goto LABEL_325;
  }
LABEL_324:
  self->_maxIdealClusterSizeIPhone = *((_DWORD *)v4 + 717);
  *((_QWORD *)&self->_has + 5) |= 0x1000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x4000000000000) == 0)
  {
LABEL_224:
    if ((v15 & 0x40000000000) == 0)
      goto LABEL_225;
    goto LABEL_326;
  }
LABEL_325:
  self->_minClusterSizeIPad = *((_DWORD *)v4 + 719);
  *((_QWORD *)&self->_has + 5) |= 0x4000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x40000000000) == 0)
  {
LABEL_225:
    if ((v15 & 0x40000000000000) == 0)
      goto LABEL_226;
    goto LABEL_327;
  }
LABEL_326:
  self->_maxClusterSizeIPad = *((_DWORD *)v4 + 711);
  *((_QWORD *)&self->_has + 5) |= 0x40000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x40000000000000) == 0)
  {
LABEL_226:
    if ((v15 & 0x400000000000) == 0)
      goto LABEL_227;
    goto LABEL_328;
  }
LABEL_327:
  self->_minIdealClusterSizeIPad = *((_DWORD *)v4 + 723);
  *((_QWORD *)&self->_has + 5) |= 0x40000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x400000000000) == 0)
  {
LABEL_227:
    if ((v13 & 2) == 0)
      goto LABEL_228;
    goto LABEL_329;
  }
LABEL_328:
  self->_maxIdealClusterSizeIPad = *((_DWORD *)v4 + 715);
  *((_QWORD *)&self->_has + 5) |= 0x400000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 2) == 0)
  {
LABEL_228:
    if ((v13 & 1) == 0)
      goto LABEL_229;
    goto LABEL_330;
  }
LABEL_329:
  self->_maxArticleCombosIPhone = *((_QWORD *)v4 + 130);
  *((_QWORD *)&self->_has + 2) |= 2uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 1) == 0)
  {
LABEL_229:
    if ((v17 & 0x200000000000) == 0)
      goto LABEL_230;
    goto LABEL_331;
  }
LABEL_330:
  self->_maxArticleCombosIPad = *((_QWORD *)v4 + 129);
  *((_QWORD *)&self->_has + 2) |= 1uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x200000000000) == 0)
  {
LABEL_230:
    if ((v17 & 0x100000000000) == 0)
      goto LABEL_231;
    goto LABEL_332;
  }
LABEL_331:
  self->_heuristicSampleSizeIPhone = *((_QWORD *)v4 + 110);
  *((_QWORD *)&self->_has + 1) |= 0x200000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x100000000000) == 0)
  {
LABEL_231:
    if ((v16 & 0x1000000000) == 0)
      goto LABEL_232;
    goto LABEL_333;
  }
LABEL_332:
  self->_heuristicSampleSizeIPad = *((_QWORD *)v4 + 109);
  *((_QWORD *)&self->_has + 1) |= 0x100000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x1000000000) == 0)
  {
LABEL_232:
    if ((v16 & 0x800000000) == 0)
      goto LABEL_233;
    goto LABEL_334;
  }
LABEL_333:
  self->_searchBranchMultiplierIPhone = *((_QWORD *)v4 + 229);
  *((_QWORD *)&self->_has + 3) |= 0x1000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x800000000) == 0)
  {
LABEL_233:
    if ((v16 & 0x200000000) == 0)
      goto LABEL_234;
    goto LABEL_335;
  }
LABEL_334:
  self->_searchBranchMultiplierIPad = *((_QWORD *)v4 + 228);
  *((_QWORD *)&self->_has + 3) |= 0x800000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x200000000) == 0)
  {
LABEL_234:
    if ((v16 & 0x100000000) == 0)
      goto LABEL_235;
    goto LABEL_336;
  }
LABEL_335:
  self->_searchBranchDecayIPhone = *((double *)v4 + 226);
  *((_QWORD *)&self->_has + 3) |= 0x200000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x100000000) == 0)
  {
LABEL_235:
    if ((v15 & 0x10000000000) == 0)
      goto LABEL_236;
    goto LABEL_337;
  }
LABEL_336:
  self->_searchBranchDecayIPad = *((double *)v4 + 225);
  *((_QWORD *)&self->_has + 3) |= 0x100000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x10000000000) == 0)
  {
LABEL_236:
    if ((v15 & 0x8000000000) == 0)
      goto LABEL_237;
    goto LABEL_338;
  }
LABEL_337:
  self->_heuristicOptionIPhone = *((_DWORD *)v4 + 709);
  *((_QWORD *)&self->_has + 5) |= 0x10000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x8000000000) == 0)
  {
LABEL_237:
    if ((v14 & 0x40) == 0)
      goto LABEL_238;
    goto LABEL_339;
  }
LABEL_338:
  self->_heuristicOptionIPad = *((_DWORD *)v4 + 708);
  *((_QWORD *)&self->_has + 5) |= 0x8000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 0x40) == 0)
  {
LABEL_238:
    if ((v14 & 0x20) == 0)
      goto LABEL_239;
    goto LABEL_340;
  }
LABEL_339:
  self->_tagSizeCoeffIPhone = *((double *)v4 + 263);
  *((_QWORD *)&self->_has + 4) |= 0x40uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 0x20) == 0)
  {
LABEL_239:
    if ((v14 & 4) == 0)
      goto LABEL_240;
    goto LABEL_341;
  }
LABEL_340:
  self->_tagSizeCoeffIPad = *((double *)v4 + 262);
  *((_QWORD *)&self->_has + 4) |= 0x20uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 4) == 0)
  {
LABEL_240:
    if ((v14 & 2) == 0)
      goto LABEL_241;
    goto LABEL_342;
  }
LABEL_341:
  self->_tagPairsCoeffIPhone = *((double *)v4 + 259);
  *((_QWORD *)&self->_has + 4) |= 4uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 2) == 0)
  {
LABEL_241:
    if ((v13 & 0x40000) == 0)
      goto LABEL_242;
    goto LABEL_343;
  }
LABEL_342:
  self->_tagPairsCoeffIPad = *((double *)v4 + 258);
  *((_QWORD *)&self->_has + 4) |= 2uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x40000) == 0)
  {
LABEL_242:
    if ((v13 & 0x20000) == 0)
      goto LABEL_243;
    goto LABEL_344;
  }
LABEL_343:
  self->_moveNewOrphansCoeffIPhone = *((double *)v4 + 147);
  *((_QWORD *)&self->_has + 2) |= 0x40000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x20000) == 0)
  {
LABEL_243:
    if ((v13 & 0x100000) == 0)
      goto LABEL_244;
    goto LABEL_345;
  }
LABEL_344:
  self->_moveNewOrphansCoeffIPad = *((double *)v4 + 146);
  *((_QWORD *)&self->_has + 2) |= 0x20000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x100000) == 0)
  {
LABEL_244:
    if ((v13 & 0x80000) == 0)
      goto LABEL_245;
    goto LABEL_346;
  }
LABEL_345:
  self->_moveSizeCoeffIPhone = *((double *)v4 + 149);
  *((_QWORD *)&self->_has + 2) |= 0x100000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x80000) == 0)
  {
LABEL_245:
    if ((v16 & 0x1000000000000000) == 0)
      goto LABEL_246;
    goto LABEL_347;
  }
LABEL_346:
  self->_moveSizeCoeffIPad = *((double *)v4 + 148);
  *((_QWORD *)&self->_has + 2) |= 0x80000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v16 & 0x1000000000000000) == 0)
  {
LABEL_246:
    if ((v13 & 0x4000) == 0)
      goto LABEL_247;
    goto LABEL_348;
  }
LABEL_347:
  self->_tagFavoritedCoeff = *((double *)v4 + 253);
  *((_QWORD *)&self->_has + 3) |= 0x1000000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x4000) == 0)
  {
LABEL_247:
    if ((v13 & 0x2000) == 0)
      goto LABEL_248;
    goto LABEL_349;
  }
LABEL_348:
  self->_moveAboutnessNoiseStdIPhone = *((double *)v4 + 143);
  *((_QWORD *)&self->_has + 2) |= 0x4000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x2000) == 0)
  {
LABEL_248:
    if ((v15 & 0x80000000) == 0)
      goto LABEL_249;
    goto LABEL_350;
  }
LABEL_349:
  self->_moveAboutnessNoiseStdIPad = *((double *)v4 + 142);
  *((_QWORD *)&self->_has + 2) |= 0x2000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_249:
    if ((v15 & 0x40000000) == 0)
      goto LABEL_250;
    goto LABEL_351;
  }
LABEL_350:
  self->_dynamicMaxClusterSizeIPhone = *((_DWORD *)v4 + 700);
  *((_QWORD *)&self->_has + 5) |= 0x80000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x40000000) == 0)
  {
LABEL_250:
    if ((v15 & 0x200000000) == 0)
      goto LABEL_251;
    goto LABEL_352;
  }
LABEL_351:
  self->_dynamicMaxClusterSizeIPad = *((_DWORD *)v4 + 699);
  *((_QWORD *)&self->_has + 5) |= 0x40000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x200000000) == 0)
  {
LABEL_251:
    if ((v15 & 0x100000000) == 0)
      goto LABEL_252;
    goto LABEL_353;
  }
LABEL_352:
  self->_dynamicMinArticleSetSizeIPhone = *((_DWORD *)v4 + 702);
  *((_QWORD *)&self->_has + 5) |= 0x200000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x100000000) == 0)
  {
LABEL_252:
    if ((v15 & 0x20000000) == 0)
      goto LABEL_253;
    goto LABEL_354;
  }
LABEL_353:
  self->_dynamicMinArticleSetSizeIPad = *((_DWORD *)v4 + 701);
  *((_QWORD *)&self->_has + 5) |= 0x100000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x20000000) == 0)
  {
LABEL_253:
    if ((v15 & 0x10000000) == 0)
      goto LABEL_254;
    goto LABEL_355;
  }
LABEL_354:
  self->_dynamicMaxArticleSetSizeIPhone = *((_DWORD *)v4 + 698);
  *((_QWORD *)&self->_has + 5) |= 0x20000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x10000000) == 0)
  {
LABEL_254:
    if ((v19 & 4) == 0)
      goto LABEL_255;
    goto LABEL_356;
  }
LABEL_355:
  self->_dynamicMaxArticleSetSizeIPad = *((_DWORD *)v4 + 697);
  *((_QWORD *)&self->_has + 5) |= 0x10000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 4) == 0)
  {
LABEL_255:
    if ((v13 & 0x20000000000) == 0)
      goto LABEL_256;
    goto LABEL_357;
  }
LABEL_356:
  self->_deleteOrphansFromOverflow = *((_BYTE *)v4 + 2956);
  *((_WORD *)&self->_has + 24) |= 4u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x20000000000) == 0)
  {
LABEL_256:
    if ((v13 & 0x10000) == 0)
      goto LABEL_257;
    goto LABEL_358;
  }
LABEL_357:
  self->_overflownOrphansFilterCoeff = *((double *)v4 + 170);
  *((_QWORD *)&self->_has + 2) |= 0x20000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x10000) == 0)
  {
LABEL_257:
    if ((v13 & 0x8000) == 0)
      goto LABEL_258;
    goto LABEL_359;
  }
LABEL_358:
  self->_moveAboutnessWeightRatioIPhone = *((double *)v4 + 145);
  *((_QWORD *)&self->_has + 2) |= 0x10000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v13 & 0x8000) == 0)
  {
LABEL_258:
    if ((v17 & 0x80000000) == 0)
      goto LABEL_259;
    goto LABEL_360;
  }
LABEL_359:
  self->_moveAboutnessWeightRatioIPad = *((double *)v4 + 144);
  *((_QWORD *)&self->_has + 2) |= 0x8000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x80000000) == 0)
  {
LABEL_259:
    if ((v17 & 0x100000000) == 0)
      goto LABEL_260;
    goto LABEL_361;
  }
LABEL_360:
  self->_groupingDoubleParam1 = *((double *)v4 + 96);
  *((_QWORD *)&self->_has + 1) |= 0x80000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x100000000) == 0)
  {
LABEL_260:
    if ((v17 & 0x200000000) == 0)
      goto LABEL_261;
    goto LABEL_362;
  }
LABEL_361:
  self->_groupingDoubleParam2 = *((double *)v4 + 97);
  *((_QWORD *)&self->_has + 1) |= 0x100000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x200000000) == 0)
  {
LABEL_261:
    if ((v17 & 0x400000000) == 0)
      goto LABEL_262;
    goto LABEL_363;
  }
LABEL_362:
  self->_groupingDoubleParam3 = *((double *)v4 + 98);
  *((_QWORD *)&self->_has + 1) |= 0x200000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x400000000) == 0)
  {
LABEL_262:
    if ((v17 & 0x800000000) == 0)
      goto LABEL_263;
    goto LABEL_364;
  }
LABEL_363:
  self->_groupingDoubleParam4 = *((double *)v4 + 99);
  *((_QWORD *)&self->_has + 1) |= 0x400000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x800000000) == 0)
  {
LABEL_263:
    if ((v17 & 0x1000000000) == 0)
      goto LABEL_264;
    goto LABEL_365;
  }
LABEL_364:
  self->_groupingDoubleParam5 = *((double *)v4 + 100);
  *((_QWORD *)&self->_has + 1) |= 0x800000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v17 & 0x1000000000) == 0)
  {
LABEL_264:
    if ((v15 & 0x400000000) == 0)
      goto LABEL_265;
    goto LABEL_366;
  }
LABEL_365:
  self->_groupingDoubleParam6 = *((double *)v4 + 101);
  *((_QWORD *)&self->_has + 1) |= 0x1000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x400000000) == 0)
  {
LABEL_265:
    if ((v15 & 0x800000000) == 0)
      goto LABEL_266;
    goto LABEL_367;
  }
LABEL_366:
  self->_groupingIntParam1 = *((_DWORD *)v4 + 703);
  *((_QWORD *)&self->_has + 5) |= 0x400000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x800000000) == 0)
  {
LABEL_266:
    if ((v15 & 0x1000000000) == 0)
      goto LABEL_267;
    goto LABEL_368;
  }
LABEL_367:
  self->_groupingIntParam2 = *((_DWORD *)v4 + 704);
  *((_QWORD *)&self->_has + 5) |= 0x800000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x1000000000) == 0)
  {
LABEL_267:
    if ((v15 & 0x2000000000) == 0)
      goto LABEL_268;
    goto LABEL_369;
  }
LABEL_368:
  self->_groupingIntParam3 = *((_DWORD *)v4 + 705);
  *((_QWORD *)&self->_has + 5) |= 0x1000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x2000000000) == 0)
  {
LABEL_268:
    if ((v19 & 0x80) == 0)
      goto LABEL_269;
    goto LABEL_370;
  }
LABEL_369:
  self->_groupingIntParam4 = *((_DWORD *)v4 + 706);
  *((_QWORD *)&self->_has + 5) |= 0x2000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 0x80) == 0)
  {
LABEL_269:
    if ((v19 & 0x100) == 0)
      goto LABEL_270;
    goto LABEL_371;
  }
LABEL_370:
  self->_groupingBoolParam1 = *((_BYTE *)v4 + 2961);
  *((_WORD *)&self->_has + 24) |= 0x80u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 0x100) == 0)
  {
LABEL_270:
    if ((v19 & 0x10) == 0)
      goto LABEL_271;
    goto LABEL_372;
  }
LABEL_371:
  self->_groupingBoolParam2 = *((_BYTE *)v4 + 2962);
  *((_WORD *)&self->_has + 24) |= 0x100u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 0x10) == 0)
  {
LABEL_271:
    if ((v19 & 8) == 0)
      goto LABEL_272;
    goto LABEL_373;
  }
LABEL_372:
  self->_enableOptimizedLayoutIPhone = *((_BYTE *)v4 + 2958);
  *((_WORD *)&self->_has + 24) |= 0x10u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v19 & 8) == 0)
  {
LABEL_272:
    if ((v15 & 0x4000000000000000) == 0)
      goto LABEL_273;
    goto LABEL_374;
  }
LABEL_373:
  self->_enableOptimizedLayoutIPad = *((_BYTE *)v4 + 2957);
  *((_WORD *)&self->_has + 24) |= 8u;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x4000000000000000) == 0)
  {
LABEL_273:
    if ((v15 & 0x2000000000000000) == 0)
      goto LABEL_274;
    goto LABEL_375;
  }
LABEL_374:
  self->_optimizedLayoutSizeThresholdIPhone = *((_DWORD *)v4 + 731);
  *((_QWORD *)&self->_has + 5) |= 0x4000000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x2000000000000000) == 0)
  {
LABEL_274:
    if ((v15 & 0x1000000000000000) == 0)
      goto LABEL_275;
    goto LABEL_376;
  }
LABEL_375:
  self->_optimizedLayoutSizeThresholdIPad = *((_DWORD *)v4 + 730);
  *((_QWORD *)&self->_has + 5) |= 0x2000000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v15 = *((_QWORD *)v4 + 376);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((v15 & 0x1000000000000000) == 0)
  {
LABEL_275:
    if ((v15 & 0x800000000000000) == 0)
      goto LABEL_276;
    goto LABEL_377;
  }
LABEL_376:
  self->_optimizedLayoutIncrementUnitIPhone = *((_DWORD *)v4 + 729);
  *((_QWORD *)&self->_has + 5) |= 0x1000000000000000uLL;
  v14 = *((_QWORD *)v4 + 375);
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v18 = *((_QWORD *)v4 + 371);
  v17 = *((_QWORD *)v4 + 372);
  v19 = *((_WORD *)v4 + 1508);
  if ((*((_QWORD *)v4 + 376) & 0x800000000000000) == 0)
  {
LABEL_276:
    if ((v14 & 0x2000000000000000) == 0)
      goto LABEL_277;
    goto LABEL_378;
  }
LABEL_377:
  self->_optimizedLayoutIncrementUnitIPad = *((_DWORD *)v4 + 728);
  *((_QWORD *)&self->_has + 5) |= 0x800000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 0x2000000000000000) == 0)
  {
LABEL_277:
    if ((v14 & 0x4000000000000000) == 0)
      goto LABEL_278;
    goto LABEL_379;
  }
LABEL_378:
  self->_utilityWeightAlpha = *((double *)v4 + 318);
  *((_QWORD *)&self->_has + 4) |= 0x2000000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  v19 = *((_WORD *)v4 + 1508);
  if ((v14 & 0x4000000000000000) == 0)
  {
LABEL_278:
    if ((v19 & 0x800) == 0)
      goto LABEL_279;
    goto LABEL_380;
  }
LABEL_379:
  self->_utilityWeightBeta = *((double *)v4 + 319);
  *((_QWORD *)&self->_has + 4) |= 0x4000000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((*((_WORD *)v4 + 1508) & 0x800) == 0)
  {
LABEL_279:
    if ((v14 & 0x10) == 0)
      goto LABEL_280;
    goto LABEL_381;
  }
LABEL_380:
  self->_replaceAboutness = *((_BYTE *)v4 + 2965);
  *((_WORD *)&self->_has + 24) |= 0x800u;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v14 & 0x10) == 0)
  {
LABEL_280:
    if ((v14 & 8) == 0)
      goto LABEL_281;
    goto LABEL_382;
  }
LABEL_381:
  self->_tagPersonalizationCoeffIPhone = *((double *)v4 + 261);
  *((_QWORD *)&self->_has + 4) |= 0x10uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v14 & 8) == 0)
  {
LABEL_281:
    if ((v16 & 0x200000000000000) == 0)
      goto LABEL_282;
    goto LABEL_383;
  }
LABEL_382:
  self->_tagPersonalizationCoeffIPad = *((double *)v4 + 260);
  *((_QWORD *)&self->_has + 4) |= 8uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v16 & 0x200000000000000) == 0)
  {
LABEL_282:
    if ((v16 & 0x100000000000000) == 0)
      goto LABEL_283;
    goto LABEL_384;
  }
LABEL_383:
  self->_tagArticleScoreCoeffIPhone = *((double *)v4 + 250);
  *((_QWORD *)&self->_has + 3) |= 0x200000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v16 & 0x100000000000000) == 0)
  {
LABEL_283:
    if ((v16 & 0x4000000000000000) == 0)
      goto LABEL_284;
    goto LABEL_385;
  }
LABEL_384:
  self->_tagArticleScoreCoeffIPad = *((double *)v4 + 249);
  *((_QWORD *)&self->_has + 3) |= 0x100000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v16 & 0x4000000000000000) == 0)
  {
LABEL_284:
    if ((v16 & 0x2000000000000000) == 0)
      goto LABEL_285;
    goto LABEL_386;
  }
LABEL_385:
  self->_tagFavoritedCoeffIPhone = *((double *)v4 + 255);
  *((_QWORD *)&self->_has + 3) |= 0x4000000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v16 & 0x2000000000000000) == 0)
  {
LABEL_285:
    if ((v18 & 0x4000) == 0)
      goto LABEL_286;
    goto LABEL_387;
  }
LABEL_386:
  self->_tagFavoritedCoeffIPad = *((double *)v4 + 254);
  *((_QWORD *)&self->_has + 3) |= 0x2000000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  v18 = *((_QWORD *)v4 + 371);
  if ((v18 & 0x4000) == 0)
  {
LABEL_286:
    if ((v18 & 0x2000) == 0)
      goto LABEL_287;
    goto LABEL_388;
  }
LABEL_387:
  self->_articleEntityScoreWeightRatioIPhone = *((double *)v4 + 15);
  *(_QWORD *)&self->_has |= 0x4000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((*((_QWORD *)v4 + 371) & 0x2000) == 0)
  {
LABEL_287:
    if ((v13 & 0x800000) == 0)
      goto LABEL_288;
    goto LABEL_389;
  }
LABEL_388:
  self->_articleEntityScoreWeightRatioIPad = *((double *)v4 + 14);
  *(_QWORD *)&self->_has |= 0x2000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v13 & 0x800000) == 0)
  {
LABEL_288:
    if ((v14 & 0x80000000000000) == 0)
      goto LABEL_289;
    goto LABEL_390;
  }
LABEL_389:
  self->_muteImpressionValue = *((double *)v4 + 152);
  *((_QWORD *)&self->_has + 2) |= 0x800000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v14 & 0x80000000000000) == 0)
  {
LABEL_289:
    if ((v13 & 0x200000) == 0)
      goto LABEL_290;
    goto LABEL_391;
  }
LABEL_390:
  self->_unmuteImpressionValue = *((double *)v4 + 312);
  *((_QWORD *)&self->_has + 4) |= 0x80000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v13 & 0x200000) == 0)
  {
LABEL_290:
    if ((v14 & 0x20000000000000) == 0)
      goto LABEL_291;
    goto LABEL_392;
  }
LABEL_391:
  self->_muteClickValue = *((double *)v4 + 150);
  *((_QWORD *)&self->_has + 2) |= 0x200000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v14 & 0x20000000000000) == 0)
  {
LABEL_291:
    if ((v13 & 0x1000000) == 0)
      goto LABEL_292;
    goto LABEL_393;
  }
LABEL_392:
  self->_unmuteClickValue = *((double *)v4 + 310);
  *((_QWORD *)&self->_has + 4) |= 0x20000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v13 & 0x1000000) == 0)
  {
LABEL_292:
    if ((v14 & 0x100000000000000) == 0)
      goto LABEL_293;
    goto LABEL_394;
  }
LABEL_393:
  self->_muteImpressionValueBaseline = *((double *)v4 + 153);
  *((_QWORD *)&self->_has + 2) |= 0x1000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v14 & 0x100000000000000) == 0)
  {
LABEL_293:
    if ((v13 & 0x400000) == 0)
      goto LABEL_294;
    goto LABEL_395;
  }
LABEL_394:
  self->_unmuteImpressionValueBaseline = *((double *)v4 + 313);
  *((_QWORD *)&self->_has + 4) |= 0x100000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v14 = *((_QWORD *)v4 + 375);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((v13 & 0x400000) == 0)
  {
LABEL_294:
    if ((v14 & 0x40000000000000) == 0)
      goto LABEL_295;
    goto LABEL_396;
  }
LABEL_395:
  self->_muteClickValueBaseline = *((double *)v4 + 151);
  *((_QWORD *)&self->_has + 2) |= 0x400000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v17 = *((_QWORD *)v4 + 372);
  v13 = *((_QWORD *)v4 + 373);
  if ((*((_QWORD *)v4 + 375) & 0x40000000000000) == 0)
  {
LABEL_295:
    if ((v16 & 0x2000000) == 0)
      goto LABEL_296;
    goto LABEL_397;
  }
LABEL_396:
  self->_unmuteClickValueBaseline = *((double *)v4 + 311);
  *((_QWORD *)&self->_has + 4) |= 0x40000000000000uLL;
  v13 = *((_QWORD *)v4 + 373);
  v16 = *((_QWORD *)v4 + 374);
  v17 = *((_QWORD *)v4 + 372);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_296:
    if ((v13 & 0x2000000) == 0)
      goto LABEL_297;
    goto LABEL_398;
  }
LABEL_397:
  self->_saturatedMutedCountFactor = *((double *)v4 + 218);
  *((_QWORD *)&self->_has + 3) |= 0x2000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  v17 = *((_QWORD *)v4 + 372);
  if ((*((_QWORD *)v4 + 373) & 0x2000000) == 0)
  {
LABEL_297:
    if ((v17 & 0x80000000000000) == 0)
      goto LABEL_298;
    goto LABEL_399;
  }
LABEL_398:
  self->_mutedVoteCoefficient = *((double *)v4 + 154);
  *((_QWORD *)&self->_has + 2) |= 0x2000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((*((_QWORD *)v4 + 372) & 0x80000000000000) == 0)
  {
LABEL_298:
    if ((v16 & 8) == 0)
      goto LABEL_299;
    goto LABEL_400;
  }
LABEL_399:
  self->_importanceScalar = *((double *)v4 + 120);
  *((_QWORD *)&self->_has + 1) |= 0x80000000000000uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((v16 & 8) == 0)
  {
LABEL_299:
    if ((v16 & 4) == 0)
      goto LABEL_300;
    goto LABEL_401;
  }
LABEL_400:
  self->_publisherDiversityMinSubscriptions = *((double *)v4 + 196);
  *((_QWORD *)&self->_has + 3) |= 8uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((v16 & 4) == 0)
  {
LABEL_300:
    if ((v16 & 1) == 0)
      goto LABEL_301;
    goto LABEL_402;
  }
LABEL_401:
  self->_publisherDiversityMinArticleCount = *((double *)v4 + 195);
  *((_QWORD *)&self->_has + 3) |= 4uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((v16 & 1) == 0)
  {
LABEL_301:
    if ((v16 & 2) == 0)
      goto LABEL_302;
    goto LABEL_403;
  }
LABEL_402:
  self->_publisherDiversityMaxArticleCount = *((double *)v4 + 193);
  *((_QWORD *)&self->_has + 3) |= 1uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((v16 & 2) == 0)
  {
LABEL_302:
    if ((v16 & 0x400000) == 0)
      goto LABEL_303;
    goto LABEL_404;
  }
LABEL_403:
  self->_publisherDiversityMaxArticleFilter = *((double *)v4 + 194);
  *((_QWORD *)&self->_has + 3) |= 2uLL;
  v16 = *((_QWORD *)v4 + 374);
  if ((v16 & 0x400000) == 0)
  {
LABEL_303:
    if ((v16 & 0x1000000) == 0)
      goto LABEL_305;
    goto LABEL_304;
  }
LABEL_404:
  self->_safariSignalWeight = *((double *)v4 + 215);
  *((_QWORD *)&self->_has + 3) |= 0x400000uLL;
  if ((*((_QWORD *)v4 + 374) & 0x1000000) != 0)
  {
LABEL_304:
    self->_safariTimeDecayMultiplier = *((double *)v4 + 217);
    *((_QWORD *)&self->_has + 3) |= 0x1000000uLL;
  }
LABEL_305:
  v20 = *((_QWORD *)v4 + 374);
  if ((v20 & 0x100000) != 0)
  {
    self->_safariOccurrenceDecayMultiplier = *((double *)v4 + 213);
    *((_QWORD *)&self->_has + 3) |= 0x100000uLL;
    v21 = *((_QWORD *)v4 + 375);
    v22 = *((_QWORD *)v4 + 376);
    v20 = *((_QWORD *)v4 + 374);
  }
  else
  {
    v21 = *((_QWORD *)v4 + 375);
    v22 = *((_QWORD *)v4 + 376);
  }
  v24 = *((_QWORD *)v4 + 372);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x400) != 0)
  {
    self->_appUsageSignalWeight = *((double *)v4 + 11);
    *(_QWORD *)&self->_has |= 0x400uLL;
    v21 = *((_QWORD *)v4 + 375);
    v22 = *((_QWORD *)v4 + 376);
    v23 = *((_QWORD *)v4 + 373);
    v20 = *((_QWORD *)v4 + 374);
    v25 = *((_QWORD *)v4 + 371);
    v24 = *((_QWORD *)v4 + 372);
    v26 = *((_WORD *)v4 + 1508);
    if ((v25 & 0x1000) == 0)
    {
LABEL_409:
      if ((v25 & 0x100) == 0)
        goto LABEL_410;
      goto LABEL_463;
    }
  }
  else if ((v25 & 0x1000) == 0)
  {
    goto LABEL_409;
  }
  self->_appUsageTimeDecayMultiplier = *((double *)v4 + 13);
  *(_QWORD *)&self->_has |= 0x1000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x100) == 0)
  {
LABEL_410:
    if ((v25 & 0x40000) == 0)
      goto LABEL_411;
    goto LABEL_464;
  }
LABEL_463:
  self->_appUsageOccurrenceDecayMultiplier = *((double *)v4 + 9);
  *(_QWORD *)&self->_has |= 0x100uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x40000) == 0)
  {
LABEL_411:
    if ((v25 & 0x80000) == 0)
      goto LABEL_412;
    goto LABEL_465;
  }
LABEL_464:
  self->_autoFavoriteGroupableMinImpressions = *((double *)v4 + 19);
  *(_QWORD *)&self->_has |= 0x40000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x80000) == 0)
  {
LABEL_412:
    if ((v25 & 0x100000) == 0)
      goto LABEL_413;
    goto LABEL_466;
  }
LABEL_465:
  self->_autoFavoriteGroupableMinRate = *((double *)v4 + 20);
  *(_QWORD *)&self->_has |= 0x80000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x100000) == 0)
  {
LABEL_413:
    if ((v25 & 0x8000) == 0)
      goto LABEL_414;
    goto LABEL_467;
  }
LABEL_466:
  self->_autoFavoriteGroupableMinRelativeRate = *((double *)v4 + 21);
  *(_QWORD *)&self->_has |= 0x100000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x8000) == 0)
  {
LABEL_414:
    if ((v25 & 0x10000) == 0)
      goto LABEL_415;
    goto LABEL_468;
  }
LABEL_467:
  self->_autoFavoriteFetchableMinImpressions = *((double *)v4 + 16);
  *(_QWORD *)&self->_has |= 0x8000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x10000) == 0)
  {
LABEL_415:
    if ((v25 & 0x20000) == 0)
      goto LABEL_416;
    goto LABEL_469;
  }
LABEL_468:
  self->_autoFavoriteFetchableMinRate = *((double *)v4 + 17);
  *(_QWORD *)&self->_has |= 0x10000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x20000) == 0)
  {
LABEL_416:
    if ((v25 & 0x800000000) == 0)
      goto LABEL_417;
    goto LABEL_470;
  }
LABEL_469:
  self->_autoFavoriteFetchableMinRelativeRate = *((double *)v4 + 18);
  *(_QWORD *)&self->_has |= 0x20000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  v26 = *((_WORD *)v4 + 1508);
  if ((v25 & 0x800000000) == 0)
  {
LABEL_417:
    if ((v26 & 1) == 0)
      goto LABEL_418;
    goto LABEL_471;
  }
LABEL_470:
  self->_averageSafariVisitsPerDay = *((double *)v4 + 36);
  *(_QWORD *)&self->_has |= 0x800000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((*((_WORD *)v4 + 1508) & 1) == 0)
  {
LABEL_418:
    if ((v22 & 0x8000000000000000) == 0)
      goto LABEL_419;
    goto LABEL_472;
  }
LABEL_471:
  self->_publisherDiversityMinPublisherCount = *((_DWORD *)v4 + 735);
  *((_WORD *)&self->_has + 24) |= 1u;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v22 & 0x8000000000000000) == 0)
  {
LABEL_419:
    if ((v23 & 0x8000000000000) == 0)
      goto LABEL_420;
    goto LABEL_473;
  }
LABEL_472:
  self->_publisherDiversityMaxPublisherCount = *((_DWORD *)v4 + 734);
  *((_QWORD *)&self->_has + 5) |= 0x8000000000000000;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v23 & 0x8000000000000) == 0)
  {
LABEL_420:
    if ((v25 & 0x40000000000) == 0)
      goto LABEL_421;
    goto LABEL_474;
  }
LABEL_473:
  self->_portraitUsageSignalWeight = *((double *)v4 + 180);
  *((_QWORD *)&self->_has + 2) |= 0x8000000000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x40000000000) == 0)
  {
LABEL_421:
    if ((v25 & 0x200000000000) == 0)
      goto LABEL_422;
    goto LABEL_475;
  }
LABEL_474:
  self->_cohortMembershipBaselineCtrWeight = *((double *)v4 + 43);
  *(_QWORD *)&self->_has |= 0x40000000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x200000000000) == 0)
  {
LABEL_422:
    if ((v25 & 0x800000000000) == 0)
      goto LABEL_423;
    goto LABEL_476;
  }
LABEL_475:
  self->_cohortMembershipCurveSteepness = *((double *)v4 + 46);
  *(_QWORD *)&self->_has |= 0x200000000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x800000000000) == 0)
  {
LABEL_423:
    if ((v25 & 0x800000) == 0)
      goto LABEL_424;
    goto LABEL_477;
  }
LABEL_476:
  self->_cohortMembershipMinWeightedImpressions = *((double *)v4 + 48);
  *(_QWORD *)&self->_has |= 0x800000000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x800000) == 0)
  {
LABEL_424:
    if ((v25 & 0x4000000) == 0)
      goto LABEL_425;
    goto LABEL_478;
  }
LABEL_477:
  self->_autoFavoriteMinImpressions = *((double *)v4 + 24);
  *(_QWORD *)&self->_has |= 0x800000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x4000000) == 0)
  {
LABEL_425:
    if ((v25 & 0x8000000) == 0)
      goto LABEL_426;
    goto LABEL_479;
  }
LABEL_478:
  self->_autoFavoriteMinRate = *((double *)v4 + 27);
  *(_QWORD *)&self->_has |= 0x4000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x8000000) == 0)
  {
LABEL_426:
    if ((v25 & 0x200000000) == 0)
      goto LABEL_427;
    goto LABEL_480;
  }
LABEL_479:
  self->_autoFavoriteMinRelativeRate = *((double *)v4 + 28);
  *(_QWORD *)&self->_has |= 0x8000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x200000000) == 0)
  {
LABEL_427:
    if ((v25 & 0x100000000) == 0)
      goto LABEL_428;
    goto LABEL_481;
  }
LABEL_480:
  self->_autoUnfavoriteFactor = *((double *)v4 + 34);
  *(_QWORD *)&self->_has |= 0x200000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v25 & 0x100000000) == 0)
  {
LABEL_428:
    if ((v24 & 0x40000000) == 0)
      goto LABEL_429;
    goto LABEL_482;
  }
LABEL_481:
  self->_autoGroupableFactor = *((double *)v4 + 33);
  *(_QWORD *)&self->_has |= 0x100000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  v24 = *((_QWORD *)v4 + 372);
  if ((v24 & 0x40000000) == 0)
  {
LABEL_429:
    if ((v24 & 0x100000000000000) == 0)
      goto LABEL_430;
    goto LABEL_483;
  }
LABEL_482:
  self->_groupImpressionBiasCorrectionFactor = *((double *)v4 + 95);
  *((_QWORD *)&self->_has + 1) |= 0x40000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((*((_QWORD *)v4 + 372) & 0x100000000000000) == 0)
  {
LABEL_430:
    if ((v22 & 0x40000) == 0)
      goto LABEL_431;
    goto LABEL_484;
  }
LABEL_483:
  self->_indexImpressionBiasCorrectionFactor = *((double *)v4 + 121);
  *((_QWORD *)&self->_has + 1) |= 0x100000000000000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x40000) == 0)
  {
LABEL_431:
    if ((v22 & 0x20000) == 0)
      goto LABEL_432;
    goto LABEL_485;
  }
LABEL_484:
  self->_videoInitiatePlaybackImpressionValue = *((double *)v4 + 339);
  *((_QWORD *)&self->_has + 5) |= 0x40000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x20000) == 0)
  {
LABEL_432:
    if ((v22 & 0x10000) == 0)
      goto LABEL_433;
    goto LABEL_486;
  }
LABEL_485:
  self->_videoInitiatePlaybackClickValue = *((double *)v4 + 338);
  *((_QWORD *)&self->_has + 5) |= 0x20000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x10000) == 0)
  {
LABEL_433:
    if ((v22 & 0x8000) == 0)
      goto LABEL_434;
    goto LABEL_487;
  }
LABEL_486:
  self->_videoInitiatePlaybackBaselineImpressionValue = *((double *)v4 + 337);
  *((_QWORD *)&self->_has + 5) |= 0x10000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x8000) == 0)
  {
LABEL_434:
    if ((v22 & 0x4000) == 0)
      goto LABEL_435;
    goto LABEL_488;
  }
LABEL_487:
  self->_videoInitiatePlaybackBaselineClickValue = *((double *)v4 + 336);
  *((_QWORD *)&self->_has + 5) |= 0x8000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x4000) == 0)
  {
LABEL_435:
    if ((v22 & 0x2000) == 0)
      goto LABEL_436;
    goto LABEL_489;
  }
LABEL_488:
  self->_videoCompletePlaybackImpressionValue = *((double *)v4 + 335);
  *((_QWORD *)&self->_has + 5) |= 0x4000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x2000) == 0)
  {
LABEL_436:
    if ((v22 & 0x1000) == 0)
      goto LABEL_437;
    goto LABEL_490;
  }
LABEL_489:
  self->_videoCompletePlaybackClickValue = *((double *)v4 + 334);
  *((_QWORD *)&self->_has + 5) |= 0x2000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v22 = *((_QWORD *)v4 + 376);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((v22 & 0x1000) == 0)
  {
LABEL_437:
    if ((v22 & 0x800) == 0)
      goto LABEL_438;
    goto LABEL_491;
  }
LABEL_490:
  self->_videoCompletePlaybackBaselineImpressionValue = *((double *)v4 + 333);
  *((_QWORD *)&self->_has + 5) |= 0x1000uLL;
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v20 = *((_QWORD *)v4 + 374);
  v25 = *((_QWORD *)v4 + 371);
  if ((*((_QWORD *)v4 + 376) & 0x800) == 0)
  {
LABEL_438:
    if ((v20 & 0x800000000000000) == 0)
      goto LABEL_439;
    goto LABEL_492;
  }
LABEL_491:
  self->_videoCompletePlaybackBaselineClickValue = *((double *)v4 + 332);
  *((_QWORD *)&self->_has + 5) |= 0x800uLL;
  v20 = *((_QWORD *)v4 + 374);
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v20 & 0x800000000000000) == 0)
  {
LABEL_439:
    if ((v20 & 0x400000000000000) == 0)
      goto LABEL_440;
    goto LABEL_493;
  }
LABEL_492:
  self->_tagAutoFavoritedCoeffIPhone = *((double *)v4 + 252);
  *((_QWORD *)&self->_has + 3) |= 0x800000000000000uLL;
  v20 = *((_QWORD *)v4 + 374);
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v20 & 0x400000000000000) == 0)
  {
LABEL_440:
    if ((v21 & 1) == 0)
      goto LABEL_441;
    goto LABEL_494;
  }
LABEL_493:
  self->_tagAutoFavoritedCoeffIPad = *((double *)v4 + 251);
  *((_QWORD *)&self->_has + 3) |= 0x400000000000000uLL;
  v20 = *((_QWORD *)v4 + 374);
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v21 & 1) == 0)
  {
LABEL_441:
    if ((v20 & 0x8000000000000000) == 0)
      goto LABEL_442;
    goto LABEL_495;
  }
LABEL_494:
  self->_tagGroupableCoeffIPhone = *((double *)v4 + 257);
  *((_QWORD *)&self->_has + 4) |= 1uLL;
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((*((_QWORD *)v4 + 374) & 0x8000000000000000) == 0)
  {
LABEL_442:
    if ((v21 & 0x100) == 0)
      goto LABEL_443;
    goto LABEL_496;
  }
LABEL_495:
  self->_tagGroupableCoeffIPad = *((double *)v4 + 256);
  *((_QWORD *)&self->_has + 3) |= 0x8000000000000000;
  v21 = *((_QWORD *)v4 + 375);
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v21 & 0x100) == 0)
  {
LABEL_443:
    if ((v21 & 0x80) == 0)
      goto LABEL_444;
    goto LABEL_497;
  }
LABEL_496:
  self->_tagSpecificityCoeffIPhone = *((double *)v4 + 265);
  *((_QWORD *)&self->_has + 4) |= 0x100uLL;
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((*((_QWORD *)v4 + 375) & 0x80) == 0)
  {
LABEL_444:
    if ((v23 & 0x10000000000) == 0)
      goto LABEL_445;
    goto LABEL_498;
  }
LABEL_497:
  self->_tagSpecificityCoeffIPad = *((double *)v4 + 264);
  *((_QWORD *)&self->_has + 4) |= 0x80uLL;
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v23 & 0x10000000000) == 0)
  {
LABEL_445:
    if ((v25 & 0x2000000) == 0)
      goto LABEL_446;
    goto LABEL_499;
  }
LABEL_498:
  self->_optionalTagSpecificityScore = *((double *)v4 + 169);
  *((_QWORD *)&self->_has + 2) |= 0x10000000000uLL;
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v25 & 0x2000000) == 0)
  {
LABEL_446:
    if ((v25 & 0x20000000) == 0)
      goto LABEL_447;
    goto LABEL_500;
  }
LABEL_499:
  self->_autoFavoriteMinObservationsSafari = *((double *)v4 + 26);
  *(_QWORD *)&self->_has |= 0x2000000uLL;
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v25 & 0x20000000) == 0)
  {
LABEL_447:
    if ((v25 & 0x1000000) == 0)
      goto LABEL_448;
    goto LABEL_501;
  }
LABEL_500:
  self->_autoFavoriteMinScoreSafari = *((double *)v4 + 30);
  *(_QWORD *)&self->_has |= 0x20000000uLL;
  v23 = *((_QWORD *)v4 + 373);
  v25 = *((_QWORD *)v4 + 371);
  if ((v25 & 0x1000000) == 0)
  {
LABEL_448:
    if ((v25 & 0x10000000) == 0)
      goto LABEL_449;
    goto LABEL_502;
  }
LABEL_501:
  self->_autoFavoriteMinObservationsExtAppUsage = *((double *)v4 + 25);
  *(_QWORD *)&self->_has |= 0x1000000uLL;
  v23 = *((_QWORD *)v4 + 373);
  if ((*((_QWORD *)v4 + 371) & 0x10000000) == 0)
  {
LABEL_449:
    if ((v23 & 0x80000000000) == 0)
      goto LABEL_450;
    goto LABEL_503;
  }
LABEL_502:
  self->_autoFavoriteMinScoreExtAppUsage = *((double *)v4 + 29);
  *(_QWORD *)&self->_has |= 0x10000000uLL;
  v23 = *((_QWORD *)v4 + 373);
  if ((v23 & 0x80000000000) == 0)
  {
LABEL_450:
    if ((v23 & 0x100000000000) == 0)
      goto LABEL_452;
    goto LABEL_451;
  }
LABEL_503:
  self->_portraitDecayRate = *((double *)v4 + 172);
  *((_QWORD *)&self->_has + 2) |= 0x80000000000uLL;
  if ((*((_QWORD *)v4 + 373) & 0x100000000000) != 0)
  {
LABEL_451:
    self->_portraitGlobalThreshold = *((double *)v4 + 173);
    *((_QWORD *)&self->_has + 2) |= 0x100000000000uLL;
  }
LABEL_452:
  v56 = 0u;
  v57 = 0u;
  v54 = 0u;
  v55 = 0u;
  v27 = *((id *)v4 + 366);
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v29; ++i)
      {
        if (*(_QWORD *)v55 != v30)
          objc_enumerationMutation(v27);
        -[NTPBPersonalizationTreatment addPortraitTagThresholds:](self, "addPortraitTagThresholds:", *(_QWORD *)(*((_QWORD *)&v54 + 1) + 8 * i));
      }
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
    }
    while (v29);
  }

  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x400000000000) != 0)
  {
    self->_portraitImpressionSlope = *((double *)v5 + 175);
    *((_QWORD *)&self->_has + 2) |= 0x400000000000uLL;
    v33 = *((_QWORD *)v5 + 375);
    v34 = *((_QWORD *)v5 + 376);
    v32 = *((_QWORD *)v5 + 373);
  }
  else
  {
    v33 = *((_QWORD *)v5 + 375);
    v34 = *((_QWORD *)v5 + 376);
  }
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x200000000000) != 0)
  {
    self->_portraitImpressionIntercept = *((double *)v5 + 174);
    *((_QWORD *)&self->_has + 2) |= 0x200000000000uLL;
    v33 = *((_QWORD *)v5 + 375);
    v34 = *((_QWORD *)v5 + 376);
    v32 = *((_QWORD *)v5 + 373);
    v35 = *((_QWORD *)v5 + 374);
    v37 = *((_QWORD *)v5 + 371);
    v36 = *((_QWORD *)v5 + 372);
    v38 = *((_WORD *)v5 + 1508);
    if ((v32 & 0x2000000000000) == 0)
    {
LABEL_508:
      if ((v32 & 0x1000000000000) == 0)
        goto LABEL_509;
      goto LABEL_612;
    }
  }
  else if ((v32 & 0x2000000000000) == 0)
  {
    goto LABEL_508;
  }
  self->_portraitRateSlope = *((double *)v5 + 178);
  *((_QWORD *)&self->_has + 2) |= 0x2000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x1000000000000) == 0)
  {
LABEL_509:
    if ((v32 & 0x200000000) == 0)
      goto LABEL_510;
    goto LABEL_613;
  }
LABEL_612:
  self->_portraitRateIntercept = *((double *)v5 + 177);
  *((_QWORD *)&self->_has + 2) |= 0x1000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x200000000) == 0)
  {
LABEL_510:
    if ((v32 & 0x100000000) == 0)
      goto LABEL_511;
    goto LABEL_614;
  }
LABEL_613:
  self->_newsTodayWidgetPresentationImpressionValue = *((double *)v5 + 162);
  *((_QWORD *)&self->_has + 2) |= 0x200000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x100000000) == 0)
  {
LABEL_511:
    if ((v32 & 0x80000000) == 0)
      goto LABEL_512;
    goto LABEL_615;
  }
LABEL_614:
  self->_newsTodayWidgetPresentationClickValue = *((double *)v5 + 161);
  *((_QWORD *)&self->_has + 2) |= 0x100000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_512:
    if ((v32 & 0x40000000) == 0)
      goto LABEL_513;
    goto LABEL_616;
  }
LABEL_615:
  self->_newsTodayWidgetPresentationBaselineImpressionValue = *((double *)v5 + 160);
  *((_QWORD *)&self->_has + 2) |= 0x80000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x40000000) == 0)
  {
LABEL_513:
    if ((v32 & 0x20000000) == 0)
      goto LABEL_514;
    goto LABEL_617;
  }
LABEL_616:
  self->_newsTodayWidgetPresentationBaselineClickValue = *((double *)v5 + 159);
  *((_QWORD *)&self->_has + 2) |= 0x40000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x20000000) == 0)
  {
LABEL_514:
    if ((v32 & 0x10000000) == 0)
      goto LABEL_515;
    goto LABEL_618;
  }
LABEL_617:
  self->_newsTodayWidgetClickImpressionValue = *((double *)v5 + 158);
  *((_QWORD *)&self->_has + 2) |= 0x20000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x10000000) == 0)
  {
LABEL_515:
    if ((v32 & 0x8000000) == 0)
      goto LABEL_516;
    goto LABEL_619;
  }
LABEL_618:
  self->_newsTodayWidgetClickClickValue = *((double *)v5 + 157);
  *((_QWORD *)&self->_has + 2) |= 0x10000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x8000000) == 0)
  {
LABEL_516:
    if ((v32 & 0x4000000) == 0)
      goto LABEL_517;
    goto LABEL_620;
  }
LABEL_619:
  self->_newsTodayWidgetClickBaselineImpressionValue = *((double *)v5 + 156);
  *((_QWORD *)&self->_has + 2) |= 0x8000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x4000000) == 0)
  {
LABEL_517:
    if ((v32 & 0x2000000000) == 0)
      goto LABEL_518;
    goto LABEL_621;
  }
LABEL_620:
  self->_newsTodayWidgetClickBaselineClickValue = *((double *)v5 + 155);
  *((_QWORD *)&self->_has + 2) |= 0x4000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x2000000000) == 0)
  {
LABEL_518:
    if ((v32 & 0x1000000000) == 0)
      goto LABEL_519;
    goto LABEL_622;
  }
LABEL_621:
  self->_newsTodayWidgetVideoPlaybackImpressionValue = *((double *)v5 + 166);
  *((_QWORD *)&self->_has + 2) |= 0x2000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x1000000000) == 0)
  {
LABEL_519:
    if ((v32 & 0x800000000) == 0)
      goto LABEL_520;
    goto LABEL_623;
  }
LABEL_622:
  self->_newsTodayWidgetVideoPlaybackClickValue = *((double *)v5 + 165);
  *((_QWORD *)&self->_has + 2) |= 0x1000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x800000000) == 0)
  {
LABEL_520:
    if ((v32 & 0x400000000) == 0)
      goto LABEL_521;
    goto LABEL_624;
  }
LABEL_623:
  self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue = *((double *)v5 + 164);
  *((_QWORD *)&self->_has + 2) |= 0x800000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x400000000) == 0)
  {
LABEL_521:
    if ((v37 & 0x1000000000000000) == 0)
      goto LABEL_522;
    goto LABEL_625;
  }
LABEL_624:
  self->_newsTodayWidgetVideoPlaybackBaselineClickValue = *((double *)v5 + 163);
  *((_QWORD *)&self->_has + 2) |= 0x400000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x1000000000000000) == 0)
  {
LABEL_522:
    if ((v37 & 0x4000000000000) == 0)
      goto LABEL_523;
    goto LABEL_626;
  }
LABEL_625:
  self->_ctrWithZeroSubscribed = *((double *)v5 + 61);
  *(_QWORD *)&self->_has |= 0x1000000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x4000000000000) == 0)
  {
LABEL_523:
    if ((v37 & 0x200000000000000) == 0)
      goto LABEL_524;
    goto LABEL_627;
  }
LABEL_626:
  self->_ctrWithOneSubscribed = *((double *)v5 + 51);
  *(_QWORD *)&self->_has |= 0x4000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x200000000000000) == 0)
  {
LABEL_524:
    if ((v37 & 0x40000000000000) == 0)
      goto LABEL_525;
    goto LABEL_628;
  }
LABEL_627:
  self->_ctrWithTwoSubscribed = *((double *)v5 + 58);
  *(_QWORD *)&self->_has |= 0x200000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x40000000000000) == 0)
  {
LABEL_525:
    if ((v37 & 0x800000000000000) == 0)
      goto LABEL_526;
    goto LABEL_629;
  }
LABEL_628:
  self->_ctrWithThreeSubscribed = *((double *)v5 + 55);
  *(_QWORD *)&self->_has |= 0x40000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x800000000000000) == 0)
  {
LABEL_526:
    if ((v37 & 0x2000000000000) == 0)
      goto LABEL_527;
    goto LABEL_630;
  }
LABEL_629:
  self->_ctrWithZeroMuted = *((double *)v5 + 60);
  *(_QWORD *)&self->_has |= 0x800000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x2000000000000) == 0)
  {
LABEL_527:
    if ((v37 & 0x100000000000000) == 0)
      goto LABEL_528;
    goto LABEL_631;
  }
LABEL_630:
  self->_ctrWithOneMuted = *((double *)v5 + 50);
  *(_QWORD *)&self->_has |= 0x2000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x100000000000000) == 0)
  {
LABEL_528:
    if ((v37 & 0x20000000000000) == 0)
      goto LABEL_529;
    goto LABEL_632;
  }
LABEL_631:
  self->_ctrWithTwoMuted = *((double *)v5 + 57);
  *(_QWORD *)&self->_has |= 0x100000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x20000000000000) == 0)
  {
LABEL_529:
    if ((v37 & 0x400000000000000) == 0)
      goto LABEL_530;
    goto LABEL_633;
  }
LABEL_632:
  self->_ctrWithThreeMuted = *((double *)v5 + 54);
  *(_QWORD *)&self->_has |= 0x20000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x400000000000000) == 0)
  {
LABEL_530:
    if ((v37 & 0x1000000000000) == 0)
      goto LABEL_531;
    goto LABEL_634;
  }
LABEL_633:
  self->_ctrWithZeroAutofavorited = *((double *)v5 + 59);
  *(_QWORD *)&self->_has |= 0x400000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x1000000000000) == 0)
  {
LABEL_531:
    if ((v37 & 0x80000000000000) == 0)
      goto LABEL_532;
    goto LABEL_635;
  }
LABEL_634:
  self->_ctrWithOneAutofavorited = *((double *)v5 + 49);
  *(_QWORD *)&self->_has |= 0x1000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x80000000000000) == 0)
  {
LABEL_532:
    if ((v37 & 0x10000000000000) == 0)
      goto LABEL_533;
    goto LABEL_636;
  }
LABEL_635:
  self->_ctrWithTwoAutofavorited = *((double *)v5 + 56);
  *(_QWORD *)&self->_has |= 0x80000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x10000000000000) == 0)
  {
LABEL_533:
    if ((v37 & 0x400000000) == 0)
      goto LABEL_534;
    goto LABEL_637;
  }
LABEL_636:
  self->_ctrWithThreeAutofavorited = *((double *)v5 + 53);
  *(_QWORD *)&self->_has |= 0x10000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x400000000) == 0)
  {
LABEL_534:
    if ((v35 & 0x20) == 0)
      goto LABEL_535;
    goto LABEL_638;
  }
LABEL_637:
  self->_autofavoritedVoteCoefficient = *((double *)v5 + 35);
  *(_QWORD *)&self->_has |= 0x400000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x20) == 0)
  {
LABEL_535:
    if ((v36 & 0x20000000) == 0)
      goto LABEL_536;
    goto LABEL_639;
  }
LABEL_638:
  self->_realTimeUserFeedbackCoefficient = *((double *)v5 + 198);
  *((_QWORD *)&self->_has + 3) |= 0x20uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v36 & 0x20000000) == 0)
  {
LABEL_536:
    if ((v36 & 0x10000000) == 0)
      goto LABEL_537;
    goto LABEL_640;
  }
LABEL_639:
  self->_globalScoreToCtrSlope = *((double *)v5 + 94);
  *((_QWORD *)&self->_has + 1) |= 0x20000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v36 & 0x10000000) == 0)
  {
LABEL_537:
    if ((v37 & 0x1000000000) == 0)
      goto LABEL_538;
    goto LABEL_641;
  }
LABEL_640:
  self->_globalScoreToCtrIntercept = *((double *)v5 + 93);
  *((_QWORD *)&self->_has + 1) |= 0x10000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x1000000000) == 0)
  {
LABEL_538:
    if ((v37 & 0x80) == 0)
      goto LABEL_539;
    goto LABEL_642;
  }
LABEL_641:
  self->_baselineArticleScore = *((double *)v5 + 37);
  *(_QWORD *)&self->_has |= 0x1000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x80) == 0)
  {
LABEL_539:
    if ((v37 & 0x40) == 0)
      goto LABEL_540;
    goto LABEL_643;
  }
LABEL_642:
  self->_appInstallImpressionValue = *((double *)v5 + 8);
  *(_QWORD *)&self->_has |= 0x80uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x40) == 0)
  {
LABEL_540:
    if ((v37 & 0x20) == 0)
      goto LABEL_541;
    goto LABEL_644;
  }
LABEL_643:
  self->_appInstallClickValue = *((double *)v5 + 7);
  *(_QWORD *)&self->_has |= 0x40uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x20) == 0)
  {
LABEL_541:
    if ((v37 & 0x10) == 0)
      goto LABEL_542;
    goto LABEL_645;
  }
LABEL_644:
  self->_appInstallBaselineImpressionValue = *((double *)v5 + 6);
  *(_QWORD *)&self->_has |= 0x20uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x10) == 0)
  {
LABEL_542:
    if ((v37 & 8) == 0)
      goto LABEL_543;
    goto LABEL_646;
  }
LABEL_645:
  self->_appInstallBaselineClickValue = *((double *)v5 + 5);
  *(_QWORD *)&self->_has |= 0x10uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 8) == 0)
  {
LABEL_543:
    if ((v37 & 4) == 0)
      goto LABEL_544;
    goto LABEL_647;
  }
LABEL_646:
  self->_appInFocusImpressionValue = *((double *)v5 + 4);
  *(_QWORD *)&self->_has |= 8uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 4) == 0)
  {
LABEL_544:
    if ((v37 & 2) == 0)
      goto LABEL_545;
    goto LABEL_648;
  }
LABEL_647:
  self->_appInFocusClickValue = *((double *)v5 + 3);
  *(_QWORD *)&self->_has |= 4uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 2) == 0)
  {
LABEL_545:
    if ((v37 & 1) == 0)
      goto LABEL_546;
    goto LABEL_649;
  }
LABEL_648:
  self->_appInFocusBaselineImpressionValue = *((double *)v5 + 2);
  *(_QWORD *)&self->_has |= 2uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 1) == 0)
  {
LABEL_546:
    if ((v35 & 0x80000) == 0)
      goto LABEL_547;
    goto LABEL_650;
  }
LABEL_649:
  self->_appInFocusBaselineClickValue = *((double *)v5 + 1);
  *(_QWORD *)&self->_has |= 1uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x80000) == 0)
  {
LABEL_547:
    if ((v35 & 0x40000) == 0)
      goto LABEL_548;
    goto LABEL_651;
  }
LABEL_650:
  self->_safariHistoryImpressionValue = *((double *)v5 + 212);
  *((_QWORD *)&self->_has + 3) |= 0x80000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x40000) == 0)
  {
LABEL_548:
    if ((v35 & 0x20000) == 0)
      goto LABEL_549;
    goto LABEL_652;
  }
LABEL_651:
  self->_safariHistoryClickValue = *((double *)v5 + 211);
  *((_QWORD *)&self->_has + 3) |= 0x40000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x20000) == 0)
  {
LABEL_549:
    if ((v35 & 0x10000) == 0)
      goto LABEL_550;
    goto LABEL_653;
  }
LABEL_652:
  self->_safariHistoryBaselineImpressionValue = *((double *)v5 + 210);
  *((_QWORD *)&self->_has + 3) |= 0x20000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x10000) == 0)
  {
LABEL_550:
    if ((v34 & 4) == 0)
      goto LABEL_551;
    goto LABEL_654;
  }
LABEL_653:
  self->_safariHistoryBaselineClickValue = *((double *)v5 + 209);
  *((_QWORD *)&self->_has + 3) |= 0x10000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 4) == 0)
  {
LABEL_551:
    if ((v34 & 2) == 0)
      goto LABEL_552;
    goto LABEL_655;
  }
LABEL_654:
  self->_videoComplete25ImpressionValue = *((double *)v5 + 323);
  *((_QWORD *)&self->_has + 5) |= 4uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 2) == 0)
  {
LABEL_552:
    if ((v34 & 1) == 0)
      goto LABEL_553;
    goto LABEL_656;
  }
LABEL_655:
  self->_videoComplete25ClickValue = *((double *)v5 + 322);
  *((_QWORD *)&self->_has + 5) |= 2uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 1) == 0)
  {
LABEL_553:
    if ((v33 & 0x8000000000000000) == 0)
      goto LABEL_554;
    goto LABEL_657;
  }
LABEL_656:
  self->_videoComplete25BaselineImpressionValue = *((double *)v5 + 321);
  *((_QWORD *)&self->_has + 5) |= 1uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v33 & 0x8000000000000000) == 0)
  {
LABEL_554:
    if ((v34 & 0x40) == 0)
      goto LABEL_555;
    goto LABEL_658;
  }
LABEL_657:
  self->_videoComplete25BaselineClickValue = *((double *)v5 + 320);
  *((_QWORD *)&self->_has + 4) |= 0x8000000000000000;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x40) == 0)
  {
LABEL_555:
    if ((v34 & 0x20) == 0)
      goto LABEL_556;
    goto LABEL_659;
  }
LABEL_658:
  self->_videoComplete50ImpressionValue = *((double *)v5 + 327);
  *((_QWORD *)&self->_has + 5) |= 0x40uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x20) == 0)
  {
LABEL_556:
    if ((v34 & 0x10) == 0)
      goto LABEL_557;
    goto LABEL_660;
  }
LABEL_659:
  self->_videoComplete50ClickValue = *((double *)v5 + 326);
  *((_QWORD *)&self->_has + 5) |= 0x20uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x10) == 0)
  {
LABEL_557:
    if ((v34 & 8) == 0)
      goto LABEL_558;
    goto LABEL_661;
  }
LABEL_660:
  self->_videoComplete50BaselineImpressionValue = *((double *)v5 + 325);
  *((_QWORD *)&self->_has + 5) |= 0x10uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 8) == 0)
  {
LABEL_558:
    if ((v34 & 0x400) == 0)
      goto LABEL_559;
    goto LABEL_662;
  }
LABEL_661:
  self->_videoComplete50BaselineClickValue = *((double *)v5 + 324);
  *((_QWORD *)&self->_has + 5) |= 8uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x400) == 0)
  {
LABEL_559:
    if ((v34 & 0x200) == 0)
      goto LABEL_560;
    goto LABEL_663;
  }
LABEL_662:
  self->_videoComplete75ImpressionValue = *((double *)v5 + 331);
  *((_QWORD *)&self->_has + 5) |= 0x400uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x200) == 0)
  {
LABEL_560:
    if ((v34 & 0x100) == 0)
      goto LABEL_561;
    goto LABEL_664;
  }
LABEL_663:
  self->_videoComplete75ClickValue = *((double *)v5 + 330);
  *((_QWORD *)&self->_has + 5) |= 0x200uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x100) == 0)
  {
LABEL_561:
    if ((v34 & 0x80) == 0)
      goto LABEL_562;
    goto LABEL_665;
  }
LABEL_664:
  self->_videoComplete75BaselineImpressionValue = *((double *)v5 + 329);
  *((_QWORD *)&self->_has + 5) |= 0x100uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x80) == 0)
  {
LABEL_562:
    if ((v37 & 0x400000) == 0)
      goto LABEL_563;
    goto LABEL_666;
  }
LABEL_665:
  self->_videoComplete75BaselineClickValue = *((double *)v5 + 328);
  *((_QWORD *)&self->_has + 5) |= 0x80uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x400000) == 0)
  {
LABEL_563:
    if ((v36 & 0x2000000) == 0)
      goto LABEL_564;
    goto LABEL_667;
  }
LABEL_666:
  self->_autoFavoriteMinClicks = *((double *)v5 + 23);
  *(_QWORD *)&self->_has |= 0x400000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v36 & 0x2000000) == 0)
  {
LABEL_564:
    if ((v36 & 0x4000000) == 0)
      goto LABEL_565;
    goto LABEL_668;
  }
LABEL_667:
  self->_globalScoreCoefficientHalfLife = *((double *)v5 + 90);
  *((_QWORD *)&self->_has + 1) |= 0x2000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v36 & 0x4000000) == 0)
  {
LABEL_565:
    if ((v34 & 0x20000000000000) == 0)
      goto LABEL_566;
    goto LABEL_669;
  }
LABEL_668:
  self->_globalScoreCoefficientInitialMultiplier = *((double *)v5 + 91);
  *((_QWORD *)&self->_has + 1) |= 0x4000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x20000000000000) == 0)
  {
LABEL_566:
    if ((v34 & 0x200000000000) == 0)
      goto LABEL_567;
    goto LABEL_670;
  }
LABEL_669:
  self->_minClusterSizeIPhoneAutoFavorite = *((_DWORD *)v5 + 722);
  *((_QWORD *)&self->_has + 5) |= 0x20000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x200000000000) == 0)
  {
LABEL_567:
    if ((v34 & 0x200000000000000) == 0)
      goto LABEL_568;
    goto LABEL_671;
  }
LABEL_670:
  self->_maxClusterSizeIPhoneAutoFavorite = *((_DWORD *)v5 + 714);
  *((_QWORD *)&self->_has + 5) |= 0x200000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x200000000000000) == 0)
  {
LABEL_568:
    if ((v34 & 0x2000000000000) == 0)
      goto LABEL_569;
    goto LABEL_672;
  }
LABEL_671:
  self->_minIdealClusterSizeIPhoneAutoFavorite = *((_DWORD *)v5 + 726);
  *((_QWORD *)&self->_has + 5) |= 0x200000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x2000000000000) == 0)
  {
LABEL_569:
    if ((v34 & 0x8000000000000) == 0)
      goto LABEL_570;
    goto LABEL_673;
  }
LABEL_672:
  self->_maxIdealClusterSizeIPhoneAutoFavorite = *((_DWORD *)v5 + 718);
  *((_QWORD *)&self->_has + 5) |= 0x2000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x8000000000000) == 0)
  {
LABEL_570:
    if ((v34 & 0x80000000000) == 0)
      goto LABEL_571;
    goto LABEL_674;
  }
LABEL_673:
  self->_minClusterSizeIPadAutoFavorite = *((_DWORD *)v5 + 720);
  *((_QWORD *)&self->_has + 5) |= 0x8000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x80000000000) == 0)
  {
LABEL_571:
    if ((v34 & 0x80000000000000) == 0)
      goto LABEL_572;
    goto LABEL_675;
  }
LABEL_674:
  self->_maxClusterSizeIPadAutoFavorite = *((_DWORD *)v5 + 712);
  *((_QWORD *)&self->_has + 5) |= 0x80000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v34 = *((_QWORD *)v5 + 376);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v34 & 0x80000000000000) == 0)
  {
LABEL_572:
    if ((v34 & 0x800000000000) == 0)
      goto LABEL_573;
    goto LABEL_676;
  }
LABEL_675:
  self->_minIdealClusterSizeIPadAutoFavorite = *((_DWORD *)v5 + 724);
  *((_QWORD *)&self->_has + 5) |= 0x80000000000000uLL;
  v33 = *((_QWORD *)v5 + 375);
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((*((_QWORD *)v5 + 376) & 0x800000000000) == 0)
  {
LABEL_573:
    if ((v35 & 0x80000000000000) == 0)
      goto LABEL_574;
    goto LABEL_677;
  }
LABEL_676:
  self->_maxIdealClusterSizeIPadAutoFavorite = *((_DWORD *)v5 + 716);
  *((_QWORD *)&self->_has + 5) |= 0x800000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x80000000000000) == 0)
  {
LABEL_574:
    if ((v35 & 0x40000000000000) == 0)
      goto LABEL_575;
    goto LABEL_678;
  }
LABEL_677:
  self->_swipeToArticleWeakClickMinimumDuration = *((double *)v5 + 248);
  *((_QWORD *)&self->_has + 3) |= 0x80000000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x40000000000000) == 0)
  {
LABEL_575:
    if ((v32 & 0x10) == 0)
      goto LABEL_576;
    goto LABEL_679;
  }
LABEL_678:
  self->_swipeToArticleHeavyClickMinimumDuration = *((double *)v5 + 247);
  *((_QWORD *)&self->_has + 3) |= 0x40000000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x10) == 0)
  {
LABEL_576:
    if ((v37 & 0x400000000000) == 0)
      goto LABEL_577;
    goto LABEL_680;
  }
LABEL_679:
  self->_maxSuggestionsCount = *((_QWORD *)v5 + 133);
  *((_QWORD *)&self->_has + 2) |= 0x10uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x400000000000) == 0)
  {
LABEL_577:
    if ((v37 & 0x100000000000) == 0)
      goto LABEL_578;
    goto LABEL_681;
  }
LABEL_680:
  self->_cohortMembershipFavoritedBoost = *((double *)v5 + 47);
  *(_QWORD *)&self->_has |= 0x400000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x100000000000) == 0)
  {
LABEL_578:
    if ((v37 & 0x80000000000) == 0)
      goto LABEL_579;
    goto LABEL_682;
  }
LABEL_681:
  self->_cohortMembershipCurvature = *((double *)v5 + 45);
  *(_QWORD *)&self->_has |= 0x100000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x80000000000) == 0)
  {
LABEL_579:
    if ((v35 & 0x8000) == 0)
      goto LABEL_580;
    goto LABEL_683;
  }
LABEL_682:
  self->_cohortMembershipCtrCeiling = *((double *)v5 + 44);
  *(_QWORD *)&self->_has |= 0x80000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x8000) == 0)
  {
LABEL_580:
    if ((v37 & 0x10000000000) == 0)
      goto LABEL_581;
    goto LABEL_684;
  }
LABEL_683:
  self->_safariEventBlackoutSeconds = *((double *)v5 + 208);
  *((_QWORD *)&self->_has + 3) |= 0x8000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x10000000000) == 0)
  {
LABEL_581:
    if ((v35 & 0x40) == 0)
      goto LABEL_582;
    goto LABEL_685;
  }
LABEL_684:
  self->_channelTopicDiversificationPenalty = *((double *)v5 + 41);
  *(_QWORD *)&self->_has |= 0x10000000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x40) == 0)
  {
LABEL_582:
    if ((v37 & 0x80000000) == 0)
      goto LABEL_583;
    goto LABEL_686;
  }
LABEL_685:
  self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient = *((double *)v5 + 199);
  *((_QWORD *)&self->_has + 3) |= 0x40uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x80000000) == 0)
  {
LABEL_583:
    if ((v37 & 0x40000000) == 0)
      goto LABEL_584;
    goto LABEL_687;
  }
LABEL_686:
  self->_autoFavoriteTagFavorabilityExponent = *((double *)v5 + 32);
  *(_QWORD *)&self->_has |= 0x80000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v33 = *((_QWORD *)v5 + 375);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x40000000) == 0)
  {
LABEL_584:
    if ((v33 & 0x10000000000000) == 0)
      goto LABEL_585;
    goto LABEL_688;
  }
LABEL_687:
  self->_autoFavoritePriorFactorExponent = *((double *)v5 + 31);
  *(_QWORD *)&self->_has |= 0x40000000uLL;
  v35 = *((_QWORD *)v5 + 374);
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((*((_QWORD *)v5 + 375) & 0x10000000000000) == 0)
  {
LABEL_585:
    if ((v38 & 0x400) == 0)
      goto LABEL_586;
    goto LABEL_689;
  }
LABEL_688:
  self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio = *((double *)v5 + 309);
  *((_QWORD *)&self->_has + 4) |= 0x10000000000000uLL;
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v38 & 0x400) == 0)
  {
LABEL_586:
    if ((v35 & 0x800000) == 0)
      goto LABEL_587;
    goto LABEL_690;
  }
LABEL_689:
  self->_onlyConsiderBestSourceFeedsInForYouGroup = *((_BYTE *)v5 + 2964);
  *((_WORD *)&self->_has + 24) |= 0x400u;
  v32 = *((_QWORD *)v5 + 373);
  v35 = *((_QWORD *)v5 + 374);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((v35 & 0x800000) == 0)
  {
LABEL_587:
    if ((v35 & 0x200000) == 0)
      goto LABEL_588;
    goto LABEL_691;
  }
LABEL_690:
  self->_safariTagFavorabilityExponent = *((double *)v5 + 216);
  *((_QWORD *)&self->_has + 3) |= 0x800000uLL;
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v36 = *((_QWORD *)v5 + 372);
  v38 = *((_WORD *)v5 + 1508);
  if ((*((_QWORD *)v5 + 374) & 0x200000) == 0)
  {
LABEL_588:
    if ((v37 & 0x800) == 0)
      goto LABEL_589;
    goto LABEL_692;
  }
LABEL_691:
  self->_safariPriorFactorExponent = *((double *)v5 + 214);
  *((_QWORD *)&self->_has + 3) |= 0x200000uLL;
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v37 = *((_QWORD *)v5 + 371);
  v38 = *((_WORD *)v5 + 1508);
  if ((v37 & 0x800) == 0)
  {
LABEL_589:
    if ((v37 & 0x200) == 0)
      goto LABEL_590;
    goto LABEL_693;
  }
LABEL_692:
  self->_appUsageTagFavorabilityExponent = *((double *)v5 + 12);
  *(_QWORD *)&self->_has |= 0x800uLL;
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v38 = *((_WORD *)v5 + 1508);
  if ((*((_QWORD *)v5 + 371) & 0x200) == 0)
  {
LABEL_590:
    if ((v32 & 0x4000000000000) == 0)
      goto LABEL_591;
    goto LABEL_694;
  }
LABEL_693:
  self->_appUsagePriorFactorExponent = *((double *)v5 + 10);
  *(_QWORD *)&self->_has |= 0x200uLL;
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x4000000000000) == 0)
  {
LABEL_591:
    if ((v32 & 0x800000000000) == 0)
      goto LABEL_592;
    goto LABEL_695;
  }
LABEL_694:
  self->_portraitTagFavorabilityExponent = *((double *)v5 + 179);
  *((_QWORD *)&self->_has + 2) |= 0x4000000000000uLL;
  v36 = *((_QWORD *)v5 + 372);
  v32 = *((_QWORD *)v5 + 373);
  v38 = *((_WORD *)v5 + 1508);
  if ((v32 & 0x800000000000) == 0)
  {
LABEL_592:
    if ((v36 & 0x200000000000000) == 0)
      goto LABEL_593;
    goto LABEL_696;
  }
LABEL_695:
  self->_portraitPriorFactorExponent = *((double *)v5 + 176);
  *((_QWORD *)&self->_has + 2) |= 0x800000000000uLL;
  v32 = *((_QWORD *)v5 + 373);
  v38 = *((_WORD *)v5 + 1508);
  if ((*((_QWORD *)v5 + 372) & 0x200000000000000) == 0)
  {
LABEL_593:
    if ((v38 & 0x20) == 0)
      goto LABEL_594;
    goto LABEL_697;
  }
LABEL_696:
  self->_internalUsageSignalWeight = *((double *)v5 + 122);
  *((_QWORD *)&self->_has + 1) |= 0x200000000000000uLL;
  v32 = *((_QWORD *)v5 + 373);
  if ((*((_WORD *)v5 + 1508) & 0x20) == 0)
  {
LABEL_594:
    if ((v32 & 0x4000000000) == 0)
      goto LABEL_595;
    goto LABEL_698;
  }
LABEL_697:
  self->_enablePreTigrisArticleScoring = *((_BYTE *)v5 + 2959);
  *((_WORD *)&self->_has + 24) |= 0x20u;
  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x4000000000) == 0)
  {
LABEL_595:
    if ((v32 & 0x80) == 0)
      goto LABEL_596;
    goto LABEL_699;
  }
LABEL_698:
  self->_numEventsToDisableDefaultTopics = *((_QWORD *)v5 + 167);
  *((_QWORD *)&self->_has + 2) |= 0x4000000000uLL;
  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x80) == 0)
  {
LABEL_596:
    if ((v32 & 0x40) == 0)
      goto LABEL_597;
    goto LABEL_700;
  }
LABEL_699:
  self->_metaGroupingRelatednessThreshold = *((double *)v5 + 136);
  *((_QWORD *)&self->_has + 2) |= 0x80uLL;
  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x40) == 0)
  {
LABEL_597:
    if ((v32 & 0x200) == 0)
      goto LABEL_598;
    goto LABEL_701;
  }
LABEL_700:
  self->_metaGroupingRelatednessKWeight = *((double *)v5 + 135);
  *((_QWORD *)&self->_has + 2) |= 0x40uLL;
  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x200) == 0)
  {
LABEL_598:
    if ((v32 & 0x20) == 0)
      goto LABEL_599;
    goto LABEL_702;
  }
LABEL_701:
  self->_metaGroupingTopicScoreWeight = *((double *)v5 + 138);
  *((_QWORD *)&self->_has + 2) |= 0x200uLL;
  v32 = *((_QWORD *)v5 + 373);
  if ((v32 & 0x20) == 0)
  {
LABEL_599:
    if ((v32 & 0x100) == 0)
      goto LABEL_601;
    goto LABEL_600;
  }
LABEL_702:
  self->_metaGroupingHighestScoringRelativeScoreMultiplier = *((double *)v5 + 134);
  *((_QWORD *)&self->_has + 2) |= 0x20uLL;
  if ((*((_QWORD *)v5 + 373) & 0x100) != 0)
  {
LABEL_600:
    self->_metaGroupingSubscribedTopicMultiplier = *((double *)v5 + 137);
    *((_QWORD *)&self->_has + 2) |= 0x100uLL;
  }
LABEL_601:
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v39 = *((id *)v5 + 368);
  v40 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
  if (v40)
  {
    v41 = v40;
    v42 = *(_QWORD *)v51;
    do
    {
      for (j = 0; j != v41; ++j)
      {
        if (*(_QWORD *)v51 != v42)
          objc_enumerationMutation(v39);
        -[NTPBPersonalizationTreatment addRealTimeUserFeedbackTagCoefficients:](self, "addRealTimeUserFeedbackTagCoefficients:", *(_QWORD *)(*((_QWORD *)&v50 + 1) + 8 * j), (_QWORD)v50);
      }
      v41 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
    }
    while (v41);
  }

  v44 = *((_QWORD *)v5 + 372);
  if ((v44 & 0x8000) != 0)
  {
    self->_expandedAutofavoriteClusterMinSizeMultiplier = *((double *)v5 + 80);
    *((_QWORD *)&self->_has + 1) |= 0x8000uLL;
    v45 = *((_QWORD *)v5 + 375);
    v46 = *((_QWORD *)v5 + 376);
    v48 = *((_QWORD *)v5 + 373);
    v47 = *((_QWORD *)v5 + 374);
    v44 = *((_QWORD *)v5 + 372);
  }
  else
  {
    v45 = *((_QWORD *)v5 + 375);
    v46 = *((_QWORD *)v5 + 376);
    v48 = *((_QWORD *)v5 + 373);
    v47 = *((_QWORD *)v5 + 374);
  }
  v49 = *((_QWORD *)v5 + 371);
  if ((v44 & 0x4000) != 0)
  {
    self->_expandedAutofavoriteClusterMaxSizeMultiplier = *((double *)v5 + 79);
    *((_QWORD *)&self->_has + 1) |= 0x4000uLL;
    v45 = *((_QWORD *)v5 + 375);
    v46 = *((_QWORD *)v5 + 376);
    v48 = *((_QWORD *)v5 + 373);
    v47 = *((_QWORD *)v5 + 374);
    v49 = *((_QWORD *)v5 + 371);
    v44 = *((_QWORD *)v5 + 372);
    if ((v48 & 8) == 0)
    {
LABEL_707:
      if ((v49 & 0x200000) == 0)
        goto LABEL_708;
      goto LABEL_764;
    }
  }
  else if ((v48 & 8) == 0)
  {
    goto LABEL_707;
  }
  self->_maxExpandedAutofavoriteGroupCandidateRatio = *((double *)v5 + 132);
  *((_QWORD *)&self->_has + 2) |= 8uLL;
  v45 = *((_QWORD *)v5 + 375);
  v46 = *((_QWORD *)v5 + 376);
  v48 = *((_QWORD *)v5 + 373);
  v47 = *((_QWORD *)v5 + 374);
  v49 = *((_QWORD *)v5 + 371);
  v44 = *((_QWORD *)v5 + 372);
  if ((v49 & 0x200000) == 0)
  {
LABEL_708:
    if ((v46 & 0x8000000) == 0)
      goto LABEL_709;
    goto LABEL_765;
  }
LABEL_764:
  self->_autoFavoriteMaxIdleTime = *((double *)v5 + 22);
  *(_QWORD *)&self->_has |= 0x200000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v47 = *((_QWORD *)v5 + 374);
  v49 = *((_QWORD *)v5 + 371);
  v44 = *((_QWORD *)v5 + 372);
  if ((*((_QWORD *)v5 + 376) & 0x8000000) == 0)
  {
LABEL_709:
    if ((v48 & 0x8000000000) == 0)
      goto LABEL_710;
    goto LABEL_766;
  }
LABEL_765:
  self->_auditionedAutoFavoritesEmitterLimit = *((_DWORD *)v5 + 696);
  *((_QWORD *)&self->_has + 5) |= 0x8000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v44 = *((_QWORD *)v5 + 372);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v48 & 0x8000000000) == 0)
  {
LABEL_710:
    if ((v48 & 0x1000000000000000) == 0)
      goto LABEL_711;
    goto LABEL_767;
  }
LABEL_766:
  self->_numSubscriptionsToDisableDefaultTopics = *((_QWORD *)v5 + 168);
  *((_QWORD *)&self->_has + 2) |= 0x8000000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v44 = *((_QWORD *)v5 + 372);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v48 & 0x1000000000000000) == 0)
  {
LABEL_711:
    if ((v44 & 8) == 0)
      goto LABEL_712;
    goto LABEL_768;
  }
LABEL_767:
  self->_publisherAggregateWeight = *((double *)v5 + 189);
  *((_QWORD *)&self->_has + 2) |= 0x1000000000000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v44 = *((_QWORD *)v5 + 372);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v44 & 8) == 0)
  {
LABEL_712:
    if ((v44 & 0x20) == 0)
      goto LABEL_713;
    goto LABEL_769;
  }
LABEL_768:
  self->_diversificationInitialPenalty = *((double *)v5 + 68);
  *((_QWORD *)&self->_has + 1) |= 8uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((*((_QWORD *)v5 + 372) & 0x20) == 0)
  {
LABEL_713:
    if ((v49 & 0x8000000000) == 0)
      goto LABEL_714;
    goto LABEL_770;
  }
LABEL_769:
  self->_diversificationPenaltyHalfLife = *((double *)v5 + 70);
  *((_QWORD *)&self->_has + 1) |= 0x20uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v49 & 0x8000000000) == 0)
  {
LABEL_714:
    if ((v49 & 0x20000000000) == 0)
      goto LABEL_715;
    goto LABEL_771;
  }
LABEL_770:
  self->_channelTopicDiversificationInitialPenalty = *((double *)v5 + 40);
  *(_QWORD *)&self->_has |= 0x8000000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v49 & 0x20000000000) == 0)
  {
LABEL_715:
    if ((v48 & 0x2000000000000000) == 0)
      goto LABEL_716;
    goto LABEL_772;
  }
LABEL_771:
  self->_channelTopicDiversificationPenaltyHalfLife = *((double *)v5 + 42);
  *(_QWORD *)&self->_has |= 0x20000000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v48 & 0x2000000000000000) == 0)
  {
LABEL_716:
    if ((v48 & 0x8000000000000000) == 0)
      goto LABEL_717;
    goto LABEL_773;
  }
LABEL_772:
  self->_publisherDiversificationInitialPenalty = *((double *)v5 + 190);
  *((_QWORD *)&self->_has + 2) |= 0x2000000000000000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v48 & 0x8000000000000000) == 0)
  {
LABEL_717:
    if ((v48 & 0x800) == 0)
      goto LABEL_718;
    goto LABEL_774;
  }
LABEL_773:
  self->_publisherDiversificationPenaltyHalfLife = *((double *)v5 + 192);
  *((_QWORD *)&self->_has + 2) |= 0x8000000000000000;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v48 = *((_QWORD *)v5 + 373);
  v49 = *((_QWORD *)v5 + 371);
  if ((v48 & 0x800) == 0)
  {
LABEL_718:
    if ((v48 & 0x1000) == 0)
      goto LABEL_719;
    goto LABEL_775;
  }
LABEL_774:
  self->_minimumGlobalScoreThreshold = *((double *)v5 + 140);
  *((_QWORD *)&self->_has + 2) |= 0x800uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((*((_QWORD *)v5 + 373) & 0x1000) == 0)
  {
LABEL_719:
    if ((v47 & 0x800000000000) == 0)
      goto LABEL_720;
    goto LABEL_776;
  }
LABEL_775:
  self->_minimumGlobalScoreThresholdForSubscribedChannel = *((double *)v5 + 141);
  *((_QWORD *)&self->_has + 2) |= 0x1000uLL;
  v47 = *((_QWORD *)v5 + 374);
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v47 & 0x800000000000) == 0)
  {
LABEL_720:
    if ((v47 & 0x1000000000000) == 0)
      goto LABEL_721;
    goto LABEL_777;
  }
LABEL_776:
  self->_subscribedChannelScoreCoefficient = *((double *)v5 + 240);
  *((_QWORD *)&self->_has + 3) |= 0x800000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((*((_QWORD *)v5 + 374) & 0x1000000000000) == 0)
  {
LABEL_721:
    if ((v45 & 0x4000) == 0)
      goto LABEL_722;
    goto LABEL_778;
  }
LABEL_777:
  self->_subscribedTopicsScoreCoefficient = *((double *)v5 + 241);
  *((_QWORD *)&self->_has + 3) |= 0x1000000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x4000) == 0)
  {
LABEL_722:
    if ((v45 & 0x80000000) == 0)
      goto LABEL_723;
    goto LABEL_779;
  }
LABEL_778:
  self->_topicFeedBaselineRatePrior = *((double *)v5 + 271);
  *((_QWORD *)&self->_has + 4) |= 0x4000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x80000000) == 0)
  {
LABEL_723:
    if ((v45 & 0x100000000) == 0)
      goto LABEL_724;
    goto LABEL_780;
  }
LABEL_779:
  self->_topicFeedDecayFactor = *((double *)v5 + 288);
  *((_QWORD *)&self->_has + 4) |= 0x80000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x100000000) == 0)
  {
LABEL_724:
    if ((v45 & 0x20000000000) == 0)
      goto LABEL_725;
    goto LABEL_781;
  }
LABEL_780:
  self->_topicFeedDemocratizationFactor = *((double *)v5 + 289);
  *((_QWORD *)&self->_has + 4) |= 0x100000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x20000000000) == 0)
  {
LABEL_725:
    if ((v45 & 0x2000000000000) == 0)
      goto LABEL_726;
    goto LABEL_782;
  }
LABEL_781:
  self->_topicFeedHalfLifeCoefficient = *((double *)v5 + 298);
  *((_QWORD *)&self->_has + 4) |= 0x20000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x2000000000000) == 0)
  {
LABEL_726:
    if ((v45 & 0x100000000000) == 0)
      goto LABEL_727;
    goto LABEL_783;
  }
LABEL_782:
  self->_topicFeedSubscribedChannelScoreCoefficient = *((double *)v5 + 306);
  *((_QWORD *)&self->_has + 4) |= 0x2000000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x100000000000) == 0)
  {
LABEL_727:
    if ((v45 & 0x200000000000) == 0)
      goto LABEL_728;
    goto LABEL_784;
  }
LABEL_783:
  self->_topicFeedMutedVoteCoefficient = *((double *)v5 + 301);
  *((_QWORD *)&self->_has + 4) |= 0x100000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x200000000000) == 0)
  {
LABEL_728:
    if ((v45 & 0x400000000000) == 0)
      goto LABEL_729;
    goto LABEL_785;
  }
LABEL_784:
  self->_topicFeedPersonalizationCoefficient = *((double *)v5 + 302);
  *((_QWORD *)&self->_has + 4) |= 0x200000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x400000000000) == 0)
  {
LABEL_729:
    if ((v45 & 0x1000000000) == 0)
      goto LABEL_730;
    goto LABEL_786;
  }
LABEL_785:
  self->_topicFeedPublisherAggregateWeight = *((double *)v5 + 303);
  *((_QWORD *)&self->_has + 4) |= 0x400000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x1000000000) == 0)
  {
LABEL_730:
    if ((v45 & 0x2000000000) == 0)
      goto LABEL_731;
    goto LABEL_787;
  }
LABEL_786:
  self->_topicFeedGlobalScoreCoefficient = *((double *)v5 + 293);
  *((_QWORD *)&self->_has + 4) |= 0x1000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x2000000000) == 0)
  {
LABEL_731:
    if ((v45 & 0x4000000000) == 0)
      goto LABEL_732;
    goto LABEL_788;
  }
LABEL_787:
  self->_topicFeedGlobalScoreCoefficientHalfLife = *((double *)v5 + 294);
  *((_QWORD *)&self->_has + 4) |= 0x2000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x4000000000) == 0)
  {
LABEL_732:
    if ((v45 & 0x8000000000) == 0)
      goto LABEL_733;
    goto LABEL_789;
  }
LABEL_788:
  self->_topicFeedGlobalScoreCoefficientInitialMultiplier = *((double *)v5 + 295);
  *((_QWORD *)&self->_has + 4) |= 0x4000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x8000000000) == 0)
  {
LABEL_733:
    if ((v45 & 0x10000000000) == 0)
      goto LABEL_734;
    goto LABEL_790;
  }
LABEL_789:
  self->_topicFeedGlobalScoreToCtrIntercept = *((double *)v5 + 296);
  *((_QWORD *)&self->_has + 4) |= 0x8000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x10000000000) == 0)
  {
LABEL_734:
    if ((v45 & 0x40000000000) == 0)
      goto LABEL_735;
    goto LABEL_791;
  }
LABEL_790:
  self->_topicFeedGlobalScoreToCtrSlope = *((double *)v5 + 297);
  *((_QWORD *)&self->_has + 4) |= 0x10000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x40000000000) == 0)
  {
LABEL_735:
    if ((v45 & 0x80000000000) == 0)
      goto LABEL_736;
    goto LABEL_792;
  }
LABEL_791:
  self->_topicFeedMinimumGlobalScoreThreshold = *((double *)v5 + 299);
  *((_QWORD *)&self->_has + 4) |= 0x40000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x80000000000) == 0)
  {
LABEL_736:
    if ((v45 & 0x800000000000) == 0)
      goto LABEL_737;
    goto LABEL_793;
  }
LABEL_792:
  self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel = *((double *)v5 + 300);
  *((_QWORD *)&self->_has + 4) |= 0x80000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x800000000000) == 0)
  {
LABEL_737:
    if ((v45 & 0x1000000000000) == 0)
      goto LABEL_738;
    goto LABEL_794;
  }
LABEL_793:
  self->_topicFeedRealTimeUserFeedbackCoefficient = *((double *)v5 + 304);
  *((_QWORD *)&self->_has + 4) |= 0x800000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x1000000000000) == 0)
  {
LABEL_738:
    if ((v45 & 0x40000) == 0)
      goto LABEL_739;
    goto LABEL_795;
  }
LABEL_794:
  self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient = *((double *)v5 + 305);
  *((_QWORD *)&self->_has + 4) |= 0x1000000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x40000) == 0)
  {
LABEL_739:
    if ((v45 & 0x80000) == 0)
      goto LABEL_740;
    goto LABEL_796;
  }
LABEL_795:
  self->_topicFeedCohortMembershipCtrCeiling = *((double *)v5 + 275);
  *((_QWORD *)&self->_has + 4) |= 0x40000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x80000) == 0)
  {
LABEL_740:
    if ((v45 & 0x100000) == 0)
      goto LABEL_741;
    goto LABEL_797;
  }
LABEL_796:
  self->_topicFeedCohortMembershipCurvature = *((double *)v5 + 276);
  *((_QWORD *)&self->_has + 4) |= 0x80000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x100000) == 0)
  {
LABEL_741:
    if ((v45 & 0x200000) == 0)
      goto LABEL_742;
    goto LABEL_798;
  }
LABEL_797:
  self->_topicFeedCohortMembershipFavoritedBoost = *((double *)v5 + 277);
  *((_QWORD *)&self->_has + 4) |= 0x100000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x200000) == 0)
  {
LABEL_742:
    if ((v45 & 0x4000000000000) == 0)
      goto LABEL_743;
    goto LABEL_799;
  }
LABEL_798:
  self->_topicFeedCohortMembershipMinWeightedImpressions = *((double *)v5 + 278);
  *((_QWORD *)&self->_has + 4) |= 0x200000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x4000000000000) == 0)
  {
LABEL_743:
    if ((v45 & 0x40000000) == 0)
      goto LABEL_744;
    goto LABEL_800;
  }
LABEL_799:
  self->_topicFeedSubscribedTopicsScoreCoefficient = *((double *)v5 + 307);
  *((_QWORD *)&self->_has + 4) |= 0x4000000000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x40000000) == 0)
  {
LABEL_744:
    if ((v45 & 0x800000) == 0)
      goto LABEL_745;
    goto LABEL_801;
  }
LABEL_800:
  self->_topicFeedCtrWithZeroSubscribed = *((double *)v5 + 287);
  *((_QWORD *)&self->_has + 4) |= 0x40000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x800000) == 0)
  {
LABEL_745:
    if ((v45 & 0x10000000) == 0)
      goto LABEL_746;
    goto LABEL_802;
  }
LABEL_801:
  self->_topicFeedCtrWithOneSubscribed = *((double *)v5 + 280);
  *((_QWORD *)&self->_has + 4) |= 0x800000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x10000000) == 0)
  {
LABEL_746:
    if ((v45 & 0x4000000) == 0)
      goto LABEL_747;
    goto LABEL_803;
  }
LABEL_802:
  self->_topicFeedCtrWithTwoSubscribed = *((double *)v5 + 285);
  *((_QWORD *)&self->_has + 4) |= 0x10000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x4000000) == 0)
  {
LABEL_747:
    if ((v45 & 0x2000) == 0)
      goto LABEL_748;
    goto LABEL_804;
  }
LABEL_803:
  self->_topicFeedCtrWithThreeSubscribed = *((double *)v5 + 283);
  *((_QWORD *)&self->_has + 4) |= 0x4000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x2000) == 0)
  {
LABEL_748:
    if ((v45 & 0x20000000) == 0)
      goto LABEL_749;
    goto LABEL_805;
  }
LABEL_804:
  self->_topicFeedAutofavoritedVoteCoefficient = *((double *)v5 + 270);
  *((_QWORD *)&self->_has + 4) |= 0x2000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x20000000) == 0)
  {
LABEL_749:
    if ((v45 & 0x400000) == 0)
      goto LABEL_750;
    goto LABEL_806;
  }
LABEL_805:
  self->_topicFeedCtrWithZeroAutofavorited = *((double *)v5 + 286);
  *((_QWORD *)&self->_has + 4) |= 0x20000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x400000) == 0)
  {
LABEL_750:
    if ((v45 & 0x8000000) == 0)
      goto LABEL_751;
    goto LABEL_807;
  }
LABEL_806:
  self->_topicFeedCtrWithOneAutofavorited = *((double *)v5 + 279);
  *((_QWORD *)&self->_has + 4) |= 0x400000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x8000000) == 0)
  {
LABEL_751:
    if ((v45 & 0x2000000) == 0)
      goto LABEL_752;
    goto LABEL_808;
  }
LABEL_807:
  self->_topicFeedCtrWithTwoAutofavorited = *((double *)v5 + 284);
  *((_QWORD *)&self->_has + 4) |= 0x8000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x2000000) == 0)
  {
LABEL_752:
    if ((v45 & 0x200000000) == 0)
      goto LABEL_753;
    goto LABEL_809;
  }
LABEL_808:
  self->_topicFeedCtrWithThreeAutofavorited = *((double *)v5 + 282);
  *((_QWORD *)&self->_has + 4) |= 0x2000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x200000000) == 0)
  {
LABEL_753:
    if ((v45 & 0x400000000) == 0)
      goto LABEL_754;
    goto LABEL_810;
  }
LABEL_809:
  self->_topicFeedDiversificationInitialPenalty = *((double *)v5 + 290);
  *((_QWORD *)&self->_has + 4) |= 0x200000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x400000000) == 0)
  {
LABEL_754:
    if ((v45 & 0x800000000) == 0)
      goto LABEL_755;
    goto LABEL_811;
  }
LABEL_810:
  self->_topicFeedDiversificationPenalty = *((double *)v5 + 291);
  *((_QWORD *)&self->_has + 4) |= 0x400000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x800000000) == 0)
  {
LABEL_755:
    if ((v45 & 0x8000) == 0)
      goto LABEL_756;
    goto LABEL_812;
  }
LABEL_811:
  self->_topicFeedDiversificationPenaltyHalfLife = *((double *)v5 + 292);
  *((_QWORD *)&self->_has + 4) |= 0x800000000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x8000) == 0)
  {
LABEL_756:
    if ((v45 & 0x10000) == 0)
      goto LABEL_757;
    goto LABEL_813;
  }
LABEL_812:
  self->_topicFeedChannelTopicDiversificationInitialPenalty = *((double *)v5 + 272);
  *((_QWORD *)&self->_has + 4) |= 0x8000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x10000) == 0)
  {
LABEL_757:
    if ((v45 & 0x20000) == 0)
      goto LABEL_758;
    goto LABEL_814;
  }
LABEL_813:
  self->_topicFeedChannelTopicDiversificationPenalty = *((double *)v5 + 273);
  *((_QWORD *)&self->_has + 4) |= 0x10000uLL;
  v45 = *((_QWORD *)v5 + 375);
  v49 = *((_QWORD *)v5 + 371);
  if ((v45 & 0x20000) == 0)
  {
LABEL_758:
    if ((v49 & 0x8000000000000) == 0)
      goto LABEL_759;
LABEL_815:
    self->_ctrWithSubscribedChannel = *((double *)v5 + 52);
    *(_QWORD *)&self->_has |= 0x8000000000000uLL;
    if ((*((_QWORD *)v5 + 375) & 0x1000000) == 0)
      goto LABEL_761;
    goto LABEL_760;
  }
LABEL_814:
  self->_topicFeedChannelTopicDiversificationPenaltyHalfLife = *((double *)v5 + 274);
  *((_QWORD *)&self->_has + 4) |= 0x20000uLL;
  v45 = *((_QWORD *)v5 + 375);
  if ((*((_QWORD *)v5 + 371) & 0x8000000000000) != 0)
    goto LABEL_815;
LABEL_759:
  if ((v45 & 0x1000000) != 0)
  {
LABEL_760:
    self->_topicFeedCtrWithSubscribedChannel = *((double *)v5 + 281);
    *((_QWORD *)&self->_has + 4) |= 0x1000000uLL;
  }
LABEL_761:

}

- (int64_t)treatmentId
{
  return self->_treatmentId;
}

- (double)decayFactor
{
  return self->_decayFactor;
}

- (double)baselineImpressionPrior
{
  return self->_baselineImpressionPrior;
}

- (double)baselineRatePrior
{
  return self->_baselineRatePrior;
}

- (double)featureImpressionPrior
{
  return self->_featureImpressionPrior;
}

- (BOOL)globalScoreRankingEnabled
{
  return self->_globalScoreRankingEnabled;
}

- (double)globalScoreBump
{
  return self->_globalScoreBump;
}

- (double)subscriptionVoteCoefficient
{
  return self->_subscriptionVoteCoefficient;
}

- (double)personalizationCoefficient
{
  return self->_personalizationCoefficient;
}

- (double)globalScoreCoefficient
{
  return self->_globalScoreCoefficient;
}

- (int64_t)publisherTopicIdEventCountMinimum
{
  return self->_publisherTopicIdEventCountMinimum;
}

- (double)presentationImpressionValue
{
  return self->_presentationImpressionValue;
}

- (double)heavyClickImpressionValue
{
  return self->_heavyClickImpressionValue;
}

- (double)likeImpressionValue
{
  return self->_likeImpressionValue;
}

- (double)shareImpressionValue
{
  return self->_shareImpressionValue;
}

- (double)savedImpressionValue
{
  return self->_savedImpressionValue;
}

- (double)subscribeImpressionValue
{
  return self->_subscribeImpressionValue;
}

- (double)tappedImpressionValue
{
  return self->_tappedImpressionValue;
}

- (double)weakClickImpressionValue
{
  return self->_weakClickImpressionValue;
}

- (double)unsubscribeImpressionValue
{
  return self->_unsubscribeImpressionValue;
}

- (double)visitImpressionValue
{
  return self->_visitImpressionValue;
}

- (double)dislikeImpressionValue
{
  return self->_dislikeImpressionValue;
}

- (double)presentationClickValue
{
  return self->_presentationClickValue;
}

- (double)heavyClickClickValue
{
  return self->_heavyClickClickValue;
}

- (double)likeClickValue
{
  return self->_likeClickValue;
}

- (double)shareClickValue
{
  return self->_shareClickValue;
}

- (double)savedClickValue
{
  return self->_savedClickValue;
}

- (double)subscribeClickValue
{
  return self->_subscribeClickValue;
}

- (double)tappedClickValue
{
  return self->_tappedClickValue;
}

- (double)weakClickClickValue
{
  return self->_weakClickClickValue;
}

- (double)unsubscribeClickValue
{
  return self->_unsubscribeClickValue;
}

- (double)visitClickValue
{
  return self->_visitClickValue;
}

- (double)dislikeClickValue
{
  return self->_dislikeClickValue;
}

- (double)hourlyFlowRateMinimum
{
  return self->_hourlyFlowRateMinimum;
}

- (double)hourlyFlowRateSubscriptionCountBuffer
{
  return self->_hourlyFlowRateSubscriptionCountBuffer;
}

- (double)hourlyFlowRateDampeningFactor
{
  return self->_hourlyFlowRateDampeningFactor;
}

- (double)democratizationFactor
{
  return self->_democratizationFactor;
}

- (int64_t)sliceTimeInterval
{
  return self->_sliceTimeInterval;
}

- (int64_t)flowRateDampeningSliceCount
{
  return self->_flowRateDampeningSliceCount;
}

- (double)flowRateMinimumDampeningFactor
{
  return self->_flowRateMinimumDampeningFactor;
}

- (double)halfLifeCoefficient
{
  return self->_halfLifeCoefficient;
}

- (double)diversificationPenalty
{
  return self->_diversificationPenalty;
}

- (double)heavyClickMinimumDuration
{
  return self->_heavyClickMinimumDuration;
}

- (double)subscriptionRelatedImpressionValue
{
  return self->_subscriptionRelatedImpressionValue;
}

- (double)subscriptionRelatedClickValue
{
  return self->_subscriptionRelatedClickValue;
}

- (double)hourlyFlowRatePerSubscription
{
  return self->_hourlyFlowRatePerSubscription;
}

- (int64_t)extraHeadlinesToShowTheUser
{
  return self->_extraHeadlinesToShowTheUser;
}

- (double)flowRateDegreeOfDynamism
{
  return self->_flowRateDegreeOfDynamism;
}

- (double)flowRateDecayFactor
{
  return self->_flowRateDecayFactor;
}

- (double)flowRatePriorWeight
{
  return self->_flowRatePriorWeight;
}

- (double)presentationImpressionValueBaseline
{
  return self->_presentationImpressionValueBaseline;
}

- (double)heavyClickImpressionValueBaseline
{
  return self->_heavyClickImpressionValueBaseline;
}

- (double)likeImpressionValueBaseline
{
  return self->_likeImpressionValueBaseline;
}

- (double)shareImpressionValueBaseline
{
  return self->_shareImpressionValueBaseline;
}

- (double)savedImpressionValueBaseline
{
  return self->_savedImpressionValueBaseline;
}

- (double)subscribeImpressionValueBaseline
{
  return self->_subscribeImpressionValueBaseline;
}

- (double)tappedImpressionValueBaseline
{
  return self->_tappedImpressionValueBaseline;
}

- (double)weakClickImpressionValueBaseline
{
  return self->_weakClickImpressionValueBaseline;
}

- (double)unsubscribeImpressionValueBaseline
{
  return self->_unsubscribeImpressionValueBaseline;
}

- (double)visitImpressionValueBaseline
{
  return self->_visitImpressionValueBaseline;
}

- (double)dislikeImpressionValueBaseline
{
  return self->_dislikeImpressionValueBaseline;
}

- (double)subscriptionRelatedImpressionValueBaseline
{
  return self->_subscriptionRelatedImpressionValueBaseline;
}

- (double)presentationClickValueBaseline
{
  return self->_presentationClickValueBaseline;
}

- (double)heavyClickClickValueBaseline
{
  return self->_heavyClickClickValueBaseline;
}

- (double)likeClickValueBaseline
{
  return self->_likeClickValueBaseline;
}

- (double)shareClickValueBaseline
{
  return self->_shareClickValueBaseline;
}

- (double)savedClickValueBaseline
{
  return self->_savedClickValueBaseline;
}

- (double)subscribeClickValueBaseline
{
  return self->_subscribeClickValueBaseline;
}

- (double)tappedClickValueBaseline
{
  return self->_tappedClickValueBaseline;
}

- (double)weakClickClickValueBaseline
{
  return self->_weakClickClickValueBaseline;
}

- (double)unsubscribeClickValueBaseline
{
  return self->_unsubscribeClickValueBaseline;
}

- (double)visitClickValueBaseline
{
  return self->_visitClickValueBaseline;
}

- (double)dislikeClickValueBaseline
{
  return self->_dislikeClickValueBaseline;
}

- (double)subscriptionRelatedClickValueBaseline
{
  return self->_subscriptionRelatedClickValueBaseline;
}

- (double)existingSubscriptionImpressionValue
{
  return self->_existingSubscriptionImpressionValue;
}

- (double)existingSubscriptionClickValue
{
  return self->_existingSubscriptionClickValue;
}

- (double)existingSubscriptionImpressionValueBaseline
{
  return self->_existingSubscriptionImpressionValueBaseline;
}

- (double)existingSubscriptionClickValueBaseline
{
  return self->_existingSubscriptionClickValueBaseline;
}

- (double)existingSubscriptionRelatedImpressionValue
{
  return self->_existingSubscriptionRelatedImpressionValue;
}

- (double)existingSubscriptionRelatedClickValue
{
  return self->_existingSubscriptionRelatedClickValue;
}

- (double)existingSubscriptionRelatedImpressionValueBaseline
{
  return self->_existingSubscriptionRelatedImpressionValueBaseline;
}

- (double)existingSubscriptionRelatedClickValueBaseline
{
  return self->_existingSubscriptionRelatedClickValueBaseline;
}

- (double)globalScoreStretchingFactor
{
  return self->_globalScoreStretchingFactor;
}

- (double)hourlyFlowRateFloor
{
  return self->_hourlyFlowRateFloor;
}

- (double)hourlyFlowRateCeiling
{
  return self->_hourlyFlowRateCeiling;
}

- (double)saturatedSubscriptionCountFactor
{
  return self->_saturatedSubscriptionCountFactor;
}

- (double)publisherDiversificationPenalty
{
  return self->_publisherDiversificationPenalty;
}

- (BOOL)hardAgeBeforePublisherDiversification
{
  return self->_hardAgeBeforePublisherDiversification;
}

- (double)hourlyFlowRateAlpha
{
  return self->_hourlyFlowRateAlpha;
}

- (double)hourlyFlowRateBeta
{
  return self->_hourlyFlowRateBeta;
}

- (double)hourlyFlowRateGamma
{
  return self->_hourlyFlowRateGamma;
}

- (double)recommendationPresentationFeedImpressionValue
{
  return self->_recommendationPresentationFeedImpressionValue;
}

- (double)recommendationPresentationFeedClickValue
{
  return self->_recommendationPresentationFeedClickValue;
}

- (double)recommendationPresentationExploreImpressionValue
{
  return self->_recommendationPresentationExploreImpressionValue;
}

- (double)recommendationPresentationExploreClickValue
{
  return self->_recommendationPresentationExploreClickValue;
}

- (double)recommendationPresentationFeedImpressionValueBaseline
{
  return self->_recommendationPresentationFeedImpressionValueBaseline;
}

- (double)recommendationPresentationFeedClickValueBaseline
{
  return self->_recommendationPresentationFeedClickValueBaseline;
}

- (double)recommendationPresentationExploreImpressionValueBaseline
{
  return self->_recommendationPresentationExploreImpressionValueBaseline;
}

- (double)recommendationPresentationExploreClickValueBaseline
{
  return self->_recommendationPresentationExploreClickValueBaseline;
}

- (double)premiumSubscriptionActivationImpressionValue
{
  return self->_premiumSubscriptionActivationImpressionValue;
}

- (double)premiumSubscriptionActivationClickValue
{
  return self->_premiumSubscriptionActivationClickValue;
}

- (double)premiumSubscriptionActivationImpressionValueBaseline
{
  return self->_premiumSubscriptionActivationImpressionValueBaseline;
}

- (double)premiumSubscriptionActivationClickValueBaseline
{
  return self->_premiumSubscriptionActivationClickValueBaseline;
}

- (double)lowQualityArticleRatio
{
  return self->_lowQualityArticleRatio;
}

- (int64_t)minClusterSize
{
  return self->_minClusterSize;
}

- (int64_t)maxClusterSize
{
  return self->_maxClusterSize;
}

- (int64_t)maxArticleCombos
{
  return self->_maxArticleCombos;
}

- (int64_t)heuristicSampleSize
{
  return self->_heuristicSampleSize;
}

- (int64_t)searchBranchMultiplier
{
  return self->_searchBranchMultiplier;
}

- (double)searchBranchDecay
{
  return self->_searchBranchDecay;
}

- (double)searchTimeLimit
{
  return self->_searchTimeLimit;
}

- (unsigned)minClusterSizeIPhone
{
  return self->_minClusterSizeIPhone;
}

- (unsigned)maxClusterSizeIPhone
{
  return self->_maxClusterSizeIPhone;
}

- (unsigned)minIdealClusterSizeIPhone
{
  return self->_minIdealClusterSizeIPhone;
}

- (unsigned)maxIdealClusterSizeIPhone
{
  return self->_maxIdealClusterSizeIPhone;
}

- (unsigned)minClusterSizeIPad
{
  return self->_minClusterSizeIPad;
}

- (unsigned)maxClusterSizeIPad
{
  return self->_maxClusterSizeIPad;
}

- (unsigned)minIdealClusterSizeIPad
{
  return self->_minIdealClusterSizeIPad;
}

- (unsigned)maxIdealClusterSizeIPad
{
  return self->_maxIdealClusterSizeIPad;
}

- (int64_t)maxArticleCombosIPhone
{
  return self->_maxArticleCombosIPhone;
}

- (int64_t)maxArticleCombosIPad
{
  return self->_maxArticleCombosIPad;
}

- (int64_t)heuristicSampleSizeIPhone
{
  return self->_heuristicSampleSizeIPhone;
}

- (int64_t)heuristicSampleSizeIPad
{
  return self->_heuristicSampleSizeIPad;
}

- (int64_t)searchBranchMultiplierIPhone
{
  return self->_searchBranchMultiplierIPhone;
}

- (int64_t)searchBranchMultiplierIPad
{
  return self->_searchBranchMultiplierIPad;
}

- (double)searchBranchDecayIPhone
{
  return self->_searchBranchDecayIPhone;
}

- (double)searchBranchDecayIPad
{
  return self->_searchBranchDecayIPad;
}

- (double)tagSizeCoeffIPhone
{
  return self->_tagSizeCoeffIPhone;
}

- (double)tagSizeCoeffIPad
{
  return self->_tagSizeCoeffIPad;
}

- (double)tagPairsCoeffIPhone
{
  return self->_tagPairsCoeffIPhone;
}

- (double)tagPairsCoeffIPad
{
  return self->_tagPairsCoeffIPad;
}

- (double)moveNewOrphansCoeffIPhone
{
  return self->_moveNewOrphansCoeffIPhone;
}

- (double)moveNewOrphansCoeffIPad
{
  return self->_moveNewOrphansCoeffIPad;
}

- (double)moveSizeCoeffIPhone
{
  return self->_moveSizeCoeffIPhone;
}

- (double)moveSizeCoeffIPad
{
  return self->_moveSizeCoeffIPad;
}

- (double)tagFavoritedCoeff
{
  return self->_tagFavoritedCoeff;
}

- (double)moveAboutnessNoiseStdIPhone
{
  return self->_moveAboutnessNoiseStdIPhone;
}

- (double)moveAboutnessNoiseStdIPad
{
  return self->_moveAboutnessNoiseStdIPad;
}

- (unsigned)dynamicMaxClusterSizeIPhone
{
  return self->_dynamicMaxClusterSizeIPhone;
}

- (unsigned)dynamicMaxClusterSizeIPad
{
  return self->_dynamicMaxClusterSizeIPad;
}

- (unsigned)dynamicMinArticleSetSizeIPhone
{
  return self->_dynamicMinArticleSetSizeIPhone;
}

- (unsigned)dynamicMinArticleSetSizeIPad
{
  return self->_dynamicMinArticleSetSizeIPad;
}

- (unsigned)dynamicMaxArticleSetSizeIPhone
{
  return self->_dynamicMaxArticleSetSizeIPhone;
}

- (unsigned)dynamicMaxArticleSetSizeIPad
{
  return self->_dynamicMaxArticleSetSizeIPad;
}

- (BOOL)deleteOrphansFromOverflow
{
  return self->_deleteOrphansFromOverflow;
}

- (double)overflownOrphansFilterCoeff
{
  return self->_overflownOrphansFilterCoeff;
}

- (double)moveAboutnessWeightRatioIPhone
{
  return self->_moveAboutnessWeightRatioIPhone;
}

- (double)moveAboutnessWeightRatioIPad
{
  return self->_moveAboutnessWeightRatioIPad;
}

- (double)groupingDoubleParam1
{
  return self->_groupingDoubleParam1;
}

- (double)groupingDoubleParam2
{
  return self->_groupingDoubleParam2;
}

- (double)groupingDoubleParam3
{
  return self->_groupingDoubleParam3;
}

- (double)groupingDoubleParam4
{
  return self->_groupingDoubleParam4;
}

- (double)groupingDoubleParam5
{
  return self->_groupingDoubleParam5;
}

- (double)groupingDoubleParam6
{
  return self->_groupingDoubleParam6;
}

- (unsigned)groupingIntParam1
{
  return self->_groupingIntParam1;
}

- (unsigned)groupingIntParam2
{
  return self->_groupingIntParam2;
}

- (unsigned)groupingIntParam3
{
  return self->_groupingIntParam3;
}

- (unsigned)groupingIntParam4
{
  return self->_groupingIntParam4;
}

- (BOOL)groupingBoolParam1
{
  return self->_groupingBoolParam1;
}

- (BOOL)groupingBoolParam2
{
  return self->_groupingBoolParam2;
}

- (BOOL)enableOptimizedLayoutIPhone
{
  return self->_enableOptimizedLayoutIPhone;
}

- (BOOL)enableOptimizedLayoutIPad
{
  return self->_enableOptimizedLayoutIPad;
}

- (unsigned)optimizedLayoutSizeThresholdIPhone
{
  return self->_optimizedLayoutSizeThresholdIPhone;
}

- (unsigned)optimizedLayoutSizeThresholdIPad
{
  return self->_optimizedLayoutSizeThresholdIPad;
}

- (unsigned)optimizedLayoutIncrementUnitIPhone
{
  return self->_optimizedLayoutIncrementUnitIPhone;
}

- (unsigned)optimizedLayoutIncrementUnitIPad
{
  return self->_optimizedLayoutIncrementUnitIPad;
}

- (double)utilityWeightAlpha
{
  return self->_utilityWeightAlpha;
}

- (double)utilityWeightBeta
{
  return self->_utilityWeightBeta;
}

- (BOOL)replaceAboutness
{
  return self->_replaceAboutness;
}

- (double)tagPersonalizationCoeffIPhone
{
  return self->_tagPersonalizationCoeffIPhone;
}

- (double)tagPersonalizationCoeffIPad
{
  return self->_tagPersonalizationCoeffIPad;
}

- (double)tagArticleScoreCoeffIPhone
{
  return self->_tagArticleScoreCoeffIPhone;
}

- (double)tagArticleScoreCoeffIPad
{
  return self->_tagArticleScoreCoeffIPad;
}

- (double)tagFavoritedCoeffIPhone
{
  return self->_tagFavoritedCoeffIPhone;
}

- (double)tagFavoritedCoeffIPad
{
  return self->_tagFavoritedCoeffIPad;
}

- (double)articleEntityScoreWeightRatioIPhone
{
  return self->_articleEntityScoreWeightRatioIPhone;
}

- (double)articleEntityScoreWeightRatioIPad
{
  return self->_articleEntityScoreWeightRatioIPad;
}

- (double)muteImpressionValue
{
  return self->_muteImpressionValue;
}

- (double)unmuteImpressionValue
{
  return self->_unmuteImpressionValue;
}

- (double)muteClickValue
{
  return self->_muteClickValue;
}

- (double)unmuteClickValue
{
  return self->_unmuteClickValue;
}

- (double)muteImpressionValueBaseline
{
  return self->_muteImpressionValueBaseline;
}

- (double)unmuteImpressionValueBaseline
{
  return self->_unmuteImpressionValueBaseline;
}

- (double)muteClickValueBaseline
{
  return self->_muteClickValueBaseline;
}

- (double)unmuteClickValueBaseline
{
  return self->_unmuteClickValueBaseline;
}

- (double)saturatedMutedCountFactor
{
  return self->_saturatedMutedCountFactor;
}

- (double)mutedVoteCoefficient
{
  return self->_mutedVoteCoefficient;
}

- (double)importanceScalar
{
  return self->_importanceScalar;
}

- (double)publisherDiversityMinSubscriptions
{
  return self->_publisherDiversityMinSubscriptions;
}

- (double)publisherDiversityMinArticleCount
{
  return self->_publisherDiversityMinArticleCount;
}

- (double)publisherDiversityMaxArticleCount
{
  return self->_publisherDiversityMaxArticleCount;
}

- (double)publisherDiversityMaxArticleFilter
{
  return self->_publisherDiversityMaxArticleFilter;
}

- (double)safariSignalWeight
{
  return self->_safariSignalWeight;
}

- (double)safariTimeDecayMultiplier
{
  return self->_safariTimeDecayMultiplier;
}

- (double)safariOccurrenceDecayMultiplier
{
  return self->_safariOccurrenceDecayMultiplier;
}

- (double)appUsageSignalWeight
{
  return self->_appUsageSignalWeight;
}

- (double)appUsageTimeDecayMultiplier
{
  return self->_appUsageTimeDecayMultiplier;
}

- (double)appUsageOccurrenceDecayMultiplier
{
  return self->_appUsageOccurrenceDecayMultiplier;
}

- (double)autoFavoriteGroupableMinImpressions
{
  return self->_autoFavoriteGroupableMinImpressions;
}

- (double)autoFavoriteGroupableMinRate
{
  return self->_autoFavoriteGroupableMinRate;
}

- (double)autoFavoriteGroupableMinRelativeRate
{
  return self->_autoFavoriteGroupableMinRelativeRate;
}

- (double)autoFavoriteFetchableMinImpressions
{
  return self->_autoFavoriteFetchableMinImpressions;
}

- (double)autoFavoriteFetchableMinRate
{
  return self->_autoFavoriteFetchableMinRate;
}

- (double)autoFavoriteFetchableMinRelativeRate
{
  return self->_autoFavoriteFetchableMinRelativeRate;
}

- (double)averageSafariVisitsPerDay
{
  return self->_averageSafariVisitsPerDay;
}

- (unsigned)publisherDiversityMinPublisherCount
{
  return self->_publisherDiversityMinPublisherCount;
}

- (unsigned)publisherDiversityMaxPublisherCount
{
  return self->_publisherDiversityMaxPublisherCount;
}

- (double)portraitUsageSignalWeight
{
  return self->_portraitUsageSignalWeight;
}

- (double)cohortMembershipBaselineCtrWeight
{
  return self->_cohortMembershipBaselineCtrWeight;
}

- (double)cohortMembershipCurveSteepness
{
  return self->_cohortMembershipCurveSteepness;
}

- (double)cohortMembershipMinWeightedImpressions
{
  return self->_cohortMembershipMinWeightedImpressions;
}

- (double)autoFavoriteMinImpressions
{
  return self->_autoFavoriteMinImpressions;
}

- (double)autoFavoriteMinRate
{
  return self->_autoFavoriteMinRate;
}

- (double)autoFavoriteMinRelativeRate
{
  return self->_autoFavoriteMinRelativeRate;
}

- (double)autoUnfavoriteFactor
{
  return self->_autoUnfavoriteFactor;
}

- (double)autoGroupableFactor
{
  return self->_autoGroupableFactor;
}

- (double)groupImpressionBiasCorrectionFactor
{
  return self->_groupImpressionBiasCorrectionFactor;
}

- (double)indexImpressionBiasCorrectionFactor
{
  return self->_indexImpressionBiasCorrectionFactor;
}

- (double)videoInitiatePlaybackImpressionValue
{
  return self->_videoInitiatePlaybackImpressionValue;
}

- (double)videoInitiatePlaybackClickValue
{
  return self->_videoInitiatePlaybackClickValue;
}

- (double)videoInitiatePlaybackBaselineImpressionValue
{
  return self->_videoInitiatePlaybackBaselineImpressionValue;
}

- (double)videoInitiatePlaybackBaselineClickValue
{
  return self->_videoInitiatePlaybackBaselineClickValue;
}

- (double)videoCompletePlaybackImpressionValue
{
  return self->_videoCompletePlaybackImpressionValue;
}

- (double)videoCompletePlaybackClickValue
{
  return self->_videoCompletePlaybackClickValue;
}

- (double)videoCompletePlaybackBaselineImpressionValue
{
  return self->_videoCompletePlaybackBaselineImpressionValue;
}

- (double)videoCompletePlaybackBaselineClickValue
{
  return self->_videoCompletePlaybackBaselineClickValue;
}

- (double)tagAutoFavoritedCoeffIPhone
{
  return self->_tagAutoFavoritedCoeffIPhone;
}

- (double)tagAutoFavoritedCoeffIPad
{
  return self->_tagAutoFavoritedCoeffIPad;
}

- (double)tagGroupableCoeffIPhone
{
  return self->_tagGroupableCoeffIPhone;
}

- (double)tagGroupableCoeffIPad
{
  return self->_tagGroupableCoeffIPad;
}

- (double)tagSpecificityCoeffIPhone
{
  return self->_tagSpecificityCoeffIPhone;
}

- (double)tagSpecificityCoeffIPad
{
  return self->_tagSpecificityCoeffIPad;
}

- (double)optionalTagSpecificityScore
{
  return self->_optionalTagSpecificityScore;
}

- (double)autoFavoriteMinObservationsSafari
{
  return self->_autoFavoriteMinObservationsSafari;
}

- (double)autoFavoriteMinScoreSafari
{
  return self->_autoFavoriteMinScoreSafari;
}

- (double)autoFavoriteMinObservationsExtAppUsage
{
  return self->_autoFavoriteMinObservationsExtAppUsage;
}

- (double)autoFavoriteMinScoreExtAppUsage
{
  return self->_autoFavoriteMinScoreExtAppUsage;
}

- (double)portraitDecayRate
{
  return self->_portraitDecayRate;
}

- (double)portraitGlobalThreshold
{
  return self->_portraitGlobalThreshold;
}

- (NSMutableArray)portraitTagThresholds
{
  return self->_portraitTagThresholds;
}

- (void)setPortraitTagThresholds:(id)a3
{
  objc_storeStrong((id *)&self->_portraitTagThresholds, a3);
}

- (double)portraitImpressionSlope
{
  return self->_portraitImpressionSlope;
}

- (double)portraitImpressionIntercept
{
  return self->_portraitImpressionIntercept;
}

- (double)portraitRateSlope
{
  return self->_portraitRateSlope;
}

- (double)portraitRateIntercept
{
  return self->_portraitRateIntercept;
}

- (double)newsTodayWidgetPresentationImpressionValue
{
  return self->_newsTodayWidgetPresentationImpressionValue;
}

- (double)newsTodayWidgetPresentationClickValue
{
  return self->_newsTodayWidgetPresentationClickValue;
}

- (double)newsTodayWidgetPresentationBaselineImpressionValue
{
  return self->_newsTodayWidgetPresentationBaselineImpressionValue;
}

- (double)newsTodayWidgetPresentationBaselineClickValue
{
  return self->_newsTodayWidgetPresentationBaselineClickValue;
}

- (double)newsTodayWidgetClickImpressionValue
{
  return self->_newsTodayWidgetClickImpressionValue;
}

- (double)newsTodayWidgetClickClickValue
{
  return self->_newsTodayWidgetClickClickValue;
}

- (double)newsTodayWidgetClickBaselineImpressionValue
{
  return self->_newsTodayWidgetClickBaselineImpressionValue;
}

- (double)newsTodayWidgetClickBaselineClickValue
{
  return self->_newsTodayWidgetClickBaselineClickValue;
}

- (double)newsTodayWidgetVideoPlaybackImpressionValue
{
  return self->_newsTodayWidgetVideoPlaybackImpressionValue;
}

- (double)newsTodayWidgetVideoPlaybackClickValue
{
  return self->_newsTodayWidgetVideoPlaybackClickValue;
}

- (double)newsTodayWidgetVideoPlaybackBaselineImpressionValue
{
  return self->_newsTodayWidgetVideoPlaybackBaselineImpressionValue;
}

- (double)newsTodayWidgetVideoPlaybackBaselineClickValue
{
  return self->_newsTodayWidgetVideoPlaybackBaselineClickValue;
}

- (double)ctrWithZeroSubscribed
{
  return self->_ctrWithZeroSubscribed;
}

- (double)ctrWithOneSubscribed
{
  return self->_ctrWithOneSubscribed;
}

- (double)ctrWithTwoSubscribed
{
  return self->_ctrWithTwoSubscribed;
}

- (double)ctrWithThreeSubscribed
{
  return self->_ctrWithThreeSubscribed;
}

- (double)ctrWithZeroMuted
{
  return self->_ctrWithZeroMuted;
}

- (double)ctrWithOneMuted
{
  return self->_ctrWithOneMuted;
}

- (double)ctrWithTwoMuted
{
  return self->_ctrWithTwoMuted;
}

- (double)ctrWithThreeMuted
{
  return self->_ctrWithThreeMuted;
}

- (double)ctrWithZeroAutofavorited
{
  return self->_ctrWithZeroAutofavorited;
}

- (double)ctrWithOneAutofavorited
{
  return self->_ctrWithOneAutofavorited;
}

- (double)ctrWithTwoAutofavorited
{
  return self->_ctrWithTwoAutofavorited;
}

- (double)ctrWithThreeAutofavorited
{
  return self->_ctrWithThreeAutofavorited;
}

- (double)autofavoritedVoteCoefficient
{
  return self->_autofavoritedVoteCoefficient;
}

- (double)realTimeUserFeedbackCoefficient
{
  return self->_realTimeUserFeedbackCoefficient;
}

- (double)globalScoreToCtrSlope
{
  return self->_globalScoreToCtrSlope;
}

- (double)globalScoreToCtrIntercept
{
  return self->_globalScoreToCtrIntercept;
}

- (double)baselineArticleScore
{
  return self->_baselineArticleScore;
}

- (double)appInstallImpressionValue
{
  return self->_appInstallImpressionValue;
}

- (double)appInstallClickValue
{
  return self->_appInstallClickValue;
}

- (double)appInstallBaselineImpressionValue
{
  return self->_appInstallBaselineImpressionValue;
}

- (double)appInstallBaselineClickValue
{
  return self->_appInstallBaselineClickValue;
}

- (double)appInFocusImpressionValue
{
  return self->_appInFocusImpressionValue;
}

- (double)appInFocusClickValue
{
  return self->_appInFocusClickValue;
}

- (double)appInFocusBaselineImpressionValue
{
  return self->_appInFocusBaselineImpressionValue;
}

- (double)appInFocusBaselineClickValue
{
  return self->_appInFocusBaselineClickValue;
}

- (double)safariHistoryImpressionValue
{
  return self->_safariHistoryImpressionValue;
}

- (double)safariHistoryClickValue
{
  return self->_safariHistoryClickValue;
}

- (double)safariHistoryBaselineImpressionValue
{
  return self->_safariHistoryBaselineImpressionValue;
}

- (double)safariHistoryBaselineClickValue
{
  return self->_safariHistoryBaselineClickValue;
}

- (double)videoComplete25ImpressionValue
{
  return self->_videoComplete25ImpressionValue;
}

- (double)videoComplete25ClickValue
{
  return self->_videoComplete25ClickValue;
}

- (double)videoComplete25BaselineImpressionValue
{
  return self->_videoComplete25BaselineImpressionValue;
}

- (double)videoComplete25BaselineClickValue
{
  return self->_videoComplete25BaselineClickValue;
}

- (double)videoComplete50ImpressionValue
{
  return self->_videoComplete50ImpressionValue;
}

- (double)videoComplete50ClickValue
{
  return self->_videoComplete50ClickValue;
}

- (double)videoComplete50BaselineImpressionValue
{
  return self->_videoComplete50BaselineImpressionValue;
}

- (double)videoComplete50BaselineClickValue
{
  return self->_videoComplete50BaselineClickValue;
}

- (double)videoComplete75ImpressionValue
{
  return self->_videoComplete75ImpressionValue;
}

- (double)videoComplete75ClickValue
{
  return self->_videoComplete75ClickValue;
}

- (double)videoComplete75BaselineImpressionValue
{
  return self->_videoComplete75BaselineImpressionValue;
}

- (double)videoComplete75BaselineClickValue
{
  return self->_videoComplete75BaselineClickValue;
}

- (double)autoFavoriteMinClicks
{
  return self->_autoFavoriteMinClicks;
}

- (double)globalScoreCoefficientHalfLife
{
  return self->_globalScoreCoefficientHalfLife;
}

- (double)globalScoreCoefficientInitialMultiplier
{
  return self->_globalScoreCoefficientInitialMultiplier;
}

- (unsigned)minClusterSizeIPhoneAutoFavorite
{
  return self->_minClusterSizeIPhoneAutoFavorite;
}

- (unsigned)maxClusterSizeIPhoneAutoFavorite
{
  return self->_maxClusterSizeIPhoneAutoFavorite;
}

- (unsigned)minIdealClusterSizeIPhoneAutoFavorite
{
  return self->_minIdealClusterSizeIPhoneAutoFavorite;
}

- (unsigned)maxIdealClusterSizeIPhoneAutoFavorite
{
  return self->_maxIdealClusterSizeIPhoneAutoFavorite;
}

- (unsigned)minClusterSizeIPadAutoFavorite
{
  return self->_minClusterSizeIPadAutoFavorite;
}

- (unsigned)maxClusterSizeIPadAutoFavorite
{
  return self->_maxClusterSizeIPadAutoFavorite;
}

- (unsigned)minIdealClusterSizeIPadAutoFavorite
{
  return self->_minIdealClusterSizeIPadAutoFavorite;
}

- (unsigned)maxIdealClusterSizeIPadAutoFavorite
{
  return self->_maxIdealClusterSizeIPadAutoFavorite;
}

- (double)swipeToArticleWeakClickMinimumDuration
{
  return self->_swipeToArticleWeakClickMinimumDuration;
}

- (double)swipeToArticleHeavyClickMinimumDuration
{
  return self->_swipeToArticleHeavyClickMinimumDuration;
}

- (int64_t)maxSuggestionsCount
{
  return self->_maxSuggestionsCount;
}

- (double)cohortMembershipFavoritedBoost
{
  return self->_cohortMembershipFavoritedBoost;
}

- (double)cohortMembershipCurvature
{
  return self->_cohortMembershipCurvature;
}

- (double)cohortMembershipCtrCeiling
{
  return self->_cohortMembershipCtrCeiling;
}

- (double)safariEventBlackoutSeconds
{
  return self->_safariEventBlackoutSeconds;
}

- (double)channelTopicDiversificationPenalty
{
  return self->_channelTopicDiversificationPenalty;
}

- (double)realTimeUserFeedbackPublishDateHalfLifeCoefficient
{
  return self->_realTimeUserFeedbackPublishDateHalfLifeCoefficient;
}

- (double)autoFavoriteTagFavorabilityExponent
{
  return self->_autoFavoriteTagFavorabilityExponent;
}

- (double)autoFavoritePriorFactorExponent
{
  return self->_autoFavoritePriorFactorExponent;
}

- (double)uGroupMinimumSubscribedChannelSourceFeedArticleRatio
{
  return self->_uGroupMinimumSubscribedChannelSourceFeedArticleRatio;
}

- (BOOL)onlyConsiderBestSourceFeedsInForYouGroup
{
  return self->_onlyConsiderBestSourceFeedsInForYouGroup;
}

- (double)safariTagFavorabilityExponent
{
  return self->_safariTagFavorabilityExponent;
}

- (double)safariPriorFactorExponent
{
  return self->_safariPriorFactorExponent;
}

- (double)appUsageTagFavorabilityExponent
{
  return self->_appUsageTagFavorabilityExponent;
}

- (double)appUsagePriorFactorExponent
{
  return self->_appUsagePriorFactorExponent;
}

- (double)portraitTagFavorabilityExponent
{
  return self->_portraitTagFavorabilityExponent;
}

- (double)portraitPriorFactorExponent
{
  return self->_portraitPriorFactorExponent;
}

- (double)internalUsageSignalWeight
{
  return self->_internalUsageSignalWeight;
}

- (BOOL)enablePreTigrisArticleScoring
{
  return self->_enablePreTigrisArticleScoring;
}

- (int64_t)numEventsToDisableDefaultTopics
{
  return self->_numEventsToDisableDefaultTopics;
}

- (double)metaGroupingRelatednessThreshold
{
  return self->_metaGroupingRelatednessThreshold;
}

- (double)metaGroupingRelatednessKWeight
{
  return self->_metaGroupingRelatednessKWeight;
}

- (double)metaGroupingTopicScoreWeight
{
  return self->_metaGroupingTopicScoreWeight;
}

- (double)metaGroupingHighestScoringRelativeScoreMultiplier
{
  return self->_metaGroupingHighestScoringRelativeScoreMultiplier;
}

- (double)metaGroupingSubscribedTopicMultiplier
{
  return self->_metaGroupingSubscribedTopicMultiplier;
}

- (NSMutableArray)realTimeUserFeedbackTagCoefficients
{
  return self->_realTimeUserFeedbackTagCoefficients;
}

- (void)setRealTimeUserFeedbackTagCoefficients:(id)a3
{
  objc_storeStrong((id *)&self->_realTimeUserFeedbackTagCoefficients, a3);
}

- (double)expandedAutofavoriteClusterMinSizeMultiplier
{
  return self->_expandedAutofavoriteClusterMinSizeMultiplier;
}

- (double)expandedAutofavoriteClusterMaxSizeMultiplier
{
  return self->_expandedAutofavoriteClusterMaxSizeMultiplier;
}

- (double)maxExpandedAutofavoriteGroupCandidateRatio
{
  return self->_maxExpandedAutofavoriteGroupCandidateRatio;
}

- (double)autoFavoriteMaxIdleTime
{
  return self->_autoFavoriteMaxIdleTime;
}

- (unsigned)auditionedAutoFavoritesEmitterLimit
{
  return self->_auditionedAutoFavoritesEmitterLimit;
}

- (int64_t)numSubscriptionsToDisableDefaultTopics
{
  return self->_numSubscriptionsToDisableDefaultTopics;
}

- (double)publisherAggregateWeight
{
  return self->_publisherAggregateWeight;
}

- (double)diversificationInitialPenalty
{
  return self->_diversificationInitialPenalty;
}

- (double)diversificationPenaltyHalfLife
{
  return self->_diversificationPenaltyHalfLife;
}

- (double)channelTopicDiversificationInitialPenalty
{
  return self->_channelTopicDiversificationInitialPenalty;
}

- (double)channelTopicDiversificationPenaltyHalfLife
{
  return self->_channelTopicDiversificationPenaltyHalfLife;
}

- (double)publisherDiversificationInitialPenalty
{
  return self->_publisherDiversificationInitialPenalty;
}

- (double)publisherDiversificationPenaltyHalfLife
{
  return self->_publisherDiversificationPenaltyHalfLife;
}

- (double)minimumGlobalScoreThreshold
{
  return self->_minimumGlobalScoreThreshold;
}

- (double)minimumGlobalScoreThresholdForSubscribedChannel
{
  return self->_minimumGlobalScoreThresholdForSubscribedChannel;
}

- (double)subscribedChannelScoreCoefficient
{
  return self->_subscribedChannelScoreCoefficient;
}

- (double)subscribedTopicsScoreCoefficient
{
  return self->_subscribedTopicsScoreCoefficient;
}

- (double)topicFeedBaselineRatePrior
{
  return self->_topicFeedBaselineRatePrior;
}

- (double)topicFeedDecayFactor
{
  return self->_topicFeedDecayFactor;
}

- (double)topicFeedDemocratizationFactor
{
  return self->_topicFeedDemocratizationFactor;
}

- (double)topicFeedHalfLifeCoefficient
{
  return self->_topicFeedHalfLifeCoefficient;
}

- (double)topicFeedSubscribedChannelScoreCoefficient
{
  return self->_topicFeedSubscribedChannelScoreCoefficient;
}

- (double)topicFeedMutedVoteCoefficient
{
  return self->_topicFeedMutedVoteCoefficient;
}

- (double)topicFeedPersonalizationCoefficient
{
  return self->_topicFeedPersonalizationCoefficient;
}

- (double)topicFeedPublisherAggregateWeight
{
  return self->_topicFeedPublisherAggregateWeight;
}

- (double)topicFeedGlobalScoreCoefficient
{
  return self->_topicFeedGlobalScoreCoefficient;
}

- (double)topicFeedGlobalScoreCoefficientHalfLife
{
  return self->_topicFeedGlobalScoreCoefficientHalfLife;
}

- (double)topicFeedGlobalScoreCoefficientInitialMultiplier
{
  return self->_topicFeedGlobalScoreCoefficientInitialMultiplier;
}

- (double)topicFeedGlobalScoreToCtrIntercept
{
  return self->_topicFeedGlobalScoreToCtrIntercept;
}

- (double)topicFeedGlobalScoreToCtrSlope
{
  return self->_topicFeedGlobalScoreToCtrSlope;
}

- (double)topicFeedMinimumGlobalScoreThreshold
{
  return self->_topicFeedMinimumGlobalScoreThreshold;
}

- (double)topicFeedMinimumGlobalScoreThresholdForSubscribedChannel
{
  return self->_topicFeedMinimumGlobalScoreThresholdForSubscribedChannel;
}

- (double)topicFeedRealTimeUserFeedbackCoefficient
{
  return self->_topicFeedRealTimeUserFeedbackCoefficient;
}

- (double)topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient
{
  return self->_topicFeedRealTimeUserFeedbackPublishDateHalfLifeCoefficient;
}

- (double)topicFeedCohortMembershipCtrCeiling
{
  return self->_topicFeedCohortMembershipCtrCeiling;
}

- (double)topicFeedCohortMembershipCurvature
{
  return self->_topicFeedCohortMembershipCurvature;
}

- (double)topicFeedCohortMembershipFavoritedBoost
{
  return self->_topicFeedCohortMembershipFavoritedBoost;
}

- (double)topicFeedCohortMembershipMinWeightedImpressions
{
  return self->_topicFeedCohortMembershipMinWeightedImpressions;
}

- (double)topicFeedSubscribedTopicsScoreCoefficient
{
  return self->_topicFeedSubscribedTopicsScoreCoefficient;
}

- (double)topicFeedCtrWithZeroSubscribed
{
  return self->_topicFeedCtrWithZeroSubscribed;
}

- (double)topicFeedCtrWithOneSubscribed
{
  return self->_topicFeedCtrWithOneSubscribed;
}

- (double)topicFeedCtrWithTwoSubscribed
{
  return self->_topicFeedCtrWithTwoSubscribed;
}

- (double)topicFeedCtrWithThreeSubscribed
{
  return self->_topicFeedCtrWithThreeSubscribed;
}

- (double)topicFeedAutofavoritedVoteCoefficient
{
  return self->_topicFeedAutofavoritedVoteCoefficient;
}

- (double)topicFeedCtrWithZeroAutofavorited
{
  return self->_topicFeedCtrWithZeroAutofavorited;
}

- (double)topicFeedCtrWithOneAutofavorited
{
  return self->_topicFeedCtrWithOneAutofavorited;
}

- (double)topicFeedCtrWithTwoAutofavorited
{
  return self->_topicFeedCtrWithTwoAutofavorited;
}

- (double)topicFeedCtrWithThreeAutofavorited
{
  return self->_topicFeedCtrWithThreeAutofavorited;
}

- (double)topicFeedDiversificationInitialPenalty
{
  return self->_topicFeedDiversificationInitialPenalty;
}

- (double)topicFeedDiversificationPenalty
{
  return self->_topicFeedDiversificationPenalty;
}

- (double)topicFeedDiversificationPenaltyHalfLife
{
  return self->_topicFeedDiversificationPenaltyHalfLife;
}

- (double)topicFeedChannelTopicDiversificationInitialPenalty
{
  return self->_topicFeedChannelTopicDiversificationInitialPenalty;
}

- (double)topicFeedChannelTopicDiversificationPenalty
{
  return self->_topicFeedChannelTopicDiversificationPenalty;
}

- (double)topicFeedChannelTopicDiversificationPenaltyHalfLife
{
  return self->_topicFeedChannelTopicDiversificationPenaltyHalfLife;
}

- (double)ctrWithSubscribedChannel
{
  return self->_ctrWithSubscribedChannel;
}

- (double)topicFeedCtrWithSubscribedChannel
{
  return self->_topicFeedCtrWithSubscribedChannel;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_realTimeUserFeedbackTagCoefficients, 0);
  objc_storeStrong((id *)&self->_portraitTagThresholds, 0);
}

@end
