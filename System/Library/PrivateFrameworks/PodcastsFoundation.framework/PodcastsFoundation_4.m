uint64_t sub_1A92C0DF4(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v20[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F738C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_1A91B09A8((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A93F72F0();
    sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  v13 = sub_1A93F7320();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    v14 = 1;
  }
  else if (*((_BYTE *)a3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x90)) == 1)
  {
    v15 = *(_QWORD *)((char *)a3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a3) + 0x88));
    v16 = *(_QWORD *)(v12 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
    v17 = *(_QWORD *)(v12 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1A92EFAA4(v16, v17, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v18 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t PurchaseController.displaySubscriptionConfirmationSheetIfNeeded(for:channelObjects:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  char *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock[6];

  v4 = sub_1A93F7D58();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1A93F7698();
  v78 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v68 - v10;
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
    v81 = a1;
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v81 = a1;
    if (v12)
    {
LABEL_3:
      if (v12 >= 1)
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          v13 = (char *)&loc_1A92C115C
              + dword_1A92C1A34[*(unsigned __int8 *)(*(_QWORD *)(MEMORY[0x1AF4129DC](0, a2)
                                                               + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                                   + 176)];
          __asm { BR              X9 }
        }
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      JUMPOUT(0x1A92C1A34);
    }
  }
  swift_bridgeObjectRelease();
  v14 = aBlock[0];
  v80 = v11;
  if (aBlock[0] < 0 || (aBlock[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1A93F8E5C();
    swift_release();
    if (v15)
      goto LABEL_11;
LABEL_21:
    swift_release();
    v17 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v15 = *(_QWORD *)(aBlock[0] + 16);
  if (!v15)
    goto LABEL_21;
LABEL_11:
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v15 & ~(v15 >> 63), 0);
  if (v15 < 0)
    goto LABEL_36;
  v16 = 0;
  v17 = aBlock[0];
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v18 = (char *)MEMORY[0x1AF4129DC](v16, v14);
    else
      v18 = (char *)*(id *)(v14 + 8 * v16 + 32);
    v19 = v18;
    v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    aBlock[0] = v17;
    v23 = *(_QWORD *)(v17 + 16);
    v22 = *(_QWORD *)(v17 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A908182C(v22 > 1, v23 + 1, 1);
      v17 = aBlock[0];
    }
    ++v16;
    *(_QWORD *)(v17 + 16) = v23 + 1;
    v24 = v17 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v20;
  }
  while (v15 != v16);
  swift_release();
  v11 = v80;
  a1 = v81;
LABEL_22:
  v25 = sub_1A9159F94(v17);
  swift_bridgeObjectRelease();
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v26 = v82;
  v27 = __swift_project_value_buffer(v82, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v28 = v78;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  v29(v11, v27, v26);
  swift_bridgeObjectRetain_n();
  v30 = sub_1A93F7674();
  v31 = sub_1A93F87B4();
  v32 = &unk_1A940B000;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v70 = v27;
    v69 = v34;
    *(_DWORD *)v33 = 141558275;
    v83 = 1752392040;
    aBlock[0] = v34;
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 12) = 2081;
    swift_bridgeObjectRetain();
    v35 = v29;
    v36 = sub_1A93F8604();
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = v36;
    v29 = v35;
    v83 = sub_1A906436C(v39, v38, aBlock);
    v32 = (_QWORD *)&unk_1A940B000;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    a1 = v81;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v30, v31, "User's Entitlements IAP/1p Id's: %{private,mask.hash}s", (uint8_t *)v33, 0x16u);
    v40 = v69;
    swift_arrayDestroy();
    v27 = v70;
    MEMORY[0x1AF41411C](v40, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);

    v41 = *(char **)(v78 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v41 = *(char **)(v28 + 8);
  }
  v42 = v80;
  v80 = v41;
  ((void (*)(char *, uint64_t))v41)(v42, v26);
  v43 = objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS);
  v44 = v79;
  if (v43
    && (v45 = *(void **)((char *)v77 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v77) + 0xD0)),
        v46 = (void *)sub_1A93F8010(),
        LODWORD(v45) = objc_msgSend(v45, sel_BOOLForKey_, v46),
        v46,
        (_DWORD)v45))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    a1 = sub_1A92C2BB8(v25, a1);
    swift_bridgeObjectRelease();
  }
  v47 = v82;
  v29(v44, v27, v82);
  swift_bridgeObjectRetain_n();
  v48 = sub_1A93F7674();
  v49 = sub_1A93F87B4();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_DWORD *)v50 = v32[69];
    v83 = 1752392040;
    aBlock[0] = v51;
    sub_1A93F8AA8();
    *(_WORD *)(v50 + 12) = 2081;
    swift_bridgeObjectRetain();
    v52 = a1;
    v53 = sub_1A93F8604();
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = v53;
    a1 = v52;
    v83 = sub_1A906436C(v56, v55, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v48, v49, "Showing all newly subscribed 1p/IAP subscriptions in the confirmation sheet: %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v51, -1, -1);
    MEMORY[0x1AF41411C](v50, -1, -1);

    v57 = v79;
    v58 = v82;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v57 = v44;
    v58 = v47;
  }
  ((void (*)(char *, uint64_t))v80)(v57, v58);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v59 = (void *)sub_1A93F8868();
  v60 = swift_allocObject();
  v61 = v77;
  *(_QWORD *)(v60 + 16) = v77;
  *(_QWORD *)(v60 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1A92C3E88;
  aBlock[5] = v60;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_24_2;
  v62 = _Block_copy(aBlock);
  v63 = v61;
  swift_release();
  v64 = v71;
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v65 = v74;
  v66 = v76;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v64, v65, v62);
  _Block_release(v62);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v64, v73);
}

uint64_t sub_1A92C1A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;

  sub_1A92BBD70((uint64_t)v9);
  if (!v10)
    return sub_1A905FD54((uint64_t)v9, &qword_1ED2A8620);
  sub_1A905DC3C((uint64_t)v9, (uint64_t)v6);
  sub_1A905FD54((uint64_t)v9, &qword_1ED2A8620);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t sub_1A92C1AF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  os_log_type_t v39;
  NSObject *v40;
  uint8_t *v41;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  Swift::OpaquePointer v55;
  _QWORD *v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  double v62;
  double v63;
  void (*v64)(char *, uint64_t);
  unint64_t v65;
  char *v66;
  char *v67;
  NSObject *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  char *v97;
  __int128 v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v114 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v100 = (uint64_t)&v96 - v13;
  v14 = sub_1A93F738C();
  v115 = *(_QWORD *)(v14 - 8);
  v116 = v14;
  MEMORY[0x1E0C80A78](v14);
  v102 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F7698();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v101 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v110 = (char *)&v96 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v96 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t)&v96 - v25;
  swift_beginAccess();
  v109 = (char *)MEMORY[0x1AF41420C](a1 + 16);
  if (!v109)
  {
    if (qword_1ED2AC4B8 != -1)
      goto LABEL_74;
    goto LABEL_14;
  }
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v108 = v27;
  v107 = v28;
  v28(v23, v27, v16);
  v29 = sub_1A93F7674();
  v30 = sub_1A93F87B4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1A904E000, v29, v30, "Updating subscribed channels from server objects.", v31, 2u);
    MEMORY[0x1AF41411C](v31, -1, -1);
  }

  v106 = *(void (**)(char *, uint64_t))(v17 + 8);
  v106(v23, v16);
  v113 = v16;
  v117 = a2;
  v97 = v11;
  v104 = a4;
  v112 = a3;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1A93F8E5C();
    if (v26)
    {
LABEL_8:
      v32 = objc_opt_self();
      if (v26 >= 1)
      {
        v33 = (void *)v32;
        if ((v117 & 0xC000000000000001) != 0)
          v34 = (id)MEMORY[0x1AF4129DC](0, v117);
        else
          v34 = *(id *)(v117 + 32);
        v35 = v34;
        v36 = sub_1A92BC274();
        v37 = objc_msgSend(v33, sel_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_, v35, 1, v36);

        sub_1A91B0C34(&v118);
        __asm { BR              X9 }
      }
      goto LABEL_73;
    }
  }
  else
  {
    v26 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26)
      goto LABEL_8;
  }
  v43 = v117;
  swift_bridgeObjectRelease();
  v44 = sub_1A92BC274();
  sub_1A9072534(0, (unint64_t *)&unk_1ED2A4250);
  v45 = 0;
  v46 = sub_1A93F89DC();
  v47 = MEMORY[0x1E0DEE9D8];
  v17 = v46;
  v48 = v102;
  v49 = v109;

  v118 = v47;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_1A93F8E5C();
    v111 = v17;
    if (v50)
      goto LABEL_20;
  }
  else
  {
    v50 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v111 = v17;
    if (v50)
    {
LABEL_20:
      if (v50 < 1)
      {
        __break(1u);
        JUMPOUT(0x1A92C28ACLL);
      }
      v51 = 0;
      v52 = v17 & 0xC000000000000001;
      do
      {
        if (v52)
          v53 = (id)MEMORY[0x1AF4129DC](v51, v17);
        else
          v53 = *(id *)(v17 + 8 * v51 + 32);
        v54 = v53;
        if (objc_msgSend(v53, sel_subscriptionActive))
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v17 = v111;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v51;
      }
      while (v50 != v51);
      swift_bridgeObjectRelease();
      v55._rawValue = (void *)v118;
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease();
  v55._rawValue = (void *)MEMORY[0x1E0DEE9D8];
LABEL_32:
  v56 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v105 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v49) + 0xC8);
  swift_retain();
  InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(v55);
  swift_release();
  swift_release();
  if (!v50)
  {

    return swift_bridgeObjectRelease();
  }
  v99 = v104 + 16;
  v58 = *v56 & *v49;
  v59 = v17 & 0xC000000000000001;
  v96 = &v119;
  v103 = *(_QWORD *)(v58 + 160);
  v16 = 4;
  *(_QWORD *)&v57 = 141558275;
  v98 = v57;
  v112 = v50;
  v104 = v17 & 0xC000000000000001;
  while (1)
  {
    v60 = v59 ? (id)MEMORY[0x1AF4129DC](v16 - 4, v17) : *(id *)(v17 + 8 * v16);
    v26 = (uint64_t)v60;
    v61 = v16 - 3;
    if (__OFADD__(v16 - 4, 1))
      break;
    sub_1A93F7380();
    sub_1A93F72D8();
    v63 = v62;
    v64 = *(void (**)(char *, uint64_t))(v115 + 8);
    v64(v48, v116);
    objc_msgSend((id)v26, sel_setLastPersonalizedRequestDate_, v63, v96);
    swift_bridgeObjectRetain();
    v26 = (uint64_t)(id)v26;
    v65 = sub_1A92C3218(v43, (void *)v26);
    swift_bridgeObjectRelease();

    if (v65 >> 62)
    {
      if (!sub_1A93F8E5C())
      {
LABEL_61:
        swift_bridgeObjectRelease();
        if ((objc_msgSend((id)v26, sel_subscriptionActive) & 1) != 0)
        {
          v107(v101, v108, v113);
          v90 = (id)v26;
          v91 = sub_1A93F7674();
          v92 = sub_1A93F87B4();
          if (os_log_type_enabled(v91, v92))
          {
            v93 = swift_slowAlloc();
            *(_DWORD *)v93 = v98;
            *(_QWORD *)(v93 + 4) = 1752392040;
            *(_WORD *)(v93 + 12) = 2049;
            *(_QWORD *)(v93 + 14) = -[NSObject storeId](v90, sel_storeId);

            _os_log_impl(&dword_1A904E000, v91, v92, "Setting channel %{private,mask.hash}lld to not subscribed", (uint8_t *)v93, 0x16u);
            v94 = v93;
            v17 = v111;
            MEMORY[0x1AF41411C](v94, -1, -1);
          }
          else
          {

            v91 = v90;
          }
          v59 = v104;

          v106(v101, v113);
          objc_msgSend(*(id *)&v109[v103], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v90, 0, 0.0);
          swift_retain();
          v95 = (uint64_t)-[NSObject storeId](v90, sel_storeId);
          InterestRepository.unfavoriteInterest(forAdamID:)(v95 & ~(v95 >> 63));

          swift_release();
        }
        else
        {

        }
        goto LABEL_35;
      }
    }
    else if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_61;
    }
    v114 = v45;
    if ((v65 & 0xC000000000000001) != 0)
    {
      v66 = (char *)MEMORY[0x1AF4129DC](0, v65);
    }
    else
    {
      if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_72;
      v66 = (char *)*(id *)(v65 + 32);
    }
    v67 = v66;
    swift_bridgeObjectRelease();
    if (!objc_msgSend((id)v26, sel_subscriptionActive))
    {
      v107(v110, v108, v113);
      v68 = (id)v26;
      v69 = sub_1A93F7674();
      v70 = sub_1A93F87B4();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = swift_slowAlloc();
        *(_DWORD *)v71 = v98;
        v118 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v71 + 12) = 2049;
        v118 = (uint64_t)-[NSObject storeId](v68, sel_storeId);
        v48 = v102;
        v72 = v113;
        sub_1A93F8AA8();

        _os_log_impl(&dword_1A904E000, v69, v70, "Setting channel %{private,mask.hash}lld to subscribed", (uint8_t *)v71, 0x16u);
        v73 = v71;
        v17 = v111;
        MEMORY[0x1AF41411C](v73, -1, -1);
      }
      else
      {

        v69 = v68;
        v72 = v113;
      }

      v106(v110, v72);
      if (*(_QWORD *)(*(_QWORD *)&v67[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 88))
      {
        if (qword_1ED2A93B0 != -1)
          swift_once();
        v74 = (void *)qword_1ED2A93A8;
        v75 = (void *)sub_1A93F8010();
        v76 = objc_msgSend(v74, sel_dateFromString_, v75);

        if (v76)
        {
          v77 = (uint64_t)v97;
          sub_1A93F7368();

          v78 = 0;
        }
        else
        {
          v78 = 1;
          v77 = (uint64_t)v97;
        }
        v81 = v115;
        v80 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v77, v78, 1, v116);
        v79 = v100;
        sub_1A9062F08(v77, v100, (uint64_t *)&unk_1ED2AD360);
        v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80);
        v48 = v102;
        v17 = v111;
        if (v82 == 1)
        {
LABEL_57:
          sub_1A905FD54(v79, (uint64_t *)&unk_1ED2AD360);
          v83 = 0.0;
        }
        else
        {
          sub_1A93F72D8();
          v83 = v84;
          v64((char *)v79, v116);
        }
        objc_msgSend(*(id *)&v109[v103], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v68, 1, v83);
        swift_retain();
        v85 = (uint64_t)-[NSObject storeId](v68, sel_storeId);
        InterestRepository.favoriteInterest(forAdamID:)(v85 & ~(v85 >> 63));
        swift_release();
        v86 = (uint64_t)-[NSObject storeId](v68, sel_storeId);
        v118 = v86 & ~(v86 >> 63);
        sub_1A915997C();
        v87 = sub_1A93F8B38();
        v89 = v88;
        swift_beginAccess();
        sub_1A9091D1C(&v120, v87, v89);
        swift_endAccess();

        swift_bridgeObjectRelease();
        v43 = v117;
        v45 = v114;
        v59 = v104;
        goto LABEL_35;
      }
      v79 = v100;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v100, 1, 1, v116);
      goto LABEL_57;
    }

    v43 = v117;
    v45 = v114;
LABEL_35:
    ++v16;
    if (v61 == v112)
    {

      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  swift_once();
LABEL_14:
  v38 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v26, v38, v16);
  v39 = sub_1A93F879C();
  v40 = sub_1A93F7674();
  if (os_log_type_enabled(v40, v39))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_1A904E000, v40, v39, "Could not unwrap self in PurchaseController. Cannot update subscriptions.", v41, 2u);
    MEMORY[0x1AF41411C](v41, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v26, v16);
}

uint64_t MockPurchaseController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  sub_1A93F7AC4();
  return v0;
}

uint64_t MockPurchaseController.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  v7[1] = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  sub_1A93F7AC4();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_1A92C29E4()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  sub_1A93F7AD0();
  return swift_endAccess();
}

uint64_t sub_1A92C2A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(_QWORD))
{
  return a8(0);
}

uint64_t MockPurchaseController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MockPurchaseController.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1A92C2B04()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  sub_1A93F7AD0();
  return swift_endAccess();
}

uint64_t sub_1A92C2B68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A92BBE74();
  *a1 = result;
  return result;
}

uint64_t sub_1A92C2B90()
{
  swift_bridgeObjectRetain();
  return sub_1A92BBF0C();
}

uint64_t sub_1A92C2BB8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1A92C2D38((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1A92C2D38((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1AF41411C](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1A92C2D38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v60 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v61 = 0;
    v6 = 0;
    v57 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v58 = (unint64_t)(v7 + 63) >> 6;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_77;
          }
          if (v13 >= v58)
            goto LABEL_75;
          v14 = *(_QWORD *)(v57 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v13 + 1;
            if (v13 + 1 >= v58)
              goto LABEL_75;
            v14 = *(_QWORD *)(v57 + 8 * v15);
            if (!v14)
            {
              v16 = v13 + 2;
              if (v16 >= v58)
                goto LABEL_75;
              v14 = *(_QWORD *)(v57 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_78;
                  if (v15 >= v58)
                    goto LABEL_75;
                  v14 = *(_QWORD *)(v57 + 8 * v15);
                  ++v16;
                  if (v14)
                    goto LABEL_20;
                }
              }
              v15 = v16;
            }
          }
LABEL_20:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v20 = sub_1A93F9324();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1A93F90C0() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1A93F90C0() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_36;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_36:
      v6 = v62;
      v5 = a3;
      v60[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_79;
    }
  }
  v34 = 0;
  v59 = a3 + 56;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v61 = 0;
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_59;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v41 >= v63)
      goto LABEL_75;
    v42 = *(_QWORD *)(v59 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_75;
      v42 = *(_QWORD *)(v59 + 8 * v34);
      if (!v42)
        break;
    }
LABEL_58:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_59:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1A93F92DC();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    v47 = sub_1A93F9324();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_44;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1A93F90C0() & 1) != 0)
    {
LABEL_72:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v60 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_75:
        swift_retain();
        return sub_1A91F2050(v60, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1A93F90C0() & 1) != 0)
          goto LABEL_72;
      }
LABEL_44:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 2;
  if (v43 >= v63)
    goto LABEL_75;
  v42 = *(_QWORD *)(v59 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_58;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_75;
    v42 = *(_QWORD *)(v59 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_58;
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1A92C3218(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  char *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (char *)MEMORY[0x1AF4129DC](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_21;
        v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
        v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
        objc_msgSend(a2, sel_storeId);
        if (v9 == sub_1A93F9060() && v8 == v10)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          goto LABEL_5;
        }
        v12 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
          goto LABEL_17;

LABEL_5:
        ++v4;
        if (v7 == v3)
          return v15;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      v3 = sub_1A93F8E5C();
      if (!v3)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1A92C33D8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  objc_class *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  _QWORD *v43;
  void *v44;
  void *v45;
  objc_class *ObjCClassFromMetadata;
  _QWORD *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t ObjectType;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  objc_super v70;
  uint64_t v71;

  v65 = a1;
  ObjectType = swift_getObjectType();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v60 = *MEMORY[0x1E0DEEDD8] & *v1;
  v3 = v60;
  v4 = sub_1A93F8988();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1A93F885C();
  v8 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F8808();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)((char *)v1 + *(_QWORD *)(v3 + 96)) = MEMORY[0x1E0DEE9E8];
  v59 = *(_QWORD *)((*v2 & *v1) + 0x68);
  v58[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v14 = v1;
  sub_1A93F7D88();
  v71 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D0], v61);
  *(_QWORD *)((char *)v1 + v59) = sub_1A93F888C();
  v16 = (char *)v14 + *(_QWORD *)((*v15 & *v14) + 0x70);
  v18 = *(_QWORD *)(v60 + 80);
  v17 = *(_QWORD *)(v60 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v16, 1, 1, AssociatedTypeWitness);
  v20 = (char *)v14 + *(_QWORD *)((*v15 & *v14) + 0x78);
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = (char *)v14 + *(_QWORD *)((*v15 & *v14) + 0x80);
  v22 = MEMORY[0x1E0DEE9E8];
  v71 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  v23 = v62;
  sub_1A93F7AC4();
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v21, v23, v64);
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0x88)) = v22;
  *((_BYTE *)v14 + *(_QWORD *)((*v15 & *v14) + 0x90)) = 0;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0x98)) = 0;
  v24 = *(_QWORD *)((*v15 & *v14) + 0xA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 20) = 0;
  *(_BYTE *)(v25 + 16) = 0;
  *(_QWORD *)((char *)v14 + v24) = v25;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xB8)) = 0;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xC0)) = 0;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xD8)) = 0;
  swift_beginAccess();
  v26 = sub_1A93F8A90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v16, v65, v26);
  swift_endAccess();
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xD0)) = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v27 = sub_1A92BC274();
  type metadata accessor for InterestStore();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v27;
  if (qword_1ED2A46E0 != -1)
    swift_once();
  v29 = (void *)qword_1ED2A46D0;
  type metadata accessor for InterestRepository();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(v30 + 24) = v29;
  v31 = objc_allocWithZone((Class)MTSubscriptionChangeHandler);
  v32 = v29;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xA0)) = objc_msgSend(v31, sel_init);
  v33 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v34 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v35 = objc_allocWithZone((Class)type metadata accessor for MusicSubscriptionInfoSyncUtil());
  v36 = sub_1A90C5018(v33, v34);

  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xB0)) = v36;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((*v15 & *v14) + 0xC8)) = v30;
  swift_retain();

  v38 = (objc_class *)type metadata accessor for PurchaseController(0, v18, v17, v37);
  v70.receiver = v14;
  v70.super_class = v38;
  v39 = objc_msgSendSuper2(&v70, sel_init);
  v40 = (void *)objc_opt_self();
  v41 = v39;
  v42 = objc_msgSend(v40, sel_defaultCenter);
  v43 = v41;
  v44 = (void *)sub_1A93F8010();
  objc_msgSend(v42, sel_addObserver_selector_name_object_, v43, sel_didFinishUpdatingFeeds, v44, 0);

  sub_1A9072534(0, &qword_1EEABD710);
  v45 = *(void **)((char *)v43 + *(_QWORD *)((*v15 & *v43) + 0x68));
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v47 = v43;
  v48 = v45;
  v49 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithDelegate_onQueue_, v47, v48);

  v50 = *(_QWORD *)((*v15 & *v47) + 0xB8);
  v51 = *(void **)((char *)v47 + v50);
  *(_QWORD *)((char *)v47 + v50) = v49;

  v52 = objc_msgSend(v40, sel_defaultCenter);
  v53 = v67;
  sub_1A93F8994();

  v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v55 = (_QWORD *)swift_allocObject();
  v55[2] = v18;
  v55[3] = v17;
  v55[4] = v54;
  sub_1A9066CA8((unint64_t *)&qword_1ED2A41D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v56 = v69;
  sub_1A93F7D04();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v56);
  swift_beginAccess();
  sub_1A93F7920();
  swift_endAccess();
  swift_release();
  swift_release();

  return v47;
}

uint64_t sub_1A92C3C34()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92C3C58()
{
  uint64_t v0;

  sub_1A92BDF60(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92C3C68()
{
  return swift_deallocObject();
}

uint64_t sub_1A92C3C78@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A92BBB74(a1, a2);
}

uint64_t sub_1A92C3C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A92C3CC8()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A92C3D1C()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A92C3D70()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96))
    __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C3DC4()
{
  uint64_t v0;

  return sub_1A92BCB3C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_1A92C3DFC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A92C3E20()
{
  uint64_t v0;

  return sub_1A92BD384(*(_QWORD **)(v0 + 16));
}

void sub_1A92C3E28(uint64_t a1)
{
  sub_1A92BD8F8(a1);
}

void sub_1A92C3E30()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A92C3E5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92C3E88()
{
  uint64_t v0;

  return sub_1A92C1A54(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1A92C3E90()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A92C3EA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A92BBC80(a1);
}

uint64_t sub_1A92C3EC4()
{
  return 16;
}

__n128 sub_1A92C3ED0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A92C3EDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A92BBD70(a1);
}

uint64_t sub_1A92C3EFC(uint64_t a1)
{
  _BYTE v2[40];

  sub_1A9062170(a1, (uint64_t)v2, &qword_1ED2A8620);
  return sub_1A90CFDA4((uint64_t)v2);
}

uint64_t sub_1A92C3F3C()
{
  return 16;
}

__n128 sub_1A92C3F48(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A92C3F54@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_29Tm(sub_1A92C3CC8, MEMORY[0x1E0DEEED0], a1);
}

uint64_t sub_1A92C3F68()
{
  uint64_t v0;

  v0 = swift_unknownObjectRetain();
  sub_1A90D0AE8(v0);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A92C3F98()
{
  return 16;
}

__n128 sub_1A92C3FA4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A92C3FB0@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_29Tm(sub_1A92C3D1C, MEMORY[0x1E0DEEB18], a1);
}

uint64_t keypath_get_29Tm@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t (*a2)(void)@<X4>, _QWORD *a3@<X8>)
{
  *a3 = a1();
  return a2();
}

uint64_t sub_1A92C3FFC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1A92BC1C0(v0);
}

uint64_t sub_1A92C4024()
{
  return 16;
}

__n128 sub_1A92C4030(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of PurchaseControllerProtocol.recentlyEntitledProductsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PurchaseControllerProtocol.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 16))();
}

uint64_t method lookup function for PurchaseController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PurchaseController.recentlyEntitledProductsPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of PurchaseController.musicSubscriptionInformation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PurchaseController.musicSubscriptionInformation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of PurchaseController.musicSubscriptionInformation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of PurchaseController.__allocating_init(uiDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 504))();
}

uint64_t dispatch thunk of PurchaseController.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of PurchaseController.resetSubscriptionsCache()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of PurchaseController.syncMusicSubscriptionInformation(shouldForce:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of PurchaseController.entitlementsDidChange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

uint64_t sub_1A92C4200(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A92C424C + 4 * byte_1A941A195[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A92C4280 + 4 * byte_1A941A190[v4]))();
}

uint64_t sub_1A92C4280(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92C4288(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92C4290);
  return result;
}

uint64_t sub_1A92C429C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92C42A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A92C42A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92C42B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for PurchaseController.RefreshCondition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PurchaseController.RefreshCondition);
}

uint64_t sub_1A92C42C8()
{
  return type metadata accessor for MockPurchaseController();
}

uint64_t type metadata accessor for MockPurchaseController()
{
  uint64_t result;

  result = qword_1EEABD648;
  if (!qword_1EEABD648)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A92C430C()
{
  unint64_t v0;

  sub_1A90C2138();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MockPurchaseController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockPurchaseController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MockPurchaseController.recentlyEntitledProductsPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of MockPurchaseController.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1A92C43AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A92BBE74();
  *a1 = result;
  return result;
}

uint64_t sub_1A92C43D4()
{
  swift_bridgeObjectRetain();
  return sub_1A92BBF0C();
}

uint64_t sub_1A92C43FC()
{
  return 16;
}

__n128 sub_1A92C4408(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A92C4414()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92C4438()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92C445C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C4498()
{
  uint64_t v0;

  return sub_1A92C1AF4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1A92C44AC()
{
  return objectdestroy_56Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A92C44B8(void *a1)
{
  uint64_t v1;

  return sub_1A92BCD24(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A92C44C4()
{
  return objectdestroy_56Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_56Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1A92C4510()
{
  uint64_t v0;

  return sub_1A92BCF4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1A92C451C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92C4548()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92C4570()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A92C4594()
{
  uint64_t v0;

  return sub_1A92BEC00(*(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

uint64_t sub_1A92C45A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A92C45B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C45E0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A92BEDC4(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A92C45EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A92BF614(a1, a2, a3, a4, a5, *(_QWORD **)(v5 + 16));
}

uint64_t sub_1A92C45F4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C4620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C47C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92C47F4()
{
  uint64_t v0;

  return sub_1A92BF838(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92C4800(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A92C0DF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24)) & 1;
}

BOOL sub_1A92C481C(double *a1)
{
  double v1;
  double v2;

  v1 = *a1;
  sub_1A93F72D8();
  return v1 < v2;
}

uint64_t sub_1A92C4858()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A92C487C(uint64_t a1)
{
  uint64_t v1;

  sub_1A92BC350(a1, *(_QWORD *)(v1 + 32));
}

id sub_1A92C48C8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1A92C4938(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E454(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_persistentID);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_1A929E454(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A92C4A98(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v16 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E41C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v16;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1AF4129DC](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_assetURL);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1A93F8040();
        v12 = v11;

      }
      else
      {

        v10 = 0;
        v12 = 0;
      }
      v14 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      if (v14 >= v13 >> 1)
        sub_1A929E41C(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v16 + 16) = v14 + 1;
      v15 = v16 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1A92C4C24()
{
  qword_1ED2A9448 = (uint64_t)&unk_1E54D7870;
}

uint64_t sub_1A92C4C38()
{
  if (qword_1ED2A9458 != -1)
    swift_once();
  off_1ED2A9438 = (_UNKNOWN *)qword_1ED2A9448;
  return swift_bridgeObjectRetain();
}

uint64_t static MTPodcastEpisodeLimit.allGlobalSettingsCases.getter()
{
  return sub_1A91A8EAC(&qword_1ED2A9440);
}

uint64_t sub_1A92C4C9C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1ED2A9458 != -1)
    swift_once();
  v0 = swift_bridgeObjectRetain();
  result = sub_1A9136E30(v0);
  qword_1EEABD718 = (uint64_t)&unk_1E54D78E8;
  return result;
}

uint64_t static MTPodcastEpisodeLimit.allShowSettingsCases.getter()
{
  return sub_1A91A8EAC(&qword_1EEAB6F08);
}

uint64_t static MTPodcastEpisodeLimit.defaultOption.getter()
{
  return 4;
}

Swift::String __swiftcall MTPodcastEpisodeLimit.title(for:)(PodcastsFoundation::AutoDownloadSettingPresentationStyle a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  id v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String result;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  v3 = *(unsigned __int8 *)a1;
  if (v1 <= 4294967294)
  {
    switch(v1)
    {
      case 0:
        if (qword_1ED2AD260 == -1)
          goto LABEL_41;
        goto LABEL_42;
      case 1:
        if (*(_BYTE *)a1)
        {
          if (v3 == 1)
          {
            if (qword_1ED2AD260 != -1)
              goto LABEL_42;
          }
          else if (qword_1ED2AD260 != -1)
          {
            goto LABEL_42;
          }
        }
        else if (qword_1ED2AD260 != -1)
        {
          goto LABEL_42;
        }
        break;
      case 2:
        v26 = *(_BYTE *)a1;
        v12 = &v26;
        v13 = 2;
        goto LABEL_29;
      case 3:
        v27 = *(_BYTE *)a1;
        v12 = &v27;
        v13 = 3;
        goto LABEL_29;
      case 4:
        v28 = *(_BYTE *)a1;
        v12 = &v28;
        v13 = 5;
        goto LABEL_29;
      case 5:
        v29 = *(_BYTE *)a1;
        v12 = &v29;
        v13 = 10;
LABEL_29:
        v10 = sub_1A92C8688(v12, v13);
        goto LABEL_48;
      case 6:
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
        v20 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v14 + 64) = v20;
        v16 = 24;
        goto LABEL_36;
      case 7:
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v17 = swift_allocObject();
        v18 = MEMORY[0x1E0DEB418];
        *(_OWORD *)(v17 + 16) = xmmword_1A9405520;
        v19 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v17 + 56) = v18;
        *(_QWORD *)(v17 + 64) = v19;
        *(_QWORD *)(v17 + 32) = 7;
        goto LABEL_37;
      case 8:
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
        v21 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v14 + 64) = v21;
        v16 = 14;
        goto LABEL_36;
      case 9:
        if (qword_1ED2AD260 != -1)
          swift_once();
        sub_1A93F7044();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
        v15 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v14 + 64) = v15;
        v16 = 30;
LABEL_36:
        *(_QWORD *)(v14 + 32) = v16;
LABEL_37:
        v22 = sub_1A93F801C();
        v24 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v22;
        v11 = v24;
        goto LABEL_48;
      default:
        goto LABEL_46;
    }
    goto LABEL_41;
  }
  if (v1 == 0xFFFFFFFFLL)
  {
    if (qword_1ED2AD260 == -1)
      goto LABEL_41;
    goto LABEL_42;
  }
  if (v1 != 0x100000001)
  {
    if (v1 != 0x100000000)
    {
LABEL_46:
      type metadata accessor for MTPodcastEpisodeLimit(0);
      v31 = v2;
      sub_1A93F921C();
      __break(1u);
      JUMPOUT(0x1A92C5490);
    }
    if (qword_1ED2AD260 == -1)
      goto LABEL_41;
LABEL_42:
    swift_once();
LABEL_41:
    v10 = sub_1A93F7044();
    goto LABEL_48;
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
  objc_msgSend(v4, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

  v30 = v3;
  v5 = MTPodcastEpisodeLimit.title(for:)((PodcastsFoundation::AutoDownloadSettingPresentationStyle)&v30);
  if (qword_1ED2AD260 != -1)
    swift_once();
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1A90A92DC();
  *(Swift::String *)(v6 + 32) = v5;
  v7 = sub_1A93F801C();
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v7;
  v11 = v9;
LABEL_48:
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

void MTPodcastEpisodeLimit.countValue(in:completionHandler:)(void *a1, void (*a2)(uint64_t, uint64_t, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char **v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  _QWORD v23[6];

  v7 = 0;
  v8 = 1;
  if (a4 > 4294967294)
  {
    if (a4 != 0xFFFFFFFFLL)
    {
      if (a4 == 0x100000001)
      {
        v10 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
        v11 = objc_msgSend(v10, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

        if (v11 == (id)0x100000001)
        {
          if (qword_1ED2A3F28 != -1)
            swift_once();
          v12 = sub_1A93F7698();
          __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3F08);
          v13 = sub_1A93F7674();
          v14 = sub_1A93F879C();
          if (os_log_type_enabled(v13, v14))
          {
            v15 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v15 = 0;
            _os_log_impl(&dword_1A904E000, v13, v14, "Episode global default set as global default, which is unresolvable.", v15, 2u);
            MEMORY[0x1AF41411C](v15, -1, -1);
          }

          sub_1A92C8858();
          v16 = (void *)swift_allocError();
          v8 = 1;
          a2(0, 1, v16);

          v7 = 0;
        }
        else
        {
          MTPodcastEpisodeLimit.countValue(in:completionHandler:)(a1, a2, a3, v11);
          v7 = 0;
          v8 = 1;
        }
      }
      else
      {
        if (a4 != 0x100000000)
        {
LABEL_23:
          type metadata accessor for MTPodcastEpisodeLimit(0);
          v23[0] = a4;
          sub_1A93F921C();
          __break(1u);
          JUMPOUT(0x1A92C5810);
        }
        v7 = 0;
        v8 = 0;
      }
    }
LABEL_22:
    a2(v7, v8, 0);
  }
  else
  {
    v9 = &selRef_predicateForEpisodesPublishedToday;
    switch(a4)
    {
      case 0:
        goto LABEL_22;
      case 1:
      case 2:
      case 3:
        v8 = 0;
        v7 = a4;
        goto LABEL_22;
      case 4:
        v8 = 0;
        v7 = 5;
        goto LABEL_22;
      case 5:
        v8 = 0;
        v7 = 10;
        goto LABEL_22;
      case 6:
        goto LABEL_19;
      case 7:
        v9 = &selRef_predicateForEpisodesPublishedThisWeek;
        goto LABEL_19;
      case 8:
        v9 = &selRef_predicateForEpisodesPublishedLastTwoWeeks;
        goto LABEL_19;
      case 9:
        v9 = &selRef_predicateForEpisodesPublishedThisMonth;
LABEL_19:
        v7 = (uint64_t)objc_msgSend((id)objc_opt_self(), *v9);
        if (!v7)
          goto LABEL_22;
        v17 = (void *)v7;
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = v17;
        v18[3] = a2;
        v18[4] = a3;
        v18[5] = a1;
        v23[4] = sub_1A92C88A0;
        v23[5] = v18;
        v23[0] = MEMORY[0x1E0C809B0];
        v23[1] = 1107296256;
        v23[2] = sub_1A908A91C;
        v23[3] = &block_descriptor_52;
        v19 = _Block_copy(v23);
        v20 = v17;
        swift_retain();
        v21 = a1;
        swift_release();
        objc_msgSend(v21, sel_performBlock_, v19);
        _Block_release(v19);

        break;
      default:
        goto LABEL_23;
    }
  }
}

void MTPodcastEpisodeLimit.countEpisodes(matching:in:completionHandler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a2;
  v12[4] = sub_1A92C9264;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A908A91C;
  v12[3] = &block_descriptor_7_2;
  v9 = _Block_copy(v12);
  v10 = a1;
  swift_retain();
  v11 = a2;
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v9);
  _Block_release(v9);
}

void sub_1A92C5914(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  id v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A909E53C();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v7, sel_setPredicate_, a1);
  v12[0] = 0;
  v8 = (unint64_t)objc_msgSend(a4, sel_countForFetchRequest_error_, v7, v12);
  v9 = v12[0];
  if (v12[0])
  {
    v10 = v12[0];
    swift_willThrow();
    v11 = v10;
    ((void (*)(_QWORD, uint64_t, id))a2)(0, 1, v9);

LABEL_5:
    return;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    a2();
    goto LABEL_5;
  }
  sub_1A93F8E08();
  __break(1u);
}

BOOL sub_1A92C5A68(char *a1)
{
  char *v1;
  id v2;

  v1 = a1;
  while (v1 == (char *)0x100000001)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
    v1 = (char *)objc_msgSend(v2, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

  }
  return (unint64_t)(v1 - 1) < 5;
}

id MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest.getter(uint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1A93F8040();
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setPredicate_, v1);
  return v4;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedAutomaticallyDownloadedEpisodes.getter(uint64_t a1)
{
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  _QWORD aBlock[6];
  uint64_t v11;

  if ((objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp) & 1) == 0
    && !objc_msgSend((id)objc_opt_self(), sel_canExtensionOpenDatabase))
  {
    return 0;
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_mainOrPrivateContext);

  v11 = 0;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = &v11;
  v4[3] = v3;
  v4[4] = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1A92C88D4;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1A9055748;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_16_3;
  v6 = _Block_copy(aBlock);
  v7 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) == 0)
  {
    v9 = v11;
    swift_release();
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1A92C5D90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a3, 0);
  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, v4);
  sub_1A909E53C();
  v8 = sub_1A93F89D0();

  *a1 = v8;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedAutomaticallyDownloadedEpisodes()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[3] = a1;
  v2 = sub_1A93F89C4();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92C60B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  if ((objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp) & 1) != 0
    || objc_msgSend((id)objc_opt_self(), sel_canExtensionOpenDatabase))
  {
    v2 = *(_QWORD *)(v0 + 40);
    v1 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v6 = objc_msgSend(v5, sel_mainOrPrivateContext);
    *(_QWORD *)(v0 + 56) = v6;

    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v7;
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v4;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
    v6;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v8;
    *v8 = v0;
    v8[1] = sub_1A92C6238;
    return sub_1A93F89E8();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1A92C6238()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1A92C62E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
    return sub_1A93F8E08();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A92C6384()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A92C63C0(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1A93F8040();
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, v4);
  sub_1A909E53C();
  v8 = sub_1A93F89D0();

  if (!v2)
    *a2 = v8;
}

uint64_t MTPodcastEpisodeLimit.objectIDsForAutomaticallyDownloadedEpisodesExcludedByGlobalSettings.getter(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1A93F8040();
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v4 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setPredicate_, v2);
  v6 = sub_1A92C65B4(v5, a1);

  return v6;
}

uint64_t sub_1A92C65B4(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t (*v13)();
  uint64_t v14;
  _QWORD aBlock[6];
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  if ((objc_msgSend((id)objc_opt_self(), sel_isPodcastsApp) & 1) == 0
    && !objc_msgSend((id)objc_opt_self(), sel_canExtensionOpenDatabase))
  {
    v13 = 0;
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_6;
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_mainOrPrivateContext);

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = &v16;
  v6[5] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1A92C9244;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_73_1;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v13 = sub_1A92C9244;
    v14 = v16;
LABEL_6:
    sub_1A9085818((uint64_t)v13);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t MTPodcastEpisodeLimit.persistentIDsForAutoDownloadEpisodesExcludedByGlobalLimit(in:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1A93F89C4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92C67F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = (void *)v0[3];
  v5 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, v0[4], 0);
  sub_1A93F8040();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);
  v0[8] = v8;

  objc_msgSend(v8, sel_setPredicate_, v5);
  v9 = swift_allocObject();
  v0[9] = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v10 = v4;
  v11 = v8;
  v12 = (_QWORD *)swift_task_alloc();
  v0[10] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD738);
  *v12 = v0;
  v12[1] = sub_1A92C6988;
  return sub_1A93F89E8();
}

uint64_t sub_1A92C6988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

unint64_t sub_1A92C6A1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1A909E53C();
  result = sub_1A93F89DC();
  if (!v1)
  {
    v4 = sub_1A92C4938(result);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = 0;
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v8 = *(_QWORD *)(v4 + 8 * v6 + 32);
        if ((v8 & 0x8000000000000000) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_1A91197AC(0, v7[2] + 1, 1, v7);
          v10 = v7[2];
          v9 = v7[3];
          if (v10 >= v9 >> 1)
            v7 = sub_1A91197AC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
          v7[2] = v10 + 1;
          v7[v10 + 4] = v8;
        }
        ++v6;
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    result = swift_bridgeObjectRelease();
    *a1 = v7;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.assetURLsForAutoDownloadEpisodesExcludedByGlobalLimit(in:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1A93F89C4();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92C6BCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = (void *)v0[3];
  v5 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, v0[4], 0);
  sub_1A93F8040();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v7 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);
  v0[8] = v8;

  objc_msgSend(v8, sel_setPredicate_, v5);
  v9 = swift_allocObject();
  v0[9] = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v10 = v4;
  v11 = v8;
  v12 = (_QWORD *)swift_task_alloc();
  v0[10] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92F0);
  *v12 = v0;
  v12[1] = sub_1A92C6D5C;
  return sub_1A93F89E8();
}

uint64_t sub_1A92C6D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1A92C6DF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A92C6E34()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1A92C6E70@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  _QWORD v24[3];
  unint64_t *v25;
  char *v26;
  char *v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - v11;
  sub_1A909E53C();
  result = sub_1A93F89DC();
  if (!v1)
  {
    v27 = v12;
    v25 = a1;
    v14 = sub_1A92C4A98(result);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v24[2] = 0;
      swift_bridgeObjectRetain();
      v24[1] = v14;
      v16 = (_QWORD *)(v14 + 40);
      v17 = MEMORY[0x1E0DEE9D8];
      v26 = v9;
      while (1)
      {
        if (*v16)
        {
          swift_bridgeObjectRetain();
          sub_1A93F7248();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
          {
            v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
            v19 = v27;
            v18(v27, v5, v6);
            v18(v9, v19, v6);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1A91198C0(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
            v21 = *(_QWORD *)(v17 + 16);
            v20 = *(_QWORD *)(v17 + 24);
            if (v21 >= v20 >> 1)
              v17 = sub_1A91198C0(v20 > 1, v21 + 1, 1, v17);
            *(_QWORD *)(v17 + 16) = v21 + 1;
            v22 = v17
                + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                + *(_QWORD *)(v7 + 72) * v21;
            v9 = v26;
            v18((char *)v22, v26, v6);
            goto LABEL_6;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
        }
        sub_1A914149C((uint64_t)v5);
LABEL_6:
        v16 += 2;
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          v23 = v25;
          goto LABEL_16;
        }
      }
    }
    v17 = MEMORY[0x1E0DEE9D8];
    v23 = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v23 = v17;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.objectIDsForAutomaticallyDownloadedEpisodesExcludedByShowSettings(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;

  v4 = MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest(uuid:)(a1, a2, a3);
  v5 = sub_1A92C65B4(v4, a3);

  return v5;
}

id MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, a3, 0);
  v6 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(v4, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v6);

  v8 = objc_msgSend(v5, sel_AND_, v7);
  sub_1A93F8040();
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v10 = v8;
  v11 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithEntityName_, v11);

  objc_msgSend(v12, sel_setPredicate_, v10);
  return v12;
}

uint64_t sub_1A92C7298(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  sub_1A909E53C();
  v4 = sub_1A93F89DC();
  v5 = v4;
  v13 = MEMORY[0x1E0DEE9D8];
  if (!(v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    *a3 = v12;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1A93F8E5C();
  v6 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1AF4129DC](i, v5);
      else
        v9 = *(id *)(v5 + 8 * i + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_objectID);

      if (v11)
      {
        MEMORY[0x1AF412004]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    v12 = v13;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall MTPodcastEpisodeLimit.numberOfExcludedDownloadedEpisodes(from:)(Swift::String from)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  id v6;
  void (*v7)();
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  Swift::Int result;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  Swift::Int v20;
  _QWORD aBlock[6];
  char v22;

  v2 = v1;
  object = from._object;
  countAndFlagsBits = from._countAndFlagsBits;
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  if ((os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
  {
    v7 = 0;
    v8 = v2;
LABEL_11:
    v15 = (void *)objc_opt_self();
    v16 = objc_msgSend(v15, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, v8, 0);
    v17 = (void *)sub_1A93F8010();
    v18 = objc_msgSend(v15, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v17);

    v19 = objc_msgSend(v16, sel_AND_, v18);
    v20 = sub_1A92C7924((uint64_t)v19, v2);

    sub_1A9085818((uint64_t)v7);
    return v20;
  }
  v22 = 0;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v6;
  v9[3] = countAndFlagsBits;
  v9[4] = object;
  v9[5] = &v22;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A92C8990;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_41_0;
  v11 = _Block_copy(aBlock);
  v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    if (v22)
      v14 = 0;
    else
      v14 = 0x100000001;
    if (v2 == 0x100000001)
      v8 = v14;
    else
      v8 = v2;
    v7 = sub_1A92C8990;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1A92C78A0(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  void *v6;
  id v7;
  unsigned __int8 v8;

  v6 = (void *)sub_1A93F8010();
  v7 = objc_msgSend(a1, sel_podcastForUuid_, v6);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_isSerialShowTypeInFeed);

  }
  else
  {
    v8 = 0;
  }
  *a4 = v8;
}

uint64_t sub_1A92C7924(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  sub_1A93F8040();
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  objc_msgSend(v6, sel_setPredicate_, a1);
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_mainOrPrivateContext);

  v17 = 0;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = &v17;
  v9[3] = v8;
  v9[4] = v6;
  v9[5] = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A92C91FC;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_63_1;
  v11 = _Block_copy(aBlock);
  v12 = v8;
  v13 = v6;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedDownloadedEpisodes(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a2;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_1A92C7B90;
  return sub_1A92C7DEC(a1, a2, a3);
}

uint64_t sub_1A92C7B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1A92C7C0C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  _QWORD *v7;

  v1 = v0[5];
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, v1, 0);
  v0[6] = v3;
  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(v2, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v4);
  v0[7] = v5;

  v6 = objc_msgSend(v3, sel_AND_, v5);
  v0[8] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  *v7 = v0;
  v7[1] = sub_1A92C7CF4;
  return sub_1A92C89AC((uint64_t)v6);
}

uint64_t sub_1A92C7CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1A92C7D70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1A92C7DAC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A92C7DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1A93F89C4();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92C7E50()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_mainOrPrivateContext);
  *(_QWORD *)(v0 + 64) = v2;

  if ((os_feature_enabled_serial_sort_auto_downloads() & 1) != 0)
  {

    v3 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    v10 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 72) = v10;
    v10[2] = v2;
    v10[3] = v9;
    v10[4] = v8;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0C977C0], v7);
    v2;
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v11;
    *v11 = v0;
    v11[1] = sub_1A92C7FB8;
    return sub_1A93F89E8();
  }
}

uint64_t sub_1A92C7FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1A92C8034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);

  if (v1 == 0x100000001)
  {
    if (*(_BYTE *)(v0 + 88))
      v2 = 0;
    else
      v2 = 0x100000001;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 32);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

void sub_1A92C8098(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  void *v4;
  id v5;
  unsigned __int8 v6;

  v4 = (void *)sub_1A93F8010();
  v5 = objc_msgSend(a1, sel_podcastForUuid_, v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_isSerialShowTypeInFeed);

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

uint64_t sub_1A92C8124(uint64_t *a1)
{
  uint64_t result;

  sub_1A909E53C();
  result = sub_1A93F89D0();
  *a1 = result;
  return result;
}

uint64_t sub_1A92C8344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_1A909E53C();
  result = sub_1A93F89D0();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t MTPodcast.currentEpisodeLimitAllowsAutomaticDownloads.getter()
{
  void *v0;

  return MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(objc_msgSend(v0, sel_episodeLimit));
}

id MTPodcast.currentEpisodeLimitIsNextNEpisodes.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_isSerialShowTypeInFeed);
  if ((_DWORD)result)
    return (id)sub_1A92C5A68((char *)objc_msgSend(v0, sel_episodeLimit));
  return result;
}

id PodcastEpisodeLimitHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PodcastEpisodeLimitHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastEpisodeLimitHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PodcastEpisodeLimitHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastEpisodeLimitHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static AutoDownloadSettingPresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AutoDownloadSettingPresentationStyle.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t AutoDownloadSettingPresentationStyle.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

void *static MTPodcastEpisodeLimit.allCases.getter()
{
  return &unk_1E54D7550;
}

void sub_1A92C85D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7550;
}

uint64_t sub_1A92C85E0()
{
  sub_1A92C9114();
  return sub_1A93F82E0();
}

uint64_t sub_1A92C863C()
{
  sub_1A92C9114();
  return sub_1A93F82B0();
}

uint64_t sub_1A92C8688(_BYTE *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    if (qword_1ED2AD260 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*a1 == 1)
  {
    if (qword_1ED2AD260 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1ED2AD260 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  sub_1A93F7044();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1A9405520;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = a2;
  v6 = sub_1A93F801C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1A92C8858()
{
  unint64_t result;

  result = qword_1EEABD720;
  if (!qword_1EEABD720)
  {
    result = MEMORY[0x1AF414014](&unk_1A941A600, &type metadata for MTPodcastEpisodeLimitResolutionError);
    atomic_store(result, (unint64_t *)&qword_1EEABD720);
  }
  return result;
}

void sub_1A92C88A0()
{
  uint64_t v0;

  sub_1A92C5914(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1A92C88B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92C88D4()
{
  uint64_t v0;

  sub_1A92C5D90(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92C88E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A92C88F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92C8914(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1A92C63C0(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A92C892C()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1A92C8958@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92C6A1C(a1);
}

unint64_t sub_1A92C8970@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A92C6E70(a1);
}

uint64_t sub_1A92C8988()
{
  return objectdestroy_33Tm();
}

void sub_1A92C8990()
{
  uint64_t v0;

  sub_1A92C78A0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 **)(v0 + 40));
}

uint64_t sub_1A92C899C()
{
  return swift_deallocObject();
}

uint64_t sub_1A92C89AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[3] = a1;
  v2 = sub_1A93F89C4();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A92C8A0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;

  v2 = v0[5];
  v1 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_mainOrPrivateContext);
  v0[7] = v6;

  sub_1A93F8040();
  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v8 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);
  v0[8] = v9;

  objc_msgSend(v9, sel_setPredicate_, v4);
  v10 = swift_allocObject();
  v0[9] = v10;
  *(_QWORD *)(v10 + 16) = v6;
  *(_QWORD *)(v10 + 24) = v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v6;
  v11 = v9;
  v12 = (_QWORD *)swift_task_alloc();
  v0[10] = v12;
  *v12 = v0;
  v12[1] = sub_1A92C8BA8;
  return sub_1A93F89E8();
}

uint64_t sub_1A92C8BA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1A92C8C58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 56);

  v2 = *(_QWORD *)(v0 + 16);
  if (v2 < 0)
    return sub_1A93F8E08();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1A92C8CF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id _s18PodcastsFoundation25PodcastEpisodeLimitHelperC15allGlobalLimitsSo5NSSetCvgZ_0()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v9;

  if (qword_1ED2A9440 != -1)
    swift_once();
  v0 = off_1ED2A9438;
  v1 = *((_QWORD *)off_1ED2A9438 + 2);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A93F8D84();
    v3 = 0;
    do
    {
      v4 = v3 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v0[v3 + 4]);
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      v3 = v4;
    }
    while (v1 != v4);
    v2 = v9;
    swift_bridgeObjectRelease();
  }
  sub_1A911F0BC(v2);
  swift_bridgeObjectRelease();
  v5 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
  v6 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithArray_, v6);

  return v7;
}

uint64_t type metadata accessor for PodcastEpisodeLimitHelper()
{
  return objc_opt_self();
}

unint64_t sub_1A92C8ED0()
{
  unint64_t result;

  result = qword_1EEABD760;
  if (!qword_1EEABD760)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadSettingPresentationStyle, &type metadata for AutoDownloadSettingPresentationStyle);
    atomic_store(result, (unint64_t *)&qword_1EEABD760);
  }
  return result;
}

unint64_t sub_1A92C8F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABD768;
  if (!qword_1EEABD768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABD770);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABD768);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AutoDownloadSettingPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92C8FB0 + 4 * byte_1A941A3A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92C8FE4 + 4 * byte_1A941A3A0[v4]))();
}

uint64_t sub_1A92C8FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92C8FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92C8FF4);
  return result;
}

uint64_t sub_1A92C9000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92C9008);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92C900C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92C9014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadSettingPresentationStyle()
{
  return &type metadata for AutoDownloadSettingPresentationStyle;
}

uint64_t storeEnumTagSinglePayload for MTPodcastEpisodeLimitResolutionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92C9070 + 4 * byte_1A941A3AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92C9090 + 4 * byte_1A941A3AF[v4]))();
}

_BYTE *sub_1A92C9070(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92C9090(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92C9098(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92C90A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92C90A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92C90B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MTPodcastEpisodeLimitResolutionError()
{
  return &type metadata for MTPodcastEpisodeLimitResolutionError;
}

unint64_t sub_1A92C90D0()
{
  unint64_t result;

  result = qword_1EEABD778;
  if (!qword_1EEABD778)
  {
    result = MEMORY[0x1AF414014](&unk_1A941A5D8, &type metadata for MTPodcastEpisodeLimitResolutionError);
    atomic_store(result, (unint64_t *)&qword_1EEABD778);
  }
  return result;
}

unint64_t sub_1A92C9114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2ABD00;
  if (!qword_1ED2ABD00)
  {
    type metadata accessor for MTPodcastEpisodeLimit(255);
    result = MEMORY[0x1AF414014](&unk_1A9404684, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2ABD00);
  }
  return result;
}

uint64_t sub_1A92C915C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A92C8344(a1);
}

uint64_t sub_1A92C9174()
{
  return objectdestroy_33Tm();
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A92C91B4(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  sub_1A92C8098(*(void **)(v1 + 16), a1);
}

uint64_t sub_1A92C91D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A92C91FC()
{
  uint64_t v0;

  return sub_1A92C8124(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1A92C9208()
{
  return swift_deallocObject();
}

uint64_t sub_1A92C9218()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A92C9244()
{
  uint64_t v0;

  return sub_1A92C7298(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1A92C9250()
{
  return swift_deallocObject();
}

uint64_t static OS_dispatch_source.memoryPressurePublisher()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD780);
  v25 = *(_QWORD *)(v0 - 8);
  v26 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F7D58();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F88D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F88C8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABD788);
  swift_allocObject();
  v13 = sub_1A93F79EC();
  sub_1A92C963C();
  sub_1A93F88BC();
  if (qword_1ED2A93D8 != -1)
    swift_once();
  v14 = sub_1A93F88E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_getObjectType();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v13;
  aBlock[4] = sub_1A92C97BC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_53;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1A93F7D88();
  sub_1A90A1094();
  sub_1A93F88F8();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  swift_release();
  swift_release();
  sub_1A93F8928();
  aBlock[0] = v13;
  *(_QWORD *)(swift_allocObject() + 16) = v14;
  sub_1A9066D74(&qword_1EEABD7F8, (uint64_t *)&unk_1EEABD788, MEMORY[0x1E0C95FB8]);
  swift_unknownObjectRetain_n();
  sub_1A93F7B3C();
  swift_unknownObjectRelease();
  swift_release();
  sub_1A9066D74(&qword_1EEABD800, &qword_1EEABD780, MEMORY[0x1E0C957C0]);
  v18 = v26;
  v19 = sub_1A93F7B24();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v18);
  return v19;
}

unint64_t sub_1A92C963C()
{
  unint64_t result;

  result = qword_1ED2AC930;
  if (!qword_1ED2AC930)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2AC930);
  }
  return result;
}

uint64_t sub_1A92C9678()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92C969C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v2 = sub_1A93F88D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a1 + 16);
  if (result)
  {
    swift_getObjectType();
    if ((sub_1A93F88EC() & 1) != 0)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_1A93F8A00();
      sub_1A93F79B0();
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_1A92C9790()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92C97BC()
{
  uint64_t v0;

  return sub_1A92C969C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A92C97C4()
{
  uint64_t result;

  swift_getObjectType();
  result = sub_1A93F88EC();
  if ((result & 1) == 0)
    return sub_1A93F891C();
  return result;
}

uint64_t sub_1A92C97F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92C981C()
{
  return sub_1A92C97C4();
}

id sub_1A92C9824()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PodcastRequestManager()), sel_init);
  qword_1EEABD808 = (uint64_t)result;
  return result;
}

id PodcastRequestManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static PodcastRequestManager.sharedInstance.getter()
{
  if (qword_1EEAB6F10 != -1)
    swift_once();
  return (id)qword_1EEABD808;
}

uint64_t sub_1A92C98F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  void *v37;
  uint64_t (**v38)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v39;
  uint64_t v40;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v47 = a2;
  v52 = a3;
  v45 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MediaRequest.Params();
  v8 = *(_QWORD *)(v7 - 8);
  v49 = *(_QWORD *)(v8 + 64);
  v50 = v8;
  MEMORY[0x1E0C80A78](v7);
  v48 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (uint64_t)&v45 - v11;
  *(_QWORD *)&v59 = 0;
  v57 = 0u;
  v58 = 0u;
  BYTE8(v59) = 4;
  v56 = 1;
  v55 = 1;
  v54 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A9405520;
  v53 = a1;
  *(_QWORD *)(v12 + 32) = sub_1A93F9060();
  *(_QWORD *)(v12 + 40) = v13;
  LOBYTE(v53) = 1;
  v14 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v17 = sub_1A9112728(v15);
  sub_1A911273C(v15);
  v19 = v18;
  v20 = sub_1A9112844(v15);
  v21 = sub_1A9112844(v15);
  v22 = sub_1A9112858(v15);
  *((_QWORD *)&v44 + 1) = sub_1A911286C(v15);
  *(_QWORD *)&v44 = v22;
  *(_QWORD *)&v43 = v21;
  *((_QWORD *)&v43 + 1) = v15;
  *(_QWORD *)&v42 = v15;
  *((_QWORD *)&v42 + 1) = v20;
  v23 = v51;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v57, &v56, &v55, &v54, v16, v17, v19, v15, v51, v42, v43, v15, v12, (char *)&v53, 0, 1, v44, 0, 1,
    0,
    (uint64_t)v6,
    0,
    0,
    0,
    0,
    0,
    v15,
    0,
    0,
    2);
  v46 = *(char **)&v46[OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController];
  v24 = (_QWORD *)swift_allocObject();
  v25 = v47;
  v24[2] = v45;
  v24[3] = v25;
  v24[4] = v52;
  v26 = swift_allocObject();
  v47 = v26;
  swift_unknownObjectWeakInit();
  v27 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v27 + 2) = v26;
  *((_QWORD *)v27 + 3) = sub_1A92CA1C4;
  *((_QWORD *)v27 + 4) = v24;
  sub_1A93F9330();
  v28 = v48;
  sub_1A9114B88(v23, v48);
  v29 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v30 = (v49 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 79) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject();
  sub_1A917695C(v28, v33 + v29);
  *(_QWORD *)(v33 + v30) = v15;
  v34 = v33 + v31;
  *(_QWORD *)(v34 + 64) = v61;
  v35 = v60;
  *(_OWORD *)(v34 + 32) = v59;
  *(_OWORD *)(v34 + 48) = v35;
  v36 = v58;
  *(_OWORD *)v34 = v57;
  *(_OWORD *)(v34 + 16) = v36;
  v37 = v46;
  *(_QWORD *)(v33 + v32) = v46;
  v38 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v38 = sub_1A9114B7C;
  v38[1] = v27;
  v39 = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v40 = v51;
  sub_1A9195C30(v51, 0, (uint64_t)sub_1A9114C2C, v33);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9114C30(v40);
}

uint64_t sub_1A92C9CF4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  v38 = a7;
  v10 = sub_1A93F7698();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - v15;
  if (!a1)
  {
LABEL_16:
    if (a5)
    {
      v23 = a5;
      if (qword_1ED2A4288 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      v37 = v11;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24, v10);
      v25 = a5;
      v26 = sub_1A93F7674();
      v27 = sub_1A93F879C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v36 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v28 = 134218242;
        v39 = a6;
        sub_1A93F8AA8();
        *(_WORD *)(v28 + 12) = 2112;
        v29 = sub_1A93F711C();
        v39 = v29;
        sub_1A93F8AA8();
        v30 = v36;
        *v36 = v29;

        _os_log_impl(&dword_1A904E000, v26, v27, "Failed to fetch episodes for podcast %lld with error: %@", (uint8_t *)v28, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v30, -1, -1);
        MEMORY[0x1AF41411C](v28, -1, -1);

      }
      else
      {

      }
      v16 = v13;
      v11 = v37;
LABEL_27:
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v38(0, 0);
    }
    if (qword_1ED2A4288 == -1)
    {
LABEL_22:
      v31 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v31, v10);
      v32 = sub_1A93F7674();
      v33 = sub_1A93F879C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v34 = 134217984;
        v39 = a6;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v32, v33, "Failed to fetch episodes for podcast %lld with unknown error", v34, 0xCu);
        MEMORY[0x1AF41411C](v34, -1, -1);
      }

      goto LABEL_27;
    }
LABEL_30:
    swift_once();
    goto LABEL_22;
  }
  v17 = v11;
  if (!(a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1A93F8E5C();
  if (!v11)
    goto LABEL_14;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AF4129DC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
LABEL_15:
    v11 = v17;
    goto LABEL_16;
  }
  v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 56);
    v21 = *(_QWORD *)(v19 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = 0;
    v21 = 0;
  }
  v38(v20, v21);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92CA1A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92CA1C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A92C9CF4(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v5 + 24));
}

uint64_t sub_1A92CA1D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A92CA270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;

  if (a2)
    a2 = sub_1A93F8010();
  v4 = (id)a2;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

uint64_t sub_1A92CA2B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  void *v40;
  uint64_t (**v41)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v42;
  id v43;
  uint64_t v44;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v52 = a2;
  v57 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MediaRequest.Params();
  v8 = *(_QWORD *)(v7 - 8);
  v54 = *(_QWORD *)(v8 + 64);
  v55 = v8;
  MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v49 - v11;
  *(_QWORD *)&v64 = 0;
  v62 = 0u;
  v63 = 0u;
  BYTE8(v64) = 4;
  v61 = 0;
  v60 = 1;
  v59 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A9405520;
  v50 = a1;
  v13 = objc_msgSend(a1, sel_description);
  v14 = sub_1A93F8040();
  v16 = v15;

  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  v58 = 1;
  v17 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v20 = sub_1A9112728(v18);
  sub_1A911273C(v18);
  v22 = v21;
  v23 = sub_1A9112844(v18);
  v24 = sub_1A9112844(v18);
  v25 = sub_1A9112858(v18);
  *((_QWORD *)&v48 + 1) = sub_1A911286C(v18);
  *(_QWORD *)&v48 = v25;
  *(_QWORD *)&v47 = v24;
  *((_QWORD *)&v47 + 1) = v18;
  *(_QWORD *)&v46 = v18;
  *((_QWORD *)&v46 + 1) = v23;
  v26 = v56;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v62, &v61, &v60, &v59, v19, v20, v22, (uint64_t)&unk_1E54D7910, v56, v46, v47, v18, v12, &v58, 0, 1, v48, 0, 1,
    0,
    (uint64_t)v6,
    0,
    0,
    0,
    0,
    0,
    v18,
    0,
    0,
    2);
  v51 = *(char **)&v51[OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController];
  v27 = (_QWORD *)swift_allocObject();
  v28 = v52;
  v27[2] = a1;
  v27[3] = v28;
  v27[4] = v57;
  v29 = swift_allocObject();
  v52 = v29;
  swift_unknownObjectWeakInit();
  v30 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v30 + 2) = v29;
  *((_QWORD *)v30 + 3) = sub_1A92CADCC;
  *((_QWORD *)v30 + 4) = v27;
  sub_1A93F9330();
  v31 = v53;
  sub_1A9114B88(v26, v53);
  v32 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v33 = (v54 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 79) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_1A917695C(v31, v36 + v32);
  *(_QWORD *)(v36 + v33) = v18;
  v37 = v36 + v34;
  *(_QWORD *)(v37 + 64) = v66;
  v38 = v65;
  *(_OWORD *)(v37 + 32) = v64;
  *(_OWORD *)(v37 + 48) = v38;
  v39 = v63;
  *(_OWORD *)v37 = v62;
  *(_OWORD *)(v37 + 16) = v39;
  v40 = v51;
  *(_QWORD *)(v36 + v35) = v51;
  v41 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v41 = sub_1A91162C4;
  v41[1] = v30;
  v42 = v40;
  v43 = v50;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v44 = v56;
  sub_1A9195C30(v56, 0, (uint64_t)sub_1A9114C2C, v36);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9114C30(v44);
}

uint64_t sub_1A92CA6D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t), char *a8)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  id v39;
  void *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  NSObject *v45;
  NSObject *v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  char *v55;
  NSObject *v56;
  char *v57;
  os_log_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v63;

  v62 = a7;
  v12 = sub_1A93F7698();
  v13 = *(char **)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v58 - v17;
  if (!a1)
  {
LABEL_24:
    if (a5)
    {
      v36 = a5;
      if (qword_1ED2A4288 != -1)
        swift_once();
      v37 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      v61 = v13;
      (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v15, v37, v12);
      v38 = a6;
      v39 = a5;
      v40 = a5;
      v41 = sub_1A93F7674();
      v42 = sub_1A93F879C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        v44 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v43 = 138412546;
        v59 = v15;
        v60 = v12;
        v63 = v38;
        v45 = v38;
        v58 = v41;
        v46 = v45;
        sub_1A93F8AA8();
        *v44 = v38;

        *(_WORD *)(v43 + 12) = 2112;
        v47 = sub_1A93F711C();
        v63 = v47;
        v12 = v60;
        sub_1A93F8AA8();
        v44[1] = v47;

        v48 = v58;
        _os_log_impl(&dword_1A904E000, v58, v42, "Failed to fetch podcast from episode ADAM ID %@ with error: %@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v44, -1, -1);
        MEMORY[0x1AF41411C](v43, -1, -1);

        v18 = v59;
      }
      else
      {

        v18 = v15;
      }
      v13 = v61;
      goto LABEL_36;
    }
    if (qword_1ED2A4288 == -1)
    {
LABEL_31:
      v49 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v18, v49, v12);
      v50 = a6;
      v51 = sub_1A93F7674();
      v52 = sub_1A93F879C();
      if (os_log_type_enabled(v51, v52))
      {
        v60 = v12;
        v53 = swift_slowAlloc();
        v61 = a8;
        v54 = (uint8_t *)v53;
        v59 = (char *)swift_slowAlloc();
        *(_DWORD *)v54 = 138412290;
        v63 = v50;
        v55 = v13;
        v56 = v50;
        v12 = v60;
        sub_1A93F8AA8();
        v57 = v59;
        *(_QWORD *)v59 = v50;

        v13 = v55;
        _os_log_impl(&dword_1A904E000, v51, v52, "Failed to fetch podcast from episode ADAM ID %@ with unknown error", v54, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v57, -1, -1);
        MEMORY[0x1AF41411C](v54, -1, -1);
      }
      else
      {

        v51 = v50;
      }

LABEL_36:
      (*((void (**)(char *, uint64_t))v13 + 1))(v18, v12);
      return v62(0, 0, 0, 0);
    }
LABEL_39:
    swift_once();
    goto LABEL_31;
  }
  v19 = a8;
  a8 = v15;
  if (!(a1 >> 62))
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    v15 = a8;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  if (!sub_1A93F8E5C())
    goto LABEL_21;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AF4129DC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcastEpisode();
  v21 = swift_dynamicCastClass();
  if (!v21
    || (v22 = (_QWORD *)(v21 + OBJC_IVAR___MTServerPodcastEpisode_relationships), swift_beginAccess(), !*v22)
    || (v23 = (_QWORD *)(*v22 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast),
        swift_beginAccess(),
        !*v23))
  {
    swift_unknownObjectRelease();
LABEL_23:
    a8 = v19;
    goto LABEL_24;
  }
  v24 = v13;
  v25 = (unint64_t *)(*v23 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  v26 = *v25;
  if (!(v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v27)
      goto LABEL_12;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  result = sub_1A93F8E5C();
  if (!result)
  {
LABEL_41:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v24;
    goto LABEL_22;
  }
LABEL_12:
  if ((v26 & 0xC000000000000001) != 0)
  {
    v29 = (char *)MEMORY[0x1AF4129DC](0, v26);
  }
  else
  {
    if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v29 = (char *)*(id *)(v26 + 32);
  }
  v30 = v29;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
  v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8];
  v33 = *(_QWORD *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
  if (v33)
  {
    v35 = *(_QWORD *)(v33 + 56);
    v34 = *(_QWORD *)(v33 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = 0;
    v34 = 0;
  }
  swift_bridgeObjectRetain();
  v62(v31, v32, v35, v34);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92CADA0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92CADCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  return sub_1A92CA6D8(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24), *(char **)(v5 + 32));
}

void sub_1A92CAE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_1A93F8010();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = sub_1A93F8010();
LABEL_6:
  v9 = (id)v8;
  (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v7);

}

id PodcastRequestManager.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController;
  v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PodcastRequestManager();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for PodcastRequestManager()
{
  return objc_opt_self();
}

id PodcastRequestManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastRequestManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PodcastRequestManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastRequestManager.updatePodcast(storeId:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PodcastRequestManager.updatePodcast(episodeAdamId:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1A92CB080()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A92CB0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A92CAE60(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_1A92CB0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A92CA270(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.strategies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.resolution(for:)(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = *v1;
  swift_bridgeObjectRetain();
  v4 = sub_1A92CB108(a1, v3, (uint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A92CB108(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9150);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DownloadConsistency.Issue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C38);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2[2])
  {
    v16 = a2[7];
    v17 = a2[8];
    v23 = v13;
    __swift_project_boxed_opaque_existential_1(a2 + 4, v16);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(a1, v16, v17);
    sub_1A91E8E98(a1, (uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    v18 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v24;
    sub_1A91E8EE0((uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
    *(_QWORD *)(v19 + ((v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9008);
    sub_1A9066D74(&qword_1ED2A9000, &qword_1ED2A9008, MEMORY[0x1E0C95D90]);
    sub_1A93F7BB4();
    swift_release();
    swift_release();
    sub_1A9066D74(&qword_1ED2A8C30, &qword_1ED2A8C38, MEMORY[0x1E0C959F8]);
    v20 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
  }
  else
  {
    sub_1A92CB910();
    v25 = swift_allocError();
    type metadata accessor for DownloadConsistency.IssueResolution(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    sub_1A93F7A1C();
    sub_1A9066D74(&qword_1EEABD848, &qword_1ED2A9150, MEMORY[0x1E0C96068]);
    v20 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v20;
}

void sub_1A92CB3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v37 = a6;
  v38 = a2;
  v34 = a1;
  v35 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9150);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DownloadConsistency.Issue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8C38);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a5;
  if (a5 >> 1 == a4)
  {
    sub_1A92CB910();
    v40[0] = swift_allocError();
    type metadata accessor for DownloadConsistency.IssueResolution(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    sub_1A93F7A1C();
    sub_1A9066D74(&qword_1EEABD848, &qword_1ED2A9150, MEMORY[0x1E0C96068]);
    sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else if ((uint64_t)(a5 >> 1) <= a4)
  {
    __break(1u);
  }
  else
  {
    v21 = v35;
    v32 = v17;
    v33 = v18;
    sub_1A905DC3C(v35 + 40 * a4, (uint64_t)v40);
    v23 = v41;
    v22 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v24 = v34;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(v34, v23, v22);
    sub_1A91E8E98(v24, (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    v25 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v26 = (v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v37;
    sub_1A91E8EE0((uint64_t)v15, v27 + v25);
    v28 = (_QWORD *)(v27 + v26);
    *v28 = v38;
    v28[1] = v21;
    v29 = v36;
    v28[2] = a4;
    v28[3] = v29;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9008);
    sub_1A9066D74(&qword_1ED2A9000, &qword_1ED2A9008, MEMORY[0x1E0C95D90]);
    sub_1A93F7BB4();
    swift_release();
    swift_release();
    sub_1A9066D74(&qword_1ED2A8C30, &qword_1ED2A8C38, MEMORY[0x1E0C959F8]);
    v30 = v32;
    sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v30);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  }
}

uint64_t sub_1A92CB6F0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A92CB108(a1, (_QWORD *)*v1, *v1);
}

uint64_t sub_1A92CB6FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v7 = *a3;
  v8 = *(_QWORD *)(*a3 + 16);
  v9 = v8 != 0;
  v10 = (2 * v8) | 1;
  swift_bridgeObjectRetain();
  sub_1A92CB3D8(a2, v7, v7 + 32, v9, v10, a1);
  v12 = v11;
  result = swift_bridgeObjectRelease();
  *a4 = v12;
  return result;
}

uint64_t sub_1A92CB788()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_1A93F73E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
    v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v7 = sub_1A93F726C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92CB8AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A92CB6FC(*(_QWORD *)(v1 + 16), v1 + v4, (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

unint64_t sub_1A92CB910()
{
  unint64_t result;

  result = qword_1EEABD840;
  if (!qword_1EEABD840)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DownloadConsistency.IssueResolutionError, &type metadata for DownloadConsistency.IssueResolutionError);
    atomic_store(result, (unint64_t *)&qword_1EEABD840);
  }
  return result;
}

uint64_t sub_1A92CB954()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_1A93F73E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
    v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C88) + 48);
    v7 = sub_1A93F726C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v4 = sub_1A93F73E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA190);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92CBA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  result = sub_1A92CBAD8(*(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1A92CBAD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a6 >> 1;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = result;
  v12 = a5;
  if (a6 >> 1 == a5)
    goto LABEL_6;
  v12 = a5 + 1;
  if (!__OFADD__(a5, 1))
  {
    if (v6 >= v12)
    {
      if (v12 >= a5)
      {
LABEL_6:
        if (v6 >= a5)
        {
          swift_unknownObjectRetain();
          v13 = sub_1A92CB3D8(a2, a3, a4, v12, a6, v11);
          swift_unknownObjectRelease();
          return v13;
        }
        goto LABEL_11;
      }
LABEL_10:
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

id static DispatchingFairPlayInvalidationManaging.invalidationManager(_:callback:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  v6 = a2;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayInvalidationManaging.invalidateFairPlayKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A92CBDAC;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_54;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_invalidateFairPlayKeyFor_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1A92CBD84()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92CBDAC(void *a1)
{
  uint64_t *v1;

  return sub_1A92CC0B8(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54EEDD8, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_47_1);
}

void DispatchingFairPlayInvalidationManaging.markKeyForInvalidation(at:shouldRemove:)(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  v4 = *(void **)(v2 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  v5 = (id)sub_1A93F71A0();
  objc_msgSend(v4, sel_markKeyForInvalidationAt_shouldRemove_, v5, a2 & 1);

}

void DispatchingFairPlayInvalidationManaging.markAllFairPlayKeysForInvalidation(shouldRemove:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1A92CC2D0;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A90BF160;
  v11[3] = &block_descriptor_10_2;
  v10 = _Block_copy(v11);
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v7, sel_markAllFairPlayKeysForInvalidationWithShouldRemove_completion_, a1 & 1, v10);
  _Block_release(v10);
}

uint64_t sub_1A92CC0B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void *v18;
  id v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = a6;
  v24 = a7;
  v11 = sub_1A93F7D58();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a2 + 16);
  if (result)
  {
    v18 = (void *)result;
    v19 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue);

    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a1;
    aBlock[4] = v23;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = v24;
    v21 = _Block_copy(aBlock);
    sub_1A90858C0(a3);
    v22 = a1;
    sub_1A93F7D88();
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v16, v13, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A92CC2D0(void *a1)
{
  uint64_t *v1;

  return sub_1A92CC0B8(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54EED88, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_41_1);
}

id DispatchingFairPlayInvalidationManaging.removeKey(for:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance), sel_removeKeyFor_, a1);
}

void DispatchingFairPlayInvalidationManaging.removalAllFairPlayKeys(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  v5 = *(void **)(v2 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  v9[4] = sub_1A92CC558;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A90BF160;
  v9[3] = &block_descriptor_17_3;
  v8 = _Block_copy(v9);
  sub_1A90858C0(a1);
  swift_release();
  objc_msgSend(v5, sel_removalAllFairPlayKeysWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1A92CC558(void *a1)
{
  uint64_t *v1;

  return sub_1A92CC0B8(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E54EED38, (uint64_t)sub_1A92CC7B0, (uint64_t)&block_descriptor_35);
}

id DispatchingFairPlayInvalidationManaging.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DispatchingFairPlayInvalidationManaging.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DispatchingFairPlayInvalidationManaging.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FairPlayInvalidationManaging.receive(on:)(void *a1)
{
  uint64_t v1;
  objc_class *v3;
  char *v4;
  id v5;
  objc_super v7;

  v3 = (objc_class *)type metadata accessor for DispatchingFairPlayInvalidationManaging();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = v1;
  *(_QWORD *)&v4[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t method lookup function for DispatchingFairPlayInvalidationManaging()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A92CC788()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92CC7F0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

uint64_t static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  swift_bridgeObjectRetain();
  sub_1A92CCAF8(a4);
  v7 = sub_1A90828B0();
  v8 = MEMORY[0x1E0DEA968];
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A92CCAF8(a3);
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_1A93F8AFC();
    swift_bridgeObjectRelease();
  }
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  v9 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithString_, v10, v8, v7, v7, v7);

  if (v11)
  {
    sub_1A93F7200();

    v12 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    v14 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_1A92CCAF8(double a1)
{
  uint64_t result;

  if (a1 > 9.22337204e18 || a1 < -9.22337204e18)
    return 0;
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a1 < 9.22337204e18)
    return sub_1A93F9060();
LABEL_13:
  __break(1u);
  return result;
}

uint64_t static ArtworkFormatter.formatArtworkUrl(url:for:cropCode:fileExtension:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  sub_1A93F7170();
  static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(a1, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

id ArtworkFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ArtworkFormatter.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for ArtworkFormatter()
{
  return objc_opt_self();
}

id ArtworkFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A92CCFCC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = *(_QWORD *)(a1 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1A929E854(0, v1, 0);
  v2 = v26;
  result = sub_1A93E94F8(a1);
  v6 = result;
  v7 = v25;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 88;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_26;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v6);
    v15 = *(_QWORD *)(v26 + 16);
    v14 = *(_QWORD *)(v26 + 24);
    if (v15 >= v14 >> 1)
    {
      v23 = v9;
      v24 = v5;
      v22 = v10;
      result = sub_1A929E854(v14 > 1, v15 + 1, 1);
      v10 = v22;
      v9 = v23;
      v5 = v24;
      v7 = v25;
    }
    *(_QWORD *)(v26 + 16) = v15 + 1;
    v16 = v26 + 24 * v15;
    *(_QWORD *)(v16 + 32) = v13;
    *(_QWORD *)(v16 + 40) = 0;
    *(_BYTE *)(v16 + 48) = 0;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_27;
    v17 = *(_QWORD *)(v9 + 8 * v12);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_29;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v11 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v19 = v12 + 1;
      v20 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v20)
      {
        v21 = *(_QWORD *)(v9 + 8 * v19);
        if (!v21)
        {
          v19 = v12 + 2;
          if (v12 + 2 >= v20)
            goto LABEL_4;
          v21 = *(_QWORD *)(v9 + 8 * v19);
          if (!v21)
          {
            while (v20 - 3 != v12)
            {
              v21 = *(_QWORD *)(v10 + 8 * v12++);
              if (v21)
              {
                v19 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v11 = __clz(__rbit64(v21)) + (v19 << 6);
      }
    }
LABEL_4:
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t ThinClientEpisodeStateRepository.episodeStateUpdatesPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9178);
  sub_1A92CD230();
  return sub_1A93F7B24();
}

unint64_t sub_1A92CD230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB9180;
  if (!qword_1EEAB9180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB9178);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB9180);
  }
  return result;
}

uint64_t ThinClientEpisodeStateRepository.state<A>(for:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ThinClientEpisodeStateModel();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a3 - 8) + 56))(a5, 1, 1, a3, v16);
  v25 = a1;
  v26 = a5;
  v19 = *(_QWORD *)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 32));
  v20 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_1A9093570(v25), (v22 & 1) != 0))
  {
    sub_1A9188D10(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v15 + 72) * v21, (uint64_t)v13);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v23, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1A905FD54((uint64_t)v13, &qword_1EEAB9258);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v26, 1, 1, a3);
  }
  else
  {
    sub_1A9116174((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    (*(void (**)(char *, uint64_t, uint64_t))(a4 + 48))(v18, a3, a4);
    return sub_1A9064714((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
}

uint64_t type metadata accessor for ThinClientEpisodeStateModel()
{
  uint64_t result;

  result = qword_1ED2AB2C8;
  if (!qword_1ED2AB2C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A92CD4E4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1A9091D1C(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A92CD650(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1A90920C8(&v13, *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t ThinClientEpisodeStateModel.playState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2ACF98);
}

uint64_t ThinClientEpisodeStateModel.bookmarkState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20));
}

uint64_t ThinClientEpisodeStateModel.init(playState:bookmarkState:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_1A9062F08(a1, a3, &qword_1ED2ACF98);
  result = type metadata accessor for ThinClientEpisodeStateModel();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t ThinClientEpisodeStateRepository.__allocating_init(thinClientEpisodeStateNetworking:)(__int128 *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  v3 = sub_1A9115C48(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD860);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 32) = 0;
  v5 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v2 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9178);
  swift_allocObject();
  *(_QWORD *)(v2 + 24) = sub_1A93F798C();
  sub_1A905D4AC(a1, v2 + 32);
  return v2;
}

uint64_t ThinClientEpisodeStateRepository.init(thinClientEpisodeStateNetworking:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = sub_1A9115C48(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD860);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v2 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9178);
  swift_allocObject();
  *(_QWORD *)(v2 + 24) = sub_1A93F798C();
  sub_1A905D4AC(a1, v2 + 32);
  return v2;
}

uint64_t ThinClientEpisodeStateRepository.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t ThinClientEpisodeStateRepository.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ThinClientEpisodeStateRepository.reportEpisodeState(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*((_QWORD *)a1._rawValue + 2))
  {
    v3 = *(_QWORD *)(v1 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 32));
    sub_1A92CDA64((_QWORD *)(v3 + 16), (uint64_t)a1._rawValue, &v5);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 32));
    v4 = v5;
    swift_release();
    v5 = v4;
    sub_1A93F7974();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A92CDA64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t *v76;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t result;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;

  v121 = a1;
  v102 = a3;
  v4 = type metadata accessor for EpisodePlayState();
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  MEMORY[0x1E0C80A78](v4);
  v105 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD890);
  MEMORY[0x1E0C80A78](v109);
  v115 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD898);
  MEMORY[0x1E0C80A78](v117);
  v126 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v123 = (uint64_t)&v99 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v99 - v16;
  v18 = type metadata accessor for ThinClientEpisodeStateModel();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v103 = (uint64_t)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v122 = (uint64_t)&v99 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v99 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD888);
  MEMORY[0x1E0C80A78](v26);
  v28 = (unint64_t *)((char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v29);
  v118 = (uint64_t *)((char *)&v99 - v30);
  v31 = *(_QWORD *)(a2 + 64);
  v106 = a2 + 64;
  v32 = 1 << *(_BYTE *)(a2 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v35 = (unint64_t)(v32 + 63) >> 6;
  v99 = v35 - 1;
  swift_bridgeObjectRetain();
  v36 = 0;
  v108 = v35;
  v100 = v35 - 5;
  v101 = a2 + 104;
  v104 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v113 = v17;
  v114 = a2;
  v112 = v12;
  v120 = v28;
  v116 = v25;
  while (1)
  {
    if (v34)
    {
      v124 = (v34 - 1) & v34;
      v125 = v36;
      v38 = __clz(__rbit64(v34)) | (v36 << 6);
      goto LABEL_9;
    }
    v42 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v42 >= v108)
    {
      v44 = v36;
    }
    else
    {
      v43 = *(_QWORD *)(v106 + 8 * v42);
      if (v43)
        goto LABEL_13;
      v44 = v36 + 1;
      if ((uint64_t)(v36 + 2) < v108)
      {
        v43 = *(_QWORD *)(v106 + 8 * (v36 + 2));
        if (v43)
        {
          v42 = v36 + 2;
          goto LABEL_13;
        }
        v44 = v36 + 2;
        if ((uint64_t)(v36 + 3) < v108)
        {
          v43 = *(_QWORD *)(v106 + 8 * (v36 + 3));
          if (v43)
          {
            v42 = v36 + 3;
LABEL_13:
            v124 = (v43 - 1) & v43;
            v125 = v42;
            v38 = __clz(__rbit64(v43)) + (v42 << 6);
LABEL_9:
            v39 = *(_QWORD *)(v114 + 56);
            *v28 = *(_QWORD *)(*(_QWORD *)(v114 + 48) + 8 * v38);
            v40 = v39 + *(_QWORD *)(v19 + 72) * v38;
            v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD878);
            sub_1A9188D10(v40, (uint64_t)v28 + *(int *)(v41 + 48));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v28, 0, 1, v41);
            goto LABEL_16;
          }
          v42 = v36 + 4;
          v44 = v36 + 3;
          if ((uint64_t)(v36 + 4) < v108)
          {
            v43 = *(_QWORD *)(v106 + 8 * v42);
            if (v43)
              goto LABEL_13;
            while (v100 != v36)
            {
              v43 = *(_QWORD *)(v101 + 8 * v36++);
              if (v43)
              {
                v42 = v36 + 4;
                goto LABEL_13;
              }
            }
            v44 = v99;
          }
        }
      }
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD878);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v28, 1, 1, v45);
    v124 = 0;
    v125 = v44;
LABEL_16:
    v46 = v118;
    sub_1A9062F08((uint64_t)v28, (uint64_t)v118, &qword_1EEABD888);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD878);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47) == 1)
    {
      result = swift_release();
      *v102 = v104;
      return result;
    }
    v48 = *v46;
    sub_1A9116174((uint64_t)v46 + *(int *)(v47 + 48), (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    v49 = *v121;
    v50 = *(_QWORD *)(*v121 + 16);
    v119 = v48;
    if (v50 && (v51 = sub_1A9093570(v48), (v52 & 1) != 0))
    {
      sub_1A9188D10(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v19 + 72) * v51, (uint64_t)v17);
      v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v53(v17, 0, 1, v18);
    }
    else
    {
      v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v53(v17, 1, 1, v18);
    }
    v54 = v19;
    v55 = (uint64_t)v17;
    v56 = v123;
    sub_1A9188D10((uint64_t)v25, v123);
    v53((char *)v56, 0, 1, v18);
    v57 = v126;
    v58 = v126 + *(int *)(v117 + 48);
    sub_1A9062170(v55, v126, &qword_1EEAB9258);
    sub_1A9062170(v56, v58, &qword_1EEAB9258);
    v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (v59(v57, 1, v18) != 1)
    {
      sub_1A9062170(v126, (uint64_t)v12, &qword_1EEAB9258);
      if (v59(v58, 1, v18) != 1)
      {
        v60 = v122;
        sub_1A9116174(v58, v122, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
        v61 = v115;
        v62 = v115 + *(int *)(v109 + 48);
        sub_1A9062170((uint64_t)v12, v115, &qword_1ED2ACF98);
        sub_1A9062170(v60, v62, &qword_1ED2ACF98);
        v63 = v111;
        v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
        v19 = v54;
        if (v64(v61, 1, v111) == 1)
        {
          v65 = v64(v62, 1, v63);
          v12 = v112;
          v17 = v113;
          v25 = v116;
          if (v65 == 1)
          {
            sub_1A905FD54(v115, &qword_1ED2ACF98);
            v28 = v120;
LABEL_28:
            v73 = *(int *)(v18 + 20);
            v74 = v12[v73];
            v75 = *(unsigned __int8 *)(v122 + v73);
            if (v74 == 2)
            {
              if (v75 == 2)
                goto LABEL_33;
            }
            else if (v75 != 2 && ((v75 ^ v74) & 1) == 0)
            {
LABEL_33:
              sub_1A9064714(v122, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
              sub_1A905FD54(v123, &qword_1EEAB9258);
              sub_1A905FD54((uint64_t)v17, &qword_1EEAB9258);
              sub_1A9064714((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
LABEL_5:
              sub_1A905FD54(v126, &qword_1EEAB9258);
              sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
              goto LABEL_6;
            }
LABEL_44:
            sub_1A9064714(v122, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
            v76 = &qword_1EEAB9258;
            v77 = v104;
LABEL_45:
            sub_1A905FD54(v123, &qword_1EEAB9258);
            sub_1A905FD54((uint64_t)v17, &qword_1EEAB9258);
            sub_1A9064714((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
            goto LABEL_46;
          }
        }
        else
        {
          v66 = v115;
          v67 = v107;
          sub_1A9062170(v115, v107, &qword_1ED2ACF98);
          v68 = v64(v62, 1, v63);
          v25 = v116;
          if (v68 != 1)
          {
            v69 = v62;
            v70 = v105;
            sub_1A9116174(v69, v105, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
            _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(v67, v70);
            v72 = v71;
            sub_1A9064714(v70, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
            sub_1A9064714(v67, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
            sub_1A905FD54(v66, &qword_1ED2ACF98);
            v12 = v112;
            v17 = v113;
            v28 = v120;
            if ((v72 & 1) != 0)
              goto LABEL_28;
            goto LABEL_44;
          }
          sub_1A9064714(v67, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
          v12 = v112;
          v17 = v113;
        }
        sub_1A905FD54(v115, &qword_1EEABD890);
        goto LABEL_44;
      }
      v76 = &qword_1EEABD898;
      v17 = v113;
      v19 = v54;
      v25 = v116;
      v77 = v104;
      goto LABEL_45;
    }
    sub_1A905FD54(v56, &qword_1EEAB9258);
    sub_1A905FD54(v55, &qword_1EEAB9258);
    v37 = v59(v58, 1, v18);
    v17 = (char *)v55;
    v19 = v54;
    v25 = v116;
    v28 = v120;
    if (v37 == 1)
      goto LABEL_5;
    v76 = &qword_1EEABD898;
    v77 = v104;
LABEL_46:
    sub_1A905FD54(v126, v76);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v77 = sub_1A9117A04(0, v77[2] + 1, 1, v77);
    v79 = v77[2];
    v78 = v77[3];
    if (v79 >= v78 >> 1)
      v77 = sub_1A9117A04((_QWORD *)(v78 > 1), v79 + 1, 1, v77);
    v77[2] = v79 + 1;
    v104 = v77;
    v80 = &v77[3 * v79];
    v81 = v119;
    v80[4] = v119;
    v80[5] = 0;
    *((_BYTE *)v80 + 48) = 0;
    sub_1A9188D10((uint64_t)v25, v103);
    v82 = v121;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v127 = (_QWORD *)*v82;
    v84 = v127;
    *v82 = 0x8000000000000000;
    v85 = v81;
    v87 = sub_1A9093570(v81);
    v88 = v84[2];
    v89 = (v86 & 1) == 0;
    v90 = v88 + v89;
    if (__OFADD__(v88, v89))
      goto LABEL_69;
    v91 = v86;
    if (v84[3] >= v90)
    {
      v17 = v113;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A930A888();
    }
    else
    {
      sub_1A9304EC0(v90, isUniquelyReferenced_nonNull_native);
      v92 = sub_1A9093570(v85);
      v17 = v113;
      if ((v91 & 1) != (v93 & 1))
        goto LABEL_71;
      v87 = v92;
    }
    v94 = v127;
    if ((v91 & 1) != 0)
    {
      sub_1A92D2620(v103, v127[7] + *(_QWORD *)(v19 + 72) * v87);
    }
    else
    {
      v127[(v87 >> 6) + 8] |= 1 << v87;
      *(_QWORD *)(v94[6] + 8 * v87) = v85;
      sub_1A9116174(v103, v94[7] + *(_QWORD *)(v19 + 72) * v87, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      v95 = v94[2];
      v96 = __OFADD__(v95, 1);
      v97 = v95 + 1;
      if (v96)
        goto LABEL_70;
      v94[2] = v97;
    }
    *v121 = v94;
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    v12 = v112;
    v28 = v120;
LABEL_6:
    v34 = v124;
    v36 = v125;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t ThinClientEpisodeStateRepository.updateLocalBookmarkState(_:to:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 32));
  sub_1A92CE670((_QWORD *)(v5 + 16), a1, a2, (char *)&v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 32));
  v6 = v9;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 48) = 0;
  v9 = v7;
  sub_1A93F7974();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A92CE670@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  char v34;
  uint64_t v35;
  int v36;
  _QWORD *v37;
  char *v38;

  v36 = a3;
  v38 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v6);
  v35 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v35 - v18;
  v37 = a1;
  v20 = *a1;
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = a2;
    v22 = sub_1A9093570(a2);
    if ((v23 & 1) != 0)
    {
      v24 = v22;
      v25 = *(_QWORD *)(v20 + 56);
      v26 = type metadata accessor for ThinClientEpisodeStateModel();
      v27 = *(_QWORD *)(v26 - 8);
      sub_1A9188D10(v25 + *(_QWORD *)(v27 + 72) * v24, (uint64_t)v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v19, 0, 1, v26);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = a2;
  }
  v26 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v19, 1, 1, v26);
LABEL_6:
  sub_1A9062170((uint64_t)v19, (uint64_t)v13, &qword_1EEAB9258);
  type metadata accessor for ThinClientEpisodeStateModel();
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v13, 1, v26) == 1)
  {
    sub_1A905FD54((uint64_t)v13, &qword_1EEAB9258);
    v30 = type metadata accessor for EpisodePlayState();
    v31 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v35, 1, 1, v30);
  }
  else
  {
    v31 = v35;
    sub_1A9062170((uint64_t)v13, v35, &qword_1ED2ACF98);
    sub_1A9064714((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
  v32 = v36;
  sub_1A9062F08(v31, (uint64_t)v16, &qword_1ED2ACF98);
  v16[*(int *)(v26 + 20)] = v32;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v16, 0, 1, v26);
  sub_1A927CB88((uint64_t)v16, v21);
  sub_1A9062F08((uint64_t)v19, (uint64_t)v10, &qword_1EEAB9258);
  if (v29(v10, 1, v26) == 1)
  {
    result = sub_1A905FD54((uint64_t)v10, &qword_1EEAB9258);
    v34 = 2;
  }
  else
  {
    v34 = v10[*(int *)(v26 + 20)];
    result = sub_1A9064714((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
  *v38 = v34;
  return result;
}

uint64_t ThinClientEpisodeStateRepository.updateLocalBookmarkStates(_:to:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;

  swift_retain();
  sub_1A92D164C(a1, v2, a2);
  v6 = v5;
  swift_release();
  v7 = (_QWORD *)sub_1A9115DB4(MEMORY[0x1E0DEE9D8]);
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  v9 = (_BYTE *)(v6 + 40);
  while (1)
  {
    v10 = *((_QWORD *)v9 - 1);
    v11 = *v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1A9093570(v10);
    v15 = v7[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v7[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A930AAB4();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A9305200(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1A9093570(v10);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_20;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        *(_BYTE *)(v7[7] + v14) = v11;
        goto LABEL_4;
      }
    }
    v7[(v14 >> 6) + 8] |= 1 << v14;
    *(_QWORD *)(v7[6] + 8 * v14) = v10;
    *(_BYTE *)(v7[7] + v14) = v11;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v7[2] = v23;
LABEL_4:
    v9 += 16;
    swift_bridgeObjectRelease();
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

Swift::Void __swiftcall ThinClientEpisodeStateRepository.restoreLocalBookmarkStates(to:)(Swift::OpaquePointer to)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v12;
  int64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v18;

  v14 = (char *)to._rawValue + 64;
  v1 = 1 << *((_BYTE *)to._rawValue + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *((_QWORD *)to._rawValue + 8);
  v15 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (1)
  {
    if (v3)
    {
      v5 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v6 = v5 | (v4 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v4 >= v15)
      goto LABEL_22;
    v12 = *(_QWORD *)&v14[8 * v4];
    if (!v12)
      break;
LABEL_17:
    v3 = (v12 - 1) & v12;
    v6 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_5:
    v7 = *(_QWORD *)(*((_QWORD *)to._rawValue + 6) + 8 * v6);
    v8 = *(_QWORD *)(v16 + 16);
    v9 = *(unsigned __int8 *)(*((_QWORD *)to._rawValue + 7) + v6);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 32));
    sub_1A92CE670((_QWORD *)(v8 + 16), v7, v9, (char *)&v18);
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 32));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v10 + 32) = v7;
    *(_QWORD *)(v10 + 40) = 0;
    *(_BYTE *)(v10 + 48) = 0;
    v18 = v10;
    sub_1A93F7974();
    swift_bridgeObjectRelease();
  }
  v13 = v4 + 1;
  if (v4 + 1 >= v15)
    goto LABEL_22;
  v12 = *(_QWORD *)&v14[8 * v13];
  if (v12)
    goto LABEL_16;
  v13 = v4 + 2;
  if (v4 + 2 >= v15)
    goto LABEL_22;
  v12 = *(_QWORD *)&v14[8 * v13];
  if (v12)
    goto LABEL_16;
  v13 = v4 + 3;
  if (v4 + 3 >= v15)
  {
LABEL_22:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)&v14[8 * v13];
  if (v12)
  {
LABEL_16:
    v4 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v15)
      goto LABEL_22;
    v12 = *(_QWORD *)&v14[8 * v4];
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

uint64_t ThinClientEpisodeStateRepository.updateLocalPlayState(_:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 32));
  sub_1A92CEE0C((uint64_t *)(v7 + 16), a1, a2, a3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 32));
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = 0;
  *(_BYTE *)(v8 + 48) = 0;
  sub_1A93F7974();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92CEE0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v38 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v10);
  v37[0] = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v37 - v19;
  v37[1] = a1;
  v21 = *a1;
  v22 = *(_QWORD *)(*a1 + 16);
  v39 = a2;
  if (v22 && (v23 = sub_1A9093570(a2), (v24 & 1) != 0))
  {
    v25 = v23;
    v26 = *(_QWORD *)(v21 + 56);
    v27 = type metadata accessor for ThinClientEpisodeStateModel();
    v28 = *(_QWORD *)(v27 - 8);
    sub_1A9188D10(v26 + *(_QWORD *)(v28 + 72) * v25, (uint64_t)v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v20, 0, 1, v27);
  }
  else
  {
    v27 = type metadata accessor for ThinClientEpisodeStateModel();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v20, 1, 1, v27);
  }
  v29 = a3;
  v30 = (uint64_t)v9;
  sub_1A9062170(v29, (uint64_t)v9, &qword_1ED2ACF98);
  sub_1A9062170((uint64_t)v20, (uint64_t)v14, &qword_1EEAB9258);
  type metadata accessor for ThinClientEpisodeStateModel();
  v31 = *(_QWORD *)(v27 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v32(v14, 1, v27) == 1)
  {
    sub_1A905FD54((uint64_t)v14, &qword_1EEAB9258);
    v33 = 2;
  }
  else
  {
    v33 = v14[*(int *)(v27 + 20)];
    sub_1A9064714((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
  v34 = v37[0];
  sub_1A9062F08(v30, (uint64_t)v17, &qword_1ED2ACF98);
  v17[*(int *)(v27 + 20)] = v33;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v27);
  sub_1A927CB88((uint64_t)v17, v39);
  sub_1A9062F08((uint64_t)v20, v34, &qword_1EEAB9258);
  if (v32((char *)v34, 1, v27) == 1)
  {
    sub_1A905FD54(v34, &qword_1EEAB9258);
    v35 = type metadata accessor for EpisodePlayState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v38, 1, 1, v35);
  }
  else
  {
    sub_1A9062170(v34, v38, &qword_1ED2ACF98);
    return sub_1A9064714(v34, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
}

uint64_t ThinClientEpisodeStateRepository.updateLocalPlayStates(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t result;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7818);
  v8 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (_QWORD *)((char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v40 - v11);
  v46 = v2;
  v47 = a2;
  v13 = sub_1A9154A60((void (*)(uint64_t *))sub_1A92D17E8, (uint64_t)v45, a1);
  v14 = (_QWORD *)sub_1A9115E88(MEMORY[0x1E0DEE9D8]);
  v15 = *(_QWORD *)(v13 + 16);
  if (!v15)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  v16 = v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  v40[1] = v13;
  v41 = v17;
  swift_bridgeObjectRetain();
  v18 = &qword_1EEAB7818;
  while (1)
  {
    v20 = v18;
    sub_1A9062170(v16, (uint64_t)v12, v18);
    v21 = *v12;
    v22 = v43;
    v23 = *(int *)(v44 + 48);
    v24 = (uint64_t)v43 + v23;
    *v43 = *v12;
    sub_1A9062170((uint64_t)v12 + v23, (uint64_t)v22 + v23, &qword_1ED2ACF98);
    v25 = (uint64_t)v7;
    sub_1A9062F08(v24, (uint64_t)v7, &qword_1ED2ACF98);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = v14;
    v28 = sub_1A9093570(v21);
    v29 = v14[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v14[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v14 = v48;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A930AC40();
        v14 = v48;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A93054C4(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1A9093570(v21);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v14 = v48;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v19 = v14[7] + *(_QWORD *)(v42 + 72) * v28;
        v7 = (char *)v25;
        sub_1A92D1804(v25, v19);
        goto LABEL_4;
      }
    }
    v14[(v28 >> 6) + 8] |= 1 << v28;
    *(_QWORD *)(v14[6] + 8 * v28) = v21;
    v35 = v14[7] + *(_QWORD *)(v42 + 72) * v28;
    v7 = (char *)v25;
    sub_1A9062F08(v25, v35, &qword_1ED2ACF98);
    v36 = v14[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v14[2] = v38;
LABEL_4:
    swift_bridgeObjectRelease();
    v18 = v20;
    sub_1A905FD54((uint64_t)v12, v20);
    v16 += v41;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

void sub_1A92CF3FC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *(_QWORD *)(a2 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 32));
  sub_1A92CEE0C((uint64_t *)(v13 + 16), v12, a3, (uint64_t)v11);
  if (v4)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 32));
    __break(1u);
  }
  else
  {
    v14 = (uint64_t)a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7818) + 48);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 32));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1A9405520;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = 0;
    *(_BYTE *)(v15 + 48) = 0;
    v16[1] = v15;
    sub_1A93F7974();
    swift_bridgeObjectRelease();
    sub_1A9062F08((uint64_t)v11, v14, &qword_1ED2ACF98);
    *a4 = v12;
  }
}

Swift::Void __swiftcall ThinClientEpisodeStateRepository.restoreLocalPlayStates(to:)(Swift::OpaquePointer to)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  int64_t v38;
  uint64_t v39;
  _QWORD *rawValue;
  __int128 v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v39 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v44 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)&v35 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD868);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t *)((char *)&v35 - v10);
  v11 = *((_QWORD *)to._rawValue + 8);
  v37 = (char *)to._rawValue + 64;
  v12 = 1 << *((_BYTE *)to._rawValue + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v36 = v38 - 1;
  rawValue = to._rawValue;
  swift_bridgeObjectRetain();
  v15 = 0;
  v41 = xmmword_1A9405520;
  v42 = v8;
  v16 = (uint64_t)v44;
  if (!v14)
    goto LABEL_6;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v18 = (v14 - 1) & v14;
  v19 = v17 | (v15 << 6);
  v20 = v46;
LABEL_5:
  v21 = rawValue[7];
  *v8 = *(_QWORD *)(rawValue[6] + 8 * v19);
  v22 = v21 + *(_QWORD *)(v39 + 72) * v19;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD870);
  sub_1A9062170(v22, (uint64_t)v8 + *(int *)(v23 + 48), &qword_1ED2ACF98);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
  while (1)
  {
    sub_1A9062F08((uint64_t)v8, (uint64_t)v20, &qword_1EEABD868);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD870);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v20, 1, v27) == 1)
    {
      swift_release();
      return;
    }
    v28 = *v20;
    v29 = (uint64_t)v20 + *(int *)(v27 + 48);
    v48 = v15;
    v30 = v43;
    sub_1A9062F08(v29, v43, &qword_1ED2ACF98);
    v47 = v18;
    v31 = *(_QWORD *)(v45 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v31 + 32));
    sub_1A92CEE0C((uint64_t *)(v31 + 16), v28, v30, v16);
    os_unfair_lock_unlock((os_unfair_lock_t)(v31 + 32));
    swift_release();
    v8 = v42;
    v14 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v41;
    *(_QWORD *)(v32 + 32) = v28;
    *(_QWORD *)(v32 + 40) = 0;
    *(_BYTE *)(v32 + 48) = 0;
    v49 = v32;
    sub_1A93F7974();
    swift_bridgeObjectRelease();
    sub_1A905FD54(v16, &qword_1ED2ACF98);
    v33 = v30;
    v15 = v48;
    sub_1A905FD54(v33, &qword_1ED2ACF98);
    if (v14)
      goto LABEL_4;
LABEL_6:
    v24 = v15 + 1;
    v20 = v46;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 < v38)
    {
      v25 = *(_QWORD *)&v37[8 * v24];
      if (v25)
        goto LABEL_9;
      v15 += 2;
      if (v24 + 1 >= v38)
      {
        v15 = v24;
        goto LABEL_14;
      }
      v25 = *(_QWORD *)&v37[8 * v15];
      if (v25)
      {
        ++v24;
LABEL_9:
        v18 = (v25 - 1) & v25;
        v19 = __clz(__rbit64(v25)) + (v24 << 6);
        v15 = v24;
        goto LABEL_5;
      }
      if (v24 + 2 < v38)
        break;
    }
LABEL_14:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD870);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
    v18 = 0;
  }
  v25 = *(_QWORD *)&v37[8 * v24 + 16];
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  v34 = v24 + 3;
  if (v24 + 3 >= v38)
  {
    v15 = v24 + 2;
    goto LABEL_14;
  }
  v25 = *(_QWORD *)&v37[8 * v34];
  if (v25)
  {
    v24 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    v24 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v24 >= v38)
    {
      v15 = v36;
      goto LABEL_14;
    }
    v25 = *(_QWORD *)&v37[8 * v24];
    ++v34;
    if (v25)
      goto LABEL_9;
  }
LABEL_32:
  __break(1u);
}

void ThinClientEpisodeStateRepository.requestEpisodeStateIfNeeded(for:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[4];

  v2 = v1;
  v4 = sub_1A93F7698();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v8 = (os_unfair_lock_s *)v2[2];
    swift_retain();
    os_unfair_lock_lock(v8 + 8);
    sub_1A92CFCE8((uint64_t)&v8[4], a1, v28);
    os_unfair_lock_unlock(v8 + 8);
    v9 = v28[0];
    swift_release();
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    swift_bridgeObjectRetain_n();
    v11 = sub_1A93F7674();
    v12 = sub_1A93F87B4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v27 = v24;
      v25 = v2;
      *(_DWORD *)v13 = 136315138;
      v23[1] = v13 + 4;
      sub_1A915A6B4();
      swift_bridgeObjectRetain();
      v14 = sub_1A93F8604();
      v16 = v15;
      swift_bridgeObjectRelease();
      v26 = sub_1A906436C(v14, v16, &v27);
      v2 = v25;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v11, v12, "Requesting state for missing adamIDs %s", v13, 0xCu);
      v17 = v24;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v17, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (*(_QWORD *)(v9 + 16))
    {
      v18 = v2[7];
      v19 = v2[8];
      __swift_project_boxed_opaque_existential_1(v2 + 4, v18);
      v20 = swift_allocObject();
      swift_weakInit();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v20;
      *(_QWORD *)(v21 + 24) = v9;
      v22 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v19 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      v22(v9, sub_1A92D189C, v21, v18, v19);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1A92CFCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRetain();
  v6 = sub_1A92D0A18(a2, a1);
  v7 = swift_retain();
  result = sub_1A92CD650(v7);
  *a3 = v6;
  return result;
}

uint64_t sub_1A92CFD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  char v5;
  uint64_t result;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD **)a1;
  v5 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = *(os_unfair_lock_s **)(result + 16);
    swift_retain();
    os_unfair_lock_lock(v7 + 8);
    sub_1A92CFE24((uint64_t)&v7[4], a3, v4, v5, &v9);
    os_unfair_lock_unlock(v7 + 8);
    v8 = v9;
    swift_release();
    v9 = v8;
    sub_1A93F7974();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1A92CFE24(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a5;
  v9 = sub_1A93F7698();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v54 - v17;
  v58 = a1;
  sub_1A92711F0(a2);
  if ((a4 & 1) != 0)
  {
    sub_1A92D2604(a3);
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v18, v28, v9);
    sub_1A92D25F8(a3, 1);
    swift_bridgeObjectRetain();
    sub_1A92D25F8(a3, 1);
    swift_bridgeObjectRetain();
    v29 = sub_1A93F7674();
    v30 = sub_1A93F879C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v55 = (_QWORD *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v62 = v58;
      *(_DWORD *)v31 = 136315394;
      sub_1A915A6B4();
      swift_bridgeObjectRetain();
      v32 = sub_1A93F8604();
      v56 = v10;
      v57 = v9;
      v33 = v32;
      v35 = v34;
      swift_bridgeObjectRelease();
      v61 = sub_1A906436C(v33, v35, &v62);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2112;
      sub_1A91970F0();
      swift_allocError();
      *v36 = a3;
      sub_1A92D2604(a3);
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v61 = v37;
      sub_1A93F8AA8();
      v38 = v55;
      *v55 = v37;
      sub_1A92D2614(a3, 1);
      sub_1A92D2614(a3, 1);
      _os_log_impl(&dword_1A904E000, v29, v30, "Error fetching state for adamIDs %s: %@", (uint8_t *)v31, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v38, -1, -1);
      v39 = v58;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v39, -1, -1);
      MEMORY[0x1AF41411C](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v57);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1A92D2614(a3, 1);
      sub_1A92D2614(a3, 1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    }
    sub_1A92D2614(a3, 1);
    v40 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  if (!a3[2])
  {
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v41 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v41, v9);
    swift_bridgeObjectRetain_n();
    v42 = sub_1A93F7674();
    v43 = sub_1A93F879C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v57 = v9;
      v45 = (uint8_t *)v44;
      v46 = swift_slowAlloc();
      v62 = v46;
      v56 = v10;
      *(_DWORD *)v45 = 136315138;
      v58 = (uint64_t)(v45 + 4);
      sub_1A915A6B4();
      swift_bridgeObjectRetain();
      v47 = sub_1A93F8604();
      v49 = v48;
      swift_bridgeObjectRelease();
      v61 = sub_1A906436C(v47, v49, &v62);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v42, v43, "No state found for adamIDs %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v46, -1, -1);
      MEMORY[0x1AF41411C](v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v40 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v19, v9);
  sub_1A92D25F8(a3, 0);
  swift_bridgeObjectRetain();
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v57 = v9;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v62 = v24;
    *(_DWORD *)v23 = 136315138;
    v55 = v23 + 4;
    v56 = v10;
    type metadata accessor for ThinClientEpisodeStateModel();
    sub_1A915A6B4();
    swift_bridgeObjectRetain();
    v25 = sub_1A93F7F08();
    v27 = v26;
    sub_1A92D2614(a3, 0);
    v61 = sub_1A906436C(v25, v27, &v62);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A92D2614(a3, 0);
    sub_1A92D2614(a3, 0);
    _os_log_impl(&dword_1A904E000, v20, v21, "Consolidating new state into local cache: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    MEMORY[0x1AF41411C](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v57);
  }
  else
  {
    sub_1A92D2614(a3, 0);
    sub_1A92D2614(a3, 0);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  v51 = (uint64_t *)v58;
  v50 = v59;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v62 = *v51;
  *v51 = 0x8000000000000000;
  sub_1A92D06E8((uint64_t)a3, (uint64_t)sub_1A92D0688, 0, isUniquelyReferenced_nonNull_native, &v62);
  if (!v50)
  {
    *v51 = v62;
    swift_bridgeObjectRelease();
    v53 = swift_bridgeObjectRetain();
    v40 = sub_1A92CCFCC(v53);
    sub_1A92D2614(a3, 0);
LABEL_22:
    *v60 = v40;
    return;
  }
  *v51 = v62;
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1A92D0688@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD878) + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
  v6 = *a1;
  result = sub_1A9188D10(v4, (uint64_t)a2 + *(int *)(v5 + 48));
  *a2 = v6;
  return result;
}

uint64_t sub_1A92D06E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = type metadata accessor for ThinClientEpisodeStateModel();
  v49 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v41 = (uint64_t)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v40 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD880);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = -1 << *(_BYTE *)(a1 + 32);
  v19 = ~v18;
  v20 = *(_QWORD *)(a1 + 64);
  v21 = -v18;
  v42 = a1;
  v43 = a1 + 64;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v44 = v19;
  v45 = 0;
  v46 = v22 & v20;
  v47 = a2;
  v48 = a3;
  v40[2] = a1;
  swift_bridgeObjectRetain();
  v40[1] = a3;
  swift_retain();
  sub_1A92D0FC0((uint64_t)v17);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A9120240();
    return swift_release();
  }
  while (1)
  {
    v26 = *v17;
    sub_1A9116174((uint64_t)v17 + *(int *)(v23 + 48), (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    v27 = *a5;
    v29 = sub_1A9093570(v26);
    v30 = *(_QWORD *)(v27 + 16);
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (*(_QWORD *)(v27 + 24) >= v32)
    {
      if ((a4 & 1) != 0)
      {
        if ((v28 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1A930A888();
        if ((v33 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1A9304EC0(v32, a4 & 1);
      v34 = sub_1A9093570(v26);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_22;
      v29 = v34;
      if ((v33 & 1) != 0)
      {
LABEL_7:
        v25 = v41;
        sub_1A9188D10((uint64_t)v14, v41);
        sub_1A9064714((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
        sub_1A92D2620(v25, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v49 + 72) * v29);
        goto LABEL_8;
      }
    }
    v36 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    *(_QWORD *)(v36[6] + 8 * v29) = v26;
    sub_1A9116174((uint64_t)v14, v36[7] + *(_QWORD *)(v49 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    v37 = v36[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_21;
    v36[2] = v39;
LABEL_8:
    sub_1A92D0FC0((uint64_t)v17);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A92D0A18(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1A92D0B88((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = sub_1A92D0B88((uint64_t)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x1AF41411C](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1A92D0B88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v6 = 0;
  v7 = 0;
  v24 = (unint64_t *)result;
  v25 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v26 = (unint64_t)(v8 + 63) >> 6;
LABEL_6:
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v7 << 6);
LABEL_22:
    v17 = *(_QWORD *)(a4 + 8);
    if (*(_QWORD *)(v17 + 16)
      && (v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v13),
          sub_1A93F92DC(),
          sub_1A93F930C(),
          result = sub_1A93F9324(),
          v19 = -1 << *(_BYTE *)(v17 + 32),
          v20 = result & ~v19,
          ((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0))
    {
      v21 = *(_QWORD *)(v17 + 48);
      if (*(_QWORD *)(v21 + 8 * v20) != v18)
      {
        v22 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v22;
          if (((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            goto LABEL_5;
          if (*(_QWORD *)(v21 + 8 * v20) == v18)
            goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_5:
      *(unint64_t *)((char *)v24 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v6++, 1))
        goto LABEL_31;
    }
  }
  v14 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v14 >= v26)
      goto LABEL_29;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v26)
        goto LABEL_29;
      v15 = *(_QWORD *)(v25 + 8 * v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v26)
          goto LABEL_29;
        v15 = *(_QWORD *)(v25 + 8 * v7);
        if (!v15)
        {
          v16 = v14 + 3;
          if (v16 >= v26)
          {
LABEL_29:
            swift_retain();
            return sub_1A91F27BC(v24, a2, v6, a3);
          }
          v15 = *(_QWORD *)(v25 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              v7 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_32;
              if (v7 >= v26)
                goto LABEL_29;
              v15 = *(_QWORD *)(v25 + 8 * v7);
              ++v16;
              if (v15)
                goto LABEL_21;
            }
          }
          v7 = v16;
        }
      }
    }
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A92D0DDC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_1A906443C(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_1A9062F08((uint64_t)&v23, (uint64_t)v22, &qword_1EEABD8A0);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1A905FD54((uint64_t)v21, &qword_1EEAB94F0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

void sub_1A92D0FC0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v41 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD878);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD888);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char **)((char *)&v36 - v10);
  v13 = *v1;
  v12 = v1[1];
  v15 = v1[2];
  v14 = v1[3];
  v16 = v1[4];
  v36 = v5;
  if (v16)
  {
    v38 = v15;
    v39 = v12;
    v17 = v2;
    v37 = v8;
    v18 = v3;
    v19 = (v16 - 1) & v16;
    v40 = v14;
    v20 = __clz(__rbit64(v16)) | (v14 << 6);
LABEL_3:
    v21 = *(_QWORD *)(v13 + 56);
    v22 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v20);
    v23 = v21 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ThinClientEpisodeStateModel() - 8) + 72) * v20;
    v2 = v17;
    sub_1A9188D10(v23, (uint64_t)v11 + *(int *)(v17 + 48));
    v24 = 0;
    *v11 = v22;
    v3 = v18;
    v8 = v37;
    v15 = v38;
    v12 = v39;
    goto LABEL_4;
  }
  v31 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  v32 = (unint64_t)(v15 + 64) >> 6;
  if (v31 >= v32)
  {
    v40 = v14;
    v19 = 0;
    v24 = 1;
    goto LABEL_4;
  }
  v33 = *(_QWORD *)(v12 + 8 * v31);
  if (v33)
  {
LABEL_11:
    v38 = v15;
    v39 = v12;
    v17 = v2;
    v37 = v8;
    v18 = v3;
    v19 = (v33 - 1) & v33;
    v20 = __clz(__rbit64(v33)) + (v31 << 6);
    v40 = v31;
    goto LABEL_3;
  }
  v34 = v14 + 2;
  if (v14 + 2 >= v32)
    goto LABEL_27;
  v33 = *(_QWORD *)(v12 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v31 = v34;
    goto LABEL_11;
  }
  if (v14 + 3 >= v32)
    goto LABEL_28;
  v33 = *(_QWORD *)(v12 + 8 * (v14 + 3));
  if (v33)
  {
    v31 = v14 + 3;
    goto LABEL_11;
  }
  v34 = v14 + 4;
  if (v14 + 4 < v32)
  {
    v33 = *(_QWORD *)(v12 + 8 * v34);
    if (v33)
      goto LABEL_15;
    v31 = v14 + 5;
    if (v14 + 5 < v32)
    {
      v33 = *(_QWORD *)(v12 + 8 * v31);
      if (v33)
        goto LABEL_11;
      v31 = v32 - 1;
      v35 = v14 + 6;
      while (v32 != v35)
      {
        v33 = *(_QWORD *)(v12 + 8 * v35++);
        if (v33)
        {
          v31 = v35 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v19 = 0;
      v24 = 1;
      v40 = v31;
      goto LABEL_4;
    }
LABEL_28:
    v19 = 0;
    v24 = 1;
    v40 = v34;
    goto LABEL_4;
  }
  v19 = 0;
  v24 = 1;
  v40 = v14 + 3;
LABEL_4:
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, v24, 1, v2);
  *v1 = v13;
  v1[1] = v12;
  v25 = v40;
  v1[2] = v15;
  v1[3] = v25;
  v1[4] = v19;
  v26 = (void (*)(uint64_t))v1[5];
  sub_1A9062F08((uint64_t)v11, (uint64_t)v8, &qword_1EEABD888);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v41, 1, 1, v27);
  }
  else
  {
    v28 = (uint64_t)v36;
    sub_1A9062F08((uint64_t)v8, (uint64_t)v36, &qword_1EEABD878);
    v29 = v41;
    v26(v28);
    sub_1A905FD54(v28, &qword_1EEABD878);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7830);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
}

uint64_t sub_1A92D1300@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s18PodcastsFoundation27ThinClientEpisodeStateModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v4 = type metadata accessor for EpisodePlayState();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD890);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - v17;
  v29 = a1;
  sub_1A9062170(a1, (uint64_t)&v28 - v17, &qword_1ED2ACF98);
  v30 = a2;
  sub_1A9062170(a2, (uint64_t)v15, &qword_1ED2ACF98);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1A9062170((uint64_t)v18, (uint64_t)v9, &qword_1ED2ACF98);
  sub_1A9062170((uint64_t)v15, v19, &qword_1ED2ACF98);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_1A905FD54((uint64_t)v15, &qword_1ED2ACF98);
    sub_1A905FD54((uint64_t)v18, &qword_1ED2ACF98);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1A905FD54((uint64_t)v9, &qword_1ED2ACF98);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v21 = (uint64_t)v31;
  sub_1A9062170((uint64_t)v9, (uint64_t)v12, &qword_1ED2ACF98);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1A905FD54((uint64_t)v15, &qword_1ED2ACF98);
    sub_1A905FD54((uint64_t)v18, &qword_1ED2ACF98);
    sub_1A9064714((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
LABEL_6:
    sub_1A905FD54((uint64_t)v9, &qword_1EEABD890);
    return 0;
  }
  sub_1A9116174(v19, v21, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  static EpisodePlayState.== infix(_:_:)((uint64_t)v12, v21);
  v23 = v22;
  sub_1A9064714(v21, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  sub_1A905FD54((uint64_t)v15, &qword_1ED2ACF98);
  sub_1A905FD54((uint64_t)v18, &qword_1ED2ACF98);
  sub_1A9064714((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
  sub_1A905FD54((uint64_t)v9, &qword_1ED2ACF98);
  if ((v23 & 1) != 0)
  {
LABEL_8:
    v24 = *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20);
    v25 = *(unsigned __int8 *)(v29 + v24);
    v26 = *(unsigned __int8 *)(v30 + v24);
    if (v25 == 2)
    {
      if (v26 != 2)
        return 0;
    }
    else if (v26 == 2 || ((v26 ^ v25) & 1) != 0)
    {
      return 0;
    }
    return 1;
  }
  return 0;
}

void sub_1A92D164C(uint64_t a1, uint64_t a2, int a3)
{
  int64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[12];
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1A929E80C(0, v3, 0);
    v6 = v20;
    v7 = (uint64_t *)(a1 + 32);
    v16 = a2;
    while (1)
    {
      v9 = *v7++;
      v8 = v9;
      v10 = *(_QWORD *)(a2 + 16);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 32));
      sub_1A92CE670((_QWORD *)(v10 + 16), v9, a3, (char *)&v19);
      v11 = (os_unfair_lock_s *)(v10 + 32);
      if (*(_QWORD *)&v18[4])
        break;
      os_unfair_lock_unlock(v11);
      *(_QWORD *)v18 = v19;
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1A9405520;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = 0;
      *(_BYTE *)(v12 + 48) = 0;
      v19 = v12;
      sub_1A93F7974();
      swift_bridgeObjectRelease();
      v20 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A929E80C(v13 > 1, v14 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v8;
      *(_BYTE *)(v15 + 40) = v18[0];
      --v3;
      a2 = v16;
      if (!v3)
        return;
    }
    os_unfair_lock_unlock(v11);
    __break(1u);
  }
}

void sub_1A92D17E8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1A92CF3FC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A92D1804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A92D184C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92D1870()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92D189C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92CFD44(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t dispatch thunk of ThinClientEpisodeStateNetworkingProtocol.fetchNewEpisodeStates(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ThinClientEpisodeStateModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for EpisodePlayState();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v11 = sub_1A93F738C();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v14 + 48)) = *((_BYTE *)a2 + *(int *)(v14 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for ThinClientEpisodeStateModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for EpisodePlayState();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
    {
      v4 = sub_1A93F738C();
      v5 = *(_QWORD *)(v4 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  return result;
}

void *initializeWithCopy for ThinClientEpisodeStateModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for EpisodePlayState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v9 = sub_1A93F738C();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
      *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for ThinClientEpisodeStateModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = type metadata accessor for EpisodePlayState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_18;
      sub_1A9064714((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v15 = sub_1A93F738C();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v20 + 48)) = *((_BYTE *)a2 + *(int *)(v20 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v14);
      goto LABEL_18;
    }
    sub_1A9064714((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
LABEL_8:
    v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98) - 8) + 64);
    goto LABEL_9;
  }
  if (v10)
    goto LABEL_8;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v11 = sub_1A93F738C();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
    *((_BYTE *)a1 + *(int *)(v18 + 48)) = *((_BYTE *)a2 + *(int *)(v18 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for ThinClientEpisodeStateModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for EpisodePlayState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v9 = sub_1A93F738C();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
      *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for ThinClientEpisodeStateModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = type metadata accessor for EpisodePlayState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_18;
      sub_1A9064714((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v15 = sub_1A93F738C();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
        *((_BYTE *)a1 + *(int *)(v20 + 48)) = *((_BYTE *)a2 + *(int *)(v20 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v14);
      goto LABEL_18;
    }
    sub_1A9064714((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EpisodePlayState);
LABEL_8:
    v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98) - 8) + 64);
    goto LABEL_9;
  }
  if (v10)
    goto LABEL_8;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v11 = sub_1A93F738C();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A1F30);
    *((_BYTE *)a1 + *(int *)(v18 + 48)) = *((_BYTE *)a2 + *(int *)(v18 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ThinClientEpisodeStateModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92D22E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ThinClientEpisodeStateModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92D237C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

void sub_1A92D23F8()
{
  unint64_t v0;

  sub_1A92D2468();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A92D2468()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2ACA20)
  {
    type metadata accessor for EpisodePlayState();
    v0 = sub_1A93F8A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2ACA20);
  }
}

uint64_t type metadata accessor for ThinClientEpisodeStateRepository()
{
  return objc_opt_self();
}

uint64_t method lookup function for ThinClientEpisodeStateRepository()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThinClientEpisodeStateRepository.__allocating_init(thinClientEpisodeStateNetworking:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for EpisodeStateCache()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18PodcastsFoundation17EpisodeStateCacheVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EpisodeStateCache(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EpisodeStateCache(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeStateCache()
{
  return &type metadata for EpisodeStateCache;
}

id sub_1A92D25F8(id result, char a2)
{
  if ((a2 & 1) != 0)
    return sub_1A92D2604(result);
  else
    return (id)swift_bridgeObjectRetain();
}

id sub_1A92D2604(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1A92D2614(id a1, char a2)
{
  if ((a2 & 1) != 0)
    sub_1A9173164(a1);
  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1A92D2620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t MediaCacheDeleteProcessorDataSource.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaCacheDeleteProcessorDataSource.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MediaCacheDeleteProcessorDataSource.name.modify())()
{
  return nullsub_1;
}

uint64_t MediaCacheDeleteProcessorDataSource.observedShowKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.modify())()
{
  return nullsub_1;
}

uint64_t MediaCacheDeleteProcessorDataSource.init(userDefaults:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A94055A0;
  *(_QWORD *)(v4 + 32) = sub_1A93F8040();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = sub_1A93F8040();
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 64) = sub_1A93F8040();
  *(_QWORD *)(v4 + 72) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A94055A0;
  *(_QWORD *)(v8 + 32) = sub_1A93F8040();
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = sub_1A93F8040();
  *(_QWORD *)(v8 + 56) = v10;
  result = sub_1A93F8040();
  *(_QWORD *)(v8 + 64) = result;
  *(_QWORD *)(v8 + 72) = v12;
  *a2 = 0xD000000000000023;
  a2[1] = 0x80000001A941A8F0;
  a2[2] = v4;
  a2[3] = v8;
  a2[4] = a1;
  return result;
}

void __swiftcall MediaCacheDeleteProcessorDataSource.episodesPredicate()(NSPredicate *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = sub_1A93F7494();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v1 + 32);
  sub_1A909E53C();
  v11 = objc_msgSend(v10, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));
  sub_1A93F7374();
  sub_1A93F7470();
  static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1A92D2954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v13;

  v1 = sub_1A93F7494();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F738C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v0 + 32);
  sub_1A909E53C();
  v10 = objc_msgSend(v9, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));
  sub_1A93F7374();
  sub_1A93F7470();
  v11 = static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t sub_1A92D2A74()
{
  return swift_bridgeObjectRetain();
}

void destroy for MediaCacheDeleteProcessorDataSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MediaCacheDeleteProcessorDataSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for MediaCacheDeleteProcessorDataSource(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MediaCacheDeleteProcessorDataSource(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessorDataSource()
{
  return &type metadata for MediaCacheDeleteProcessorDataSource;
}

uint64_t CacheDeleteNotifications.paths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CacheDeleteNotifications.__allocating_init(paths:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CacheDeleteNotifications.init(paths:)(a1);
}

uint64_t CacheDeleteNotifications.init(paths:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  objc_class *v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  objc_super v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC58);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC30);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_paths] = a1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC20);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v33 = v15;
  type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  v18 = v1;
  swift_bridgeObjectRetain();
  sub_1A93F8508();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_stream], v9, v32);
  sub_1A9062170((uint64_t)v15, (uint64_t)v12, &qword_1ED2ABC30);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_continuation], v12, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
    v20 = swift_allocObject();
    *(_DWORD *)(v20 + 20) = 0;
    *(_BYTE *)(v20 + 16) = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_completedCheck] = v20;

    v21 = (objc_class *)type metadata accessor for CacheDeleteNotifications(0);
    v34.receiver = v18;
    v34.super_class = v21;
    v22 = objc_msgSendSuper2(&v34, sel_init);
    v23 = qword_1ED2A93D8;
    v24 = (char *)v22;
    if (v23 != -1)
      swift_once();
    v25 = (void *)qword_1ED2A93C8;
    v26 = objc_allocWithZone((Class)CacheDeleteNotificationObserver);
    sub_1A93F726C();
    v27 = v25;
    v28 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v26, sel_initWithDelegate_observedPaths_notificationQueue_, v24, v28, v27);

    v30 = *(void **)&v24[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer];
    *(_QWORD *)&v24[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer] = v29;

    sub_1A905FD54((uint64_t)v15, &qword_1ED2ABC30);
    return (uint64_t)v24;
  }
  return result;
}

uint64_t sub_1A92D2F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1A905FD54(a2, &qword_1ED2ABC30);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC20);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1A92D2FF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92D2F7C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AB250);
}

uint64_t type metadata accessor for CacheDeleteNotifications(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1ED2AB280);
}

uint64_t sub_1A92D3020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v1 = v0;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A3F08);
  v3 = sub_1A93F7674();
  v4 = sub_1A93F879C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A904E000, v3, v4, "Starting observer", v5, 2u);
    MEMORY[0x1AF41411C](v5, -1, -1);
  }

  v6 = *(void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer);
  if (v6)
  {
    v7 = v6;
    if ((objc_msgSend(v7, sel_beginObserving) & 1) == 0)
    {
      v8 = sub_1A93F7674();
      v9 = sub_1A93F879C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_1A904E000, v8, v9, "Unable to start observing cache delete notifications! Features that rely upon these notifications may not work.", v10, 2u);
        MEMORY[0x1AF41411C](v10, -1, -1);
      }

      v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_completedCheck);
      os_unfair_lock_lock((os_unfair_lock_t)(v11 + 20));
      *(_BYTE *)(v11 + 16) = 1;
      os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 20));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC20);
      sub_1A93F84F0();
    }

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC58);
  return sub_1A93F84FC();
}

uint64_t sub_1A92D31F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A92D3DE8(a2, a3, a4);
}

uint64_t sub_1A92D3320()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA430);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC20);
  sub_1A93F84E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1A92D354C(uint64_t a1, uint64_t a2)
{
  return (_s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_1A92D3574(uint64_t a1, uint64_t a2)
{
  return (_s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_1A92D3590(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a2, a1);
}

id CacheDeleteNotifications.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CacheDeleteNotifications.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CacheDeleteNotifications.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CacheDeleteNotifications(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A92D36F0()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1A92D3020();

}

uint64_t _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD928);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v16[*(int *)(v17 + 48)];
  sub_1A92D49C8(a1, (uint64_t)v16);
  sub_1A92D49C8(a2, (uint64_t)v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  if (v20(v16, 1, v19) != 1)
  {
    v38 = v10;
    v39 = v5;
    sub_1A92D49C8((uint64_t)v16, (uint64_t)v13);
    v22 = *((_QWORD *)v13 + 1);
    v37 = *(_QWORD *)v13;
    v23 = *(int *)(v19 + 48);
    v24 = &v13[v23];
    if (v20(v18, 1, v19) != 1)
    {
      v26 = *(_QWORD *)v18;
      v25 = *((_QWORD *)v18 + 1);
      v27 = &v18[v23];
      v28 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v28(v38, v24, v4);
      v28(v7, v27, v4);
      if (v37 == v26 && v22 == v25)
      {
        swift_bridgeObjectRelease_n();
        v32 = v38;
        v31 = v39;
      }
      else
      {
        v30 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v38;
        v31 = v39;
        if ((v30 & 1) == 0)
        {
          v33 = *(void (**)(char *, uint64_t))(v39 + 8);
          v33(v7, v4);
          v33(v32, v4);
          sub_1A92D4A0C((uint64_t)v16);
          goto LABEL_7;
        }
      }
      v21 = sub_1A93F735C();
      v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v7, v4);
      v34(v32, v4);
      sub_1A92D4A0C((uint64_t)v16);
      return v21 & 1;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(&v13[v23], v4);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1A905FD54((uint64_t)v16, &qword_1EEABD928);
LABEL_7:
    v21 = 0;
    return v21 & 1;
  }
  if (v20(v18, 1, v19) != 1)
    goto LABEL_6;
  sub_1A92D4A0C((uint64_t)v16);
  v21 = 1;
  return v21 & 1;
}

uint64_t _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  BOOL v38;
  void (*v39)(char *, uint64_t);
  char v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v44 - v8;
  v9 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v44 - v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD928);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &v20[*(int *)(v21 + 48)];
  v49 = a1;
  sub_1A92D49C8(a1, (uint64_t)v20);
  sub_1A92D49C8(a2, (uint64_t)v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
  if (v24(v20, 1, v23) == 1)
  {
    if (v24(v22, 1, v23) == 1)
      goto LABEL_15;
  }
  else
  {
    v45 = a2;
    v48 = v5;
    v25 = v4;
    sub_1A92D49C8((uint64_t)v20, (uint64_t)v17);
    v26 = v17[1];
    v44 = *v17;
    v27 = *(int *)(v23 + 48);
    v28 = (char *)v17 + v27;
    if (v24(v22, 1, v23) != 1)
    {
      v32 = *(_QWORD *)v22;
      v31 = *((_QWORD *)v22 + 1);
      v33 = &v22[v27];
      v34 = v47;
      v35 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      v36 = v25;
      v35(v47, v28, v25);
      v37 = v46;
      v35(v46, v33, v36);
      v38 = v44 == v32 && v26 == v31;
      if (v38 || (sub_1A93F90C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((sub_1A93F735C() & 1) != 0)
        {
          v39 = *(void (**)(char *, uint64_t))(v48 + 8);
          v39(v37, v36);
          v39(v34, v36);
LABEL_15:
          sub_1A92D4A0C((uint64_t)v20);
          v40 = 0;
          return v40 & 1;
        }
        v40 = sub_1A93F732C();
      }
      else
      {
        v40 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v42 = *(void (**)(char *, uint64_t))(v48 + 8);
      v42(v37, v36);
      v42(v34, v36);
      sub_1A92D4A0C((uint64_t)v20);
      return v40 & 1;
    }
    v4 = v25;
    v5 = v48;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v4);
    swift_bridgeObjectRelease();
    a2 = v45;
  }
  sub_1A92D49C8(v49, (uint64_t)v14);
  v29 = 1;
  if (v24(v14, 1, v23) == 1)
  {
    v30 = v4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = v4;
    (*(void (**)(char *, uint64_t))(v5 + 8))(&v14[*(int *)(v23 + 48)], v4);
    v29 = 0;
  }
  sub_1A92D49C8(a2, (uint64_t)v11);
  v41 = 1;
  if (v24(v11, 1, v23) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(&v11[*(int *)(v23 + 48)], v30);
    v41 = 0;
  }
  v40 = v29 < v41;
  sub_1A905FD54((uint64_t)v20, &qword_1EEABD928);
  return v40 & 1;
}

uint64_t sub_1A92D3DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v26 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC20);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA430);
  v27 = *(_QWORD *)(v17 - 8);
  v28 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v16, v4 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_continuation, v13, v18);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v22 = (char *)v12 + *(int *)(v21 + 48);
  *v12 = a1;
  v12[1] = a2;
  sub_1A9062170(v26, (uint64_t)v9, (uint64_t *)&unk_1ED2AD360);
  v23 = sub_1A93F738C();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, v23) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1A93F7374();
    sub_1A905FD54((uint64_t)v9, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v22, v9, v23);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 0, 1, v21);
  sub_1A93F84E4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v20, v28);
}

unint64_t sub_1A92D4034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABD8B0;
  if (!qword_1EEABD8B0)
  {
    v1 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(255);
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CacheDeleteNotifications.CacheDeleteEvent, v1);
    atomic_store(result, (unint64_t *)&qword_1EEABD8B0);
  }
  return result;
}

unint64_t sub_1A92D4080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABD8B8;
  if (!qword_1EEABD8B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABD8C0);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DF0830], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABD8B8);
  }
  return result;
}

uint64_t sub_1A92D40CC()
{
  return type metadata accessor for CacheDeleteNotifications(0);
}

void sub_1A92D40D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A92D4208(319, &qword_1ED2ABC60, MEMORY[0x1E0DF0838]);
  if (v0 <= 0x3F)
  {
    sub_1A92D4208(319, &qword_1ED2ABC28, MEMORY[0x1E0DF07E8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CacheDeleteNotifications()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CacheDeleteNotifications.__allocating_init(paths:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.makeAsyncIterator()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.cacheDelete(_:didIdentifyCacheDeletedPath:deletedAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.cacheDeleteObserverBecameSynchronized(withFileSystem:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void sub_1A92D4208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CacheDeleteNotifications.CacheDeleteEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = *(int *)(v7 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1A93F738C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 48);
    v5 = sub_1A93F738C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *initializeWithCopy for CacheDeleteNotifications.CacheDeleteEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(v6 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A93F738C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *assignWithCopy for CacheDeleteNotifications.CacheDeleteEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = *(int *)(v6 + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1A93F738C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
      return a1;
    }
    sub_1A905FD54((uint64_t)a1, &qword_1ED2ABBB8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  v11 = *(int *)(v6 + 48);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1A93F738C();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

_OWORD *initializeWithTake for CacheDeleteNotifications.CacheDeleteEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A93F738C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *assignWithTake for CacheDeleteNotifications.CacheDeleteEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRelease();
      v17 = *(int *)(v6 + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1A93F738C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_1A905FD54((uint64_t)a1, &qword_1ED2ABBB8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 48);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1A93F738C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CacheDeleteNotifications.CacheDeleteEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92D4828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CacheDeleteNotifications.CacheDeleteEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92D4884(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A92D48D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A92D4914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABBB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1A92D4958()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A92D49C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A92D4A0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A92D4A48(id a1, unint64_t a2, char a3, void (*a4)(id), uint64_t a5, int a6, _QWORD *a7, unint64_t a8, uint64_t a9)
{
  id v12;

  if ((a3 & 1) != 0)
  {
    v12 = a1;
    a4(a1);
    sub_1A92D4D38(a1, a2, 1);
  }
  else
  {
    sub_1A9056990((unint64_t)a1, a2, a7, a8, a9, (uint64_t)a4, a5);
  }
}

uint64_t sub_1A92D4AD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A92D4AE0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92D4B2C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92D4B80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92D4BA4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_bridgeObjectRelease();

  swift_release();
  if (*(_QWORD *)(v0 + 136))
    __swift_destroy_boxed_opaque_existential_0(v0 + 112);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92D4C10()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92D4C5C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92D4CB0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1A92D4CD8(void *a1, char a2)
{
  uint64_t v2;

  sub_1A91E23E4(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A92D4CEC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A92D4D38(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t _s11DonationJobVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 64);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v4;
  v6 = v4;

  return a1;
}

uint64_t _s11DonationJobVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

PodcastsFoundation::DeviceCapabilities __swiftcall DeviceCapabilities.init(rawValue:)(PodcastsFoundation::DeviceCapabilities rawValue)
{
  PodcastsFoundation::DeviceCapabilities *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t DeviceCapabilities.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *sub_1A92D4E64@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1A92D4E78@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1A92D4E8C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A92D4EB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1A92D4EDC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1A92D4EF0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A92D4F04(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A92D4F18()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1A92D4F28()
{
  return sub_1A93F8B50();
}

_QWORD *sub_1A92D4F40(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

void static DeviceCapabilities.cellularRadio.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_1A92D4F68()
{
  unint64_t result;

  result = qword_1EEABD930;
  if (!qword_1EEABD930)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DeviceCapabilities, &type metadata for DeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1EEABD930);
  }
  return result;
}

unint64_t sub_1A92D4FB0()
{
  unint64_t result;

  result = qword_1EEABD938;
  if (!qword_1EEABD938)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DeviceCapabilities, &type metadata for DeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1EEABD938);
  }
  return result;
}

unint64_t sub_1A92D4FF8()
{
  unint64_t result;

  result = qword_1EEABD940;
  if (!qword_1EEABD940)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DeviceCapabilities, &type metadata for DeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1EEABD940);
  }
  return result;
}

unint64_t sub_1A92D5040()
{
  unint64_t result;

  result = qword_1EEABD948;
  if (!qword_1EEABD948)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DeviceCapabilities, &type metadata for DeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1EEABD948);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceCapabilities()
{
  return &type metadata for DeviceCapabilities;
}

double sub_1A92D50A0@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

BOOL sub_1A92D50AC(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A92D50C0()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  return sub_1A93F9324();
}

uint64_t sub_1A92D5108()
{
  return sub_1A93F930C();
}

uint64_t sub_1A92D5138()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  return sub_1A93F9324();
}

double static InterestValue.suggestLess.getter()
{
  return -1.0;
}

double static InterestValue.neutral.getter()
{
  return 0.0;
}

double static InterestValue.favorited.getter()
{
  return 1.0;
}

unint64_t sub_1A92D5198()
{
  unint64_t result;

  result = qword_1EEABD950;
  if (!qword_1EEABD950)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for InterestValue, &type metadata for InterestValue);
    atomic_store(result, (unint64_t *)&qword_1EEABD950);
  }
  return result;
}

ValueMetadata *type metadata accessor for InterestValue()
{
  return &type metadata for InterestValue;
}

id DeferredLaunchTaskCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

double static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.getter()
{
  swift_beginAccess();
  return *(double *)&qword_1EEABD958;
}

uint64_t static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.setter(double a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_1EEABD958 = *(_QWORD *)&a1;
  return result;
}

uint64_t (*static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A92D52D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92D52FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F7DE8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A92D53C0()
{
  swift_beginAccess();
  return sub_1A90C6014(*(double *)&qword_1EEABD958);
}

uint64_t sub_1A92D5484(uint64_t a1, uint64_t a2)
{
  return sub_1A90AB6B4(0, a1, a2);
}

void sub_1A92D54C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (*(_BYTE *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring) == 1)
    {
      if (qword_1ED2A7EA8 != -1)
        swift_once();
      v4 = sub_1A93F7698();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED2B89B0);
      v5 = sub_1A93F7674();
      v6 = sub_1A93F879C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1A904E000, v5, v6, "Launch task deferral timed out. Starting tasks.", v7, 2u);
        MEMORY[0x1AF41411C](v7, -1, -1);
      }

      sub_1A90C69E0();
    }

  }
}

id DeferredLaunchTaskCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeferredLaunchTaskCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A92D565C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1A93F8AA8();
  *a1 = v5;
  return result;
}

uint64_t sub_1A92D56AC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92D56E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for DeferredLaunchTaskCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.scheduleDeferralDeadline(after:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.scheduleDefaultDeferralDeadline()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.deferWork(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

void destroy for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t a1)
{
  swift_release();

}

_QWORD *_s18PodcastsFoundation29DeferredLaunchTaskCoordinatorC13_DeferredTaskVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for DeferredLaunchTaskCoordinator._DeferredTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  return a1;
}

uint64_t assignWithTake for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

void sub_1A92D5864()
{
  uint64_t v0;

  sub_1A92D54C8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A92D586C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92D5898()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

PodcastsFoundation::ContentRating_optional __swiftcall ContentRating.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  PodcastsFoundation::ContentRating_optional v2;

  v1 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = PodcastsFoundation_ContentRating_explicit;
  else
    v2.value = PodcastsFoundation_ContentRating_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t ContentRating.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746963696C707865;
  else
    return 0x6E61656C63;
}

uint64_t sub_1A92D5954(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x746963696C707865;
  else
    v3 = 0x6E61656C63;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x746963696C707865;
  else
    v5 = 0x6E61656C63;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1A92D59FC()
{
  unint64_t result;

  result = qword_1EEABD988;
  if (!qword_1EEABD988)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, (unint64_t *)&qword_1EEABD988);
  }
  return result;
}

uint64_t sub_1A92D5A40()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92D5ABC()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92D5B14()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92D5B8C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A92D5BE8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E61656C63;
  if (*v1)
    v2 = 0x746963696C707865;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A92D5C24()
{
  sub_1A92D5D98();
  return sub_1A93F82BC();
}

uint64_t sub_1A92D5C80()
{
  sub_1A92D5D98();
  return sub_1A93F828C();
}

uint64_t storeEnumTagSinglePayload for ContentRating(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A92D5D18 + 4 * byte_1A941AE25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A92D5D4C + 4 * asc_1A941AE20[v4]))();
}

uint64_t sub_1A92D5D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92D5D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92D5D5CLL);
  return result;
}

uint64_t sub_1A92D5D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92D5D70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A92D5D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92D5D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentRating()
{
  return &type metadata for ContentRating;
}

unint64_t sub_1A92D5D98()
{
  unint64_t result;

  result = qword_1ED2A5F28[0];
  if (!qword_1ED2A5F28[0])
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, qword_1ED2A5F28);
  }
  return result;
}

uint64_t sub_1A92D5DDC@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1A92D5F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v17 - v14;
  (*(void (**)(uint64_t, uint64_t))(a5 + 40))(a3, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a9 + 16))(a1, AssociatedTypeWitness, a9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
}

uint64_t CacheAssetProcessingStep.overwrite.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1A92D605C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A92D5F6C(a1, v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1A92D6090()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t *sub_1A92D60B0(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = a3[4];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  v10 = *(_QWORD *)(a3[2] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v5 + 80) | v11);
  if (v14 <= 7
    && v13 + ((v12 + (v9 & ~v8)) & ~(unint64_t)v11) + 1 <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80) | v11) & 0x100000) == 0)
  {
    v18 = ~v8;
    v23 = ~(unint64_t)v11;
    v24 = a3[2];
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v18, v19, v6);
    v20 = ((((unint64_t)v4 + v9) & v18) + v12) & v23;
    v21 = (v19 + v12) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v20, v21, v24);
    *(_BYTE *)(v20 + v13) = *(_BYTE *)(v21 + v13);
  }
  else
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return v4;
}

uint64_t sub_1A92D61FC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3[3] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[4] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[2] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v17 + *(_QWORD *)(v13 + 64));
  return a1;
}

uint64_t sub_1A92D62B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3[3] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[4] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[2] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v17 + *(_QWORD *)(v13 + 64));
  return a1;
}

uint64_t sub_1A92D6374(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3[3] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[4] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[2] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v17 + *(_QWORD *)(v13 + 64));
  return a1;
}

uint64_t sub_1A92D6430(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;

  v6 = a3 + 16;
  v5 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 8) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0xFE)
    v12 = 254;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v17 = *(_QWORD *)(v10 + 64);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = *(_QWORD *)(v13 + 64);
  v20 = a2 - v12;
  if (a2 <= v12)
    goto LABEL_27;
  v21 = v19 + ((v17 + v18 + (v16 & ~v15)) & ~v18) + 1;
  v22 = 8 * v21;
  if (v21 > 3)
    goto LABEL_11;
  v24 = ((v20 + ~(-1 << v22)) >> v22) + 1;
  if (HIWORD(v24))
  {
    v23 = *(_DWORD *)(a1 + v21);
    if (v23)
      goto LABEL_18;
  }
  else
  {
    if (v24 <= 0xFF)
    {
      if (v24 < 2)
        goto LABEL_27;
LABEL_11:
      v23 = *(unsigned __int8 *)(a1 + v21);
      if (!*(_BYTE *)(a1 + v21))
        goto LABEL_27;
LABEL_18:
      v25 = (v23 - 1) << v22;
      if (v21 > 3)
        v25 = 0;
      if ((_DWORD)v19 + (((_DWORD)v17 + (_DWORD)v18 + (v16 & ~(_DWORD)v15)) & ~(_DWORD)v18) != -1)
      {
        if (v21 <= 3)
          v26 = v19 + ((v17 + v18 + (v16 & ~(_DWORD)v15)) & ~(_DWORD)v18) + 1;
        else
          v26 = 4;
        __asm { BR              X11 }
      }
      v31 = v12 + v25;
      return (v31 + 1);
    }
    v23 = *(unsigned __int16 *)(a1 + v21);
    if (*(_WORD *)(a1 + v21))
      goto LABEL_18;
  }
LABEL_27:
  if (v8 == v12)
    return (*(uint64_t (**)(void))(v7 + 48))();
  v28 = (v16 + a1) & ~v15;
  if (v11 == v12)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))(v28, *(unsigned int *)(v10 + 84), v9);
  v29 = (v28 + v17 + v18) & ~v18;
  if (v14 == v12)
    return (*(uint64_t (**)(uint64_t))(v13 + 48))(v29);
  v30 = *(unsigned __int8 *)(v29 + v19);
  if (v30 < 2)
    return 0;
  v31 = (v30 + 2147483646) & 0x7FFFFFFF;
  return (v31 + 1);
}

void sub_1A92D661C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = a4 + 16;
  v6 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 8) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  v12 = *(_QWORD *)(v11 + 64)
      + ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + 1;
  if (a3 > v10)
  {
    if (v12 <= 3)
    {
      v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
      if (HIWORD(v15))
      {
        v13 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  else
  {
    v13 = 0u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if (*(_DWORD *)(v11 + 64)
         + ((*(_DWORD *)(v9 + 64)
           + *(unsigned __int8 *)(v11 + 80)
           + ((*(_DWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~*(unsigned __int8 *)(v9 + 80))) & ~*(unsigned __int8 *)(v11 + 80)) != -1)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X22 }
}

void sub_1A92D6890()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Publishers.CachedAssetPublisher();
}

uint64_t sub_1A92D6908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x1AF414014](&protocol conformance descriptor for Publishers.CachedAssetPublisher<A, B>, a1);
  v4 = type metadata accessor for EmitLifecycle(255, a1, v2, v3);
  return MEMORY[0x1AF414014](&protocol conformance descriptor for EmitLifecycle<A>, v4);
}

uint64_t DownloadPhase.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v10;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DownloadPhase();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A915BAE4(v0, (uint64_t)v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_1A93F92E8();
      sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      sub_1A93F7FB0();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      return sub_1A93F92E8();
    }
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
}

uint64_t type metadata accessor for DownloadPhase()
{
  uint64_t result;

  result = qword_1ED2ABF00;
  if (!qword_1ED2ABF00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DownloadPhase.hashValue.getter()
{
  sub_1A93F92DC();
  DownloadPhase.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A92D6B24()
{
  sub_1A93F92DC();
  DownloadPhase.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A92D6B64()
{
  sub_1A93F92DC();
  DownloadPhase.hash(into:)();
  return sub_1A93F9324();
}

uint64_t _s18PodcastsFoundation13DownloadPhaseO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double *v18;
  int EnumCaseMultiPayload;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DownloadPhase();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (double *)((char *)&v23 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9D0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (double *)&v16[*(int *)(v17 + 48)];
  sub_1A915BAE4(a1, (uint64_t)v16);
  sub_1A915BAE4(a2, (uint64_t)v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1A915BAE4((uint64_t)v16, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      v20 = *v13 == *v18;
      goto LABEL_7;
    }
LABEL_11:
    sub_1A92D7124((uint64_t)v16);
    v20 = 0;
    return v20 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1A92A8810((uint64_t)v16);
      v20 = 1;
      return v20 & 1;
    }
    goto LABEL_11;
  }
  sub_1A915BAE4((uint64_t)v16, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, double *, uint64_t))(v5 + 32))(v7, v18, v4);
  v20 = MEMORY[0x1AF410F0C](v10, v7);
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v7, v4);
  v21(v10, v4);
LABEL_7:
  sub_1A92A8810((uint64_t)v16);
  return v20 & 1;
}

uint64_t sub_1A92D6DC0()
{
  return sub_1A9066CA8(&qword_1EEABD9C8, (uint64_t (*)(uint64_t))type metadata accessor for DownloadPhase, (uint64_t)&protocol conformance descriptor for DownloadPhase);
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadPhase(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1A93F726C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for DownloadPhase(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1A93F726C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A92A8810((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *assignWithTake for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A92A8810((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A93F726C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A92D70B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A92D7124(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

const char *static FeedUpdateEvent.evaluation_scheduled.getter()
{
  return "EvaluationScheduled";
}

const char *static FeedUpdateEvent.prepareForUpdate_scheduled.getter()
{
  return "PrepareForFeedUpdateScheduled";
}

ValueMetadata *type metadata accessor for FeedUpdateEvent()
{
  return &type metadata for FeedUpdateEvent;
}

uint64_t sub_1A92D719C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1A93F8D48();
      v7 = (uint64_t)sub_1A92DA798(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = sub_1A92DA260(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA798);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

char *sub_1A92D73F0(char *result)
{
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  void *v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  char *v35;
  id v36;
  char v37;
  char v38;
  uint64_t aBlock;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  void *v42;
  uint64_t (*v43)();
  _QWORD *v44;

  v2 = result;
  if (!result)
    return (char *)v2;
  v3 = *(char **)&result[OBJC_IVAR___MTContentKeyResponse_request];
  if (!v3)
    return 0;
  v4 = *(_QWORD *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId];
  v5 = *(_QWORD *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId + 8];
  v6 = HIBYTE(v5) & 0xF;
  v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!((v5 & 0x2000000000000000) != 0 ? HIBYTE(v5) & 0xF : v4 & 0xFFFFFFFFFFFFLL))
    return 0;
  if ((v5 & 0x1000000000000000) != 0)
  {
    v35 = v3;
    v36 = v2;
    swift_bridgeObjectRetain();
    v10 = sub_1A92DA260(v4, v5, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA798);
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
      goto LABEL_47;
LABEL_55:

    return 0;
  }
  if ((v5 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)sub_1A93F8D48();
    v10 = (uint64_t)sub_1A92DA798(v9, v7, 10);
    LOBYTE(v4) = v11 & 1;
LABEL_46:
    v21 = v3;
    v22 = v2;
    if ((v4 & 1) == 0)
    {
LABEL_47:
      v23 = swift_allocObject();
      *(_BYTE *)(v23 + 16) = 1;
      v24 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v25 = objc_msgSend(v24, sel_mainOrPrivateContext);

      v26 = (_QWORD *)swift_allocObject();
      v26[2] = v1;
      v26[3] = v10;
      v26[4] = v25;
      v26[5] = v2;
      v26[6] = v23;
      v26[7] = v3;
      v43 = sub_1A92DA3A4;
      v44 = v26;
      aBlock = MEMORY[0x1E0C809B0];
      v40 = 1107296256;
      v41 = sub_1A908A91C;
      v42 = &block_descriptor_57;
      v27 = _Block_copy(&aBlock);
      v28 = v3;
      v29 = v2;
      v30 = v1;
      v31 = v25;
      swift_retain();
      swift_release();
      objc_msgSend(v31, sel_performBlockAndWaitWithSave_, v27);

      _Block_release(v27);
      swift_beginAccess();
      v2 = (void *)*(unsigned __int8 *)(v23 + 16);
      swift_release();
      return (char *)v2;
    }
    goto LABEL_55;
  }
  aBlock = *(_QWORD *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId];
  v40 = v5 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v6)
      goto LABEL_60;
    if (v6 == 1 || (BYTE1(v4) - 48) > 9u)
      goto LABEL_33;
    v10 = (BYTE1(v4) - 48);
    if (v6 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_33;
      v10 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
      v12 = v6 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_33;
          v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_33;
          v10 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_33;
          LOBYTE(v4) = 0;
          ++v13;
          if (!--v12)
            goto LABEL_46;
        }
      }
    }
LABEL_45:
    LOBYTE(v4) = 0;
    goto LABEL_46;
  }
  if (v4 != 45)
  {
    if (!v6 || (v4 - 48) > 9u)
      goto LABEL_33;
    v10 = (v4 - 48);
    if (v6 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_33;
      v10 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
      v16 = v6 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)&aBlock + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_33;
          v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_33;
          v10 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_33;
          LOBYTE(v4) = 0;
          ++v17;
          if (!--v16)
            goto LABEL_46;
        }
      }
    }
    goto LABEL_45;
  }
  if (v6)
  {
    if (v6 != 1 && (BYTE1(v4) - 48) <= 9u)
    {
      if (v6 == 2)
      {
        LOBYTE(v4) = 0;
        v10 = -(uint64_t)(BYTE1(v4) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v4) - 48) <= 9u)
      {
        v10 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
        v20 = v6 - 3;
        if (!v20)
          goto LABEL_45;
        v32 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v33 = *v32 - 48;
          if (v33 > 9)
            break;
          v34 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            break;
          v10 = v34 - v33;
          if (__OFSUB__(v34, v33))
            break;
          LOBYTE(v4) = 0;
          ++v32;
          if (!--v20)
            goto LABEL_46;
        }
      }
    }
LABEL_33:
    v10 = 0;
    LOBYTE(v4) = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_1A92D7858(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t result;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  void (*v41)(char *, uint64_t);
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v46 = a5;
  v47 = a6;
  v9 = sub_1A93F7698();
  v48 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F738C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - v20;
  v49 = a2;
  sub_1A92DAED0(a2, a3);
  if (!v22)
  {
    v23 = objc_msgSend((id)objc_opt_self(), sel_insertNewObjectForEntityForName_inManagedObjectContext_, CFSTR("MTOfflineKeyData"), a3);
    objc_opt_self();
    v22 = swift_dynamicCastObjCClassUnconditional();
  }
  v24 = (void *)v22;
  sub_1A90A1CA8(a4 + OBJC_IVAR___MTContentKeyResponse_renewalDate, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1A90AC3A4((uint64_t)v14);
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v25 = (_BYTE *)(v46 + 16);
    v26 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    v27 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v11, v26, v9);
    v28 = sub_1A93F7674();
    v29 = sub_1A93F879C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v30 = 134217984;
      v50 = v49;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v28, v29, "Failed to save offline key data! Renewal date is required %lld", v30, 0xCu);
      MEMORY[0x1AF41411C](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
    result = swift_beginAccess();
    *v25 = 0;
  }
  else
  {
    v32 = v21;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    v33 = v47;
    v34 = (void *)sub_1A93F8010();
    objc_msgSend(v24, sel_setKeyUri_, v34);

    objc_msgSend(v24, sel_setStoreTrackId_, v49);
    v35 = (uint64_t *)(a4 + OBJC_IVAR___MTContentKeyResponse_keyData);
    swift_beginAccess();
    v36 = 0;
    v37 = v35[1];
    if (v37 >> 60 != 15)
    {
      v38 = *v35;
      sub_1A90D8068(v38, v37);
      v36 = (void *)sub_1A93F729C();
      sub_1A9069F9C(v38, v37);
    }
    objc_msgSend(v24, sel_setData_, v36, v46);

    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v33 + OBJC_IVAR___MTContentKeyRequest_requestDate, v15);
    sub_1A93F72D8();
    v40 = v39;
    v41 = *(void (**)(char *, uint64_t))(v16 + 8);
    v41(v18, v15);
    objc_msgSend(v24, sel_setLastRenewedDate_, v40);
    sub_1A93F72D8();
    objc_msgSend(v24, sel_setExpirationDate_);
    v42 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
    v43 = objc_msgSend(v42, sel_ams_activeiTunesAccount);

    if (v43)
    {
      v44 = objc_msgSend(v43, sel_ams_DSID);

      if (v44)
      {
        v45 = objc_msgSend(v44, sel_longLongValue);

        objc_msgSend(v24, sel_setSecureInvalidationDsid_, v45);
      }
    }

    return ((uint64_t (*)(char *, uint64_t))v41)(v32, v15);
  }
  return result;
}

void sub_1A92D7D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v41 = a8;
  v42 = a2;
  v37 = a5;
  v38 = a7;
  v34 = a4;
  v35 = a3;
  v36 = a1;
  v39 = a9;
  v40 = a10;
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v18 = objc_msgSend(v17, sel_privateQueueContext);

  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, v13);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = (v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  v22 = v35;
  *((_QWORD *)v21 + 2) = v10;
  *((_QWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 4) = v18;
  *((_QWORD *)v21 + 5) = a4;
  v23 = v36;
  v24 = v37;
  *((_QWORD *)v21 + 6) = v37;
  *((_QWORD *)v21 + 7) = v23;
  v25 = v38;
  *((_QWORD *)v21 + 8) = v42;
  *((_QWORD *)v21 + 9) = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v19], v16, v13);
  v26 = v41;
  *(_QWORD *)&v21[v20] = v41;
  v27 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  v28 = v40;
  *(_QWORD *)v27 = v39;
  *((_QWORD *)v27 + 1) = v28;
  aBlock[4] = sub_1A92DA470;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_9_3;
  v29 = _Block_copy(aBlock);
  v30 = v10;
  v31 = v18;
  sub_1A90D8068(v34, v24);
  swift_bridgeObjectRetain();
  v32 = v26;
  swift_retain();
  swift_release();
  objc_msgSend(v31, sel_performBlock_, v29);
  _Block_release(v29);

}

uint64_t sub_1A92D7FA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v32 = a12;
  v30 = a8;
  v31 = a11;
  v35 = a10;
  v29[1] = a9;
  v14 = sub_1A93F7D58();
  v36 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DB8();
  v33 = *(_QWORD *)(v17 - 8);
  v34 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92DAED0(a2, a3);
  if (!v20)
  {
    v21 = objc_msgSend((id)objc_opt_self(), sel_insertNewObjectForEntityForName_inManagedObjectContext_, CFSTR("MTOfflineKeyData"), a3);
    objc_opt_self();
    v20 = swift_dynamicCastObjCClassUnconditional();
  }
  v22 = (void *)v20;
  v23 = (void *)sub_1A93F729C();
  objc_msgSend(v22, sel_setData_, v23);

  v24 = (void *)sub_1A93F8010();
  objc_msgSend(v22, sel_setKeyUri_, v24);

  objc_msgSend(v22, sel_setStoreTrackId_, a2);
  objc_msgSend(v22, sel_setSecureInvalidationDsid_, v30);
  sub_1A93F72D8();
  objc_msgSend(v22, sel_setExpirationDate_);
  LOBYTE(v24) = objc_msgSend(a3, sel_saveInCurrentBlock);
  v25 = swift_allocObject();
  v26 = v32;
  *(_QWORD *)(v25 + 16) = v31;
  *(_QWORD *)(v25 + 24) = v26;
  *(_BYTE *)(v25 + 32) = (_BYTE)v24;
  aBlock[4] = sub_1A92DB4BC;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_73_2;
  v27 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v19, v16, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v34);
  return swift_release();
}

void sub_1A92D8424(uint64_t a1)
{
  void *v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v24;
  id v25;
  char *v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char *v30;
  char v31;
  char v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void (*v37)();
  _QWORD *v38;

  if (a1)
  {
    v2 = *(char **)(a1 + OBJC_IVAR___MTContentKeyResponse_request);
    if (v2)
    {
      v4 = *(_QWORD *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId];
      v3 = *(_QWORD *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId + 8];
      v5 = HIBYTE(v3) & 0xF;
      v6 = v4 & 0xFFFFFFFFFFFFLL;
      if ((v3 & 0x2000000000000000) != 0 ? HIBYTE(v3) & 0xF : v4 & 0xFFFFFFFFFFFFLL)
      {
        if ((v3 & 0x1000000000000000) != 0)
        {
          v30 = v2;
          swift_bridgeObjectRetain();
          v9 = sub_1A92DA260(v4, v3, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA798);
          v32 = v31;
          swift_bridgeObjectRelease();
          if ((v32 & 1) != 0)
            goto LABEL_48;
          goto LABEL_47;
        }
        if ((v3 & 0x2000000000000000) == 0)
        {
          if ((v4 & 0x1000000000000000) != 0)
            v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v8 = (unsigned __int8 *)sub_1A93F8D48();
          v9 = (uint64_t)sub_1A92DA798(v8, v6, 10);
          LOBYTE(v4) = v10 & 1;
LABEL_46:
          v20 = v2;
          if ((v4 & 1) != 0)
          {
LABEL_48:

            return;
          }
LABEL_47:
          v21 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
          v22 = objc_msgSend(v21, sel_mainOrPrivateContext);

          v23 = (_QWORD *)swift_allocObject();
          v23[2] = v1;
          v23[3] = v9;
          v23[4] = v22;
          v37 = sub_1A92DA510;
          v38 = v23;
          aBlock = MEMORY[0x1E0C809B0];
          v34 = 1107296256;
          v35 = sub_1A908A91C;
          v36 = &block_descriptor_15_3;
          v24 = _Block_copy(&aBlock);
          v25 = v1;
          v26 = (char *)v22;
          swift_release();
          objc_msgSend(v26, sel_performBlockAndWaitWithSave_, v24);
          _Block_release(v24);

          v2 = v26;
          goto LABEL_48;
        }
        aBlock = *(_QWORD *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId];
        v34 = v3 & 0xFFFFFFFFFFFFFFLL;
        if (v4 == 43)
        {
          if (!v5)
            goto LABEL_60;
          if (v5 == 1 || (BYTE1(v4) - 48) > 9u)
            goto LABEL_33;
          v9 = (BYTE1(v4) - 48);
          if (v5 != 2)
          {
            if ((BYTE2(v4) - 48) > 9u)
              goto LABEL_33;
            v9 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            v11 = v5 - 3;
            if (v11)
            {
              v12 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                v13 = *v12 - 48;
                if (v13 > 9)
                  goto LABEL_33;
                v14 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
                  goto LABEL_33;
                v9 = v14 + v13;
                if (__OFADD__(v14, v13))
                  goto LABEL_33;
                LOBYTE(v4) = 0;
                ++v12;
                if (!--v11)
                  goto LABEL_46;
              }
            }
          }
        }
        else
        {
          if (v4 == 45)
          {
            if (v5)
            {
              if (v5 != 1 && (BYTE1(v4) - 48) <= 9u)
              {
                if (v5 == 2)
                {
                  LOBYTE(v4) = 0;
                  v9 = -(uint64_t)(BYTE1(v4) - 48);
                  goto LABEL_46;
                }
                if ((BYTE2(v4) - 48) <= 9u)
                {
                  v9 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
                  v19 = v5 - 3;
                  if (!v19)
                    goto LABEL_45;
                  v27 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    v28 = *v27 - 48;
                    if (v28 > 9)
                      break;
                    v29 = 10 * v9;
                    if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
                      break;
                    v9 = v29 - v28;
                    if (__OFSUB__(v29, v28))
                      break;
                    LOBYTE(v4) = 0;
                    ++v27;
                    if (!--v19)
                      goto LABEL_46;
                  }
                }
              }
LABEL_33:
              v9 = 0;
              LOBYTE(v4) = 1;
              goto LABEL_46;
            }
            __break(1u);
LABEL_60:
            __break(1u);
            return;
          }
          if (!v5 || (v4 - 48) > 9u)
            goto LABEL_33;
          v9 = (v4 - 48);
          if (v5 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u)
              goto LABEL_33;
            v9 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
            v15 = v5 - 2;
            if (v15)
            {
              v16 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                v17 = *v16 - 48;
                if (v17 > 9)
                  goto LABEL_33;
                v18 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
                  goto LABEL_33;
                v9 = v18 + v17;
                if (__OFADD__(v18, v17))
                  goto LABEL_33;
                LOBYTE(v4) = 0;
                ++v16;
                if (!--v15)
                  goto LABEL_46;
              }
            }
          }
        }
LABEL_45:
        LOBYTE(v4) = 0;
        goto LABEL_46;
      }
    }
  }
}

void sub_1A92D8864(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[6];

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_privateQueueContext);

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = a1;
  v5[4] = v4;
  v9[4] = sub_1A92DB518;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A908A91C;
  v9[3] = &block_descriptor_22_4;
  v6 = _Block_copy(v9);
  v7 = v1;
  v8 = v4;
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWaitWithSave_, v6);
  _Block_release(v6);

}

unint64_t sub_1A92D89AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v32 = a2;
  v33 = a3;
  v31 = sub_1A93F7D58();
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F8040();
  v11 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v12 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  sub_1A9072534(0, &qword_1ED2AC7B8);
  result = sub_1A93F89DC();
  v15 = result;
  v16 = v4;
  v17 = v31;
  v27 = v8;
  v28 = v7;
  v29 = v16;
  v30 = v13;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v18)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(a1, sel_saveInCurrentBlock);
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
    v23 = (void *)sub_1A93F8868();
    v24 = swift_allocObject();
    v25 = v33;
    *(_QWORD *)(v24 + 16) = v32;
    *(_QWORD *)(v24 + 24) = v25;
    *(_BYTE *)(v24 + 32) = v22;
    aBlock[4] = sub_1A92DB4BC;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_67_0;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1A93F7D88();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v10, v6, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  }
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1AF4129DC](i, v15);
      else
        v20 = *(id *)(v15 + 8 * i + 32);
      v21 = v20;
      objc_msgSend(a1, sel_deleteObject_, v20, v27, v28);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1A92D8F1C(NSObject *a1)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *i;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  id v28;
  id v29;
  _QWORD *v30;
  void *v31;
  id v32;
  NSObject *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void **v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  void *v51;
  unsigned __int8 *v52;
  unsigned int v53;
  uint64_t v54;
  NSObject *v55;
  char v56;
  char v57;
  uint64_t v58;
  NSObject *v59;
  __int128 v60;
  Class v61;
  uint64_t v62;
  objc_super v63;
  Class v64;
  uint64_t aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  uint64_t (*v69)();
  uint64_t v70;
  uint64_t v71;
  char v72;
  __int128 v73;

  v3 = sub_1A93F7698();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = *(uint64_t *)((char *)&a1->isa + OBJC_IVAR___MTContentKeyRequest_adamId);
    v11 = *(unint64_t *)((char *)&a1[1].isa + OBJC_IVAR___MTContentKeyRequest_adamId);
    v12 = HIBYTE(v11) & 0xF;
    v13 = v10 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v10 & 0xFFFFFFFFFFFFLL)
    {
      if ((v11 & 0x1000000000000000) != 0)
      {
        v55 = a1;
        swift_bridgeObjectRetain();
        v16 = sub_1A92DA260(v10, v11, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA798);
        v57 = v56;
        swift_bridgeObjectRelease();
        if ((v57 & 1) == 0)
          goto LABEL_46;
LABEL_63:

        return;
      }
      if ((v11 & 0x2000000000000000) == 0)
      {
        if ((v10 & 0x1000000000000000) == 0)
          goto LABEL_66;
        for (i = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32); ; i = (unsigned __int8 *)sub_1A93F8D48())
        {
          v16 = (uint64_t)sub_1A92DA798(i, v13, 10);
          LOBYTE(v10) = v17 & 1;
LABEL_45:
          v27 = a1;
          if ((v10 & 1) != 0)
            break;
LABEL_46:
          v62 = v4;
          v60 = xmmword_1A9411960;
          v73 = xmmword_1A9411960;
          v71 = 0;
          v72 = 1;
          v28 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
          v29 = objc_msgSend(v28, sel_mainOrPrivateContext);

          v30 = (_QWORD *)swift_allocObject();
          v30[2] = isEscapingClosureAtFileLocation;
          v30[3] = v16;
          v61 = (Class)v16;
          v30[4] = v29;
          v30[5] = &v73;
          v30[6] = &v71;
          v4 = swift_allocObject();
          *(_QWORD *)(v4 + 16) = sub_1A92DB26C;
          *(_QWORD *)(v4 + 24) = v30;
          v69 = sub_1A9055748;
          v70 = v4;
          aBlock = MEMORY[0x1E0C809B0];
          v66 = 1107296256;
          v67 = sub_1A9098E00;
          v68 = &block_descriptor_31_2;
          v31 = _Block_copy(&aBlock);
          v32 = (id)isEscapingClosureAtFileLocation;
          v33 = v29;
          swift_retain();
          swift_release();
          -[NSObject performBlockAndWait:](v33, sel_performBlockAndWait_, v31);
          _Block_release(v31);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            v34 = *((_QWORD *)&v73 + 1);
            if (*((_QWORD *)&v73 + 1) >> 60 == 15 || (v72 & 1) != 0)
            {
              if (qword_1ED2A42E8 != -1)
                swift_once();
              v35 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED2A42C8);
              swift_beginAccess();
              v36 = v62;
              (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v6, v35, v3);
              v37 = sub_1A93F7674();
              v38 = sub_1A93F87B4();
              if (os_log_type_enabled(v37, v38))
              {
                v39 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v39 = 134217984;
                v64 = v61;
                sub_1A93F8AA8();
                _os_log_impl(&dword_1A904E000, v37, v38, "Offline key data not present for episode %lld", v39, 0xCu);
                MEMORY[0x1AF41411C](v39, -1, -1);
                v40 = v33;
                v33 = a1;
              }
              else
              {
                v40 = v37;
                v37 = a1;
              }

              (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v3);
              sub_1A9069F9C(v73, *((unint64_t *)&v73 + 1));
              swift_release();
            }
            else
            {
              v41 = v73;
              v62 = v73;
              v59 = a1;
              sub_1A906A3DC(v41, v34);
              sub_1A93F72CC();
              v42 = sub_1A93F738C();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v9, 0, 1, v42);
              v61 = (Class)type metadata accessor for ContentKeyResponse(0);
              v43 = (char *)objc_allocWithZone(v61);
              v44 = (void **)&v43[OBJC_IVAR___MTContentKeyResponse_error];
              *(_QWORD *)&v43[OBJC_IVAR___MTContentKeyResponse_error] = 0;
              v45 = (uint64_t *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData];
              *(_OWORD *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData] = v60;
              *(_QWORD *)&v43[OBJC_IVAR___MTContentKeyResponse_request] = a1;
              swift_beginAccess();
              v47 = *v45;
              v46 = v45[1];
              v48 = v62;
              *v45 = v62;
              v45[1] = v34;
              *(_QWORD *)&v60 = v59;
              sub_1A906A3DC(v48, v34);
              v49 = v43;
              sub_1A9069F9C(v47, v46);
              sub_1A90A1CA8((uint64_t)v9, (uint64_t)&v49[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
              swift_beginAccess();
              v50 = *v44;
              *v44 = 0;

              v63.receiver = v49;
              v63.super_class = v61;
              -[NSObject init](&v63, sel_init);
              sub_1A90AC3A4((uint64_t)v9);
              v51 = (void *)v60;

              sub_1A9069F9C(v62, v34);
              sub_1A9069F9C(v73, *((unint64_t *)&v73 + 1));
              swift_release();
            }
            return;
          }
          __break(1u);
LABEL_66:
          ;
        }
        goto LABEL_63;
      }
      aBlock = *(uint64_t *)((char *)&a1->isa + OBJC_IVAR___MTContentKeyRequest_adamId);
      v66 = v11 & 0xFFFFFFFFFFFFFFLL;
      if (v10 == 43)
      {
        if (!v12)
          goto LABEL_68;
        if (v12 == 1 || (BYTE1(v10) - 48) > 9u)
          goto LABEL_32;
        v16 = (BYTE1(v10) - 48);
        if (v12 != 2)
        {
          if ((BYTE2(v10) - 48) > 9u)
            goto LABEL_32;
          v16 = 10 * (BYTE1(v10) - 48) + (BYTE2(v10) - 48);
          v18 = v12 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                goto LABEL_32;
              v21 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                goto LABEL_32;
              v16 = v21 + v20;
              if (__OFADD__(v21, v20))
                goto LABEL_32;
              LOBYTE(v10) = 0;
              ++v19;
              if (!--v18)
                goto LABEL_45;
            }
          }
        }
      }
      else
      {
        if (v10 == 45)
        {
          if (v12)
          {
            if (v12 != 1 && (BYTE1(v10) - 48) <= 9u)
            {
              if (v12 == 2)
              {
                LOBYTE(v10) = 0;
                v16 = -(uint64_t)(BYTE1(v10) - 48);
                goto LABEL_45;
              }
              if ((BYTE2(v10) - 48) <= 9u)
              {
                v16 = -10 * (BYTE1(v10) - 48) - (BYTE2(v10) - 48);
                v26 = v12 - 3;
                if (!v26)
                  goto LABEL_44;
                v52 = (unsigned __int8 *)&aBlock + 3;
                while (1)
                {
                  v53 = *v52 - 48;
                  if (v53 > 9)
                    break;
                  v54 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                    break;
                  v16 = v54 - v53;
                  if (__OFSUB__(v54, v53))
                    break;
                  LOBYTE(v10) = 0;
                  ++v52;
                  if (!--v26)
                    goto LABEL_45;
                }
              }
            }
LABEL_32:
            v16 = 0;
            LOBYTE(v10) = 1;
            goto LABEL_45;
          }
          __break(1u);
LABEL_68:
          __break(1u);
          return;
        }
        if (!v12 || (v10 - 48) > 9u)
          goto LABEL_32;
        v16 = (v10 - 48);
        if (v12 != 1)
        {
          if ((BYTE1(v10) - 48) > 9u)
            goto LABEL_32;
          v16 = 10 * (v10 - 48) + (BYTE1(v10) - 48);
          v22 = v12 - 2;
          if (v22)
          {
            v23 = (unsigned __int8 *)&aBlock + 2;
            while (1)
            {
              v24 = *v23 - 48;
              if (v24 > 9)
                goto LABEL_32;
              v25 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                goto LABEL_32;
              v16 = v25 + v24;
              if (__OFADD__(v25, v24))
                goto LABEL_32;
              LOBYTE(v10) = 0;
              ++v23;
              if (!--v22)
                goto LABEL_45;
            }
          }
        }
      }
LABEL_44:
      LOBYTE(v10) = 0;
      goto LABEL_45;
    }
  }
}

void sub_1A92D96F4(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9 = sub_1A93F7698();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92DAED0(a2, a3);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_data);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1A93F72B4();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0xF000000000000000;
    }
    v24 = *a4;
    v25 = a4[1];
    *a4 = v17;
    a4[1] = v19;
    sub_1A9069F9C(v24, v25);
    objc_msgSend(v14, sel_expirationDate);
    v27 = v26;

    *(_QWORD *)a5 = v27;
    *(_BYTE *)(a5 + 8) = 0;
  }
  else
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 134217984;
      v28 = a2;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v21, v22, "Failed to retrieve offline key data, no key data found for storeTrackId %lld", v23, 0xCu);
      MEMORY[0x1AF41411C](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1A92D994C(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  _QWORD aBlock[6];
  unsigned __int8 v13;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_mainOrPrivateContext);

  v13 = 0;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v13;
  v5[3] = v1;
  v5[4] = a1;
  v5[5] = v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A92DB2B8;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_41_2;
  v7 = _Block_copy(aBlock);
  v8 = v1;
  v9 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

void sub_1A92D9B0C(uint64_t a1, char a2)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = v6;
  *(_BYTE *)(v7 + 40) = a2;
  v11[4] = sub_1A92DB338;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A908A91C;
  v11[3] = &block_descriptor_47_2;
  v8 = _Block_copy(v11);
  v9 = v2;
  v10 = v6;
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWaitWithSave_, v8);
  _Block_release(v8);

}

void sub_1A92D9C20(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92DAED0(a2, a3);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v12, sel_setPendingDeletion_, a4 & 1);
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
    v14 = sub_1A93F7674();
    v15 = sub_1A93F87B4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = v12;
      v22 = a2;
      v18 = v17;
      v23 = v17;
      *(_DWORD *)v16 = 134218242;
      sub_1A93F8AA8();
      *(_WORD *)(v16 + 12) = 2080;
      if ((a4 & 1) != 0)
        v19 = 1702195828;
      else
        v19 = 0x65736C6166;
      if ((a4 & 1) != 0)
        v20 = 0xE400000000000000;
      else
        v20 = 0xE500000000000000;
      v22 = sub_1A906436C(v19, v20, &v23);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v14, v15, "Key data for storeTrackId %lld set to pendingDeletion %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v16, -1, -1);

      v12 = v21;
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1A92D9EC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v5 = sub_1A93F7698();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  sub_1A92DAED0(a2, a3);
  if (v12)
  {
    v13 = v12;
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    v15 = sub_1A93F7674();
    v16 = sub_1A93F87B4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      v22 = a2;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v15, v16, "Removed offline key data for storeTrackId %lld", v17, 0xCu);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(a3, sel_deleteObject_, v13);

  }
  else
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v18, v5);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F87B4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      v22 = a2;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v19, v20, "Failed to remove offline key data, no key data found for %lld", v21, 0xCu);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

id CoreDataKeyRequestStorage.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CoreDataKeyRequestStorage.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataKeyRequestStorage();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CoreDataKeyRequestStorage.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataKeyRequestStorage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned __int8 *sub_1A92DA220(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1A92DA51C(a1, a2, a3);
}

unsigned __int8 *sub_1A92DA234(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A92DA798(a1, a2, a3);
}

uint64_t sub_1A92DA248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A92DA260(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA51C);
}

uint64_t sub_1A92DA254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A92DA260(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A92DA798);
}

uint64_t sub_1A92DA260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1A93F8190();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A92DAA14();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A93F8D48();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A92DA350()
{
  return swift_deallocObject();
}

uint64_t sub_1A92DA360()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92DA3A4()
{
  uint64_t v0;

  return sub_1A92D7858(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1A92DA3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A93F738C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_1A905F180(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92DA470()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A93F738C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A92D7FA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A92DA4E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92DA510()
{
  uint64_t v0;

  sub_1A92D9EC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

unsigned __int8 *sub_1A92DA51C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1A92DA798(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A92DAA14()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A93F819C();
  v4 = sub_1A92DAA90(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A92DAA90(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A92DABD4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A90649A0(v9, 0);
      v12 = sub_1A92DACC0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1AF411DDC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1AF411DDCLL);
LABEL_9:
      sub_1A93F8D48();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AF411DDC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A92DABD4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A934522C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A934522C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A93F8148();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A92DACC0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1A934522C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1A93F8154();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1A93F8D48();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1A934522C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1A93F8130();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1A92DAED0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __CFString *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, a1);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405950;
  v5 = sub_1A93F8040();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  *(_QWORD *)(v4 + 104) = sub_1A922E830();
  *(_QWORD *)(v4 + 72) = v3;
  v8 = CFSTR("MTOfflineKeyData");
  v9 = v3;
  v10 = (void *)sub_1A93F8754();
  v11 = (void *)sub_1A93F82F8();
  v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, v8, v10, v11);

  if (!v12)
    goto LABEL_11;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v13 = sub_1A93F8310();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_4;
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)MEMORY[0x1AF4129DC](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  swift_bridgeObjectRelease();

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())

}

void sub_1A92DB134(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  _QWORD *v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_privateQueueContext);

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v9[4] = sub_1A92DB48C;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A908A91C;
  v9[3] = &block_descriptor_61_1;
  v7 = _Block_copy(v9);
  v8 = v5;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v7);
  _Block_release(v7);

}

uint64_t sub_1A92DB240()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92DB26C()
{
  uint64_t v0;

  sub_1A92D96F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A92DB27C()
{
  return swift_deallocObject();
}

uint64_t sub_1A92DB28C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92DB2B8()
{
  uint64_t v0;
  BOOL *v1;
  void *v2;
  void *v3;

  v1 = *(BOOL **)(v0 + 16);
  sub_1A92DAED0(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
  v3 = v2;
  if (v2)

  *v1 = v3 != 0;
}

uint64_t sub_1A92DB2FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A92DB30C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92DB338()
{
  uint64_t v0;

  sub_1A92D9C20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t method lookup function for CoreDataKeyRequestStorage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.saveKeyData(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.saveKeyData(keyIdentifier:storeTrackID:keyData:renewalDate:dsid:responseQueue:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.removeKeyData(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.removeAllKeyData(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.retrieveKeyData(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.keyExistsInStorage(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.markOfflineKey(for:pendingDeletion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t sub_1A92DB43C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A92DB460()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A92DB48C()
{
  uint64_t v0;

  return sub_1A92D89AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92DB498()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92DB4C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t Publisher.nullifyFirstIf<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  v33 = a3;
  v34 = a5;
  v41 = a2;
  v6 = sub_1A93F8A90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v37 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (_QWORD *)((char *)v32 - v8);
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - v12;
  v14 = sub_1A93F77E8();
  v39 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - v16;
  v35 = MEMORY[0x1AF414014](MEMORY[0x1E0C959B8], v14, v15);
  v32[1] = v6;
  v36 = sub_1A93F77DC();
  v38 = *(_QWORD *)(v36 - 8);
  v18 = MEMORY[0x1E0C80A78](v36);
  v20 = (char *)v32 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a4 - 8) + 56))(v13, 1, 1, a4, v18);
  v21 = (char *)v9 + *(int *)(TupleTypeMetadata2 + 48);
  *v9 = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v13, v6);
  v22 = (_QWORD *)swift_allocObject();
  v24 = v33;
  v23 = v34;
  v22[2] = v33;
  v22[3] = a4;
  v22[4] = v23;
  v25 = v17;
  v26 = v23;
  sub_1A93F7B9C();
  swift_release();
  (*(void (**)(_QWORD *, uint64_t))(v37 + 8))(v9, TupleTypeMetadata2);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v24;
  v27[3] = a4;
  v28 = v40;
  v27[4] = v26;
  v27[5] = v28;
  v27[6] = v41;
  swift_retain();
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v14);
  v29 = v36;
  MEMORY[0x1AF414014](MEMORY[0x1E0C95950], v36);
  v30 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v29);
  return v30;
}

uint64_t sub_1A92DB7F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  result = sub_1A93F8A90();
  v7 = __OFADD__(*a1, 1);
  v8 = *a1 + 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v9 = result;
    v10 = (char *)a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    *a3 = v8;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v10, a2, v9);
  }
  return result;
}

uint64_t sub_1A92DB874()
{
  return swift_deallocObject();
}

uint64_t sub_1A92DB884@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A92DB7F0(a1, a2, a3);
}

uint64_t sub_1A92DB890@<X0>(char *a1@<X0>, uint64_t (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t, double);
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;
  uint64_t v32;

  v29 = a3;
  v30 = a2;
  v32 = a5;
  v31 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F8A90();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v29 - v17;
  v20 = *(int *)(v19 + 48);
  v22 = v21 + v20;
  v23 = *(_QWORD *)a1;
  v24 = *(void (**)(uint64_t, char *, uint64_t, double))(v11 + 16);
  v24(v21 + v20, &a1[v20], v9, v16);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v25(v18, v22, v9);
  if (v23 == 1)
  {
    ((void (*)(char *, char *, uint64_t))v24)(v14, v18, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    }
    else
    {
      v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v8, v14, a4);
      v27 = v30(v8);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, a4);
      if ((v27 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v9);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, 1, 1, a4);
      }
    }
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v32, v18, v9);
}

uint64_t sub_1A92DBAA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92DBAC8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A92DB890(a1, *(uint64_t (**)(char *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 24), a2);
}

char *Array<A>.firstEligibleSmartPlayEpisode()(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char *result;
  char *v15;

  if (a1 >> 62)
    goto LABEL_27;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1A93F8E5C())
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      v9 = 0;
      while (1)
      {
        v10 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_26;
        v6 = *(char **)(a1 + 8 * v9 + 32);
        if (!*(_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR___MTServerPodcastEpisode_attributes] + 168))
          break;
        v11 = v6;
        swift_bridgeObjectRetain();
        v12 = sub_1A93F8ED4();
        swift_bridgeObjectRelease();
        if (v12 != 1 && v12 != 2)
          goto LABEL_23;
        v13 = sub_1A93F90C0();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v11;
        }

        ++v9;
        if (v10 == v2)
        {
LABEL_19:
          result = (char *)swift_bridgeObjectRelease();
          if ((a1 & 0xC000000000000001) == 0)
          {
            if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
              return (char *)*(id *)(a1 + 32);
            __break(1u);
            return result;
          }
          swift_bridgeObjectRetain();
          v6 = (char *)MEMORY[0x1AF4129DC](0, a1);
LABEL_30:
          swift_bridgeObjectRelease();
          return v6;
        }
      }
      v15 = v6;
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v3 = 0;
    while (1)
    {
      v4 = MEMORY[0x1AF4129DC](v3, a1);
      v5 = v3 + 1;
      if (__OFADD__(v3, 1))
        break;
      v6 = (char *)v4;
      if (!*(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 168))
        goto LABEL_23;
      swift_bridgeObjectRetain();
      v7 = sub_1A93F8ED4();
      swift_bridgeObjectRelease();
      if (v7 != 1 && v7 != 2)
        goto LABEL_23;
      v8 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        goto LABEL_30;
      swift_unknownObjectRelease();
      ++v3;
      if (v5 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Bool __swiftcall ServerPodcastEpisode.isEligibleSmartPlayEpisode()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v2 = *(void **)(v1 + 168);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 160);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
    __asm { BR              X11 }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t DisplayType.rawValue.getter(char a1)
{
  if (!a1)
    return 1701147238;
  if (a1 == 1)
    return 1684627824;
  return 0x646972627968;
}

uint64_t sub_1A92DBEC0(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1684627824;
  if (v2 != 1)
  {
    v5 = 0x646972627968;
    v4 = 0xE600000000000000;
  }
  if (*a1)
    v6 = v5;
  else
    v6 = 1701147238;
  if (v2)
    v7 = v4;
  else
    v7 = 0xE400000000000000;
  v8 = 1684627824;
  if (*a2 != 1)
  {
    v8 = 0x646972627968;
    v3 = 0xE600000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 1701147238;
  if (*a2)
    v10 = v3;
  else
    v10 = 0xE400000000000000;
  if (v6 == v9 && v7 == v10)
    v11 = 1;
  else
    v11 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1A92DBFA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation11DisplayTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A92DBFCC()
{
  sub_1A92DC188();
  return sub_1A93F82BC();
}

uint64_t sub_1A92DC028()
{
  sub_1A92DC188();
  return sub_1A93F828C();
}

unint64_t sub_1A92DC078()
{
  unint64_t result;

  result = qword_1EEABD9D8;
  if (!qword_1EEABD9D8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DisplayType, &type metadata for DisplayType);
    atomic_store(result, (unint64_t *)&qword_1EEABD9D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92DC108 + 4 * byte_1A941B135[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92DC13C + 4 * byte_1A941B130[v4]))();
}

uint64_t sub_1A92DC13C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DC144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92DC14CLL);
  return result;
}

uint64_t sub_1A92DC158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92DC160);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92DC164(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DC16C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayType()
{
  return &type metadata for DisplayType;
}

unint64_t sub_1A92DC188()
{
  unint64_t result;

  result = qword_1ED2A5568;
  if (!qword_1ED2A5568)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for DisplayType, &type metadata for DisplayType);
    atomic_store(result, (unint64_t *)&qword_1ED2A5568);
  }
  return result;
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForGroupedStation(orderedBy:)(int a1)
{
  uint64_t result;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  result = MEMORY[0x1E0DEE9D8];
  switch(a1)
  {
    case 0:
      result = _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE33sortDescriptorsForManualShowOrderSaySo16NSSortDescriptorCGyFZ_0();
      break;
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A9405960;
      sub_1A93F8040();
      v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v5 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 0);
      goto LABEL_5;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1A9405960;
      sub_1A93F8040();
      v7 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v5 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v7, sel_initWithKey_ascending_, v5, 1);
LABEL_5:
      v8 = v6;

      *(_QWORD *)(v3 + 32) = v8;
      sub_1A93F8328();
      result = v3;
      break;
    case 4:
      result = _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE27sortDescriptorsForShowTitle9ascendingSaySo16NSSortDescriptorCGSb_tFZ_0(1);
      break;
    case 5:
      result = _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE27sortDescriptorsForShowTitle9ascendingSaySo16NSSortDescriptorCGSb_tFZ_0(0);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForDatePublishedOfNewestEpisode()()
{
  return sub_1A92DC398((uint64_t)kLatestEpisodeAvailabilityDate, 0);
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForAscendingDatePublishedOfOldestEpisode()()
{
  return sub_1A92DC398((uint64_t)&kEarliestEpisodeAvailabilityDate, 1);
}

uint64_t sub_1A92DC398(uint64_t a1, char a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, a2 & 1);

  *(_QWORD *)(v3 + 32) = v6;
  sub_1A93F8328();
  return v3;
}

uint64_t _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE33sortDescriptorsForManualShowOrderSaySo16NSSortDescriptorCGyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A9405960;
  v6 = sub_1A93F8040();
  v7 = v1;
  sub_1A93F810C();
  sub_1A93F8040();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v2 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 0, v6, v7);

  *(_QWORD *)(v0 + 32) = v4;
  sub_1A93F8328();
  return v0;
}

uint64_t _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE27sortDescriptorsForShowTitle9ascendingSaySo16NSSortDescriptorCGSb_tFZ_0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405960;
  v8 = sub_1A93F8040();
  v9 = v3;
  sub_1A93F810C();
  sub_1A93F8040();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithKey_ascending_selector_, v5, a1 & 1, sel_localizedStandardCompare_, v8, v9);

  *(_QWORD *)(v2 + 32) = v6;
  sub_1A93F8328();
  return v2;
}

id ServerSyncResponse.Episode.fullEpisode.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  objc_class *v18;
  objc_super v19;

  v1 = v0[6];
  if (!v1)
    return 0;
  v2 = (void *)v0[7];
  v3 = v0[4];
  v4 = v0[5];
  v6 = v0[2];
  v5 = v0[3];
  v8 = *v0;
  v7 = v0[1];
  v18 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
  v9 = (char *)objc_allocWithZone(v18);
  v10 = (void **)&v9[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(_QWORD *)&v9[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  v11 = &v9[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(_QWORD *)v11 = v8;
  *((_QWORD *)v11 + 1) = v7;
  v12 = &v9[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(_QWORD *)v12 = v6;
  *((_QWORD *)v12 + 1) = v5;
  v13 = &v9[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(_QWORD *)v13 = v3;
  *((_QWORD *)v13 + 1) = v4;
  *(_QWORD *)&v9[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v1;
  swift_beginAccess();
  v14 = *v10;
  *v10 = v2;
  swift_retain_n();
  v15 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  v19.receiver = v9;
  v19.super_class = v18;
  v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_release();

  return v16;
}

uint64_t ServerSyncResponse.Episode.isDeleted.getter()
{
  uint64_t v0;

  return ((*(_BYTE *)(v0 + 64) & 0xFE) != 2) & *(_BYTE *)(v0 + 64);
}

uint64_t ServerSyncResponse.Meta.nextSyncToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Meta.startWithBootstrap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ServerSyncResponse.Meta.reset.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ServerSyncResponse.Meta.reason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ServerSyncResponse.Meta.init(nextSyncToken:reset:reason:startWithBootstrap:)(PodcastsFoundation::ServerSyncResponse::Meta *__return_ptr retstr, Swift::String_optional nextSyncToken, Swift::Bool_optional reset, Swift::String_optional reason, Swift::Bool_optional startWithBootstrap)
{
  retstr->nextSyncToken = nextSyncToken;
  retstr->startWithBootstrap = startWithBootstrap;
  retstr->reset = reset;
  retstr->reason = reason;
}

uint64_t sub_1A92DC854()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92DC890 + 4 * byte_1A941B260[*v0]))(0x636E79537478656ELL, 0xED00006E656B6F54);
}

unint64_t sub_1A92DC890()
{
  return 0xD000000000000012;
}

uint64_t sub_1A92DC8AC()
{
  return 0x7465736572;
}

uint64_t sub_1A92DC8C0()
{
  return 0x6E6F73616572;
}

uint64_t sub_1A92DC8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A92DF168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92DC8F8()
{
  sub_1A92DE010();
  return sub_1A93F945C();
}

uint64_t sub_1A92DC920()
{
  sub_1A92DE010();
  return sub_1A93F9468();
}

uint64_t ServerSyncResponse.Meta.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(unsigned __int8 *)(v1 + 16);
  v11 = *(unsigned __int8 *)(v1 + 17);
  v7 = *(_QWORD *)(v1 + 24);
  v10[0] = *(_QWORD *)(v1 + 32);
  v10[1] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE010();
  sub_1A93F93D8();
  v17 = 0;
  v8 = v12;
  sub_1A93F8FB8();
  if (!v8)
  {
    v16 = 1;
    sub_1A93F8FC4();
    v15 = 2;
    sub_1A93F8FC4();
    v14 = 3;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerSyncResponse.Meta.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE010();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v24 = 0;
  v9 = sub_1A93F8F04();
  v11 = v10;
  v23 = 1;
  swift_bridgeObjectRetain();
  v20 = sub_1A93F8F10();
  v22 = 2;
  v19 = sub_1A93F8F10();
  v21 = 3;
  v12 = sub_1A93F8F04();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v12;
  v16(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v20;
  *(_BYTE *)(a2 + 17) = v19;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92DCCE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerSyncResponse.Meta.init(from:)(a1, a2);
}

uint64_t sub_1A92DCCF8(_QWORD *a1)
{
  return ServerSyncResponse.Meta.encode(to:)(a1);
}

uint64_t ServerSyncResponse.Episode.Meta.deleted.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A92DCD14()
{
  return 0x646574656C6564;
}

uint64_t sub_1A92DCD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x646574656C6564 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A92DCDC0()
{
  sub_1A92DE054();
  return sub_1A93F945C();
}

uint64_t sub_1A92DCDE8()
{
  sub_1A92DE054();
  return sub_1A93F9468();
}

uint64_t ServerSyncResponse.Episode.Meta.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE054();
  sub_1A93F93D8();
  sub_1A93F8FC4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ServerSyncResponse.Episode.Meta.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE054();
  sub_1A93F93C0();
  if (!v2)
  {
    v9 = sub_1A93F8F10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A92DCFFC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ServerSyncResponse.Episode.Meta.init(from:)(a1, a2);
}

uint64_t sub_1A92DD010(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD9E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE054();
  sub_1A93F93D8();
  sub_1A93F8FC4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ServerSyncResponse.Episode.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.href.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.attributes.getter()
{
  return swift_retain();
}

void *ServerSyncResponse.Episode.relationships.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void ServerSyncResponse.Episode.meta.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t ServerSyncResponse.Episode.init(id:type:href:attributes:relationships:meta:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  char v10;

  v10 = *a10;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = v10;
  return result;
}

uint64_t sub_1A92DD1D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92DD1F8 + 4 * byte_1A941B264[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1A92DD1F8()
{
  return 1701869940;
}

uint64_t sub_1A92DD208()
{
  return 1717924456;
}

uint64_t sub_1A92DD218()
{
  return 0x7475626972747461;
}

uint64_t sub_1A92DD234()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1A92DD258()
{
  return 1635018093;
}

uint64_t sub_1A92DD268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A92DF32C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92DD28C()
{
  sub_1A92DE098();
  return sub_1A93F945C();
}

uint64_t sub_1A92DD2B4()
{
  sub_1A92DE098();
  return sub_1A93F9468();
}

uint64_t ServerSyncResponse.Episode.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 40);
  v19 = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v16 = *(_QWORD *)(v1 + 56);
  v17 = v9;
  v15 = *(unsigned __int8 *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE098();
  sub_1A93F93D8();
  LOBYTE(v24) = 0;
  v10 = v22;
  sub_1A93F9000();
  if (!v10)
  {
    v11 = v16;
    v12 = v17;
    LOBYTE(v24) = 1;
    sub_1A93F9000();
    LOBYTE(v24) = 2;
    sub_1A93F9000();
    v24 = v12;
    v23 = 3;
    type metadata accessor for PodcastEpisodeAttributes(0);
    sub_1A9066CA8(&qword_1EEABDA08, type metadata accessor for PodcastEpisodeAttributes, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes);
    sub_1A93F8FE8();
    v24 = v11;
    v23 = 4;
    type metadata accessor for PodcastEpisodeRelationships();
    sub_1A9066CA8(&qword_1EEABDA10, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships, (uint64_t)&protocol conformance descriptor for PodcastEpisodeRelationships);
    sub_1A93F8FE8();
    LOBYTE(v24) = v15;
    v23 = 5;
    sub_1A92DE0DC();
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void ServerSyncResponse.Episode.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE098();
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v34) = 0;
    v9 = sub_1A93F8F4C();
    v11 = v10;
    LOBYTE(v34) = 1;
    swift_bridgeObjectRetain();
    v29 = sub_1A93F8F4C();
    v30 = v9;
    LOBYTE(v34) = 2;
    v32 = v12;
    swift_bridgeObjectRetain();
    v13 = sub_1A93F8F4C();
    v31 = v14;
    v27 = v13;
    type metadata accessor for PodcastEpisodeAttributes(0);
    v33 = 3;
    sub_1A9066CA8(&qword_1ED2A3178, type metadata accessor for PodcastEpisodeAttributes, (uint64_t)&protocol conformance descriptor for PodcastEpisodeAttributes);
    swift_bridgeObjectRetain();
    v28 = 0;
    sub_1A93F8F34();
    v15 = (uint64_t)v34;
    type metadata accessor for PodcastEpisodeRelationships();
    v33 = 4;
    sub_1A9066CA8(qword_1ED2A3420, (uint64_t (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships, (uint64_t)&protocol conformance descriptor for PodcastEpisodeRelationships);
    swift_retain();
    sub_1A93F8F34();
    v26 = v15;
    v16 = v34;
    v33 = 5;
    sub_1A92DE120();
    v25 = v16;
    v17 = v16;
    sub_1A93F8F34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v18 = (char)v34;
    *(_QWORD *)a2 = v30;
    *(_QWORD *)(a2 + 8) = v11;
    v19 = v32;
    *(_QWORD *)(a2 + 16) = v29;
    *(_QWORD *)(a2 + 24) = v19;
    v20 = v26;
    v21 = v17;
    v22 = v31;
    *(_QWORD *)(a2 + 32) = v27;
    *(_QWORD *)(a2 + 40) = v22;
    v23 = v25;
    *(_QWORD *)(a2 + 48) = v20;
    *(_QWORD *)(a2 + 56) = v23;
    *(_BYTE *)(a2 + 64) = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1A92DD9DC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ServerSyncResponse.Episode.init(from:)(a1, a2);
}

uint64_t sub_1A92DD9F0(_QWORD *a1)
{
  return ServerSyncResponse.Episode.encode(to:)(a1);
}

uint64_t ServerSyncResponse.next.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.meta.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_WORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ServerSyncResponse.data.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 ServerSyncResponse.init(next:meta:data:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v5;
  __n128 result;

  v5 = *(_WORD *)(a3 + 16);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_WORD *)(a5 + 32) = v5;
  result = *(__n128 *)(a3 + 24);
  *(__n128 *)(a5 + 40) = result;
  *(_QWORD *)(a5 + 56) = a4;
  return result;
}

uint64_t sub_1A92DDA94()
{
  char *v0;

  return *(_QWORD *)&aNext_2[8 * *v0];
}

uint64_t sub_1A92DDAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A92DF594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92DDAD0()
{
  sub_1A92DE164();
  return sub_1A93F945C();
}

uint64_t sub_1A92DDAF8()
{
  sub_1A92DE164();
  return sub_1A93F9468();
}

uint64_t ServerSyncResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v7;
  v25 = *(unsigned __int8 *)(v1 + 32);
  v15 = *(unsigned __int8 *)(v1 + 33);
  v8 = *(_QWORD *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v14 = v8;
  v12 = *(_QWORD *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE164();
  sub_1A93F93D8();
  LOBYTE(v19) = 0;
  v9 = v18;
  sub_1A93F8FB8();
  if (!v9)
  {
    v19 = v17;
    v20 = v16;
    v21 = v25;
    v22 = v15;
    v10 = v12;
    v23 = v14;
    v24 = v13;
    v26 = 1;
    sub_1A92DE1A8();
    sub_1A93F9030();
    v19 = v10;
    v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92F8);
    sub_1A92DE274(&qword_1EEABDA30, (uint64_t (*)(void))sub_1A92DE1EC, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerSyncResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A92DE164();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v25) = 0;
  v9 = sub_1A93F8F04();
  v11 = v10;
  v24 = v9;
  v32 = 1;
  sub_1A92DE230();
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v12 = v26;
  v20 = v25;
  v31 = v27;
  v19 = v28;
  v13 = v30;
  v18 = v29;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92F8);
  v32 = 2;
  sub_1A92DE274(&qword_1ED2A9300, (uint64_t (*)(void))sub_1A92DE2DC, MEMORY[0x1E0DEAF40]);
  v23 = v12;
  swift_bridgeObjectRetain();
  v22 = v13;
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v23;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v15;
  *(_BYTE *)(a2 + 32) = v31;
  *(_BYTE *)(a2 + 33) = v19;
  v16 = v22;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92DDFE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerSyncResponse.init(from:)(a1, a2);
}

uint64_t sub_1A92DDFFC(_QWORD *a1)
{
  return ServerSyncResponse.encode(to:)(a1);
}

unint64_t sub_1A92DE010()
{
  unint64_t result;

  result = qword_1ED2A6A10;
  if (!qword_1ED2A6A10)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B83C, &type metadata for ServerSyncResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A10);
  }
  return result;
}

unint64_t sub_1A92DE054()
{
  unint64_t result;

  result = qword_1EEABD9F0;
  if (!qword_1EEABD9F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B7EC, &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABD9F0);
  }
  return result;
}

unint64_t sub_1A92DE098()
{
  unint64_t result;

  result = qword_1ED2A6A30;
  if (!qword_1ED2A6A30)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B79C, &type metadata for ServerSyncResponse.Episode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A30);
  }
  return result;
}

unint64_t sub_1A92DE0DC()
{
  unint64_t result;

  result = qword_1EEABDA18;
  if (!qword_1EEABDA18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Episode.Meta, &type metadata for ServerSyncResponse.Episode.Meta);
    atomic_store(result, (unint64_t *)&qword_1EEABDA18);
  }
  return result;
}

unint64_t sub_1A92DE120()
{
  unint64_t result;

  result = qword_1ED2A6A48;
  if (!qword_1ED2A6A48)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Episode.Meta, &type metadata for ServerSyncResponse.Episode.Meta);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A48);
  }
  return result;
}

unint64_t sub_1A92DE164()
{
  unint64_t result;

  result = qword_1ED2A69F8;
  if (!qword_1ED2A69F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B74C, &type metadata for ServerSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A69F8);
  }
  return result;
}

unint64_t sub_1A92DE1A8()
{
  unint64_t result;

  result = qword_1EEABDA28;
  if (!qword_1EEABDA28)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Meta, &type metadata for ServerSyncResponse.Meta);
    atomic_store(result, (unint64_t *)&qword_1EEABDA28);
  }
  return result;
}

unint64_t sub_1A92DE1EC()
{
  unint64_t result;

  result = qword_1EEABDA38;
  if (!qword_1EEABDA38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Episode, &type metadata for ServerSyncResponse.Episode);
    atomic_store(result, (unint64_t *)&qword_1EEABDA38);
  }
  return result;
}

unint64_t sub_1A92DE230()
{
  unint64_t result;

  result = qword_1ED2A6A28;
  if (!qword_1ED2A6A28)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Meta, &type metadata for ServerSyncResponse.Meta);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A28);
  }
  return result;
}

uint64_t sub_1A92DE274(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A92F8);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A92DE2DC()
{
  unint64_t result;

  result = qword_1ED2A6A50;
  if (!qword_1ED2A6A50)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerSyncResponse.Episode, &type metadata for ServerSyncResponse.Episode);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A50);
  }
  return result;
}

uint64_t destroy for ServerSyncResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServerSyncResponse()
{
  return &type metadata for ServerSyncResponse;
}

uint64_t destroy for ServerSyncResponse.Meta()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Meta(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Meta(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Meta()
{
  return &type metadata for ServerSyncResponse.Meta;
}

void destroy for ServerSyncResponse.Episode(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

}

uint64_t initializeWithCopy for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Episode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Episode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode()
{
  return &type metadata for ServerSyncResponse.Episode;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Episode.Meta(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Episode.Meta(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92DEA88 + 4 * byte_1A941B26F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92DEABC + 4 * byte_1A941B26A[v4]))();
}

uint64_t sub_1A92DEABC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEAC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92DEACCLL);
  return result;
}

uint64_t sub_1A92DEAD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92DEAE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92DEAE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEAEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.Meta()
{
  return &type metadata for ServerSyncResponse.Episode.Meta;
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92DEB54 + 4 * byte_1A941B279[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92DEB88 + 4 * byte_1A941B274[v4]))();
}

uint64_t sub_1A92DEB88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEB90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92DEB98);
  return result;
}

uint64_t sub_1A92DEBA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92DEBACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92DEBB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEBB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.CodingKeys()
{
  return &type metadata for ServerSyncResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Episode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A92DEC20 + 4 * byte_1A941B283[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A92DEC54 + 4 * byte_1A941B27E[v4]))();
}

uint64_t sub_1A92DEC54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEC5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92DEC64);
  return result;
}

uint64_t sub_1A92DEC70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92DEC78);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A92DEC7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEC84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Episode.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Episode.Meta.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92DECE0 + 4 * byte_1A941B288[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92DED00 + 4 * byte_1A941B28D[v4]))();
}

_BYTE *sub_1A92DECE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92DED00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92DED08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92DED10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92DED18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92DED20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.Meta.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Meta.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A92DED88 + 4 * byte_1A941B297[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A92DEDBC + 4 * byte_1A941B292[v4]))();
}

uint64_t sub_1A92DEDBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEDC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92DEDCCLL);
  return result;
}

uint64_t sub_1A92DEDD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92DEDE0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A92DEDE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92DEDEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Meta.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Meta.CodingKeys;
}

unint64_t sub_1A92DEE0C()
{
  unint64_t result;

  result = qword_1EEABDA40;
  if (!qword_1EEABDA40)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B4FC, &type metadata for ServerSyncResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA40);
  }
  return result;
}

unint64_t sub_1A92DEE54()
{
  unint64_t result;

  result = qword_1EEABDA48;
  if (!qword_1EEABDA48)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B5B4, &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA48);
  }
  return result;
}

unint64_t sub_1A92DEE9C()
{
  unint64_t result;

  result = qword_1EEABDA50;
  if (!qword_1EEABDA50)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B66C, &type metadata for ServerSyncResponse.Episode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA50);
  }
  return result;
}

unint64_t sub_1A92DEEE4()
{
  unint64_t result;

  result = qword_1EEABDA58;
  if (!qword_1EEABDA58)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B724, &type metadata for ServerSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA58);
  }
  return result;
}

unint64_t sub_1A92DEF2C()
{
  unint64_t result;

  result = qword_1ED2A6A08;
  if (!qword_1ED2A6A08)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B694, &type metadata for ServerSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A08);
  }
  return result;
}

unint64_t sub_1A92DEF74()
{
  unint64_t result;

  result = qword_1ED2A6A00;
  if (!qword_1ED2A6A00)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B6BC, &type metadata for ServerSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A00);
  }
  return result;
}

unint64_t sub_1A92DEFBC()
{
  unint64_t result;

  result = qword_1ED2A6A40;
  if (!qword_1ED2A6A40)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B5DC, &type metadata for ServerSyncResponse.Episode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A40);
  }
  return result;
}

unint64_t sub_1A92DF004()
{
  unint64_t result;

  result = qword_1ED2A6A38;
  if (!qword_1ED2A6A38)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B604, &type metadata for ServerSyncResponse.Episode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A38);
  }
  return result;
}

unint64_t sub_1A92DF04C()
{
  unint64_t result;

  result = qword_1EEABDA60;
  if (!qword_1EEABDA60)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B524, &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA60);
  }
  return result;
}

unint64_t sub_1A92DF094()
{
  unint64_t result;

  result = qword_1EEABDA68;
  if (!qword_1EEABDA68)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B54C, &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDA68);
  }
  return result;
}

unint64_t sub_1A92DF0DC()
{
  unint64_t result;

  result = qword_1ED2A6A20;
  if (!qword_1ED2A6A20)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B46C, &type metadata for ServerSyncResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A20);
  }
  return result;
}

unint64_t sub_1A92DF124()
{
  unint64_t result;

  result = qword_1ED2A6A18;
  if (!qword_1ED2A6A18)
  {
    result = MEMORY[0x1AF414014](&unk_1A941B494, &type metadata for ServerSyncResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A6A18);
  }
  return result;
}

uint64_t sub_1A92DF168(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x636E79537478656ELL && a2 == 0xED00006E656B6F54;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A944C920 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7465736572 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A92DF32C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A92DF594(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047342 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t MetricsPageContext.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsPageContext.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD00000000000001ELL;
}

unint64_t sub_1A92DF78C()
{
  return MetricsPageContext.debugDescription.getter();
}

uint64_t MetricsPageContext.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsPageContext.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageContext.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageContext.bookmarks.getter()
{
  return 0x6B72616D6B6F6F42;
}

uint64_t static MetricsPageContext.browse.getter()
{
  return 0x6573776F7242;
}

uint64_t static MetricsPageContext.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsPageContext.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsPageContext.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsPageContext.home.getter()
{
  return 1701670728;
}

uint64_t static MetricsPageContext.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsPageContext.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsPageContext.listen.getter()
{
  return 0x6E657473694CLL;
}

uint64_t static MetricsPageContext.nowPlaying.getter()
{
  return 0x6979616C50776F4ELL;
}

uint64_t static MetricsPageContext.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsPageContext.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageContext.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageContext.station.getter()
{
  return 0x6E6F6974617453;
}

uint64_t static MetricsPageContext.topCharts.getter()
{
  return 0x6F546E7265646F4DLL;
}

unint64_t sub_1A92DFAA4()
{
  unint64_t result;

  result = qword_1EEABDA70;
  if (!qword_1EEABDA70)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsPageContext, &type metadata for MetricsPageContext);
    atomic_store(result, (unint64_t *)&qword_1EEABDA70);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageContext()
{
  return &type metadata for MetricsPageContext;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.resolvedContext(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _OWORD v16[2];
  _OWORD v17[2];
  uint64_t v18;

  v5 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(_QWORD *)(v2 + 88);
  v9 = *(_OWORD *)(v2 + 72);
  v16[0] = *(_OWORD *)(v2 + 56);
  v16[1] = v9;
  v17[0] = v16[0];
  v17[1] = v9;
  v18 = v8;
  sub_1A9064630(v2, (uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  sub_1A9116174((uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  v12 = (_QWORD *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v12 = a1;
  v12[1] = a2;
  v13 = *(void **)&v16[0];
  swift_bridgeObjectRetain();
  swift_retain();
  v14 = v13;
  swift_bridgeObjectRetain();
  sub_1A922A590((uint64_t)v17, (uint64_t)sub_1A9226DE0, v11);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL static PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.trackIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.contentItemIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.privateListening.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.siriAssetInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void *PodcastsMediaLibrary.PlaybackQueueContext.sharedAccount.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.userContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  id v6;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_OWORD *)(v1 + 56);
  v4 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  v5 = (void *)v3;
  swift_bridgeObjectRetain();
  v6 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.intent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return sub_1A9062170(v1 + *(int *)(v3 + 44), a1, &qword_1EEABDA78);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.restorableSnapshot.getter()
{
  type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.initialItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return sub_1A9062170(v1 + *(int *)(v3 + 56), a1, &qword_1ED2AAF68);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.initialItemPlayheadOverride.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() + 60));
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.sourceEvent.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.mediaQueryIdentifiers.getter()
{
  type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.mediaQueryInitialIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() + 72));
}

void PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:)(_QWORD *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v10;

  v10 = 0;
  PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &v10);
}

void PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:)(_QWORD *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v36;

  v36 = *a11;
  v17 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v18 = v17[13];
  type metadata accessor for AccountResolver();
  v19 = swift_allocObject();
  v20 = v19 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v21 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v19 + v22) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a9 + v18) = v19;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 16) = a2;
  swift_bridgeObjectRetain();
  v23 = a3;
  if (!a3)
    v23 = sub_1A92E20B4(a1);
  *(_QWORD *)(a9 + 56) = v23;
  *(_QWORD *)(a9 + 64) = a6;
  *(_QWORD *)(a9 + 72) = a7;
  *(_QWORD *)(a9 + 80) = a4;
  *(_QWORD *)(a9 + 88) = a5;
  *(_QWORD *)(a9 + 40) = 0;
  *(_QWORD *)(a9 + 48) = 0;
  v24 = a9 + v17[11];
  v25 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  v26 = a9 + v17[14];
  v27 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = a3;
  v29 = sub_1A92E240C((uint64_t)a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + 8) = v29;
  *(_BYTE *)(a9 + v17[16]) = v36;
  v30 = a9 + v17[15];
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;

  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a9 + v17[12]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a9 + v17[17]) = v31;
  v32 = a9 + v17[18];
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
}

void PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:initialItemPlayheadOverride:)(_QWORD *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12, char a13)
{
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v38;

  v38 = *a11;
  v19 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v20 = v19[13];
  type metadata accessor for AccountResolver();
  v21 = swift_allocObject();
  v22 = v21 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v23 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v21 + v24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a9 + v20) = v21;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 16) = a2;
  swift_bridgeObjectRetain();
  v25 = a3;
  if (!a3)
    v25 = sub_1A92E20B4(a1);
  *(_QWORD *)(a9 + 56) = v25;
  *(_QWORD *)(a9 + 64) = a6;
  *(_QWORD *)(a9 + 72) = a7;
  *(_QWORD *)(a9 + 80) = a4;
  *(_QWORD *)(a9 + 88) = a5;
  *(_QWORD *)(a9 + 40) = 0;
  *(_QWORD *)(a9 + 48) = 0;
  v26 = a9 + v19[11];
  v27 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  v28 = a9 + v19[14];
  v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = a3;
  v31 = sub_1A92E240C((uint64_t)a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + 8) = v31;
  *(_BYTE *)(a9 + v19[16]) = v38;

  v32 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a9 + v19[12]) = MEMORY[0x1E0DEE9D8];
  v33 = a9 + v19[15];
  *(_QWORD *)v33 = a12;
  *(_BYTE *)(v33 + 8) = a13 & 1;
  *(_QWORD *)(a9 + v19[17]) = v32;
  v34 = a9 + v19[18];
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = 1;
}

unint64_t PodcastsMediaLibrary.PlaybackQueueContext.init(restorableSnapshot:privateListening:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v7 = v6[13];
  type metadata accessor for AccountResolver();
  v8 = swift_allocObject();
  v9 = v8 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v10 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v8 + v11) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a3 + v7) = v8;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a3 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + v6[12]) = a1;
  *(_QWORD *)(a3 + 88) = 0;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  v13 = a3 + v6[11];
  v14 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  v15 = a3 + v6[14];
  v16 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  result = sub_1A9113510(v12);
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + v6[16]) = 2;
  v18 = a3 + v6[15];
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 1;
  *(_QWORD *)(a3 + v6[17]) = v12;
  v19 = a3 + v6[18];
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  return result;
}

uint64_t sub_1A92E0488@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  char v41;

  v36 = a5[1];
  v37 = *a5;
  v21 = *((_QWORD *)a5 + 4);
  v41 = *a10;
  v22 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v23 = v22[13];
  type metadata accessor for AccountResolver();
  v24 = swift_allocObject();
  v25 = v24 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v26 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v24 + v27) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a9 + v23) = v24;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 16) = a2;
  *(_OWORD *)(a9 + 56) = v37;
  *(_OWORD *)(a9 + 72) = v36;
  *(_QWORD *)(a9 + 88) = v21;
  *(_QWORD *)(a9 + 24) = a6;
  *(_QWORD *)(a9 + 32) = a7;
  *(_QWORD *)(a9 + 40) = a3;
  *(_QWORD *)(a9 + 48) = a4;
  sub_1A9062170(a8, a9 + v22[11], &qword_1EEABDA78);
  v28 = a9 + v22[14];
  v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = a4;
  swift_bridgeObjectRetain();
  v31 = a3;
  v32 = sub_1A92E240C(a1);
  swift_bridgeObjectRelease();

  result = sub_1A905FD54(a8, &qword_1EEABDA78);
  *(_QWORD *)(a9 + 8) = v32;
  *(_BYTE *)(a9 + v22[16]) = v41;
  *(_QWORD *)(a9 + v22[12]) = a13;
  v34 = a9 + v22[15];
  *(_QWORD *)v34 = a11;
  *(_BYTE *)(v34 + 8) = a12 & 1;
  *(_QWORD *)(a9 + v22[17]) = a14;
  v35 = a9 + v22[18];
  *(_QWORD *)v35 = a15;
  *(_BYTE *)(v35 + 8) = a16 & 1;
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.init(intent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v5 = v4[13];
  type metadata accessor for AccountResolver();
  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v8 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v6 + v9) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a2 + v5) = v6;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
  v26[0] = 0;
  v11 = objc_msgSend(v10, sel_activeStoreAccountWithError_, v26);

  v12 = v26[0];
  if (!v11)
  {
    v13 = v12;
    v14 = (void *)sub_1A93F7128();

    swift_willThrow();
    v11 = 0;
  }
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 8) = sub_1A9113510(v15);
  *(_BYTE *)(a2 + 16) = 0;
  v16 = type metadata accessor for PlaybackIntent(0);
  sub_1A9062170(a1 + *(int *)(v16 + 24), a2 + v4[14], &qword_1ED2AAF68);
  v17 = a2 + v4[11];
  sub_1A9064630(a1, v17, type metadata accessor for PlaybackIntent);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v17, 0, 1, v16);
  *(_BYTE *)(a2 + v4[16]) = 0;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1A91EAA64(v18);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
    v21 = *(_QWORD *)(v19 + 32);
  else
    v21 = 0;
  v22 = v20 == 0;
  swift_bridgeObjectRelease();
  v23 = a2 + v4[15];
  *(_QWORD *)v23 = v21;
  *(_BYTE *)(v23 + 8) = v22;
  *(_QWORD *)(a2 + v4[12]) = v15;
  result = sub_1A9064714(a1, type metadata accessor for PlaybackIntent);
  *(_QWORD *)(a2 + v4[17]) = v15;
  v25 = a2 + v4[18];
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.init(mediaQueryIdentifiers:initialIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v9 = v8[13];
  type metadata accessor for AccountResolver();
  v10 = swift_allocObject();
  v11 = v10 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  v12 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(_QWORD *)(v10 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFE920]), sel_init);
  *(_QWORD *)(a4 + v9) = v10;
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
  v27[0] = 0;
  v15 = objc_msgSend(v14, sel_activeStoreAccountWithError_, v27);

  v16 = v27[0];
  if (!v15)
  {
    v17 = v16;
    v18 = (void *)sub_1A93F7128();

    swift_willThrow();
    v15 = 0;
  }
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = v15;
  *(_QWORD *)(a4 + 24) = 0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a4 + 8) = sub_1A9113510(v19);
  *(_BYTE *)(a4 + 16) = 0;
  v20 = a4 + v8[14];
  v21 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = a4 + v8[11];
  v23 = type metadata accessor for PlaybackIntent(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_BYTE *)(a4 + v8[16]) = 0;
  v25 = a4 + v8[15];
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  *(_QWORD *)(a4 + v8[12]) = v19;
  *(_QWORD *)(a4 + v8[17]) = a1;
  v26 = a4 + v8[18];
  *(_QWORD *)v26 = a2;
  *(_BYTE *)(v26 + 8) = a3 & 1;
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.shouldSyncPlaybackPosition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char v6;
  uint64_t v8;

  v1 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 40);
  sub_1A9064630(v0, (uint64_t)v3, v5);
  if (v4)
    v6 = v3[16] ^ 1;
  else
    v6 = 0;
  sub_1A9064714((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  return v6 & 1;
}

void *PodcastsMediaLibrary.PlaybackQueueContext.accountForPlaybackPosition.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t sub_1A92E0C40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void *v48;
  id v49;
  uint64_t v50;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  _QWORD *v59;
  unsigned int v60;
  void *v61;
  char *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v66 = a4;
  v67 = a3;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB248);
  MEMORY[0x1E0C80A78](v64);
  v65 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
  MEMORY[0x1E0C80A78](v7);
  v68 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)a1;
  v12 = *(void **)(a1 + 8);
  v14 = *(unsigned __int8 *)(a1 + 16);
  v63 = *(unsigned __int8 *)(a1 + 17);
  if ((v63 & 1) != 0)
  {
    sub_1A922C758(v13);
    if (qword_1EEAB6D68 != -1)
      swift_once();
    v62 = v11;
    v15 = sub_1A93F7698();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EEABA690);
    sub_1A922C758(v13);
    sub_1A922C758(v13);
    v16 = sub_1A93F7674();
    v17 = sub_1A93F87B4();
    v18 = os_log_type_enabled(v16, v17);
    v61 = v12;
    v60 = v14;
    if (v18)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v58 = v19 + 4;
      sub_1A92E9664();
      swift_allocError();
      v20 = v14;
      *v21 = v13;
      sub_1A922C758(v13);
      v22 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v70 = v22;
      sub_1A93F8AA8();
      v23 = v59;
      *v59 = v22;
      sub_1A92E9638(v13, v12, v20, 1);
      sub_1A92E9638(v13, v12, v20, 1);
      _os_log_impl(&dword_1A904E000, v16, v17, "Error resolving PlaybackQueueContext: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v23, -1, -1);
      MEMORY[0x1AF41411C](v19, -1, -1);
    }
    else
    {
      sub_1A92E9638(v13, v12, v14, 1);
      sub_1A92E9638(v13, v12, v14, 1);
    }

    v38 = *(_QWORD *)a2;
    LODWORD(v59) = *(unsigned __int8 *)(a2 + 16);
    v39 = *(_QWORD *)(a2 + 88);
    v54 = *(_OWORD *)(a2 + 56);
    v55 = *(_OWORD *)(a2 + 72);
    v70 = v54;
    v71 = v55;
    v72 = v39;
    v40 = a2 + v9[11];
    v41 = *(_QWORD *)(a2 + 32);
    v58 = *(uint8_t **)(a2 + 24);
    sub_1A9062170(v40, v68, &qword_1EEABDA78);
    v42 = v9[15];
    v69 = *(_BYTE *)(a2 + v9[16]);
    v57 = *(_QWORD *)(a2 + v42);
    v43 = *(_QWORD *)(a2 + v9[12]);
    v44 = v9[18];
    v45 = *(_QWORD *)(a2 + v9[17]);
    LODWORD(v56) = *(unsigned __int8 *)(a2 + v42 + 8);
    v46 = *(_QWORD *)(a2 + v44);
    v47 = *(_BYTE *)(a2 + v44 + 8);
    v48 = (void *)v54;
    swift_bridgeObjectRetain();
    v49 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = v47;
    v36 = (uint64_t)v62;
    sub_1A92E0488(v38, (char)v59, 0, 0, &v70, (uint64_t)v58, v41, v68, (uint64_t)v62, &v69, v57, v56, v43, v45, v46, v52);
    v12 = v61;
    v25 = v60;
  }
  else
  {
    v24 = *(_QWORD *)a2;
    v25 = v14;
    v26 = *(_QWORD *)(a2 + 88);
    v53 = *(_OWORD *)(a2 + 56);
    v54 = *(_OWORD *)(a2 + 72);
    v70 = v53;
    v71 = v54;
    v72 = v26;
    v62 = *(char **)(a2 + 24);
    v57 = *(_QWORD *)(a2 + 32);
    sub_1A9062170(a2 + v9[11], v68, &qword_1EEABDA78);
    v27 = v9[15];
    v69 = *(_BYTE *)(a2 + v9[16]);
    v59 = *(_QWORD **)(a2 + v27);
    LODWORD(v58) = *(unsigned __int8 *)(a2 + v27 + 8);
    v28 = *(_QWORD *)(a2 + v9[12]);
    v29 = v9[18];
    v30 = *(_QWORD *)(a2 + v9[17]);
    v56 = *(_QWORD *)(a2 + v29);
    LODWORD(v55) = *(unsigned __int8 *)(a2 + v29 + 8);
    sub_1A92E960C(v13, v12, v25, 0);
    v31 = v11;
    v32 = (void *)v53;
    swift_bridgeObjectRetain();
    v33 = v13;
    v34 = v12;
    v35 = v32;
    v36 = (uint64_t)v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A92E0488(v24, v25 & 1, v13, v12, &v70, (uint64_t)v62, v37, v68, v36, &v69, (uint64_t)v59, (char)v58, v28, v30, v56, v55);
  }
  v50 = v65;
  sub_1A9064630(v36, v65, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  swift_storeEnumTagMultiPayload();
  v67(v50);
  sub_1A92E9638(v13, v12, v25, v63);
  sub_1A905FD54(v50, &qword_1EEABB248);
  return sub_1A9064714(v36, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
}

uint64_t sub_1A92E1228()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);

  v1 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = (char *)v2 + *(int *)(v1 + 44);
  v4 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    sub_1A912C6B4(*(_QWORD *)v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), v3[32]);
    if (v3[120] != 2)
      sub_1A90531EC(*((_QWORD *)v3 + 5), *((_QWORD *)v3 + 6), *((_QWORD *)v3 + 7), *((_QWORD *)v3 + 8), *((_QWORD *)v3 + 9), *((_QWORD *)v3 + 10), *((_QWORD *)v3 + 11), *((_QWORD *)v3 + 12), v3[104]);
    v5 = &v3[*(int *)(v4 + 24)];
    v6 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = &v5[v6[12]];
      v8 = sub_1A93F726C();
      v27 = *(_QWORD *)(v8 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (!v28(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v9 = &v5[v6[16]];
      if (!v28(v9, 1, v8))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v8);
      v26 = v8;
      swift_bridgeObjectRelease();
      swift_release();
      v10 = &v5[v6[20]];
      v11 = sub_1A93F738C();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = &v5[v6[36]];
      if (!v28(v13, 1, v26))
        (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  v14 = (char *)v2 + *(int *)(v1 + 56);
  v15 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = &v14[v15[12]];
    v17 = sub_1A93F726C();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (!v19(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    swift_bridgeObjectRelease();
    v20 = &v14[v15[16]];
    if (!v19(v20, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_bridgeObjectRelease();
    swift_release();
    v21 = &v14[v15[20]];
    v22 = sub_1A93F738C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = &v14[v15[36]];
    if (!v19(v24, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t static PodcastsMediaLibrary.PlaybackQueueContext.supportsTrackIdentifier(trackIdentifier:)(uint64_t a1, void *a2)
{
  Swift::String v4;
  uint64_t v5;
  uint64_t v7;

  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  URLTrackIdentifier.init(string:)(v4);
  if (!v5)
  {
    LOBYTE(a1) = v7 != 0;
    if (v7)
      swift_bridgeObjectRelease();
  }
  return a1 & 1;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  __int128 v98;
  _BYTE v99[88];
  __int16 v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  __int16 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for PlaybackIntent(0);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v83 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v83 - v16;
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v92 = (int *)v9;
  v18 = sub_1A93F7698();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EEABA690);
  sub_1A9064630(v2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  *(_QWORD *)&v93 = v19;
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  if (os_log_type_enabled(v20, v21))
  {
    v88 = v8;
    v22 = swift_slowAlloc();
    v87 = v6;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v89 = v2;
    v25 = v24;
    *(_QWORD *)&v94 = v24;
    *(_DWORD *)v23 = 136315138;
    sub_1A9064630((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    v26 = sub_1A93F8094();
    *(_QWORD *)&v105 = sub_1A906436C(v26, v27, (uint64_t *)&v94);
    v8 = v88;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    sub_1A9064714((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    _os_log_impl(&dword_1A904E000, v20, v21, "􀒖 Creating request from context: %s", v23, 0xCu);
    swift_arrayDestroy();
    v28 = v25;
    v2 = v89;
    MEMORY[0x1AF41411C](v28, -1, -1);
    v29 = v23;
    v6 = v87;
    MEMORY[0x1AF41411C](v29, -1, -1);
  }
  else
  {
    sub_1A9064714((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  }

  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v30 = sub_1A93F7674();
    v31 = sub_1A93F87B4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1A904E000, v30, v31, "􀒖 Using track identifiers", v32, 2u);
      MEMORY[0x1AF41411C](v32, -1, -1);
    }

    sub_1A9064630(v2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    sub_1A91D90A8(*(_QWORD **)v11, (uint64_t)&v105);
    v33 = v108;
    if (v108 != 255)
    {
      v35 = v106;
      v34 = v107;
      v93 = v105;
      v36 = *((_QWORD *)v11 + 4);
      v37 = (void *)*((_QWORD *)v11 + 5);
      v38 = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
      v39 = v37;
      sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
      v94 = v93;
      v95 = v35;
      v96 = v34;
      v97 = v33;
      *(_QWORD *)&v98 = v37;
      *((_QWORD *)&v98 + 1) = v38;
      *(_QWORD *)v99 = v36;
      memset(&v99[8], 0, 80);
      v101 = 0;
      v100 = 2;
      v102 = 0;
      v103 = 0;
      v104 = 2;
      nullsub_1(&v94, v40, v41, v42);
LABEL_18:
      v52 = a1;
      return sub_1A916D818((uint64_t)&v94, v52);
    }
    sub_1A9064714((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
LABEL_17:
    sub_1A912AC30((uint64_t)&v94);
    goto LABEL_18;
  }
  v43 = v92;
  sub_1A9062170(v2 + v92[11], (uint64_t)v6, &qword_1EEABDA78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v6, 1, v91) != 1)
  {
    v92 = (int *)a1;
    sub_1A9116174((uint64_t)v6, (uint64_t)v8, type metadata accessor for PlaybackIntent);
    v53 = sub_1A93F7674();
    v54 = sub_1A93F87B4();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1A904E000, v53, v54, "􀒖 Using intent", v55, 2u);
      MEMORY[0x1AF41411C](v55, -1, -1);
    }

    v56 = *((_QWORD *)v8 + 1);
    v89 = *(_QWORD *)v8;
    v88 = (char *)v56;
    v57 = *((_QWORD *)v8 + 3);
    v87 = (char *)*((_QWORD *)v8 + 2);
    v86 = v57;
    v58 = *((_QWORD *)v8 + 5);
    v84 = *((_QWORD *)v8 + 6);
    v59 = *((_QWORD *)v8 + 7);
    v60 = *((_QWORD *)v8 + 8);
    v61 = *((_QWORD *)v8 + 10);
    v83 = *((_QWORD *)v8 + 9);
    v62 = *((_QWORD *)v8 + 11);
    v63 = *((_QWORD *)v8 + 12);
    v64 = *((_QWORD *)v8 + 13);
    v90 = *((_QWORD *)v8 + 14);
    v65 = v90;
    LODWORD(v91) = v8[122];
    LODWORD(v93) = *((unsigned __int16 *)v8 + 60);
    v66 = v93;
    v67 = v8[32];
    v85 = v67;
    sub_1A912C880(v89, v56, (uint64_t)v87, v57, v67);
    v82 = v66;
    v81 = v65;
    v68 = v84;
    v69 = v83;
    sub_1A912C8E4(v58, v84, v59, v60, v83, v61, v62, v63, v64, v81, v82);
    sub_1A9064714((uint64_t)v8, type metadata accessor for PlaybackIntent);
    *(_QWORD *)&v94 = v89;
    *((_QWORD *)&v94 + 1) = v88;
    v95 = (uint64_t)v87;
    v96 = v86;
    v97 = v85;
    v98 = 0uLL;
    *(_QWORD *)v99 = 0;
    *(_QWORD *)&v99[8] = v58;
    *(_QWORD *)&v99[16] = v68;
    *(_QWORD *)&v99[24] = v59;
    *(_QWORD *)&v99[32] = v60;
    *(_QWORD *)&v99[40] = v69;
    *(_QWORD *)&v99[48] = v61;
    *(_QWORD *)&v99[56] = v62;
    *(_QWORD *)&v99[64] = v63;
    *(_QWORD *)&v99[72] = v64;
    *(_QWORD *)&v99[80] = v90;
    v101 = v91;
    v100 = v93;
    v102 = 0;
    v103 = 0;
    v104 = 2;
    nullsub_1(&v94, v70, v71, v72);
    v52 = (uint64_t)v92;
    return sub_1A916D818((uint64_t)&v94, v52);
  }
  sub_1A905FD54((uint64_t)v6, &qword_1EEABDA78);
  v44 = v43[12];
  if (*(_QWORD *)(*(_QWORD *)(v2 + v44) + 16))
  {
    v45 = sub_1A93F7674();
    v46 = sub_1A93F87B4();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1A904E000, v45, v46, "􀒖 Using restorable snapshot", v47, 2u);
      MEMORY[0x1AF41411C](v47, -1, -1);
    }

    v94 = *(unint64_t *)(v2 + v44);
    v96 = 0;
    v95 = 0;
    v51 = 5;
  }
  else
  {
    v74 = v43[17];
    if (!*(_QWORD *)(*(_QWORD *)(v2 + v74) + 16))
      goto LABEL_17;
    v75 = sub_1A93F7674();
    v76 = sub_1A93F87B4();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      _os_log_impl(&dword_1A904E000, v75, v76, "􀒖 Using identifiers from media query", v77, 2u);
      MEMORY[0x1AF41411C](v77, -1, -1);
    }

    v78 = v2 + v43[18];
    v79 = *(_QWORD *)v78;
    v80 = *(unsigned __int8 *)(v78 + 8);
    *(_QWORD *)&v94 = *(_QWORD *)(v2 + v74);
    *((_QWORD *)&v94 + 1) = v79;
    v95 = v80;
    v96 = 0;
    v51 = 6;
  }
  v97 = v51;
  v98 = 0u;
  memset(v99, 0, sizeof(v99));
  v101 = 0;
  v100 = 2;
  v102 = 0;
  v103 = 0;
  v104 = 2;
  nullsub_1(&v94, v48, v49, v50);
  sub_1A916D818((uint64_t)&v94, a1);
  return swift_bridgeObjectRetain();
}

id sub_1A92E20B4(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _QWORD v31[4];

  if (!a1[2])
    return 0;
  v1 = a1[4];
  v2 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  URLTrackIdentifier.init(string:)(v3);
  if (v4)
  {

    return 0;
  }
  if (!v31[0])
    return 0;
  if (!*(_QWORD *)(v31[0] + 16))
    goto LABEL_17;
  v5 = sub_1A912E634(16);
  if ((v6 & 1) == 0)
    goto LABEL_17;
  v7 = (uint64_t *)(*(_QWORD *)(v31[0] + 56) + 16 * v5);
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain();
  result = (id)swift_bridgeObjectRelease();
  if (!v8)
    return 0;
  v11 = HIBYTE(v8) & 0xF;
  v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v8 & 0x2000000000000000) != 0 ? HIBYTE(v8) & 0xF : v9 & 0xFFFFFFFFFFFFLL))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    v15 = sub_1A92DA254(v9, v8, 10);
    v17 = v30;
    goto LABEL_53;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0)
      v14 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v14 = (unsigned __int8 *)sub_1A93F8D48();
    v15 = (uint64_t)sub_1A92DA234(v14, v12, 10);
    v17 = v16 & 1;
    goto LABEL_53;
  }
  v31[0] = v9;
  v31[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (v9 == 43)
  {
    if (!v11)
    {
LABEL_65:
      __break(1u);
      return result;
    }
    if (v11 == 1 || (BYTE1(v9) - 48) > 9u)
      goto LABEL_40;
    v15 = (BYTE1(v9) - 48);
    if (v11 != 2)
    {
      if ((BYTE2(v9) - 48) > 9u)
        goto LABEL_40;
      v15 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
      v18 = v11 - 3;
      if (v18)
      {
        v19 = (unsigned __int8 *)v31 + 3;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_40;
          v21 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_40;
          v15 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_40;
          v17 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    v17 = 0;
    goto LABEL_53;
  }
  if (v9 != 45)
  {
    if (!v11 || (v9 - 48) > 9u)
      goto LABEL_40;
    v15 = (v9 - 48);
    if (v11 != 1)
    {
      if ((BYTE1(v9) - 48) > 9u)
        goto LABEL_40;
      v15 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
      v22 = v11 - 2;
      if (v22)
      {
        v23 = (unsigned __int8 *)v31 + 2;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            goto LABEL_40;
          v25 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_40;
          v15 = v25 + v24;
          if (__OFADD__(v25, v24))
            goto LABEL_40;
          v17 = 0;
          ++v23;
          if (!--v22)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (!v11)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 == 1 || (BYTE1(v9) - 48) > 9u)
    goto LABEL_40;
  if (v11 != 2)
  {
    if ((BYTE2(v9) - 48) <= 9u)
    {
      v15 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
      v26 = v11 - 3;
      if (!v26)
        goto LABEL_52;
      v27 = (unsigned __int8 *)v31 + 3;
      while (1)
      {
        v28 = *v27 - 48;
        if (v28 > 9)
          break;
        v29 = 10 * v15;
        if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
          break;
        v15 = v29 - v28;
        if (__OFSUB__(v29, v28))
          break;
        v17 = 0;
        ++v27;
        if (!--v26)
          goto LABEL_53;
      }
    }
LABEL_40:
    v15 = 0;
    v17 = 1;
    goto LABEL_53;
  }
  v17 = 0;
  v15 = -(uint64_t)(BYTE1(v9) - 48);
LABEL_53:
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    return 0;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v15);
}

uint64_t sub_1A92E240C(uint64_t a1)
{
  uint64_t v1;
  void **v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  char v28;
  uint64_t v29;
  _BOOL8 v30;
  BOOL v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (void **)(swift_bridgeObjectRetain() + 40);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v5 = (uint64_t)*(v2 - 1);
      v4 = *v2;
      swift_bridgeObjectRetain_n();
      v6._countAndFlagsBits = v5;
      v6._object = v4;
      URLTrackIdentifier.init(string:)(v6);
      if (v7)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v44)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_1A9118FC4(0, v3[2] + 1, 1, v3);
          v9 = v3[2];
          v8 = v3[3];
          if (v9 >= v8 >> 1)
            v3 = sub_1A9118FC4((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
          v3[2] = v9 + 1;
          v10 = &v3[2 * v9];
          v10[4] = v44;
          *((_BYTE *)v10 + 40) = v46;
        }
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    v11 = v3[2];
    if (v11)
      goto LABEL_13;
LABEL_41:
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_42:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v11)
    goto LABEL_41;
LABEL_13:
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v13 = 4;
  while (1)
  {
    v14 = v3[v13];
    if (!*(_QWORD *)(v14 + 16))
      goto LABEL_15;
    swift_bridgeObjectRetain();
    v15 = sub_1A912E634(3);
    if ((v16 & 1) != 0)
    {
      v17 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v15);
      v18 = v17[1];
      if (v18)
      {
        if (*(_QWORD *)(v14 + 16))
          break;
      }
    }
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    v13 += 2;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
  v19 = *v17;
  swift_bridgeObjectRetain();
  v20 = sub_1A912E634(7);
  if ((v21 & 1) == 0 || (v22 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v20), (v23 = v22[1]) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v24 = *v22;
  if (v12[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A9094640(v19, v18);
    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    v42 = v24;
    v43 = v23;
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = *v22;
    v43 = v22[1];
    swift_bridgeObjectRetain();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45 = v12;
  v27 = sub_1A9094640(v19, v18);
  v29 = v12[2];
  v30 = (v28 & 1) == 0;
  v31 = __OFADD__(v29, v30);
  v32 = v29 + v30;
  if (!v31)
  {
    v33 = v28;
    if (v12[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v40 = v27;
        sub_1A9307F14();
        v27 = v40;
      }
    }
    else
    {
      sub_1A92FF8D0(v32, isUniquelyReferenced_nonNull_native);
      v27 = sub_1A9094640(v19, v18);
      if ((v33 & 1) != (v34 & 1))
        goto LABEL_45;
    }
    v12 = v45;
    if ((v33 & 1) != 0)
    {
      v35 = (_QWORD *)(v45[7] + 16 * v27);
      swift_bridgeObjectRelease();
      *v35 = v42;
      v35[1] = v43;
    }
    else
    {
      v45[(v27 >> 6) + 8] |= 1 << v27;
      v36 = (uint64_t *)(v45[6] + 16 * v27);
      *v36 = v19;
      v36[1] = v18;
      v37 = (_QWORD *)(v45[7] + 16 * v27);
      *v37 = v42;
      v37[1] = v43;
      v38 = v45[2];
      v31 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v31)
        goto LABEL_44;
      v45[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

unint64_t sub_1A92E27C8()
{
  unint64_t result;

  result = qword_1EEABDA80;
  if (!qword_1EEABDA80)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent, &type metadata for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent);
    atomic_store(result, (unint64_t *)&qword_1EEABDA80);
  }
  return result;
}

uint64_t _s20PlaybackQueueContextVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  id v14;
  id v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  void (*v106)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  void (*v111)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  int *v116;
  uint64_t v117;
  unsigned int (*v118)(_QWORD *, uint64_t, int *);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(char *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int (*v151)(char *, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  void (*v181)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  unsigned int (*v194)(char *, uint64_t, uint64_t);
  char *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unsigned int (*v203)(_QWORD *, uint64_t, int *);
  int *v204;
  int *v205;
  uint64_t v206;
  _QWORD *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v21 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v5;
    v7 = (void *)a2[5];
    v6 = (void *)a2[6];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v6;
    v9 = (void *)a2[7];
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v8;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a3[11];
    __dst = (_QWORD *)(a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 88) = a2[11];
    v13 = (int *)type metadata accessor for PlaybackIntent(0);
    v201 = *((_QWORD *)v13 - 1);
    v203 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v201 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v7;
    v15 = v6;
    v16 = v12;
    v17 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v203(v12, 1, v13))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v19 = a2;
      v21 = a1;
      v20 = a3;
    }
    else
    {
      v22 = *v12;
      v23 = v12[1];
      v24 = v12[2];
      v25 = v12[3];
      v26 = *((_BYTE *)v12 + 32);
      sub_1A912C880(*v12, v23, v24, v25, v26);
      *__dst = v22;
      __dst[1] = v23;
      __dst[2] = v24;
      __dst[3] = v25;
      *((_BYTE *)__dst + 32) = v26;
      v27 = __dst;
      if (*((_BYTE *)v12 + 120) == 2)
      {
        v28 = *(_OWORD *)(v12 + 11);
        *(_OWORD *)(__dst + 9) = *(_OWORD *)(v12 + 9);
        *(_OWORD *)(__dst + 11) = v28;
        *(_OWORD *)(__dst + 13) = *(_OWORD *)(v12 + 13);
        *(_DWORD *)((char *)__dst + 119) = *(_DWORD *)((char *)v12 + 119);
        v29 = *(_OWORD *)(v12 + 7);
        *(_OWORD *)(__dst + 5) = *(_OWORD *)(v12 + 5);
        *(_OWORD *)(__dst + 7) = v29;
      }
      else
      {
        v30 = v12[5];
        v31 = v12[6];
        v32 = v12[7];
        v33 = v12[8];
        v35 = v12[9];
        v34 = v12[10];
        v204 = v13;
        v36 = v12[11];
        v198 = v12[12];
        v37 = *((_BYTE *)v12 + 104);
        sub_1A90519B4(v30, v31, v32, v33, v35, v34, v36, v198, v37);
        __dst[5] = v30;
        __dst[6] = v31;
        v27 = __dst;
        __dst[7] = v32;
        __dst[8] = v33;
        __dst[9] = v35;
        __dst[10] = v34;
        __dst[11] = v36;
        v13 = v204;
        __dst[12] = v198;
        *((_BYTE *)__dst + 104) = v37;
        v16 = v12;
        *((_BYTE *)__dst + 105) = *((_BYTE *)v12 + 105);
        __dst[14] = v12[14];
        *((_BYTE *)__dst + 120) = *((_BYTE *)v12 + 120);
        *(_WORD *)((char *)__dst + 121) = *(_WORD *)((char *)v12 + 121);
      }
      v21 = a1;
      v38 = v201;
      v39 = v13[6];
      v40 = (_QWORD *)((char *)v27 + v39);
      v41 = (_QWORD *)((char *)v16 + v39);
      v42 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v43 = *((_QWORD *)v42 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v191 = v43;
        v205 = v13;
        v45 = v41[1];
        *v40 = *v41;
        v40[1] = v45;
        v46 = v41[3];
        v40[2] = v41[2];
        v40[3] = v46;
        v47 = v41[5];
        v40[4] = v41[4];
        v40[5] = v47;
        v40[6] = v41[6];
        *((_BYTE *)v40 + 56) = *((_BYTE *)v41 + 56);
        v48 = v41[8];
        *((_BYTE *)v40 + 72) = *((_BYTE *)v41 + 72);
        v40[8] = v48;
        v49 = v41[11];
        v40[10] = v41[10];
        v40[11] = v49;
        v50 = v41[13];
        v40[12] = v41[12];
        v40[13] = v50;
        v51 = v41[15];
        v40[14] = v41[14];
        v40[15] = v51;
        v52 = v42[12];
        v190 = (char *)v40 + v52;
        v192 = (char *)v41 + v52;
        v53 = sub_1A93F726C();
        v199 = *(_QWORD *)(v53 - 8);
        v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54(v192, 1, v53))
        {
          v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v190, v192, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v190, v192, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v190, 0, 1, v53);
        }
        v56 = v42[13];
        v57 = (_QWORD *)((char *)v40 + v56);
        v58 = (_QWORD *)((char *)v41 + v56);
        v59 = v58[1];
        *v57 = *v58;
        v57[1] = v59;
        *(_QWORD *)((char *)v40 + v42[14]) = *(_QWORD *)((char *)v41 + v42[14]);
        v60 = v42[15];
        v61 = (char *)v40 + v60;
        v62 = (char *)v41 + v60;
        *(_QWORD *)v61 = *(_QWORD *)v62;
        v61[8] = v62[8];
        v63 = v42[16];
        v64 = (char *)v40 + v63;
        v65 = (char *)v41 + v63;
        swift_bridgeObjectRetain();
        v194 = v54;
        v196 = v16;
        v193 = v53;
        if (v54(v65, 1, v53))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v64, v65, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v64, 0, 1, v53);
        }
        v67 = v42[17];
        v68 = (_QWORD *)((char *)v40 + v67);
        v69 = (_QWORD *)((char *)v41 + v67);
        v70 = v69[1];
        *v68 = *v69;
        v68[1] = v70;
        *(_QWORD *)((char *)v40 + v42[18]) = *(_QWORD *)((char *)v41 + v42[18]);
        *((_BYTE *)v40 + v42[19]) = *((_BYTE *)v41 + v42[19]);
        v71 = v42[20];
        v72 = (char *)v40 + v71;
        v73 = (char *)v41 + v71;
        v74 = sub_1A93F738C();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v76(v73, 1, v74))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        v78 = v42[21];
        v79 = (_QWORD *)((char *)v40 + v78);
        v80 = (_QWORD *)((char *)v41 + v78);
        v81 = v80[1];
        *v79 = *v80;
        v79[1] = v81;
        *((_BYTE *)v40 + v42[22]) = *((_BYTE *)v41 + v42[22]);
        *((_BYTE *)v40 + v42[23]) = *((_BYTE *)v41 + v42[23]);
        *((_BYTE *)v40 + v42[24]) = *((_BYTE *)v41 + v42[24]);
        *((_BYTE *)v40 + v42[25]) = *((_BYTE *)v41 + v42[25]);
        *((_BYTE *)v40 + v42[26]) = *((_BYTE *)v41 + v42[26]);
        *((_BYTE *)v40 + v42[27]) = *((_BYTE *)v41 + v42[27]);
        *((_BYTE *)v40 + v42[28]) = *((_BYTE *)v41 + v42[28]);
        *(_QWORD *)((char *)v40 + v42[29]) = *(_QWORD *)((char *)v41 + v42[29]);
        *(_QWORD *)((char *)v40 + v42[30]) = *(_QWORD *)((char *)v41 + v42[30]);
        *((_BYTE *)v40 + v42[31]) = *((_BYTE *)v41 + v42[31]);
        v82 = v42[32];
        v83 = (_QWORD *)((char *)v40 + v82);
        v84 = (_QWORD *)((char *)v41 + v82);
        v85 = v84[1];
        *v83 = *v84;
        v83[1] = v85;
        *(_QWORD *)((char *)v40 + v42[33]) = *(_QWORD *)((char *)v41 + v42[33]);
        v86 = v42[34];
        v87 = (_QWORD *)((char *)v40 + v86);
        v88 = (_QWORD *)((char *)v41 + v86);
        v89 = v88[1];
        *v87 = *v88;
        v87[1] = v89;
        v90 = v42[35];
        v91 = (_QWORD *)((char *)v40 + v90);
        v92 = (_QWORD *)((char *)v41 + v90);
        v93 = v92[1];
        *v91 = *v92;
        v91[1] = v93;
        v94 = v42[36];
        v95 = (char *)v40 + v94;
        v96 = (char *)v41 + v94;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v194(v96, 1, v193))
        {
          v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v95, v96, v193);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v95, 0, 1, v193);
        }
        v13 = v205;
        v27 = __dst;
        v38 = v201;
        v21 = a1;
        v98 = v42[37];
        v99 = (_QWORD *)((char *)v40 + v98);
        v100 = (_QWORD *)((char *)v41 + v98);
        v101 = v100[1];
        *v99 = *v100;
        v99[1] = v101;
        v102 = v42[38];
        v103 = (_QWORD *)((char *)v40 + v102);
        v104 = (_QWORD *)((char *)v41 + v102);
        v105 = v104[1];
        *v103 = *v104;
        v103[1] = v105;
        *((_BYTE *)v40 + v42[39]) = *((_BYTE *)v41 + v42[39]);
        *((_BYTE *)v40 + v42[40]) = *((_BYTE *)v41 + v42[40]);
        *((_BYTE *)v40 + v42[41]) = *((_BYTE *)v41 + v42[41]);
        *((_BYTE *)v40 + v42[42]) = *((_BYTE *)v41 + v42[42]);
        *((_BYTE *)v40 + v42[43]) = *((_BYTE *)v41 + v42[43]);
        *((_BYTE *)v40 + v42[44]) = *((_BYTE *)v41 + v42[44]);
        *((_BYTE *)v40 + v42[45]) = *((_BYTE *)v41 + v42[45]);
        v106 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v191 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106(v40, 0, 1, v42);
        v16 = v196;
      }
      *(_QWORD *)((char *)v27 + v13[7]) = *(_QWORD *)((char *)v16 + v13[7]);
      v107 = v13[8];
      v108 = (_QWORD *)((char *)v27 + v107);
      v109 = (_QWORD *)((char *)v16 + v107);
      v110 = v109[1];
      *v108 = *v109;
      v108[1] = v110;
      v111 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v38 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111(v27, 0, 1, v13);
      v19 = a2;
      v20 = a3;
    }
    v112 = v20[13];
    *(_QWORD *)(v21 + v20[12]) = *(uint64_t *)((char *)v19 + v20[12]);
    *(_QWORD *)(v21 + v112) = *(uint64_t *)((char *)v19 + v112);
    v113 = v20[14];
    v114 = (_QWORD *)(v21 + v113);
    v115 = (uint64_t *)((char *)v19 + v113);
    v116 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v117 = *((_QWORD *)v116 - 1);
    v118 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v117 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v118(v115, 1, v116))
    {
      v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
    else
    {
      v202 = v117;
      v120 = v115[1];
      *v114 = *v115;
      v114[1] = v120;
      v121 = v115[3];
      v114[2] = v115[2];
      v114[3] = v121;
      v122 = v115[5];
      v114[4] = v115[4];
      v114[5] = v122;
      v114[6] = v115[6];
      *((_BYTE *)v114 + 56) = *((_BYTE *)v115 + 56);
      v123 = v115[8];
      *((_BYTE *)v114 + 72) = *((_BYTE *)v115 + 72);
      v114[8] = v123;
      v124 = v115[11];
      v114[10] = v115[10];
      v114[11] = v124;
      v125 = v115[13];
      v114[12] = v115[12];
      v114[13] = v125;
      v126 = v115[15];
      v114[14] = v115[14];
      v114[15] = v126;
      v127 = v116[12];
      v195 = (char *)v114 + v127;
      v200 = (char *)v115 + v127;
      v128 = sub_1A93F726C();
      v206 = *(_QWORD *)(v128 - 8);
      v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v129(v200, 1, v128))
      {
        v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v195, v200, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v195, v200, v128);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v195, 0, 1, v128);
      }
      v131 = v116[13];
      v132 = (_QWORD *)((char *)v114 + v131);
      v133 = (_QWORD *)((char *)v115 + v131);
      v134 = v133[1];
      *v132 = *v133;
      v132[1] = v134;
      *(_QWORD *)((char *)v114 + v116[14]) = *(_QWORD *)((char *)v115 + v116[14]);
      v135 = v116[15];
      v136 = (char *)v114 + v135;
      v137 = (char *)v115 + v135;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v136[8] = v137[8];
      v138 = v116[16];
      v139 = (char *)v114 + v138;
      v140 = (char *)v115 + v138;
      swift_bridgeObjectRetain();
      v197 = v128;
      if (v129(v140, 1, v128))
      {
        v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v139, v140, v128);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v139, 0, 1, v128);
      }
      v142 = v116[17];
      v143 = (_QWORD *)((char *)v114 + v142);
      v144 = (_QWORD *)((char *)v115 + v142);
      v145 = v144[1];
      *v143 = *v144;
      v143[1] = v145;
      *(_QWORD *)((char *)v114 + v116[18]) = *(_QWORD *)((char *)v115 + v116[18]);
      *((_BYTE *)v114 + v116[19]) = *((_BYTE *)v115 + v116[19]);
      v146 = v116[20];
      v147 = (char *)v114 + v146;
      v148 = (char *)v115 + v146;
      v149 = sub_1A93F738C();
      v150 = *(_QWORD *)(v149 - 8);
      v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v151(v148, 1, v149))
      {
        v152 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v147, v148, v149);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v149);
      }
      v153 = v116[21];
      v154 = (_QWORD *)((char *)v114 + v153);
      v155 = (_QWORD *)((char *)v115 + v153);
      v156 = v155[1];
      *v154 = *v155;
      v154[1] = v156;
      *((_BYTE *)v114 + v116[22]) = *((_BYTE *)v115 + v116[22]);
      *((_BYTE *)v114 + v116[23]) = *((_BYTE *)v115 + v116[23]);
      *((_BYTE *)v114 + v116[24]) = *((_BYTE *)v115 + v116[24]);
      *((_BYTE *)v114 + v116[25]) = *((_BYTE *)v115 + v116[25]);
      *((_BYTE *)v114 + v116[26]) = *((_BYTE *)v115 + v116[26]);
      *((_BYTE *)v114 + v116[27]) = *((_BYTE *)v115 + v116[27]);
      *((_BYTE *)v114 + v116[28]) = *((_BYTE *)v115 + v116[28]);
      *(_QWORD *)((char *)v114 + v116[29]) = *(_QWORD *)((char *)v115 + v116[29]);
      *(_QWORD *)((char *)v114 + v116[30]) = *(_QWORD *)((char *)v115 + v116[30]);
      *((_BYTE *)v114 + v116[31]) = *((_BYTE *)v115 + v116[31]);
      v157 = v116[32];
      v158 = (_QWORD *)((char *)v114 + v157);
      v159 = (_QWORD *)((char *)v115 + v157);
      v160 = v159[1];
      *v158 = *v159;
      v158[1] = v160;
      *(_QWORD *)((char *)v114 + v116[33]) = *(_QWORD *)((char *)v115 + v116[33]);
      v161 = v116[34];
      v162 = (_QWORD *)((char *)v114 + v161);
      v163 = (_QWORD *)((char *)v115 + v161);
      v164 = v163[1];
      *v162 = *v163;
      v162[1] = v164;
      v165 = v116[35];
      v166 = (_QWORD *)((char *)v114 + v165);
      v167 = (_QWORD *)((char *)v115 + v165);
      v168 = v167[1];
      *v166 = *v167;
      v166[1] = v168;
      v169 = v116[36];
      v170 = (char *)v114 + v169;
      v171 = (char *)v115 + v169;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v129(v171, 1, v197))
      {
        v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v170, v171, v197);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v170, 0, 1, v197);
      }
      v19 = a2;
      v21 = a1;
      v173 = v116[37];
      v174 = (_QWORD *)((char *)v114 + v173);
      v175 = (_QWORD *)((char *)v115 + v173);
      v176 = v175[1];
      *v174 = *v175;
      v174[1] = v176;
      v177 = v116[38];
      v178 = (_QWORD *)((char *)v114 + v177);
      v179 = (_QWORD *)((char *)v115 + v177);
      v180 = v179[1];
      *v178 = *v179;
      v178[1] = v180;
      *((_BYTE *)v114 + v116[39]) = *((_BYTE *)v115 + v116[39]);
      *((_BYTE *)v114 + v116[40]) = *((_BYTE *)v115 + v116[40]);
      *((_BYTE *)v114 + v116[41]) = *((_BYTE *)v115 + v116[41]);
      *((_BYTE *)v114 + v116[42]) = *((_BYTE *)v115 + v116[42]);
      *((_BYTE *)v114 + v116[43]) = *((_BYTE *)v115 + v116[43]);
      *((_BYTE *)v114 + v116[44]) = *((_BYTE *)v115 + v116[44]);
      *((_BYTE *)v114 + v116[45]) = *((_BYTE *)v115 + v116[45]);
      v181 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v202 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v181(v114, 0, 1, v116);
    }
    v182 = a3[15];
    v183 = a3[16];
    v184 = v21 + v182;
    v185 = (uint64_t)v19 + v182;
    *(_QWORD *)v184 = *(_QWORD *)v185;
    *(_BYTE *)(v184 + 8) = *(_BYTE *)(v185 + 8);
    *(_BYTE *)(v21 + v183) = *((_BYTE *)v19 + v183);
    v186 = a3[18];
    *(_QWORD *)(v21 + a3[17]) = *(uint64_t *)((char *)v19 + a3[17]);
    v187 = v21 + v186;
    v188 = (uint64_t)v19 + v186;
    *(_QWORD *)v187 = *(_QWORD *)v188;
    *(_BYTE *)(v187 + 8) = *(_BYTE *)(v188 + 8);
    swift_bridgeObjectRetain();
  }
  return v21;
}

uint64_t _s20PlaybackQueueContextVwxx(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1A912C6B4(*(_QWORD *)v4, *((_QWORD *)v4 + 1), *((_QWORD *)v4 + 2), *((_QWORD *)v4 + 3), v4[32]);
    if (v4[120] != 2)
      sub_1A90531EC(*((_QWORD *)v4 + 5), *((_QWORD *)v4 + 6), *((_QWORD *)v4 + 7), *((_QWORD *)v4 + 8), *((_QWORD *)v4 + 9), *((_QWORD *)v4 + 10), *((_QWORD *)v4 + 11), *((_QWORD *)v4 + 12), v4[104]);
    v6 = &v4[*(int *)(v5 + 24)];
    v7 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = &v6[v7[12]];
      v9 = sub_1A93F726C();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (!v11(v8, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      swift_bridgeObjectRelease();
      v12 = &v6[v7[16]];
      v30 = v11;
      if (!v11(v12, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v29 = v10;
      swift_bridgeObjectRelease();
      swift_release();
      v13 = &v6[v7[20]];
      v14 = sub_1A93F738C();
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = &v6[v7[36]];
      if (!v30(v16, 1, v9))
        (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  v17 = (char *)a1 + *(int *)(a2 + 56);
  v18 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v18 - 1) + 48))(v17, 1, v18))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = &v17[v18[12]];
    v20 = sub_1A93F726C();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (!v22(v19, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    swift_bridgeObjectRelease();
    v23 = &v17[v18[16]];
    if (!v22(v23, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    swift_bridgeObjectRelease();
    swift_release();
    v24 = &v17[v18[20]];
    v25 = sub_1A93F738C();
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = &v17[v18[36]];
    if (!v22(v27, 1, v20))
      (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s20PlaybackQueueContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;
  id v13;
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  void (*v103)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v108)(_QWORD *, _QWORD, uint64_t, int *);
  int *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  int *v114;
  uint64_t v115;
  unsigned int (*v116)(_QWORD *, uint64_t, int *);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  void (*v178)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  char *v193;
  _QWORD *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  unsigned int (*v198)(char *, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int (*v202)(_QWORD *, uint64_t, int *);
  int *v203;
  int *v204;
  uint64_t v205;
  _QWORD *__dst;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v6 = *(void **)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  v8 = *(void **)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a3[11];
  __dst = (_QWORD *)(a1 + v10);
  v11 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v12 = (int *)type metadata accessor for PlaybackIntent(0);
  v200 = *((_QWORD *)v12 - 1);
  v202 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v200 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v6;
  v14 = v5;
  v15 = v11;
  v16 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v202(v11, 1, v12))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v19 = a2;
    v18 = a1;
  }
  else
  {
    v20 = *v11;
    v21 = v11[1];
    v22 = v11[2];
    v23 = v11[3];
    v24 = *((_BYTE *)v11 + 32);
    sub_1A912C880(*v11, v21, v22, v23, v24);
    *__dst = v20;
    __dst[1] = v21;
    __dst[2] = v22;
    __dst[3] = v23;
    *((_BYTE *)__dst + 32) = v24;
    v25 = __dst;
    if (*((_BYTE *)v11 + 120) == 2)
    {
      v26 = *(_OWORD *)(v11 + 11);
      *(_OWORD *)(__dst + 9) = *(_OWORD *)(v11 + 9);
      *(_OWORD *)(__dst + 11) = v26;
      *(_OWORD *)(__dst + 13) = *(_OWORD *)(v11 + 13);
      *(_DWORD *)((char *)__dst + 119) = *(_DWORD *)((char *)v11 + 119);
      v27 = *(_OWORD *)(v11 + 7);
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v11 + 5);
      *(_OWORD *)(__dst + 7) = v27;
    }
    else
    {
      v28 = v11[5];
      v29 = v11[6];
      v30 = v11[7];
      v31 = v11[8];
      v33 = v11[9];
      v32 = v11[10];
      v203 = v12;
      v34 = v11[11];
      v197 = v11[12];
      v35 = *((_BYTE *)v11 + 104);
      sub_1A90519B4(v28, v29, v30, v31, v33, v32, v34, v197, v35);
      __dst[5] = v28;
      __dst[6] = v29;
      v25 = __dst;
      __dst[7] = v30;
      __dst[8] = v31;
      __dst[9] = v33;
      __dst[10] = v32;
      __dst[11] = v34;
      v12 = v203;
      __dst[12] = v197;
      *((_BYTE *)__dst + 104) = v35;
      v15 = v11;
      *((_BYTE *)__dst + 105) = *((_BYTE *)v11 + 105);
      __dst[14] = v11[14];
      *((_BYTE *)__dst + 120) = *((_BYTE *)v11 + 120);
      *(_WORD *)((char *)__dst + 121) = *(_WORD *)((char *)v11 + 121);
    }
    v18 = a1;
    v36 = v200;
    v37 = v12[6];
    v38 = (_QWORD *)((char *)v25 + v37);
    v39 = (_QWORD *)((char *)v15 + v37);
    v40 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v41 = *((_QWORD *)v40 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v191 = v41;
      v204 = v12;
      v43 = v39[1];
      *v38 = *v39;
      v38[1] = v43;
      v44 = v39[3];
      v38[2] = v39[2];
      v38[3] = v44;
      v45 = v39[5];
      v38[4] = v39[4];
      v38[5] = v45;
      v38[6] = v39[6];
      *((_BYTE *)v38 + 56) = *((_BYTE *)v39 + 56);
      v46 = v39[8];
      *((_BYTE *)v38 + 72) = *((_BYTE *)v39 + 72);
      v38[8] = v46;
      v47 = v39[11];
      v38[10] = v39[10];
      v38[11] = v47;
      v48 = v39[13];
      v38[12] = v39[12];
      v38[13] = v48;
      v49 = v39[15];
      v38[14] = v39[14];
      v38[15] = v49;
      v50 = v40[12];
      v188 = (char *)v38 + v50;
      v187 = (char *)v39 + v50;
      v51 = sub_1A93F726C();
      v194 = *(_QWORD **)(v51 - 8);
      v52 = (unsigned int (*)(char *, uint64_t, uint64_t))v194[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v198 = v52;
      if (v52(v187, 1, v51))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v188, v187, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v194[2])(v188, v187, v51);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v194[7])(v188, 0, 1, v51);
      }
      v54 = v40[13];
      v55 = (_QWORD *)((char *)v38 + v54);
      v56 = (_QWORD *)((char *)v39 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      *(_QWORD *)((char *)v38 + v40[14]) = *(_QWORD *)((char *)v39 + v40[14]);
      v58 = v40[15];
      v59 = (char *)v38 + v58;
      v60 = (char *)v39 + v58;
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v59[8] = v60[8];
      v61 = v40[16];
      v62 = (char *)v38 + v61;
      v63 = (char *)v39 + v61;
      swift_bridgeObjectRetain();
      v192 = v15;
      v190 = v51;
      if (v52(v63, 1, v51))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v194[2])(v62, v63, v51);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v194[7])(v62, 0, 1, v51);
      }
      v65 = v40[17];
      v66 = (_QWORD *)((char *)v38 + v65);
      v67 = (_QWORD *)((char *)v39 + v65);
      v68 = v67[1];
      *v66 = *v67;
      v66[1] = v68;
      *(_QWORD *)((char *)v38 + v40[18]) = *(_QWORD *)((char *)v39 + v40[18]);
      *((_BYTE *)v38 + v40[19]) = *((_BYTE *)v39 + v40[19]);
      v69 = v40[20];
      v189 = (char *)v38 + v69;
      v70 = (char *)v39 + v69;
      v71 = sub_1A93F738C();
      v72 = *(_QWORD *)(v71 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v73(v70, 1, v71))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v189, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v189, v70, v71);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v189, 0, 1, v71);
      }
      v75 = v40[21];
      v76 = (_QWORD *)((char *)v38 + v75);
      v77 = (_QWORD *)((char *)v39 + v75);
      v78 = v77[1];
      *v76 = *v77;
      v76[1] = v78;
      *((_BYTE *)v38 + v40[22]) = *((_BYTE *)v39 + v40[22]);
      *((_BYTE *)v38 + v40[23]) = *((_BYTE *)v39 + v40[23]);
      *((_BYTE *)v38 + v40[24]) = *((_BYTE *)v39 + v40[24]);
      *((_BYTE *)v38 + v40[25]) = *((_BYTE *)v39 + v40[25]);
      *((_BYTE *)v38 + v40[26]) = *((_BYTE *)v39 + v40[26]);
      *((_BYTE *)v38 + v40[27]) = *((_BYTE *)v39 + v40[27]);
      *((_BYTE *)v38 + v40[28]) = *((_BYTE *)v39 + v40[28]);
      *(_QWORD *)((char *)v38 + v40[29]) = *(_QWORD *)((char *)v39 + v40[29]);
      *(_QWORD *)((char *)v38 + v40[30]) = *(_QWORD *)((char *)v39 + v40[30]);
      *((_BYTE *)v38 + v40[31]) = *((_BYTE *)v39 + v40[31]);
      v79 = v40[32];
      v80 = (_QWORD *)((char *)v38 + v79);
      v81 = (_QWORD *)((char *)v39 + v79);
      v82 = v81[1];
      *v80 = *v81;
      v80[1] = v82;
      *(_QWORD *)((char *)v38 + v40[33]) = *(_QWORD *)((char *)v39 + v40[33]);
      v83 = v40[34];
      v84 = (_QWORD *)((char *)v38 + v83);
      v85 = (_QWORD *)((char *)v39 + v83);
      v86 = v85[1];
      *v84 = *v85;
      v84[1] = v86;
      v87 = v40[35];
      v88 = (_QWORD *)((char *)v38 + v87);
      v89 = (_QWORD *)((char *)v39 + v87);
      v90 = v89[1];
      *v88 = *v89;
      v88[1] = v90;
      v91 = v40[36];
      v92 = (char *)v38 + v91;
      v93 = (char *)v39 + v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v198(v93, 1, v190))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v194[2])(v92, v93, v190);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v194[7])(v92, 0, 1, v190);
      }
      v12 = v204;
      v25 = __dst;
      v36 = v200;
      v95 = v40[37];
      v96 = (_QWORD *)((char *)v38 + v95);
      v97 = (_QWORD *)((char *)v39 + v95);
      v98 = v97[1];
      *v96 = *v97;
      v96[1] = v98;
      v99 = v40[38];
      v100 = (_QWORD *)((char *)v38 + v99);
      v101 = (_QWORD *)((char *)v39 + v99);
      v102 = v101[1];
      *v100 = *v101;
      v100[1] = v102;
      *((_BYTE *)v38 + v40[39]) = *((_BYTE *)v39 + v40[39]);
      *((_BYTE *)v38 + v40[40]) = *((_BYTE *)v39 + v40[40]);
      *((_BYTE *)v38 + v40[41]) = *((_BYTE *)v39 + v40[41]);
      *((_BYTE *)v38 + v40[42]) = *((_BYTE *)v39 + v40[42]);
      *((_BYTE *)v38 + v40[43]) = *((_BYTE *)v39 + v40[43]);
      *((_BYTE *)v38 + v40[44]) = *((_BYTE *)v39 + v40[44]);
      *((_BYTE *)v38 + v40[45]) = *((_BYTE *)v39 + v40[45]);
      v103 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v191 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103(v38, 0, 1, v40);
      v15 = v192;
    }
    *(_QWORD *)((char *)v25 + v12[7]) = *(_QWORD *)((char *)v15 + v12[7]);
    v104 = v12[8];
    v105 = (_QWORD *)((char *)v25 + v104);
    v106 = (_QWORD *)((char *)v15 + v104);
    v107 = v106[1];
    *v105 = *v106;
    v105[1] = v107;
    v108 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v36 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v108(v25, 0, 1, v12);
    v19 = a2;
  }
  v109 = a3;
  v110 = a3[13];
  *(_QWORD *)(v18 + a3[12]) = *(_QWORD *)(v19 + a3[12]);
  *(_QWORD *)(v18 + v110) = *(_QWORD *)(v19 + v110);
  v111 = a3[14];
  v112 = (_QWORD *)(v18 + v111);
  v113 = (_QWORD *)(v19 + v111);
  v114 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v115 = *((_QWORD *)v114 - 1);
  v116 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v115 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v116(v113, 1, v114))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    v201 = v115;
    v118 = v113[1];
    *v112 = *v113;
    v112[1] = v118;
    v119 = v113[3];
    v112[2] = v113[2];
    v112[3] = v119;
    v120 = v113[5];
    v112[4] = v113[4];
    v112[5] = v120;
    v112[6] = v113[6];
    *((_BYTE *)v112 + 56) = *((_BYTE *)v113 + 56);
    v121 = v113[8];
    *((_BYTE *)v112 + 72) = *((_BYTE *)v113 + 72);
    v112[8] = v121;
    v122 = v113[11];
    v112[10] = v113[10];
    v112[11] = v122;
    v123 = v113[13];
    v112[12] = v113[12];
    v112[13] = v123;
    v124 = v113[15];
    v112[14] = v113[14];
    v112[15] = v124;
    v125 = v114[12];
    v193 = (char *)v113 + v125;
    v195 = (char *)v112 + v125;
    v126 = sub_1A93F726C();
    v205 = *(_QWORD *)(v126 - 8);
    v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v127(v193, 1, v126))
    {
      v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v195, v193, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v195, v193, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v195, 0, 1, v126);
    }
    v129 = v114[13];
    v130 = (_QWORD *)((char *)v112 + v129);
    v131 = (_QWORD *)((char *)v113 + v129);
    v132 = v131[1];
    *v130 = *v131;
    v130[1] = v132;
    *(_QWORD *)((char *)v112 + v114[14]) = *(_QWORD *)((char *)v113 + v114[14]);
    v133 = v114[15];
    v134 = (char *)v112 + v133;
    v135 = (char *)v113 + v133;
    *(_QWORD *)v134 = *(_QWORD *)v135;
    v134[8] = v135[8];
    v136 = v114[16];
    v137 = (char *)v112 + v136;
    v138 = (char *)v113 + v136;
    swift_bridgeObjectRetain();
    v199 = v126;
    if (v127(v138, 1, v126))
    {
      v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v137, v138, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v137, 0, 1, v126);
    }
    v140 = v114[17];
    v141 = (_QWORD *)((char *)v112 + v140);
    v142 = (_QWORD *)((char *)v113 + v140);
    v143 = v142[1];
    *v141 = *v142;
    v141[1] = v143;
    *(_QWORD *)((char *)v112 + v114[18]) = *(_QWORD *)((char *)v113 + v114[18]);
    *((_BYTE *)v112 + v114[19]) = *((_BYTE *)v113 + v114[19]);
    v144 = v114[20];
    v196 = (char *)v112 + v144;
    v145 = (char *)v113 + v144;
    v146 = sub_1A93F738C();
    v147 = *(_QWORD *)(v146 - 8);
    v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = a1;
    if (v148(v145, 1, v146))
    {
      v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v196, v145, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v196, v145, v146);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v196, 0, 1, v146);
    }
    v150 = v114[21];
    v151 = (_QWORD *)((char *)v112 + v150);
    v152 = (_QWORD *)((char *)v113 + v150);
    v153 = v152[1];
    *v151 = *v152;
    v151[1] = v153;
    *((_BYTE *)v112 + v114[22]) = *((_BYTE *)v113 + v114[22]);
    *((_BYTE *)v112 + v114[23]) = *((_BYTE *)v113 + v114[23]);
    *((_BYTE *)v112 + v114[24]) = *((_BYTE *)v113 + v114[24]);
    *((_BYTE *)v112 + v114[25]) = *((_BYTE *)v113 + v114[25]);
    *((_BYTE *)v112 + v114[26]) = *((_BYTE *)v113 + v114[26]);
    *((_BYTE *)v112 + v114[27]) = *((_BYTE *)v113 + v114[27]);
    *((_BYTE *)v112 + v114[28]) = *((_BYTE *)v113 + v114[28]);
    *(_QWORD *)((char *)v112 + v114[29]) = *(_QWORD *)((char *)v113 + v114[29]);
    *(_QWORD *)((char *)v112 + v114[30]) = *(_QWORD *)((char *)v113 + v114[30]);
    *((_BYTE *)v112 + v114[31]) = *((_BYTE *)v113 + v114[31]);
    v154 = v114[32];
    v155 = (_QWORD *)((char *)v112 + v154);
    v156 = (_QWORD *)((char *)v113 + v154);
    v157 = v156[1];
    *v155 = *v156;
    v155[1] = v157;
    *(_QWORD *)((char *)v112 + v114[33]) = *(_QWORD *)((char *)v113 + v114[33]);
    v158 = v114[34];
    v159 = (_QWORD *)((char *)v112 + v158);
    v160 = (_QWORD *)((char *)v113 + v158);
    v161 = v160[1];
    *v159 = *v160;
    v159[1] = v161;
    v162 = v114[35];
    v163 = (_QWORD *)((char *)v112 + v162);
    v164 = (_QWORD *)((char *)v113 + v162);
    v165 = v164[1];
    *v163 = *v164;
    v163[1] = v165;
    v166 = v114[36];
    v167 = (char *)v112 + v166;
    v168 = (char *)v113 + v166;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v127(v168, 1, v199))
    {
      v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v167, v168, v199);
      v18 = a1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v167, 0, 1, v199);
    }
    v19 = a2;
    v170 = v114[37];
    v171 = (_QWORD *)((char *)v112 + v170);
    v172 = (_QWORD *)((char *)v113 + v170);
    v173 = v172[1];
    *v171 = *v172;
    v171[1] = v173;
    v174 = v114[38];
    v175 = (_QWORD *)((char *)v112 + v174);
    v176 = (_QWORD *)((char *)v113 + v174);
    v177 = v176[1];
    *v175 = *v176;
    v175[1] = v177;
    *((_BYTE *)v112 + v114[39]) = *((_BYTE *)v113 + v114[39]);
    *((_BYTE *)v112 + v114[40]) = *((_BYTE *)v113 + v114[40]);
    *((_BYTE *)v112 + v114[41]) = *((_BYTE *)v113 + v114[41]);
    *((_BYTE *)v112 + v114[42]) = *((_BYTE *)v113 + v114[42]);
    *((_BYTE *)v112 + v114[43]) = *((_BYTE *)v113 + v114[43]);
    *((_BYTE *)v112 + v114[44]) = *((_BYTE *)v113 + v114[44]);
    *((_BYTE *)v112 + v114[45]) = *((_BYTE *)v113 + v114[45]);
    v178 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v201 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v178(v112, 0, 1, v114);
    v109 = a3;
  }
  v179 = v109[15];
  v180 = v109[16];
  v181 = v18 + v179;
  v182 = v19 + v179;
  *(_QWORD *)v181 = *(_QWORD *)v182;
  *(_BYTE *)(v181 + 8) = *(_BYTE *)(v182 + 8);
  *(_BYTE *)(v18 + v180) = *(_BYTE *)(v19 + v180);
  v183 = v109[18];
  *(_QWORD *)(v18 + v109[17]) = *(_QWORD *)(v19 + v109[17]);
  v184 = v18 + v183;
  v185 = v19 + v183;
  *(_QWORD *)v184 = *(_QWORD *)v185;
  *(_BYTE *)(v184 + 8) = *(_BYTE *)(v185 + 8);
  swift_bridgeObjectRetain();
  return v18;
}

_QWORD *_s20PlaybackQueueContextVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  _OWORD *v43;
  char *v44;
  char *v45;
  int v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  int *v62;
  unsigned int (**v63)(_QWORD *, uint64_t, int *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int *v104;
  _QWORD *v105;
  uint64_t (*v106)(uint64_t, uint64_t, int *);
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  char *v139;
  uint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  _QWORD *v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  char *v154;
  uint64_t v155;
  _QWORD *v156;
  char *v157;
  void (*v158)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v159;
  _QWORD *v160;
  char *v161;
  void (*v162)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  char *v167;
  uint64_t v168;
  uint64_t (*v169)(void *, uint64_t, uint64_t);
  int v170;
  int v171;
  uint64_t v172;
  _QWORD *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int (*v190)(char *, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  _QWORD *v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  char *v210;
  uint64_t v211;
  _QWORD *v212;
  char *v213;
  void (*v214)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char v222;
  uint64_t v223;
  void *v224;
  char *v225;
  int v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  char *v231;
  uint64_t v232;
  void *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t (*v237)(void *, uint64_t, uint64_t);
  void *v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  _QWORD *v245;
  char *v246;
  uint64_t v247;
  _QWORD *v248;
  char *v249;
  uint64_t v250;
  _QWORD *v251;
  char *v252;
  uint64_t v253;
  void *v254;
  char *v255;
  int v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  char *v261;
  uint64_t v262;
  _QWORD *v263;
  char *v264;
  uint64_t v265;
  _QWORD *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  int *v271;
  _QWORD *v272;
  uint64_t (*v273)(uint64_t, uint64_t, int *);
  int v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unsigned int (*v280)(char *, uint64_t, uint64_t);
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void *v286;
  char *v287;
  uint64_t v288;
  uint64_t (*v289)(void);
  int v290;
  size_t v291;
  void *v292;
  uint64_t v293;
  _QWORD *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  void *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  char *v306;
  uint64_t v307;
  void *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  unsigned int (*v312)(char *, uint64_t, uint64_t);
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  char *v316;
  uint64_t v317;
  _QWORD *v318;
  char *v319;
  uint64_t v320;
  _QWORD *v321;
  char *v322;
  uint64_t v323;
  _QWORD *v324;
  char *v325;
  uint64_t v326;
  void *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD *v331;
  char *v332;
  uint64_t v333;
  _QWORD *v334;
  char *v335;
  void (*v336)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v337;
  _QWORD *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char v343;
  uint64_t v344;
  char *v345;
  int v346;
  int v347;
  size_t v348;
  void *v349;
  uint64_t v350;
  _QWORD *v351;
  char *v352;
  uint64_t v353;
  void *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t (*v358)(void *, uint64_t, uint64_t);
  int v359;
  int v360;
  uint64_t v361;
  uint64_t v362;
  _QWORD *v363;
  char *v364;
  uint64_t v365;
  _QWORD *v366;
  char *v367;
  uint64_t v368;
  _QWORD *v369;
  char *v370;
  uint64_t v371;
  _QWORD *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  int v376;
  int v377;
  size_t v378;
  void *v379;
  uint64_t v380;
  _QWORD *v381;
  char *v382;
  uint64_t v383;
  _QWORD *v384;
  char *v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  char *v395;
  char *v396;
  _QWORD *v397;
  void *v398;
  void *v399;
  void *v400;
  void *v401;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  _QWORD *__dstd;
  void *__srcd;
  _QWORD *__src;
  void *__srca;
  void *__srcb;
  _QWORD *__srcc;
  char v412;
  unsigned int (*v413)(char *, uint64_t, uint64_t);
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t (*v417)(uint64_t, uint64_t, void *);
  char *v418;
  void *v419;
  void *v420;
  void *v421;
  void *v422;
  void *v423;
  void *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  unsigned int (*v428)(char *, uint64_t, uint64_t);
  uint64_t v429;
  uint64_t v430;
  char *v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t (*v437)(void);
  _QWORD *v438;
  _QWORD *v439;
  _QWORD *v440;
  _QWORD *v441;
  _QWORD *v442;
  _QWORD *v443;
  _QWORD *v444;
  _QWORD *v445;
  int *v446;
  int *v447;
  int *v448;
  int *v449;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[1] = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + 16) = *((_BYTE *)v4 + 16);
  v5[3] = v4[3];
  v5[4] = v4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)v5[5];
  v7 = (void *)v4[5];
  v5[5] = v7;
  v8 = v7;

  v9 = (void *)v5[6];
  v10 = (void *)v4[6];
  v5[6] = v10;
  v11 = v10;

  v12 = (void *)v5[7];
  v13 = (void *)v4[7];
  v5[7] = v13;
  v14 = v13;

  v5[8] = v4[8];
  v5[9] = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[10] = v4[10];
  v5[11] = v4[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[11];
  v16 = (uint64_t)v5 + v15;
  v17 = (char *)v4 + v15;
  v18 = type metadata accessor for PlaybackIntent(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20((uint64_t)v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1A9064714(v16, type metadata accessor for PlaybackIntent);
      goto LABEL_7;
    }
    v435 = v18;
    v447 = a3;
    v33 = *(_QWORD *)v17;
    v34 = *((_QWORD *)v17 + 1);
    v35 = *((_QWORD *)v17 + 2);
    v36 = *((_QWORD *)v17 + 3);
    v37 = v17[32];
    sub_1A912C880(*(_QWORD *)v17, v34, v35, v36, v37);
    v38 = *(_QWORD *)v16;
    v39 = *(_QWORD *)(v16 + 8);
    v40 = *(_QWORD *)(v16 + 16);
    v41 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)v16 = v33;
    *(_QWORD *)(v16 + 8) = v34;
    *(_QWORD *)(v16 + 16) = v35;
    *(_QWORD *)(v16 + 24) = v36;
    v42 = *(_BYTE *)(v16 + 32);
    *(_BYTE *)(v16 + 32) = v37;
    sub_1A912C6B4(v38, v39, v40, v41, v42);
    v43 = (_OWORD *)(v16 + 40);
    v44 = v17;
    v45 = v17 + 40;
    v431 = v44;
    v46 = v44[120];
    if (*(_BYTE *)(v16 + 120) == 2)
    {
      if (v46 == 2)
      {
        v47 = *((_OWORD *)v45 + 1);
        *v43 = *(_OWORD *)v45;
        *(_OWORD *)(v16 + 56) = v47;
        v48 = *((_OWORD *)v45 + 2);
        v49 = *((_OWORD *)v45 + 3);
        v50 = *((_OWORD *)v45 + 4);
        *(_DWORD *)(v16 + 119) = *(_DWORD *)(v45 + 79);
        *(_OWORD *)(v16 + 88) = v49;
        *(_OWORD *)(v16 + 104) = v50;
        *(_OWORD *)(v16 + 72) = v48;
LABEL_18:
        v76 = v431;
        goto LABEL_22;
      }
      v76 = v431;
      v77 = *((_QWORD *)v431 + 5);
      v78 = *((_QWORD *)v431 + 6);
      v79 = *((_QWORD *)v431 + 7);
      v80 = *((_QWORD *)v431 + 8);
      v440 = v4;
      v81 = *((_QWORD *)v431 + 9);
      v82 = *((_QWORD *)v431 + 10);
      v426 = *((_QWORD *)v431 + 11);
      v414 = *((_QWORD *)v431 + 12);
      v83 = v431[104];
      sub_1A90519B4(v77, v78, v79, v80, v81, v82, v426, v414, v83);
      *(_QWORD *)(v16 + 40) = v77;
      *(_QWORD *)(v16 + 48) = v78;
      *(_QWORD *)(v16 + 56) = v79;
      *(_QWORD *)(v16 + 64) = v80;
      *(_QWORD *)(v16 + 72) = v81;
      *(_QWORD *)(v16 + 80) = v82;
      v4 = v440;
      *(_QWORD *)(v16 + 88) = v426;
      *(_QWORD *)(v16 + 96) = v414;
      *(_BYTE *)(v16 + 104) = v83;
    }
    else
    {
      if (v46 == 2)
      {
        sub_1A916DE60(v16 + 40);
        v72 = *((_OWORD *)v45 + 1);
        *v43 = *(_OWORD *)v45;
        *(_OWORD *)(v16 + 56) = v72;
        v74 = *((_OWORD *)v45 + 3);
        v73 = *((_OWORD *)v45 + 4);
        v75 = *((_OWORD *)v45 + 2);
        *(_DWORD *)(v16 + 119) = *(_DWORD *)(v45 + 79);
        *(_OWORD *)(v16 + 88) = v74;
        *(_OWORD *)(v16 + 104) = v73;
        *(_OWORD *)(v16 + 72) = v75;
        goto LABEL_18;
      }
      v76 = v431;
      v84 = *((_QWORD *)v431 + 5);
      v85 = *((_QWORD *)v431 + 6);
      v86 = *((_QWORD *)v431 + 7);
      v87 = *((_QWORD *)v431 + 8);
      v441 = v4;
      v88 = *((_QWORD *)v431 + 9);
      v89 = *((_QWORD *)v431 + 10);
      v427 = *((_QWORD *)v431 + 11);
      v415 = *((_QWORD *)v431 + 12);
      v90 = v431[104];
      sub_1A90519B4(v84, v85, v86, v87, v88, v89, v427, v415, v90);
      v91 = *(_QWORD *)(v16 + 40);
      v92 = *(_QWORD *)(v16 + 48);
      v93 = *(_QWORD *)(v16 + 56);
      v94 = *(_QWORD *)(v16 + 64);
      v95 = *(_QWORD *)(v16 + 72);
      v96 = *(_QWORD *)(v16 + 80);
      v97 = *(_QWORD *)(v16 + 88);
      v98 = *(_QWORD *)(v16 + 96);
      v99 = *(_BYTE *)(v16 + 104);
      *(_QWORD *)(v16 + 40) = v84;
      *(_QWORD *)(v16 + 48) = v85;
      *(_QWORD *)(v16 + 56) = v86;
      *(_QWORD *)(v16 + 64) = v87;
      *(_QWORD *)(v16 + 72) = v88;
      *(_QWORD *)(v16 + 80) = v89;
      v4 = v441;
      *(_QWORD *)(v16 + 88) = v427;
      *(_QWORD *)(v16 + 96) = v415;
      *(_BYTE *)(v16 + 104) = v90;
      sub_1A90531EC(v91, v92, v93, v94, v95, v96, v97, v98, v99);
    }
    *(_BYTE *)(v16 + 105) = v76[105];
    *(_QWORD *)(v16 + 112) = *((_QWORD *)v76 + 14);
    *(_BYTE *)(v16 + 120) = v76[120];
    *(_BYTE *)(v16 + 121) = v76[121];
    *(_BYTE *)(v16 + 122) = v76[122];
LABEL_22:
    v100 = v435;
    v101 = *(int *)(v435 + 24);
    v102 = v16 + v101;
    v103 = &v76[v101];
    v104 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v105 = (_QWORD *)*((_QWORD *)v104 - 1);
    v106 = (uint64_t (*)(uint64_t, uint64_t, int *))v105[6];
    v107 = v106(v102, 1, v104);
    v108 = v106((uint64_t)v103, 1, v104);
    if (v107)
    {
      if (!v108)
      {
        __dsta = v105;
        v442 = v4;
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *(_QWORD *)(v102 + 8) = *((_QWORD *)v103 + 1);
        *(_QWORD *)(v102 + 16) = *((_QWORD *)v103 + 2);
        *(_QWORD *)(v102 + 24) = *((_QWORD *)v103 + 3);
        *(_QWORD *)(v102 + 32) = *((_QWORD *)v103 + 4);
        *(_QWORD *)(v102 + 40) = *((_QWORD *)v103 + 5);
        v109 = *((_QWORD *)v103 + 6);
        *(_BYTE *)(v102 + 56) = v103[56];
        *(_QWORD *)(v102 + 48) = v109;
        v110 = *((_QWORD *)v103 + 8);
        *(_BYTE *)(v102 + 72) = v103[72];
        *(_QWORD *)(v102 + 64) = v110;
        *(_QWORD *)(v102 + 80) = *((_QWORD *)v103 + 10);
        *(_QWORD *)(v102 + 88) = *((_QWORD *)v103 + 11);
        *(_QWORD *)(v102 + 96) = *((_QWORD *)v103 + 12);
        *(_QWORD *)(v102 + 104) = *((_QWORD *)v103 + 13);
        *(_QWORD *)(v102 + 112) = *((_QWORD *)v103 + 14);
        *(_QWORD *)(v102 + 120) = *((_QWORD *)v103 + 15);
        v111 = v104[12];
        v398 = (void *)(v102 + v111);
        v396 = &v103[v111];
        v112 = sub_1A93F726C();
        v416 = *(_QWORD *)(v112 - 8);
        v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v416 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v428 = v113;
        if (v113(v396, 1, v112))
        {
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v398, v396, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
          v115 = v416;
        }
        else
        {
          v115 = v416;
          (*(void (**)(void *, char *, uint64_t))(v416 + 16))(v398, v396, v112);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v416 + 56))(v398, 0, 1, v112);
        }
        v172 = v104[13];
        v173 = (_QWORD *)(v102 + v172);
        v174 = &v103[v172];
        *v173 = *(_QWORD *)v174;
        v173[1] = *((_QWORD *)v174 + 1);
        *(_QWORD *)(v102 + v104[14]) = *(_QWORD *)&v103[v104[14]];
        v175 = v104[15];
        v176 = v102 + v175;
        v177 = &v103[v175];
        v178 = *(_QWORD *)v177;
        *(_BYTE *)(v176 + 8) = v177[8];
        *(_QWORD *)v176 = v178;
        v179 = v104[16];
        v180 = (void *)(v102 + v179);
        v181 = &v103[v179];
        swift_bridgeObjectRetain();
        v423 = (void *)v16;
        __srca = (void *)v112;
        if (v428(v181, 1, v112))
        {
          v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v115 + 16))(v180, v181, v112);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v180, 0, 1, v112);
        }
        v183 = v104[17];
        v184 = (_QWORD *)(v102 + v183);
        v185 = &v103[v183];
        *v184 = *(_QWORD *)v185;
        v184[1] = *((_QWORD *)v185 + 1);
        *(_QWORD *)(v102 + v104[18]) = *(_QWORD *)&v103[v104[18]];
        *(_BYTE *)(v102 + v104[19]) = v103[v104[19]];
        v186 = v104[20];
        v399 = (void *)(v102 + v186);
        v187 = &v103[v186];
        v188 = sub_1A93F738C();
        v189 = *(_QWORD *)(v188 - 8);
        v190 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v190(v187, 1, v188))
        {
          v191 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
          memcpy(v399, v187, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v189 + 16))(v399, v187, v188);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v399, 0, 1, v188);
        }
        v16 = (uint64_t)v423;
        v192 = v104[21];
        v193 = (_QWORD *)(v102 + v192);
        v194 = &v103[v192];
        *v193 = *(_QWORD *)v194;
        v193[1] = *((_QWORD *)v194 + 1);
        *(_BYTE *)(v102 + v104[22]) = v103[v104[22]];
        *(_BYTE *)(v102 + v104[23]) = v103[v104[23]];
        *(_BYTE *)(v102 + v104[24]) = v103[v104[24]];
        *(_BYTE *)(v102 + v104[25]) = v103[v104[25]];
        *(_BYTE *)(v102 + v104[26]) = v103[v104[26]];
        *(_BYTE *)(v102 + v104[27]) = v103[v104[27]];
        *(_BYTE *)(v102 + v104[28]) = v103[v104[28]];
        *(_QWORD *)(v102 + v104[29]) = *(_QWORD *)&v103[v104[29]];
        *(_QWORD *)(v102 + v104[30]) = *(_QWORD *)&v103[v104[30]];
        *(_BYTE *)(v102 + v104[31]) = v103[v104[31]];
        v195 = v104[32];
        v196 = (_QWORD *)(v102 + v195);
        v197 = &v103[v195];
        *v196 = *(_QWORD *)v197;
        v196[1] = *((_QWORD *)v197 + 1);
        *(_QWORD *)(v102 + v104[33]) = *(_QWORD *)&v103[v104[33]];
        v198 = v104[34];
        v199 = (_QWORD *)(v102 + v198);
        v200 = &v103[v198];
        *v199 = *(_QWORD *)v200;
        v199[1] = *((_QWORD *)v200 + 1);
        v201 = v104[35];
        v202 = (_QWORD *)(v102 + v201);
        v203 = &v103[v201];
        *v202 = *(_QWORD *)v203;
        v202[1] = *((_QWORD *)v203 + 1);
        v204 = v104[36];
        v400 = (void *)(v102 + v204);
        v205 = &v103[v204];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v428(v205, 1, (uint64_t)__srca))
        {
          v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
          memcpy(v400, v205, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
          v4 = v442;
          v100 = v435;
          v207 = __dsta;
        }
        else
        {
          (*(void (**)(void *, char *, void *))(v416 + 16))(v400, v205, __srca);
          v207 = __dsta;
          (*(void (**)(void *, _QWORD, uint64_t, void *))(v416 + 56))(v400, 0, 1, __srca);
          v4 = v442;
          v100 = v435;
        }
        v208 = v104[37];
        v209 = (_QWORD *)(v102 + v208);
        v210 = &v103[v208];
        *v209 = *(_QWORD *)v210;
        v209[1] = *((_QWORD *)v210 + 1);
        v211 = v104[38];
        v212 = (_QWORD *)(v102 + v211);
        v213 = &v103[v211];
        *v212 = *(_QWORD *)v213;
        v212[1] = *((_QWORD *)v213 + 1);
        *(_BYTE *)(v102 + v104[39]) = v103[v104[39]];
        *(_BYTE *)(v102 + v104[40]) = v103[v104[40]];
        *(_BYTE *)(v102 + v104[41]) = v103[v104[41]];
        *(_BYTE *)(v102 + v104[42]) = v103[v104[42]];
        *(_BYTE *)(v102 + v104[43]) = v103[v104[43]];
        *(_BYTE *)(v102 + v104[44]) = v103[v104[44]];
        *(_BYTE *)(v102 + v104[45]) = v103[v104[45]];
        v214 = (void (*)(uint64_t, _QWORD, uint64_t, int *))v207[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v214(v102, 0, 1, v104);
        goto LABEL_77;
      }
      goto LABEL_28;
    }
    if (v108)
    {
      sub_1A9064714(v102, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_28:
      v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy((void *)v102, v103, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
LABEL_77:
      a3 = v447;
      *(_QWORD *)(v16 + *(int *)(v100 + 28)) = *(_QWORD *)&v431[*(int *)(v100 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v265 = *(int *)(v100 + 32);
      v266 = (_QWORD *)(v16 + v265);
      v267 = &v431[v265];
      *v266 = *(_QWORD *)v267;
      v266[1] = *((_QWORD *)v267 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_78;
    }
    v443 = v4;
    *(_QWORD *)v102 = *(_QWORD *)v103;
    *(_QWORD *)(v102 + 8) = *((_QWORD *)v103 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 16) = *((_QWORD *)v103 + 2);
    *(_QWORD *)(v102 + 24) = *((_QWORD *)v103 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 32) = *((_QWORD *)v103 + 4);
    *(_QWORD *)(v102 + 40) = *((_QWORD *)v103 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v163 = *((_QWORD *)v103 + 6);
    *(_BYTE *)(v102 + 56) = v103[56];
    *(_QWORD *)(v102 + 48) = v163;
    v164 = *((_QWORD *)v103 + 8);
    *(_BYTE *)(v102 + 72) = v103[72];
    *(_QWORD *)(v102 + 64) = v164;
    *(_QWORD *)(v102 + 80) = *((_QWORD *)v103 + 10);
    *(_QWORD *)(v102 + 88) = *((_QWORD *)v103 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 96) = *((_QWORD *)v103 + 12);
    *(_QWORD *)(v102 + 104) = *((_QWORD *)v103 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 112) = *((_QWORD *)v103 + 14);
    *(_QWORD *)(v102 + 120) = *((_QWORD *)v103 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v165 = v104[12];
    v166 = (void *)(v102 + v165);
    v167 = &v103[v165];
    v168 = sub_1A93F726C();
    v429 = *(_QWORD *)(v168 - 8);
    v169 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v429 + 48);
    v170 = v169(v166, 1, v168);
    v417 = (uint64_t (*)(uint64_t, uint64_t, void *))v169;
    v171 = v169(v167, 1, v168);
    if (v170)
    {
      if (!v171)
      {
        (*(void (**)(void *, char *, uint64_t))(v429 + 16))(v166, v167, v168);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v429 + 56))(v166, 0, 1, v168);
        goto LABEL_58;
      }
    }
    else
    {
      if (!v171)
      {
        (*(void (**)(void *, char *, uint64_t))(v429 + 24))(v166, v167, v168);
LABEL_58:
        v216 = v104[13];
        v217 = (_QWORD *)(v102 + v216);
        v218 = &v103[v216];
        *v217 = *(_QWORD *)v218;
        v217[1] = *((_QWORD *)v218 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v102 + v104[14]) = *(_QWORD *)&v103[v104[14]];
        v219 = v104[15];
        v220 = v102 + v219;
        v221 = &v103[v219];
        v222 = v221[8];
        *(_QWORD *)v220 = *(_QWORD *)v221;
        *(_BYTE *)(v220 + 8) = v222;
        v223 = v104[16];
        v224 = (void *)(v102 + v223);
        v225 = &v103[v223];
        v226 = v169((void *)(v102 + v223), 1, v168);
        v227 = v169(v225, 1, v168);
        __srcb = (void *)v168;
        v424 = (void *)v16;
        if (v226)
        {
          if (!v227)
          {
            (*(void (**)(void *, char *, uint64_t))(v429 + 16))(v224, v225, v168);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v429 + 56))(v224, 0, 1, v168);
            goto LABEL_64;
          }
        }
        else
        {
          if (!v227)
          {
            (*(void (**)(void *, char *, uint64_t))(v429 + 24))(v224, v225, v168);
LABEL_64:
            v229 = v104[17];
            v230 = (_QWORD *)(v102 + v229);
            v231 = &v103[v229];
            *v230 = *(_QWORD *)v231;
            v230[1] = *((_QWORD *)v231 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v102 + v104[18]) = *(_QWORD *)&v103[v104[18]];
            swift_retain();
            swift_release();
            *(_BYTE *)(v102 + v104[19]) = v103[v104[19]];
            v232 = v104[20];
            v233 = (void *)(v102 + v232);
            v234 = &v103[v232];
            v235 = sub_1A93F738C();
            v236 = *(_QWORD *)(v235 - 8);
            v237 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v236 + 48);
            v238 = v233;
            LODWORD(v233) = v237(v233, 1, v235);
            v239 = v237(v234, 1, v235);
            if ((_DWORD)v233)
            {
              v100 = v435;
              if (!v239)
              {
                (*(void (**)(void *, char *, uint64_t))(v236 + 16))(v238, v234, v235);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v236 + 56))(v238, 0, 1, v235);
                goto LABEL_70;
              }
            }
            else
            {
              v100 = v435;
              if (!v239)
              {
                (*(void (**)(void *, char *, uint64_t))(v236 + 24))(v238, v234, v235);
LABEL_70:
                v241 = v104[21];
                v242 = (_QWORD *)(v102 + v241);
                v243 = &v103[v241];
                *v242 = *(_QWORD *)v243;
                v242[1] = *((_QWORD *)v243 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v102 + v104[22]) = v103[v104[22]];
                *(_BYTE *)(v102 + v104[23]) = v103[v104[23]];
                *(_BYTE *)(v102 + v104[24]) = v103[v104[24]];
                *(_BYTE *)(v102 + v104[25]) = v103[v104[25]];
                *(_BYTE *)(v102 + v104[26]) = v103[v104[26]];
                *(_BYTE *)(v102 + v104[27]) = v103[v104[27]];
                *(_BYTE *)(v102 + v104[28]) = v103[v104[28]];
                *(_QWORD *)(v102 + v104[29]) = *(_QWORD *)&v103[v104[29]];
                *(_QWORD *)(v102 + v104[30]) = *(_QWORD *)&v103[v104[30]];
                *(_BYTE *)(v102 + v104[31]) = v103[v104[31]];
                v244 = v104[32];
                v245 = (_QWORD *)(v102 + v244);
                v246 = &v103[v244];
                *v245 = *(_QWORD *)v246;
                v245[1] = *((_QWORD *)v246 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v102 + v104[33]) = *(_QWORD *)&v103[v104[33]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v247 = v104[34];
                v248 = (_QWORD *)(v102 + v247);
                v249 = &v103[v247];
                *v248 = *(_QWORD *)v249;
                v248[1] = *((_QWORD *)v249 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v250 = v104[35];
                v251 = (_QWORD *)(v102 + v250);
                v252 = &v103[v250];
                *v251 = *(_QWORD *)v252;
                v251[1] = *((_QWORD *)v252 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v253 = v104[36];
                v254 = (void *)(v102 + v253);
                v255 = &v103[v253];
                v256 = v417(v102 + v253, 1, __srcb);
                v257 = v417((uint64_t)v255, 1, __srcb);
                v16 = (uint64_t)v424;
                if (v256)
                {
                  if (!v257)
                  {
                    (*(void (**)(void *, char *, void *))(v429 + 16))(v254, v255, __srcb);
                    (*(void (**)(void *, _QWORD, uint64_t, void *))(v429 + 56))(v254, 0, 1, __srcb);
LABEL_76:
                    v259 = v104[37];
                    v260 = (_QWORD *)(v102 + v259);
                    v261 = &v103[v259];
                    *v260 = *(_QWORD *)v261;
                    v260[1] = *((_QWORD *)v261 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v262 = v104[38];
                    v263 = (_QWORD *)(v102 + v262);
                    v264 = &v103[v262];
                    *v263 = *(_QWORD *)v264;
                    v263[1] = *((_QWORD *)v264 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(v102 + v104[39]) = v103[v104[39]];
                    *(_BYTE *)(v102 + v104[40]) = v103[v104[40]];
                    *(_BYTE *)(v102 + v104[41]) = v103[v104[41]];
                    *(_BYTE *)(v102 + v104[42]) = v103[v104[42]];
                    *(_BYTE *)(v102 + v104[43]) = v103[v104[43]];
                    *(_BYTE *)(v102 + v104[44]) = v103[v104[44]];
                    *(_BYTE *)(v102 + v104[45]) = v103[v104[45]];
                    v4 = v443;
                    goto LABEL_77;
                  }
                }
                else
                {
                  if (!v257)
                  {
                    (*(void (**)(void *, char *, void *))(v429 + 24))(v254, v255, __srcb);
                    goto LABEL_76;
                  }
                  (*(void (**)(void *, void *))(v429 + 8))(v254, __srcb);
                }
                v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
                memcpy(v254, v255, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
                goto LABEL_76;
              }
              (*(void (**)(void *, uint64_t))(v236 + 8))(v238, v235);
            }
            v240 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
            memcpy(v238, v234, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
            goto LABEL_70;
          }
          (*(void (**)(void *, uint64_t))(v429 + 8))(v224, v168);
        }
        v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
        goto LABEL_64;
      }
      (*(void (**)(void *, uint64_t))(v429 + 8))(v166, v168);
    }
    v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
    goto LABEL_58;
  }
  if (v22)
  {
LABEL_7:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    memcpy((void *)v16, v17, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_78;
  }
  v425 = v19;
  v434 = v18;
  v446 = a3;
  v23 = *(_QWORD *)v17;
  v24 = *((_QWORD *)v17 + 1);
  v25 = *((_QWORD *)v17 + 2);
  v26 = *((_QWORD *)v17 + 3);
  v27 = v17[32];
  sub_1A912C880(*(_QWORD *)v17, v24, v25, v26, v27);
  *(_QWORD *)v16 = v23;
  *(_QWORD *)(v16 + 8) = v24;
  *(_QWORD *)(v16 + 16) = v25;
  *(_QWORD *)(v16 + 24) = v26;
  *(_BYTE *)(v16 + 32) = v27;
  if (v17[120] == 2)
  {
    v28 = *(_OWORD *)(v17 + 56);
    *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
    *(_OWORD *)(v16 + 56) = v28;
    v29 = *(_OWORD *)(v17 + 72);
    v30 = *(_OWORD *)(v17 + 88);
    v31 = *(_OWORD *)(v17 + 104);
    *(_DWORD *)(v16 + 119) = *(_DWORD *)(v17 + 119);
    *(_OWORD *)(v16 + 88) = v30;
    *(_OWORD *)(v16 + 104) = v31;
    *(_OWORD *)(v16 + 72) = v29;
  }
  else
  {
    v51 = *((_QWORD *)v17 + 5);
    v52 = *((_QWORD *)v17 + 6);
    v53 = *((_QWORD *)v17 + 7);
    v54 = *((_QWORD *)v17 + 8);
    v438 = v4;
    v55 = *((_QWORD *)v17 + 9);
    v56 = *((_QWORD *)v17 + 10);
    v57 = *((_QWORD *)v17 + 12);
    __srcd = (void *)*((_QWORD *)v17 + 11);
    v412 = v17[104];
    sub_1A90519B4(v51, v52, v53, v54, v55, v56, (uint64_t)__srcd, v57, v412);
    *(_QWORD *)(v16 + 40) = v51;
    *(_QWORD *)(v16 + 48) = v52;
    *(_QWORD *)(v16 + 56) = v53;
    *(_QWORD *)(v16 + 64) = v54;
    *(_QWORD *)(v16 + 72) = v55;
    *(_QWORD *)(v16 + 80) = v56;
    v4 = v438;
    *(_QWORD *)(v16 + 88) = __srcd;
    *(_QWORD *)(v16 + 96) = v57;
    *(_BYTE *)(v16 + 104) = v412;
    *(_BYTE *)(v16 + 105) = v17[105];
    *(_QWORD *)(v16 + 112) = *((_QWORD *)v17 + 14);
    *(_BYTE *)(v16 + 120) = v17[120];
    *(_BYTE *)(v16 + 121) = v17[121];
    *(_BYTE *)(v16 + 122) = v17[122];
  }
  v58 = v434;
  v59 = *(int *)(v434 + 24);
  v60 = (_QWORD *)(v16 + v59);
  v61 = &v17[v59];
  v62 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v63 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v62 - 1);
  if (((unsigned int (**)(char *, uint64_t, int *))v63)[6](v61, 1, v62))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    a3 = v446;
  }
  else
  {
    v397 = v63;
    v422 = (void *)v16;
    v439 = v4;
    *v60 = *(_QWORD *)v61;
    v60[1] = *((_QWORD *)v61 + 1);
    v60[2] = *((_QWORD *)v61 + 2);
    v60[3] = *((_QWORD *)v61 + 3);
    v60[4] = *((_QWORD *)v61 + 4);
    v60[5] = *((_QWORD *)v61 + 5);
    v65 = *((_QWORD *)v61 + 6);
    *((_BYTE *)v60 + 56) = v61[56];
    v60[6] = v65;
    v66 = *((_QWORD *)v61 + 8);
    *((_BYTE *)v60 + 72) = v61[72];
    v60[8] = v66;
    v60[10] = *((_QWORD *)v61 + 10);
    v60[11] = *((_QWORD *)v61 + 11);
    v60[12] = *((_QWORD *)v61 + 12);
    v60[13] = *((_QWORD *)v61 + 13);
    v60[14] = *((_QWORD *)v61 + 14);
    v60[15] = *((_QWORD *)v61 + 15);
    v67 = v62[12];
    __dst = (char *)v60 + v67;
    v395 = &v61[v67];
    v68 = sub_1A93F726C();
    __src = *(_QWORD **)(v68 - 8);
    v69 = (unsigned int (*)(char *, uint64_t, uint64_t))__src[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v413 = v69;
    if (v69(v395, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v395, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      v71 = __src;
    }
    else
    {
      v71 = __src;
      ((void (*)(char *, char *, uint64_t))__src[2])(__dst, v395, v68);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(__dst, 0, 1, v68);
    }
    v117 = v62[13];
    v118 = (_QWORD *)((char *)v60 + v117);
    v119 = &v61[v117];
    *v118 = *(_QWORD *)v119;
    v118[1] = *((_QWORD *)v119 + 1);
    *(_QWORD *)((char *)v60 + v62[14]) = *(_QWORD *)&v61[v62[14]];
    v120 = v62[15];
    v121 = (char *)v60 + v120;
    v122 = &v61[v120];
    v123 = *(_QWORD *)v122;
    v121[8] = v122[8];
    *(_QWORD *)v121 = v123;
    v124 = v62[16];
    v125 = (char *)v60 + v124;
    v126 = &v61[v124];
    swift_bridgeObjectRetain();
    v432 = v17;
    if (v413(v126, 1, v68))
    {
      v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v71[2])(v125, v126, v68);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v71[7])(v125, 0, 1, v68);
    }
    v128 = v62[17];
    v129 = (_QWORD *)((char *)v60 + v128);
    v130 = &v61[v128];
    *v129 = *(_QWORD *)v130;
    v129[1] = *((_QWORD *)v130 + 1);
    *(_QWORD *)((char *)v60 + v62[18]) = *(_QWORD *)&v61[v62[18]];
    *((_BYTE *)v60 + v62[19]) = v61[v62[19]];
    v131 = v62[20];
    __dstb = (char *)v60 + v131;
    v132 = &v61[v131];
    v133 = sub_1A93F738C();
    v134 = *(_QWORD *)(v133 - 8);
    v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v135(v132, 1, v133))
    {
      v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(__dstb, v132, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v134 + 16))(__dstb, v132, v133);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(__dstb, 0, 1, v133);
    }
    v137 = v62[21];
    v138 = (_QWORD *)((char *)v60 + v137);
    v139 = &v61[v137];
    *v138 = *(_QWORD *)v139;
    v138[1] = *((_QWORD *)v139 + 1);
    *((_BYTE *)v60 + v62[22]) = v61[v62[22]];
    *((_BYTE *)v60 + v62[23]) = v61[v62[23]];
    *((_BYTE *)v60 + v62[24]) = v61[v62[24]];
    *((_BYTE *)v60 + v62[25]) = v61[v62[25]];
    *((_BYTE *)v60 + v62[26]) = v61[v62[26]];
    *((_BYTE *)v60 + v62[27]) = v61[v62[27]];
    *((_BYTE *)v60 + v62[28]) = v61[v62[28]];
    *(_QWORD *)((char *)v60 + v62[29]) = *(_QWORD *)&v61[v62[29]];
    *(_QWORD *)((char *)v60 + v62[30]) = *(_QWORD *)&v61[v62[30]];
    *((_BYTE *)v60 + v62[31]) = v61[v62[31]];
    v140 = v62[32];
    v141 = (_QWORD *)((char *)v60 + v140);
    v142 = &v61[v140];
    *v141 = *(_QWORD *)v142;
    v141[1] = *((_QWORD *)v142 + 1);
    *(_QWORD *)((char *)v60 + v62[33]) = *(_QWORD *)&v61[v62[33]];
    v143 = v62[34];
    v144 = (_QWORD *)((char *)v60 + v143);
    v145 = &v61[v143];
    *v144 = *(_QWORD *)v145;
    v144[1] = *((_QWORD *)v145 + 1);
    v146 = v62[35];
    v147 = (_QWORD *)((char *)v60 + v146);
    v148 = &v61[v146];
    *v147 = *(_QWORD *)v148;
    v147[1] = *((_QWORD *)v148 + 1);
    v149 = v62[36];
    __dstc = (char *)v60 + v149;
    v150 = &v61[v149];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v413(v150, 1, v68))
    {
      v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dstc, v150, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))__src[2])(__dstc, v150, v68);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(__dstc, 0, 1, v68);
    }
    v4 = v439;
    v16 = (uint64_t)v422;
    v58 = v434;
    v152 = v62[37];
    v153 = (_QWORD *)((char *)v60 + v152);
    v154 = &v61[v152];
    *v153 = *(_QWORD *)v154;
    v153[1] = *((_QWORD *)v154 + 1);
    v155 = v62[38];
    v156 = (_QWORD *)((char *)v60 + v155);
    v157 = &v61[v155];
    *v156 = *(_QWORD *)v157;
    v156[1] = *((_QWORD *)v157 + 1);
    *((_BYTE *)v60 + v62[39]) = v61[v62[39]];
    *((_BYTE *)v60 + v62[40]) = v61[v62[40]];
    *((_BYTE *)v60 + v62[41]) = v61[v62[41]];
    *((_BYTE *)v60 + v62[42]) = v61[v62[42]];
    *((_BYTE *)v60 + v62[43]) = v61[v62[43]];
    *((_BYTE *)v60 + v62[44]) = v61[v62[44]];
    *((_BYTE *)v60 + v62[45]) = v61[v62[45]];
    v158 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))v397[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v158(v60, 0, 1, v62);
    a3 = v446;
    v17 = v432;
  }
  *(_QWORD *)(v16 + *(int *)(v58 + 28)) = *(_QWORD *)&v17[*(int *)(v58 + 28)];
  v159 = *(int *)(v58 + 32);
  v160 = (_QWORD *)(v16 + v159);
  v161 = &v17[v159];
  *v160 = *(_QWORD *)v161;
  v160[1] = *((_QWORD *)v161 + 1);
  v162 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v425 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v162(v16, 0, 1, v58);
LABEL_78:
  *(_QWORD *)((char *)v5 + a3[12]) = *(_QWORD *)((char *)v4 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v5 + a3[13]) = *(_QWORD *)((char *)v4 + a3[13]);
  swift_retain();
  swift_release();
  v268 = a3[14];
  v269 = (uint64_t)v5 + v268;
  v270 = (char *)v4 + v268;
  v271 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v272 = (_QWORD *)*((_QWORD *)v271 - 1);
  v273 = (uint64_t (*)(uint64_t, uint64_t, int *))v272[6];
  v274 = v273(v269, 1, v271);
  v275 = v273((uint64_t)v270, 1, v271);
  if (!v274)
  {
    if (v275)
    {
      sub_1A9064714(v269, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_84;
    }
    *(_QWORD *)v269 = *(_QWORD *)v270;
    *(_QWORD *)(v269 + 8) = *((_QWORD *)v270 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + 16) = *((_QWORD *)v270 + 2);
    *(_QWORD *)(v269 + 24) = *((_QWORD *)v270 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + 32) = *((_QWORD *)v270 + 4);
    *(_QWORD *)(v269 + 40) = *((_QWORD *)v270 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v283 = *((_QWORD *)v270 + 6);
    *(_BYTE *)(v269 + 56) = v270[56];
    *(_QWORD *)(v269 + 48) = v283;
    v284 = *((_QWORD *)v270 + 8);
    *(_BYTE *)(v269 + 72) = v270[72];
    *(_QWORD *)(v269 + 64) = v284;
    *(_QWORD *)(v269 + 80) = *((_QWORD *)v270 + 10);
    *(_QWORD *)(v269 + 88) = *((_QWORD *)v270 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + 96) = *((_QWORD *)v270 + 12);
    *(_QWORD *)(v269 + 104) = *((_QWORD *)v270 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + 112) = *((_QWORD *)v270 + 14);
    *(_QWORD *)(v269 + 120) = *((_QWORD *)v270 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v285 = v271[12];
    v286 = (void *)(v269 + v285);
    v287 = &v270[v285];
    v288 = sub_1A93F726C();
    v433 = *(_QWORD *)(v288 - 8);
    v289 = *(uint64_t (**)(void))(v433 + 48);
    v419 = v286;
    LODWORD(v286) = ((uint64_t (*)(void *, uint64_t, uint64_t))v289)(v286, 1, v288);
    v437 = v289;
    v290 = ((uint64_t (*)(char *, uint64_t, uint64_t))v289)(v287, 1, v288);
    if ((_DWORD)v286)
    {
      if (v290)
      {
        v291 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v292 = v419;
LABEL_101:
        memcpy(v292, v287, v291);
        goto LABEL_104;
      }
      (*(void (**)(void *, char *, uint64_t))(v433 + 16))(v419, v287, v288);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v433 + 56))(v419, 0, 1, v288);
    }
    else
    {
      if (v290)
      {
        (*(void (**)(void *, uint64_t))(v433 + 8))(v419, v288);
        v291 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v292 = v419;
        goto LABEL_101;
      }
      (*(void (**)(void *, char *, uint64_t))(v433 + 24))(v419, v287, v288);
    }
LABEL_104:
    v337 = v271[13];
    v338 = (_QWORD *)(v269 + v337);
    v339 = &v270[v337];
    *v338 = *(_QWORD *)v339;
    v338[1] = *((_QWORD *)v339 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + v271[14]) = *(_QWORD *)&v270[v271[14]];
    v340 = v271[15];
    v341 = v269 + v340;
    v342 = &v270[v340];
    v343 = v342[8];
    *(_QWORD *)v341 = *(_QWORD *)v342;
    *(_BYTE *)(v341 + 8) = v343;
    v344 = v271[16];
    v345 = &v270[v344];
    v420 = (void *)(v269 + v344);
    v346 = v289();
    v347 = ((uint64_t (*)(char *, uint64_t, uint64_t))v289)(v345, 1, v288);
    v445 = v4;
    v449 = a3;
    v430 = v288;
    if (v346)
    {
      if (v347)
      {
        v348 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v349 = v420;
LABEL_109:
        memcpy(v349, v345, v348);
        goto LABEL_112;
      }
      (*(void (**)(void *, char *, uint64_t))(v433 + 16))(v420, v345, v288);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v433 + 56))(v420, 0, 1, v288);
    }
    else
    {
      if (v347)
      {
        (*(void (**)(void *, uint64_t))(v433 + 8))(v420, v288);
        v348 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v349 = v420;
        goto LABEL_109;
      }
      (*(void (**)(void *, char *, uint64_t))(v433 + 24))(v420, v345, v288);
    }
LABEL_112:
    v350 = v271[17];
    v351 = (_QWORD *)(v269 + v350);
    v352 = &v270[v350];
    *v351 = *(_QWORD *)v352;
    v351[1] = *((_QWORD *)v352 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v269 + v271[18]) = *(_QWORD *)&v270[v271[18]];
    swift_retain();
    swift_release();
    *(_BYTE *)(v269 + v271[19]) = v270[v271[19]];
    v353 = v271[20];
    v354 = (void *)(v269 + v353);
    v355 = &v270[v353];
    v356 = sub_1A93F738C();
    v357 = *(_QWORD *)(v356 - 8);
    v358 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v357 + 48);
    v359 = v358(v354, 1, v356);
    v360 = v358(v355, 1, v356);
    if (v359)
    {
      if (!v360)
      {
        (*(void (**)(void *, char *, uint64_t))(v357 + 16))(v354, v355, v356);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v357 + 56))(v354, 0, 1, v356);
        goto LABEL_118;
      }
    }
    else
    {
      if (!v360)
      {
        (*(void (**)(void *, char *, uint64_t))(v357 + 24))(v354, v355, v356);
LABEL_118:
        v4 = v445;
        a3 = v449;
        v362 = v271[21];
        v363 = (_QWORD *)(v269 + v362);
        v364 = &v270[v362];
        *v363 = *(_QWORD *)v364;
        v363[1] = *((_QWORD *)v364 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v269 + v271[22]) = v270[v271[22]];
        *(_BYTE *)(v269 + v271[23]) = v270[v271[23]];
        *(_BYTE *)(v269 + v271[24]) = v270[v271[24]];
        *(_BYTE *)(v269 + v271[25]) = v270[v271[25]];
        *(_BYTE *)(v269 + v271[26]) = v270[v271[26]];
        *(_BYTE *)(v269 + v271[27]) = v270[v271[27]];
        *(_BYTE *)(v269 + v271[28]) = v270[v271[28]];
        *(_QWORD *)(v269 + v271[29]) = *(_QWORD *)&v270[v271[29]];
        *(_QWORD *)(v269 + v271[30]) = *(_QWORD *)&v270[v271[30]];
        *(_BYTE *)(v269 + v271[31]) = v270[v271[31]];
        v365 = v271[32];
        v366 = (_QWORD *)(v269 + v365);
        v367 = &v270[v365];
        *v366 = *(_QWORD *)v367;
        v366[1] = *((_QWORD *)v367 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v269 + v271[33]) = *(_QWORD *)&v270[v271[33]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v368 = v271[34];
        v369 = (_QWORD *)(v269 + v368);
        v370 = &v270[v368];
        *v369 = *(_QWORD *)v370;
        v369[1] = *((_QWORD *)v370 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v371 = v271[35];
        v372 = (_QWORD *)(v269 + v371);
        v373 = &v270[v371];
        *v372 = *(_QWORD *)v373;
        v372[1] = *((_QWORD *)v373 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v374 = v271[36];
        v375 = &v270[v374];
        v421 = (void *)(v269 + v374);
        v376 = v437();
        v377 = ((uint64_t (*)(char *, uint64_t, uint64_t))v437)(v375, 1, v430);
        if (v376)
        {
          if (!v377)
          {
            (*(void (**)(void *, char *, uint64_t))(v433 + 16))(v421, v375, v430);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v433 + 56))(v421, 0, 1, v430);
            goto LABEL_127;
          }
          v378 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
          v379 = v421;
        }
        else
        {
          if (!v377)
          {
            (*(void (**)(void *, char *, uint64_t))(v433 + 24))(v421, v375, v430);
            goto LABEL_127;
          }
          (*(void (**)(void *, uint64_t))(v433 + 8))(v421, v430);
          v378 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
          v379 = v421;
        }
        memcpy(v379, v375, v378);
LABEL_127:
        v380 = v271[37];
        v381 = (_QWORD *)(v269 + v380);
        v382 = &v270[v380];
        *v381 = *(_QWORD *)v382;
        v381[1] = *((_QWORD *)v382 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v383 = v271[38];
        v384 = (_QWORD *)(v269 + v383);
        v385 = &v270[v383];
        *v384 = *(_QWORD *)v385;
        v384[1] = *((_QWORD *)v385 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v269 + v271[39]) = v270[v271[39]];
        *(_BYTE *)(v269 + v271[40]) = v270[v271[40]];
        *(_BYTE *)(v269 + v271[41]) = v270[v271[41]];
        *(_BYTE *)(v269 + v271[42]) = v270[v271[42]];
        *(_BYTE *)(v269 + v271[43]) = v270[v271[43]];
        *(_BYTE *)(v269 + v271[44]) = v270[v271[44]];
        *(_BYTE *)(v269 + v271[45]) = v270[v271[45]];
        goto LABEL_128;
      }
      (*(void (**)(void *, uint64_t))(v357 + 8))(v354, v356);
    }
    v361 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v361 - 8) + 64));
    goto LABEL_118;
  }
  if (v275)
  {
LABEL_84:
    v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy((void *)v269, v270, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
    goto LABEL_128;
  }
  __dstd = v5;
  __srcc = v272;
  v444 = v4;
  v448 = a3;
  *(_QWORD *)v269 = *(_QWORD *)v270;
  *(_QWORD *)(v269 + 8) = *((_QWORD *)v270 + 1);
  *(_QWORD *)(v269 + 16) = *((_QWORD *)v270 + 2);
  *(_QWORD *)(v269 + 24) = *((_QWORD *)v270 + 3);
  *(_QWORD *)(v269 + 32) = *((_QWORD *)v270 + 4);
  *(_QWORD *)(v269 + 40) = *((_QWORD *)v270 + 5);
  v276 = *((_QWORD *)v270 + 6);
  *(_BYTE *)(v269 + 56) = v270[56];
  *(_QWORD *)(v269 + 48) = v276;
  v277 = *((_QWORD *)v270 + 8);
  *(_BYTE *)(v269 + 72) = v270[72];
  *(_QWORD *)(v269 + 64) = v277;
  *(_QWORD *)(v269 + 80) = *((_QWORD *)v270 + 10);
  *(_QWORD *)(v269 + 88) = *((_QWORD *)v270 + 11);
  *(_QWORD *)(v269 + 96) = *((_QWORD *)v270 + 12);
  *(_QWORD *)(v269 + 104) = *((_QWORD *)v270 + 13);
  *(_QWORD *)(v269 + 112) = *((_QWORD *)v270 + 14);
  *(_QWORD *)(v269 + 120) = *((_QWORD *)v270 + 15);
  v278 = v271[12];
  v401 = (void *)(v269 + v278);
  v418 = &v270[v278];
  v279 = sub_1A93F726C();
  v436 = *(_QWORD *)(v279 - 8);
  v280 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v436 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v280(v418, 1, v279))
  {
    v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v401, v418, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v436 + 16))(v401, v418, v279);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v436 + 56))(v401, 0, 1, v279);
  }
  v293 = v271[13];
  v294 = (_QWORD *)(v269 + v293);
  v295 = &v270[v293];
  *v294 = *(_QWORD *)v295;
  v294[1] = *((_QWORD *)v295 + 1);
  *(_QWORD *)(v269 + v271[14]) = *(_QWORD *)&v270[v271[14]];
  v296 = v271[15];
  v297 = v269 + v296;
  v298 = &v270[v296];
  v299 = *(_QWORD *)v298;
  *(_BYTE *)(v297 + 8) = v298[8];
  *(_QWORD *)v297 = v299;
  v300 = v271[16];
  v301 = (void *)(v269 + v300);
  v302 = &v270[v300];
  swift_bridgeObjectRetain();
  if (v280(v302, 1, v279))
  {
    v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v436 + 16))(v301, v302, v279);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v436 + 56))(v301, 0, 1, v279);
  }
  v304 = v271[17];
  v305 = (_QWORD *)(v269 + v304);
  v306 = &v270[v304];
  *v305 = *(_QWORD *)v306;
  v305[1] = *((_QWORD *)v306 + 1);
  *(_QWORD *)(v269 + v271[18]) = *(_QWORD *)&v270[v271[18]];
  *(_BYTE *)(v269 + v271[19]) = v270[v271[19]];
  v307 = v271[20];
  v308 = (void *)(v269 + v307);
  v309 = &v270[v307];
  v310 = sub_1A93F738C();
  v311 = *(_QWORD *)(v310 - 8);
  v312 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v311 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v312(v309, 1, v310))
  {
    v313 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v308, v309, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v311 + 16))(v308, v309, v310);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v311 + 56))(v308, 0, 1, v310);
  }
  v314 = v271[21];
  v315 = (_QWORD *)(v269 + v314);
  v316 = &v270[v314];
  *v315 = *(_QWORD *)v316;
  v315[1] = *((_QWORD *)v316 + 1);
  *(_BYTE *)(v269 + v271[22]) = v270[v271[22]];
  *(_BYTE *)(v269 + v271[23]) = v270[v271[23]];
  *(_BYTE *)(v269 + v271[24]) = v270[v271[24]];
  *(_BYTE *)(v269 + v271[25]) = v270[v271[25]];
  *(_BYTE *)(v269 + v271[26]) = v270[v271[26]];
  *(_BYTE *)(v269 + v271[27]) = v270[v271[27]];
  *(_BYTE *)(v269 + v271[28]) = v270[v271[28]];
  *(_QWORD *)(v269 + v271[29]) = *(_QWORD *)&v270[v271[29]];
  *(_QWORD *)(v269 + v271[30]) = *(_QWORD *)&v270[v271[30]];
  *(_BYTE *)(v269 + v271[31]) = v270[v271[31]];
  v317 = v271[32];
  v318 = (_QWORD *)(v269 + v317);
  v319 = &v270[v317];
  *v318 = *(_QWORD *)v319;
  v318[1] = *((_QWORD *)v319 + 1);
  *(_QWORD *)(v269 + v271[33]) = *(_QWORD *)&v270[v271[33]];
  v320 = v271[34];
  v321 = (_QWORD *)(v269 + v320);
  v322 = &v270[v320];
  *v321 = *(_QWORD *)v322;
  v321[1] = *((_QWORD *)v322 + 1);
  v323 = v271[35];
  v324 = (_QWORD *)(v269 + v323);
  v325 = &v270[v323];
  *v324 = *(_QWORD *)v325;
  v324[1] = *((_QWORD *)v325 + 1);
  v326 = v271[36];
  v327 = (void *)(v269 + v326);
  v328 = &v270[v326];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v280(v328, 1, v279))
  {
    v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v327, v328, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v436 + 16))(v327, v328, v279);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v436 + 56))(v327, 0, 1, v279);
  }
  v4 = v444;
  a3 = v448;
  v5 = __dstd;
  v330 = v271[37];
  v331 = (_QWORD *)(v269 + v330);
  v332 = &v270[v330];
  *v331 = *(_QWORD *)v332;
  v331[1] = *((_QWORD *)v332 + 1);
  v333 = v271[38];
  v334 = (_QWORD *)(v269 + v333);
  v335 = &v270[v333];
  *v334 = *(_QWORD *)v335;
  v334[1] = *((_QWORD *)v335 + 1);
  *(_BYTE *)(v269 + v271[39]) = v270[v271[39]];
  *(_BYTE *)(v269 + v271[40]) = v270[v271[40]];
  *(_BYTE *)(v269 + v271[41]) = v270[v271[41]];
  *(_BYTE *)(v269 + v271[42]) = v270[v271[42]];
  *(_BYTE *)(v269 + v271[43]) = v270[v271[43]];
  *(_BYTE *)(v269 + v271[44]) = v270[v271[44]];
  *(_BYTE *)(v269 + v271[45]) = v270[v271[45]];
  v336 = (void (*)(uint64_t, _QWORD, uint64_t, int *))__srcc[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v336(v269, 0, 1, v271);
LABEL_128:
  v386 = a3[15];
  v387 = (char *)v5 + v386;
  v388 = (char *)v4 + v386;
  v389 = *(_QWORD *)v388;
  v387[8] = v388[8];
  *(_QWORD *)v387 = v389;
  *((_BYTE *)v5 + a3[16]) = *((_BYTE *)v4 + a3[16]);
  *(_QWORD *)((char *)v5 + a3[17]) = *(_QWORD *)((char *)v4 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v390 = a3[18];
  v391 = (char *)v5 + v390;
  v392 = (char *)v4 + v390;
  v393 = *(_QWORD *)v392;
  v391[8] = v392[8];
  *(_QWORD *)v391 = v393;
  return v5;
}

uint64_t _s20PlaybackQueueContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  void *__src;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  void *__dstd;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  int *v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v7 = a3[11];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = v6;
  v10 = type metadata accessor for PlaybackIntent(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_DWORD *)((char *)v8 + 119) = *(_DWORD *)((char *)v9 + 119);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
    v97 = v10;
    v14 = *(int *)(v10 + 24);
    v15 = (_OWORD *)((char *)v8 + v14);
    v16 = (_OWORD *)((char *)v9 + v14);
    v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v85 = v18;
      v86 = v11;
      v20 = v16[1];
      *v15 = *v16;
      v15[1] = v20;
      v15[2] = v16[2];
      *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
      *((_BYTE *)v15 + 56) = *((_BYTE *)v16 + 56);
      *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
      *((_BYTE *)v15 + 72) = *((_BYTE *)v16 + 72);
      v21 = v16[6];
      v15[5] = v16[5];
      v15[6] = v21;
      v15[7] = v16[7];
      v22 = v17[12];
      __dst = (char *)v15 + v22;
      v23 = (char *)v16 + v22;
      v24 = sub_1A93F726C();
      v25 = *(_QWORD *)(v24 - 8);
      __src = v23;
      v26 = v23;
      v27 = v24;
      v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v93 = v25;
      if (v95(v26, 1, v24))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v25 + 32))(__dst, __src, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v27);
      }
      *(_OWORD *)((char *)v15 + v17[13]) = *(_OWORD *)((char *)v16 + v17[13]);
      *(_QWORD *)((char *)v15 + v17[14]) = *(_QWORD *)((char *)v16 + v17[14]);
      v29 = v17[15];
      v30 = (char *)v15 + v29;
      v31 = (char *)v16 + v29;
      v30[8] = v31[8];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v32 = v17[16];
      __dsta = (char *)v15 + v32;
      v33 = (char *)v16 + v32;
      v84 = v27;
      if (v95((char *)v16 + v32, 1, v27))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(__dsta, v33, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(__dsta, 0, 1, v27);
      }
      *(_OWORD *)((char *)v15 + v17[17]) = *(_OWORD *)((char *)v16 + v17[17]);
      *(_QWORD *)((char *)v15 + v17[18]) = *(_QWORD *)((char *)v16 + v17[18]);
      *((_BYTE *)v15 + v17[19]) = *((_BYTE *)v16 + v17[19]);
      v35 = v17[20];
      __dstb = (char *)v15 + v35;
      v36 = (char *)v16 + v35;
      v37 = sub_1A93F738C();
      v82 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(__dstb, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(__dstb, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dstb, 0, 1, v37);
      }
      *(_OWORD *)((char *)v15 + v17[21]) = *(_OWORD *)((char *)v16 + v17[21]);
      *((_BYTE *)v15 + v17[22]) = *((_BYTE *)v16 + v17[22]);
      *((_BYTE *)v15 + v17[23]) = *((_BYTE *)v16 + v17[23]);
      *((_BYTE *)v15 + v17[24]) = *((_BYTE *)v16 + v17[24]);
      *((_BYTE *)v15 + v17[25]) = *((_BYTE *)v16 + v17[25]);
      *((_BYTE *)v15 + v17[26]) = *((_BYTE *)v16 + v17[26]);
      *((_BYTE *)v15 + v17[27]) = *((_BYTE *)v16 + v17[27]);
      *((_BYTE *)v15 + v17[28]) = *((_BYTE *)v16 + v17[28]);
      *(_QWORD *)((char *)v15 + v17[29]) = *(_QWORD *)((char *)v16 + v17[29]);
      *(_QWORD *)((char *)v15 + v17[30]) = *(_QWORD *)((char *)v16 + v17[30]);
      *((_BYTE *)v15 + v17[31]) = *((_BYTE *)v16 + v17[31]);
      *(_OWORD *)((char *)v15 + v17[32]) = *(_OWORD *)((char *)v16 + v17[32]);
      *(_QWORD *)((char *)v15 + v17[33]) = *(_QWORD *)((char *)v16 + v17[33]);
      *(_OWORD *)((char *)v15 + v17[34]) = *(_OWORD *)((char *)v16 + v17[34]);
      *(_OWORD *)((char *)v15 + v17[35]) = *(_OWORD *)((char *)v16 + v17[35]);
      v39 = v17[36];
      __dstc = (char *)v15 + v39;
      v40 = (char *)v16 + v39;
      if (v95((char *)v16 + v39, 1, v84))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dstc, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(__dstc, v40, v84);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(__dstc, 0, 1, v84);
      }
      *(_OWORD *)((char *)v15 + v17[37]) = *(_OWORD *)((char *)v16 + v17[37]);
      *(_OWORD *)((char *)v15 + v17[38]) = *(_OWORD *)((char *)v16 + v17[38]);
      *((_BYTE *)v15 + v17[39]) = *((_BYTE *)v16 + v17[39]);
      *((_BYTE *)v15 + v17[40]) = *((_BYTE *)v16 + v17[40]);
      *((_BYTE *)v15 + v17[41]) = *((_BYTE *)v16 + v17[41]);
      *((_BYTE *)v15 + v17[42]) = *((_BYTE *)v16 + v17[42]);
      *((_BYTE *)v15 + v17[43]) = *((_BYTE *)v16 + v17[43]);
      *((_BYTE *)v15 + v17[44]) = *((_BYTE *)v16 + v17[44]);
      *((_BYTE *)v15 + v17[45]) = *((_BYTE *)v16 + v17[45]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v85 + 56))(v15, 0, 1, v17);
      v11 = v86;
    }
    *(_QWORD *)((char *)v8 + *(int *)(v97 + 28)) = *(_QWORD *)((char *)v9 + *(int *)(v97 + 28));
    *(_OWORD *)((char *)v8 + *(int *)(v97 + 32)) = *(_OWORD *)((char *)v9 + *(int *)(v97 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t))(v11 + 56))(v8, 0, 1);
  }
  v42 = v3[13];
  *(_QWORD *)(a1 + v3[12]) = *(_QWORD *)(a2 + v3[12]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  v43 = v3[14];
  v44 = (_OWORD *)(a1 + v43);
  v45 = (_OWORD *)(a2 + v43);
  v46 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v47 = *((_QWORD *)v46 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v96 = v3;
    v49 = v45[1];
    *v44 = *v45;
    v44[1] = v49;
    v44[2] = v45[2];
    *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
    *((_BYTE *)v44 + 56) = *((_BYTE *)v45 + 56);
    *((_QWORD *)v44 + 8) = *((_QWORD *)v45 + 8);
    *((_BYTE *)v44 + 72) = *((_BYTE *)v45 + 72);
    v50 = v45[6];
    v44[5] = v45[5];
    v44[6] = v50;
    v44[7] = v45[7];
    v51 = v46[12];
    v52 = (char *)v44 + v51;
    v53 = (char *)v45 + v51;
    v54 = sub_1A93F726C();
    v55 = *(_QWORD *)(v54 - 8);
    v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    v87 = v55;
    if (v98(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    *(_OWORD *)((char *)v44 + v46[13]) = *(_OWORD *)((char *)v45 + v46[13]);
    *(_QWORD *)((char *)v44 + v46[14]) = *(_QWORD *)((char *)v45 + v46[14]);
    v57 = v46[15];
    v58 = (char *)v44 + v57;
    v59 = (char *)v45 + v57;
    v58[8] = v59[8];
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v60 = v46[16];
    v61 = (char *)v44 + v60;
    v62 = (char *)v45 + v60;
    v3 = v96;
    __dstd = (void *)v54;
    v94 = v47;
    if (v98((char *)v45 + v60, 1, v54))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v61, v62, v54);
      v3 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v61, 0, 1, v54);
    }
    *(_OWORD *)((char *)v44 + v46[17]) = *(_OWORD *)((char *)v45 + v46[17]);
    *(_QWORD *)((char *)v44 + v46[18]) = *(_QWORD *)((char *)v45 + v46[18]);
    *((_BYTE *)v44 + v46[19]) = *((_BYTE *)v45 + v46[19]);
    v64 = v46[20];
    v65 = (char *)v44 + v64;
    v66 = (char *)v45 + v64;
    v67 = sub_1A93F738C();
    v68 = *(_QWORD *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    *(_OWORD *)((char *)v44 + v46[21]) = *(_OWORD *)((char *)v45 + v46[21]);
    *((_BYTE *)v44 + v46[22]) = *((_BYTE *)v45 + v46[22]);
    *((_BYTE *)v44 + v46[23]) = *((_BYTE *)v45 + v46[23]);
    *((_BYTE *)v44 + v46[24]) = *((_BYTE *)v45 + v46[24]);
    *((_BYTE *)v44 + v46[25]) = *((_BYTE *)v45 + v46[25]);
    *((_BYTE *)v44 + v46[26]) = *((_BYTE *)v45 + v46[26]);
    *((_BYTE *)v44 + v46[27]) = *((_BYTE *)v45 + v46[27]);
    *((_BYTE *)v44 + v46[28]) = *((_BYTE *)v45 + v46[28]);
    *(_QWORD *)((char *)v44 + v46[29]) = *(_QWORD *)((char *)v45 + v46[29]);
    *(_QWORD *)((char *)v44 + v46[30]) = *(_QWORD *)((char *)v45 + v46[30]);
    *((_BYTE *)v44 + v46[31]) = *((_BYTE *)v45 + v46[31]);
    *(_OWORD *)((char *)v44 + v46[32]) = *(_OWORD *)((char *)v45 + v46[32]);
    *(_QWORD *)((char *)v44 + v46[33]) = *(_QWORD *)((char *)v45 + v46[33]);
    *(_OWORD *)((char *)v44 + v46[34]) = *(_OWORD *)((char *)v45 + v46[34]);
    *(_OWORD *)((char *)v44 + v46[35]) = *(_OWORD *)((char *)v45 + v46[35]);
    v70 = v46[36];
    v71 = (char *)v44 + v70;
    v72 = (char *)v45 + v70;
    if (v98((char *)v45 + v70, 1, (uint64_t)__dstd))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v87 + 32))(v71, v72, __dstd);
      v3 = v96;
      (*(void (**)(char *, _QWORD, uint64_t, void *))(v87 + 56))(v71, 0, 1, __dstd);
    }
    *(_OWORD *)((char *)v44 + v46[37]) = *(_OWORD *)((char *)v45 + v46[37]);
    *(_OWORD *)((char *)v44 + v46[38]) = *(_OWORD *)((char *)v45 + v46[38]);
    *((_BYTE *)v44 + v46[39]) = *((_BYTE *)v45 + v46[39]);
    *((_BYTE *)v44 + v46[40]) = *((_BYTE *)v45 + v46[40]);
    *((_BYTE *)v44 + v46[41]) = *((_BYTE *)v45 + v46[41]);
    *((_BYTE *)v44 + v46[42]) = *((_BYTE *)v45 + v46[42]);
    *((_BYTE *)v44 + v46[43]) = *((_BYTE *)v45 + v46[43]);
    *((_BYTE *)v44 + v46[44]) = *((_BYTE *)v45 + v46[44]);
    *((_BYTE *)v44 + v46[45]) = *((_BYTE *)v45 + v46[45]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v94 + 56))(v44, 0, 1, v46);
  }
  v74 = v3[15];
  v75 = v3[16];
  v76 = a1 + v74;
  v77 = a2 + v74;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = *(_BYTE *)(v77 + 8);
  *(_BYTE *)(a1 + v75) = *(_BYTE *)(a2 + v75);
  v78 = v3[18];
  *(_QWORD *)(a1 + v3[17]) = *(_QWORD *)(a2 + v3[17]);
  v79 = a1 + v78;
  v80 = a2 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *(_BYTE *)(v79 + 8) = *(_BYTE *)(v80 + 8);
  return a1;
}

uint64_t _s20PlaybackQueueContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  int *v24;
  unsigned int (**v25)(_OWORD *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unsigned __int8 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t (*v60)(uint64_t, uint64_t, int *);
  int v61;
  int v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t (*v98)(void *, uint64_t, uint64_t);
  int v99;
  size_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  const void *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  const void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  const void *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  int v130;
  int v131;
  size_t v132;
  void *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  uint64_t v142;
  uint64_t (*v143)(void *, uint64_t, uint64_t);
  int v144;
  size_t v145;
  void *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  const void *v169;
  int v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t, int *);
  int v194;
  int v195;
  __int128 v196;
  __int128 v197;
  uint64_t v198;
  void *v199;
  const void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  void *v213;
  uint64_t v214;
  uint64_t (*v215)(void *, uint64_t, uint64_t);
  int v216;
  size_t v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  const void *v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  const void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  const void *v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  int v246;
  int v247;
  size_t v248;
  void *v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t (*v260)(void *, uint64_t, uint64_t);
  int v261;
  size_t v262;
  void *v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  const void *v286;
  int v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  void *v311;
  void *v312;
  void *__src;
  void (**__srca)(void *, const void *, _QWORD);
  void *__srcb;
  char *__dst;
  char *__dsta;
  void *__dstb;
  void *__dstc;
  void *__dstd;
  void *__dste;
  void *__dstf;
  void (**v323)(void *, const void *, _QWORD);
  unsigned int (*v324)(const void *, uint64_t, uint64_t);
  uint64_t (*v325)(uint64_t, uint64_t, void *);
  unsigned int (*v326)(char *, uint64_t, uint64_t);
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unsigned int (*v337)(const void *, uint64_t, uint64_t);
  uint64_t (*v338)(uint64_t, uint64_t, uint64_t);
  int *v339;
  int *v340;
  int *v341;
  int *v342;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v8 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v9 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[11];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for PlaybackIntent(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1A9064714(v13, type metadata accessor for PlaybackIntent);
      goto LABEL_7;
    }
    v28 = *(_BYTE *)(v14 + 32);
    v29 = *(_QWORD *)v13;
    v30 = *(_QWORD *)(v13 + 8);
    v31 = *(_QWORD *)(v13 + 16);
    v32 = *(_QWORD *)(v13 + 24);
    v33 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v33;
    v34 = *(_BYTE *)(v13 + 32);
    *(_BYTE *)(v13 + 32) = v28;
    sub_1A912C6B4(v29, v30, v31, v32, v34);
    if (*(_BYTE *)(v13 + 120) != 2)
    {
      if (*(_BYTE *)(v14 + 120) != 2)
      {
        v46 = *(_BYTE *)(v14 + 104);
        v47 = *(_QWORD *)(v13 + 40);
        v48 = *(_QWORD *)(v13 + 48);
        v49 = *(_QWORD *)(v13 + 56);
        v50 = *(_QWORD *)(v13 + 64);
        v51 = *(_QWORD *)(v13 + 72);
        v52 = *(_QWORD *)(v13 + 80);
        v53 = *(_QWORD *)(v13 + 88);
        v54 = *(_QWORD *)(v13 + 96);
        v55 = *(_BYTE *)(v13 + 104);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
        *(_BYTE *)(v13 + 104) = v46;
        sub_1A90531EC(v47, v48, v49, v50, v51, v52, v53, v54, v55);
        *(_BYTE *)(v13 + 105) = *(_BYTE *)(v14 + 105);
        *(_QWORD *)(v13 + 112) = *(_QWORD *)(v14 + 112);
        *(_BYTE *)(v13 + 120) = *(_BYTE *)(v14 + 120);
        *(_BYTE *)(v13 + 121) = *(_BYTE *)(v14 + 121);
        *(_BYTE *)(v13 + 122) = *(_BYTE *)(v14 + 122);
LABEL_15:
        v332 = v15;
        v336 = v14;
        v56 = *(int *)(v15 + 24);
        v57 = v13 + v56;
        v58 = v14 + v56;
        v59 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
        v327 = *((_QWORD *)v59 - 1);
        v60 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v327 + 48);
        v61 = v60(v57, 1, v59);
        v62 = v60(v58, 1, v59);
        if (v61)
        {
          if (!v62)
          {
            v340 = a3;
            v63 = *(_OWORD *)(v58 + 16);
            *(_OWORD *)v57 = *(_OWORD *)v58;
            *(_OWORD *)(v57 + 16) = v63;
            *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
            *(_QWORD *)(v57 + 48) = *(_QWORD *)(v58 + 48);
            *(_BYTE *)(v57 + 56) = *(_BYTE *)(v58 + 56);
            *(_QWORD *)(v57 + 64) = *(_QWORD *)(v58 + 64);
            *(_BYTE *)(v57 + 72) = *(_BYTE *)(v58 + 72);
            v64 = *(_OWORD *)(v58 + 96);
            *(_OWORD *)(v57 + 80) = *(_OWORD *)(v58 + 80);
            *(_OWORD *)(v57 + 96) = v64;
            *(_OWORD *)(v57 + 112) = *(_OWORD *)(v58 + 112);
            v65 = v59[12];
            v66 = (void *)(v57 + v65);
            v67 = (const void *)(v58 + v65);
            v68 = sub_1A93F726C();
            v69 = *(_QWORD *)(v68 - 8);
            v324 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
            __srca = (void (**)(void *, const void *, _QWORD))v69;
            if (v324(v67, 1, v68))
            {
              v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
              memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v66, v67, v68);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
            }
            v102 = (void *)v68;
            *(_OWORD *)(v57 + v59[13]) = *(_OWORD *)(v58 + v59[13]);
            *(_QWORD *)(v57 + v59[14]) = *(_QWORD *)(v58 + v59[14]);
            v103 = v59[15];
            v104 = v57 + v103;
            v105 = v58 + v103;
            *(_BYTE *)(v104 + 8) = *(_BYTE *)(v105 + 8);
            *(_QWORD *)v104 = *(_QWORD *)v105;
            v106 = v59[16];
            v107 = (void *)(v57 + v106);
            v108 = (const void *)(v58 + v106);
            __dstb = v102;
            if (v324((const void *)(v58 + v106), 1, (uint64_t)v102))
            {
              v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
              memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
            }
            else
            {
              ((void (**)(void *, const void *, void *))__srca)[4](v107, v108, v102);
              ((void (*)(void *, _QWORD, uint64_t, void *))__srca[7])(v107, 0, 1, v102);
            }
            *(_OWORD *)(v57 + v59[17]) = *(_OWORD *)(v58 + v59[17]);
            *(_QWORD *)(v57 + v59[18]) = *(_QWORD *)(v58 + v59[18]);
            *(_BYTE *)(v57 + v59[19]) = *(_BYTE *)(v58 + v59[19]);
            v110 = v59[20];
            v111 = (void *)(v57 + v110);
            v112 = (const void *)(v58 + v110);
            v113 = sub_1A93F738C();
            v114 = *(_QWORD *)(v113 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
            {
              v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
              memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v114 + 32))(v111, v112, v113);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
            }
            *(_OWORD *)(v57 + v59[21]) = *(_OWORD *)(v58 + v59[21]);
            *(_BYTE *)(v57 + v59[22]) = *(_BYTE *)(v58 + v59[22]);
            *(_BYTE *)(v57 + v59[23]) = *(_BYTE *)(v58 + v59[23]);
            *(_BYTE *)(v57 + v59[24]) = *(_BYTE *)(v58 + v59[24]);
            *(_BYTE *)(v57 + v59[25]) = *(_BYTE *)(v58 + v59[25]);
            *(_BYTE *)(v57 + v59[26]) = *(_BYTE *)(v58 + v59[26]);
            *(_BYTE *)(v57 + v59[27]) = *(_BYTE *)(v58 + v59[27]);
            *(_BYTE *)(v57 + v59[28]) = *(_BYTE *)(v58 + v59[28]);
            *(_QWORD *)(v57 + v59[29]) = *(_QWORD *)(v58 + v59[29]);
            *(_QWORD *)(v57 + v59[30]) = *(_QWORD *)(v58 + v59[30]);
            *(_BYTE *)(v57 + v59[31]) = *(_BYTE *)(v58 + v59[31]);
            *(_OWORD *)(v57 + v59[32]) = *(_OWORD *)(v58 + v59[32]);
            *(_QWORD *)(v57 + v59[33]) = *(_QWORD *)(v58 + v59[33]);
            *(_OWORD *)(v57 + v59[34]) = *(_OWORD *)(v58 + v59[34]);
            *(_OWORD *)(v57 + v59[35]) = *(_OWORD *)(v58 + v59[35]);
            v116 = v59[36];
            v117 = (void *)(v57 + v116);
            v118 = (const void *)(v58 + v116);
            if (v324((const void *)(v58 + v116), 1, (uint64_t)__dstb))
            {
              v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
              memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
            }
            else
            {
              ((void (**)(void *, const void *, void *))__srca)[4](v117, v118, __dstb);
              ((void (*)(void *, _QWORD, uint64_t, void *))__srca[7])(v117, 0, 1, __dstb);
            }
            *(_OWORD *)(v57 + v59[37]) = *(_OWORD *)(v58 + v59[37]);
            *(_OWORD *)(v57 + v59[38]) = *(_OWORD *)(v58 + v59[38]);
            *(_BYTE *)(v57 + v59[39]) = *(_BYTE *)(v58 + v59[39]);
            *(_BYTE *)(v57 + v59[40]) = *(_BYTE *)(v58 + v59[40]);
            *(_BYTE *)(v57 + v59[41]) = *(_BYTE *)(v58 + v59[41]);
            *(_BYTE *)(v57 + v59[42]) = *(_BYTE *)(v58 + v59[42]);
            *(_BYTE *)(v57 + v59[43]) = *(_BYTE *)(v58 + v59[43]);
            *(_BYTE *)(v57 + v59[44]) = *(_BYTE *)(v58 + v59[44]);
            *(_BYTE *)(v57 + v59[45]) = *(_BYTE *)(v58 + v59[45]);
            (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v327 + 56))(v57, 0, 1, v59);
            goto LABEL_76;
          }
LABEL_21:
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
          memcpy((void *)v57, (const void *)v58, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
LABEL_77:
          *(_QWORD *)(v13 + *(int *)(v332 + 28)) = *(_QWORD *)(v336 + *(int *)(v332 + 28));
          swift_bridgeObjectRelease();
          v183 = *(int *)(v332 + 32);
          v184 = (_QWORD *)(v13 + v183);
          v185 = (uint64_t *)(v336 + v183);
          v187 = *v185;
          v186 = v185[1];
          *v184 = v187;
          v184[1] = v186;
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
        if (v62)
        {
          sub_1A9064714(v57, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          goto LABEL_21;
        }
        v340 = a3;
        v88 = *(_QWORD *)(v58 + 8);
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *(_QWORD *)(v57 + 8) = v88;
        swift_bridgeObjectRelease();
        v89 = *(_QWORD *)(v58 + 24);
        *(_QWORD *)(v57 + 16) = *(_QWORD *)(v58 + 16);
        *(_QWORD *)(v57 + 24) = v89;
        swift_bridgeObjectRelease();
        v90 = *(_QWORD *)(v58 + 40);
        *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
        *(_QWORD *)(v57 + 40) = v90;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v57 + 48) = *(_QWORD *)(v58 + 48);
        *(_BYTE *)(v57 + 56) = *(_BYTE *)(v58 + 56);
        *(_QWORD *)(v57 + 64) = *(_QWORD *)(v58 + 64);
        *(_BYTE *)(v57 + 72) = *(_BYTE *)(v58 + 72);
        v91 = *(_QWORD *)(v58 + 88);
        *(_QWORD *)(v57 + 80) = *(_QWORD *)(v58 + 80);
        *(_QWORD *)(v57 + 88) = v91;
        swift_bridgeObjectRelease();
        v92 = *(_QWORD *)(v58 + 104);
        *(_QWORD *)(v57 + 96) = *(_QWORD *)(v58 + 96);
        *(_QWORD *)(v57 + 104) = v92;
        swift_bridgeObjectRelease();
        v93 = *(_QWORD *)(v58 + 120);
        *(_QWORD *)(v57 + 112) = *(_QWORD *)(v58 + 112);
        *(_QWORD *)(v57 + 120) = v93;
        swift_bridgeObjectRelease();
        v94 = v59[12];
        v95 = (void *)(v57 + v94);
        v96 = (void *)(v58 + v94);
        v97 = sub_1A93F726C();
        v328 = *(_QWORD *)(v97 - 8);
        v98 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v328 + 48);
        v311 = v95;
        LODWORD(v95) = v98(v95, 1, v97);
        v325 = (uint64_t (*)(uint64_t, uint64_t, void *))v98;
        v99 = v98(v96, 1, v97);
        if ((_DWORD)v95)
        {
          if (v99)
          {
            v100 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
            v101 = v311;
LABEL_50:
            memcpy(v101, v96, v100);
            goto LABEL_53;
          }
          (*(void (**)(void *, void *, uint64_t))(v328 + 32))(v311, v96, v97);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v328 + 56))(v311, 0, 1, v97);
        }
        else
        {
          if (v99)
          {
            (*(void (**)(void *, uint64_t))(v328 + 8))(v311, v97);
            v100 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
            v101 = v311;
            goto LABEL_50;
          }
          (*(void (**)(void *, void *, uint64_t))(v328 + 40))(v311, v96, v97);
        }
LABEL_53:
        v120 = v59[13];
        v121 = (_QWORD *)(v57 + v120);
        v122 = (uint64_t *)(v58 + v120);
        v124 = *v122;
        v123 = v122[1];
        *v121 = v124;
        v121[1] = v123;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v57 + v59[14]) = *(_QWORD *)(v58 + v59[14]);
        v125 = v59[15];
        v126 = v57 + v125;
        v127 = v58 + v125;
        *(_QWORD *)v126 = *(_QWORD *)v127;
        *(_BYTE *)(v126 + 8) = *(_BYTE *)(v127 + 8);
        v128 = v59[16];
        v129 = (void *)(v58 + v128);
        v312 = (void *)(v57 + v128);
        v130 = ((uint64_t (*)(void))v98)();
        v131 = v98(v129, 1, v97);
        __dstc = (void *)v97;
        if (v130)
        {
          if (v131)
          {
            v132 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
            v133 = v312;
LABEL_58:
            memcpy(v133, v129, v132);
            goto LABEL_61;
          }
          (*(void (**)(void *, void *, uint64_t))(v328 + 32))(v312, v129, v97);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v328 + 56))(v312, 0, 1, v97);
        }
        else
        {
          if (v131)
          {
            (*(void (**)(void *, uint64_t))(v328 + 8))(v312, v97);
            v132 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
            v133 = v312;
            goto LABEL_58;
          }
          (*(void (**)(void *, void *, uint64_t))(v328 + 40))(v312, v129, v97);
        }
LABEL_61:
        v134 = v59[17];
        v135 = (_QWORD *)(v57 + v134);
        v136 = (uint64_t *)(v58 + v134);
        v138 = *v136;
        v137 = v136[1];
        *v135 = v138;
        v135[1] = v137;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v57 + v59[18]) = *(_QWORD *)(v58 + v59[18]);
        swift_release();
        *(_BYTE *)(v57 + v59[19]) = *(_BYTE *)(v58 + v59[19]);
        v139 = v59[20];
        v140 = (void *)(v57 + v139);
        v141 = (void *)(v58 + v139);
        v142 = sub_1A93F738C();
        v309 = *(_QWORD *)(v142 - 8);
        v143 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v309 + 48);
        __srcb = v140;
        LODWORD(v140) = v143(v140, 1, v142);
        v144 = v143(v141, 1, v142);
        if ((_DWORD)v140)
        {
          if (v144)
          {
            v145 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8)
                             + 64);
            v146 = __srcb;
LABEL_66:
            memcpy(v146, v141, v145);
            goto LABEL_69;
          }
          (*(void (**)(void *, void *, uint64_t))(v309 + 32))(__srcb, v141, v142);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v309 + 56))(__srcb, 0, 1, v142);
        }
        else
        {
          if (v144)
          {
            (*(void (**)(void *, uint64_t))(v309 + 8))(__srcb, v142);
            v145 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8)
                             + 64);
            v146 = __srcb;
            goto LABEL_66;
          }
          (*(void (**)(void *, void *, uint64_t))(v309 + 40))(__srcb, v141, v142);
        }
LABEL_69:
        v147 = v59[21];
        v148 = (_QWORD *)(v57 + v147);
        v149 = (uint64_t *)(v58 + v147);
        v151 = *v149;
        v150 = v149[1];
        *v148 = v151;
        v148[1] = v150;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v57 + v59[22]) = *(_BYTE *)(v58 + v59[22]);
        *(_BYTE *)(v57 + v59[23]) = *(_BYTE *)(v58 + v59[23]);
        *(_BYTE *)(v57 + v59[24]) = *(_BYTE *)(v58 + v59[24]);
        *(_BYTE *)(v57 + v59[25]) = *(_BYTE *)(v58 + v59[25]);
        *(_BYTE *)(v57 + v59[26]) = *(_BYTE *)(v58 + v59[26]);
        *(_BYTE *)(v57 + v59[27]) = *(_BYTE *)(v58 + v59[27]);
        *(_BYTE *)(v57 + v59[28]) = *(_BYTE *)(v58 + v59[28]);
        *(_QWORD *)(v57 + v59[29]) = *(_QWORD *)(v58 + v59[29]);
        *(_QWORD *)(v57 + v59[30]) = *(_QWORD *)(v58 + v59[30]);
        *(_BYTE *)(v57 + v59[31]) = *(_BYTE *)(v58 + v59[31]);
        v152 = v59[32];
        v153 = (_QWORD *)(v57 + v152);
        v154 = (uint64_t *)(v58 + v152);
        v156 = *v154;
        v155 = v154[1];
        *v153 = v156;
        v153[1] = v155;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v57 + v59[33]) = *(_QWORD *)(v58 + v59[33]);
        swift_bridgeObjectRelease();
        v157 = v59[34];
        v158 = (_QWORD *)(v57 + v157);
        v159 = (uint64_t *)(v58 + v157);
        v161 = *v159;
        v160 = v159[1];
        *v158 = v161;
        v158[1] = v160;
        swift_bridgeObjectRelease();
        v162 = v59[35];
        v163 = (_QWORD *)(v57 + v162);
        v164 = (uint64_t *)(v58 + v162);
        v166 = *v164;
        v165 = v164[1];
        *v163 = v166;
        v163[1] = v165;
        swift_bridgeObjectRelease();
        v167 = v59[36];
        v168 = (void *)(v57 + v167);
        v169 = (const void *)(v58 + v167);
        v170 = v325(v57 + v167, 1, __dstc);
        v171 = ((uint64_t (*)(const void *, uint64_t))v325)(v169, 1);
        if (v170)
        {
          if (!v171)
          {
            (*(void (**)(void *, const void *, void *))(v328 + 32))(v168, v169, __dstc);
            (*(void (**)(void *, _QWORD, uint64_t, void *))(v328 + 56))(v168, 0, 1, __dstc);
LABEL_75:
            v173 = v59[37];
            v174 = (_QWORD *)(v57 + v173);
            v175 = (uint64_t *)(v58 + v173);
            v177 = *v175;
            v176 = v175[1];
            *v174 = v177;
            v174[1] = v176;
            swift_bridgeObjectRelease();
            v178 = v59[38];
            v179 = (_QWORD *)(v57 + v178);
            v180 = (uint64_t *)(v58 + v178);
            v182 = *v180;
            v181 = v180[1];
            *v179 = v182;
            v179[1] = v181;
            swift_bridgeObjectRelease();
            *(_BYTE *)(v57 + v59[39]) = *(_BYTE *)(v58 + v59[39]);
            *(_BYTE *)(v57 + v59[40]) = *(_BYTE *)(v58 + v59[40]);
            *(_BYTE *)(v57 + v59[41]) = *(_BYTE *)(v58 + v59[41]);
            *(_BYTE *)(v57 + v59[42]) = *(_BYTE *)(v58 + v59[42]);
            *(_BYTE *)(v57 + v59[43]) = *(_BYTE *)(v58 + v59[43]);
            *(_BYTE *)(v57 + v59[44]) = *(_BYTE *)(v58 + v59[44]);
            *(_BYTE *)(v57 + v59[45]) = *(_BYTE *)(v58 + v59[45]);
LABEL_76:
            a3 = v340;
            goto LABEL_77;
          }
        }
        else
        {
          if (!v171)
          {
            (*(void (**)(void *, const void *, void *))(v328 + 40))(v168, v169, __dstc);
            goto LABEL_75;
          }
          (*(void (**)(void *, void *))(v328 + 8))(v168, __dstc);
        }
        v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
        goto LABEL_75;
      }
      sub_1A916DE60(v13 + 40);
    }
    v35 = *(_OWORD *)(v14 + 88);
    *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
    *(_OWORD *)(v13 + 88) = v35;
    *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
    *(_DWORD *)(v13 + 119) = *(_DWORD *)(v14 + 119);
    v36 = *(_OWORD *)(v14 + 56);
    *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
    *(_OWORD *)(v13 + 56) = v36;
    goto LABEL_15;
  }
  if (v19)
  {
LABEL_7:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_78;
  }
  v20 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v20;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  *(_DWORD *)(v13 + 119) = *(_DWORD *)(v14 + 119);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
  v331 = v15;
  v335 = v14;
  v21 = *(int *)(v15 + 24);
  v22 = (_OWORD *)(v13 + v21);
  v23 = (_OWORD *)(v14 + v21);
  v24 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v25 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((_QWORD *)v24 - 1);
  if (v25[6](v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v339 = a3;
    v37 = v23[1];
    *v22 = *v23;
    v22[1] = v37;
    v22[2] = v23[2];
    *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
    *((_BYTE *)v22 + 56) = *((_BYTE *)v23 + 56);
    *((_QWORD *)v22 + 8) = *((_QWORD *)v23 + 8);
    *((_BYTE *)v22 + 72) = *((_BYTE *)v23 + 72);
    v38 = v23[6];
    v22[5] = v23[5];
    v22[6] = v38;
    v22[7] = v23[7];
    v39 = v24[12];
    __dst = (char *)v22 + v39;
    v40 = (char *)v23 + v39;
    v41 = sub_1A93F726C();
    v42 = *(_QWORD *)(v41 - 8);
    __src = v40;
    v43 = v40;
    v44 = v41;
    v326 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    v323 = (void (**)(void *, const void *, _QWORD))v42;
    v310 = v25;
    if (v326(v43, 1, v41))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v42 + 32))(__dst, __src, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v44);
    }
    *(_OWORD *)((char *)v22 + v24[13]) = *(_OWORD *)((char *)v23 + v24[13]);
    *(_QWORD *)((char *)v22 + v24[14]) = *(_QWORD *)((char *)v23 + v24[14]);
    v72 = v24[15];
    v73 = (char *)v22 + v72;
    v74 = (char *)v23 + v72;
    v73[8] = v74[8];
    *(_QWORD *)v73 = *(_QWORD *)v74;
    v75 = v24[16];
    v76 = (char *)v22 + v75;
    v77 = (char *)v23 + v75;
    v308 = v44;
    if (v326((char *)v23 + v75, 1, v44))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v323[4](v76, v77, v44);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v323[7])(v76, 0, 1, v44);
    }
    *(_OWORD *)((char *)v22 + v24[17]) = *(_OWORD *)((char *)v23 + v24[17]);
    *(_QWORD *)((char *)v22 + v24[18]) = *(_QWORD *)((char *)v23 + v24[18]);
    *((_BYTE *)v22 + v24[19]) = *((_BYTE *)v23 + v24[19]);
    v79 = v24[20];
    __dsta = (char *)v22 + v79;
    v80 = (char *)v23 + v79;
    v81 = sub_1A93F738C();
    v82 = *(_QWORD *)(v81 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(__dsta, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(__dsta, v80, v81);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dsta, 0, 1, v81);
    }
    *(_OWORD *)((char *)v22 + v24[21]) = *(_OWORD *)((char *)v23 + v24[21]);
    *((_BYTE *)v22 + v24[22]) = *((_BYTE *)v23 + v24[22]);
    *((_BYTE *)v22 + v24[23]) = *((_BYTE *)v23 + v24[23]);
    *((_BYTE *)v22 + v24[24]) = *((_BYTE *)v23 + v24[24]);
    *((_BYTE *)v22 + v24[25]) = *((_BYTE *)v23 + v24[25]);
    *((_BYTE *)v22 + v24[26]) = *((_BYTE *)v23 + v24[26]);
    *((_BYTE *)v22 + v24[27]) = *((_BYTE *)v23 + v24[27]);
    *((_BYTE *)v22 + v24[28]) = *((_BYTE *)v23 + v24[28]);
    *(_QWORD *)((char *)v22 + v24[29]) = *(_QWORD *)((char *)v23 + v24[29]);
    *(_QWORD *)((char *)v22 + v24[30]) = *(_QWORD *)((char *)v23 + v24[30]);
    *((_BYTE *)v22 + v24[31]) = *((_BYTE *)v23 + v24[31]);
    *(_OWORD *)((char *)v22 + v24[32]) = *(_OWORD *)((char *)v23 + v24[32]);
    *(_QWORD *)((char *)v22 + v24[33]) = *(_QWORD *)((char *)v23 + v24[33]);
    *(_OWORD *)((char *)v22 + v24[34]) = *(_OWORD *)((char *)v23 + v24[34]);
    *(_OWORD *)((char *)v22 + v24[35]) = *(_OWORD *)((char *)v23 + v24[35]);
    v84 = v24[36];
    v85 = (char *)v22 + v84;
    v86 = (char *)v23 + v84;
    if (v326((char *)v23 + v84, 1, v308))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v323[4](v85, v86, v308);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v323[7])(v85, 0, 1, v308);
    }
    *(_OWORD *)((char *)v22 + v24[37]) = *(_OWORD *)((char *)v23 + v24[37]);
    *(_OWORD *)((char *)v22 + v24[38]) = *(_OWORD *)((char *)v23 + v24[38]);
    *((_BYTE *)v22 + v24[39]) = *((_BYTE *)v23 + v24[39]);
    *((_BYTE *)v22 + v24[40]) = *((_BYTE *)v23 + v24[40]);
    *((_BYTE *)v22 + v24[41]) = *((_BYTE *)v23 + v24[41]);
    *((_BYTE *)v22 + v24[42]) = *((_BYTE *)v23 + v24[42]);
    *((_BYTE *)v22 + v24[43]) = *((_BYTE *)v23 + v24[43]);
    *((_BYTE *)v22 + v24[44]) = *((_BYTE *)v23 + v24[44]);
    *((_BYTE *)v22 + v24[45]) = *((_BYTE *)v23 + v24[45]);
    (*((void (**)(_OWORD *, _QWORD, uint64_t, int *))v310 + 7))(v22, 0, 1, v24);
    a3 = v339;
  }
  *(_QWORD *)(v13 + *(int *)(v331 + 28)) = *(_QWORD *)(v335 + *(int *)(v331 + 28));
  *(_OWORD *)(v13 + *(int *)(v331 + 32)) = *(_OWORD *)(v335 + *(int *)(v331 + 32));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 56))(v13, 0, 1);
LABEL_78:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_release();
  v188 = a3[14];
  v189 = a1 + v188;
  v190 = a2 + v188;
  v191 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v192 = *((_QWORD *)v191 - 1);
  v193 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v192 + 48);
  v194 = v193(v189, 1, v191);
  v195 = v193(v190, 1, v191);
  if (!v194)
  {
    if (v195)
    {
      sub_1A9064714(v189, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_84;
    }
    v205 = *(_QWORD *)(v190 + 8);
    *(_QWORD *)v189 = *(_QWORD *)v190;
    *(_QWORD *)(v189 + 8) = v205;
    swift_bridgeObjectRelease();
    v206 = *(_QWORD *)(v190 + 24);
    *(_QWORD *)(v189 + 16) = *(_QWORD *)(v190 + 16);
    *(_QWORD *)(v189 + 24) = v206;
    swift_bridgeObjectRelease();
    v207 = *(_QWORD *)(v190 + 40);
    *(_QWORD *)(v189 + 32) = *(_QWORD *)(v190 + 32);
    *(_QWORD *)(v189 + 40) = v207;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v189 + 48) = *(_QWORD *)(v190 + 48);
    *(_BYTE *)(v189 + 56) = *(_BYTE *)(v190 + 56);
    *(_QWORD *)(v189 + 64) = *(_QWORD *)(v190 + 64);
    *(_BYTE *)(v189 + 72) = *(_BYTE *)(v190 + 72);
    v208 = *(_QWORD *)(v190 + 88);
    *(_QWORD *)(v189 + 80) = *(_QWORD *)(v190 + 80);
    *(_QWORD *)(v189 + 88) = v208;
    swift_bridgeObjectRelease();
    v209 = *(_QWORD *)(v190 + 104);
    *(_QWORD *)(v189 + 96) = *(_QWORD *)(v190 + 96);
    *(_QWORD *)(v189 + 104) = v209;
    swift_bridgeObjectRelease();
    v210 = *(_QWORD *)(v190 + 120);
    *(_QWORD *)(v189 + 112) = *(_QWORD *)(v190 + 112);
    *(_QWORD *)(v189 + 120) = v210;
    swift_bridgeObjectRelease();
    v211 = v191[12];
    v212 = (void *)(v189 + v211);
    v213 = (void *)(v190 + v211);
    v214 = sub_1A93F726C();
    v334 = *(_QWORD *)(v214 - 8);
    v215 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v334 + 48);
    __dstd = v212;
    LODWORD(v212) = v215(v212, 1, v214);
    v338 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v215;
    v216 = v215(v213, 1, v214);
    if ((_DWORD)v212)
    {
      if (v216)
      {
        v217 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v218 = __dstd;
LABEL_101:
        memcpy(v218, v213, v217);
        goto LABEL_104;
      }
      (*(void (**)(void *, void *, uint64_t))(v334 + 32))(__dstd, v213, v214);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v334 + 56))(__dstd, 0, 1, v214);
    }
    else
    {
      if (v216)
      {
        (*(void (**)(void *, uint64_t))(v334 + 8))(__dstd, v214);
        v217 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v218 = __dstd;
        goto LABEL_101;
      }
      (*(void (**)(void *, void *, uint64_t))(v334 + 40))(__dstd, v213, v214);
    }
LABEL_104:
    v236 = v191[13];
    v237 = (_QWORD *)(v189 + v236);
    v238 = (uint64_t *)(v190 + v236);
    v240 = *v238;
    v239 = v238[1];
    *v237 = v240;
    v237[1] = v239;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v189 + v191[14]) = *(_QWORD *)(v190 + v191[14]);
    v241 = v191[15];
    v242 = v189 + v241;
    v243 = v190 + v241;
    *(_QWORD *)v242 = *(_QWORD *)v243;
    *(_BYTE *)(v242 + 8) = *(_BYTE *)(v243 + 8);
    v244 = v191[16];
    v245 = (void *)(v190 + v244);
    __dste = (void *)(v189 + v244);
    v246 = ((uint64_t (*)(void))v215)();
    v247 = v215(v245, 1, v214);
    v342 = a3;
    v330 = v214;
    if (v246)
    {
      if (v247)
      {
        v248 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v249 = __dste;
LABEL_109:
        memcpy(v249, v245, v248);
        goto LABEL_112;
      }
      (*(void (**)(void *, void *, uint64_t))(v334 + 32))(__dste, v245, v214);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v334 + 56))(__dste, 0, 1, v214);
    }
    else
    {
      if (v247)
      {
        (*(void (**)(void *, uint64_t))(v334 + 8))(__dste, v214);
        v248 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0) - 8) + 64);
        v249 = __dste;
        goto LABEL_109;
      }
      (*(void (**)(void *, void *, uint64_t))(v334 + 40))(__dste, v245, v214);
    }
LABEL_112:
    v250 = v191[17];
    v251 = (_QWORD *)(v189 + v250);
    v252 = (uint64_t *)(v190 + v250);
    v254 = *v252;
    v253 = v252[1];
    *v251 = v254;
    v251[1] = v253;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v189 + v191[18]) = *(_QWORD *)(v190 + v191[18]);
    swift_release();
    *(_BYTE *)(v189 + v191[19]) = *(_BYTE *)(v190 + v191[19]);
    v255 = v191[20];
    v256 = (void *)(v189 + v255);
    v257 = (void *)(v190 + v255);
    v258 = sub_1A93F738C();
    v259 = *(_QWORD *)(v258 - 8);
    v260 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v259 + 48);
    __dstf = v256;
    LODWORD(v256) = v260(v256, 1, v258);
    v261 = v260(v257, 1, v258);
    if ((_DWORD)v256)
    {
      if (v261)
      {
        v262 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8)
                         + 64);
        v263 = __dstf;
LABEL_117:
        memcpy(v263, v257, v262);
        goto LABEL_120;
      }
      (*(void (**)(void *, void *, uint64_t))(v259 + 32))(__dstf, v257, v258);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v259 + 56))(__dstf, 0, 1, v258);
    }
    else
    {
      if (v261)
      {
        (*(void (**)(void *, uint64_t))(v259 + 8))(__dstf, v258);
        v262 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360) - 8)
                         + 64);
        v263 = __dstf;
        goto LABEL_117;
      }
      (*(void (**)(void *, void *, uint64_t))(v259 + 40))(__dstf, v257, v258);
    }
LABEL_120:
    a3 = v342;
    v264 = v191[21];
    v265 = (_QWORD *)(v189 + v264);
    v266 = (uint64_t *)(v190 + v264);
    v268 = *v266;
    v267 = v266[1];
    *v265 = v268;
    v265[1] = v267;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v189 + v191[22]) = *(_BYTE *)(v190 + v191[22]);
    *(_BYTE *)(v189 + v191[23]) = *(_BYTE *)(v190 + v191[23]);
    *(_BYTE *)(v189 + v191[24]) = *(_BYTE *)(v190 + v191[24]);
    *(_BYTE *)(v189 + v191[25]) = *(_BYTE *)(v190 + v191[25]);
    *(_BYTE *)(v189 + v191[26]) = *(_BYTE *)(v190 + v191[26]);
    *(_BYTE *)(v189 + v191[27]) = *(_BYTE *)(v190 + v191[27]);
    *(_BYTE *)(v189 + v191[28]) = *(_BYTE *)(v190 + v191[28]);
    *(_QWORD *)(v189 + v191[29]) = *(_QWORD *)(v190 + v191[29]);
    *(_QWORD *)(v189 + v191[30]) = *(_QWORD *)(v190 + v191[30]);
    *(_BYTE *)(v189 + v191[31]) = *(_BYTE *)(v190 + v191[31]);
    v269 = v191[32];
    v270 = (_QWORD *)(v189 + v269);
    v271 = (uint64_t *)(v190 + v269);
    v273 = *v271;
    v272 = v271[1];
    *v270 = v273;
    v270[1] = v272;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v189 + v191[33]) = *(_QWORD *)(v190 + v191[33]);
    swift_bridgeObjectRelease();
    v274 = v191[34];
    v275 = (_QWORD *)(v189 + v274);
    v276 = (uint64_t *)(v190 + v274);
    v278 = *v276;
    v277 = v276[1];
    *v275 = v278;
    v275[1] = v277;
    swift_bridgeObjectRelease();
    v279 = v191[35];
    v280 = (_QWORD *)(v189 + v279);
    v281 = (uint64_t *)(v190 + v279);
    v283 = *v281;
    v282 = v281[1];
    *v280 = v283;
    v280[1] = v282;
    swift_bridgeObjectRelease();
    v284 = v191[36];
    v285 = (void *)(v189 + v284);
    v286 = (const void *)(v190 + v284);
    v287 = v338(v189 + v284, 1, v330);
    v288 = v338((uint64_t)v286, 1, v330);
    if (v287)
    {
      if (!v288)
      {
        (*(void (**)(void *, const void *, uint64_t))(v334 + 32))(v285, v286, v330);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v334 + 56))(v285, 0, 1, v330);
LABEL_126:
        v290 = v191[37];
        v291 = (_QWORD *)(v189 + v290);
        v292 = (uint64_t *)(v190 + v290);
        v294 = *v292;
        v293 = v292[1];
        *v291 = v294;
        v291[1] = v293;
        swift_bridgeObjectRelease();
        v295 = v191[38];
        v296 = (_QWORD *)(v189 + v295);
        v297 = (uint64_t *)(v190 + v295);
        v299 = *v297;
        v298 = v297[1];
        *v296 = v299;
        v296[1] = v298;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v189 + v191[39]) = *(_BYTE *)(v190 + v191[39]);
        *(_BYTE *)(v189 + v191[40]) = *(_BYTE *)(v190 + v191[40]);
        *(_BYTE *)(v189 + v191[41]) = *(_BYTE *)(v190 + v191[41]);
        *(_BYTE *)(v189 + v191[42]) = *(_BYTE *)(v190 + v191[42]);
        *(_BYTE *)(v189 + v191[43]) = *(_BYTE *)(v190 + v191[43]);
        *(_BYTE *)(v189 + v191[44]) = *(_BYTE *)(v190 + v191[44]);
        *(_BYTE *)(v189 + v191[45]) = *(_BYTE *)(v190 + v191[45]);
        goto LABEL_127;
      }
    }
    else
    {
      if (!v288)
      {
        (*(void (**)(void *, const void *, uint64_t))(v334 + 40))(v285, v286, v330);
        goto LABEL_126;
      }
      (*(void (**)(void *, uint64_t))(v334 + 8))(v285, v330);
    }
    v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v285, v286, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
    goto LABEL_126;
  }
  if (v195)
  {
LABEL_84:
    v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy((void *)v189, (const void *)v190, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
    goto LABEL_127;
  }
  v333 = v192;
  v196 = *(_OWORD *)(v190 + 16);
  *(_OWORD *)v189 = *(_OWORD *)v190;
  *(_OWORD *)(v189 + 16) = v196;
  *(_OWORD *)(v189 + 32) = *(_OWORD *)(v190 + 32);
  *(_QWORD *)(v189 + 48) = *(_QWORD *)(v190 + 48);
  *(_BYTE *)(v189 + 56) = *(_BYTE *)(v190 + 56);
  *(_QWORD *)(v189 + 64) = *(_QWORD *)(v190 + 64);
  *(_BYTE *)(v189 + 72) = *(_BYTE *)(v190 + 72);
  v197 = *(_OWORD *)(v190 + 96);
  *(_OWORD *)(v189 + 80) = *(_OWORD *)(v190 + 80);
  *(_OWORD *)(v189 + 96) = v197;
  *(_OWORD *)(v189 + 112) = *(_OWORD *)(v190 + 112);
  v198 = v191[12];
  v199 = (void *)(v189 + v198);
  v200 = (const void *)(v190 + v198);
  v201 = sub_1A93F726C();
  v202 = *(_QWORD *)(v201 - 8);
  v337 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v202 + 48);
  v329 = v202;
  if (v337(v200, 1, v201))
  {
    v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v202 + 32))(v199, v200, v201);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
  }
  *(_OWORD *)(v189 + v191[13]) = *(_OWORD *)(v190 + v191[13]);
  *(_QWORD *)(v189 + v191[14]) = *(_QWORD *)(v190 + v191[14]);
  v219 = v191[15];
  v220 = v189 + v219;
  v221 = v190 + v219;
  *(_BYTE *)(v220 + 8) = *(_BYTE *)(v221 + 8);
  *(_QWORD *)v220 = *(_QWORD *)v221;
  v222 = v191[16];
  v223 = (void *)(v189 + v222);
  v224 = (const void *)(v190 + v222);
  v341 = a3;
  if (v337((const void *)(v190 + v222), 1, v201))
  {
    v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v329 + 32))(v223, v224, v201);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v329 + 56))(v223, 0, 1, v201);
  }
  *(_OWORD *)(v189 + v191[17]) = *(_OWORD *)(v190 + v191[17]);
  *(_QWORD *)(v189 + v191[18]) = *(_QWORD *)(v190 + v191[18]);
  *(_BYTE *)(v189 + v191[19]) = *(_BYTE *)(v190 + v191[19]);
  v226 = v191[20];
  v227 = (void *)(v189 + v226);
  v228 = (const void *)(v190 + v226);
  v229 = sub_1A93F738C();
  v230 = *(_QWORD *)(v229 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v230 + 48))(v228, 1, v229))
  {
    v231 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v230 + 32))(v227, v228, v229);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
  }
  a3 = v341;
  *(_OWORD *)(v189 + v191[21]) = *(_OWORD *)(v190 + v191[21]);
  *(_BYTE *)(v189 + v191[22]) = *(_BYTE *)(v190 + v191[22]);
  *(_BYTE *)(v189 + v191[23]) = *(_BYTE *)(v190 + v191[23]);
  *(_BYTE *)(v189 + v191[24]) = *(_BYTE *)(v190 + v191[24]);
  *(_BYTE *)(v189 + v191[25]) = *(_BYTE *)(v190 + v191[25]);
  *(_BYTE *)(v189 + v191[26]) = *(_BYTE *)(v190 + v191[26]);
  *(_BYTE *)(v189 + v191[27]) = *(_BYTE *)(v190 + v191[27]);
  *(_BYTE *)(v189 + v191[28]) = *(_BYTE *)(v190 + v191[28]);
  *(_QWORD *)(v189 + v191[29]) = *(_QWORD *)(v190 + v191[29]);
  *(_QWORD *)(v189 + v191[30]) = *(_QWORD *)(v190 + v191[30]);
  *(_BYTE *)(v189 + v191[31]) = *(_BYTE *)(v190 + v191[31]);
  *(_OWORD *)(v189 + v191[32]) = *(_OWORD *)(v190 + v191[32]);
  *(_QWORD *)(v189 + v191[33]) = *(_QWORD *)(v190 + v191[33]);
  *(_OWORD *)(v189 + v191[34]) = *(_OWORD *)(v190 + v191[34]);
  *(_OWORD *)(v189 + v191[35]) = *(_OWORD *)(v190 + v191[35]);
  v232 = v191[36];
  v233 = (void *)(v189 + v232);
  v234 = (const void *)(v190 + v232);
  if (v337((const void *)(v190 + v232), 1, v201))
  {
    v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v329 + 32))(v233, v234, v201);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v329 + 56))(v233, 0, 1, v201);
  }
  *(_OWORD *)(v189 + v191[37]) = *(_OWORD *)(v190 + v191[37]);
  *(_OWORD *)(v189 + v191[38]) = *(_OWORD *)(v190 + v191[38]);
  *(_BYTE *)(v189 + v191[39]) = *(_BYTE *)(v190 + v191[39]);
  *(_BYTE *)(v189 + v191[40]) = *(_BYTE *)(v190 + v191[40]);
  *(_BYTE *)(v189 + v191[41]) = *(_BYTE *)(v190 + v191[41]);
  *(_BYTE *)(v189 + v191[42]) = *(_BYTE *)(v190 + v191[42]);
  *(_BYTE *)(v189 + v191[43]) = *(_BYTE *)(v190 + v191[43]);
  *(_BYTE *)(v189 + v191[44]) = *(_BYTE *)(v190 + v191[44]);
  *(_BYTE *)(v189 + v191[45]) = *(_BYTE *)(v190 + v191[45]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v333 + 56))(v189, 0, 1, v191);
LABEL_127:
  v300 = a3[15];
  v301 = a3[16];
  v302 = a1 + v300;
  v303 = a2 + v300;
  *(_QWORD *)v302 = *(_QWORD *)v303;
  *(_BYTE *)(v302 + 8) = *(_BYTE *)(v303 + 8);
  *(_BYTE *)(a1 + v301) = *(_BYTE *)(a2 + v301);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v304 = a3[18];
  v305 = a1 + v304;
  v306 = a2 + v304;
  *(_QWORD *)v305 = *(_QWORD *)v306;
  *(_BYTE *)(v305 + 8) = *(_BYTE *)(v306 + 8);
  return a1;
}

uint64_t _s20PlaybackQueueContextVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92E93E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 44);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t _s20PlaybackQueueContextVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A92E949C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 56);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s20PlaybackQueueContextV11SourceEventOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92E958C + 4 * byte_1A941BA67[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92E95C0 + 4 * byte_1A941BA62[v4]))();
}

uint64_t sub_1A92E95C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92E95C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92E95D0);
  return result;
}

uint64_t sub_1A92E95DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92E95E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92E95E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92E95F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent()
{
  return &type metadata for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent;
}

id sub_1A92E960C(void *a1, void *a2, uint64_t a3, char a4)
{
  id v5;

  if ((a4 & 1) != 0)
    return sub_1A922C758(a1);
  v5 = a2;
  return a1;
}

void sub_1A92E9638(void *a1, void *a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    sub_1A922C778(a1);
  }
  else
  {

  }
}

unint64_t sub_1A92E9664()
{
  unint64_t result;

  result = qword_1EEABDA88;
  if (!qword_1EEABDA88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AccountResolver.Error, &type metadata for AccountResolver.Error);
    atomic_store(result, (unint64_t *)&qword_1EEABDA88);
  }
  return result;
}

void sub_1A92E96B0(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  id v7;

  swift_beginAccess();
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  v7 = a1;
  dispatch_group_leave(a3);
}

id NotificationSettings.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id NotificationSettings.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id NotificationSettings.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s18PodcastsFoundation20NotificationSettingsC07canSendC0SbyFZ_0()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD aBlock[7];

  v0 = (void *)objc_opt_self();
  if ((objc_msgSend(v0, sel_isRunningOnDesktop) & 1) != 0)
  {
    if (qword_1ED2AA3D8 != -1)
      swift_once();
    v1 = sub_1A93F7698();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED2AA3C0);
    v2 = sub_1A93F7674();
    v3 = sub_1A93F87B4();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A904E000, v2, v3, "Can send user notification - running on desktoop", v4, 2u);
      MEMORY[0x1AF41411C](v4, -1, -1);
    }

    return 1;
  }
  else
  {
    if (qword_1ED2AA358 != -1)
      swift_once();
    v6 = *(os_unfair_lock_s **)(qword_1ED2AB238 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
    v7 = v6 + 4;
    v8 = v6 + 6;
    os_unfair_lock_lock(v6 + 6);
    sub_1A910F090(v7, aBlock);
    os_unfair_lock_unlock(v8);
    if (aBlock[0] != 2
      || (objc_msgSend(v0, sel_isRunningOnTV) & 1) != 0
      || (objc_msgSend(v0, sel_isRunningOnHomepod) & 1) != 0
      || (objc_msgSend(v0, sel_isRunningOnWatch) & 1) != 0)
    {
      if (qword_1ED2AA3D8 != -1)
        swift_once();
      v9 = sub_1A93F7698();
      __swift_project_value_buffer(v9, (uint64_t)qword_1ED2AA3C0);
      v10 = sub_1A93F7674();
      v11 = sub_1A93F87B4();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_1A904E000, v10, v11, "Can NOT send user notification - running in background, TV, HomePod, or Watch", v12, 2u);
        MEMORY[0x1AF41411C](v12, -1, -1);
      }

      return 0;
    }
    else
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = 0;
      v15 = dispatch_group_create();
      dispatch_group_enter(v15);
      v16 = objc_msgSend((id)objc_opt_self(), sel_currentNotificationCenter);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v14;
      *(_QWORD *)(v17 + 24) = v15;
      aBlock[4] = sub_1A92E9D88;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A9116D00;
      aBlock[3] = &block_descriptor_58;
      v18 = _Block_copy(aBlock);
      swift_retain();
      v19 = v15;
      swift_release();
      objc_msgSend(v16, sel_getNotificationSettingsWithCompletionHandler_, v18);
      _Block_release(v18);

      sub_1A93F87F0();
      swift_beginAccess();
      v20 = *(void **)(v14 + 16);
      if (v20)
        v5 = objc_msgSend(v20, sel_hasEnabledSettings);
      else
        v5 = 0;
      if (qword_1ED2AA3D8 != -1)
        swift_once();
      v21 = sub_1A93F7698();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED2AA3C0);
      v22 = sub_1A93F7674();
      v23 = sub_1A93F87B4();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v28 = v25;
        *(_DWORD *)v24 = 67109378;
        sub_1A93F8AA8();
        *(_WORD *)(v24 + 8) = 2080;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4160);
        v26 = sub_1A93F8094();
        sub_1A906436C(v26, v27, &v28);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v22, v23, "Can send user notification? %{BOOL}d - enabled settings? %s", (uint8_t *)v24, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v25, -1, -1);
        MEMORY[0x1AF41411C](v24, -1, -1);
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
  }
  return (uint64_t)v5;
}

uint64_t type metadata accessor for NotificationSettings()
{
  return objc_opt_self();
}

uint64_t sub_1A92E9D38()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A92E9D5C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A92E9D88(void *a1)
{
  uint64_t v1;

  sub_1A92E96B0(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t dispatch thunk of InterestStateRule.canMove(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

unint64_t sub_1A92E9D98()
{
  uint64_t inited;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDA90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 32) = 0x4C74736567677573;
  *(_QWORD *)(inited + 40) = 0xEB00000000737365;
  *(_QWORD *)(inited + 72) = &type metadata for SuggestLessRule;
  *(_QWORD *)(inited + 80) = &off_1E54F06C8;
  *(_QWORD *)(inited + 88) = 0x6C61727475656ELL;
  *(_QWORD *)(inited + 96) = 0xE700000000000000;
  *(_QWORD *)(inited + 128) = &type metadata for NeutralRule;
  *(_QWORD *)(inited + 136) = &off_1E54F06B8;
  *(_QWORD *)(inited + 144) = 0x657469726F766166;
  *(_QWORD *)(inited + 152) = 0xE900000000000064;
  *(_QWORD *)(inited + 184) = &type metadata for FavoritedRule;
  *(_QWORD *)(inited + 192) = &off_1E54F06A8;
  result = sub_1A911374C(inited);
  qword_1EEAED350 = result;
  return result;
}

ValueMetadata *type metadata accessor for FavoritedRule()
{
  return &type metadata for FavoritedRule;
}

ValueMetadata *type metadata accessor for NeutralRule()
{
  return &type metadata for NeutralRule;
}

ValueMetadata *type metadata accessor for SuggestLessRule()
{
  return &type metadata for SuggestLessRule;
}

BOOL sub_1A92E9EA0(uint64_t a1, char a2)
{
  return a2 == 1;
}

uint64_t sub_1A92E9EB4(char a1, char a2)
{
  if (a2 == 2)
    __asm { BR              X9 }
  return 0;
}

void sub_1A92E9F28()
{
  JUMPOUT(0x1A92E9F40);
}

void sub_1A92E9F88()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1A92E9F94);
}

uint64_t sub_1A92E9FA4(char a1, char a2)
{
  if (!a2)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_1A92EA000()
{
  unsigned __int8 v0;
  char v1;

  v1 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  return v1 & 1u | (v0 < 2u);
}

uint64_t MetricsIDType.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t MetricsIDType.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000019;
}

unint64_t sub_1A92EA160()
{
  return MetricsIDType.debugDescription.getter();
}

uint64_t MetricsIDType.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsIDType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsIDType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsIDType.editorialID.getter()
{
  return 0x6169726F74696465;
}

uint64_t static MetricsIDType.itsContentID.getter()
{
  return 0x746E6F635F737469;
}

uint64_t static MetricsIDType.itsID.getter()
{
  return 0x64695F737469;
}

uint64_t static MetricsIDType.recommendationsID.getter()
{
  return 0x64695F6F636572;
}

uint64_t static MetricsIDType.sequential.getter()
{
  return 0x69746E6575716573;
}

unint64_t sub_1A92EA380()
{
  unint64_t result;

  result = qword_1EEABDA98;
  if (!qword_1EEABDA98)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsIDType, &type metadata for MetricsIDType);
    atomic_store(result, (unint64_t *)&qword_1EEABDA98);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIDType()
{
  return &type metadata for MetricsIDType;
}

id MusicSubscriptionInfoSyncUtil.__allocating_init(bag:accountStore:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1A90C5018(a1, a2);

  return v6;
}

id MusicSubscriptionInfoSyncUtil.init(bag:accountStore:)(void *a1, void *a2)
{
  id v4;

  v4 = sub_1A90C5018(a1, a2);

  return v4;
}

uint64_t sub_1A92EA4B8(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  id v102;

  v98 = a3;
  v99 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F60);
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D20);
  v74 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8DB8);
  v81 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v100 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8DA8);
  v87 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v75 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A8DC8);
  v16 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  v90 = v16;
  MEMORY[0x1E0C80A78](v15);
  v82 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D00);
  v19 = *(_QWORD *)(v18 - 8);
  v92 = v18;
  v93 = v19;
  MEMORY[0x1E0C80A78](v18);
  v86 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4790);
  v22 = *(_QWORD *)(v21 - 8);
  v94 = v21;
  v95 = v22;
  MEMORY[0x1E0C80A78](v21);
  v88 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5A28);
  v25 = *(_QWORD *)(v24 - 8);
  v96 = v24;
  v97 = v25;
  MEMORY[0x1E0C80A78](v24);
  v91 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9268);
  swift_allocObject();
  v28 = a1;
  v102 = (id)sub_1A93F7A94();
  v101 = *(id *)&v28[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue];
  v29 = v101;
  v30 = sub_1A93F882C();
  v83 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v30 - 8) + 56);
  v84 = v30;
  v76 = v8;
  v83(v8, 1, 1, v30);
  v79 = sub_1A9066C6C();
  sub_1A9066D74(&qword_1ED2A9260, &qword_1ED2A9268, MEMORY[0x1E0C96108]);
  v80 = sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v77 = v29;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v8, &qword_1ED2A1C88);

  swift_release();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v28;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1A92EDA08;
  *(_QWORD *)(v32 + 24) = v31;
  sub_1A9066D74(&qword_1ED2A8F58, &qword_1ED2A8F60, MEMORY[0x1E0C95CB8]);
  v33 = v28;
  v34 = v71;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v10, v34);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v33;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1A92EDA70;
  *(_QWORD *)(v36 + 24) = v35;
  v37 = v33;
  sub_1A93F78E4();
  sub_1A93F726C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91C0);
  sub_1A9066D74(&qword_1ED2A8D18, &qword_1ED2A8D20, MEMORY[0x1E0C95B48]);
  v38 = MEMORY[0x1E0C96108];
  sub_1A9066D74(&qword_1ED2A91B8, &qword_1ED2A91C0, MEMORY[0x1E0C96108]);
  v39 = v73;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v12, v39);
  *(_QWORD *)(swift_allocObject() + 16) = v37;
  v40 = v37;
  sub_1A93F78E4();
  sub_1A93F6D80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91B0);
  v41 = MEMORY[0x1E0C95B78];
  sub_1A9066D74(&qword_1ED2A8DB0, &qword_1ED2A8DB8, MEMORY[0x1E0C95B78]);
  sub_1A9066D74(&qword_1ED2A91A8, &qword_1ED2A91B0, v38);
  v42 = v75;
  v43 = v78;
  v44 = v100;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v43);
  *(_QWORD *)(swift_allocObject() + 16) = v40;
  v45 = v40;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91D0);
  sub_1A9066D74(&qword_1ED2A8DA0, &qword_1ED2A8DA8, v41);
  sub_1A9066D74(&qword_1ED2A91C8, &qword_1ED2A91D0, MEMORY[0x1E0C96108]);
  v46 = v82;
  v47 = v85;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v42, v47);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v45;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = sub_1A92EDAA0;
  *(_QWORD *)(v49 + 24) = v48;
  sub_1A9066D74(&qword_1ED2A8DC0, (uint64_t *)&unk_1ED2A8DC8, v41);
  v50 = v45;
  v51 = v86;
  v52 = v89;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v46, v52);
  *(_QWORD *)(swift_allocObject() + 16) = v50;
  v53 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5698);
  v54 = v88;
  v55 = v92;
  sub_1A93F7824();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v55);
  v56 = v77;
  v102 = v77;
  v57 = (uint64_t)v76;
  v83(v76, 1, 1, v84);
  sub_1A9066D74(&qword_1ED2A59D8, &qword_1ED2A4790, MEMORY[0x1E0C95B48]);
  v58 = v56;
  v59 = v91;
  v60 = v57;
  v61 = v94;
  sub_1A93F7C80();
  sub_1A905FD54(v60, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v54, v61);
  v62 = swift_allocObject();
  v63 = v98;
  v64 = v99;
  *(_QWORD *)(v62 + 16) = v98;
  *(_QWORD *)(v62 + 24) = v64;
  v65 = (_QWORD *)swift_allocObject();
  v65[2] = v53;
  v65[3] = v63;
  v65[4] = v64;
  sub_1A9066D74(&qword_1ED2A5A20, &qword_1ED2A5A28, MEMORY[0x1E0C95CB8]);
  swift_retain_n();
  v66 = v53;
  v67 = v96;
  v68 = sub_1A93F7BA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v67);
  *(_QWORD *)&v66[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_syncSession] = v68;
  return swift_release();
}

uint64_t sub_1A92EAED0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91C0);
  swift_allocObject();
  result = sub_1A93F7A94();
  *a1 = result;
  return result;
}

uint64_t sub_1A92EAF50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_1A93F6D80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91D0);
  swift_allocObject();
  result = sub_1A93F7A94();
  *a2 = result;
  return result;
}

uint64_t sub_1A92EB044@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v8[0] = *a1;
  v8[1] = v4;
  v8[2] = v6;
  sub_1A917BB00((uint64_t)v8);
  if (v2)
    return swift_willThrow();
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1A92EB0AC(void **a1, void (*a2)(_QWORD *))
{
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  _QWORD v16[3];
  char v17;

  v2 = *a1;
  if (*a1)
  {
    v16[0] = *a1;
    v4 = v2;
    v5 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v17 != 3)
      {
LABEL_15:
        memset(v16, 0, sizeof(v16));
        a2(v16);

        return;
      }
      if (qword_1ED2A8848 != -1)
        swift_once();
      v6 = sub_1A93F7698();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8830);
      v7 = sub_1A93F7674();
      v8 = sub_1A93F87B4();
      if (!os_log_type_enabled(v7, v8))
      {
LABEL_14:

        goto LABEL_15;
      }
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A904E000, v7, v8, "Not syncing Music Subscription Info because not past threshold.", v9, 2u);
      v10 = v9;
    }
    else
    {
      if (qword_1ED2A8848 != -1)
        swift_once();
      v11 = sub_1A93F7698();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8830);
      v12 = v2;
      v7 = sub_1A93F7674();
      v13 = sub_1A93F879C();
      if (!os_log_type_enabled(v7, v13))
      {

        goto LABEL_14;
      }
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      v16[0] = sub_1A93F711C();
      sub_1A93F8AA8();
      *v15 = v16[0];

      _os_log_impl(&dword_1A904E000, v7, v13, "Music Subscription Info sync failed with error: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v15, -1, -1);
      v10 = v14;
    }
    MEMORY[0x1AF41411C](v10, -1, -1);
    goto LABEL_14;
  }
}

uint64_t sub_1A92EB348(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t (*v16)(_QWORD);
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v23 = a2;
  v5 = sub_1A93F738C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  if (qword_1ED2A8848 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8830);
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v22 = v6;
    v16 = a3;
    v17 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A904E000, v13, v14, "Successfuly synced user's Music Subscription Info.", v15, 2u);
    v18 = v17;
    a3 = v16;
    v6 = v22;
    MEMORY[0x1AF41411C](v18, -1, -1);
  }

  sub_1A93F7374();
  v19 = v23 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_lastMusicSyncDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v19, v8, v5);
  swift_endAccess();
  v24[0] = v10;
  v24[1] = v9;
  v24[2] = v11;
  return a3(v24);
}

void sub_1A92EB518(void (*a1)(uint64_t *), uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *, void *);
  void *v21;
  void (*v22)(uint64_t, void *);
  uint64_t v23;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  if ((a3 & 1) != 0)
  {
    swift_retain();
    swift_release();
    if (qword_1ED2A8848 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8830);
    v10 = sub_1A93F7674();
    v11 = sub_1A93F87B4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1A904E000, v10, v11, "Forcing the fetch for music subscription information.", v12, 2u);
      MEMORY[0x1AF41411C](v12, -1, -1);
    }

    v18 = 0;
    LOBYTE(v19) = 0;
    a1(&v18);
  }
  else
  {
    v13 = *(void **)(a4 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag);
    swift_retain();
    v14 = objc_msgSend(v13, sel_fetchMusicSubscriptionThresholdValue);
    v15 = objc_msgSend(v14, sel_asyncValuePromiseOnQueue_, *(_QWORD *)(a4 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue));

    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1A909CFCC;
    *(_QWORD *)(v16 + 24) = v8;
    v22 = sub_1A92EDC24;
    v23 = v16;
    v18 = MEMORY[0x1E0C809B0];
    v19 = 1107296256;
    v20 = sub_1A92EA424;
    v21 = &block_descriptor_75_1;
    v17 = _Block_copy(&v18);
    swift_release();
    objc_msgSend(v15, sel_addFinishBlock_, v17);
    _Block_release(v17);

  }
}

void sub_1A92EB730(uint64_t a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  _BYTE *v23;
  id v24;
  uint64_t v25;
  char v26;

  if (a1 && (v25 = 0, v26 = 1, MEMORY[0x1AF4122BC](a1, &v25), (v26 & 1) == 0))
  {
    v13 = v25;
    if (qword_1ED2A8848 != -1)
      swift_once();
    v14 = sub_1A93F7698();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8830);
    v15 = sub_1A93F7674();
    v16 = sub_1A93F87B4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      v25 = v13;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v15, v16, "Got threshold value for Music Subscription Info sync from bag: %f", v17, 0xCu);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }

    a3(v13, 0);
  }
  else if (a2)
  {
    v5 = a2;
    if (qword_1ED2A8848 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8830);
    v7 = a2;
    v8 = sub_1A93F7674();
    v9 = sub_1A93F879C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = sub_1A93F711C();
      v25 = v12;
      sub_1A93F8AA8();
      *v11 = v12;

      _os_log_impl(&dword_1A904E000, v8, v9, "Could not get Music Subscription Info threshold value from bag with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v11, -1, -1);
      MEMORY[0x1AF41411C](v10, -1, -1);
    }
    else
    {

    }
    v24 = a2;
    a3((uint64_t)a2, 1);

  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A8830);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F879C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A904E000, v19, v20, "Could not get Music Subscription Info threshold value from bag.", v21, 2u);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    sub_1A92ED970();
    v22 = (void *)swift_allocError();
    *v23 = 2;
    a3((uint64_t)v22, 1);

  }
}

void sub_1A92EBB04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE *v29;
  _QWORD v30[2];
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = sub_1A93F738C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  sub_1A93F7374();
  v13 = &v1[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_lastMusicSyncDate];
  swift_beginAccess();
  v33 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v33(v6, v13, v2);
  sub_1A93F7338();
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v2);
  sub_1A9066CA8(&qword_1ED2A5C50, v3, MEMORY[0x1E0CB08B0]);
  LOBYTE(v3) = sub_1A93F7FEC();
  v14(v9, v2);
  v14(v12, v2);
  if ((v3 & 1) != 0)
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v15 = sub_1A93F7698();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A8830);
    v16 = v1;
    v17 = sub_1A93F7674();
    v18 = sub_1A93F87B4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v35 = v32;
      v31 = v19;
      *(_DWORD *)v19 = 136315138;
      v30[1] = v19 + 4;
      v33(v12, v13, v2);
      sub_1A9066CA8((unint64_t *)&qword_1ED2A5C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v20 = sub_1A93F9060();
      v22 = v21;
      v14(v12, v2);
      v34 = sub_1A906436C(v20, v22, &v35);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      v23 = v31;
      _os_log_impl(&dword_1A904E000, v17, v18, "Not syncing Music Subscription Info because not past threshold -- last synced at: %s.", v31, 0xCu);
      v24 = v32;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);

    }
    else
    {

    }
    sub_1A92ED970();
    swift_allocError();
    *v29 = 3;
    swift_willThrow();
  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8830);
    v26 = sub_1A93F7674();
    v27 = sub_1A93F87B4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1A904E000, v26, v27, "Past threshold -- Syncing Music Subscription Info.", v28, 2u);
      MEMORY[0x1AF41411C](v28, -1, -1);
    }

  }
}

void sub_1A92EBF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v11;
  char *v12;
  _QWORD aBlock[6];

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1AF41420C](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = objc_msgSend(*(id *)(v6 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag), sel_commerceMusicSubscriptionInfoUrl);
    v9 = objc_msgSend(v8, sel_asyncValuePromiseOnQueue_, *(_QWORD *)&v7[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue]);

    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v7;
    aBlock[4] = sub_1A92EDC18;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A92EA424;
    aBlock[3] = &block_descriptor_66;
    v11 = _Block_copy(aBlock);
    swift_retain();
    v12 = v7;
    swift_release();
    objc_msgSend(v9, sel_addFinishBlock_, v11);
    _Block_release(v11);

  }
}

uint64_t sub_1A92EC05C(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  _BYTE *v40;
  void (*v41)(char *, char *, uint64_t);
  unsigned int v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t *);
  uint64_t v60;
  uint64_t v61[3];

  v58 = a4;
  v59 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9788);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v54 - v15;
  v17 = sub_1A93F726C();
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v18 + 56);
    goto LABEL_5;
  }
  v56 = a5;
  v57 = v21;
  v22 = v8;
  v23 = v10;
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v18 + 56);
  v25 = v18;
  v24(v13, 1, 1, v17, v19);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A5520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0040]);
  sub_1A93F8EBC();
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v13, 1, v17) == 1)
  {
    v10 = v23;
    v8 = v22;
LABEL_5:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v16, 1, 1, v17);
LABEL_6:
    sub_1A905FD54((uint64_t)v16, &qword_1ED2AD3D0);
    if (a2)
    {
      v27 = a2;
      if (qword_1ED2A8848 != -1)
        swift_once();
      v28 = sub_1A93F7698();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A8830);
      v29 = a2;
      v30 = sub_1A93F7674();
      v31 = sub_1A93F879C();
      if (os_log_type_enabled(v30, v31))
      {
        v57 = (char *)v8;
        v32 = (uint8_t *)swift_slowAlloc();
        v33 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v32 = 138412290;
        v34 = sub_1A93F711C();
        v61[0] = v34;
        sub_1A93F8AA8();
        *v33 = v34;

        _os_log_impl(&dword_1A904E000, v30, v31, "Could not get Music Subscription Info endpoint from bag with error: %@", v32, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v33, -1, -1);
        MEMORY[0x1AF41411C](v32, -1, -1);
      }
      else
      {

      }
      *v10 = (uint64_t)a2;
      swift_storeEnumTagMultiPayload();
      v53 = a2;
      v59(v10);

    }
    else
    {
      if (qword_1ED2A8848 != -1)
        swift_once();
      v35 = sub_1A93F7698();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED2A8830);
      v36 = sub_1A93F7674();
      v37 = sub_1A93F879C();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1A904E000, v36, v37, "Could not get Music Subscription Info endpoint from bag", v38, 2u);
        MEMORY[0x1AF41411C](v38, -1, -1);
      }

      sub_1A92ED970();
      v39 = swift_allocError();
      *v40 = 0;
      *v10 = v39;
      swift_storeEnumTagMultiPayload();
      v59(v10);
    }
    return sub_1A905FD54((uint64_t)v10, &qword_1ED2A9788);
  }
  v55 = v25;
  v41 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v41(v16, v13, v17);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v16, 0, 1, v17);
  v42 = v26(v16, 1, v17);
  v10 = v23;
  v8 = v22;
  if (v42 == 1)
    goto LABEL_6;
  v43 = v57;
  v41(v57, v16, v17);
  if (qword_1ED2A8848 != -1)
    swift_once();
  v44 = sub_1A93F7698();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED2A8830);
  v45 = sub_1A93F7674();
  v46 = sub_1A93F87B4();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v61[0] = v48;
    *(_DWORD *)v47 = 136315138;
    v54[1] = v47 + 4;
    swift_beginAccess();
    v49 = sub_1A93F7170();
    v60 = sub_1A906436C(v49, v50, v61);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v45, v46, "Got URL for Music Subscription Info from bag: %s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v48, -1, -1);
    MEMORY[0x1AF41411C](v47, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AC7E0);
  sub_1A93F6EAC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A9405520;
  sub_1A93F6E88();
  swift_beginAccess();
  sub_1A93F7230();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v51 = v55;
  (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 16))(v10, v43, v17);
  swift_storeEnumTagMultiPayload();
  v59(v10);
  sub_1A905FD54((uint64_t)v10, &qword_1ED2A9788);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v43, v17);
}

uint64_t sub_1A92EC758@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t *v28;

  v28 = a2;
  v3 = sub_1A93F726C();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F6D80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - v11;
  if (qword_1ED2A8908 != -1)
    swift_once();
  v13 = sub_1A93F7698();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A88E8);
  v14 = sub_1A93F7674();
  v15 = sub_1A93F87B4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26[0] = v12;
    v17 = v3;
    v18 = a1;
    v19 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1A904E000, v14, v15, "Preparing URL request for fetching Music Subscription Info.", v16, 2u);
    v20 = v19;
    a1 = v18;
    v3 = v17;
    v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v12 = (char *)v26[0];
    MEMORY[0x1AF41411C](v20, -1, -1);
  }

  v21 = objc_msgSend(objc_allocWithZone((Class)IMURLRequestEncoder), sel_initWithBag_, *(_QWORD *)(v26[1] + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag));
  objc_msgSend(v21, sel_setPersonalizeRequests_, 1);
  objc_msgSend(v21, sel_setUrlKnownToBeTrusted_, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v5, a1, v3);
  sub_1A93F6D50();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v22 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v22, v9, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A91B0);
  swift_allocObject();
  v24 = sub_1A93F7A94();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  *v28 = v24;
  return result;
}

void sub_1A92ECA30(uint64_t a1, uint64_t a2, void *a3)
{
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v6 = (void *)sub_1A93F6D2C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v8 = objc_msgSend(v7, sel_ams_activeiTunesAccount);

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v11[4] = sub_1A92ED968;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A92EA424;
  v11[3] = &block_descriptor_9_4;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_prepareRequest_account_completion_, v6, v8, v10);
  _Block_release(v10);

}

uint64_t sub_1A92ECB54(void *a1, void *a2, void (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void (*v17)(_QWORD);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  _BYTE *v33;
  _QWORD v34[2];
  _QWORD *v35;
  uint64_t v36;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C28);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    v9 = a2;
    if (qword_1ED2A8848 != -1)
      swift_once();
    v10 = sub_1A93F7698();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8830);
    v11 = a2;
    v12 = a2;
    v13 = sub_1A93F7674();
    v14 = sub_1A93F879C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v34[1] = v15 + 4;
      v16 = a2;
      v17 = a3;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v36 = v18;
      sub_1A93F8AA8();
      v19 = v35;
      *v35 = v18;
      a3 = v17;

      _os_log_impl(&dword_1A904E000, v13, v14, "Could not prepare URL request for Music Subs Info sync with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v19, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);
    }
    else
    {

    }
    *v8 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    v26 = a2;
    a3(v8);

  }
  else if (a1)
  {
    v20 = qword_1ED2A8848;
    v21 = a1;
    if (v20 != -1)
      swift_once();
    v22 = sub_1A93F7698();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A8830);
    v23 = sub_1A93F7674();
    v24 = sub_1A93F87B4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1A904E000, v23, v24, "Prepared request for Music Subscription Info sync.", v25, 2u);
      MEMORY[0x1AF41411C](v25, -1, -1);
    }

    sub_1A93F6D44();
    swift_storeEnumTagMultiPayload();
    a3(v8);

  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v28 = sub_1A93F7698();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A8830);
    v29 = sub_1A93F7674();
    v30 = sub_1A93F879C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1A904E000, v29, v30, "No request available after attempting to prepare request for Music Subs Info sync.", v31, 2u);
      MEMORY[0x1AF41411C](v31, -1, -1);
    }

    sub_1A92ED970();
    v32 = swift_allocError();
    *v33 = 1;
    *v8 = v32;
    swift_storeEnumTagMultiPayload();
    a3(v8);
  }
  return sub_1A905FD54((uint64_t)v8, &qword_1ED2A5C28);
}

void sub_1A92ECF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = qword_1ED2A8908;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A88E8);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A904E000, v7, v8, "Performing request to Music Subscription Info sync endpoint.", v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultSession);
  v11 = (void *)sub_1A93F6D2C();
  v12 = objc_msgSend(v10, sel_dataTaskPromiseWithRequest_, v11);

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1A906A534;
  *(_QWORD *)(v13 + 24) = v4;
  v15[4] = sub_1A92EDBB8;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A92EA424;
  v15[3] = &block_descriptor_57_0;
  v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v12, sel_addFinishBlock_, v14);
  _Block_release(v14);

}

void sub_1A92ED184(void *a1, id a2, void (*a3)(id, unint64_t, uint64_t))
{
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  _BYTE *v22;
  uint64_t v23;

  if (a2)
  {
    v5 = a2;
    if (qword_1ED2A8848 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8830);
    v7 = a2;
    v8 = sub_1A93F7674();
    v9 = sub_1A93F879C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v23 = sub_1A93F711C();
      sub_1A93F8AA8();
      *v11 = v23;

      _os_log_impl(&dword_1A904E000, v8, v9, "Unable to fetch Music Subscription Info with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v11, -1, -1);
      MEMORY[0x1AF41411C](v10, -1, -1);
    }
    else
    {

    }
    v16 = a2;
    a3(a2, 0, 1);

  }
  else if (a1)
  {
    v12 = objc_msgSend(a1, sel_data);
    v13 = sub_1A93F72B4();
    v15 = v14;

    sub_1A90D8068(v13, v15);
    a3((id)v13, v15, 0);
    sub_1A905F180(v13, v15);
    sub_1A905F180(v13, v15);
  }
  else
  {
    if (qword_1ED2A8848 != -1)
      swift_once();
    v17 = sub_1A93F7698();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8830);
    v18 = sub_1A93F7674();
    v19 = sub_1A93F879C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1A904E000, v18, v19, "Unable to get data from url response from commerce endpoint.", v20, 2u);
      MEMORY[0x1AF41411C](v20, -1, -1);
    }

    sub_1A92ED970();
    v21 = (void *)swift_allocError();
    *v22 = 4;
    a3(v21, 0, 1);

  }
}

uint64_t sub_1A92ED4D4()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v8;

  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A93F6D98();
  sub_1A917C1E0();
  sub_1A93F6D8C();
  if (!v0)
    return swift_release();
  if (qword_1ED2A8848 != -1)
    swift_once();
  v1 = sub_1A93F7698();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A8830);
  v2 = v0;
  v3 = sub_1A93F7674();
  v4 = sub_1A93F879C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v8 = sub_1A93F711C();
    sub_1A93F8AA8();
    *v6 = v8;

    _os_log_impl(&dword_1A904E000, v3, v4, "Unable to decode json data into MusicSubscriptionInfo class with error: %@.", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v6, -1, -1);
    MEMORY[0x1AF41411C](v5, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return swift_release();
}

id MusicSubscriptionInfoSyncUtil.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MusicSubscriptionInfoSyncUtil.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MusicSubscriptionInfoSyncUtil.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoSyncUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A92ED830()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92ED85C()
{
  uint64_t v0;

  return sub_1A92EA4B8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A92ED86C()
{
  return type metadata accessor for MusicSubscriptionInfoSyncUtil();
}

uint64_t method lookup function for MusicSubscriptionInfoSyncUtil()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MusicSubscriptionInfoSyncUtil.__allocating_init(bag:accountStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of MusicSubscriptionInfoSyncUtil.syncMusicSubscriptionInfo(shouldForce:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1A92ED8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F6D80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1A92ED918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A93F6D80();
  sub_1A92ECA30(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1A92ED968(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1A92ECB54(a1, a2, *(void (**)(_QWORD))(v2 + 16));
}

unint64_t sub_1A92ED970()
{
  unint64_t result;

  result = qword_1ED2AB628;
  if (!qword_1ED2AB628)
  {
    result = MEMORY[0x1AF414014](&unk_1A941BF88, &type metadata for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError);
    atomic_store(result, (unint64_t *)&qword_1ED2AB628);
  }
  return result;
}

uint64_t sub_1A92ED9B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92ED9D8(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_1A92EB518(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A92ED9E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92EDA08()
{
  sub_1A92EBB04();
}

uint64_t sub_1A92EDA28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92EDA4C(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double))(v1 + 16))(*a1);
}

uint64_t sub_1A92EDA70@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A92EAED0(a1);
}

uint64_t sub_1A92EDA78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92EC758(a1, a2);
}

uint64_t sub_1A92EDA98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A92EAF50(a1, a2);
}

uint64_t sub_1A92EDAA0()
{
  return sub_1A92ED4D4();
}

uint64_t sub_1A92EDAB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EB044(a1, a2);
}

void sub_1A92EDACC(void **a1)
{
  uint64_t v1;

  sub_1A92EB0AC(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1A92EDAD4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92EDB00(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A92EB348(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24));
}

uint64_t sub_1A92EDB0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A93F6D80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1A92EDB6C(uint64_t a1, uint64_t a2)
{
  sub_1A93F6D80();
  sub_1A92ECF94(a1, a2);
}

void sub_1A92EDBB8(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A92ED184(a1, a2, *(void (**)(id, unint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1A92EDBC0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A92EDBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A92EBF10(a1, a2, v2);
}

uint64_t sub_1A92EDBEC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92EDC18(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1A92EC05C(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1A92EDC24(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A92EB730(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t storeEnumTagSinglePayload for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A92EDC78 + 4 * byte_1A941BE75[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A92EDCAC + 4 * asc_1A941BE70[v4]))();
}

uint64_t sub_1A92EDCAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92EDCB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92EDCBCLL);
  return result;
}

uint64_t sub_1A92EDCC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92EDCD0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A92EDCD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92EDCDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError()
{
  return &type metadata for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError;
}

unint64_t sub_1A92EDCFC()
{
  unint64_t result;

  result = qword_1EEABDAB0;
  if (!qword_1EEABDAB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941BF60, &type metadata for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError);
    atomic_store(result, (unint64_t *)&qword_1EEABDAB0);
  }
  return result;
}

uint64_t dispatch thunk of DiskImageResizer.resizedImage(at:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A92EDD88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[32];

  sub_1A906443C(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    v4 = v7;
    v5 = v8;
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t RawRepresentable<>.init(metricsFieldValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[32];

  v34 = a5;
  v9 = sub_1A93F8A90();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v28 - v10;
  v31 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_1A93F8A90();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v28 - v21;
  v33 = a1;
  sub_1A906443C(a1, (uint64_t)v35);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a4 + 8))(v35, AssociatedTypeWitness, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    __swift_destroy_boxed_opaque_existential_0(v33);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v23 = *(_QWORD *)(a2 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v15, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, AssociatedTypeWitness);
    v24 = v32;
    sub_1A93F8280();
    __swift_destroy_boxed_opaque_existential_0(v33);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    v23 = *(_QWORD *)(a2 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v24, 1, a2))
    {
      v26 = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v34, v24, a2);
      v25 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v26, v25, 1, a2);
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
  }
  v25 = 1;
  v26 = v34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v26, v25, 1, a2);
}

uint64_t RawRepresentable<>.metricsFieldRepresentation()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v10 - v7;
  sub_1A93F8274();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(AssociatedTypeWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

id sub_1A92EE134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v4;

  result = sub_1A92EF9E8(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1A92EE160@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t Bool.init(metricsFieldValue:)()
{
  unsigned __int8 v1;

  if (swift_dynamicCast())
    return v1;
  else
    return 2;
}

uint64_t Bool.metricsFieldRepresentation()@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)a2 = result;
  return result;
}

uint64_t sub_1A92EE210@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;

  result = swift_dynamicCast();
  v3 = v4;
  if (!(_DWORD)result)
    v3 = 2;
  *a1 = v3;
  return result;
}

uint64_t sub_1A92EE268@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char v3;

  v3 = *v2;
  *(_QWORD *)(a2 + 24) = result;
  *(_BYTE *)a2 = v3;
  return result;
}

unint64_t Float.init(metricsFieldValue:)(uint64_t a1)
{
  unsigned __int8 v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  sub_1A9176AAC();
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    objc_msgSend(v7, sel_floatValue);
    v4 = v3;

    __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = v4;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 ^ 1u) << 32);
}

unint64_t Float.metricsFieldRepresentation()@<X0>(_QWORD *a1@<X8>, float a2@<S0>)
{
  id v4;
  double v5;
  id v6;
  unint64_t result;

  v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v5 = a2;
  v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1A92EE384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t result;
  id v8;
  _BYTE v9[32];

  sub_1A906443C(a1, (uint64_t)v9);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    objc_msgSend(v8, sel_floatValue);
    v6 = v5;

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v6 = 0;
  }
  *(_DWORD *)a2 = v6;
  *(_BYTE *)(a2 + 4) = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EE434@<X0>(_QWORD *a1@<X8>)
{
  int *v1;
  int v3;
  id v4;
  double v5;
  id v6;
  unint64_t result;

  v3 = *v1;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v5) = v3;
  v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v6;
  return result;
}

uint64_t Double.init(metricsFieldValue:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  sub_1A9176AAC();
  if ((swift_dynamicCast() & 1) != 0)
  {
    objc_msgSend(v5, sel_doubleValue);
    v3 = v2;

    __swift_destroy_boxed_opaque_existential_0(a1);
    return v3;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
}

unint64_t Double.metricsFieldRepresentation()@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a2);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1A92EE58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  _BYTE v9[32];

  sub_1A906443C(a1, (uint64_t)v9);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    objc_msgSend(v8, sel_doubleValue);
    v6 = v5;

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v6 = 0;
  }
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EE63C@<X0>(_QWORD *a1@<X8>)
{
  double *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

id Int.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EF164(a1, (SEL *)&selRef_integerValue);
}

unint64_t Int.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithInteger_, a2);
}

uint64_t sub_1A92EE6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF21C(a1, (SEL *)&selRef_integerValue, a2);
}

unint64_t sub_1A92EE6B8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF2D8((SEL *)&selRef_initWithInteger_, a1);
}

uint64_t Int8.init(metricsFieldValue:)(uint64_t a1)
{
  int v2;
  unsigned __int8 v3;
  id v5;
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  sub_1A9176AAC();
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend(v5, sel_charValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v3 = 0;
  }
  return v3 | ((v2 ^ 1u) << 8);
}

unint64_t Int8.metricsFieldRepresentation()@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithChar_, a1);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1A92EE7B8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  int v4;
  unsigned __int8 v5;
  uint64_t result;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    v5 = objc_msgSend(v7, sel_charValue);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = 0;
  }
  *a2 = v5;
  a2[1] = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EE868@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithChar_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t Int16.init(metricsFieldValue:)(uint64_t a1)
{
  int v2;
  unsigned __int16 v3;
  int v4;
  id v6;
  _BYTE v7[32];

  sub_1A906443C(a1, (uint64_t)v7);
  sub_1A9176AAC();
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    v3 = (unsigned __int16)objc_msgSend(v6, sel_shortValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
    v4 = v3;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v4 = 0;
  }
  return v4 | ((v2 ^ 1u) << 16);
}

unint64_t Int16.metricsFieldRepresentation()@<X0>(__int16 a1@<W0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, a1);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1A92EE9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  unsigned __int16 v5;
  uint64_t result;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    v5 = (unsigned __int16)objc_msgSend(v7, sel_shortValue);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = 0;
  }
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EEA5C@<X0>(_QWORD *a1@<X8>)
{
  __int16 *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t Int32.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EEF28(a1, (SEL *)&selRef_intValue);
}

unint64_t Int32.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithInt_, a2);
}

uint64_t sub_1A92EEAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF044(a1, (SEL *)&selRef_intValue, a2);
}

unint64_t sub_1A92EEAD0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF100((SEL *)&selRef_initWithInt_, a1);
}

id Int64.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EF164(a1, (SEL *)&selRef_longLongValue);
}

unint64_t Int64.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithLongLong_, a2);
}

uint64_t sub_1A92EEAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF21C(a1, (SEL *)&selRef_longLongValue, a2);
}

unint64_t sub_1A92EEB00@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF2D8((SEL *)&selRef_initWithLongLong_, a1);
}

id UInt.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EF164(a1, (SEL *)&selRef_unsignedIntegerValue);
}

unint64_t UInt.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithUnsignedInteger_, a2);
}

uint64_t sub_1A92EEB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF21C(a1, (SEL *)&selRef_unsignedIntegerValue, a2);
}

unint64_t sub_1A92EEB30@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF2D8((SEL *)&selRef_initWithUnsignedInteger_, a1);
}

uint64_t UInt8.init(metricsFieldValue:)(uint64_t a1)
{
  int v2;
  unsigned int v3;
  id v5;
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  sub_1A9176AAC();
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend(v5, sel_unsignedCharValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v3 = 0;
  }
  return v3 | ((v2 ^ 1) << 8);
}

unint64_t UInt8.metricsFieldRepresentation()@<X0>(unsigned __int8 a1@<W0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedChar_, a1);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1A92EEC2C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  int v4;
  unsigned __int8 v5;
  uint64_t result;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    v5 = objc_msgSend(v7, sel_unsignedCharValue);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = 0;
  }
  *a2 = v5;
  a2[1] = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EECDC@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedChar_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t UInt16.init(metricsFieldValue:)(uint64_t a1)
{
  int v2;
  unsigned int v3;
  id v5;
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  sub_1A9176AAC();
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend(v5, sel_unsignedShortValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v3 = 0;
  }
  return v3 | ((v2 ^ 1) << 16);
}

unint64_t UInt16.metricsFieldRepresentation()@<X0>(unsigned __int16 a1@<W0>, _QWORD *a2@<X8>)
{
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedShort_, a1);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1A92EEE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  unsigned __int16 v5;
  uint64_t result;
  id v7;
  _BYTE v8[32];

  sub_1A906443C(a1, (uint64_t)v8);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if (v4)
  {
    v5 = (unsigned __int16)objc_msgSend(v7, sel_unsignedShortValue);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = 0;
  }
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v4 ^ 1;
  return result;
}

unint64_t sub_1A92EEECC@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int16 *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedShort_, *v1);
  result = sub_1A9176AAC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t UInt32.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EEF28(a1, (SEL *)&selRef_unsignedIntValue);
}

unint64_t sub_1A92EEF28(uint64_t a1, SEL *a2)
{
  unsigned __int8 v4;
  unsigned int v5;
  uint64_t v6;
  id v8;
  _BYTE v9[32];

  sub_1A906443C(a1, (uint64_t)v9);
  sub_1A9176AAC();
  v4 = swift_dynamicCast();
  if ((v4 & 1) != 0)
  {
    v5 = objc_msgSend(v8, *a2);

    __swift_destroy_boxed_opaque_existential_0(a1);
    v6 = v5;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v6 = 0;
  }
  return v6 | ((unint64_t)(v4 ^ 1u) << 32);
}

unint64_t UInt32.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithUnsignedInt_, a2);
}

unint64_t sub_1A92EEFE0@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;
  unint64_t result;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), *a2, a1);
  result = sub_1A9176AAC();
  a3[3] = result;
  *a3 = v4;
  return result;
}

uint64_t sub_1A92EF038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF044(a1, (SEL *)&selRef_unsignedIntValue, a2);
}

uint64_t sub_1A92EF044@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  int v6;
  unsigned int v7;
  uint64_t result;
  id v9;
  _BYTE v10[32];

  sub_1A906443C(a1, (uint64_t)v10);
  sub_1A9176AAC();
  v6 = swift_dynamicCast();
  if (v6)
  {
    v7 = objc_msgSend(v9, *a2);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v7 = 0;
  }
  *(_DWORD *)a3 = v7;
  *(_BYTE *)(a3 + 4) = v6 ^ 1;
  return result;
}

unint64_t sub_1A92EF0F4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF100((SEL *)&selRef_initWithUnsignedInt_, a1);
}

unint64_t sub_1A92EF100@<X0>(SEL *a1@<X2>, _QWORD *a2@<X8>)
{
  unsigned int *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), *a1, *v2);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v4;
  return result;
}

id UInt64.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A92EF164(a1, (SEL *)&selRef_unsignedLongLongValue);
}

id sub_1A92EF164(uint64_t a1, SEL *a2)
{
  id v4;
  id v6;
  _BYTE v7[32];

  sub_1A906443C(a1, (uint64_t)v7);
  sub_1A9176AAC();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = objc_msgSend(v6, *a2);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v4;
}

unint64_t UInt64.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92EEFE0(a1, (SEL *)&selRef_initWithUnsignedLongLong_, a2);
}

uint64_t sub_1A92EF210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92EF21C(a1, (SEL *)&selRef_unsignedLongLongValue, a2);
}

uint64_t sub_1A92EF21C@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  int v6;
  id v7;
  uint64_t result;
  id v9;
  _BYTE v10[32];

  sub_1A906443C(a1, (uint64_t)v10);
  sub_1A9176AAC();
  v6 = swift_dynamicCast();
  if (v6)
  {
    v7 = objc_msgSend(v9, *a2);

    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v7 = 0;
  }
  *(_QWORD *)a3 = v7;
  *(_BYTE *)(a3 + 8) = v6 ^ 1;
  return result;
}

unint64_t sub_1A92EF2CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A92EF2D8((SEL *)&selRef_initWithUnsignedLongLong_, a1);
}

unint64_t sub_1A92EF2D8@<X0>(SEL *a1@<X2>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  id v4;
  unint64_t result;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), *a1, *v2);
  result = sub_1A9176AAC();
  a2[3] = result;
  *a2 = v4;
  return result;
}

uint64_t String.init(metricsFieldValue:)()
{
  uint64_t v1;

  if (swift_dynamicCast())
    return v1;
  else
    return 0;
}

uint64_t String.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = MEMORY[0x1E0DEA968];
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92EF394@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_dynamicCast();
  v3 = v5;
  v4 = v6;
  if (!(_DWORD)result)
  {
    v3 = 0;
    v4 = 0;
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A92EF3EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  v3 = v2[1];
  a2[3] = a1;
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Array<A>.init(metricsFieldValue:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[4];

  sub_1A906443C(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA428);
  v2 = swift_dynamicCast();
  if ((v2 & 1) != 0)
  {
    v6[0] = v5;
    MEMORY[0x1E0C80A78](v2);
    sub_1A92EF564();
    v3 = sub_1A93F81D8();
    __swift_destroy_boxed_opaque_existential_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v3;
}

uint64_t sub_1A92EF500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[32];

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1A906443C(a1, (uint64_t)v5);
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 8))(v5, v2, v3);
}

unint64_t sub_1A92EF564()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABDAB8;
  if (!qword_1EEABDAB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2AA428);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABDAB8);
  }
  return result;
}

uint64_t Array<A>.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  v5 = sub_1A93F83D0();
  v6 = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v5);
  v8 = sub_1A9241454((void (*)(char *, char *))sub_1A92EF654, (uint64_t)v10, v5, (char *)(MEMORY[0x1E0DEE9B8] + 8), MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA428);
  a4[3] = result;
  *a4 = v8;
  return result;
}

uint64_t sub_1A92EF654()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 16))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A92EF688@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = Array<A>.init(metricsFieldValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A92EF6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return Array<A>.metricsFieldRepresentation()(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), a3);
}

uint64_t URL.init(metricsFieldValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A906443C(a1, (uint64_t)v12);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_5;
  }
  sub_1A93F7248();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1A914149C((uint64_t)v6);
LABEL_5:
    v9 = sub_1A93F726C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t URL.metricsFieldRepresentation()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A93F7170();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A92EF844@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A93F7170();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

void Optional<A>.init(metricsFieldValue:)()
{
  sub_1A93F8E14();
  __break(1u);
}

void Optional<A>.metricsFieldRepresentation()()
{
  sub_1A93F8E14();
  __break(1u);
}

void sub_1A92EF924()
{
  Optional<A>.init(metricsFieldValue:)();
}

void sub_1A92EF930()
{
  Optional<A>.metricsFieldRepresentation()();
}

uint64_t dispatch thunk of MetricsFieldRepresentable.init(metricsFieldValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricsFieldRepresentable.metricsFieldRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A92EF94C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[32];

  sub_1A906443C(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    v4 = v7;
    v5 = v8;
    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1A92EF9D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  v2 = v1[1];
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id sub_1A92EF9E8(uint64_t a1)
{
  id v2;
  id v4;
  _BYTE v5[32];
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  sub_1A906443C((uint64_t)v6, (uint64_t)v5);
  sub_1A9176AAC();
  if (swift_dynamicCast())
  {
    v2 = objc_msgSend(v4, sel_unsignedIntegerValue);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v2;
}

uint64_t sub_1A92EFAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A93F92DC();
    sub_1A93F7FBC();
    v6 = sub_1A93F9324();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A93F90C0() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A93F90C0() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1A92EFBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_1A93F92D0();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1A92EFCA0(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (*(_QWORD *)(a2 + 16)
    && (sub_1A93F92DC(),
        sub_1A93F7FBC(),
        swift_bridgeObjectRelease(),
        v4 = sub_1A93F9324(),
        v5 = -1 << *(_BYTE *)(a2 + 32),
        v6 = v4 & ~v5,
        ((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    v7 = ~v5;
    v8 = *(_QWORD *)&aStdq_6[8 * a1];
    while (*(_QWORD *)&aStdq_6[8 * *(char *)(*(_QWORD *)(a2 + 48) + v6)] != v8)
    {
      v9 = sub_1A93F90C0();
      swift_bridgeObjectRelease_n();
      if ((v9 & 1) == 0)
      {
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
          continue;
      }
      return v9 & 1;
    }
    swift_bridgeObjectRelease_n();
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1A92EFDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;

  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_9;
  sub_1A93F92DC();
  sub_1A93F9444();
  v4 = sub_1A93F9324();
  v5 = -1 << *(_BYTE *)(a3 + 32);
  v6 = v4 & ~v5;
  v7 = a3 + 56;
  if (((*(_QWORD *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  if ((sub_1A93F9438() & 1) != 0)
  {
    v8 = 1;
    return v8 & 1;
  }
  v9 = ~v5;
  v10 = (v6 + 1) & v9;
  if (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_9:
    v8 = 0;
    return v8 & 1;
  }
  do
  {
    v8 = sub_1A93F9438();
    if ((v8 & 1) != 0)
      break;
    v10 = (v10 + 1) & v9;
  }
  while (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return v8 & 1;
}

void TranscriptEpisodeContext.transcriptRequest(priority:lifetime:)(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  unsigned int v12;
  __int128 v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v5 = *a1;
  v6 = *a2;
  v7 = *v3;
  v8 = v3[4];
  if (v8)
  {
    v9 = v3[3];
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    v20 = 0;
    v19 = 0u;
    v18 = 0u;
    *(_QWORD *)&v15 = v7;
    *((_QWORD *)&v15 + 1) = v9;
    *(_QWORD *)&v17 = v8;
    BYTE8(v17) = v5;
    BYTE9(v17) = v6;
    swift_bridgeObjectRetain();
    sub_1A9210154((uint64_t)&v21, (uint64_t)&v18);
    v10 = v19;
    *(_OWORD *)(a3 + 32) = v18;
    *(_OWORD *)(a3 + 48) = v10;
    *(_QWORD *)(a3 + 64) = v20;
    *(_OWORD *)a3 = v15;
    *(_OWORD *)(a3 + 16) = v17;
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
    v11 = (void *)sub_1A93F8010();
    v12 = objc_msgSend(v14, sel_BOOLForKey_, v11);

    if (v12)
    {
      v23 = 0;
      v21 = 0u;
      v22 = 0u;
      v20 = 0;
      v19 = 0u;
      v18 = 0u;
      *(_QWORD *)&v16 = v7;
      *((_QWORD *)&v16 + 1) = 5852737;
      *(_QWORD *)&v17 = 0xE300000000000000;
      BYTE8(v17) = v5;
      BYTE9(v17) = v6;
      sub_1A9210154((uint64_t)&v21, (uint64_t)&v18);
      v13 = v19;
      *(_OWORD *)(a3 + 32) = v18;
      *(_OWORD *)(a3 + 48) = v13;
      *(_QWORD *)(a3 + 64) = v20;
      *(_OWORD *)a3 = v16;
      *(_OWORD *)(a3 + 16) = v17;

    }
    else
    {
      *(_QWORD *)(a3 + 64) = 0;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;

    }
  }
}

uint64_t TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t TranscriptEpisodeContext.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TranscriptEpisodeContext.priceType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptEpisodeContext.transcriptIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptEpisodeContext.isAppleHosted.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;
  char v6;
  char v7;

  v1 = *(void **)(v0 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  PriceType.init(rawValue:)(v3);
  if (v7 == 4)
    return 0;
  v5 = sub_1A915A4EC((uint64_t)&unk_1E54D7A08);
  v6 = sub_1A92EFCA0(v7, v5);
  swift_bridgeObjectRelease();
  return v6 & 1;
}

Swift::Bool __swiftcall TranscriptEpisodeContext.shouldShazamMatch(_:)(AVURLAsset_optional a1)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  char v10;
  uint64_t v11;
  char v12;
  objc_class *v13;
  id v14;
  void *v15;
  unsigned int v16;
  void (*v17)(char *, uint64_t);
  id v19;
  void *v20;
  int v21;
  uint64_t v22;
  char v23;

  isa = a1.value.super.super.isa;
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v1 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    PriceType.init(rawValue:)(v9);
    v10 = v23;
    if (v23 != 4)
    {
      v11 = sub_1A915A4EC((uint64_t)&unk_1E54D7A30);
      v12 = sub_1A92EFCA0(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        return 0;
      if (!isa)
        return 1;
LABEL_8:
      v13 = isa;
      v14 = -[objc_class URL](v13, sel_URL);
      sub_1A93F7200();

      v15 = (void *)sub_1A93F71A0();
      v16 = objc_msgSend(v15, sel_isHLSPlaylist);

      v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v6, v3);
      if (v16)
      {

        return 0;
      }
      v19 = -[objc_class URL](v13, sel_URL);
      sub_1A93F7200();

      v20 = (void *)sub_1A93F71A0();
      v21 = objc_msgSend(v20, sel_isPackagedMedia);

      v17(v6, v3);
      return (v21 & 1) == 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (isa)
    goto LABEL_8;
  return 1;
}

uint64_t initializeWithCopy for TranscriptEpisodeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TranscriptEpisodeContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranscriptEpisodeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptEpisodeContext()
{
  return &type metadata for TranscriptEpisodeContext;
}

uint64_t sub_1A92F0478(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A908182C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1A92F0794(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A908182C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1A92F0AB0(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A908182C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1A92F0C70(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A908182C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

id sub_1A92F0DF4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD aBlock[6];

  v6 = type metadata accessor for MediaRequest.Params();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1A92F0F4C(a3);
  sub_1A9114B88(a3, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  sub_1A917695C((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  *(_QWORD *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  aBlock[4] = sub_1A92F243C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A92F16C8;
  aBlock[3] = &block_descriptor_60;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  swift_release();
  v14 = objc_msgSend(v9, sel_thenWithBlock_, v12);
  _Block_release(v12);

  return v14;
}

id sub_1A92F0F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v3 = type metadata accessor for MediaRequest.Params();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  if (*(_QWORD *)(a1 + *(int *)(v6 + 100) + 8))
  {
    v7 = (id)sub_1A93F8010();
    v8 = objc_msgSend((id)objc_opt_self(), sel_promiseWithResult_, v7);
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v7 = objc_msgSend(v9, sel_mediaTaskCountryCode);

    if (qword_1ED2A5670 != -1)
      swift_once();
    v8 = objc_msgSend(v7, sel_asyncValuePromiseOnQueue_, qword_1ED2A5668);
  }
  v10 = v8;

  sub_1A9114B88(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  sub_1A917695C((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  aBlock[4] = sub_1A92F5EB4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A92F16C8;
  aBlock[3] = &block_descriptor_12_2;
  v13 = _Block_copy(aBlock);
  swift_release();
  v14 = objc_msgSend(v10, sel_thenWithBlock_, v13);
  _Block_release(v13);

  return v14;
}

id sub_1A92F113C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _QWORD aBlock[6];

  v8 = type metadata accessor for MediaRequest.Params();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  if (*(_BYTE *)(a3 + *(int *)(v11 + 120)) == 2)
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v13 = objc_msgSend(v12, sel_includeEntitlementsContent);

    if (qword_1ED2A5670 != -1)
      swift_once();
    v14 = objc_msgSend(v13, sel_asyncValuePromiseOnQueue_, qword_1ED2A5668);
  }
  else
  {
    v13 = (id)sub_1A93F8400();
    v14 = objc_msgSend((id)objc_opt_self(), sel_promiseWithResult_, v13);
  }
  v15 = v14;

  sub_1A9114B88(a3, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a1;
  v17[4] = a2;
  sub_1A917695C((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16);
  aBlock[4] = sub_1A92F2600;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A92F16C8;
  aBlock[3] = &block_descriptor_6_0;
  v18 = _Block_copy(aBlock);
  v19 = a4;
  v20 = a1;
  swift_release();
  v21 = objc_msgSend(v15, sel_thenWithBlock_, v18);
  _Block_release(v18);

  return v21;
}

id sub_1A92F1350(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;

  v8 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F6F60();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6F54();
  v15 = objc_msgSend(a2, sel_absoluteString);
  if (v15)
  {
    v16 = v15;
    sub_1A93F8040();

  }
  sub_1A93F6EF4();
  sub_1A93F8040();
  sub_1A93F6F0C();
  sub_1A93F6F24();
  sub_1A93F6ED0();
  sub_1A9114B88(a5, (uint64_t)v10);
  if (objc_msgSend(a1, sel_BOOLValue))
  {
    v17 = (char *)*((_QWORD *)v10 + 14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1A9118AEC(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v19 = *((_QWORD *)v17 + 2);
    v18 = *((_QWORD *)v17 + 3);
    if (v19 >= v18 >> 1)
      v17 = sub_1A9118AEC((char *)(v18 > 1), v19 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19 + 1;
    v17[v19 + 32] = 1;
    *((_QWORD *)v10 + 14) = v17;
  }
  sub_1A92F2644((uint64_t)v14, (uint64_t)v10);
  sub_1A92F2C38((uint64_t)v14);
  if ((v10[128] & 1) == 0)
    sub_1A93F6F48();
  v20 = v10[43];
  if ((_DWORD)v20 != 4)
  {
    sub_1A93F6F00();
    sub_1A93F8010();
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  if (v10[40] == 3)
  {
    sub_1A93F8040();
    sub_1A93F6F0C();
  }
  v21 = (void *)sub_1A93F6EDC();
  v22 = objc_msgSend((id)objc_opt_self(), sel_promiseWithResult_, v21);

  sub_1A9114C30((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v22;
}

uint64_t sub_1A92F16CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v5);
  sub_1A9066C6C();
  sub_1A93F7D88();
  v7[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9085ACC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A93F888C();
  qword_1ED2A5668 = result;
  return result;
}

void sub_1A92F1874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

id sub_1A92F1910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  *(_QWORD *)(v4 - 96) = v3 + 31;
  *(_QWORD *)(v4 - 88) = 0x80000001A944CCF0;
  *(_QWORD *)(v4 - 112) = 0x56746E65696C637BLL;
  *(_QWORD *)(v4 - 104) = 0xEF7D6E6F69737265;
  v5 = objc_msgSend((id)objc_opt_self(), sel_mediaApiClientVersion);
  v6 = sub_1A93F8040();
  v8 = v7;

  *(_QWORD *)(v4 - 128) = v6;
  *(_QWORD *)(v4 - 120) = v8;
  sub_1A90828B0();
  v9 = sub_1A93F8AFC();
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 96) = v9;
  *(_QWORD *)(v4 - 88) = v11;
  strcpy((char *)(v4 - 112), "{storefront}");
  *(_BYTE *)(v4 - 99) = 0;
  *(_WORD *)(v4 - 98) = -5120;
  *(_QWORD *)(v4 - 128) = sub_1A93F8040();
  *(_QWORD *)(v4 - 120) = v12;
  v13 = sub_1A93F8AFC();
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v0 + 42) & 1) == 0 && !*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16))
  {
    v16 = *(unsigned __int8 *)(v0 + 41);
    if (v16 != 6)
    {
      sub_1A92FA444(v16);
      if ((v17 & 1) != 0)
      {
        v18 = 0x6970652D7478656ELL;
        v19 = 0xED00007365646F73;
LABEL_9:
        *(_QWORD *)(v4 - 96) = v18;
        *(_QWORD *)(v4 - 88) = v19;
        *(_QWORD *)(v4 - 112) = v13;
        *(_QWORD *)(v4 - 104) = v15;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v4 - 112) = sub_1A93F8190();
        *(_QWORD *)(v4 - 104) = v22;
        sub_1A93F8100();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
  }
  v20 = *(_QWORD *)(v0 + *(int *)(v1 + 108) + 8);
  sub_1A9114B88(v0, v2);
  if (v20)
  {
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v1 + 112)) + 16);
    sub_1A9114C30(v2);
    if (v21)
    {
      v18 = 0x686372616573;
      v19 = 0xE600000000000000;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1A9114C30(v2);
  }
  if (*(_BYTE *)(v0 + 40) != 3)
    __asm { BR              X10 }
LABEL_13:
  v23 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend((id)objc_opt_self(), sel_promiseWithResult_, v23);

  return v24;
}

uint64_t type metadata accessor for MediaRequestBuilder()
{
  return objc_opt_self();
}

void sub_1A92F1DCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1A92F1E48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease();
  sub_1A9114B88(v1, v0);
  v2 = *(unsigned __int8 *)(v0 + 41);
  if (v2 != 6)
    sub_1A92FA444(v2);
  return sub_1A9114C30(v0);
}

id sub_1A92F1F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v14;
  id v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediaRequest.Params();
  sub_1A906A3F0(a1 + *(int *)(v9 + 96), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A914149C((uint64_t)v4);
    v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v11 = objc_msgSend(v10, sel_podcastsMediaAPIHostUrl);

    if (qword_1ED2A5670 != -1)
      swift_once();
    v12 = objc_msgSend(v11, sel_asyncValuePromiseOnQueue_, qword_1ED2A5668);

    return v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v14 = (void *)sub_1A93F71A0();
    v15 = objc_msgSend((id)objc_opt_self(), sel_promiseWithResult_, v14);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v15;
  }
}

void sub_1A92F20EC(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F2138()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v8;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1A93F7ED8();
  v8 = 0;
  v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 1, &v8);

  v3 = v8;
  if (v2)
  {
    v4 = sub_1A93F72B4();

  }
  else
  {
    v5 = v3;
    v6 = (void *)sub_1A93F7128();

    swift_willThrow();
    return 0;
  }
  return v4;
}

uint64_t sub_1A92F22C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1A9114BD0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + v3 + 32), *(_BYTE *)(v0 + v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 96);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1A92F243C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A92F113C(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A92F2490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + ((v2 + 40) & ~v2);
  sub_1A9114BD0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 96);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1A92F2600(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8) + 80);
  return sub_1A92F1350(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

void sub_1A92F2644(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  unint64_t *v13;
  void (*v14)(_QWORD *, _QWORD);
  unint64_t *v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v24[4];

  v3 = sub_1A93F6EAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 120) + 16);
  if (v10)
  {
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A93F6F00();
      v23 = (id)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v11 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v23, sel_stringByAppendingPathComponent_, v11);

      sub_1A93F8040();
      sub_1A93F6F0C();

    }
    else
    {
      v24[0] = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
      sub_1A93F7FE0();
      swift_bridgeObjectRelease();
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      v14 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v13)
      {
        v15 = v13;
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
        v16 = *v15;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v15 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v16 = sub_1A91182E8(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
          *v15 = v16;
        }
        v19 = *(_QWORD *)(v16 + 16);
        v18 = *(_QWORD *)(v16 + 24);
        v20 = (id)(v19 + 1);
        if (v19 >= v18 >> 1)
        {
          v23 = (id)(v19 + 1);
          v21 = sub_1A91182E8(v18 > 1, v19 + 1, 1, v16);
          v20 = v23;
          v16 = v21;
          *v15 = v21;
        }
        *(_QWORD *)(v16 + 16) = v20;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v19, v6, v3);
      }
      v14(v24, 0);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
}

uint64_t sub_1A92F2904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  BOOL v26;
  uint64_t v28;

  v2 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  v8 = *(unsigned __int8 *)(a1 + 41);
  if (v8 == 6)
  {
    sub_1A9114B88(a1, (uint64_t)&v28 - v6);
    v9 = 0;
  }
  else
  {
    sub_1A92FA444(v8);
    v11 = v10;
    sub_1A9114B88(a1, (uint64_t)v7);
    v9 = 0;
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)v7;
      v13 = *((_QWORD *)v7 + 1);
      v14 = *((_QWORD *)v7 + 2);
      v15 = *((_QWORD *)v7 + 3);
      v16 = *((_QWORD *)v7 + 4);
      v17 = v7[40];
      if (v17 >= 4 && (v14 | v13 | *(_QWORD *)v7 | v15 | v16) == 0)
      {
        sub_1A9114BD0(0, 0, 0, 0, *((_QWORD *)v7 + 4), 4u);
        sub_1A9114BD0(0, 0, 0, 0, 0, 4u);
        sub_1A9114BD0(0, 0, 0, 0, v16, 4u);
        sub_1A9114B88((uint64_t)v7, (uint64_t)v4);
        v9 = 1;
      }
      else
      {
        sub_1A919EE64(*(_QWORD *)v7, *((_QWORD *)v7 + 1), *((_QWORD *)v7 + 2), *((_QWORD *)v7 + 3), *((_QWORD *)v7 + 4), v7[40]);
        sub_1A919EE64(v12, v13, v14, v15, v16, v17);
        sub_1A9114BD0(v12, v13, v14, v15, v16, v17);
        sub_1A9114BD0(0, 0, 0, 0, 0, 4u);
        sub_1A9114BD0(v12, v13, v14, v15, v16, v17);
        sub_1A9114B88((uint64_t)v7, (uint64_t)v4);
        v19 = *(_QWORD *)v4;
        v20 = *((_QWORD *)v4 + 1);
        v21 = *((_QWORD *)v4 + 2);
        v22 = *((_QWORD *)v4 + 3);
        v23 = *((_QWORD *)v4 + 4);
        v24 = v4[40];
        v25 = v24 < 4 || (v21 | v20 | *(_QWORD *)v4 | v22 | v23) == 0;
        if (!v25 && (v19 == 1 ? (v26 = (v21 | v20 | v22 | v23) == 0) : (v26 = 0), v26))
        {
          v9 = 1;
          sub_1A9114BD0(1, 0, 0, 0, *((_QWORD *)v4 + 4), 4u);
          sub_1A9114BD0(1, 0, 0, 0, 0, 4u);
          sub_1A9114BD0(1, 0, 0, 0, v23, 4u);
        }
        else
        {
          sub_1A919EE64(*(_QWORD *)v4, *((_QWORD *)v4 + 1), *((_QWORD *)v4 + 2), *((_QWORD *)v4 + 3), *((_QWORD *)v4 + 4), v4[40]);
          sub_1A919EE64(v19, v20, v21, v22, v23, v24);
          sub_1A9114BD0(v19, v20, v21, v22, v23, v24);
          sub_1A9114BD0(1, 0, 0, 0, 0, 4u);
          sub_1A9114BD0(v19, v20, v21, v22, v23, v24);
          v9 = 0;
        }
      }
      sub_1A9114C30((uint64_t)v4);
    }
  }
  sub_1A9114C30((uint64_t)v7);
  return v9;
}

uint64_t sub_1A92F2C38(uint64_t a1)
{
  uint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  char v58;
  _QWORD *v59;
  void (*v60)(_QWORD *, _QWORD);
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  void (*v72)(_QWORD *, _QWORD);
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  const char *v76;
  const char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char v86;
  _QWORD *v87;
  void (*v88)(_QWORD *, _QWORD);
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  void (*v100)(_QWORD *, _QWORD);
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int64_t v113;
  _QWORD *v114;
  void (*v115)(_QWORD *, _QWORD);
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  void (*v126)(_QWORD *, _QWORD);
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  int v139;
  char v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unsigned int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  int64_t v183;
  int64_t v184;
  char *i;
  void (*v186)(_QWORD, _QWORD);
  uint64_t v187;
  char *v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  int64_t v192;
  unint64_t v193;
  int64_t v194;
  char v195;
  void (*v196)(_QWORD *, _QWORD);
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  void (*v201)(_QWORD *, _QWORD);
  _QWORD *v202;
  uint64_t v203;
  void (*v204)(_QWORD, _QWORD);
  char *v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(_QWORD *, _QWORD);
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  BOOL v223;
  unint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(_QWORD *, _QWORD);
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(_QWORD *, _QWORD);
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(_QWORD *, _QWORD);
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  void (*v259)(_QWORD *, _QWORD);
  _QWORD *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(_QWORD *, _QWORD);
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  char *v281;
  void (*v282)(_QWORD *, _QWORD);
  _QWORD *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  char v296;
  uint64_t v297;
  char *v298;
  void (*v299)(_QWORD *, _QWORD);
  _QWORD *v300;
  uint64_t result;
  uint64_t v302;
  char *v303;
  char *v304;
  char *v305;
  void (*v306)(_QWORD *, _QWORD);
  _QWORD *v307;
  uint64_t v308;
  void (*v309)(_QWORD *, _QWORD);
  _QWORD *v310;
  uint64_t v311;
  void (*v312)(char *, _QWORD);
  int v313;
  void (*v314)(_QWORD *, _QWORD);
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t (*v318)(_QWORD *, _QWORD);
  _QWORD *v319;
  char v320;
  char v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  char *v334;
  int *v335;
  uint64_t v336;
  char *v337;
  _QWORD *v338;
  int64_t v339;
  char *v340;
  char *v341;
  char *v342;
  char *v343;
  char *v344;
  int64_t v345;
  uint64_t v346;
  char *v347;
  const char *v348;
  const char *v349;
  char *v350;
  char *v351;
  const char *v352;
  const char *v353;
  const char *v354;
  const char *v355;
  char *v356;
  uint64_t v357;
  char *v358;
  char *v359;
  void (*v360)(_QWORD *, _QWORD);
  uint64_t v361;
  uint64_t v362;
  _QWORD v363[2];
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  _QWORD v367[2];

  v362 = a1;
  v335 = (int *)type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v335);
  v2 = (char *)&v327 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v327 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v327 - v7;
  v9 = sub_1A93F6EAC();
  v361 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v332 = (char *)&v327 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v330 = (char *)&v327 - v12;
  MEMORY[0x1E0C80A78](v13);
  v329 = (char *)&v327 - v14;
  MEMORY[0x1E0C80A78](v15);
  v340 = (char *)&v327 - v16;
  MEMORY[0x1E0C80A78](v17);
  v341 = (char *)&v327 - v18;
  MEMORY[0x1E0C80A78](v19);
  v333 = (char *)&v327 - v20;
  MEMORY[0x1E0C80A78](v21);
  v331 = (char *)&v327 - v22;
  MEMORY[0x1E0C80A78](v23);
  v342 = (char *)&v327 - v24;
  MEMORY[0x1E0C80A78](v25);
  v343 = (char *)&v327 - v26;
  MEMORY[0x1E0C80A78](v27);
  v334 = (char *)&v327 - v28;
  MEMORY[0x1E0C80A78](v29);
  v328 = (char *)&v327 - v30;
  MEMORY[0x1E0C80A78](v31);
  v347 = (char *)&v327 - v32;
  MEMORY[0x1E0C80A78](v33);
  v344 = (char *)&v327 - v34;
  MEMORY[0x1E0C80A78](v35);
  v345 = (int64_t)&v327 - v36;
  MEMORY[0x1E0C80A78](v37);
  v358 = (char *)&v327 - v38;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v327 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v327 - v43;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v327 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v327 - v49;
  MEMORY[0x1E0C80A78](v51);
  v359 = (char *)&v327 - v52;
  MEMORY[0x1E0C80A78](v53);
  v56 = (char *)&v327 - v55;
  v57 = *(_BYTE *)(v54 + 42);
  v58 = *(_BYTE *)(v54 + 144);
  v336 = v54;
  v355 = v8;
  v357 = (uint64_t)v41;
  if ((v57 & 1) != 0)
  {
    if ((v58 & 1) != 0)
      goto LABEL_19;
    v367[0] = *(_QWORD *)(v54 + 136);
    sub_1A93F9060();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v60 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v59)
    {
      v61 = v59;
      v62 = v361;
      v63 = (uint64_t)v359;
      (*(void (**)(char *, char *, uint64_t))(v361 + 16))(v359, v47, v9);
      sub_1A91ACEC8();
      v64 = *(_QWORD *)(*v61 + 16);
      sub_1A91ACF40(v64);
      v65 = v64;
      v41 = (char *)v357;
      v66 = sub_1A91ACFB4(v65, v63);
      nullsub_1(v66, v67, v68, v69);
      v60(v367, 0);
      v50 = v47;
LABEL_18:
      (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v9);
      v54 = v336;
      v8 = v355;
      goto LABEL_19;
    }
    v60(v367, 0);
    v50 = v47;
    goto LABEL_17;
  }
  if ((v58 & 1) == 0)
  {
    v70 = *(_QWORD *)(v54 + 136);
    strcpy((char *)v367, "[{specifier}]");
    HIWORD(v367[1]) = -4864;
    v364 = 0x696669636570737BLL;
    v365 = 0xEB000000007D7265;
    strcpy((char *)v363, "next-episodes");
    HIWORD(v363[1]) = -4864;
    sub_1A90828B0();
    sub_1A93F8AFC();
    v367[0] = 0x74696D696CLL;
    v367[1] = 0xE500000000000000;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    v367[0] = v70;
    sub_1A93F9060();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v71)
    {
      v73 = v71;
      v74 = v361;
      v75 = *(void (**)(char *, char *, uint64_t))(v361 + 16);
      v76 = v5;
      v77 = v2;
      v78 = v359;
      v360 = v72;
      v75(v359, v56, v9);
      sub_1A91ACEC8();
      v79 = *(_QWORD *)(*v73 + 16);
      sub_1A91ACF40(v79);
      v80 = (uint64_t)v78;
      v2 = v77;
      v5 = v76;
      v81 = sub_1A91ACFB4(v79, v80);
      nullsub_1(v81, v82, v83, v84);
      v360(v367, 0);
    }
    else
    {
      v72(v367, 0);
      v74 = v361;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v56, v9);
    v54 = v336;
    v8 = v355;
    v41 = (char *)v357;
    if ((*(_BYTE *)(v336 + 42) & 1) != 0)
      goto LABEL_14;
  }
  if (*(_QWORD *)(*(_QWORD *)(v54 + 120) + 16)
    || (v85 = *(unsigned __int8 *)(v54 + 41), v85 == 6)
    || (sub_1A92FA444(v85), v54 = v336, (v86 & 1) == 0))
  {
LABEL_14:
    sub_1A93F6E88();
    v88 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v87)
    {
      v89 = v87;
      v62 = v361;
      v90 = v359;
      (*(void (**)(char *, char *, uint64_t))(v361 + 16))(v359, v50, v9);
      sub_1A91ACEC8();
      v91 = *(_QWORD *)(*v89 + 16);
      sub_1A91ACF40(v91);
      v92 = (uint64_t)v90;
      v41 = (char *)v357;
      v93 = sub_1A91ACFB4(v91, v92);
      nullsub_1(v93, v94, v95, v96);
      v88(v367, 0);
      goto LABEL_18;
    }
    v88(v367, 0);
LABEL_17:
    v62 = v361;
    goto LABEL_18;
  }
LABEL_19:
  v97 = v361;
  v98 = v358;
  if (*(_QWORD *)(v54 + v335[27] + 8))
  {
    swift_bridgeObjectRetain();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v100 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v99)
    {
      v101 = v99;
      v102 = v359;
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v359, v44, v9);
      sub_1A91ACEC8();
      v103 = *(_QWORD *)(*v101 + 16);
      sub_1A91ACF40(v103);
      v104 = v103;
      v105 = (uint64_t)v102;
      v41 = (char *)v357;
      v98 = v358;
      v106 = sub_1A91ACFB4(v104, v105);
      nullsub_1(v106, v107, v108, v109);
    }
    v100(v367, 0);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v44, v9);
    v54 = v336;
  }
  v110 = *(_QWORD *)(v54 + v335[28]);
  v111 = sub_1A9261404(v110);
  v360 = (void (*)(_QWORD *, _QWORD))v9;
  if (v111 >= 1)
  {
    v112 = sub_1A9261404(v110);
    if (v112)
    {
      v113 = v112;
      v367[0] = sub_1A9135458();
      swift_bridgeObjectRetain();
      sub_1A9148538(v113);
      if ((v113 & 0x8000000000000000) == 0)
      {
        v353 = v5;
        v354 = v2;
        v356 = "podcast-episodes";
        __asm { BR              X9 }
      }
      goto LABEL_267;
    }
    v367[0] = sub_1A9114C6C(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v115 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v114)
    {
      v116 = v114;
      v117 = v359;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v359, v357, v9);
      sub_1A91ACEC8();
      v118 = *(_QWORD *)(*v116 + 16);
      sub_1A91ACF40(v118);
      v119 = (uint64_t)v117;
      v41 = (char *)v357;
      v120 = sub_1A91ACFB4(v118, v119);
      nullsub_1(v120, v121, v122, v123);
    }
    v115(v367, 0);
    v98 = v358;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v41, v9);
  }
  v124 = v336;
  if ((*(_BYTE *)(v336 + 176) & 1) == 0)
  {
    v367[0] = *(_QWORD *)(v336 + 168);
    sub_1A93F9060();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v126 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v125)
    {
      v127 = v125;
      v128 = (uint64_t)v359;
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v359, v98, v9);
      sub_1A91ACEC8();
      v129 = *(_QWORD *)(*v127 + 16);
      sub_1A91ACF40(v129);
      v130 = v129;
      v98 = v358;
      v131 = sub_1A91ACFB4(v130, v128);
      nullsub_1(v131, v132, v133, v134);
    }
    v126(v367, 0);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v9);
    v124 = v336;
  }
  v135 = *(_QWORD *)(v124 + 88);
  if (*(_QWORD *)(v135 + 16) && (sub_1A912E028(0), (v137 & 1) != 0))
  {
    v364 = *(_QWORD *)(*(_QWORD *)(v135 + 56) + 8 * v136);
    swift_bridgeObjectRetain();
  }
  else
  {
    v364 = sub_1A9114D20(0);
  }
  v138 = v336;
  v139 = *(unsigned __int8 *)(v336 + 41);
  if (v139 == 6)
  {
    sub_1A9114B88(v336, (uint64_t)v8);
  }
  else
  {
    sub_1A92FA444(v139);
    v141 = v140;
    sub_1A9114B88(v138, (uint64_t)v8);
    if ((v141 & 1) != 0)
    {
      sub_1A9114C30((uint64_t)v8);
      sub_1A9114B88(v138, (uint64_t)v5);
      goto LABEL_43;
    }
  }
  v142 = sub_1A92F2904((uint64_t)v8);
  sub_1A9114C30((uint64_t)v8);
  sub_1A9114B88(v138, (uint64_t)v5);
  if ((v142 & 1) == 0)
  {
    if ((v5[42] & 1) != 0
      || *(_QWORD *)(*((_QWORD *)v5 + 15) + 16)
      || (v148 = *((unsigned __int8 *)v5 + 41), v148 == 6)
      || (sub_1A92FA444(v148), (v149 & 1) == 0))
    {
      sub_1A9114C30((uint64_t)v5);
      goto LABEL_49;
    }
  }
LABEL_43:
  sub_1A9114C30((uint64_t)v5);
  sub_1A91ACEBC();
  v143 = *(_QWORD *)(v364 + 16);
  sub_1A91ACF34(v143);
  v144 = sub_1A91ACF9C(v143, 8);
  nullsub_1(v144, v145, v146, v147);
LABEL_49:
  v150 = v336;
  v151 = *(_QWORD *)v336;
  v152 = *(_QWORD *)(v336 + 8);
  v153 = *(_QWORD *)(v336 + 16);
  v154 = *(_QWORD *)(v336 + 24);
  v155 = *(_QWORD *)(v336 + 32);
  v156 = *(unsigned __int8 *)(v336 + 40);
  if (v156 < 4 || !(v153 | v152 | v151 | v154 | v155) || v151 != 1 || v153 | v152 | v154 | v155)
  {
    sub_1A919EE64(*(_QWORD *)v336, *(_QWORD *)(v336 + 8), *(_QWORD *)(v336 + 16), *(_QWORD *)(v336 + 24), *(_QWORD *)(v336 + 32), *(_BYTE *)(v336 + 40));
    sub_1A919EE64(v151, v152, v153, v154, v155, v156);
    sub_1A9114BD0(v151, v152, v153, v154, v155, v156);
    sub_1A9114BD0(1, 0, 0, 0, 0, 4u);
    sub_1A9114BD0(v151, v152, v153, v154, v155, v156);
    sub_1A9114B88(v150, (uint64_t)v2);
    sub_1A9114C30((uint64_t)v2);
    goto LABEL_56;
  }
  sub_1A9114BD0(1, 0, 0, 0, *(_QWORD *)(v336 + 32), 4u);
  sub_1A9114BD0(1, 0, 0, 0, 0, 4u);
  sub_1A9114BD0(1, 0, 0, 0, v155, 4u);
  sub_1A9114B88(v150, (uint64_t)v2);
  v157 = *((unsigned __int8 *)v2 + 41);
  if (v157 == 6)
  {
    sub_1A9114C30((uint64_t)v2);
    v150 = v336;
  }
  else
  {
    sub_1A92FA444(v157);
    v321 = v320;
    sub_1A9114C30((uint64_t)v2);
    v150 = v336;
    if ((v321 & 1) != 0)
      goto LABEL_56;
  }
  sub_1A91ACEBC();
  v322 = *(_QWORD *)(v364 + 16);
  sub_1A91ACF34(v322);
  v323 = sub_1A91ACF9C(v322, 6);
  nullsub_1(v323, v324, v325, v326);
LABEL_56:
  v158 = *(_QWORD *)(v150 + 48);
  v159 = *(_QWORD *)(v158 + 64);
  v338 = (_QWORD *)(v158 + 64);
  v160 = 1 << *(_BYTE *)(v158 + 32);
  v161 = -1;
  if (v160 < 64)
    v161 = ~(-1 << v160);
  v162 = v161 & v159;
  v339 = (unint64_t)(v160 + 63) >> 6;
  v346 = v158;
  swift_bridgeObjectRetain();
  v356 = "sons";
  v355 = "personalizedSubscriptionOffers";
  v354 = "subscriptionOffers";
  v353 = "editorialArtwork";
  v352 = "availableShowCount";
  v351 = "n";
  v350 = "ledDate";
  v349 = "firstAvailableDates";
  v348 = "subscriptionType";
  v337 = "mplicit";
  if (v162)
  {
    v163 = __clz(__rbit64(v162));
    goto LABEL_73;
  }
  if (v339 > 1)
  {
    v164 = v338[1];
    v165 = 1;
    if (v164)
      goto LABEL_72;
    v165 = 2;
    if (v339 <= 2)
      goto LABEL_74;
    v164 = v338[2];
    if (v164)
      goto LABEL_72;
    v165 = 3;
    if (v339 <= 3)
      goto LABEL_74;
    v164 = v338[3];
    if (v164)
    {
LABEL_72:
      v163 = __clz(__rbit64(v164)) + (v165 << 6);
LABEL_73:
      v167 = *(unsigned __int8 *)(*(_QWORD *)(v346 + 48) + v163);
      strcpy((char *)v367, "include[");
      BYTE1(v367[1]) = 0;
      WORD1(v367[1]) = 0;
      HIDWORD(v367[1]) = -402653184;
      __asm { BR              X8 }
    }
    v166 = 4;
    if (v339 > 4)
    {
      v164 = v338[4];
      if (v164)
      {
        v165 = 4;
        goto LABEL_72;
      }
      while (1)
      {
        v165 = v166 + 1;
        if (__OFADD__(v166, 1))
          goto LABEL_260;
        if (v165 >= v339)
          break;
        v164 = v338[v165];
        ++v166;
        if (v164)
          goto LABEL_72;
      }
    }
  }
LABEL_74:
  swift_release();
  v168 = *(_QWORD *)(v336 + 56);
  v169 = *(_QWORD *)(v168 + 64);
  v339 = v168 + 64;
  v170 = 1 << *(_BYTE *)(v168 + 32);
  v171 = -1;
  if (v170 < 64)
    v171 = ~(-1 << v170);
  v172 = v171 & v169;
  v345 = (unint64_t)(v170 + 63) >> 6;
  v346 = v168;
  swift_bridgeObjectRetain();
  if (v172)
  {
    v173 = __clz(__rbit64(v172));
    goto LABEL_91;
  }
  if (v345 > 1)
  {
    v174 = *(_QWORD *)(v339 + 8);
    v175 = 1;
    if (v174)
      goto LABEL_90;
    v175 = 2;
    if (v345 > 2)
    {
      v174 = *(_QWORD *)(v339 + 16);
      if (v174)
        goto LABEL_90;
      v175 = 3;
      if (v345 > 3)
      {
        v174 = *(_QWORD *)(v339 + 24);
        if (!v174)
        {
          v176 = 4;
          if (v345 > 4)
          {
            v174 = *(_QWORD *)(v339 + 32);
            if (!v174)
            {
              while (1)
              {
                v175 = v176 + 1;
                if (__OFADD__(v176, 1))
                  break;
                if (v175 >= v345)
                  goto LABEL_92;
                v174 = *(_QWORD *)(v339 + 8 * v175);
                ++v176;
                if (v174)
                  goto LABEL_90;
              }
LABEL_261:
              __break(1u);
              goto LABEL_262;
            }
            v175 = 4;
            goto LABEL_90;
          }
          goto LABEL_92;
        }
LABEL_90:
        v173 = __clz(__rbit64(v174)) + (v175 << 6);
LABEL_91:
        v177 = *(unsigned __int8 *)(*(_QWORD *)(v346 + 48) + v173);
        strcpy((char *)v367, "relate[");
        v367[1] = 0xE700000000000000;
        __asm { BR              X8 }
      }
    }
  }
LABEL_92:
  swift_release();
  v178 = *(_QWORD *)(v336 + 64);
  v179 = *(_QWORD *)(v178 + 64);
  v358 = (char *)(v178 + 64);
  v180 = 1 << *(_BYTE *)(v178 + 32);
  v181 = -1;
  if (v180 < 64)
    v181 = ~(-1 << v180);
  v182 = v181 & v179;
  v183 = (unint64_t)(v180 + 63) >> 6;
  swift_bridgeObjectRetain();
  v184 = 0;
  for (i = v347; ; (*(void (**)(char *, _QWORD))(v187 + 8))(i, v186))
  {
    if (v182)
    {
      v190 = __clz(__rbit64(v182));
      v182 &= v182 - 1;
      v191 = v190 | (v184 << 6);
      goto LABEL_113;
    }
    v192 = v184 + 1;
    if (__OFADD__(v184, 1))
    {
      __break(1u);
LABEL_256:
      __break(1u);
LABEL_257:
      __break(1u);
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
      goto LABEL_261;
    }
    if (v192 >= v183)
      goto LABEL_115;
    v193 = *(_QWORD *)&v358[8 * v192];
    ++v184;
    if (!v193)
    {
      v184 = v192 + 1;
      if (v192 + 1 >= v183)
        goto LABEL_115;
      v193 = *(_QWORD *)&v358[8 * v184];
      if (!v193)
      {
        v184 = v192 + 2;
        if (v192 + 2 >= v183)
          goto LABEL_115;
        v193 = *(_QWORD *)&v358[8 * v184];
        if (!v193)
          break;
      }
    }
LABEL_112:
    v182 = (v193 - 1) & v193;
    v191 = __clz(__rbit64(v193)) + (v184 << 6);
LABEL_113:
    v195 = *(_BYTE *)(*(_QWORD *)(v178 + 48) + v191);
    v367[0] = 0;
    v367[1] = 0xE000000000000000;
    sub_1A93F909C();
    LOBYTE(v363[0]) = v195;
    MediaRequest.Relationship.rawValue.getter();
    sub_1A9143BC4();
    swift_bridgeObjectRelease();
    sub_1A93F909C();
    v367[0] = 0;
    v367[1] = 0xE000000000000000;
    sub_1A93F909C();
    sub_1A91E85DC();
    sub_1A93F909C();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v196 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v197)
    {
      v186 = (void (*)(_QWORD, _QWORD))v360;
      v187 = v361;
      v188 = v359;
      (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v347, v360);
      v189 = (uint64_t)v188;
      i = v347;
      sub_1A91AC618(v189);
      v196(v367, 0);
    }
    else
    {
      v196(v367, 0);
      v186 = (void (*)(_QWORD, _QWORD))v360;
      v187 = v361;
    }
  }
  v194 = v192 + 3;
  if (v194 < v183)
  {
    v193 = *(_QWORD *)&v358[8 * v194];
    if (!v193)
    {
      while (1)
      {
        v184 = v194 + 1;
        if (__OFADD__(v194, 1))
          break;
        if (v184 >= v183)
          goto LABEL_115;
        v193 = *(_QWORD *)&v358[8 * v184];
        ++v194;
        if (v193)
          goto LABEL_112;
      }
LABEL_262:
      __break(1u);
      goto LABEL_263;
    }
    v184 = v194;
    goto LABEL_112;
  }
LABEL_115:
  swift_release();
  if (sub_1A9158A8C(*(_QWORD *)(v336 + 72)))
  {
    v198 = swift_bridgeObjectRetain();
    v199 = sub_1A92F0478(v198);
    swift_bridgeObjectRelease();
    v367[0] = v199;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    v200 = v328;
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v201 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    v204 = (void (*)(_QWORD, _QWORD))v360;
    v203 = v361;
    v205 = v334;
    if (*v202)
    {
      v206 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v200, v360);
      sub_1A91AC618(v206);
    }
    v201(v367, 0);
    (*(void (**)(char *, _QWORD))(v203 + 8))(v200, v204);
  }
  else
  {
    v204 = (void (*)(_QWORD, _QWORD))v360;
    v203 = v361;
    v205 = v334;
  }
  v207 = *(_QWORD *)(v336 + 80);
  if (sub_1A915A80C(v207))
  {
    v367[0] = v207;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v208 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v209)
    {
      v210 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v203 + 16))(v359, v205, v204);
      sub_1A91AC618(v210);
    }
    v208(v367, 0);
    (*(void (**)(char *, _QWORD))(v203 + 8))(v205, v204);
  }
  v211 = *(_QWORD *)(v336 + 88);
  v363[0] = v211;
  if (sub_1A9158A8C(v364))
  {
    swift_bridgeObjectRetain();
    v212 = swift_bridgeObjectRetain();
    sub_1A927CD60(v212, 0);
    v211 = v363[0];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v213 = *(_QWORD *)(v211 + 64);
  v357 = v211 + 64;
  v214 = 1 << *(_BYTE *)(v211 + 32);
  v215 = -1;
  if (v214 < 64)
    v215 = ~(-1 << v214);
  v216 = v215 & v213;
  v358 = (char *)((unint64_t)(v214 + 63) >> 6);
  swift_bridgeObjectRetain();
  v217 = 0;
  v218 = v343;
  while (2)
  {
    if (v216)
    {
      v221 = __clz(__rbit64(v216));
      v216 &= v216 - 1;
      v222 = v221 | (v217 << 6);
LABEL_145:
      v226 = *(_BYTE *)(*(_QWORD *)(v211 + 48) + v222);
      v227 = *(_QWORD *)(*(_QWORD *)(v211 + 56) + 8 * v222);
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1A93F909C();
      LOBYTE(v366) = v226;
      MediaRequest.ContentType.rawValue.getter();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v228 = sub_1A92F0794(v227);
      swift_bridgeObjectRelease();
      v367[0] = v228;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
      sub_1A93F7FE0();
      swift_bridgeObjectRelease();
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v229 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v230)
      {
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v219 = v361;
        v220 = (uint64_t)v359;
        (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v218, v360);
        sub_1A91AC618(v220);
        v229(v367, 0);
      }
      else
      {
        v229(v367, 0);
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v219 = v361;
      }
      (*(void (**)(char *, _QWORD))(v219 + 8))(v218, v204);
      continue;
    }
    break;
  }
  v223 = __OFADD__(v217++, 1);
  if (v223)
    goto LABEL_256;
  if (v217 < (uint64_t)v358)
  {
    v224 = *(_QWORD *)(v357 + 8 * v217);
    if (!v224)
    {
      v225 = v217 + 1;
      if (v217 + 1 >= (uint64_t)v358)
        goto LABEL_151;
      v224 = *(_QWORD *)(v357 + 8 * v225);
      if (!v224)
      {
        v225 = v217 + 2;
        if (v217 + 2 >= (uint64_t)v358)
          goto LABEL_151;
        v224 = *(_QWORD *)(v357 + 8 * v225);
        if (!v224)
        {
          v225 = v217 + 3;
          if (v217 + 3 >= (uint64_t)v358)
            goto LABEL_151;
          v224 = *(_QWORD *)(v357 + 8 * v225);
          if (!v224)
          {
            while (1)
            {
              v217 = v225 + 1;
              if (__OFADD__(v225, 1))
                break;
              if (v217 >= (uint64_t)v358)
                goto LABEL_151;
              v224 = *(_QWORD *)(v357 + 8 * v217);
              ++v225;
              if (v224)
                goto LABEL_144;
            }
LABEL_263:
            __break(1u);
            goto LABEL_264;
          }
        }
      }
      v217 = v225;
    }
LABEL_144:
    v216 = (v224 - 1) & v224;
    v222 = __clz(__rbit64(v224)) + (v217 << 6);
    goto LABEL_145;
  }
LABEL_151:
  swift_release();
  v231 = *(_QWORD *)(v336 + 96);
  v232 = *(_QWORD *)(v231 + 64);
  v357 = v231 + 64;
  v233 = 1 << *(_BYTE *)(v231 + 32);
  v234 = -1;
  if (v233 < 64)
    v234 = ~(-1 << v233);
  v235 = v234 & v232;
  v358 = (char *)((unint64_t)(v233 + 63) >> 6);
  swift_bridgeObjectRetain();
  v236 = 0;
  v237 = v342;
  while (2)
  {
    if (v235)
    {
      v240 = __clz(__rbit64(v235));
      v235 &= v235 - 1;
      v241 = v240 | (v236 << 6);
LABEL_169:
      v245 = *(_BYTE *)(*(_QWORD *)(v231 + 48) + v241);
      v246 = *(_QWORD *)(*(_QWORD *)(v231 + 56) + 8 * v241);
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1A93F909C();
      LOBYTE(v366) = v245;
      MediaRequest.ContentType.rawValue.getter();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v247 = sub_1A92F0794(v246);
      swift_bridgeObjectRelease();
      v367[0] = v247;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
      sub_1A93F7FE0();
      swift_bridgeObjectRelease();
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v248 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v249)
      {
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v238 = v361;
        v239 = (uint64_t)v359;
        (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v237, v360);
        sub_1A91AC618(v239);
        v248(v367, 0);
      }
      else
      {
        v248(v367, 0);
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v238 = v361;
      }
      (*(void (**)(char *, _QWORD))(v238 + 8))(v237, v204);
      continue;
    }
    break;
  }
  v223 = __OFADD__(v236++, 1);
  if (v223)
    goto LABEL_257;
  if (v236 < (uint64_t)v358)
  {
    v242 = *(_QWORD *)(v357 + 8 * v236);
    v243 = v361;
    if (!v242)
    {
      v244 = v236 + 1;
      if (v236 + 1 >= (uint64_t)v358)
        goto LABEL_176;
      v242 = *(_QWORD *)(v357 + 8 * v244);
      if (!v242)
      {
        v244 = v236 + 2;
        if (v236 + 2 >= (uint64_t)v358)
          goto LABEL_176;
        v242 = *(_QWORD *)(v357 + 8 * v244);
        if (!v242)
        {
          v244 = v236 + 3;
          if (v236 + 3 >= (uint64_t)v358)
            goto LABEL_176;
          v242 = *(_QWORD *)(v357 + 8 * v244);
          if (!v242)
          {
            while (1)
            {
              v236 = v244 + 1;
              if (__OFADD__(v244, 1))
                break;
              if (v236 >= (uint64_t)v358)
                goto LABEL_176;
              v242 = *(_QWORD *)(v357 + 8 * v236);
              ++v244;
              if (v242)
                goto LABEL_168;
            }
LABEL_264:
            __break(1u);
            goto LABEL_265;
          }
        }
      }
      v236 = v244;
    }
LABEL_168:
    v235 = (v242 - 1) & v242;
    v241 = __clz(__rbit64(v242)) + (v236 << 6);
    goto LABEL_169;
  }
  v243 = v361;
LABEL_176:
  swift_release();
  if (sub_1A915A80C(*(_QWORD *)(v336 + 104)))
  {
    v250 = swift_bridgeObjectRetain();
    v251 = sub_1A92F0AB0(v250);
    swift_bridgeObjectRelease();
    v367[0] = v251;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
    sub_1A93F7FE0();
    swift_bridgeObjectRelease();
    v252 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v253)
    {
      v254 = (uint64_t)v359;
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      sub_1A91AC618(v254);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v252(v367, 0);
  }
  v255 = swift_bridgeObjectRetain();
  v256 = sub_1A92F0C70(v255);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v367[0] = v256;
  v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  v357 = sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
  v358 = (char *)v257;
  sub_1A93F7FE0();
  swift_bridgeObjectRelease();
  if (sub_1A93F80DC() < 1)
  {
    swift_bridgeObjectRelease();
    v261 = v333;
  }
  else
  {
    v258 = v331;
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v259 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    v261 = v333;
    if (*v260)
    {
      v262 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v243 + 16))(v359, v258, v204);
      sub_1A91AC618(v262);
    }
    v259(v367, 0);
    (*(void (**)(char *, _QWORD))(v243 + 8))(v258, v204);
  }
  v263 = v336;
  if (*(_BYTE *)(v336 + v335[26]) == 1)
  {
    MediaRequest.MediaRequestActionType.rawValue.getter();
    sub_1A93F6E88();
    swift_bridgeObjectRelease();
    v264 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v265)
    {
      v266 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v243 + 16))(v359, v261, v204);
      sub_1A91AC618(v266);
    }
    v264(v367, 0);
    (*(void (**)(char *, _QWORD))(v243 + 8))(v261, v204);
    v263 = v336;
  }
  v267 = *(_QWORD *)(v263 + 152);
  v268 = *(_QWORD *)(v267 + 64);
  v355 = (const char *)(v267 + 64);
  v269 = 1 << *(_BYTE *)(v267 + 32);
  v270 = -1;
  if (v269 < 64)
    v270 = ~(-1 << v269);
  v271 = v270 & v268;
  v356 = (char *)((unint64_t)(v269 + 63) >> 6);
  swift_bridgeObjectRetain();
  v272 = 0;
  while (2)
  {
    if (v271)
    {
      v274 = __clz(__rbit64(v271));
      v271 &= v271 - 1;
      v275 = v274 | (v272 << 6);
LABEL_211:
      v279 = *(_BYTE *)(*(_QWORD *)(v267 + 48) + v275);
      v280 = *(_QWORD *)(*(_QWORD *)(v267 + 56) + 8 * v275);
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1A93F909C();
      LOBYTE(v366) = v279;
      MediaRequest.Filter.rawValue.getter();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      sub_1A93F909C();
      v366 = v280;
      sub_1A93F7FE0();
      swift_bridgeObjectRelease();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v281 = v341;
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v282 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v283)
      {
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v243 = v361;
        v273 = (uint64_t)v359;
        (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v281, v360);
        sub_1A91AC618(v273);
        v282(v367, 0);
      }
      else
      {
        v282(v367, 0);
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v243 = v361;
      }
      (*(void (**)(char *, _QWORD))(v243 + 8))(v281, v204);
      continue;
    }
    break;
  }
  v276 = v272 + 1;
  if (__OFADD__(v272, 1))
    goto LABEL_258;
  if (v276 < (uint64_t)v356)
  {
    v277 = *(_QWORD *)&v355[8 * v276];
    ++v272;
    if (!v277)
    {
      v272 = v276 + 1;
      if (v276 + 1 >= (uint64_t)v356)
        goto LABEL_213;
      v277 = *(_QWORD *)&v355[8 * v272];
      if (!v277)
      {
        v272 = v276 + 2;
        if (v276 + 2 >= (uint64_t)v356)
          goto LABEL_213;
        v277 = *(_QWORD *)&v355[8 * v272];
        if (!v277)
        {
          v278 = v276 + 3;
          if (v278 >= (uint64_t)v356)
            goto LABEL_213;
          v277 = *(_QWORD *)&v355[8 * v278];
          if (!v277)
          {
            while (1)
            {
              v272 = v278 + 1;
              if (__OFADD__(v278, 1))
                break;
              if (v272 >= (uint64_t)v356)
                goto LABEL_213;
              v277 = *(_QWORD *)&v355[8 * v272];
              ++v278;
              if (v277)
                goto LABEL_210;
            }
LABEL_265:
            __break(1u);
            goto LABEL_266;
          }
          v272 = v278;
        }
      }
    }
LABEL_210:
    v271 = (v277 - 1) & v277;
    v275 = __clz(__rbit64(v277)) + (v272 << 6);
    goto LABEL_211;
  }
LABEL_213:
  swift_release();
  v284 = *(_QWORD *)(v336 + 160);
  v285 = *(_QWORD *)(v284 + 64);
  v355 = (const char *)(v284 + 64);
  v286 = 1 << *(_BYTE *)(v284 + 32);
  v287 = -1;
  if (v286 < 64)
    v287 = ~(-1 << v286);
  v288 = v287 & v285;
  v356 = (char *)((unint64_t)(v286 + 63) >> 6);
  swift_bridgeObjectRetain();
  v289 = 0;
  while (2)
  {
    if (v288)
    {
      v291 = __clz(__rbit64(v288));
      v288 &= v288 - 1;
      v292 = v291 | (v289 << 6);
LABEL_234:
      v296 = *(_BYTE *)(*(_QWORD *)(v284 + 48) + v292);
      v297 = *(_QWORD *)(*(_QWORD *)(v284 + 56) + 8 * v292);
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1A93F909C();
      LOBYTE(v366) = v296;
      MediaRequest.ContentType.rawValue.getter();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v367[0] = 0;
      v367[1] = 0xE000000000000000;
      sub_1A93F909C();
      v366 = v297;
      sub_1A93F7FE0();
      swift_bridgeObjectRelease();
      sub_1A9143BC4();
      swift_bridgeObjectRelease();
      sub_1A93F909C();
      v298 = v340;
      sub_1A93F6E88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v299 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v300)
      {
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v243 = v361;
        v290 = (uint64_t)v359;
        (*(void (**)(char *, char *, void (*)(_QWORD *, _QWORD)))(v361 + 16))(v359, v298, v360);
        sub_1A91AC618(v290);
        v299(v367, 0);
      }
      else
      {
        v299(v367, 0);
        v204 = (void (*)(_QWORD, _QWORD))v360;
        v243 = v361;
      }
      (*(void (**)(char *, _QWORD))(v243 + 8))(v298, v204);
      continue;
    }
    break;
  }
  v293 = v289 + 1;
  if (__OFADD__(v289, 1))
    goto LABEL_259;
  if (v293 < (uint64_t)v356)
  {
    v294 = *(_QWORD *)&v355[8 * v293];
    ++v289;
    if (!v294)
    {
      v289 = v293 + 1;
      if (v293 + 1 >= (uint64_t)v356)
        goto LABEL_236;
      v294 = *(_QWORD *)&v355[8 * v289];
      if (!v294)
      {
        v289 = v293 + 2;
        if (v293 + 2 >= (uint64_t)v356)
          goto LABEL_236;
        v294 = *(_QWORD *)&v355[8 * v289];
        if (!v294)
        {
          v295 = v293 + 3;
          if (v295 >= (uint64_t)v356)
            goto LABEL_236;
          v294 = *(_QWORD *)&v355[8 * v295];
          if (!v294)
          {
            while (1)
            {
              v289 = v295 + 1;
              if (__OFADD__(v295, 1))
                break;
              if (v289 >= (uint64_t)v356)
                goto LABEL_236;
              v294 = *(_QWORD *)&v355[8 * v289];
              ++v295;
              if (v294)
                goto LABEL_233;
            }
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
            JUMPOUT(0x1A92F5C74);
          }
          v289 = v295;
        }
      }
    }
LABEL_233:
    v288 = (v294 - 1) & v294;
    v292 = __clz(__rbit64(v294)) + (v289 << 6);
    goto LABEL_234;
  }
LABEL_236:
  result = swift_release();
  v302 = v336;
  v303 = v332;
  if (*(_QWORD *)(v336 + v335[29] + 8))
  {
    v304 = v329;
    sub_1A93F6E88();
    v305 = v330;
    sub_1A93F6E88();
    v306 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v307)
    {
      v308 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v243 + 16))(v359, v305, v204);
      sub_1A91AC618(v308);
    }
    v306(v367, 0);
    v309 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v310)
    {
      v311 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v243 + 16))(v359, v304, v204);
      sub_1A91AC618(v311);
    }
    v309(v367, 0);
    v312 = *(void (**)(char *, _QWORD))(v243 + 8);
    v312(v305, v204);
    result = ((uint64_t (*)(char *, _QWORD))v312)(v304, v204);
    v302 = v336;
  }
  v313 = *(unsigned __int8 *)(v302 + 40);
  if (v313 == 2)
  {
    sub_1A93F6E88();
    v314 = (void (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
    if (*v315)
    {
      v316 = (uint64_t)v359;
      (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v243 + 16))(v359, v303, v204);
      sub_1A91AC618(v316);
    }
    v314(v367, 0);
    result = (*(uint64_t (**)(char *, _QWORD))(v243 + 8))(v303, v204);
    v302 = v336;
    v313 = *(unsigned __int8 *)(v336 + 40);
  }
  if (v313 == 3)
  {
    v317 = *(_QWORD *)(v302 + 16);
    result = swift_bridgeObjectRetain();
    if (v317)
    {
      v318 = (uint64_t (*)(_QWORD *, _QWORD))sub_1A93F6EB8();
      if (*v319)
        sub_1A9136F78(v317);
      else
        swift_bridgeObjectRelease();
      return v318(v367, 0);
    }
  }
  return result;
}

uint64_t sub_1A92F5D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  sub_1A9114BD0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 96);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A92F5EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8) + 80);
  sub_1A92F1874(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t static RemoteNonFollowedShowError.== infix(_:_:)()
{
  return 1;
}

uint64_t RemoteNonFollowedShowError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t RemoteNonFollowedShowError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A92F5F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A94055A0;
  *(_QWORD *)(v0 + 32) = sub_1A93F8040();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1A93F8040();
  *(_QWORD *)(v0 + 56) = v2;
  result = sub_1A93F8040();
  *(_QWORD *)(v0 + 64) = result;
  *(_QWORD *)(v0 + 72) = v4;
  off_1EEABDAC0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static RemoteNonFollowedShow.knownSyncKeys.getter()
{
  return sub_1A91A8EAC(&qword_1EEAB6F28);
}

uint64_t sub_1A92F6008()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A93F8040();
  qword_1EEABDAC8 = result;
  unk_1EEABDAD0 = v1;
  return result;
}

uint64_t static RemoteNonFollowedShow.unknownSyncKey.getter()
{
  uint64_t v0;

  if (qword_1EEAB6F30 != -1)
    swift_once();
  v0 = qword_1EEABDAC8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A92F6090()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t result;

  if (qword_1EEAB6F28 != -1)
    swift_once();
  v0 = off_1EEABDAC0;
  if (qword_1EEAB6F30 != -1)
    swift_once();
  v2 = qword_1EEABDAC8;
  v1 = unk_1EEABDAD0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v0 = sub_1A907ECFC(0, v0[2] + 1, 1, v0);
  v4 = v0[2];
  v3 = v0[3];
  if (v4 >= v3 >> 1)
    v0 = sub_1A907ECFC((_QWORD *)(v3 > 1), v4 + 1, 1, v0);
  v0[2] = v4 + 1;
  v5 = &v0[2 * v4];
  v5[4] = v2;
  v5[5] = v1;
  result = swift_bridgeObjectRelease();
  qword_1EEABDAD8 = (uint64_t)v0;
  return result;
}

uint64_t static RemoteNonFollowedShow.allSyncKeys.getter()
{
  return sub_1A91A8EAC(&qword_1EEAB6F38);
}

uint64_t RemoteNonFollowedShow.storeCollectionId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RemoteNonFollowedShow.feedURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteNonFollowedShow.lastDatePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t RemoteNonFollowedShow.unknownSyncProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteNonFollowedShow.init(dictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  char v39;

  v4 = sub_1A93F8040();
  if (!*(_QWORD *)(a1 + 16) || (v6 = sub_1A9094640(v4, v5), (v7 & 1) == 0))
  {
    v37 = 0u;
    v38 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v38 + 1))
    goto LABEL_9;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v8 = v35;
  v9 = sub_1A93F8040();
  if (*(_QWORD *)(a1 + 16) && (v11 = sub_1A9094640(v9, v10), (v12 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v38 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1A90A593C((uint64_t)&v37);
LABEL_10:
    sub_1A92F65E0();
    swift_allocError();
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_17;
  v14 = v35;
  v15 = v36;
  v16 = sub_1A93F8040();
  if (*(_QWORD *)(a1 + 16) && (v18 = sub_1A9094640(v16, v17), (v19 & 1) != 0))
  {
    sub_1A906443C(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v38 + 1))
  {
    v20 = swift_dynamicCast();
    if (v20)
      v21 = v35;
    else
      v21 = 0;
    v22 = v20 ^ 1;
  }
  else
  {
    sub_1A90A593C((uint64_t)&v37);
    v21 = 0;
    v22 = 1;
  }
  v39 = v22;
  if (qword_1EEAB6F28 != -1)
    swift_once();
  v23 = (char *)off_1EEABDAC0;
  v24 = *((_QWORD *)off_1EEABDAC0 + 2);
  if (v24)
  {
    v34 = v21;
    swift_bridgeObjectRetain();
    v25 = (uint64_t *)(v23 + 40);
    do
    {
      v26 = *(v25 - 1);
      v27 = *v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = sub_1A9094640(v26, v27);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1A9306F64();
        swift_bridgeObjectRelease();
        sub_1A908A5DC((_OWORD *)(*(_QWORD *)(a1 + 56) + 32 * v28), &v37);
        sub_1A91A95FC(v28, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        v37 = 0u;
        v38 = 0u;
      }
      v25 += 2;
      sub_1A90A593C((uint64_t)&v37);
      swift_bridgeObjectRelease();
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    v14 = v35;
    v8 = v35;
    v21 = v34;
    v15 = v36;
  }
  v31 = swift_bridgeObjectRetain();
  v32 = sub_1A91A920C(v31);
  result = swift_bridgeObjectRelease_n();
  v33 = v39;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v21;
  *(_BYTE *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v32;
  return result;
}

uint64_t sub_1A92F657C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92F6584()
{
  uint64_t v0;

  if (qword_1EEAB6F30 != -1)
    swift_once();
  v0 = qword_1EEABDAC8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1A92F65E0()
{
  unint64_t result;

  result = qword_1EEABDAE0;
  if (!qword_1EEABDAE0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for RemoteNonFollowedShowError, &type metadata for RemoteNonFollowedShowError);
    atomic_store(result, (unint64_t *)&qword_1EEABDAE0);
  }
  return result;
}

unint64_t sub_1A92F6628()
{
  unint64_t result;

  result = qword_1EEABDAE8;
  if (!qword_1EEABDAE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for RemoteNonFollowedShowError, &type metadata for RemoteNonFollowedShowError);
    atomic_store(result, (unint64_t *)&qword_1EEABDAE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoteNonFollowedShowError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92F66AC + 4 * asc_1A941C280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92F66CC + 4 * byte_1A941C285[v4]))();
}

_BYTE *sub_1A92F66AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92F66CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92F66D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92F66DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92F66E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92F66EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RemoteNonFollowedShowError()
{
  return &type metadata for RemoteNonFollowedShowError;
}

uint64_t destroy for RemoteNonFollowedShow()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteNonFollowedShow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteNonFollowedShow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNonFollowedShow()
{
  return &type metadata for RemoteNonFollowedShow;
}

uint64_t sub_1A92F68FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t PurchaseOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

PodcastsFoundation::PurchaseOptions __swiftcall PurchaseOptions.init(rawValue:)(PodcastsFoundation::PurchaseOptions rawValue)
{
  PodcastsFoundation::PurchaseOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PurchaseOptions.userInitiated.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PurchaseOptions.promptForAccount.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A92F6978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A92F68FC(a1, a2);
}

void sub_1A92F698C()
{
  qword_1EEABDAF0 = 3;
}

uint64_t static PurchaseOptions.default.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EEAB6F40 != -1)
    result = swift_once();
  *a1 = qword_1EEABDAF0;
  return result;
}

unint64_t sub_1A92F6A04()
{
  unint64_t result;

  result = qword_1EEABDAF8;
  if (!qword_1EEABDAF8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PurchaseOptions, &type metadata for PurchaseOptions);
    atomic_store(result, (unint64_t *)&qword_1EEABDAF8);
  }
  return result;
}

unint64_t sub_1A92F6A4C()
{
  unint64_t result;

  result = qword_1EEABDB00;
  if (!qword_1EEABDB00)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PurchaseOptions, &type metadata for PurchaseOptions);
    atomic_store(result, (unint64_t *)&qword_1EEABDB00);
  }
  return result;
}

unint64_t sub_1A92F6A94()
{
  unint64_t result;

  result = qword_1EEABDB08;
  if (!qword_1EEABDB08)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PurchaseOptions, &type metadata for PurchaseOptions);
    atomic_store(result, (unint64_t *)&qword_1EEABDB08);
  }
  return result;
}

unint64_t sub_1A92F6ADC()
{
  unint64_t result;

  result = qword_1EEABDB10;
  if (!qword_1EEABDB10)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PurchaseOptions, &type metadata for PurchaseOptions);
    atomic_store(result, (unint64_t *)&qword_1EEABDB10);
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseOptions()
{
  return &type metadata for PurchaseOptions;
}

uint64_t dispatch thunk of PurchaseTaskProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.productId(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 64))();
}

id sub_1A92F6B70(uint64_t a1)
{
  return sub_1A92F6BD4(60.0, a1, &qword_1ED2A1CB8);
}

id static FutureDateChecker.sharedInstance.getter()
{
  return sub_1A906F330(&qword_1EEAB6F48, (id *)&qword_1ED2A1CB8);
}

id sub_1A92F6BBC(uint64_t a1)
{
  return sub_1A92F6BD4(43260.0, a1, &qword_1ED2A24B8);
}

id sub_1A92F6BD4(double a1, uint64_t a2, _QWORD *a3)
{
  objc_class *v5;
  _BYTE *v6;
  id result;
  objc_super v8;

  v5 = (objc_class *)type metadata accessor for FutureDateChecker();
  v6 = objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_leniency] = 0x404E000000000000;
  *(double *)&v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertionLeniency] = a1;
  v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures] = 1;
  v8.receiver = v6;
  v8.super_class = v5;
  result = objc_msgSendSuper2(&v8, sel_init);
  *a3 = result;
  return result;
}

id static FutureDateChecker.lenientSharedInstance.getter()
{
  return sub_1A906F330(&qword_1ED2A24C0, (id *)&qword_1ED2A24B8);
}

id sub_1A92F6C8C(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.getter()
{
  if (qword_1EEAB6F48 != -1)
    swift_once();
  return *(unsigned __int8 *)(qword_1ED2A1CB8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures);
}

uint64_t static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.setter(uint64_t result)
{
  char v1;

  v1 = result;
  if (qword_1EEAB6F48 != -1)
    result = swift_once();
  *(_BYTE *)(qword_1ED2A1CB8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures) = v1 & 1;
  return result;
}

_BYTE *(*static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.modify(_BYTE *a1))(_BYTE *result)
{
  if (qword_1EEAB6F48 != -1)
    swift_once();
  *a1 = *(_BYTE *)(qword_1ED2A1CB8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures);
  return sub_1A92F6E7C;
}

_BYTE *sub_1A92F6E7C(_BYTE *result)
{
  *(_BYTE *)(qword_1ED2A1CB8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures) = *result;
  return result;
}

BOOL sub_1A92F6EB4(double a1)
{
  double v2;

  sub_1A93F72E4();
  return sub_1A92F7630(a1, v2);
}

BOOL sub_1A92F6F24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  BOOL v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A1CA8(a2, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1A93F7380();
    sub_1A90AC3A4((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  sub_1A93F72D8();
  v11 = v10;
  sub_1A93F72D8();
  v13 = sub_1A92F7630(v11, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

BOOL sub_1A92F7230(double a1, double a2)
{
  return sub_1A92F7630(a1, a2);
}

BOOL sub_1A92F7288()
{
  double v0;
  double v1;
  double v2;

  sub_1A93F72D8();
  v1 = v0;
  sub_1A93F72D8();
  return sub_1A92F7630(v1, v2);
}

BOOL sub_1A92F73E8(double a1)
{
  double v2;

  sub_1A93F72E4();
  return sub_1A92F7630(a1, v2);
}

BOOL sub_1A92F7470()
{
  double v0;
  double v1;
  double v2;

  sub_1A93F72D8();
  v1 = v0;
  sub_1A93F72E4();
  return sub_1A92F7630(v1, v2);
}

id FutureDateChecker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FutureDateChecker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FutureDateChecker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FutureDateChecker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1A92F7630(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD v24[2];
  uint8_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2 + 60.0;
  if (v12 < a1)
  {
    if (qword_1ED2A4288 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A4268);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
    v14 = sub_1A93F7674();
    v15 = sub_1A93F879C();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v27 = v16;
      v17 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v29 = v26;
      *(_DWORD *)v17 = 136446210;
      v24[1] = v17 + 4;
      v25 = v17;
      sub_1A93F72CC();
      sub_1A9116D50();
      v18 = sub_1A93F9060();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v28 = sub_1A906436C(v18, v20, &v29);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v21 = v25;
      _os_log_impl(&dword_1A904E000, v14, (os_log_type_t)v27, "Caught future timestamp: %{public}s", v25, 0xCu);
      v22 = v26;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v22, -1, -1);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12 < a1;
}

uint64_t type metadata accessor for FutureDateChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for FutureDateChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(timestamp:boundBy:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(timestamp:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(date:boundBy:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FutureDateChecker.timestamp(_:boundBy:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampForDate(_:boundBy:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampBoundByNow(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampBoundByNow(forDate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t Date.friendlyDisplayString.getter()
{
  return sub_1A92F79F0((SEL *)&selRef_friendlyDisplayString);
}

Swift::String __swiftcall Date.verboseDisplayString()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A92F79F0((SEL *)&selRef_verboseDisplayString);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.verboseDisplayStringWithoutTime()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A92F79F0((SEL *)&selRef_verboseDisplayStringWithoutTime);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.lessVerboseDisplayStringWithoutTime()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A92F79F0((SEL *)&selRef_lessVerboseDisplayStringWithoutTime);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.verboseDisplayStringWithoutTimeAndCurrentYear()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A92F79F0((SEL *)&selRef_verboseDisplayStringWithoutTimeAndCurrentYear);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.lessVerboseDisplayStringWithoutTimeAndCurrentYear()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A92F79F0((SEL *)&selRef_lessVerboseDisplayStringWithoutTimeAndCurrentYear);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A92F79F0(SEL *a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)sub_1A93F7314();
  v3 = objc_msgSend(v2, *a1);

  v4 = sub_1A93F8040();
  return v4;
}

uint64_t HomogeneousValueBag.values.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = sub_1A93F7F44();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF414014](MEMORY[0x1E0DE9F98], v0);
  return sub_1A93F83E8();
}

uint64_t HomogeneousValueBag.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1A93F7EB4();
  return v0;
}

uint64_t HomogeneousValueBag.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_1A93F7EB4();
  return v0;
}

uint64_t HomogeneousValueBag.add(value:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  swift_beginAccess();
  v13 = nullsub_1(v1[2], MEMORY[0x1E0DEDC60], v3, MEMORY[0x1E0DEDC70]);
  v7 = sub_1A93F7F38();
  MEMORY[0x1AF414014](MEMORY[0x1E0DE9ED0], v7);
  v15 = sub_1A93F8250();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDB30);
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF20], v8);
  sub_1A93F7FD4();
  swift_bridgeObjectRelease();
  if (v14)
    v9 = 1;
  else
    v9 = v13 + 1;
  v10 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v3);
  v15 = v9;
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F80();
  swift_endAccess();
  return v9;
}

Swift::Void __swiftcall HomogeneousValueBag.remove(valueWithToken:)(Swift::Int64 valueWithToken)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[24];
  Swift::Int64 v7;

  v2 = sub_1A93F8A90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v6[-v4];
  v7 = valueWithToken;
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F14();
  swift_endAccess();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

Swift::Void __swiftcall HomogeneousValueBag.removeAll()()
{
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F50();
  swift_endAccess();
}

uint64_t HomogeneousValueBag.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HomogeneousValueBag.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for HomogeneousValueBag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HomogeneousValueBag.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A92F7ECC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x646572616873;
    else
      v3 = 0x647261646E617473;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x646572616873;
      else
        v6 = 0x647261646E617473;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x73676E6974746573;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x73676E6974746573)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F7FDC(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aStdq_7[8 * a1] == *(_QWORD *)&aStdq_7[8 * a2])
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_1A92F8040(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A92F8090(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F8150 + 4 * byte_1A941C68A[a2]))(a3);
}

uint64_t sub_1A92F8150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001A9442650)
    v4 = 1;
  else
    v4 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

BOOL sub_1A92F8240(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1A92F824C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6269726373627573;
  else
    v3 = 7628135;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x6269726373627573;
  else
    v5 = 7628135;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1A92F82EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F8324(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F83CC + 4 * byte_1A941C69A[a2]))(0x737574617473);
}

uint64_t sub_1A92F83CC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x737574617473 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A92F84C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F8524(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F8588 + 4 * byte_1A941C6A4[a2]))(0x6C61727475656ELL);
}

uint64_t sub_1A92F8588(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A92F8634(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000011;
  v3 = 0x80000001A9441C60;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x74736163646F70;
    else
      v5 = 0x697263736E617274;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xEB00000000737470;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000011;
  v6 = 0x80000001A9441C60;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x74736163646F70;
    else
      v2 = 0x697263736E617274;
    if (v7 == 1)
      v3 = 0xE700000000000000;
    else
      v3 = 0xEB00000000737470;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F8750(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x65722D65636E6F6ELL;
    if (v2 == 1)
      v4 = 0x80000001A9442570;
    else
      v4 = 0xEF7365736E6F7073;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000011;
      else
        v6 = 0x65722D65636E6F6ELL;
      if (v5 == 1)
        v7 = 0x80000001A9442570;
      else
        v7 = 0xEF7365736E6F7073;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E6F6973726576;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E6F6973726576)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A92F8880(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F88C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F8934 + 4 * byte_1A941C6AD[a2]))(0x6F65646976);
}

uint64_t sub_1A92F8934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6F65646976 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1A92F89E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 30324;
    else
      v3 = 1937204590;
    if (v2 == 1)
      v4 = 0xE200000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 30324;
      else
        v6 = 1937204590;
      if (v5 == 1)
        v7 = 0xE200000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x636973756DLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x636973756DLL)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F8AD0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x72656C69617274;
    else
      v3 = 0x73756E6F62;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x72656C69617274;
      else
        v6 = 0x73756E6F62;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1819047270;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1819047270)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A92F8BD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F8C3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F8D6C + 4 * byte_1A941C6BC[a2]))(0x5F64696C61766E69);
}

uint64_t sub_1A92F8D6C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5F64696C61766E69 && v1 == 0xEF74736575716572)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A92F8EF8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1635018093;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1635018093;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1A92F8F88(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F8FC8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F906C + 4 * byte_1A941C6CF[a2]))(a3 + 506);
}

uint64_t sub_1A92F906C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == a3 + 506 && v3 == v4)
    v5 = 1;
  else
    v5 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A92F9178(uint64_t a1, uint64_t a2)
{
  return sub_1A92FA6F4(a1, a2, EpisodeDownloadReport.DownloadState.rawValue.getter);
}

uint64_t sub_1A92F9184(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C656E6E616863;
  else
    v3 = 0x69726F6765746163;
  if (v2)
    v4 = 0xEA00000000007365;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C656E6E616863;
  else
    v5 = 0x69726F6765746163;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xEA00000000007365;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1A92F922C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F9290(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A92F930C + 4 * byte_1A941C6DD[a2]))();
}

uint64_t sub_1A92F930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0xEB00000000747361)
    v4 = 1;
  else
    v4 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1A92F93C8(uint64_t a1, uint64_t a2)
{
  return sub_1A92FA6F4(a1, a2, URLTrackIdentifier.ArgumentKey.rawValue.getter);
}

uint64_t sub_1A92F93D4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED00006574617453;
  v3 = 0x64616F6C6E776F64;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7461745379616C70;
    else
      v5 = 0x6B72616D6B6F6F62;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xED00006574617453;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  else
  {
    v5 = 0x64616F6C6E776F64;
    v6 = 0xED00006574617453;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  if (v7 == 1)
    v3 = 0x7461745379616C70;
  else
    v3 = 0x6B72616D6B6F6F62;
  if (v7 == 1)
    v2 = 0xE900000000000065;
LABEL_14:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A92F94FC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F9544(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F9594 + 4 * byte_1A941C6E6[a2]))(1937204590);
}

uint64_t sub_1A92F9594(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1937204590 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A92F9628(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x687475616FLL;
    else
      v3 = 0x6269726373627573;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE900000000000065;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x687475616FLL;
      else
        v6 = 0x6269726373627573;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE900000000000065;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x7070612D6E69;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x7070612D6E69)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F973C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x687475616FLL;
    else
      v3 = 0x7374736163646F70;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x687475616FLL;
      else
        v6 = 0x7374736163646F70;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1936748641;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1936748641)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F983C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1684627824;
    else
      v3 = 0x646972627968;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1684627824;
      else
        v6 = 0x646972627968;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701147238;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701147238)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92F992C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C707061;
  else
    v3 = 0x72656469766F7270;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C707061;
  else
    v5 = 0x72656469766F7270;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A92F99CC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 12918;
  else
    v2 = 12662;
  if ((a2 & 1) != 0)
    v3 = 12918;
  else
    v3 = 12662;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1A93F90C0();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A92F9A30(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x72656C69617254;
  else
    v3 = 0x6E6F73616553;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x72656C69617254;
  else
    v5 = 0x6E6F73616553;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A92F9AD0(uint64_t a1, uint64_t a2)
{
  return sub_1A92FA6F4(a1, a2, CropCode.rawValue.getter);
}

void sub_1A92F9ADC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F9B24(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F9C08 + 4 * byte_1A941C6F2[a2]))(0x6953746567726174);
}

uint64_t sub_1A92F9C08(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6953746567726174 && v1 == 0xEA0000000000657ALL)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A92F9D4C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A92F9DA8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F9E40 + 4 * byte_1A941C6FF[a2]))(0x6D656C7469746E65);
}

uint64_t sub_1A92F9E40(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D656C7469746E65 && v1 == 0xEC00000073746E65)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A92F9F20(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92F9F68(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92F9FC8 + 4 * byte_1A941C708[a2]))(0xD000000000000016);
}

uint64_t sub_1A92F9FC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000016 && v1 == 0x80000001A9441DB0)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A92FA06C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92FA0D8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92FA198 + 4 * byte_1A941C713[a2]))(0x656B6F546C6D7474);
}

uint64_t sub_1A92FA198(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656B6F546C6D7474 && v1 == 0xE90000000000006ELL)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A92FA2AC(uint64_t a1, uint64_t a2)
{
  return sub_1A92FA6F4(a1, a2, MediaRequest.IncludeExtendTypes.rawValue.getter);
}

void sub_1A92FA2B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92FA308(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92FA384 + 4 * byte_1A941C71E[a2]))(0xD000000000000010);
}

uint64_t sub_1A92FA384(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x80000001A9441B40)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1A92FA444(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A92FA490(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92FA520 + 4 * byte_1A941C728[a2]))(0x7374736163646F70);
}

uint64_t sub_1A92FA520(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7374736163646F70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A92FA5F8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1953722224;
    else
      v3 = 0x6574656C6564;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1953722224;
      else
        v6 = 0x6574656C6564;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE300000000000000;
    v3 = 7628135;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE300000000000000;
  if (v3 != 7628135)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92FA6E8(uint64_t a1, uint64_t a2)
{
  return sub_1A92FA6F4(a1, a2, PodcastsSystem.rawValue.getter);
}

uint64_t sub_1A92FA6F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_1A92FA78C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A92FA7D8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92FA83C + 4 * byte_1A941C733[a2]))(a3 + 19);
}

uint64_t sub_1A92FA83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 19 && v3 == 0x80000001A9441700)
    v4 = 1;
  else
    v4 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1A92FA8D4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x62694C6C61636F6CLL;
    else
      v3 = 0x7265666E69;
    if (v2 == 1)
      v4 = 0xEC00000079726172;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x62694C6C61636F6CLL;
      else
        v6 = 0x7265666E69;
      if (v5 == 1)
        v7 = 0xEC00000079726172;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x495041616964656DLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x495041616964656DLL)
  {
LABEL_21:
    v8 = sub_1A93F90C0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A92FA9F4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64616F6C6E776F64;
  else
    v3 = 0x6D6165727473;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64616F6C6E776F64;
  else
    v5 = 0x6D6165727473;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1A92FAA94(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A92FAADC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92FABA4 + 4 * byte_1A941C740[a2]))(0x637341656C746974);
}

uint64_t sub_1A92FABA4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x637341656C746974 && v1 == 0xEE00676E69646E65)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

id BaseFeedRequest.init(storeID:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for BaseFeedRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A92FAD2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(uint64_t, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t);
  _QWORD *v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)();
  void (*v64)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  NSObject *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82[24];
  uint64_t v83[3];
  char v84;
  char v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char v89;

  v3 = v2;
  v79 = a2;
  v78 = a1;
  v74 = sub_1A93F7698();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MediaRequest.Params();
  v75 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v75 + 64);
  MEMORY[0x1E0C80A78](v8);
  v80 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)&v72 - v11;
  v88 = 0;
  v86 = 0u;
  v87 = 0u;
  v89 = 4;
  v82[0] = 1;
  v85 = 1;
  v84 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  v76 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E54D6920;
  v77 = sub_1A91129C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v76;
  *(_QWORD *)&v76 = *(_QWORD *)((char *)v2 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  v83[0] = v76;
  *(_QWORD *)(v13 + 32) = sub_1A93F9060();
  *(_QWORD *)(v13 + 40) = v14;
  LOBYTE(v83[0]) = 1;
  v15 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  v16 = MEMORY[0x1E0DEE9D8];
  v17 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v18 = sub_1A9112728(v16);
  sub_1A911273C(v16);
  v20 = v19;
  v21 = sub_1A9112844(v16);
  v22 = sub_1A9112858(v16);
  v71 = v16;
  *((_QWORD *)&v70 + 1) = sub_1A911286C(v16);
  *(_QWORD *)&v70 = v22;
  v23 = v81;
  v69 = v13;
  v24 = v78;
  *((_QWORD *)&v67 + 1) = v16;
  v68 = v16;
  *((_QWORD *)&v66 + 1) = v21;
  *(_QWORD *)&v67 = v77;
  *(_QWORD *)&v66 = v16;
  v25 = v16;
  v26 = v79;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v86, v82, &v85, &v84, v17, v18, v20, v25, v81, v66, v67, v68, v69, (char *)v83, 0, 1, v70, 0, 1,
    0,
    (uint64_t)v7,
    0,
    0,
    0,
    0,
    0,
    v71,
    0,
    0,
    2);
  v27 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v27 + 2) = v3;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  if (*(_QWORD *)((char *)v3 + OBJC_IVAR___MTBaseFeedRequest_showMetadata))
  {
    v28 = (uint64_t)v3 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
    swift_beginAccess();
    sub_1A905DC3C(v28, (uint64_t)&v86);
    v29 = *((_QWORD *)&v87 + 1);
    v30 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    v31 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xA0);
    swift_retain();
    v32 = v26;
    v33 = v3;
    v34 = (uint64_t)v80;
    v31();
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v33;
    v35[3] = v24;
    v35[4] = v32;
    v36 = *(void (**)(uint64_t, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t))(v30 + 48);
    swift_retain();
    v37 = v33;
    v36(v34, sub_1A92FCE48, v35, v29, v30);
    swift_release();
    sub_1A9114C30(v34);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
    swift_release();
    return sub_1A9114C30(v23);
  }
  else
  {
    v39 = v72;
    v40 = v73;
    v41 = v74;
    v42 = v9;
    v43 = qword_1EEAB6E40;
    swift_retain();
    v44 = v3;
    if (v43 != -1)
      swift_once();
    v45 = v41;
    v46 = __swift_project_value_buffer(v41, (uint64_t)qword_1EEABA838);
    swift_beginAccess();
    v47 = v46;
    v48 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v47, v41);
    v49 = v44;
    v50 = sub_1A93F7674();
    v51 = sub_1A93F87B4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v52 = 134217984;
      *(_QWORD *)&v86 = v76;
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v50, v51, "Fetching show metadata for show with storeID %lld...", v52, 0xCu);
      v53 = v52;
      v48 = v39;
      MEMORY[0x1AF41411C](v53, -1, -1);
    }
    else
    {

      v50 = v49;
    }
    v54 = (uint64_t)v80;

    (*(void (**)(char *, uint64_t))(v40 + 8))(v48, v45);
    v55 = (uint64_t)v49 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
    swift_beginAccess();
    sub_1A905DC3C(v55, (uint64_t)&v86);
    v56 = *((_QWORD *)&v87 + 1);
    v57 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    v58 = v81;
    sub_1A9064630(v81, v54, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    v59 = (*(unsigned __int8 *)(v75 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    v60 = swift_allocObject();
    v61 = v54;
    v62 = v60;
    *(_QWORD *)(v60 + 16) = v49;
    sub_1A9116174(v61, v60 + v59, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
    v63 = (uint64_t (**)())(v62 + ((v42 + v59 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v63 = sub_1A92FC96C;
    v63[1] = v27;
    v64 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v57 + 56);
    v65 = v49;
    swift_retain();
    v64(v58, sub_1A92FD3A8, v62, v56, v57);
    swift_release();
    swift_release();
    sub_1A9114C30(v58);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
  }
}

id BaseFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  id v4;

  v4 = sub_1A9311E48(a1, a2, a3);

  return v4;
}

uint64_t sub_1A92FB40C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92FB454(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A92FB4A4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_1A92FB4E8()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1A92FB534(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1A92FB584())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92FB5C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92FB648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1A92FB6D8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A92FB71C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void **v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void **v29;
  char *v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  char v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[5];
  __int128 v81;
  __int128 v82;
  uint64_t v83;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  result = swift_beginAccess();
  if (*v1 >> 62)
    goto LABEL_80;
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return result;
LABEL_3:
  v83 = MEMORY[0x1E0DEE9D8];
  v3 = (uint64_t *)(v75 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  v4 = *v3;
  v73 = *(_QWORD *)(*v3 + 16);
  if (!v73)
    goto LABEL_74;
  type metadata accessor for MediaRequestResponseParser();
  v70 = OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request;
  v72 = v4 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v71 = v4;
  do
  {
    if (v5 >= *(_QWORD *)(v4 + 16))
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69 = sub_1A93F8E5C();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      if (v69)
        return result;
      goto LABEL_3;
    }
    v6 = *(_QWORD *)(v72 + 8 * v5);
    *(_QWORD *)&v81 = 1954047342;
    *((_QWORD *)&v81 + 1) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_1A93F8C1C();
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A90A597C((uint64_t)v80), (v8 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v81);
    }
    else
    {
      v81 = 0u;
      v82 = 0u;
    }
    sub_1A90A5908((uint64_t)v80);
    if (*((_QWORD *)&v82 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
        swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A90A593C((uint64_t)&v81);
    }
    v74 = v5;
    sub_1A9211DC4(v6, (uint64_t)v80);
    if ((v80[0] & 0x100) != 0)
    {
      swift_bridgeObjectRelease();
      v9 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      LOBYTE(v81) = v80[0];
      sub_1A9211F00(v6, (uint64_t)&v81);
      v9 = v10;
      v12 = v11;
      swift_bridgeObjectRelease();

    }
    v13 = swift_bridgeObjectRetain();
    sub_1A9135C70(v13);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (!v14)
        goto LABEL_5;
LABEL_20:
      if (v14 >= 1)
      {
        v15 = 0;
        v78 = OBJC_IVAR___MTBaseFeedRequest_showMetadata;
        v79 = *(_QWORD *)(v75 + v70);
        v76 = v9;
        v77 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v77)
            MEMORY[0x1AF4129DC](v15, v9);
          else
            swift_unknownObjectRetain();
          v18 = v14;
          type metadata accessor for ServerPodcastEpisode();
          v19 = swift_dynamicCastClassUnconditional();
          v20 = (char *)v19;
          v21 = *(void **)(v79 + v78);
          if (v21)
          {
            v22 = (void **)(v19 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
            swift_beginAccess();
            v23 = (char *)*v22;
            if (*v22)
            {
              swift_unknownObjectRetain();
              v24 = v21;
            }
            else
            {
              v25 = objc_allocWithZone((Class)type metadata accessor for PodcastEpisodeRelationships());
              swift_unknownObjectRetain();
              v26 = v21;
              v27 = objc_msgSend(v25, sel_init);
              v28 = *v22;
              *v22 = v27;

              v23 = (char *)*v22;
              if (!*v22)
                goto LABEL_39;
            }
            v29 = (void **)&v23[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
            swift_beginAccess();
            if (*v29)
            {
              v30 = (char *)*v22;
              if (!*v22)
                goto LABEL_39;
            }
            else
            {
              v31 = objc_allocWithZone((Class)type metadata accessor for PodcastRelationshipContainer());
              v32 = v23;
              v33 = objc_msgSend(v31, sel_init);
              v34 = *v29;
              *v29 = v33;

              v30 = (char *)*v22;
              if (!*v22)
                goto LABEL_39;
            }
            v35 = &v30[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
            swift_beginAccess();
            v36 = *(_QWORD *)v35;
            if (!*(_QWORD *)v35)
            {
LABEL_39:

              goto LABEL_40;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
            v37 = swift_allocObject();
            *(_OWORD *)(v37 + 16) = xmmword_1A9405960;
            *(_QWORD *)(v37 + 32) = v21;
            v80[0] = v37;
            sub_1A93F8328();
            v38 = v80[0];
            v39 = (uint64_t *)(v36 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
            swift_beginAccess();
            *v39 = v38;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_unknownObjectRetain();
          }
LABEL_40:
          v40 = OBJC_IVAR___MTServerPodcastEpisode_attributes;
          if (*(_QWORD *)(*(_QWORD *)&v20[OBJC_IVAR___MTServerPodcastEpisode_attributes] + 168)
            && ((swift_bridgeObjectRetain(), v41 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v41 == 1) || v41 == 2))
          {
            v42 = sub_1A93F90C0();
            swift_bridgeObjectRelease();
            if ((v42 & 1) == 0)
              goto LABEL_47;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          if (!v1[3])
          {
            v1[3] = v20;
            swift_unknownObjectRetain();
          }
LABEL_47:
          v43 = *(_QWORD *)&v20[v40];
          if ((*(_BYTE *)(v43 + 360) & 1) != 0)
          {
            if (*(_QWORD *)(v43 + 168)
              && (swift_bridgeObjectRetain(), v44 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v44 == 1))
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v61 = sub_1A93F90C0();
              swift_bridgeObjectRelease();
              if ((v61 & 1) == 0)
              {
                v62 = v20;
                v63 = 0;
LABEL_70:
                sub_1A92FC05C(v62, v63);
                goto LABEL_24;
              }
            }
            v62 = v20;
            v63 = -1;
            goto LABEL_70;
          }
          v45 = *(_QWORD *)(v43 + 352);
          v46 = v1[1];
          if (*(_QWORD *)(v46 + 16) && (v47 = sub_1A906C428(v45), (v48 & 1) != 0))
          {
            *(_QWORD *)&v81 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_QWORD *)&v81 = MEMORY[0x1E0DEE9D8];
          }
          v49 = v20;
          MEMORY[0x1AF412004]();
          if (*(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A93F834C();
          sub_1A93F8394();
          sub_1A93F8328();
          v50 = v81;
          swift_beginAccess();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v52 = (_QWORD *)v1[1];
          v1[1] = 0x8000000000000000;
          v54 = sub_1A906C428(v45);
          v55 = v52[2];
          v56 = (v53 & 1) == 0;
          v57 = v55 + v56;
          if (__OFADD__(v55, v56))
          {
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          v58 = v53;
          if (v52[3] >= v57)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1A9309124(&qword_1EEAB78C0);
          }
          else
          {
            sub_1A930181C(v57, isUniquelyReferenced_nonNull_native, &qword_1EEAB78C0);
            v59 = sub_1A906C428(v45);
            if ((v58 & 1) != (v60 & 1))
            {
              sub_1A93F9258();
              __break(1u);
              result = swift_release();
              __break(1u);
              return result;
            }
            v54 = v59;
          }
          if ((v58 & 1) != 0)
          {
            v16 = v52[7];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v16 + 8 * v54) = v50;
          }
          else
          {
            v52[(v54 >> 6) + 8] |= 1 << v54;
            *(_QWORD *)(v52[6] + 8 * v54) = v45;
            *(_QWORD *)(v52[7] + 8 * v54) = v50;
            v64 = v52[2];
            v65 = __OFADD__(v64, 1);
            v66 = v64 + 1;
            if (v65)
              goto LABEL_77;
            v52[2] = v66;
          }
          v1[1] = v52;
          swift_bridgeObjectRelease();
          swift_endAccess();
LABEL_24:
          swift_unknownObjectRelease_n();
          ++v15;
          v14 = v18;
          v17 = v18 == v15;
          v9 = v76;
          if (v17)
            goto LABEL_5;
        }
      }
      goto LABEL_79;
    }
    v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_20;
LABEL_5:
    v5 = v74 + 1;
    swift_bridgeObjectRelease();
    v4 = v71;
  }
  while (v74 + 1 != v73);
  swift_bridgeObjectRelease();
LABEL_74:
  v67 = v1[1];
  swift_bridgeObjectRetain_n();
  v68 = sub_1A906C204(v67, &qword_1ED2A44A0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A90C18FC);
  swift_bridgeObjectRelease();
  v80[0] = (uint64_t)v68;
  sub_1A92FC1B8(v80);
  swift_bridgeObjectRelease();
  v1[2] = v80[0];
  swift_bridgeObjectRelease();
  *v1 = v83;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92FC05C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 8);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A906C428(a2), (v8 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v9 = a1;
  MEMORY[0x1AF412004]();
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A93F834C();
  sub_1A93F8394();
  sub_1A93F8328();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)(v5 + 8) = 0x8000000000000000;
  sub_1A930E3E0(v13, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_1A906C428, &qword_1EEAB78C0);
  *(_QWORD *)(v5 + 8) = v12;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1A92FC1B8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A9234358(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A93105D8(v5);
  *a1 = v2;
  return result;
}

uint64_t BaseFeedRequest.storeID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___MTBaseFeedRequest_storeID);
}

id BaseFeedRequest.__allocating_init(storeID:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1A92FC2DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 v23[2];
  uint64_t v24;
  char v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  v25 = 4;
  v22 = 1;
  v21 = 1;
  v20 = 4;
  v19 = 1;
  v5 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v8 = sub_1A9112728(v6);
  sub_1A911273C(v6);
  v10 = v9;
  v11 = sub_1A9112844(v6);
  v12 = sub_1A9112844(v6);
  v13 = sub_1A9112858(v6);
  *((_QWORD *)&v17 + 1) = sub_1A911286C(v6);
  *(_QWORD *)&v17 = v13;
  *(_QWORD *)&v16 = v12;
  *((_QWORD *)&v16 + 1) = v6;
  *(_QWORD *)&v15 = v6;
  *((_QWORD *)&v15 + 1) = v11;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v23, &v22, &v21, &v20, v7, v8, v10, v6, a1, v15, v16, v6, v6, &v19, 0, 1, v17, 0, 1,
           0,
           (uint64_t)v4,
           0,
           0,
           0,
           0,
           0,
           v6,
           0,
           0,
           2);
}

id sub_1A92FC474()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  void *v26;
  char *v27;
  char *v28;
  id v29;
  unint64_t v30;
  char *v31;
  objc_class *v32;
  id v33;
  id v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  char v43;
  char v44;
  char v45;
  char v46;
  __int128 v47[2];
  uint64_t v48;
  char v49;
  objc_super v50;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v3);
  v41 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v39 = (uint64_t)&v39 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9720);
  v7 = swift_allocObject();
  v40 = v7;
  *(_OWORD *)(v7 + 16) = xmmword_1A9405520;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + 32) = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
  v9 = objc_allocWithZone((Class)type metadata accessor for FullFeedRequest());
  v9[OBJC_IVAR___MTFullFeedRequest_isSerial] = 0;
  v9[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___MTBaseFeedRequest_storeID] = 0;
  v10 = (objc_class *)type metadata accessor for BaseFeedRequest();
  v50.receiver = v9;
  v50.super_class = v10;
  v11 = (char *)objc_msgSendSuper2(&v50, sel_init);
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  v49 = 4;
  v46 = 1;
  v45 = 1;
  v44 = 4;
  v43 = 1;
  v12 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
  v13 = sub_1A9112728((uint64_t)v8);
  v14 = sub_1A9112728((uint64_t)v8);
  sub_1A911273C((uint64_t)v8);
  v16 = v15;
  v17 = sub_1A9112844((uint64_t)v8);
  v18 = sub_1A9112844((uint64_t)v8);
  v19 = sub_1A9112858((uint64_t)v8);
  *((_QWORD *)&v38 + 1) = sub_1A911286C((uint64_t)v8);
  *(_QWORD *)&v38 = v19;
  *(_QWORD *)&v37 = v18;
  *((_QWORD *)&v37 + 1) = v8;
  *(_QWORD *)&v36 = v8;
  *((_QWORD *)&v36 + 1) = v17;
  v20 = v39;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v47, &v46, &v45, &v44, v13, v14, v16, (uint64_t)v8, v39, v36, v37, (uint64_t)v8, (uint64_t)v8, &v43, 0, 1, v38, 0, 1,
    0,
    (uint64_t)v2,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v8,
    0,
    0,
    2);
  v21 = (char *)objc_allocWithZone((Class)type metadata accessor for FullFeedResponse());
  *(_QWORD *)&v21[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = v11;
  v22 = v20;
  v23 = v41;
  sub_1A9064630(v20, v41, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v24 = (void **)&v21[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v21[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = v40;
  *(_QWORD *)&v21[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = v11;
  sub_1A9064630(v23, (uint64_t)&v21[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v25 = *(void **)&v11[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v26 = *v24;
  *v24 = v25;
  v27 = v11;
  v28 = v21;
  v29 = v25;

  v30 = sub_1A91154C8(v8);
  v31 = &v28[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v31 = v8;
  *((_QWORD *)v31 + 1) = v30;
  *((_QWORD *)v31 + 2) = v8;
  *((_QWORD *)v31 + 3) = 0;

  v32 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v42.receiver = v28;
  v42.super_class = v32;
  v33 = objc_msgSendSuper2(&v42, sel_init);
  sub_1A9114C30(v23);
  v34 = v33;
  sub_1A92FB71C();

  sub_1A9114C30(v22);
  return v34;
}

uint64_t sub_1A92FC824(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(_BYTE *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD *v14;
  _BYTE v16[24];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t)a1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  sub_1A905DC3C(v9, (uint64_t)v17);
  v10 = v18;
  v11 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xA0))();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v13 = *(void (**)(_BYTE *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 48);
  v14 = a1;
  swift_retain();
  v13(v8, sub_1A93124F4, v12, v10, v11);
  swift_release();
  sub_1A9114C30((uint64_t)v8);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
}

uint64_t sub_1A92FC96C()
{
  uint64_t v0;

  return sub_1A92FC824(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1A92FC978(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t, void *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v40[2];
  void (*v41)(uint64_t, void *);
  uint64_t v42;
  uint64_t v43;

  v41 = a4;
  v9 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7698();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v40 - v17;
  if (a2)
  {
    v19 = a2;
    if (qword_1EEAB6E40 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA838);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v20, v12);
    v21 = a2;
    v22 = a3;
    v23 = a2;
    v24 = sub_1A93F7674();
    v25 = sub_1A93F879C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v40[0] = v13;
      v27 = v26;
      v28 = swift_slowAlloc();
      v43 = v28;
      *(_DWORD *)v27 = 134218242;
      v42 = *(_QWORD *)&v22[OBJC_IVAR___MTBaseFeedRequest_storeID];
      v40[1] = a5;
      sub_1A93F8AA8();

      *(_WORD *)(v27 + 12) = 2080;
      swift_getErrorValue();
      v29 = sub_1A93F927C();
      v42 = sub_1A906436C(v29, v30, &v43);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v24, v25, "Feed fetch for show with storeID - %lld - resulted in error: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v28, -1, -1);
      MEMORY[0x1AF41411C](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v40[0] + 8))(v15, v12);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    v36 = a2;
    v41(0, a2);

  }
  else
  {
    if (qword_1EEAB6E40 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA838);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v31, v12);
    v32 = a3;
    v33 = sub_1A93F7674();
    v34 = sub_1A93F87B4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 134217984;
      v43 = *(uint64_t *)((char *)&v32->isa + OBJC_IVAR___MTBaseFeedRequest_storeID);
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v33, v34, "Feed fetch completed successfully for show with storeID %lld", v35, 0xCu);
      MEMORY[0x1AF41411C](v35, -1, -1);
    }
    else
    {

      v33 = v32;
    }

    v37 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    if (a1)
    {
      v38 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v32->isa) + 0xA0))(v37);
      (*(void (**)(uint64_t, NSObject *, char *))((*v38 & (uint64_t)v32->isa) + 0xA8))(a1, v32, v11);
      sub_1A9114C30((uint64_t)v11);
      v39 = swift_unknownObjectRetain();
      v41(v39, 0);
      swift_unknownObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1A92FCE48(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A92FC978(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t, void *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1A92FCE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, void (*a8)(__n128))
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(__n128);
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v12 = sub_1A93F7698();
  v13 = *(_QWORD *)(v12 - 8);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    v17 = a5;
    if (qword_1EEAB6E40 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v12, (uint64_t)qword_1EEABA838);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v18, v12);
    v19 = a5;
    v20 = a5;
    v21 = a6;
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v37 = v25;
      *(_DWORD *)v24 = 134218242;
      v39 = *(_QWORD *)&v21[OBJC_IVAR___MTBaseFeedRequest_storeID];
      v40 = v25;
      v38 = a8;
      sub_1A93F8AA8();

      *(_WORD *)(v24 + 12) = 2080;
      swift_getErrorValue();
      v26 = sub_1A93F927C();
      v39 = sub_1A906436C(v26, v27, &v40);
      a8 = v38;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v22, v23, "Show metadata fetch with storeID - %lld - resulted in error: %s", (uint8_t *)v24, 0x16u);
      v28 = v37;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v28, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_25;
  }
  if (!a3)
  {
LABEL_25:
    a8(v14);
    return;
  }
  type metadata accessor for MediaRequestResponseParser();
  _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a3);
  if (v29)
    swift_bridgeObjectRelease();
  sub_1A9211DC4(a3, (uint64_t)v41);
  if ((v41[1] & 1) != 0)
  {
    v30 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    LOBYTE(v40) = v41[0];
    sub_1A9211F00(a3, (uint64_t)&v40);
    v30 = v31;

  }
  if (!(v30 >> 62))
  {
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_16;
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v34 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v34)
    goto LABEL_22;
LABEL_16:
  if ((v30 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AF4129DC](0, v30);
    goto LABEL_19;
  }
  if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    type metadata accessor for ServerPodcastBase();
    v33 = swift_dynamicCastClass();
    if (v33)
    {
LABEL_24:
      v35 = *(void **)&a6[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
      *(_QWORD *)&a6[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = v33;

      goto LABEL_25;
    }
    swift_unknownObjectRelease();
LABEL_23:
    v33 = 0;
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1A92FD228()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  sub_1A9114BD0(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8), *(_QWORD *)(v0 + v2 + 16), *(_QWORD *)(v0 + v2 + 24), *(_QWORD *)(v0 + v2 + 32), *(_BYTE *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 96);
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A92FD3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;

  v11 = *(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  sub_1A92FCE54(a1, a2, a3, a4, a5, *(char **)(v5 + 16), v5 + v12, *(void (**)(__n128))(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

id BaseFeedRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BaseFeedRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1A92FD524()
{
  uint64_t v0;

}

id BaseFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for BaseFeedRequest);
}

uint64_t sub_1A92FD550(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1A92FD5B8(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id BaseFeedResponse.request.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request);
}

uint64_t BaseFeedResponse.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9064630(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params, a1, (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
}

uint64_t sub_1A92FD654@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92FD6D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  *v6 = v2;
  v6[1] = v3;
  v6[2] = v4;
  v6[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

id BaseFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  void **v8;
  void *v9;
  void *v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  id v17;
  objc_super v19;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = (void **)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9064630(a3, (uint64_t)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v9 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v10 = *v8;
  *v8 = v9;
  v11 = v7;
  v12 = a2;
  v13 = v9;

  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v16 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v16 = v14;
  *((_QWORD *)v16 + 1) = v15;
  *((_QWORD *)v16 + 2) = v14;
  *((_QWORD *)v16 + 3) = 0;

  v19.receiver = v11;
  v19.super_class = v3;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_1A9114C30(a3);

  return v17;
}

id sub_1A92FD8E0()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
}

uint64_t sub_1A92FD954()
{
  return 0;
}

void BaseFeedResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BaseFeedResponse.__deallocating_deinit()
{
  return sub_1A913E33C(0, type metadata accessor for BaseFeedResponse);
}

void *sub_1A92FDAB4(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1A93F8E98();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

__n128 sub_1A92FDB48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;

  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  sub_1A93F9300();
  sub_1A93F9324();
  v6 = sub_1A93F8B74();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  v7 = a3[6] + 72 * v6;
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(a1 + 64);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(__n128 *)(v7 + 16) = result;
  *(_QWORD *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

void sub_1A92FDC34(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

unint64_t sub_1A92FDC98()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A93F9324();
  result = sub_1A93F8B74();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

uint64_t sub_1A92FDD94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _BYTE v38[40];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDBF0);
  v37 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v5 + 56) + 40 * v17;
    if ((v37 & 1) != 0)
    {
      sub_1A91AC008(v25, (uint64_t)v38);
    }
    else
    {
      sub_1A9131514(v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1A91AC008((uint64_t)v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FE0BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E18);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(void **)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        v30 = v29;
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FE38C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7790);
  v6 = a2;
  v7 = sub_1A93F8E80();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1A90D8068(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1A93F92DC();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1A92FE698(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E10);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v32 = v2;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_35;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_35:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_44;
            if (v13 >= v33)
              goto LABEL_35;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v23 = v21;
    }
    sub_1A93F92DC();
    sub_1A93F92F4();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
    }
    result = sub_1A93F9324();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v35;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v18 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FE9C4(uint64_t a1, char a2)
{
  return sub_1A9301564(a1, a2, &qword_1EEAB7E08);
}

uint64_t sub_1A92FE9D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BE8);
  v37 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FECD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7798);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v8 << 6);
      }
      else
      {
        v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v16 >= v29)
          goto LABEL_35;
        v17 = v30[v16];
        ++v8;
        if (!v17)
        {
          v8 = v16 + 1;
          if (v16 + 1 >= v29)
            goto LABEL_35;
          v17 = v30[v8];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v29)
            {
LABEL_35:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v17 = v30[v18];
            if (!v17)
            {
              while (1)
              {
                v8 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_44;
                if (v8 >= v29)
                  goto LABEL_35;
                v17 = v30[v8];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v8 = v18;
          }
        }
LABEL_21:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      v19 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1A93F92DC();
      sub_1A93F92E8();
      if (v19 != 2)
        sub_1A93F92F4();
      result = sub_1A93F9324();
      v21 = -1 << *(_BYTE *)(v7 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v13) = v19;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13) = v20;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FEFD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1A908A5DC((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1A90A5A70(v25, (uint64_t)&v38);
      sub_1A906443C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1A93F8C04();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1A908A5DC(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FF2EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDC30);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FF5B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB0);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
    {
      sub_1A908A5DC(v23, v34);
    }
    else
    {
      sub_1A906443C((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    sub_1A93F92DC();
    type metadata accessor for CFString(0);
    sub_1A9066CA8((unint64_t *)&unk_1ED2ABC98, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A94048C8);
    sub_1A93F7518();
    result = sub_1A93F9324();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_1A908A5DC(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FF8D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF50);
  v42 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FFBF4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FD8);
  v38 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 16 * v21;
    v32 = *(_QWORD *)v31;
    v33 = *(_BYTE *)(v31 + 8);
    if ((v38 & 1) == 0)
      v34 = v30;
    result = sub_1A93F8A30();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 16 * v18;
    *(_QWORD *)v19 = v32;
    *(_BYTE *)(v19 + 8) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A92FFED8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FD0);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v30 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((a2 & 1) == 0)
      v31 = v29;
    result = sub_1A93F8A30();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v18) = v30;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A930019C(uint64_t a1, char a2)
{
  return sub_1A9306040(a1, a2, &qword_1EEAB78D0);
}

uint64_t sub_1A93001A8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1A93F738C();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9668);
  v9 = sub_1A93F8E80();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v41 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = a2;
  v16 = v9 + 64;
  result = swift_retain();
  v18 = 0;
  v40 = v15;
  v19 = 16;
  if ((v15 & 1) != 0)
    v19 = 32;
  v44 = v19;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_33;
      v25 = v43[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v42)
              goto LABEL_33;
            v25 = v43[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 56);
    v28 = v8;
    v29 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v22);
    v30 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v44))(v7, v27 + v30 * v22, v45);
    sub_1A93F92DC();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
    result = sub_1A93F9324();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v20 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v20) = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v20, v7, v45);
    ++*(_QWORD *)(v10 + 16);
    v8 = v28;
  }
  swift_release();
  v3 = v41;
  v24 = v43;
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1A9300530(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9E90);
  v38 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1A930083C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[4];
  uint64_t v26;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78B0);
  v6 = (_QWORD *)sub_1A93F8E80();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v11)
          goto LABEL_23;
        v17 = v8[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_23;
          v17 = v8[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v24 = 1 << *(_BYTE *)(v5 + 32);
                if (v24 >= 64)
                  bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v24;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_30;
                if (v12 >= v11)
                  goto LABEL_23;
                v17 = v8[v12];
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
            }
            v12 = v18;
          }
        }
LABEL_20:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(v5 + 48) + 72 * v15;
      if ((a2 & 1) != 0)
      {
        v20 = *(_OWORD *)(v19 + 16);
        v21 = *(_OWORD *)(v19 + 32);
        v22 = *(_OWORD *)(v19 + 48);
        v26 = *(_QWORD *)(v19 + 64);
        v25[3] = v22;
        v23 = *(_OWORD *)v19;
        v25[1] = v20;
        v25[2] = v21;
        v25[0] = v23;
        v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
      }
      else
      {
        sub_1A91314A4(v19, (uint64_t)v25);
        v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
        swift_retain();
      }
      sub_1A92FDB48((uint64_t)v25, v13, v6);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1A9300A5C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v7 = v4;
  v9 = a3(0);
  v42 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v43 = a2;
  result = sub_1A93F8E80();
  v14 = result;
  if (*(_QWORD *)(v12 + 16))
  {
    v39 = v7;
    v15 = 0;
    v16 = *(_QWORD *)(v12 + 64);
    v41 = (_QWORD *)(v12 + 64);
    v17 = 1 << *(_BYTE *)(v12 + 32);
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v19 = v18 & v16;
    v40 = (unint64_t)(v17 + 63) >> 6;
    v20 = result + 64;
    while (1)
    {
      if (v19)
      {
        v22 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        v23 = v22 | (v15 << 6);
      }
      else
      {
        v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v41;
        if (v24 >= v40)
          goto LABEL_34;
        v25 = v41[v24];
        ++v15;
        if (!v25)
        {
          v15 = v24 + 1;
          if (v24 + 1 >= v40)
            goto LABEL_34;
          v25 = v41[v15];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_34:
              if ((v43 & 1) == 0)
              {
                result = swift_release();
                v7 = v39;
                goto LABEL_41;
              }
              v37 = 1 << *(_BYTE *)(v12 + 32);
              if (v37 >= 64)
                bzero(v41, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v37;
              v7 = v39;
              *(_QWORD *)(v12 + 16) = 0;
              break;
            }
            v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                v15 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v15 >= v40)
                  goto LABEL_34;
                v25 = v41[v15];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v15 = v26;
          }
        }
LABEL_21:
        v19 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v23);
      v28 = *(_QWORD *)(v42 + 72);
      v29 = *(_QWORD *)(v12 + 56) + v28 * v23;
      if ((v43 & 1) != 0)
        sub_1A9116174(v29, (uint64_t)v11, a3);
      else
        sub_1A9064630(v29, (uint64_t)v11, a3);
      result = sub_1A93F92D0();
      v30 = -1 << *(_BYTE *)(v14 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v20 + 8 * v32);
        }
        while (v36 == -1);
        v21 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v20 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v21) = v27;
      result = sub_1A9116174((uint64_t)v11, *(_QWORD *)(v14 + 56) + v28 * v21, a3);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v7 = v14;
  return result;
}

uint64_t sub_1A9300D84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB8);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1A93F92D0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A9301028(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7898);
  v6 = sub_1A93F8E80();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 <= 1)
  {
    swift_release();
    v12 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v12 = (_QWORD *)(v5 + 64);
  v13 = *(_QWORD *)(v5 + 72);
  v14 = 1;
  if (v13)
    goto LABEL_17;
  v14 = 2;
  if (v10 <= 2)
    goto LABEL_21;
  v13 = *(_QWORD *)(v5 + 80);
  if (v13)
  {
LABEL_17:
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_18:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
    if ((a2 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A93F92DC();
    __asm { BR              X8 }
  }
  v15 = 3;
  if (v10 > 3)
  {
    v13 = *(_QWORD *)(v5 + 88);
    if (v13)
    {
      v14 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v14 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
        JUMPOUT(0x1A9301514);
      }
      if (v14 >= v10)
        break;
      v13 = *(_QWORD *)(v5 + 64 + 8 * v14);
      ++v15;
      if (v13)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v17 = 1 << *(_BYTE *)(v5 + 32);
  if (v17 >= 64)
    bzero(v12, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v12 = -1 << v17;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A9301558(uint64_t a1, char a2)
{
  return sub_1A9301564(a1, a2, &qword_1EEAB7788);
}

uint64_t sub_1A9301564(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A93F8E80();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v33 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = 1 << *(_BYTE *)(v6 + 32);
    v35 = v4;
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64)
                bzero((void *)(v6 + 64), 8 * v36);
              else
                *v10 = v33;
              v4 = v35;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v36)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(void **)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        v32 = v31;
      result = sub_1A93F92D0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1A9301810(uint64_t a1, char a2)
{
  return sub_1A930181C(a1, a2, &qword_1EEAB7890);
}

uint64_t sub_1A930181C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A93F8E80();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1A93F92D0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A9301ACC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1A93F73E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7888);
  v42 = a2;
  v10 = sub_1A93F8E80();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1A93F7FA4();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1A9301E60(uint64_t a1, char a2)
{
  return sub_1A9306040(a1, a2, &qword_1EEAB7880);
}

uint64_t sub_1A9301E6C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  char v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7878);
  v19 = a2;
  v6 = sub_1A93F8E80();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((v19 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    if ((v19 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A93F92DC();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1A930236CLL);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((v19 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A93023B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7870);
  v40 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[3];
      v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A93F92DC();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A93026D8(uint64_t a1, char a2)
{
  return sub_1A9303E6C(a1, a2, &qword_1EEABDC00);
}

uint64_t sub_1A93026E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDBF8);
  v38 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v32 = *(_QWORD *)v31;
    v39 = *(_OWORD *)(v31 + 8);
    v33 = *(_QWORD *)(v31 + 24);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v30;
    }
    result = sub_1A93F8A30();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v18;
    *(_QWORD *)v19 = v32;
    *(_OWORD *)(v19 + 8) = v39;
    *(_QWORD *)(v19 + 24) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A93029EC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A93F8E80();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v33 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v32 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v21 >= v32)
          goto LABEL_33;
        v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v32)
            goto LABEL_33;
          v22 = v33[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v6 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v9 >= v32)
                  goto LABEL_33;
                v22 = v33[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1A9302CC0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7850);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1A93F92DC();
      sub_1A93F92E8();
      result = sub_1A93F9324();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A9302F98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1A908A5DC(v24, v35);
      }
      else
      {
        sub_1A906443C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1A93F92DC();
      sub_1A93F7FBC();
      result = sub_1A93F9324();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1A908A5DC(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A9303294(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v3 = v2;
  v38 = sub_1A93F726C();
  v5 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTMLRequest();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7848);
  v41 = a2;
  v13 = sub_1A93F8E80();
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_32;
  v35 = v5;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = *(_QWORD *)(v12 + 64);
  v33 = (_QWORD *)(v12 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v31 = v2;
  v32 = (unint64_t)(v14 + 63) >> 6;
  swift_retain();
  v36 = v12;
  if (v17)
  {
    v18 = __clz(__rbit64(v17));
    goto LABEL_18;
  }
  if (v32 <= 1)
  {
    swift_release();
    v3 = v31;
    v19 = v33;
    if ((v41 & 1) == 0)
      goto LABEL_32;
    goto LABEL_28;
  }
  v19 = v33;
  v20 = v33[1];
  v21 = 1;
  if (v20)
    goto LABEL_17;
  v21 = 2;
  if (v32 <= 2)
    goto LABEL_25;
  v20 = v33[2];
  if (v20)
  {
LABEL_17:
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_18:
    v23 = *(_QWORD *)(v12 + 48) + *(_QWORD *)(v39 + 72) * v18;
    if ((v41 & 1) != 0)
    {
      sub_1A9116174(v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      v42 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
    }
    else
    {
      sub_1A9064630(v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      v42 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
      swift_retain();
    }
    v24 = (uint64_t)v37;
    v25 = v38;
    sub_1A93F92DC();
    sub_1A9062170((uint64_t)v11, v24, &qword_1ED2AD3D0);
    v26 = v35;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v24, 1, v25) == 1)
    {
      sub_1A93F92F4();
    }
    else
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v34, v24, v25);
      sub_1A93F92F4();
      sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      sub_1A93F7FB0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
    }
    v28 = v40;
    sub_1A93F9300();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  v22 = 3;
  if (v32 > 3)
  {
    v20 = v33[3];
    if (v20)
    {
      v21 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v21 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        JUMPOUT(0x1A930385CLL);
      }
      if (v21 >= v32)
        break;
      v20 = v33[v21];
      ++v22;
      if (v20)
        goto LABEL_17;
    }
  }
LABEL_25:
  swift_release();
  v3 = v31;
  if ((v41 & 1) == 0)
    goto LABEL_32;
LABEL_28:
  v29 = 1 << *(_BYTE *)(v12 + 32);
  if (v29 >= 64)
    bzero(v19, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v29;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_32:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1A9303880(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  v3 = v2;
  v38 = sub_1A93F726C();
  v5 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamSignatureRequest();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7840);
  v41 = a2;
  v13 = sub_1A93F8E80();
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_32;
  v35 = v5;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = *(_QWORD *)(v12 + 64);
  v33 = (_QWORD *)(v12 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v31 = v2;
  v32 = (unint64_t)(v14 + 63) >> 6;
  swift_retain();
  v36 = v12;
  if (v17)
  {
    v18 = __clz(__rbit64(v17));
    goto LABEL_18;
  }
  if (v32 <= 1)
  {
    swift_release();
    v3 = v31;
    v19 = v33;
    if ((v41 & 1) == 0)
      goto LABEL_32;
    goto LABEL_28;
  }
  v19 = v33;
  v20 = v33[1];
  v21 = 1;
  if (v20)
    goto LABEL_17;
  v21 = 2;
  if (v32 <= 2)
    goto LABEL_25;
  v20 = v33[2];
  if (v20)
  {
LABEL_17:
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_18:
    v23 = *(_QWORD *)(v12 + 48) + *(_QWORD *)(v39 + 72) * v18;
    if ((v41 & 1) != 0)
    {
      sub_1A9116174(v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      v42 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
    }
    else
    {
      sub_1A9064630(v23, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      v42 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
      swift_retain();
    }
    v24 = (uint64_t)v37;
    v25 = v38;
    sub_1A93F92DC();
    sub_1A9062170((uint64_t)v11, v24, &qword_1ED2AD3D0);
    v26 = v35;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v24, 1, v25) == 1)
    {
      sub_1A93F92F4();
    }
    else
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v34, v24, v25);
      sub_1A93F92F4();
      sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      sub_1A93F7FB0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
    }
    v28 = v40;
    sub_1A93F9300();
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  v22 = 3;
  if (v32 > 3)
  {
    v20 = v33[3];
    if (v20)
    {
      v21 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v21 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        JUMPOUT(0x1A9303E48);
      }
      if (v21 >= v32)
        break;
      v20 = v33[v21];
      ++v22;
      if (v20)
        goto LABEL_17;
    }
  }
LABEL_25:
  swift_release();
  v3 = v31;
  if ((v41 & 1) == 0)
    goto LABEL_32;
LABEL_28:
  v29 = 1 << *(_BYTE *)(v12 + 32);
  if (v29 >= 64)
    bzero(v19, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v29;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_32:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1A9303E6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1A93F8E80();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1A93F8A30();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_1A930413C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  int64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60[72];
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int16 v77;
  char v78;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4348);
  v46 = a2;
  v47 = (_QWORD *)sub_1A93F8E80();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1 << *(_BYTE *)(v4 + 32);
    v44 = (_QWORD *)(v4 + 64);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v4 + 64);
    v43 = (unint64_t)(v5 + 63) >> 6;
    result = swift_retain();
    v9 = 0;
    v45 = v4;
    while (1)
    {
      if (v7)
      {
        v48 = (v7 - 1) & v7;
        v49 = v9;
        v15 = __clz(__rbit64(v7)) | (v9 << 6);
      }
      else
      {
        v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v43)
          goto LABEL_23;
        v17 = v44[v16];
        v18 = v9 + 1;
        if (!v17)
        {
          v18 = v9 + 2;
          if (v9 + 2 >= v43)
            goto LABEL_23;
          v17 = v44[v18];
          if (!v17)
          {
            v19 = v9 + 3;
            if (v9 + 3 >= v43)
            {
LABEL_23:
              swift_release();
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v4 + 32);
                if (v41 > 63)
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v44 = -1 << v41;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v17 = v44[v19];
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_30;
                if (v18 >= v43)
                  goto LABEL_23;
                v17 = v44[v18];
                ++v19;
                if (v17)
                  goto LABEL_20;
              }
            }
            v18 = v9 + 3;
          }
        }
LABEL_20:
        v48 = (v17 - 1) & v17;
        v49 = v18;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      v20 = *(_QWORD *)(v4 + 56);
      v21 = *(_QWORD *)(v4 + 48) + 96 * v15;
      v22 = *(_QWORD *)v21;
      v23 = *(_BYTE *)(v21 + 8);
      v24 = *(_BYTE *)(v21 + 9);
      v25 = *(_BYTE *)(v21 + 10);
      v26 = *(_BYTE *)(v21 + 11);
      v27 = *(_BYTE *)(v21 + 12);
      v28 = *(_BYTE *)(v21 + 13);
      v30 = *(_QWORD *)(v21 + 16);
      v29 = *(_QWORD *)(v21 + 24);
      v31 = *(_QWORD *)(v21 + 32);
      v32 = *(_BYTE *)(v21 + 40);
      v33 = *(_QWORD *)(v21 + 48);
      v34 = *(_QWORD *)(v21 + 56);
      v35 = *(unsigned __int16 *)(v21 + 88) | (*(unsigned __int8 *)(v21 + 90) << 16);
      v36 = *(_QWORD *)(v21 + 64);
      v37 = *(_QWORD *)(v21 + 72);
      v38 = *(_QWORD *)(v21 + 80);
      v39 = *(_QWORD *)(v20 + 8 * v15);
      v59 = v28;
      if ((v46 & 1) == 0)
      {
        v40 = *(_BYTE *)(v21 + 12);
        v58 = *(_BYTE *)(v21 + 11);
        v57 = *(_BYTE *)(v21 + 10);
        v56 = *(_BYTE *)(v21 + 9);
        v54 = *(_BYTE *)(v21 + 8);
        swift_bridgeObjectRetain();
        sub_1A909F54C(v33, v34, v36, v37, v38);
        swift_bridgeObjectRetain();
        v23 = v54;
        v24 = v56;
        v25 = v57;
        v26 = v58;
        v28 = v59;
        v27 = v40;
      }
      v50 = v27;
      v61 = v22;
      v62 = v23;
      v63 = v24;
      v64 = v25;
      v65 = v26;
      v66 = v27;
      v67 = v28;
      v68 = v30;
      v69 = v29;
      v70 = v31;
      v71 = v32;
      v72 = v33;
      v73 = v34;
      v74 = v36;
      v75 = v37;
      v76 = v38;
      v78 = BYTE2(v35);
      v77 = v35;
      v53 = v37;
      v55 = v38;
      v10 = v26;
      v51 = v33;
      v52 = v34;
      v11 = v25;
      v12 = v24;
      v13 = v23;
      sub_1A93F92DC();
      EpisodeStateModel.hash(into:)((uint64_t)v60);
      sub_1A93F9324();
      result = sub_1A93F8B74();
      *(_QWORD *)((char *)v47 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v14 = v47[6] + 96 * result;
      *(_QWORD *)v14 = v22;
      *(_BYTE *)(v14 + 8) = v13;
      *(_BYTE *)(v14 + 9) = v12;
      *(_BYTE *)(v14 + 10) = v11;
      *(_BYTE *)(v14 + 11) = v10;
      *(_BYTE *)(v14 + 12) = v50;
      *(_BYTE *)(v14 + 13) = v59;
      *(_QWORD *)(v14 + 16) = v30;
      *(_QWORD *)(v14 + 24) = v29;
      *(_QWORD *)(v14 + 32) = v31;
      *(_BYTE *)(v14 + 40) = v32;
      *(_QWORD *)(v14 + 48) = v51;
      *(_QWORD *)(v14 + 56) = v52;
      *(_QWORD *)(v14 + 64) = v36;
      *(_QWORD *)(v14 + 72) = v53;
      *(_QWORD *)(v14 + 80) = v55;
      *(_BYTE *)(v14 + 90) = BYTE2(v35);
      *(_WORD *)(v14 + 88) = v35;
      *(_QWORD *)(v47[7] + 8 * result) = v39;
      ++v47[2];
      v4 = v45;
      v7 = v48;
      v9 = v49;
    }
  }
  result = swift_release();
  *v42 = v47;
  return result;
}

uint64_t sub_1A9304544(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_1A93F6D80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C0);
  result = sub_1A93F8E80();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_1A93F92D0();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_1A9304874(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1A93F6D80();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C8);
  v8 = sub_1A93F8E80();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_1A9066CA8(&qword_1EEAB7E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF60]);
    result = sub_1A93F7FA4();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1A9304C10(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A93F8E80();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1A93F92D0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A9304EC0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;

  v3 = v2;
  v5 = type metadata accessor for ThinClientEpisodeStateModel();
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7838);
  v38 = a2;
  result = sub_1A93F8E80();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v34 = v2;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v38 & 1) != 0)
        sub_1A9116174(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      else
        sub_1A9064630(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_1A9116174((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_1A9305200(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7828);
  result = sub_1A93F8E80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A93054C4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7820);
  v38 = a2;
  result = sub_1A93F8E80();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v34 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v38 & 1) != 0)
        sub_1A911612C(v25, (uint64_t)v7);
      else
        sub_1A9062170(v25, (uint64_t)v7, &qword_1ED2ACF98);
      sub_1A93F92DC();
      sub_1A93F930C();
      result = sub_1A93F9324();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_1A911612C((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

void sub_1A93057FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4C0);
  v6 = sub_1A93F8E80();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1A92FDC34(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1A93059DC(uint64_t a1, char a2)
{
  return sub_1A9306040(a1, a2, &qword_1EEAB78A0);
}

uint64_t sub_1A93059E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4350);
  v38 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_36;
      v20 = *(_QWORD *)(v37 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v20 = *(_QWORD *)(v37 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 48) + 24 * v17;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v25 = *(unsigned __int8 *)(v22 + 16);
    v26 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    if ((v38 & 1) == 0)
    {
      sub_1A9086E60(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_BYTE *)(v22 + 16));
      swift_retain();
    }
    sub_1A93F92DC();
    sub_1A93F92E8();
    if (v25)
      sub_1A93F7FBC();
    else
      sub_1A93F930C();
    result = sub_1A93F9324();
    v27 = -1 << *(_BYTE *)(v7 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 24 * v14;
    *(_QWORD *)v15 = v24;
    *(_QWORD *)(v15 + 8) = v23;
    *(_BYTE *)(v15 + 16) = v25;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v26;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v19 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1A9305D38(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7808);
  v6 = sub_1A93F8E80();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v48 = v2;
    v49 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v29 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v30 = v29 | (v14 << 6);
      }
      else
      {
        v31 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v31 >= v11)
          goto LABEL_24;
        v32 = v49[v31];
        ++v14;
        if (!v32)
        {
          v14 = v31 + 1;
          if (v31 + 1 >= v11)
            goto LABEL_24;
          v32 = v49[v14];
          if (!v32)
          {
            v33 = v31 + 2;
            if (v33 >= v11)
            {
LABEL_24:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v48;
                goto LABEL_31;
              }
              v47 = 1 << *(_BYTE *)(v5 + 32);
              if (v47 >= 64)
                bzero(v49, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v49 = -1 << v47;
              v3 = v48;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v32 = v49[v33];
            if (!v32)
            {
              while (1)
              {
                v14 = v33 + 1;
                if (__OFADD__(v33, 1))
                  goto LABEL_33;
                if (v14 >= v11)
                  goto LABEL_24;
                v32 = v49[v14];
                ++v33;
                if (v32)
                  goto LABEL_21;
              }
            }
            v14 = v33;
          }
        }
LABEL_21:
        v10 = (v32 - 1) & v32;
        v30 = __clz(__rbit64(v32)) + (v14 << 6);
      }
      v34 = (__int128 *)(*(_QWORD *)(v5 + 48) + (v30 << 8));
      if ((a2 & 1) != 0)
      {
        v35 = *v34;
        v36 = v34[1];
        v37 = v34[2];
        v53 = v34[3];
        v38 = v34[4];
        v39 = v34[5];
        v40 = v34[7];
        v56 = v34[6];
        v57 = v40;
        v54 = v38;
        v55 = v39;
        v41 = v34[8];
        v42 = v34[9];
        v43 = v34[11];
        v60 = v34[10];
        v61 = v43;
        v58 = v41;
        v59 = v42;
        v44 = v34[12];
        v45 = v34[13];
        v46 = v34[15];
        v64 = v34[14];
        v65 = v46;
        v62 = v44;
        v63 = v45;
        v51 = v36;
        v52 = v37;
        v50 = v35;
        v15 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v30);
      }
      else
      {
        sub_1A9131434((uint64_t)v34, (uint64_t)&v50);
        v15 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v30);
        swift_retain();
      }
      sub_1A93F92DC();
      ArtworkRequest.hash(into:)();
      sub_1A93F9324();
      result = sub_1A93F8B74();
      *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v16 = (_OWORD *)(v7[6] + (result << 8));
      v17 = v53;
      v19 = v50;
      v18 = v51;
      v16[2] = v52;
      v16[3] = v17;
      *v16 = v19;
      v16[1] = v18;
      v20 = v57;
      v22 = v54;
      v21 = v55;
      v16[6] = v56;
      v16[7] = v20;
      v16[4] = v22;
      v16[5] = v21;
      v23 = v61;
      v25 = v58;
      v24 = v59;
      v16[10] = v60;
      v16[11] = v23;
      v16[8] = v25;
      v16[9] = v24;
      v26 = v62;
      v27 = v63;
      v28 = v65;
      v16[14] = v64;
      v16[15] = v28;
      v16[12] = v26;
      v16[13] = v27;
      *(_QWORD *)(v7[7] + 8 * result) = v15;
      ++v7[2];
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v7;
  return result;
}

uint64_t sub_1A9306040(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1A93F8E80();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A9306350(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1A93F8E80();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A9306660(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9670);
  v37 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    v31 = *v30;
    v32 = v30[1];
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A93F92DC();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v29;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
    *v18 = v31;
    v18[1] = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A930697C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A0);
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1A93F8A30();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A9306C50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A8);
  v36 = a2;
  v6 = sub_1A93F8E80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

id sub_1A9306F68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E18);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A9307108()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E10);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A93072B4()
{
  return sub_1A9308F80(&qword_1EEAB7E08);
}

void *sub_1A93072C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BE8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9307468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7798);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9307608()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BD8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[4];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v25 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v18);
    *v25 = v20;
    v25[1] = v21;
    v25[2] = v22;
    v25[3] = v23;
    v25[4] = v24;
    result = (void *)sub_1A9094654(v20, v21, v22);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93077C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4358);
  v29 = v0;
  v1 = *v0;
  v2 = sub_1A93F8E74();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v30 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v26 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v11)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v7;
    if (!v27)
    {
      v7 = v26 + 1;
      if (v26 + 1 >= v11)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v7);
      if (!v27)
        break;
    }
LABEL_25:
    v10 = (v27 - 1) & v27;
    v13 = __clz(__rbit64(v27)) + (v7 << 6);
LABEL_12:
    v14 = 16 * v13;
    v15 = *(_QWORD *)(v1 + 56);
    v16 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v13);
    v17 = v16[1];
    v18 = 40 * v13;
    v19 = *(_QWORD *)(v15 + v18);
    v20 = *(_QWORD *)(v15 + v18 + 8);
    v21 = *(_QWORD *)(v15 + v18 + 16);
    v22 = *(_QWORD *)(v15 + v18 + 24);
    v23 = *(_QWORD *)(v15 + v18 + 32);
    v24 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v14);
    *v24 = *v16;
    v24[1] = v17;
    v25 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v18);
    *v25 = v19;
    v25[1] = v20;
    v25[2] = v21;
    v25[3] = v22;
    v25[4] = v23;
    swift_bridgeObjectRetain();
    result = (void *)sub_1A9094654(v19, v20, v21);
  }
  v28 = v26 + 2;
  if (v28 >= v11)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v7 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v7 >= v11)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v7);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93079C8()
{
  return sub_1A930B5AC(&qword_1EEAB77F8);
}

void *sub_1A93079D4()
{
  return sub_1A930B5AC(&qword_1EEAB77F0);
}

void *sub_1A93079E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1A90A5A70(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1A906443C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1A908A5DC(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9307BC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDC30);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A9307D50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1A906443C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1A908A5DC(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9307F14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF50);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A93080CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FD8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v21 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 8) = v19;
    result = v17;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A9308280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9FD0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v17 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v16;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v17;
    result = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9308420()
{
  return sub_1A930B3DC(&qword_1EEAB78D0);
}

void *sub_1A930842C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_1A93F738C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9668);
  v23 = v0;
  v5 = *v0;
  v6 = sub_1A93F8E74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A9308648()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9E90);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93087F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[4];
  uint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB78B0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 72 * v15;
    sub_1A91314A4(*(_QWORD *)(v2 + 48) + 72 * v15, (uint64_t)v26);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v19 = *(_QWORD *)(v4 + 48) + v17;
    v20 = v26[3];
    v21 = v26[2];
    v22 = v26[1];
    *(_QWORD *)(v19 + 64) = v27;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v20;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)v19 = v26[0];
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93089E0()
{
  return sub_1A93098A0(&qword_1ED2A9690);
}

void *sub_1A93089EC()
{
  return sub_1A9308A20(type metadata accessor for StoreFeedUpdater.Update, &qword_1EEABDBE0);
}

void *sub_1A9308A00()
{
  return sub_1A9309124(&qword_1ED2A9698);
}

void *sub_1A9308A0C()
{
  return sub_1A9308A20(type metadata accessor for StoreFeedUpdater.Retry, &qword_1EEABDBE8);
}

void *sub_1A9308A20(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1A93F8E74();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v29 = v5;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = 8 * v21;
    v23 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
    v24 = *(_QWORD *)(v31 + 72) * v21;
    sub_1A9064630(*(_QWORD *)(v9 + 56) + v24, (uint64_t)v8, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + v22) = v23;
    result = (void *)sub_1A9116174((uint64_t)v8, *(_QWORD *)(v11 + 56) + v24, a1);
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9308C44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDB8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9308DD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7898);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A9308F74()
{
  return sub_1A9308F80(&qword_1EEAB7788);
}

id sub_1A9308F80(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9309118()
{
  return sub_1A9309124(&qword_1EEAB7890);
}

void *sub_1A9309124(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93092BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7888);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1A93F8E74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93094EC()
{
  return sub_1A930B3DC(&qword_1EEAB7880);
}

void *sub_1A93094F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7870);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A93096CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDBF8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 24);
    v22 = *(_OWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v23 = v20;
    *(_OWORD *)(v23 + 8) = v22;
    *(_QWORD *)(v23 + 24) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v17;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A93098A0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9309A38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7850);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A9309BD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9680);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1A906443C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1A908A5DC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9309DBC()
{
  return sub_1A9309DE4((uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, &qword_1EEAB7848);
}

void *sub_1A9309DD0()
{
  return sub_1A9309DE4((uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, &qword_1EEAB7840);
}

void *sub_1A9309DE4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1A93F8E74();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v29 = v5;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v31 + 72) * v21;
    sub_1A9064630(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_1A9116174((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    result = (void *)swift_retain();
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A930A014()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4388);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930A1BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4348);
  v38 = v0;
  v1 = *v0;
  v2 = sub_1A93F8E74();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v37 = v3;
    result = (void *)swift_release();
    *v38 = v37;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v41 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v41;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  v40 = v1 + 64;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      v3 = v41;
      goto LABEL_12;
    }
    v34 = v7 + 1;
    v3 = v41;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v39)
      goto LABEL_26;
    v35 = *(_QWORD *)(v40 + 8 * v34);
    ++v7;
    if (!v35)
    {
      v7 = v34 + 1;
      if (v34 + 1 >= v39)
        goto LABEL_26;
      v35 = *(_QWORD *)(v40 + 8 * v7);
      if (!v35)
        break;
    }
LABEL_25:
    v10 = (v35 - 1) & v35;
    v12 = __clz(__rbit64(v35)) + (v7 << 6);
LABEL_12:
    v13 = 96 * v12;
    v14 = *(_QWORD *)(v1 + 48) + 96 * v12;
    v15 = *(_BYTE *)(v14 + 8);
    v16 = *(_BYTE *)(v14 + 9);
    v17 = *(_BYTE *)(v14 + 10);
    v18 = *(_BYTE *)(v14 + 11);
    v19 = *(_BYTE *)(v14 + 12);
    v20 = *(_BYTE *)(v14 + 13);
    v21 = *(_QWORD *)(v14 + 32);
    v22 = *(_BYTE *)(v14 + 40);
    v23 = *(_QWORD *)(v14 + 48);
    v24 = *(_QWORD *)(v14 + 56);
    v25 = *(_QWORD *)(v14 + 64);
    v26 = *(_QWORD *)(v14 + 72);
    v27 = *(_QWORD *)(v14 + 80);
    v28 = *(_BYTE *)(v14 + 90);
    v29 = *(_WORD *)(v14 + 88);
    v30 = 8 * v12;
    v31 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + v30);
    v32 = *(_QWORD *)(v3 + 48) + v13;
    v33 = *(_OWORD *)(v14 + 16);
    *(_QWORD *)v32 = *(_QWORD *)v14;
    *(_BYTE *)(v32 + 8) = v15;
    *(_BYTE *)(v32 + 9) = v16;
    *(_BYTE *)(v32 + 10) = v17;
    *(_BYTE *)(v32 + 11) = v18;
    *(_BYTE *)(v32 + 12) = v19;
    *(_BYTE *)(v32 + 13) = v20;
    *(_OWORD *)(v32 + 16) = v33;
    *(_QWORD *)(v32 + 32) = v21;
    *(_BYTE *)(v32 + 40) = v22;
    *(_QWORD *)(v32 + 48) = v23;
    *(_QWORD *)(v32 + 56) = v24;
    *(_QWORD *)(v32 + 64) = v25;
    *(_QWORD *)(v32 + 72) = v26;
    *(_QWORD *)(v32 + 80) = v27;
    *(_BYTE *)(v32 + 90) = v28;
    *(_WORD *)(v32 + 88) = v29;
    *(_QWORD *)(*(_QWORD *)(v3 + 56) + v30) = v31;
    swift_bridgeObjectRetain();
    sub_1A909F54C(v23, v24, v25, v26, v27);
    result = (void *)swift_bridgeObjectRetain();
  }
  v36 = v34 + 2;
  if (v36 >= v39)
    goto LABEL_26;
  v35 = *(_QWORD *)(v40 + 8 * v36);
  if (v35)
  {
    v7 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v7 >= v39)
      goto LABEL_26;
    v35 = *(_QWORD *)(v40 + 8 * v7);
    ++v36;
    if (v35)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930A438()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1A93F6D80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1A93F8E74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930A658()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1A93F6D80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77C8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1A93F8E74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930A87C()
{
  return sub_1A93098A0(&qword_1EEAB77B8);
}

void *sub_1A930A888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for ThinClientEpisodeStateModel();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7838);
  v5 = *v0;
  v6 = sub_1A93F8E74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1A9064630(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_1A9116174((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A930AAB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7828);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930AC40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7820);
  v6 = *v0;
  v7 = sub_1A93F8E74();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_22:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v3 + 72) * v17;
    sub_1A9062170(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v5, &qword_1ED2ACF98);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v19;
    result = (void *)sub_1A911612C((uint64_t)v5, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1A930AE64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4C0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B004()
{
  return sub_1A930B3DC(&qword_1EEAB78A0);
}

void *sub_1A930B010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4350);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v23 = *(_QWORD *)v17;
    *(_QWORD *)(v23 + 8) = v19;
    *(_BYTE *)(v23 + 16) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    sub_1A9086E60(v18, v19, v20);
    result = (void *)swift_retain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B1D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  _OWORD v33[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7808);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    sub_1A9131434(*(_QWORD *)(v2 + 48) + (v15 << 8), (uint64_t)v33);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = (_OWORD *)(*(_QWORD *)(v4 + 48) + (v15 << 8));
    v18 = v33[15];
    v20 = v33[12];
    v19 = v33[13];
    v17[14] = v33[14];
    v17[15] = v18;
    v17[12] = v20;
    v17[13] = v19;
    v21 = v33[11];
    v23 = v33[8];
    v22 = v33[9];
    v17[10] = v33[10];
    v17[11] = v21;
    v17[8] = v23;
    v17[9] = v22;
    v24 = v33[7];
    v26 = v33[4];
    v25 = v33[5];
    v17[6] = v33[6];
    v17[7] = v24;
    v17[4] = v26;
    v17[5] = v25;
    v27 = v33[0];
    v28 = v33[1];
    v29 = v33[3];
    v17[2] = v33[2];
    v17[3] = v29;
    *v17 = v27;
    v17[1] = v28;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B3D0()
{
  return sub_1A930B3DC(&qword_1EEABDBC8);
}

void *sub_1A930B3DC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B588()
{
  return sub_1A930B5AC(&qword_1EEABDBC0);
}

void *sub_1A930B594()
{
  return sub_1A930B5AC(&qword_1EEAB77D8);
}

void *sub_1A930B5A0()
{
  return sub_1A930B5AC(&qword_1EEAB77E8);
}

void *sub_1A930B5AC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B758()
{
  return sub_1A930B764(&qword_1ED2A9670);
}

void *sub_1A930B764(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8E74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v16);
    v19 = *v17;
    v18 = v17[1];
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v16);
    *v20 = v19;
    v20[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930B904()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BE0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A930BAB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930BC60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB77A8);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A930BE14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A96A0);
  v2 = *v0;
  v3 = sub_1A93F8E74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_1A930BFBC(uint64_t a1)
{
  return sub_1A930BFD4(a1, &qword_1EEABCDC0);
}

_QWORD *sub_1A930BFC8(uint64_t a1)
{
  return sub_1A930BFD4(a1, &qword_1EEABCDD0);
}

_QWORD *sub_1A930BFD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = v2;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 24);
  v6 = sub_1A9311828((uint64_t)&v8, v4 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v6 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1A930C0C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A930C234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE60);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_1A93113E0(&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A930C328(uint64_t a1)
{
  return sub_1A906C204(a1, (uint64_t *)&unk_1ED2A44B0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A90C1768);
}

uint64_t sub_1A930C33C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7958);
  v8 = *(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

_QWORD *sub_1A930C504(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1A930D00C((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A930C5F8(uint64_t a1)
{
  return sub_1A930BFD4(a1, &qword_1EEABCDE0);
}

_QWORD *sub_1A930C604(uint64_t a1)
{
  return sub_1A930BFD4(a1, &qword_1EEABCDF0);
}

_QWORD *sub_1A930C610(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDE8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1A9311A40(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1A930C704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9768);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * (v5 >> 4);
  v6 = sub_1A9311C4C((uint64_t)&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A9120240();
  if (v6 != v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1A930C7E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A924CDA8(&qword_1EEABDC38, &qword_1EEAB94D0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94D0);
          v12 = sub_1A930D220(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC4F8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A930C9F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A924CDA8(&qword_1EEABDC28, &qword_1ED2A4110);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4110);
          v12 = sub_1A930D278(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SubscriptionOffer();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A930CBF4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A924CDA8(&qword_1EEABDC20, &qword_1EEABDC18);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDC18);
          v12 = sub_1A930D2CC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A930CE08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A924CDA8(&qword_1EEABDC10, &qword_1EEABDC08);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDC08);
          v12 = sub_1A930D320(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ContentKeyResponse(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A930D00C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A924CDA8(&qword_1EEABDBD8, &qword_1EEABDBD0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDBD0);
          v12 = sub_1A930D2CC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A9072534(0, &qword_1ED2A41B0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t (*sub_1A930D220(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A930D374(v6, a2, a3);
  return sub_1A930D274;
}

uint64_t (*sub_1A930D278(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A930D3E8(v6, a2, a3);
  return sub_1A930D274;
}

uint64_t (*sub_1A930D2CC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A930D45C(v6, a2, a3);
  return sub_1A930D274;
}

uint64_t (*sub_1A930D320(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A930D4C8(v6, a2, a3);
  return sub_1A930D274;
}

uint64_t (*sub_1A930D374(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1AF4129DC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_1A930D3E0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A930D3E0()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1A930D3E8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1AF4129DC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1A930D454;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A930D454()
{
  return swift_release();
}

uint64_t (*sub_1A930D45C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1AF4129DC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s18PodcastsFoundation33IntermediateEyebrowBuilderEpisodeVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1A930D4C8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1AF4129DC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for IntermediateEyebrowBuilderEpisode;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A930D534(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A9094640(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A93072C0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1 & 1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_BYTE *)(v18[7] + v12) = a1 & 1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A92FE9D0(result, a4 & 1);
  result = sub_1A9094640(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930D68C(uint64_t a1, int a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1A912E330(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A9307468();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A92FECD8(result, a3 & 1);
  result = sub_1A912E330(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930D7C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1EEAB77F8);
}

uint64_t sub_1A930D7CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1EEAB77F0);
}

uint64_t sub_1A930D7D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1A9094640(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1A930B5AC(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A9306350(v17, a4 & 1, a5);
  v23 = sub_1A9094640(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

_OWORD *sub_1A930D94C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A90A597C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_1A908A5DC(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A93079E0();
      goto LABEL_7;
    }
    sub_1A92FEFD8(v13, a3 & 1);
    v19 = sub_1A90A597C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A90A5A70(a2, (uint64_t)v21);
      return sub_1A930FF0C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1A93F9258();
  __break(1u);
  return result;
}

_OWORD *sub_1A930DA84(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1A912E1BC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
        return sub_1A908A5DC(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A9307D50();
      goto LABEL_7;
    }
    sub_1A92FF5B0(v12, a3 & 1);
    v18 = sub_1A912E1BC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A930FF84(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CFString(0);
  result = (_OWORD *)sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930DBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1A9094640(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1A9307F14();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A92FF8D0(v17, a5 & 1);
  v23 = sub_1A9094640(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

id sub_1A930DD18(uint64_t a1, char a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  id result;
  char v15;
  uint64_t v16;
  char v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_1A912E44C((uint64_t)a3);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  result = (id)(v12 + v13);
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = v10;
  v16 = v9[3];
  if (v16 >= (uint64_t)result && (a4 & 1) != 0)
    goto LABEL_9;
  if (v16 >= (uint64_t)result && (a4 & 1) == 0)
  {
    result = sub_1A93080CC();
    goto LABEL_9;
  }
  sub_1A92FFBF4((uint64_t)result, a4 & 1);
  result = (id)sub_1A912E44C((uint64_t)a3);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
    result = (id)sub_1A93F9258();
    __break(1u);
    return result;
  }
  v11 = (unint64_t)result;
LABEL_9:
  v18 = a2 & 1;
  v19 = *v5;
  if ((v15 & 1) != 0)
  {
    v20 = v19[7] + 16 * v11;
    *(_QWORD *)v20 = a1;
    *(_BYTE *)(v20 + 8) = v18 != 0;
  }
  else
  {
    sub_1A9310038(v11, (uint64_t)a3, a1, v18, v19);
    return a3;
  }
  return result;
}

id sub_1A930DE58(char a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id result;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1A912E44C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    result = sub_1A9308280();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v15[7] + v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v15[6] + 8 * v9) = a2;
    *(_BYTE *)(v15[7] + v9) = a1;
    v17 = v15[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (!v18)
    {
      v15[2] = v19;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1A92FFED8((uint64_t)result, a3 & 1);
  result = (id)sub_1A912E44C((uint64_t)a2);
  if ((v13 & 1) == (v16 & 1))
  {
    v9 = (unint64_t)result;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  result = (id)sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930DFA8(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A912E498(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1A93F738C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1A9310088(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A930842C();
      goto LABEL_7;
    }
    sub_1A93001A8(v13, a3 & 1);
    v20 = sub_1A912E498(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A9310088(v10, a2, a1, v16);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

_OWORD *sub_1A930E0CC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930ED40(a1, a2, a3, a4, sub_1A9094640);
}

uint64_t sub_1A930E0D8(uint64_t a1, uint64_t *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _OWORD v28[4];
  uint64_t v29;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1A912E538(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A93087F8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A930083C(v13, a3 & 1);
  v19 = sub_1A912E538(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    result = sub_1A93F9258();
    __break(1u);
    return result;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_1A91314A4((uint64_t)a2, (uint64_t)v28);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = v16[6] + 72 * v10;
  *(_OWORD *)v21 = v28[0];
  v22 = v28[1];
  v23 = v28[2];
  v24 = v28[3];
  *(_QWORD *)(v21 + 64) = v29;
  *(_OWORD *)(v21 + 32) = v23;
  *(_OWORD *)(v21 + 48) = v24;
  *(_OWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v25 = v16[2];
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v27;
  return result;
}

uint64_t sub_1A930E248(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930F438(a1, a2, a3, sub_1A906C424, &qword_1ED2A9690);
}

uint64_t sub_1A930E264(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930E28C(a1, a2, a3, type metadata accessor for StoreFeedUpdater.Update, &qword_1EEABDBE0);
}

uint64_t sub_1A930E278(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930E28C(a1, a2, a3, type metadata accessor for StoreFeedUpdater.Retry, &qword_1EEABDBE8);
}

uint64_t sub_1A930E28C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v8;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;

  v8 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1A906C424(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v8;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = a4(0);
        return sub_1A93124A8(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a4);
      }
      return sub_1A9310118(v14, a2, a1, v20, a4);
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1A9308A20(a4, a5);
      goto LABEL_7;
    }
    sub_1A9300A5C(v17, a3 & 1, a4, a5);
    v24 = sub_1A906C424(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v8;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_1A9310118(v14, a2, a1, v20, a4);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930E3C4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930E3E0(a1, a2, a3, sub_1A906C424, &qword_1ED2A9698);
}

uint64_t sub_1A930E3E0(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v8 = v5;
  v12 = *v5;
  v14 = a4(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A9309124(a5);
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = 8 * v14;
    *(_QWORD *)(v20[6] + v23) = a2;
    *(_QWORD *)(v20[7] + v23) = a1;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A930181C(result, a3 & 1, a5);
  result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930E530(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A912E634(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A9308DD0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A9301028(result, a4 & 1);
  result = sub_1A912E634(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930E66C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1A93F73E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1A912E6AC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1A93092BC();
    goto LABEL_7;
  }
  sub_1A9301ACC(v17, a3 & 1);
  v23 = sub_1A912E6AC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1A93F9258();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1A93101F4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1A930E7C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A912E634(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1A930B764(&qword_1EEAB7878);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A9301E6C(result, a4 & 1);
  result = sub_1A912E634(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930E90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1A9094640(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1A93094F8();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A93023B0(v20, a7 & 1);
  v26 = sub_1A9094640(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930EAAC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930EAB8(a1, a2, a3, &qword_1EEAB7868);
}

uint64_t sub_1A930EAB8(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v6 = v4;
  v10 = *v4;
  v12 = sub_1A9093570(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A93098A0(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = 8 * v12;
    *(_QWORD *)(v18[6] + v21) = a2;
    *(_QWORD *)(v18[7] + v21) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A93029EC(result, a3 & 1, a4);
  result = sub_1A9093570(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930EBFC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1A912E790(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A9309A38();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A9302CC0(result, a3 & 1);
  result = sub_1A912E790(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

_OWORD *sub_1A930ED34(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930ED40(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1A927D890);
}

_OWORD *sub_1A930ED40(_OWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  _QWORD *v5;
  _QWORD **v7;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  uint64_t v23;
  char v24;

  v7 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = a5(a2, a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v7;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
        return sub_1A908A5DC(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1A9309BD8();
      goto LABEL_7;
    }
    sub_1A9302F98(v17, a4 & 1);
    v23 = a5(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v7;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A931028C(v14, a2, a3, a1, v20);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930EE80(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930EEC8(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t (*)(uint64_t, double))sub_1A912E83C, &qword_1EEAB7848, (void (*)(void))sub_1A9303294);
}

uint64_t sub_1A930EEA4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930EEC8(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(uint64_t, double))sub_1A912E820, &qword_1EEAB7840, (void (*)(void))sub_1A9303880);
}

uint64_t sub_1A930EEC8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, double), uint64_t *a6, void (*a7)(void))
{
  _QWORD *v7;
  _QWORD **v10;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(void);
  uint64_t v33;

  v31 = a6;
  v32 = a7;
  v10 = (_QWORD **)v7;
  v33 = a1;
  v13 = a4(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - v15;
  v17 = (_QWORD *)*v7;
  v19 = a5(a2, v14);
  v20 = v17[2];
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  v23 = v18;
  v24 = v17[3];
  if (v24 >= v22 && (a3 & 1) != 0)
  {
LABEL_7:
    v25 = *v10;
    if ((v23 & 1) != 0)
    {
LABEL_8:
      v26 = v25[7];
      result = swift_release();
      *(_QWORD *)(v26 + 8 * v19) = v33;
      return result;
    }
    goto LABEL_11;
  }
  if (v24 >= v22 && (a3 & 1) == 0)
  {
    sub_1A9309DE4(a4, v31);
    goto LABEL_7;
  }
  v32();
  v28 = ((uint64_t (*)(uint64_t))a5)(a2);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_1A93F9258();
    __break(1u);
    return result;
  }
  v19 = v28;
  v25 = *v10;
  if ((v23 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1A9064630(a2, (uint64_t)v16, a4);
  return sub_1A93102F4(v19, (uint64_t)v16, v33, v25, a4);
}

id sub_1A930F040(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1A912E44C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1A930A014();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1A9303E6C(v12, a3 & 1, &qword_1ED2A4388);
  v18 = sub_1A912E44C((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  result = (id)sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930F1A8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A906C428(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1A93F6D80();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1A931038C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A930A438();
      goto LABEL_7;
    }
    sub_1A9304544(v13, a3 & 1);
    v20 = sub_1A906C428(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A931038C(v10, a2, a1, v16);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930F2CC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1A93F6D80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1A912E3B4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A930A658();
    goto LABEL_7;
  }
  sub_1A9304874(result, a3 & 1);
  result = sub_1A912E3B4(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1A93F9258();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1A9310418(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1A930F41C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A930F438(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1A906C428, &qword_1EEAB77B8);
}

uint64_t sub_1A930F438(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v8 = v5;
  v12 = *v5;
  v14 = a4(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1A93098A0(a5);
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = 8 * v14;
    *(_QWORD *)(v20[6] + v23) = a2;
    *(_QWORD *)(v20[7] + v23) = a1;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A9304C10(result, a3 & 1, a5);
  result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930F588(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A9093570(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for ThinClientEpisodeStateModel();
        return sub_1A93124A8(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      }
      return sub_1A93104B0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A930A888();
      goto LABEL_7;
    }
    sub_1A9304EC0(v13, a3 & 1);
    v20 = sub_1A9093570(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A93104B0(v10, a2, a1, v16);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

void sub_1A930F6B0(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  sub_1A912E028(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1A930AE64();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v17[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1A93057FC(v14, a3 & 1);
  sub_1A912E028(a2);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1A93F9258();
  __break(1u);
}

uint64_t sub_1A930F7E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930FAD4(a1, a2, a3, a4, &qword_1EEAB78A0);
}

uint64_t sub_1A930F7F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  char v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v11 = a4 & 1;
  v12 = (_QWORD *)*v5;
  v14 = sub_1A9083EC8(a2, a3, a4 & 1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        result = swift_release();
        *(_QWORD *)(v21 + 8 * v14) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1A930B010();
      goto LABEL_7;
    }
    sub_1A93059E8(v17, a5 & 1);
    v23 = sub_1A9083EC8(a2, a3, v11);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A9310584(v14, a2, a3, v11, a1, v20);
      return sub_1A9086E60(a2, a3, v11);
    }
  }
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930F940(uint64_t a1, _OWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  _OWORD v37[16];

  v4 = v3;
  v8 = *v3;
  v10 = sub_1A912E8D8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A930B1D0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A9305D38(v13, a3 & 1);
  v19 = sub_1A912E8D8(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    result = sub_1A93F9258();
    __break(1u);
    return result;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_1A9131434((uint64_t)a2, (uint64_t)v37);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = (_OWORD *)(v16[6] + (v10 << 8));
  v22 = v37[3];
  v24 = v37[0];
  v23 = v37[1];
  v21[2] = v37[2];
  v21[3] = v22;
  *v21 = v24;
  v21[1] = v23;
  v25 = v37[7];
  v27 = v37[4];
  v26 = v37[5];
  v21[6] = v37[6];
  v21[7] = v25;
  v21[4] = v27;
  v21[5] = v26;
  v28 = v37[11];
  v30 = v37[8];
  v29 = v37[9];
  v21[10] = v37[10];
  v21[11] = v28;
  v21[8] = v30;
  v21[9] = v29;
  v31 = v37[12];
  v32 = v37[13];
  v33 = v37[15];
  v21[14] = v37[14];
  v21[15] = v33;
  v21[12] = v31;
  v21[13] = v32;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v34 = v16[2];
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v36;
  return result;
}

uint64_t sub_1A930FAC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930FAD4(a1, a2, a3, a4, &qword_1EEABDBC8);
}

uint64_t sub_1A930FAD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1A9094640(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1A930B3DC(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A9306040(v17, a4 & 1, a5);
  v23 = sub_1A9094640(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A930FC48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1EEAB77D8);
}

uint64_t sub_1A930FC54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A930D7D8(a1, a2, a3, a4, &qword_1EEAB77E8);
}

void sub_1A930FC60(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1A912E508((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1A930BAB8();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1A930697C(v12, a3 & 1);
  v17 = sub_1A912E508((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for FairPlayAsset();
  sub_1A93F9258();
  __break(1u);
}

uint64_t sub_1A930FDB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A9094640(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A930BC60();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A9306C50(v15, a4 & 1);
  v21 = sub_1A9094640(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

_OWORD *sub_1A930FF0C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1A908A5DC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_OWORD *sub_1A930FF84(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1A908A5DC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1A930FFE8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1A9310038(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1A9310088(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_1A93F738C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1A9310118(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v9 = a4[7];
  v10 = a5(0);
  result = sub_1A9116174(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a5);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

unint64_t sub_1A93101AC(unint64_t result, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1A93101F4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1A93F73E0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1A931028C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1A908A5DC(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1A93102F4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = a5(0);
  result = sub_1A9116174(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1A931038C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_1A93F6D80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1A9310418(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1A93F6D80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1A93104B0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for ThinClientEpisodeStateModel();
  result = sub_1A9116174(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1A931053C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1A9310584(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 24 * result;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(_BYTE *)(v6 + 16) = a4 & 1;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_1A93105D8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v83 >= v81)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A9310C60((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1A9234330((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A93F837C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (*v25 >= v23)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A9233E0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1A9233E0C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1A9310C60((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9310C60(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (v20 >= *((_QWORD *)v16 - 1))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A9233FB8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9310ECC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      sub_1A9086E60(v21, v22, v23);
      goto LABEL_38;
    }
    v11 += 24;
    result = sub_1A9086E60(v21, v22, v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1A93110D8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int16 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  int64_t v41;

  v6 = *(_QWORD *)(a4 + 64);
  v4 = a4 + 64;
  v5 = v6;
  v39 = v4;
  v7 = -1 << *(_BYTE *)(v4 - 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & v5;
  if (!a2)
  {
    v11 = 0;
    a3 = 0;
LABEL_38:
    *result = a4;
    result[1] = v39;
    result[2] = ~v7;
    result[3] = v11;
    result[4] = v9;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v11 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v10 = a2;
  v36 = -1 << *(_BYTE *)(v4 - 32);
  v37 = result;
  v11 = 0;
  v12 = 0;
  v38 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v41 = v11;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    v18 = *(_QWORD *)(a4 + 48) + 96 * v14;
    ++v12;
    v19 = *(_BYTE *)(v18 + 8);
    v20 = *(_BYTE *)(v18 + 9);
    v21 = *(_BYTE *)(v18 + 10);
    v22 = *(_BYTE *)(v18 + 11);
    v23 = *(_BYTE *)(v18 + 12);
    v24 = *(_BYTE *)(v18 + 13);
    v25 = *(_QWORD *)(v18 + 32);
    v26 = *(_BYTE *)(v18 + 40);
    v27 = *(_QWORD *)(v18 + 48);
    v28 = *(_QWORD *)(v18 + 56);
    v29 = *(_QWORD *)(v18 + 64);
    v30 = *(_QWORD *)(v18 + 72);
    v31 = *(_QWORD *)(v18 + 80);
    v32 = *(_BYTE *)(v18 + 90);
    v33 = *(_WORD *)(v18 + 88);
    v34 = *(_OWORD *)(v18 + 16);
    *(_QWORD *)v10 = *(_QWORD *)v18;
    *(_BYTE *)(v10 + 8) = v19;
    *(_BYTE *)(v10 + 9) = v20;
    *(_BYTE *)(v10 + 10) = v21;
    *(_BYTE *)(v10 + 11) = v22;
    *(_BYTE *)(v10 + 12) = v23;
    *(_BYTE *)(v10 + 13) = v24;
    *(_OWORD *)(v10 + 16) = v34;
    *(_QWORD *)(v10 + 32) = v25;
    *(_BYTE *)(v10 + 40) = v26;
    *(_QWORD *)(v10 + 48) = v27;
    *(_QWORD *)(v10 + 56) = v28;
    *(_QWORD *)(v10 + 64) = v29;
    *(_QWORD *)(v10 + 72) = v30;
    *(_QWORD *)(v10 + 80) = v31;
    *(_BYTE *)(v10 + 90) = v32;
    *(_WORD *)(v10 + 88) = v33;
    v35 = a3;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      sub_1A909F54C(v27, v28, v29, v30, v31);
      v7 = v36;
      result = v37;
      a3 = v35;
      v11 = v41;
      goto LABEL_38;
    }
    v10 += 96;
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_1A909F54C(v27, v28, v29, v30, v31);
    a3 = v35;
    v11 = v41;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v38)
      goto LABEL_33;
    v16 = *(_QWORD *)(v39 + 8 * v15);
    if (!v16)
      break;
LABEL_18:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v41 = v15;
  }
  v11 += 2;
  if (v15 + 1 >= v38)
  {
    v9 = 0;
    v11 = v15;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v39 + 8 * v11);
  if (v16)
    goto LABEL_14;
  v17 = v15 + 2;
  if (v15 + 2 >= v38)
    goto LABEL_33;
  v16 = *(_QWORD *)(v39 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v11 = v15 + 3;
  if (v15 + 3 >= v38)
  {
    v9 = 0;
    v11 = v15 + 2;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v39 + 8 * v11);
  if (v16)
  {
LABEL_14:
    v15 = v11;
    goto LABEL_18;
  }
  v17 = v15 + 4;
  if (v15 + 4 >= v38)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    a3 = v12;
    v7 = v36;
    result = v37;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v39 + 8 * v17);
  if (v16)
  {
LABEL_17:
    v15 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v38)
    {
      v9 = 0;
      v11 = v38 - 1;
      goto LABEL_37;
    }
    v16 = *(_QWORD *)(v39 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A93113E0(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
LABEL_37:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v12;
  }
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
    goto LABEL_39;
  v10 = a2;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  v24 = result;
  v11 = 0;
  v12 = 0;
  v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_1A906443C(*(_QWORD *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(_QWORD *)&v26 = v20;
    *((_QWORD *)&v26 + 1) = v19;
    v22 = v27;
    v21 = v28;
    v30 = v27;
    v31 = v28;
    v29 = v26;
    *v10 = v26;
    v10[1] = v22;
    v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      v12 = a3;
      goto LABEL_36;
    }
    v10 += 3;
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v25)
      goto LABEL_35;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v11 = v15 + 1;
      if (v15 + 2 >= v25)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        v11 = v15 + 2;
        if (v15 + 3 >= v25)
          goto LABEL_35;
        v16 = *(_QWORD *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          v17 = v15 + 4;
          v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            v16 = *(_QWORD *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v15 >= v25)
                {
                  v11 = v25 - 1;
                  goto LABEL_35;
                }
                v16 = *(_QWORD *)(v5 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          v8 = 0;
LABEL_36:
          v6 = v23;
          result = v24;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A931162C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A9311828(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1A9311A40(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char v23;
  uint64_t v24;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(void **)v20;
    v22 = *(void **)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      sub_1A91599C0(v21, v22, v23);
      goto LABEL_38;
    }
    v11 += 24;
    result = sub_1A91599C0(v21, v22, v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A9311C4C(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_OWORD *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_1A9311E48(uint64_t a1, char *a2, uint64_t a3)
{
  char *v3;
  void **v6;
  void *v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  id v15;
  objc_super v17;

  v6 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1A9064630(a3, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(_QWORD))type metadata accessor for MediaRequest.Params);
  v7 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  v8 = *v6;
  *v6 = v7;
  v9 = v3;
  v10 = a2;
  v11 = v7;

  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1A91154C8(MEMORY[0x1E0DEE9D8]);
  v14 = &v9[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(_QWORD *)v14 = v12;
  *((_QWORD *)v14 + 1) = v13;
  *((_QWORD *)v14 + 2) = v12;
  *((_QWORD *)v14 + 3) = 0;

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for BaseFeedResponse();
  v15 = objc_msgSendSuper2(&v17, sel_init);
  sub_1A9114C30(a3);
  return v15;
}

uint64_t type metadata accessor for BaseFeedResponse()
{
  uint64_t result;

  result = qword_1EEABDBB0;
  if (!qword_1EEABDBB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9311F90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_1A9311FE8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for BaseFeedRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseFeedRequest.__allocating_init(storeID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BaseFeedRequest.params.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseFeedRequest.feedResponse(jsonArray:request:params:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseFeedRequest.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1A93120AC()
{
  return type metadata accessor for BaseFeedResponse();
}

uint64_t sub_1A93120B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BaseFeedResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseFeedResponse.response.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BaseFeedResponse.response.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BaseFeedResponse.response.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BaseFeedResponse.__allocating_init(jsonArray:request:params:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BaseFeedResponse.parseItemsIntoCacheIfNeeded()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BaseFeedResponse.items(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BaseFeedResponse.item(in:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BaseFeedResponse.numberOfItems(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BaseFeedResponse.numberOfSections()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BaseFeedResponse.section(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t destroy for BaseFeedResponse.ParsedResponseCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *initializeWithCopy for BaseFeedResponse.ParsedResponseCache(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BaseFeedResponse.ParsedResponseCache(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for BaseFeedResponse.ParsedResponseCache(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BaseFeedResponse.ParsedResponseCache()
{
  return &type metadata for BaseFeedResponse.ParsedResponseCache;
}

uint64_t sub_1A9312484()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A93124A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1A93124FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t EpisodeListBuilder;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, int *);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  id v60;
  uint8_t *v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  __int16 v65;
  uint64_t v66;
  uint64_t (*v67)();
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  _QWORD v80[2];
  uint64_t v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD aBlock[6];
  char v87;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v80 - v8;
  v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MTPlaybackContinuousPlaybackEnabled())
  {
    EpisodeListBuilder = type metadata accessor for UpNextEpisodeListBuilder();
    v15 = v2 + *(int *)(EpisodeListBuilder + 20);
    sub_1A9315F8C(v15, (uint64_t)v9);
    v16 = *(unsigned int (**)(char *, uint64_t, int *))(v11 + 48);
    if (v16(v9, 1, v10) == 1)
    {
      sub_1A9242934((uint64_t)v9);
LABEL_13:
      v24 = v2 + *(int *)(EpisodeListBuilder + 24);
      v25 = *(_QWORD *)v24;
      v26 = *(_QWORD *)(v24 + 8);
      v27 = *(_QWORD *)(v24 + 16);
      v28 = *(_QWORD *)(v24 + 24);
      v29 = *(_QWORD *)(v24 + 32);
      v30 = *(_QWORD *)(v24 + 40);
      v31 = *(_QWORD *)(v24 + 48);
      v32 = *(_QWORD *)(v24 + 56);
      v33 = *(_QWORD *)(v24 + 64);
      v34 = *(_QWORD *)(v24 + 72);
      v35 = *(_BYTE *)(v24 + 82);
      LOWORD(v24) = *(_WORD *)(v24 + 80);
      *(_QWORD *)a1 = v25;
      *(_QWORD *)(a1 + 8) = v26;
      *(_QWORD *)(a1 + 16) = v27;
      *(_QWORD *)(a1 + 24) = v28;
      *(_QWORD *)(a1 + 32) = v29;
      *(_QWORD *)(a1 + 40) = v30;
      *(_QWORD *)(a1 + 48) = v31;
      *(_QWORD *)(a1 + 56) = v32;
      *(_QWORD *)(a1 + 64) = v33;
      *(_QWORD *)(a1 + 72) = v34;
      *(_BYTE *)(a1 + 82) = v35;
      *(_WORD *)(a1 + 80) = v24;
      sub_1A912C8E4(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v24);
      return;
    }
    sub_1A912AB38((uint64_t)v9, (uint64_t)v13);
    v21 = &v13[v10[37]];
    v22 = *((_QWORD *)v21 + 1);
    if (!v22)
    {
      sub_1A916E4E4((uint64_t)v13);
      goto LABEL_13;
    }
    v23 = *(_QWORD *)v21;
    sub_1A9315F8C(v15, (uint64_t)v6);
    if (v16(v6, 1, v10) == 1)
    {
      sub_1A9242934((uint64_t)v6);
LABEL_25:
      sub_1A916E4E4((uint64_t)v13);
      v67 = 0;
LABEL_26:
      v68 = v2 + *(int *)(EpisodeListBuilder + 24);
      v69 = *(_QWORD *)v68;
      v70 = *(_QWORD *)(v68 + 8);
      v71 = *(_QWORD *)(v68 + 16);
      v72 = *(_QWORD *)(v68 + 24);
      v73 = *(_QWORD *)(v68 + 32);
      v74 = *(_QWORD *)(v68 + 40);
      v75 = *(_QWORD *)(v68 + 48);
      v76 = *(_QWORD *)(v68 + 56);
      v77 = *(_QWORD *)(v68 + 64);
      v78 = *(_QWORD *)(v68 + 72);
      v79 = *(_BYTE *)(v68 + 82);
      LOWORD(v68) = *(_WORD *)(v68 + 80);
      *(_QWORD *)a1 = v69;
      *(_QWORD *)(a1 + 8) = v70;
      *(_QWORD *)(a1 + 16) = v71;
      *(_QWORD *)(a1 + 24) = v72;
      *(_QWORD *)(a1 + 32) = v73;
      *(_QWORD *)(a1 + 40) = v74;
      *(_QWORD *)(a1 + 48) = v75;
      *(_QWORD *)(a1 + 56) = v76;
      *(_QWORD *)(a1 + 64) = v77;
      *(_QWORD *)(a1 + 72) = v78;
      *(_BYTE *)(a1 + 82) = v79;
      *(_WORD *)(a1 + 80) = v68;
      sub_1A912C8E4(v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v68);
      sub_1A9085818((uint64_t)v67);
      return;
    }
    v85 = v23;
    v36 = v6[v10[31]];
    swift_bridgeObjectRetain();
    sub_1A916E4E4((uint64_t)v6);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (qword_1ED2A87A0 != -1)
      swift_once();
    v84 = v22;
    v37 = sub_1A93F7698();
    v80[1] = __swift_project_value_buffer(v37, (uint64_t)qword_1ED2A8780);
    v38 = sub_1A93F7674();
    v39 = sub_1A93F87B4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1A904E000, v38, v39, "Show is serial. Generating serial list settings.", v40, 2u);
      MEMORY[0x1AF41411C](v40, -1, -1);
    }

    v41 = (void *)objc_opt_self();
    v81 = v10[30];
    v42 = objc_msgSend(v41, sel_predicateForSeasonNumber_, *(_QWORD *)&v13[v81]);
    v43 = objc_msgSend(v41, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, *(_QWORD *)&v13[v10[29]]);
    v44 = objc_msgSend(v42, sel_AND_, v43);

    v45 = (void *)sub_1A93F8010();
    v46 = objc_msgSend(v41, sel_predicateForAllEpisodesOnPodcastUuid_, v45);

    v47 = objc_msgSend(v44, sel_AND_, v46);
    v48 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v49 = objc_msgSend(v48, sel_mainOrPrivateContext);

    sub_1A93F8040();
    v50 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v51 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v50, sel_initWithEntityName_, v51);

    v83 = v47;
    objc_msgSend(v52, sel_setPredicate_, v47);
    objc_msgSend(v52, sel_setFetchLimit_, 1);
    v87 = 0;
    v53 = (_QWORD *)swift_allocObject();
    v53[2] = &v87;
    v53[3] = v49;
    v53[4] = v52;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = sub_1A9316000;
    *(_QWORD *)(v54 + 24) = v53;
    v82 = v53;
    aBlock[4] = sub_1A9055748;
    aBlock[5] = v54;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A9098E00;
    aBlock[3] = &block_descriptor_61;
    v55 = _Block_copy(aBlock);
    v56 = v49;
    v57 = v52;
    swift_retain();
    swift_release();
    objc_msgSend(v56, sel_performBlockAndWait_, v55);
    _Block_release(v55);
    LOBYTE(v55) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v55 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (v87 != 1)
      {
        sub_1A916E4E4((uint64_t)v13);

        swift_bridgeObjectRelease();
        v67 = sub_1A9316000;
        goto LABEL_26;
      }
      v58 = sub_1A93F7674();
      v59 = sub_1A93F87B4();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = v56;
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_1A904E000, v58, v59, "Found unplayed episodes for this serial show.", v61, 2u);
        v62 = v61;
        v56 = v60;
        MEMORY[0x1AF41411C](v62, -1, -1);
      }

      v63 = *(_QWORD *)&v13[v81];
      v64 = v13[v10[39]];
      v65 = v13[v10[40]];
      sub_1A916E4E4((uint64_t)v13);
      swift_release();
      v66 = v84;
      *(_QWORD *)a1 = v85;
      *(_QWORD *)(a1 + 8) = v66;
      *(_QWORD *)(a1 + 16) = v63;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = (v64 << 8) | 7;
      *(_QWORD *)(a1 + 72) = 3;
      *(_BYTE *)(a1 + 82) = 0;
      *(_WORD *)(a1 + 80) = v65;
    }
  }
  else
  {
    if (qword_1ED2A87A0 != -1)
      swift_once();
    v17 = sub_1A93F7698();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A8780);
    v18 = sub_1A93F7674();
    v19 = sub_1A93F87B4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1A904E000, v18, v19, "Continuous playback disabled. Returning nil settings", v20, 2u);
      MEMORY[0x1AF41411C](v20, -1, -1);
    }

    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_BYTE *)(a1 + 82) = 0;
    *(_WORD *)(a1 + 80) = 2;
  }
}

uint64_t sub_1A9312CB8(BOOL *a1)
{
  uint64_t result;

  sub_1A9176AAC();
  result = sub_1A93F89D0();
  *a1 = result > 0;
  return result;
}

__n128 sub_1A9312EC8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 result;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v8 = *(_BYTE *)(a1 + 32);
  v19 = a3[1];
  v20 = *a3;
  v17 = (__n128)a3[3];
  v18 = a3[2];
  v9 = *((_QWORD *)a3 + 8);
  v10 = *((_QWORD *)a3 + 9);
  v11 = *((_WORD *)a3 + 40);
  v12 = *((_BYTE *)a3 + 82);
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v13;
  v14 = a5 + *(int *)(a4 + 20);
  *(_BYTE *)(a5 + 32) = v8;
  sub_1A91F5D6C(a2, v14);
  v15 = a5 + *(int *)(a4 + 24);
  *(_OWORD *)v15 = v20;
  *(_OWORD *)(v15 + 16) = v19;
  result = v17;
  *(_OWORD *)(v15 + 32) = v18;
  *(__n128 *)(v15 + 48) = v17;
  *(_QWORD *)(v15 + 64) = v9;
  *(_QWORD *)(v15 + 72) = v10;
  *(_BYTE *)(v15 + 82) = v12;
  *(_WORD *)(v15 + 80) = v11;
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for UpNextEpisodeListBuilder(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *__dst;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  char v102;
  unint64_t v103;
  unint64_t v104;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_BYTE *)(a2 + 32);
    sub_1A912C880(*(_QWORD *)a2, v8, v9, v10, v11);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v12 = *(int *)(v6 + 20);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    v15 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v94 = v16;
      v19 = v14[1];
      v103 = a1;
      *v13 = *v14;
      v13[1] = v19;
      v20 = v14[3];
      v13[2] = v14[2];
      v13[3] = v20;
      v21 = v14[5];
      v13[4] = v14[4];
      v13[5] = v21;
      v13[6] = v14[6];
      *((_BYTE *)v13 + 56) = *((_BYTE *)v14 + 56);
      v22 = v14[8];
      *((_BYTE *)v13 + 72) = *((_BYTE *)v14 + 72);
      v13[8] = v22;
      v23 = v14[11];
      v13[10] = v14[10];
      v13[11] = v23;
      v24 = v14[13];
      v13[12] = v14[12];
      v13[13] = v24;
      v25 = v14[15];
      v13[14] = v14[14];
      v13[15] = v25;
      v26 = v15[12];
      __dst = (char *)v13 + v26;
      v95 = (char *)v14 + v26;
      v27 = sub_1A93F726C();
      v100 = *(_QWORD *)(v27 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v101 = v28;
      if (v28(v95, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(__dst, v95, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(__dst, v95, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(__dst, 0, 1, v27);
      }
      v30 = v15[13];
      v31 = (_QWORD *)((char *)v13 + v30);
      v32 = (_QWORD *)((char *)v14 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      *(_QWORD *)((char *)v13 + v15[14]) = *(_QWORD *)((char *)v14 + v15[14]);
      v34 = v15[15];
      v35 = (char *)v13 + v34;
      v36 = (char *)v14 + v34;
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v36[8];
      v37 = v15[16];
      v38 = (char *)v13 + v37;
      v39 = (char *)v14 + v37;
      swift_bridgeObjectRetain();
      v98 = v27;
      v99 = v6;
      if (v28(v39, 1, v27))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v38, v39, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v38, 0, 1, v27);
      }
      v41 = v15[17];
      v42 = (_QWORD *)((char *)v13 + v41);
      v43 = (_QWORD *)((char *)v14 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *(_QWORD *)((char *)v13 + v15[18]) = *(_QWORD *)((char *)v14 + v15[18]);
      *((_BYTE *)v13 + v15[19]) = *((_BYTE *)v14 + v15[19]);
      v45 = v15[20];
      v96 = (char *)v13 + v45;
      v46 = (char *)v14 + v45;
      v47 = sub_1A93F738C();
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v49(v46, 1, v47))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v96, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v96, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v96, 0, 1, v47);
      }
      v51 = v15[21];
      v52 = (_QWORD *)((char *)v13 + v51);
      v53 = (_QWORD *)((char *)v14 + v51);
      v54 = v53[1];
      *v52 = *v53;
      v52[1] = v54;
      *((_BYTE *)v13 + v15[22]) = *((_BYTE *)v14 + v15[22]);
      *((_BYTE *)v13 + v15[23]) = *((_BYTE *)v14 + v15[23]);
      *((_BYTE *)v13 + v15[24]) = *((_BYTE *)v14 + v15[24]);
      *((_BYTE *)v13 + v15[25]) = *((_BYTE *)v14 + v15[25]);
      *((_BYTE *)v13 + v15[26]) = *((_BYTE *)v14 + v15[26]);
      *((_BYTE *)v13 + v15[27]) = *((_BYTE *)v14 + v15[27]);
      *((_BYTE *)v13 + v15[28]) = *((_BYTE *)v14 + v15[28]);
      *(_QWORD *)((char *)v13 + v15[29]) = *(_QWORD *)((char *)v14 + v15[29]);
      *(_QWORD *)((char *)v13 + v15[30]) = *(_QWORD *)((char *)v14 + v15[30]);
      *((_BYTE *)v13 + v15[31]) = *((_BYTE *)v14 + v15[31]);
      v55 = v15[32];
      v56 = (_QWORD *)((char *)v13 + v55);
      v57 = (_QWORD *)((char *)v14 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      *(_QWORD *)((char *)v13 + v15[33]) = *(_QWORD *)((char *)v14 + v15[33]);
      v59 = v15[34];
      v60 = (_QWORD *)((char *)v13 + v59);
      v61 = (_QWORD *)((char *)v14 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = v15[35];
      v64 = (_QWORD *)((char *)v13 + v63);
      v65 = (_QWORD *)((char *)v14 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v15[36];
      v97 = (char *)v13 + v67;
      v68 = (char *)v14 + v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v101(v68, 1, v98))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v97, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v97, v68, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v98);
      }
      v70 = v15[37];
      v71 = (_QWORD *)((char *)v13 + v70);
      v72 = (_QWORD *)((char *)v14 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = v15[38];
      v75 = (_QWORD *)((char *)v13 + v74);
      v76 = (_QWORD *)((char *)v14 + v74);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      *((_BYTE *)v13 + v15[39]) = *((_BYTE *)v14 + v15[39]);
      *((_BYTE *)v13 + v15[40]) = *((_BYTE *)v14 + v15[40]);
      *((_BYTE *)v13 + v15[41]) = *((_BYTE *)v14 + v15[41]);
      *((_BYTE *)v13 + v15[42]) = *((_BYTE *)v14 + v15[42]);
      *((_BYTE *)v13 + v15[43]) = *((_BYTE *)v14 + v15[43]);
      *((_BYTE *)v13 + v15[44]) = *((_BYTE *)v14 + v15[44]);
      *((_BYTE *)v13 + v15[45]) = *((_BYTE *)v14 + v15[45]);
      v78 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v94 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v78(v13, 0, 1, v15);
      a1 = v103;
      v6 = v99;
    }
    v79 = *(int *)(v6 + 24);
    v80 = a1 + v79;
    v81 = (uint64_t *)(a2 + v79);
    if (*(_BYTE *)(a2 + v79 + 80) == 2)
    {
      v82 = *((_OWORD *)v81 + 3);
      *(_OWORD *)(v80 + 32) = *((_OWORD *)v81 + 2);
      *(_OWORD *)(v80 + 48) = v82;
      *(_OWORD *)(v80 + 64) = *((_OWORD *)v81 + 4);
      *(_DWORD *)(v80 + 79) = *(_DWORD *)((char *)v81 + 79);
      v83 = *((_OWORD *)v81 + 1);
      *(_OWORD *)v80 = *(_OWORD *)v81;
      *(_OWORD *)(v80 + 16) = v83;
    }
    else
    {
      v104 = a1;
      v84 = *v81;
      v85 = v81[1];
      v86 = v81[2];
      v87 = v81[3];
      v88 = v81[4];
      v89 = v81[5];
      v90 = v81[6];
      v91 = v81[7];
      v102 = *((_BYTE *)v81 + 64);
      sub_1A90519B4(*v81, v85, v86, v87, v88, v89, v90, v91, v102);
      *(_QWORD *)v80 = v84;
      *(_QWORD *)(v80 + 8) = v85;
      a1 = v104;
      *(_QWORD *)(v80 + 16) = v86;
      *(_QWORD *)(v80 + 24) = v87;
      *(_QWORD *)(v80 + 32) = v88;
      *(_QWORD *)(v80 + 40) = v89;
      *(_QWORD *)(v80 + 48) = v90;
      *(_QWORD *)(v80 + 56) = v91;
      *(_BYTE *)(v80 + 64) = v102;
      *(_BYTE *)(v80 + 65) = *((_BYTE *)v81 + 65);
      *(_QWORD *)(v80 + 72) = v81[9];
      *(_BYTE *)(v80 + 80) = *((_BYTE *)v81 + 80);
      *(_WORD *)(v80 + 81) = *(_WORD *)((char *)v81 + 81);
    }
  }
  return a1;
}

uint64_t destroy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1A912C6B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v4 + v5[12];
    v8 = sub_1A93F726C();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_bridgeObjectRelease();
    v11 = v4 + v5[16];
    if (!v10(v11, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    swift_release();
    v12 = v4 + v5[20];
    v13 = sub_1A93F738C();
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v4 + v5[36];
    if (!v10(v15, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = a1 + *(int *)(a2 + 24);
  if (*(_BYTE *)(v16 + 80) != 2)
    return sub_1A90531EC(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(_QWORD *)(v16 + 24), *(_QWORD *)(v16 + 32), *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 56), *(_BYTE *)(v16 + 64));
  return result;
}

uint64_t initializeWithCopy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  char *__dst;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  char v101;
  uint64_t v102;
  uint64_t v103;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v7, v8, v9, v10);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v11 = *(int *)(a3 + 20);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(v4 + v11);
  v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v96 = v15;
    v97 = a3;
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    v18 = v13[3];
    v102 = a1;
    v12[2] = v13[2];
    v12[3] = v18;
    v19 = v13[5];
    v12[4] = v13[4];
    v12[5] = v19;
    v12[6] = v13[6];
    *((_BYTE *)v12 + 56) = *((_BYTE *)v13 + 56);
    v20 = v13[8];
    *((_BYTE *)v12 + 72) = *((_BYTE *)v13 + 72);
    v12[8] = v20;
    v21 = v13[11];
    v12[10] = v13[10];
    v12[11] = v21;
    v22 = v13[13];
    v12[12] = v13[12];
    v12[13] = v22;
    v23 = v13[15];
    v12[14] = v13[14];
    v12[15] = v23;
    v24 = v14[12];
    __dst = (char *)v12 + v24;
    v93 = (char *)v13 + v24;
    v25 = sub_1A93F726C();
    v99 = *(_QWORD *)(v25 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v100 = v26;
    if (v26(v93, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v93, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(__dst, v93, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(__dst, 0, 1, v25);
    }
    v28 = v14[13];
    v29 = (_QWORD *)((char *)v12 + v28);
    v30 = (_QWORD *)((char *)v13 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    *(_QWORD *)((char *)v12 + v14[14]) = *(_QWORD *)((char *)v13 + v14[14]);
    v32 = v14[15];
    v33 = (char *)v12 + v32;
    v34 = (char *)v13 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = v14[16];
    v36 = (char *)v12 + v35;
    v37 = (char *)v13 + v35;
    swift_bridgeObjectRetain();
    v98 = v4;
    v95 = v25;
    if (v26(v37, 1, v25))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v36, v37, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v36, 0, 1, v25);
    }
    v39 = v14[17];
    v40 = (_QWORD *)((char *)v12 + v39);
    v41 = (_QWORD *)((char *)v13 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *(_QWORD *)((char *)v12 + v14[18]) = *(_QWORD *)((char *)v13 + v14[18]);
    *((_BYTE *)v12 + v14[19]) = *((_BYTE *)v13 + v14[19]);
    v43 = v14[20];
    v44 = (char *)v12 + v43;
    v45 = (char *)v13 + v43;
    v46 = sub_1A93F738C();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v48(v45, 1, v46))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v50 = v14[21];
    v51 = (_QWORD *)((char *)v12 + v50);
    v52 = (_QWORD *)((char *)v13 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    *((_BYTE *)v12 + v14[22]) = *((_BYTE *)v13 + v14[22]);
    *((_BYTE *)v12 + v14[23]) = *((_BYTE *)v13 + v14[23]);
    *((_BYTE *)v12 + v14[24]) = *((_BYTE *)v13 + v14[24]);
    *((_BYTE *)v12 + v14[25]) = *((_BYTE *)v13 + v14[25]);
    *((_BYTE *)v12 + v14[26]) = *((_BYTE *)v13 + v14[26]);
    *((_BYTE *)v12 + v14[27]) = *((_BYTE *)v13 + v14[27]);
    *((_BYTE *)v12 + v14[28]) = *((_BYTE *)v13 + v14[28]);
    *(_QWORD *)((char *)v12 + v14[29]) = *(_QWORD *)((char *)v13 + v14[29]);
    *(_QWORD *)((char *)v12 + v14[30]) = *(_QWORD *)((char *)v13 + v14[30]);
    *((_BYTE *)v12 + v14[31]) = *((_BYTE *)v13 + v14[31]);
    v54 = v14[32];
    v55 = (_QWORD *)((char *)v12 + v54);
    v56 = (_QWORD *)((char *)v13 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    *(_QWORD *)((char *)v12 + v14[33]) = *(_QWORD *)((char *)v13 + v14[33]);
    v58 = v14[34];
    v59 = (_QWORD *)((char *)v12 + v58);
    v60 = (_QWORD *)((char *)v13 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = v14[35];
    v63 = (_QWORD *)((char *)v12 + v62);
    v64 = (_QWORD *)((char *)v13 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = v14[36];
    v67 = (char *)v12 + v66;
    v68 = (char *)v13 + v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v100(v68, 1, v95))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v67, v68, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v67, 0, 1, v95);
    }
    a3 = v97;
    v70 = v14[37];
    v71 = (_QWORD *)((char *)v12 + v70);
    v72 = (_QWORD *)((char *)v13 + v70);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = v14[38];
    v75 = (_QWORD *)((char *)v12 + v74);
    v76 = (_QWORD *)((char *)v13 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    *((_BYTE *)v12 + v14[39]) = *((_BYTE *)v13 + v14[39]);
    *((_BYTE *)v12 + v14[40]) = *((_BYTE *)v13 + v14[40]);
    *((_BYTE *)v12 + v14[41]) = *((_BYTE *)v13 + v14[41]);
    *((_BYTE *)v12 + v14[42]) = *((_BYTE *)v13 + v14[42]);
    *((_BYTE *)v12 + v14[43]) = *((_BYTE *)v13 + v14[43]);
    *((_BYTE *)v12 + v14[44]) = *((_BYTE *)v13 + v14[44]);
    *((_BYTE *)v12 + v14[45]) = *((_BYTE *)v13 + v14[45]);
    v78 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v96 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78(v12, 0, 1, v14);
    a1 = v102;
    v4 = v98;
  }
  v79 = *(int *)(a3 + 24);
  v80 = a1 + v79;
  v81 = (uint64_t *)(v4 + v79);
  if (*((_BYTE *)v81 + 80) == 2)
  {
    v82 = *((_OWORD *)v81 + 3);
    *(_OWORD *)(v80 + 32) = *((_OWORD *)v81 + 2);
    *(_OWORD *)(v80 + 48) = v82;
    *(_OWORD *)(v80 + 64) = *((_OWORD *)v81 + 4);
    *(_DWORD *)(v80 + 79) = *(_DWORD *)((char *)v81 + 79);
    v83 = *((_OWORD *)v81 + 1);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    *(_OWORD *)(v80 + 16) = v83;
  }
  else
  {
    v103 = a1;
    v84 = *v81;
    v85 = v81[1];
    v86 = v81[2];
    v87 = v81[3];
    v88 = v81[4];
    v89 = v81[5];
    v90 = v81[6];
    v91 = v81[7];
    v101 = *((_BYTE *)v81 + 64);
    sub_1A90519B4(*v81, v85, v86, v87, v88, v89, v90, v91, v101);
    *(_QWORD *)v80 = v84;
    *(_QWORD *)(v80 + 8) = v85;
    a1 = v103;
    *(_QWORD *)(v80 + 16) = v86;
    *(_QWORD *)(v80 + 24) = v87;
    *(_QWORD *)(v80 + 32) = v88;
    *(_QWORD *)(v80 + 40) = v89;
    *(_QWORD *)(v80 + 48) = v90;
    *(_QWORD *)(v80 + 56) = v91;
    *(_BYTE *)(v80 + 64) = v101;
    *(_BYTE *)(v80 + 65) = *((_BYTE *)v81 + 65);
    *(_QWORD *)(v80 + 72) = v81[9];
    *(_BYTE *)(v80 + 80) = *((_BYTE *)v81 + 80);
    *(_WORD *)(v80 + 81) = *(_WORD *)((char *)v81 + 81);
  }
  return a1;
}

uint64_t assignWithCopy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, int *);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(const void *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  void (*v85)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(void *, uint64_t, uint64_t);
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  void *v127;
  const void *v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  int v141;
  int v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  void *__dst;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_1A912C880(*(_QWORD *)a2, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  v15 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v10;
  sub_1A912C6B4(v11, v12, v13, v14, v15);
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = v4 + v16;
  v19 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  LODWORD(v9) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v9)
  {
    if (v22)
    {
      sub_1A916E4E4(v17);
      goto LABEL_7;
    }
    v184 = v4;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v18 + 48);
    *(_BYTE *)(v17 + 56) = *(_BYTE *)(v18 + 56);
    *(_QWORD *)(v17 + 48) = v31;
    v32 = *(_QWORD *)(v18 + 64);
    *(_BYTE *)(v17 + 72) = *(_BYTE *)(v18 + 72);
    *(_QWORD *)(v17 + 64) = v32;
    *(_QWORD *)(v17 + 80) = *(_QWORD *)(v18 + 80);
    *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
    *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + 112) = *(_QWORD *)(v18 + 112);
    *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = v19[12];
    v34 = (void *)(v17 + v33);
    v35 = (void *)(v18 + v33);
    v36 = sub_1A93F726C();
    v182 = *(_QWORD *)(v36 - 8);
    v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v182 + 48);
    v38 = v37(v34, 1, v36);
    v181 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37;
    v39 = v37(v35, 1, v36);
    if (v38)
    {
      if (v39)
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v41 = v36;
      }
      else
      {
        v41 = v36;
        (*(void (**)(void *, void *, uint64_t))(v182 + 16))(v34, v35, v36);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v34, 0, 1, v36);
      }
    }
    else
    {
      v41 = v36;
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v182 + 8))(v34, v36);
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v182 + 24))(v34, v35, v36);
      }
    }
    v87 = v19[13];
    v88 = (_QWORD *)(v17 + v87);
    v89 = (_QWORD *)(v18 + v87);
    *v88 = *v89;
    v88[1] = v89[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + v19[14]) = *(_QWORD *)(v18 + v19[14]);
    v90 = v19[15];
    v91 = v17 + v90;
    v92 = v18 + v90;
    v93 = *(_BYTE *)(v92 + 8);
    *(_QWORD *)v91 = *(_QWORD *)v92;
    *(_BYTE *)(v91 + 8) = v93;
    v94 = v19[16];
    v95 = (void *)(v17 + v94);
    v96 = (const void *)(v18 + v94);
    v97 = v181(v17 + v94, 1, v41);
    v98 = v181((uint64_t)v96, 1, v41);
    v186 = a3;
    v189 = a1;
    if (v97)
    {
      if (v98)
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        v100 = v36;
      }
      else
      {
        v100 = v36;
        (*(void (**)(void *, const void *, uint64_t))(v182 + 16))(v95, v96, v36);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v95, 0, 1, v36);
      }
    }
    else
    {
      v100 = v36;
      if (v98)
      {
        (*(void (**)(void *, uint64_t))(v182 + 8))(v95, v36);
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v182 + 24))(v95, v96, v36);
      }
    }
    v102 = v19[17];
    v103 = (_QWORD *)(v17 + v102);
    v104 = (_QWORD *)(v18 + v102);
    *v103 = *v104;
    v103[1] = v104[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + v19[18]) = *(_QWORD *)(v18 + v19[18]);
    swift_retain();
    swift_release();
    *(_BYTE *)(v17 + v19[19]) = *(_BYTE *)(v18 + v19[19]);
    v105 = v19[20];
    v106 = (void *)(v17 + v105);
    v107 = (void *)(v18 + v105);
    v108 = sub_1A93F738C();
    v109 = *(_QWORD *)(v108 - 8);
    v110 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v109 + 48);
    v111 = v110(v106, 1, v108);
    v112 = v110(v107, 1, v108);
    if (v111)
    {
      a1 = v189;
      if (!v112)
      {
        (*(void (**)(void *, void *, uint64_t))(v109 + 16))(v106, v107, v108);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
        goto LABEL_39;
      }
    }
    else
    {
      a1 = v189;
      if (!v112)
      {
        (*(void (**)(void *, void *, uint64_t))(v109 + 24))(v106, v107, v108);
LABEL_39:
        v114 = v19[21];
        v115 = (_QWORD *)(v17 + v114);
        v116 = (_QWORD *)(v18 + v114);
        *v115 = *v116;
        v115[1] = v116[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v17 + v19[22]) = *(_BYTE *)(v18 + v19[22]);
        *(_BYTE *)(v17 + v19[23]) = *(_BYTE *)(v18 + v19[23]);
        *(_BYTE *)(v17 + v19[24]) = *(_BYTE *)(v18 + v19[24]);
        *(_BYTE *)(v17 + v19[25]) = *(_BYTE *)(v18 + v19[25]);
        *(_BYTE *)(v17 + v19[26]) = *(_BYTE *)(v18 + v19[26]);
        *(_BYTE *)(v17 + v19[27]) = *(_BYTE *)(v18 + v19[27]);
        *(_BYTE *)(v17 + v19[28]) = *(_BYTE *)(v18 + v19[28]);
        *(_QWORD *)(v17 + v19[29]) = *(_QWORD *)(v18 + v19[29]);
        *(_QWORD *)(v17 + v19[30]) = *(_QWORD *)(v18 + v19[30]);
        *(_BYTE *)(v17 + v19[31]) = *(_BYTE *)(v18 + v19[31]);
        v117 = v19[32];
        v118 = (_QWORD *)(v17 + v117);
        v119 = (_QWORD *)(v18 + v117);
        *v118 = *v119;
        v118[1] = v119[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + v19[33]) = *(_QWORD *)(v18 + v19[33]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v120 = v19[34];
        v121 = (_QWORD *)(v17 + v120);
        v122 = (_QWORD *)(v18 + v120);
        *v121 = *v122;
        v121[1] = v122[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v123 = v19[35];
        v124 = (_QWORD *)(v17 + v123);
        v125 = (_QWORD *)(v18 + v123);
        *v124 = *v125;
        v124[1] = v125[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v126 = v19[36];
        v127 = (void *)(v17 + v126);
        v128 = (const void *)(v18 + v126);
        v129 = v181(v17 + v126, 1, v100);
        v130 = v181((uint64_t)v128, 1, v100);
        if (v129)
        {
          if (!v130)
          {
            (*(void (**)(void *, const void *, uint64_t))(v182 + 16))(v127, v128, v100);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v127, 0, 1, v100);
LABEL_45:
            v132 = v19[37];
            v133 = (_QWORD *)(v17 + v132);
            v134 = (_QWORD *)(v18 + v132);
            *v133 = *v134;
            v133[1] = v134[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v135 = v19[38];
            v136 = (_QWORD *)(v17 + v135);
            v137 = (_QWORD *)(v18 + v135);
            *v136 = *v137;
            v136[1] = v137[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v17 + v19[39]) = *(_BYTE *)(v18 + v19[39]);
            *(_BYTE *)(v17 + v19[40]) = *(_BYTE *)(v18 + v19[40]);
            *(_BYTE *)(v17 + v19[41]) = *(_BYTE *)(v18 + v19[41]);
            *(_BYTE *)(v17 + v19[42]) = *(_BYTE *)(v18 + v19[42]);
            *(_BYTE *)(v17 + v19[43]) = *(_BYTE *)(v18 + v19[43]);
            *(_BYTE *)(v17 + v19[44]) = *(_BYTE *)(v18 + v19[44]);
            *(_BYTE *)(v17 + v19[45]) = *(_BYTE *)(v18 + v19[45]);
            v4 = v184;
            a3 = v186;
            goto LABEL_46;
          }
        }
        else
        {
          if (!v130)
          {
            (*(void (**)(void *, const void *, uint64_t))(v182 + 24))(v127, v128, v100);
            goto LABEL_45;
          }
          (*(void (**)(void *, uint64_t))(v182 + 8))(v127, v100);
        }
        v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        goto LABEL_45;
      }
      (*(void (**)(void *, uint64_t))(v109 + 8))(v106, v108);
    }
    v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_39;
  }
  if (v22)
  {
LABEL_7:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy((void *)v17, (const void *)v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_46;
  }
  v179 = v20;
  v183 = v4;
  v185 = a3;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  v23 = *(_QWORD *)(v18 + 48);
  *(_BYTE *)(v17 + 56) = *(_BYTE *)(v18 + 56);
  *(_QWORD *)(v17 + 48) = v23;
  v24 = *(_QWORD *)(v18 + 64);
  *(_BYTE *)(v17 + 72) = *(_BYTE *)(v18 + 72);
  *(_QWORD *)(v17 + 64) = v24;
  *(_QWORD *)(v17 + 80) = *(_QWORD *)(v18 + 80);
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
  *(_QWORD *)(v17 + 112) = *(_QWORD *)(v18 + 112);
  *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
  v25 = v19[12];
  __dst = (void *)(v17 + v25);
  v26 = (const void *)(v18 + v25);
  v27 = sub_1A93F726C();
  v180 = *(_QWORD *)(v27 - 8);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v180 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v180 + 16))(__dst, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v180 + 56))(__dst, 0, 1, v27);
  }
  v42 = v19[13];
  v43 = (_QWORD *)(v17 + v42);
  v44 = (_QWORD *)(v18 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  *(_QWORD *)(v17 + v19[14]) = *(_QWORD *)(v18 + v19[14]);
  v45 = v19[15];
  v46 = v17 + v45;
  v47 = (uint64_t *)(v18 + v45);
  v48 = *v47;
  *(_BYTE *)(v46 + 8) = *((_BYTE *)v47 + 8);
  *(_QWORD *)v46 = v48;
  v49 = v19[16];
  v50 = (void *)(v17 + v49);
  v51 = (const void *)(v18 + v49);
  swift_bridgeObjectRetain();
  v178 = v27;
  if (v28(v51, 1, v27))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v180 + 16))(v50, v51, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v50, 0, 1, v27);
  }
  v53 = v19[17];
  v54 = (_QWORD *)(v17 + v53);
  v55 = (_QWORD *)(v18 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  *(_QWORD *)(v17 + v19[18]) = *(_QWORD *)(v18 + v19[18]);
  *(_BYTE *)(v17 + v19[19]) = *(_BYTE *)(v18 + v19[19]);
  v56 = v19[20];
  v57 = (void *)(v17 + v56);
  v58 = (const void *)(v18 + v56);
  v59 = sub_1A93F738C();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v61(v58, 1, v59))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v60 + 16))(v57, v58, v59);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  v63 = v19[21];
  v64 = (_QWORD *)(v17 + v63);
  v65 = (_QWORD *)(v18 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  *(_BYTE *)(v17 + v19[22]) = *(_BYTE *)(v18 + v19[22]);
  *(_BYTE *)(v17 + v19[23]) = *(_BYTE *)(v18 + v19[23]);
  *(_BYTE *)(v17 + v19[24]) = *(_BYTE *)(v18 + v19[24]);
  *(_BYTE *)(v17 + v19[25]) = *(_BYTE *)(v18 + v19[25]);
  *(_BYTE *)(v17 + v19[26]) = *(_BYTE *)(v18 + v19[26]);
  *(_BYTE *)(v17 + v19[27]) = *(_BYTE *)(v18 + v19[27]);
  *(_BYTE *)(v17 + v19[28]) = *(_BYTE *)(v18 + v19[28]);
  *(_QWORD *)(v17 + v19[29]) = *(_QWORD *)(v18 + v19[29]);
  *(_QWORD *)(v17 + v19[30]) = *(_QWORD *)(v18 + v19[30]);
  *(_BYTE *)(v17 + v19[31]) = *(_BYTE *)(v18 + v19[31]);
  v66 = v19[32];
  v67 = (_QWORD *)(v17 + v66);
  v68 = (_QWORD *)(v18 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  *(_QWORD *)(v17 + v19[33]) = *(_QWORD *)(v18 + v19[33]);
  v69 = v19[34];
  v70 = (_QWORD *)(v17 + v69);
  v71 = (_QWORD *)(v18 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  v72 = v19[35];
  v73 = (_QWORD *)(v17 + v72);
  v74 = (_QWORD *)(v18 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  v75 = v19[36];
  v76 = (void *)(v17 + v75);
  v77 = (const void *)(v18 + v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v77, 1, v178))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v180 + 16))(v76, v77, v178);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v76, 0, 1, v178);
  }
  a3 = v185;
  v79 = v19[37];
  v80 = (_QWORD *)(v17 + v79);
  v81 = (_QWORD *)(v18 + v79);
  *v80 = *v81;
  v80[1] = v81[1];
  v82 = v19[38];
  v83 = (_QWORD *)(v17 + v82);
  v84 = (_QWORD *)(v18 + v82);
  *v83 = *v84;
  v83[1] = v84[1];
  *(_BYTE *)(v17 + v19[39]) = *(_BYTE *)(v18 + v19[39]);
  *(_BYTE *)(v17 + v19[40]) = *(_BYTE *)(v18 + v19[40]);
  *(_BYTE *)(v17 + v19[41]) = *(_BYTE *)(v18 + v19[41]);
  *(_BYTE *)(v17 + v19[42]) = *(_BYTE *)(v18 + v19[42]);
  *(_BYTE *)(v17 + v19[43]) = *(_BYTE *)(v18 + v19[43]);
  *(_BYTE *)(v17 + v19[44]) = *(_BYTE *)(v18 + v19[44]);
  *(_BYTE *)(v17 + v19[45]) = *(_BYTE *)(v18 + v19[45]);
  v85 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v179 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v85(v17, 0, 1, v19);
  v4 = v183;
LABEL_46:
  v138 = *(int *)(a3 + 24);
  v139 = a1 + v138;
  v140 = (uint64_t *)(v4 + v138);
  v141 = *(unsigned __int8 *)(a1 + v138 + 80);
  v142 = *(unsigned __int8 *)(v4 + v138 + 80);
  if (v141 != 2)
  {
    if (v142 == 2)
    {
      sub_1A916DE60(v139);
      v147 = *((_OWORD *)v140 + 1);
      *(_OWORD *)v139 = *(_OWORD *)v140;
      *(_OWORD *)(v139 + 16) = v147;
      v149 = *((_OWORD *)v140 + 3);
      v148 = *((_OWORD *)v140 + 4);
      v150 = *((_OWORD *)v140 + 2);
      *(_DWORD *)(v139 + 79) = *(_DWORD *)((char *)v140 + 79);
      *(_OWORD *)(v139 + 48) = v149;
      *(_OWORD *)(v139 + 64) = v148;
      *(_OWORD *)(v139 + 32) = v150;
      return a1;
    }
    v191 = a1;
    v159 = *v140;
    v160 = v140[1];
    v161 = v140[2];
    v162 = v140[3];
    v163 = v140[4];
    v164 = v140[5];
    v165 = v140[6];
    v166 = v140[7];
    v188 = *((_BYTE *)v140 + 64);
    sub_1A90519B4(*v140, v160, v161, v162, v163, v164, v165, v166, v188);
    v167 = *(_QWORD *)v139;
    v168 = *(_QWORD *)(v139 + 8);
    v169 = *(_QWORD *)(v139 + 16);
    v170 = *(_QWORD *)(v139 + 24);
    v171 = *(_QWORD *)(v139 + 32);
    v172 = *(_QWORD *)(v139 + 40);
    v173 = *(_QWORD *)(v139 + 48);
    v174 = *(_QWORD *)(v139 + 56);
    v175 = *(_BYTE *)(v139 + 64);
    *(_QWORD *)v139 = v159;
    *(_QWORD *)(v139 + 8) = v160;
    a1 = v191;
    *(_QWORD *)(v139 + 16) = v161;
    *(_QWORD *)(v139 + 24) = v162;
    *(_QWORD *)(v139 + 32) = v163;
    *(_QWORD *)(v139 + 40) = v164;
    *(_QWORD *)(v139 + 48) = v165;
    *(_QWORD *)(v139 + 56) = v166;
    *(_BYTE *)(v139 + 64) = v188;
    sub_1A90531EC(v167, v168, v169, v170, v171, v172, v173, v174, v175);
LABEL_53:
    *(_BYTE *)(v139 + 65) = *((_BYTE *)v140 + 65);
    *(_QWORD *)(v139 + 72) = v140[9];
    *(_BYTE *)(v139 + 80) = *((_BYTE *)v140 + 80);
    *(_BYTE *)(v139 + 81) = *((_BYTE *)v140 + 81);
    *(_BYTE *)(v139 + 82) = *((_BYTE *)v140 + 82);
    return a1;
  }
  if (v142 != 2)
  {
    v190 = a1;
    v151 = *v140;
    v152 = v140[1];
    v153 = v140[2];
    v154 = v140[3];
    v155 = v140[4];
    v156 = v140[5];
    v157 = v140[6];
    v158 = v140[7];
    v187 = *((_BYTE *)v140 + 64);
    sub_1A90519B4(*v140, v152, v153, v154, v155, v156, v157, v158, v187);
    *(_QWORD *)v139 = v151;
    *(_QWORD *)(v139 + 8) = v152;
    a1 = v190;
    *(_QWORD *)(v139 + 16) = v153;
    *(_QWORD *)(v139 + 24) = v154;
    *(_QWORD *)(v139 + 32) = v155;
    *(_QWORD *)(v139 + 40) = v156;
    *(_QWORD *)(v139 + 48) = v157;
    *(_QWORD *)(v139 + 56) = v158;
    *(_BYTE *)(v139 + 64) = v187;
    goto LABEL_53;
  }
  v143 = *((_OWORD *)v140 + 1);
  *(_OWORD *)v139 = *(_OWORD *)v140;
  *(_OWORD *)(v139 + 16) = v143;
  v144 = *((_OWORD *)v140 + 2);
  v145 = *((_OWORD *)v140 + 3);
  v146 = *((_OWORD *)v140 + 4);
  *(_DWORD *)(v139 + 79) = *(_DWORD *)((char *)v140 + 79);
  *(_OWORD *)(v139 + 48) = v145;
  *(_OWORD *)(v139 + 64) = v146;
  *(_OWORD *)(v139 + 32) = v144;
  return a1;
}

uint64_t initializeWithTake for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);

  v3 = a3;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v45 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
    *((_BYTE *)v8 + 56) = *((_BYTE *)v9 + 56);
    *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
    *((_BYTE *)v8 + 72) = *((_BYTE *)v9 + 72);
    v14 = v9[6];
    v8[5] = v9[5];
    v8[6] = v14;
    v8[7] = v9[7];
    v15 = v10[12];
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_1A93F726C();
    v19 = *(_QWORD *)(v18 - 8);
    v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v47(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
    *(_QWORD *)((char *)v8 + v10[14]) = *(_QWORD *)((char *)v9 + v10[14]);
    v21 = v10[15];
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = v10[16];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v46 = v3;
    v44 = v19;
    if (v47((char *)v9 + v24, 1, v18))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v26, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[17]) = *(_OWORD *)((char *)v9 + v10[17]);
    *(_QWORD *)((char *)v8 + v10[18]) = *(_QWORD *)((char *)v9 + v10[18]);
    *((_BYTE *)v8 + v10[19]) = *((_BYTE *)v9 + v10[19]);
    v28 = v10[20];
    v29 = (char *)v8 + v28;
    v30 = (char *)v9 + v28;
    v31 = sub_1A93F738C();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v3 = v46;
    *(_OWORD *)((char *)v8 + v10[21]) = *(_OWORD *)((char *)v9 + v10[21]);
    *((_BYTE *)v8 + v10[22]) = *((_BYTE *)v9 + v10[22]);
    *((_BYTE *)v8 + v10[23]) = *((_BYTE *)v9 + v10[23]);
    *((_BYTE *)v8 + v10[24]) = *((_BYTE *)v9 + v10[24]);
    *((_BYTE *)v8 + v10[25]) = *((_BYTE *)v9 + v10[25]);
    *((_BYTE *)v8 + v10[26]) = *((_BYTE *)v9 + v10[26]);
    *((_BYTE *)v8 + v10[27]) = *((_BYTE *)v9 + v10[27]);
    *((_BYTE *)v8 + v10[28]) = *((_BYTE *)v9 + v10[28]);
    *(_QWORD *)((char *)v8 + v10[29]) = *(_QWORD *)((char *)v9 + v10[29]);
    *(_QWORD *)((char *)v8 + v10[30]) = *(_QWORD *)((char *)v9 + v10[30]);
    *((_BYTE *)v8 + v10[31]) = *((_BYTE *)v9 + v10[31]);
    *(_OWORD *)((char *)v8 + v10[32]) = *(_OWORD *)((char *)v9 + v10[32]);
    *(_QWORD *)((char *)v8 + v10[33]) = *(_QWORD *)((char *)v9 + v10[33]);
    *(_OWORD *)((char *)v8 + v10[34]) = *(_OWORD *)((char *)v9 + v10[34]);
    *(_OWORD *)((char *)v8 + v10[35]) = *(_OWORD *)((char *)v9 + v10[35]);
    v34 = v10[36];
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    if (v47((char *)v9 + v34, 1, v18))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v35, v36, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v35, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[37]) = *(_OWORD *)((char *)v9 + v10[37]);
    *(_OWORD *)((char *)v8 + v10[38]) = *(_OWORD *)((char *)v9 + v10[38]);
    *((_BYTE *)v8 + v10[39]) = *((_BYTE *)v9 + v10[39]);
    *((_BYTE *)v8 + v10[40]) = *((_BYTE *)v9 + v10[40]);
    *((_BYTE *)v8 + v10[41]) = *((_BYTE *)v9 + v10[41]);
    *((_BYTE *)v8 + v10[42]) = *((_BYTE *)v9 + v10[42]);
    *((_BYTE *)v8 + v10[43]) = *((_BYTE *)v9 + v10[43]);
    *((_BYTE *)v8 + v10[44]) = *((_BYTE *)v9 + v10[44]);
    *((_BYTE *)v8 + v10[45]) = *((_BYTE *)v9 + v10[45]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v45 + 56))(v8, 0, 1, v10);
  }
  v38 = *(int *)(v3 + 24);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(_OWORD *)(v40 + 48);
  *(_OWORD *)(v39 + 32) = *(_OWORD *)(v40 + 32);
  *(_OWORD *)(v39 + 48) = v41;
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
  *(_DWORD *)(v39 + 79) = *(_DWORD *)(v40 + 79);
  v42 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v42;
  return a1;
}

uint64_t assignWithTake for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, int *);
  int v19;
  int v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  __int128 v130;
  __int128 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  __int128 v142;
  __int128 v143;
  uint64_t v145;
  unsigned int (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  _OWORD *v151;

  v4 = (_OWORD *)a2;
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = v4[1];
  *(_OWORD *)a1 = *v4;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_1A912C6B4(v7, v8, v9, v10, v12);
  v13 = *(int *)(a3 + 20);
  v14 = a1 + v13;
  v15 = (char *)v4 + v13;
  v16 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18((uint64_t)v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      v150 = a3;
      v151 = v4;
      v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v21;
      *(_OWORD *)(v14 + 32) = *((_OWORD *)v15 + 2);
      *(_QWORD *)(v14 + 48) = *((_QWORD *)v15 + 6);
      *(_BYTE *)(v14 + 56) = v15[56];
      *(_QWORD *)(v14 + 64) = *((_QWORD *)v15 + 8);
      *(_BYTE *)(v14 + 72) = v15[72];
      v22 = *((_OWORD *)v15 + 6);
      *(_OWORD *)(v14 + 80) = *((_OWORD *)v15 + 5);
      *(_OWORD *)(v14 + 96) = v22;
      *(_OWORD *)(v14 + 112) = *((_OWORD *)v15 + 7);
      v23 = v16[12];
      v24 = (void *)(v14 + v23);
      v25 = &v15[v23];
      v26 = sub_1A93F726C();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (v28(v25, 1, v26))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[13]) = *(_OWORD *)&v15[v16[13]];
      *(_QWORD *)(v14 + v16[14]) = *(_QWORD *)&v15[v16[14]];
      v45 = v16[15];
      v46 = v14 + v45;
      v47 = &v15[v45];
      *(_BYTE *)(v46 + 8) = v47[8];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v48 = v16[16];
      v49 = (void *)(v14 + v48);
      v50 = &v15[v48];
      v146 = v28;
      v148 = v27;
      if (v28(&v15[v48], 1, v26))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v49, v50, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v49, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[17]) = *(_OWORD *)&v15[v16[17]];
      *(_QWORD *)(v14 + v16[18]) = *(_QWORD *)&v15[v16[18]];
      *(_BYTE *)(v14 + v16[19]) = v15[v16[19]];
      v52 = v16[20];
      v53 = (void *)(v14 + v52);
      v54 = &v15[v52];
      v55 = sub_1A93F738C();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      *(_OWORD *)(v14 + v16[21]) = *(_OWORD *)&v15[v16[21]];
      *(_BYTE *)(v14 + v16[22]) = v15[v16[22]];
      *(_BYTE *)(v14 + v16[23]) = v15[v16[23]];
      *(_BYTE *)(v14 + v16[24]) = v15[v16[24]];
      *(_BYTE *)(v14 + v16[25]) = v15[v16[25]];
      *(_BYTE *)(v14 + v16[26]) = v15[v16[26]];
      *(_BYTE *)(v14 + v16[27]) = v15[v16[27]];
      *(_BYTE *)(v14 + v16[28]) = v15[v16[28]];
      *(_QWORD *)(v14 + v16[29]) = *(_QWORD *)&v15[v16[29]];
      *(_QWORD *)(v14 + v16[30]) = *(_QWORD *)&v15[v16[30]];
      *(_BYTE *)(v14 + v16[31]) = v15[v16[31]];
      *(_OWORD *)(v14 + v16[32]) = *(_OWORD *)&v15[v16[32]];
      *(_QWORD *)(v14 + v16[33]) = *(_QWORD *)&v15[v16[33]];
      *(_OWORD *)(v14 + v16[34]) = *(_OWORD *)&v15[v16[34]];
      *(_OWORD *)(v14 + v16[35]) = *(_OWORD *)&v15[v16[35]];
      v58 = v16[36];
      v59 = (void *)(v14 + v58);
      v60 = &v15[v58];
      if (v146(&v15[v58], 1, v26))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v148 + 32))(v59, v60, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v59, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[37]) = *(_OWORD *)&v15[v16[37]];
      *(_OWORD *)(v14 + v16[38]) = *(_OWORD *)&v15[v16[38]];
      *(_BYTE *)(v14 + v16[39]) = v15[v16[39]];
      *(_BYTE *)(v14 + v16[40]) = v15[v16[40]];
      *(_BYTE *)(v14 + v16[41]) = v15[v16[41]];
      *(_BYTE *)(v14 + v16[42]) = v15[v16[42]];
      *(_BYTE *)(v14 + v16[43]) = v15[v16[43]];
      *(_BYTE *)(v14 + v16[44]) = v15[v16[44]];
      *(_BYTE *)(v14 + v16[45]) = v15[v16[45]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_44;
    }
LABEL_7:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
    memcpy((void *)v14, v15, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_45;
  }
  if (v20)
  {
    sub_1A916E4E4(v14);
    goto LABEL_7;
  }
  v150 = a3;
  v151 = v4;
  v31 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v31;
  swift_bridgeObjectRelease();
  v32 = *((_QWORD *)v15 + 3);
  *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
  *(_QWORD *)(v14 + 24) = v32;
  swift_bridgeObjectRelease();
  v33 = *((_QWORD *)v15 + 5);
  *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
  *(_QWORD *)(v14 + 40) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 48) = *((_QWORD *)v15 + 6);
  *(_BYTE *)(v14 + 56) = v15[56];
  *(_QWORD *)(v14 + 64) = *((_QWORD *)v15 + 8);
  *(_BYTE *)(v14 + 72) = v15[72];
  v34 = *((_QWORD *)v15 + 11);
  *(_QWORD *)(v14 + 80) = *((_QWORD *)v15 + 10);
  *(_QWORD *)(v14 + 88) = v34;
  swift_bridgeObjectRelease();
  v35 = *((_QWORD *)v15 + 13);
  *(_QWORD *)(v14 + 96) = *((_QWORD *)v15 + 12);
  *(_QWORD *)(v14 + 104) = v35;
  swift_bridgeObjectRelease();
  v36 = *((_QWORD *)v15 + 15);
  *(_QWORD *)(v14 + 112) = *((_QWORD *)v15 + 14);
  *(_QWORD *)(v14 + 120) = v36;
  swift_bridgeObjectRelease();
  v37 = v16[12];
  v38 = (void *)(v14 + v37);
  v39 = &v15[v37];
  v40 = sub_1A93F726C();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
LABEL_24:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v41 + 40))(v38, v39, v40);
LABEL_25:
  v63 = v16[13];
  v64 = (_QWORD *)(v14 + v63);
  v65 = &v15[v63];
  v67 = *(_QWORD *)v65;
  v66 = *((_QWORD *)v65 + 1);
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[14]) = *(_QWORD *)&v15[v16[14]];
  v68 = v16[15];
  v69 = v14 + v68;
  v70 = &v15[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *(_BYTE *)(v69 + 8) = v70[8];
  v71 = v16[16];
  v72 = (void *)(v14 + v71);
  v73 = &v15[v71];
  v74 = v42((void *)(v14 + v71), 1, v40);
  v75 = v42(v73, 1, v40);
  v145 = v41;
  v147 = v40;
  v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 32))(v72, v73, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v72, 0, 1, v40);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v75)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v72, v40);
LABEL_30:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v41 + 40))(v72, v73, v40);
LABEL_31:
  v77 = v16[17];
  v78 = (_QWORD *)(v14 + v77);
  v79 = &v15[v77];
  v81 = *(_QWORD *)v79;
  v80 = *((_QWORD *)v79 + 1);
  *v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[18]) = *(_QWORD *)&v15[v16[18]];
  swift_release();
  *(_BYTE *)(v14 + v16[19]) = v15[v16[19]];
  v82 = v16[20];
  v83 = (void *)(v14 + v82);
  v84 = &v15[v82];
  v85 = sub_1A93F738C();
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v83, v84, v85);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v89)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v83, v85);
LABEL_36:
    v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_37:
  v91 = v16[21];
  v92 = (_QWORD *)(v14 + v91);
  v93 = &v15[v91];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *v92 = v95;
  v92[1] = v94;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + v16[22]) = v15[v16[22]];
  *(_BYTE *)(v14 + v16[23]) = v15[v16[23]];
  *(_BYTE *)(v14 + v16[24]) = v15[v16[24]];
  *(_BYTE *)(v14 + v16[25]) = v15[v16[25]];
  *(_BYTE *)(v14 + v16[26]) = v15[v16[26]];
  *(_BYTE *)(v14 + v16[27]) = v15[v16[27]];
  *(_BYTE *)(v14 + v16[28]) = v15[v16[28]];
  *(_QWORD *)(v14 + v16[29]) = *(_QWORD *)&v15[v16[29]];
  *(_QWORD *)(v14 + v16[30]) = *(_QWORD *)&v15[v16[30]];
  *(_BYTE *)(v14 + v16[31]) = v15[v16[31]];
  v96 = v16[32];
  v97 = (_QWORD *)(v14 + v96);
  v98 = &v15[v96];
  v100 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *v97 = v100;
  v97[1] = v99;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[33]) = *(_QWORD *)&v15[v16[33]];
  swift_bridgeObjectRelease();
  v101 = v16[34];
  v102 = (_QWORD *)(v14 + v101);
  v103 = &v15[v101];
  v105 = *(_QWORD *)v103;
  v104 = *((_QWORD *)v103 + 1);
  *v102 = v105;
  v102[1] = v104;
  swift_bridgeObjectRelease();
  v106 = v16[35];
  v107 = (_QWORD *)(v14 + v106);
  v108 = &v15[v106];
  v110 = *(_QWORD *)v108;
  v109 = *((_QWORD *)v108 + 1);
  *v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease();
  v111 = v16[36];
  v112 = (void *)(v14 + v111);
  v113 = &v15[v111];
  v114 = v149(v14 + v111, 1, v147);
  v115 = v149((uint64_t)v113, 1, v147);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(void *, char *, uint64_t))(v145 + 40))(v112, v113, v147);
      goto LABEL_43;
    }
    (*(void (**)(void *, uint64_t))(v145 + 8))(v112, v147);
    goto LABEL_42;
  }
  if (v115)
  {
LABEL_42:
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, char *, uint64_t))(v145 + 32))(v112, v113, v147);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v112, 0, 1, v147);
LABEL_43:
  v117 = v16[37];
  v118 = (_QWORD *)(v14 + v117);
  v119 = &v15[v117];
  v121 = *(_QWORD *)v119;
  v120 = *((_QWORD *)v119 + 1);
  *v118 = v121;
  v118[1] = v120;
  swift_bridgeObjectRelease();
  v122 = v16[38];
  v123 = (_QWORD *)(v14 + v122);
  v124 = &v15[v122];
  v126 = *(_QWORD *)v124;
  v125 = *((_QWORD *)v124 + 1);
  *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + v16[39]) = v15[v16[39]];
  *(_BYTE *)(v14 + v16[40]) = v15[v16[40]];
  *(_BYTE *)(v14 + v16[41]) = v15[v16[41]];
  *(_BYTE *)(v14 + v16[42]) = v15[v16[42]];
  *(_BYTE *)(v14 + v16[43]) = v15[v16[43]];
  *(_BYTE *)(v14 + v16[44]) = v15[v16[44]];
  *(_BYTE *)(v14 + v16[45]) = v15[v16[45]];
LABEL_44:
  a3 = v150;
  v4 = v151;
LABEL_45:
  v127 = *(int *)(a3 + 24);
  v128 = a1 + v127;
  v129 = (char *)v4 + v127;
  if (*(_BYTE *)(a1 + v127 + 80) != 2)
  {
    if (v129[80] != 2)
    {
      v132 = v129[64];
      v133 = *(_QWORD *)v128;
      v134 = *(_QWORD *)(v128 + 8);
      v135 = *(_QWORD *)(v128 + 16);
      v136 = *(_QWORD *)(v128 + 24);
      v137 = *(_QWORD *)(v128 + 32);
      v138 = *(_QWORD *)(v128 + 40);
      v139 = *(_QWORD *)(v128 + 48);
      v140 = *(_QWORD *)(v128 + 56);
      v141 = *(_BYTE *)(v128 + 64);
      v142 = *((_OWORD *)v129 + 1);
      *(_OWORD *)v128 = *(_OWORD *)v129;
      *(_OWORD *)(v128 + 16) = v142;
      v143 = *((_OWORD *)v129 + 3);
      *(_OWORD *)(v128 + 32) = *((_OWORD *)v129 + 2);
      *(_OWORD *)(v128 + 48) = v143;
      *(_BYTE *)(v128 + 64) = v132;
      sub_1A90531EC(v133, v134, v135, v136, v137, v138, v139, v140, v141);
      *(_BYTE *)(v128 + 65) = v129[65];
      *(_QWORD *)(v128 + 72) = *((_QWORD *)v129 + 9);
      *(_BYTE *)(v128 + 80) = v129[80];
      *(_BYTE *)(v128 + 81) = v129[81];
      *(_BYTE *)(v128 + 82) = v129[82];
      return a1;
    }
    sub_1A916DE60(v128);
  }
  v130 = *((_OWORD *)v129 + 3);
  *(_OWORD *)(v128 + 32) = *((_OWORD *)v129 + 2);
  *(_OWORD *)(v128 + 48) = v130;
  *(_OWORD *)(v128 + 64) = *((_OWORD *)v129 + 4);
  *(_DWORD *)(v128 + 79) = *(_DWORD *)(v129 + 79);
  v131 = *((_OWORD *)v129 + 1);
  *(_OWORD *)v128 = *(_OWORD *)v129;
  *(_OWORD *)(v128 + 16) = v131;
  return a1;
}

uint64_t getEnumTagSinglePayload for UpNextEpisodeListBuilder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9315DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for UpNextEpisodeListBuilder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9315E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 80) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for UpNextEpisodeListBuilder()
{
  uint64_t result;

  result = qword_1EEABDC98;
  if (!qword_1EEABDC98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A9315F10()
{
  unint64_t v0;

  sub_1A90D74AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A9315F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9315FD4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A9316000()
{
  uint64_t v0;

  return sub_1A9312CB8(*(BOOL **)(v0 + 16));
}

uint64_t sub_1A931600C()
{
  return swift_deallocObject();
}

uint64_t dispatch thunk of DownloadedAssetIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FileManaging.createDirectory(url:createIntermediates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FileManaging.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FileManaging.removeItem(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileManaging.fileExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FileManaging.fileExists(at:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FileManaging.directoryExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileManaging.contentsOfDirectory(at:includingPropertiesForKeys:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of FileManaging.moveItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t *initializeBufferWithCopyOfBuffer for FileError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for FileError(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for FileError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for FileError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for FileError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for FileError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FileError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9316518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1A93F726C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FileError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9316570(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A93165C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1A93165FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t type metadata accessor for FileError()
{
  uint64_t result;

  result = qword_1EEABDD48;
  if (!qword_1EEABDD48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A9316678()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t static AlbumStringBuilder.platformAwareAlbumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1A93166F8(a3, a4, a5, a6);
}

uint64_t AlbumStringBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AlbumStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A93166F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
    return sub_1A90A18F8(a1, a2, a3 & 1, a4);
  if ((a3 & 1) != 0)
  {
    if (a2 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v11 = swift_allocObject();
      if (a1 < 1)
      {
        v24 = MEMORY[0x1E0DEDC60];
        *(_OWORD *)(v11 + 16) = xmmword_1A9405520;
        v25 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v11 + 56) = v24;
        *(_QWORD *)(v11 + 64) = v25;
        *(_QWORD *)(v11 + 32) = a2;
      }
      else
      {
        *(_OWORD *)(v11 + 16) = xmmword_1A9405950;
        v12 = MEMORY[0x1E0DEDC60];
        v13 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(v11 + 64) = v13;
        *(_QWORD *)(v11 + 32) = a2;
        *(_QWORD *)(v11 + 96) = v12;
        *(_QWORD *)(v11 + 104) = v13;
        *(_QWORD *)(v11 + 72) = a1;
      }
      return sub_1A93F8070();
    }
    if (a1 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
      v17 = swift_allocObject();
      v18 = MEMORY[0x1E0DEDC60];
      *(_OWORD *)(v17 + 16) = xmmword_1A9405520;
      v19 = MEMORY[0x1E0DEDCD8];
      *(_QWORD *)(v17 + 56) = v18;
      *(_QWORD *)(v17 + 64) = v19;
      *(_QWORD *)(v17 + 32) = a1;
      return sub_1A93F8070();
    }
  }
  sub_1A90A1CA8(a4, (uint64_t)v10);
  v20 = sub_1A93F738C();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    sub_1A90AC3A4((uint64_t)v10);
    return 0;
  }
  else
  {
    v22 = (void *)sub_1A93F7314();
    v23 = objc_msgSend(v22, sel_verboseDisplayStringWithoutTime);

    v15 = sub_1A93F8040();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
  }
  return v15;
}

uint64_t method lookup function for AlbumStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A9316988()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

unint64_t sub_1A93169E4()
{
  unint64_t result;

  result = qword_1EEABDD88;
  if (!qword_1EEABDD88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NetworkTaskPriority, &type metadata for NetworkTaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EEABDD88);
  }
  return result;
}

uint64_t sub_1A9316A28()
{
  sub_1A93171C0();
  return sub_1A93F945C();
}

uint64_t sub_1A9316A50()
{
  sub_1A93171C0();
  return sub_1A93F9468();
}

uint64_t sub_1A9316A78()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 2003789939;
  if (*v0 != 1)
    v1 = 0x6C656E6E616863;
  if (*v0)
    return v1;
  else
    return 0x65646F73697065;
}

uint64_t sub_1A9316ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A931728C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9316AF0()
{
  sub_1A931717C();
  return sub_1A93F945C();
}

uint64_t sub_1A9316B18()
{
  sub_1A931717C();
  return sub_1A93F9468();
}

uint64_t sub_1A9316B40()
{
  sub_1A9317248();
  return sub_1A93F945C();
}

uint64_t sub_1A9316B68()
{
  sub_1A9317248();
  return sub_1A93F9468();
}

uint64_t sub_1A9316B90()
{
  sub_1A9317204();
  return sub_1A93F945C();
}

uint64_t sub_1A9316BB8()
{
  sub_1A9317204();
  return sub_1A93F9468();
}

uint64_t LibraryEntity.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  char v35;

  v30 = a2;
  v32 = a4;
  v28 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC028);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC020);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC030);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC018);
  v29 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A931717C();
  sub_1A93F93D8();
  if ((_BYTE)v32)
  {
    if (v32 != 1)
    {
      v35 = 2;
      sub_1A93171C0();
      v20 = v25;
      sub_1A93F8FAC();
      v31 = v30;
      sub_1A9210228();
      v21 = v27;
      sub_1A93F9030();
      v17 = *(void (**)(char *, uint64_t))(v26 + 8);
      v18 = v20;
      v19 = v21;
      goto LABEL_7;
    }
    v34 = 1;
    sub_1A9317204();
    sub_1A93F8FAC();
    v10 = v24;
    sub_1A93F9000();
    v17 = *(void (**)(char *, uint64_t))(v23 + 8);
    v18 = v9;
  }
  else
  {
    v33 = 0;
    sub_1A9317248();
    sub_1A93F8FAC();
    sub_1A93F9000();
    v17 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18 = v13;
  }
  v19 = v10;
LABEL_7:
  v17(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v14);
}

uint64_t LibraryEntity.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (a3 > 1u)
    sub_1A93F930C();
  else
    sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t LibraryEntity.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1A93173D0(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_1A9316F6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1A93173D0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A9316F98(_QWORD *a1)
{
  uint64_t v1;

  return LibraryEntity.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1A9316FB4()
{
  uint64_t v0;

  return LibraryEntity.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1A9316FC0()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 > 1)
    sub_1A93F930C();
  else
    sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9317054()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) && *(_BYTE *)(v0 + 16) != 1)
  {
    sub_1A93F92E8();
    return sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
    return sub_1A93F7FBC();
  }
}

uint64_t sub_1A93170D0()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A93F92DC();
  sub_1A93F92E8();
  if (v1 > 1)
    sub_1A93F930C();
  else
    sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A9317160(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation13LibraryEntityO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

unint64_t sub_1A931717C()
{
  unint64_t result;

  result = qword_1ED2ABF10;
  if (!qword_1ED2ABF10)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CFB4, &type metadata for LibraryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF10);
  }
  return result;
}

unint64_t sub_1A93171C0()
{
  unint64_t result;

  result = qword_1EEABDDA8;
  if (!qword_1EEABDDA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CF64, &type metadata for LibraryEntity.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDDA8);
  }
  return result;
}

unint64_t sub_1A9317204()
{
  unint64_t result;

  result = qword_1ED2ABF28;
  if (!qword_1ED2ABF28)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CF14, &type metadata for LibraryEntity.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF28);
  }
  return result;
}

unint64_t sub_1A9317248()
{
  unint64_t result;

  result = qword_1ED2ABE70;
  if (!qword_1ED2ABE70)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CEC4, &type metadata for LibraryEntity.EpisodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABE70);
  }
  return result;
}

uint64_t sub_1A931728C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F73697065 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A93173D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;

  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDDD8);
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDDE0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDDE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDDF0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v42 = a1;
  v14 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A931717C();
  v15 = v43;
  sub_1A93F93C0();
  if (!v15)
  {
    v35 = v6;
    v16 = v5;
    v17 = v40;
    v18 = v41;
    v43 = v10;
    v19 = sub_1A93F8F94();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      v34 = v9;
      v20 = *(unsigned __int8 *)(v19 + 32);
      if (*(_BYTE *)(v19 + 32))
      {
        if (v20 == 1)
        {
          v46 = 1;
          sub_1A9317204();
          v21 = v17;
          v22 = v34;
          sub_1A93F8EEC();
          v23 = v12;
          v24 = v22;
          v25 = v38;
          v14 = sub_1A93F8F4C();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v24);
        }
        else
        {
          v47 = 2;
          sub_1A93171C0();
          sub_1A93F8EEC();
          sub_1A92102F4();
          v31 = v39;
          sub_1A93F8F7C();
          v32 = v43;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v34);
          v14 = v44;
        }
      }
      else
      {
        v45 = 0;
        sub_1A9317248();
        v30 = v34;
        sub_1A93F8EEC();
        LODWORD(v41) = v20;
        v14 = sub_1A93F8F4C();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v16);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v30);
      }
    }
    else
    {
      v14 = (uint64_t)v12;
      v26 = sub_1A93F8D00();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
      *v28 = &type metadata for LibraryEntity;
      sub_1A93F8EF8();
      sub_1A93F8CE8();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v14, v9);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v14;
}

unint64_t sub_1A9317938()
{
  unint64_t result;

  result = qword_1EEABDDB0;
  if (!qword_1EEABDDB0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for LibraryEntity, &type metadata for LibraryEntity);
    atomic_store(result, (unint64_t *)&qword_1EEABDDB0);
  }
  return result;
}

uint64_t destroy for LibraryEntity(uint64_t a1)
{
  return sub_1A913A0C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s18PodcastsFoundation13LibraryEntityOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A913A9C0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LibraryEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A913A9C0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A913A0C0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LibraryEntity(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A913A0C0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LibraryEntity()
{
  return &type metadata for LibraryEntity;
}

uint64_t storeEnumTagSinglePayload for LibraryEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9317ACC + 4 * byte_1A941CA75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A9317B00 + 4 * byte_1A941CA70[v4]))();
}

uint64_t sub_1A9317B00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9317B08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9317B10);
  return result;
}

uint64_t sub_1A9317B1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9317B24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A9317B28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9317B30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryEntity.CodingKeys()
{
  return &type metadata for LibraryEntity.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryEntity.EpisodeCodingKeys()
{
  return &type metadata for LibraryEntity.EpisodeCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryEntity.ShowCodingKeys()
{
  return &type metadata for LibraryEntity.ShowCodingKeys;
}

uint64_t _s18PodcastsFoundation13LibraryEntityO17EpisodeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9317BB0 + 4 * byte_1A941CA7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9317BD0 + 4 * byte_1A941CA7F[v4]))();
}

_BYTE *sub_1A9317BB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9317BD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9317BD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9317BE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9317BE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9317BF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryEntity.ChannelCodingKeys()
{
  return &type metadata for LibraryEntity.ChannelCodingKeys;
}

unint64_t sub_1A9317C10()
{
  unint64_t result;

  result = qword_1EEABDDB8;
  if (!qword_1EEABDDB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CC74, &type metadata for LibraryEntity.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDDB8);
  }
  return result;
}

unint64_t sub_1A9317C58()
{
  unint64_t result;

  result = qword_1EEABDDC0;
  if (!qword_1EEABDDC0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CD2C, &type metadata for LibraryEntity.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDDC0);
  }
  return result;
}

unint64_t sub_1A9317CA0()
{
  unint64_t result;

  result = qword_1EEABDDC8;
  if (!qword_1EEABDDC8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CDE4, &type metadata for LibraryEntity.EpisodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDDC8);
  }
  return result;
}

unint64_t sub_1A9317CE8()
{
  unint64_t result;

  result = qword_1EEABDDD0;
  if (!qword_1EEABDDD0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CE9C, &type metadata for LibraryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDDD0);
  }
  return result;
}

unint64_t sub_1A9317D30()
{
  unint64_t result;

  result = qword_1ED2ABF58;
  if (!qword_1ED2ABF58)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CD54, &type metadata for LibraryEntity.EpisodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF58);
  }
  return result;
}

unint64_t sub_1A9317D78()
{
  unint64_t result;

  result = qword_1ED2ABF50;
  if (!qword_1ED2ABF50)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CD7C, &type metadata for LibraryEntity.EpisodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF50);
  }
  return result;
}

unint64_t sub_1A9317DC0()
{
  unint64_t result;

  result = qword_1ED2ABF38;
  if (!qword_1ED2ABF38)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CC9C, &type metadata for LibraryEntity.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF38);
  }
  return result;
}

unint64_t sub_1A9317E08()
{
  unint64_t result;

  result = qword_1ED2ABF30;
  if (!qword_1ED2ABF30)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CCC4, &type metadata for LibraryEntity.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF30);
  }
  return result;
}

unint64_t sub_1A9317E50()
{
  unint64_t result;

  result = qword_1ED2ABF48;
  if (!qword_1ED2ABF48)
  {
    result = MEMORY[0x1AF414014]("eN\r<", &type metadata for LibraryEntity.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF48);
  }
  return result;
}

unint64_t sub_1A9317E98()
{
  unint64_t result;

  result = qword_1ED2ABF40;
  if (!qword_1ED2ABF40)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CC0C, &type metadata for LibraryEntity.ChannelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF40);
  }
  return result;
}

unint64_t sub_1A9317EE0()
{
  unint64_t result;

  result = qword_1ED2ABF20;
  if (!qword_1ED2ABF20)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CE0C, &type metadata for LibraryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF20);
  }
  return result;
}

unint64_t sub_1A9317F28()
{
  unint64_t result;

  result = qword_1ED2ABF18;
  if (!qword_1ED2ABF18)
  {
    result = MEMORY[0x1AF414014](&unk_1A941CE34, &type metadata for LibraryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2ABF18);
  }
  return result;
}

uint64_t String.asAdamId.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t AdamID.longValue.getter(uint64_t result)
{
  if (result < 0)
    __break(1u);
  return result;
}

id AdamID.numberValue.getter(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, a1);
}

uint64_t Int64.asAdamId.getter(uint64_t a1)
{
  return a1 & ~(a1 >> 63);
}

uint64_t AdamID.stringValue.getter()
{
  sub_1A915997C();
  return sub_1A93F8B38();
}

uint64_t AdamID.init(value:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t AdamID.init(value:)(uint64_t a1)
{
  return a1 & ~(a1 >> 63);
}

uint64_t AdamID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A9318E00(a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t AdamID.init(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t AdamID.description.getter()
{
  sub_1A915997C();
  return sub_1A93F8B38();
}

uint64_t String.adamID.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static AdamID.missing.getter()
{
  return 1000000000000;
}

unint64_t AdamID.ParseError.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = 0xD000000000000026;
  v2 = *(_QWORD *)(v0 + 8);
  if (v2)
  {
    if (v2 == 1)
    {
      return 0xD000000000000027;
    }
    else
    {
      sub_1A93F8C70();
      sub_1A93F810C();
      sub_1A93F810C();
      sub_1A93F810C();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1A931830C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5548);
  __swift_allocate_value_buffer(v0, qword_1ED2A5820);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A5820);
  return sub_1A93F7530();
}

uint64_t static AdamID.parse(_:)(unint64_t a1, unint64_t a2)
{
  return sub_1A931883C(a1, a2);
}

BOOL static AdamID.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL static AdamID.<= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL static AdamID.> infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

BOOL static AdamID.>= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1A93183C8(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A93183DC(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A93183F0(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A9318404(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t AdamID.init(from:)(_QWORD *a1)
{
  return sub_1A9318E9C(a1);
}

uint64_t sub_1A931842C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A9318E9C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t AdamID.encode(to:)(_QWORD *a1, uint64_t a2)
{
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  v6 = a2;
  sub_1A915997C();
  sub_1A93F8B38();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1A93F912C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1A9318518(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  v6 = v2;
  sub_1A915997C();
  sub_1A93F8B38();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1A93F912C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1A93185DC()
{
  sub_1A915997C();
  return sub_1A93F8B38();
}

unint64_t AdamID.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000011;
}

unint64_t sub_1A93186BC()
{
  return AdamID.debugDescription.getter();
}

uint64_t AdamID.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1A9318D50(a1);
}

uint64_t AdamID.metricsFieldRepresentation()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1A915997C();
  result = sub_1A93F8B38();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A931872C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1A9318D50(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A9318758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1A915997C();
  result = sub_1A93F8B38();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

id AdamID.init(_:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_unsignedLongLongValue);

  return v2;
}

uint64_t BinaryInteger.adamID.getter()
{
  uint64_t v0;

  return sub_1A9318E00(v0);
}

uint64_t static AdamID.missingAdamId.getter()
{
  return 0;
}

uint64_t static AdamID.missingContentId.getter()
{
  return 1000000000000;
}

id AdamID.init(value:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_unsignedLongLongValue);

  return v2;
}

uint64_t sub_1A931883C(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  char v18;
  unsigned __int8 v19;
  unint64_t v20;
  uint64_t v21;
  unsigned __int8 *i;
  unsigned int v23;
  BOOL v24;
  uint64_t v26;
  unsigned __int8 *j;
  unsigned int v28;
  unsigned __int8 v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *k;
  unsigned int v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5538);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = HIBYTE(a2) & 0xF;
  v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v9 = HIBYTE(a2) & 0xF;
  else
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    sub_1A9319160();
    swift_allocError();
    *v11 = 0;
    v11[1] = 0;
    goto LABEL_47;
  }
  if (a1 == 48 && a2 == 0xE100000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    sub_1A9319160();
    swift_allocError();
    *v10 = xmmword_1A9407FB0;
LABEL_47:
    swift_willThrow();
    return a1;
  }
  v38 = a1;
  v39 = a1;
  v40 = a2;
  if (qword_1ED2A5838 != -1)
    swift_once();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5548);
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A5820);
  sub_1A9319090();
  sub_1A93190D4();
  sub_1A93F7FC8();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5530);
  a1 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 1, v13);
  sub_1A9319120((uint64_t)v6);
  if ((_DWORD)a1 == 1)
  {
    sub_1A9319160();
    swift_allocError();
    *v14 = v38;
LABEL_46:
    v14[1] = a2;
    swift_bridgeObjectRetain();
    goto LABEL_47;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v15 = v38;
    a1 = sub_1A92DA248(v38, a2, 10);
    v35 = v34;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
      return a1;
    goto LABEL_45;
  }
  v15 = v38;
  if ((a2 & 0x2000000000000000) != 0)
  {
    v39 = v38;
    v40 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (v38 == 43)
    {
      if (v7)
      {
        if (v7 != 1 && (BYTE1(v38) - 48) <= 9u)
        {
          a1 = (BYTE1(v38) - 48);
          if (v7 == 2)
            return a1;
          if ((BYTE2(v38) - 48) <= 9u)
          {
            a1 = 10 * (BYTE1(v38) - 48) + (BYTE2(v38) - 48);
            v21 = v7 - 3;
            if (v7 == 3)
              return a1;
            for (i = (unsigned __int8 *)&v39 + 3; ; ++i)
            {
              v23 = *i - 48;
              if (v23 > 9)
                break;
              if (!is_mul_ok(a1, 0xAuLL))
                break;
              v24 = __CFADD__(10 * a1, v23);
              a1 = 10 * a1 + v23;
              if (v24)
                break;
              if (!--v21)
                return a1;
            }
          }
        }
        goto LABEL_42;
      }
    }
    else
    {
      if (v38 != 45)
      {
        if (v7 && (v38 - 48) <= 9u)
        {
          a1 = (v38 - 48);
          if (v7 == 1)
            return a1;
          if ((BYTE1(v38) - 48) <= 9u)
          {
            a1 = 10 * (v38 - 48) + (BYTE1(v38) - 48);
            v26 = v7 - 2;
            if (v7 == 2)
              return a1;
            for (j = (unsigned __int8 *)&v39 + 2; ; ++j)
            {
              v28 = *j - 48;
              if (v28 > 9)
                break;
              if (!is_mul_ok(a1, 0xAuLL))
                break;
              v24 = __CFADD__(10 * a1, v28);
              a1 = 10 * a1 + v28;
              if (v24)
                break;
              if (!--v26)
                return a1;
            }
          }
        }
        goto LABEL_42;
      }
      if (v7)
      {
        if (v7 != 1)
        {
          v19 = BYTE1(v38) - 48;
          if ((BYTE1(v38) - 48) <= 9u)
          {
            a1 = 0;
            v20 = -(uint64_t)v19;
            if (BYTE1(v38) != 48)
              goto LABEL_45;
            if (v7 == 2)
              return -(uint64_t)v19;
            v29 = BYTE2(v38) - 48;
            if ((BYTE2(v38) - 48) <= 9u && is_mul_ok(v20, 0xAuLL))
            {
              v30 = 10 * v20;
              a1 = v30 - v29;
              if (v30 >= v29)
              {
                v31 = v7 - 3;
                if (v7 == 3)
                  return a1;
                for (k = (unsigned __int8 *)&v39 + 3; ; ++k)
                {
                  v33 = *k - 48;
                  if (v33 > 9)
                    break;
                  if (!is_mul_ok(a1, 0xAuLL))
                    break;
                  v24 = 10 * a1 >= v33;
                  a1 = 10 * a1 - v33;
                  if (!v24)
                    break;
                  if (!--v31)
                    return a1;
                }
              }
            }
          }
        }
LABEL_42:
        a1 = 0;
LABEL_45:
        sub_1A9319160();
        swift_allocError();
        *v14 = v15;
        goto LABEL_46;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  if ((v38 & 0x1000000000000000) != 0)
  {
    v16 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v16 = (unsigned __int8 *)sub_1A93F8D48();
    v8 = v36;
  }
  v17 = sub_1A92DA220(v16, v8, 10);
  if ((v18 & 1) != 0)
    goto LABEL_45;
  return (uint64_t)v17;
}

uint64_t sub_1A9318D50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  _BYTE v6[32];

  sub_1A906443C(a1, (uint64_t)v6);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = sub_1A931883C(v4, v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v2;
}

uint64_t sub_1A9318E00(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_1A931904C();
  sub_1A93F8DFC();
  return v5[1];
}

uint64_t sub_1A9318E9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v7[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    v4 = sub_1A93F90CC();
    v3 = sub_1A931883C(v4, v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1A9318F80()
{
  return MEMORY[0x1E0DEE1E8];
}

uint64_t getEnumTagSinglePayload for AdamID.ParseError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdamID.ParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdamID.ParseError()
{
  return &type metadata for AdamID.ParseError;
}

unint64_t sub_1A931904C()
{
  unint64_t result;

  result = qword_1EEABDDF8;
  if (!qword_1EEABDDF8)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEE1D0], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EEABDDF8);
  }
  return result;
}

unint64_t sub_1A9319090()
{
  unint64_t result;

  result = qword_1ED2A5A88;
  if (!qword_1ED2A5A88)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2A5A88);
  }
  return result;
}

unint64_t sub_1A93190D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A5540;
  if (!qword_1ED2A5540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A5548);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A5540);
  }
  return result;
}

uint64_t sub_1A9319120(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5538);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A9319160()
{
  unint64_t result;

  result = qword_1ED2A5818;
  if (!qword_1ED2A5818)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AdamID.ParseError, &type metadata for AdamID.ParseError);
    atomic_store(result, (unint64_t *)&qword_1ED2A5818);
  }
  return result;
}

uint64_t TranscriptSource.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C707061;
  else
    return 0x72656469766F7270;
}

uint64_t EpisodeTranscriptContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A93191E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A9319268()
{
  sub_1A93193E0();
  return sub_1A93F945C();
}

uint64_t sub_1A9319290()
{
  sub_1A93193E0();
  return sub_1A93F9468();
}

uint64_t EpisodeTranscriptContainer.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93193E0();
  sub_1A93F93D8();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5AF8);
  sub_1A9167718(&qword_1EEABDE08, &qword_1ED2A5AF8, (uint64_t (*)(void))sub_1A9319424, MEMORY[0x1E0DEAF10]);
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A93193E0()
{
  unint64_t result;

  result = qword_1ED2A56D8;
  if (!qword_1ED2A56D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D820, &type metadata for EpisodeTranscriptContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A56D8);
  }
  return result;
}

unint64_t sub_1A9319424()
{
  unint64_t result;

  result = qword_1EEABDE10;
  if (!qword_1EEABDE10)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptData, &type metadata for EpisodeTranscriptData);
    atomic_store(result, (unint64_t *)&qword_1EEABDE10);
  }
  return result;
}

uint64_t EpisodeTranscriptContainer.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93193E0();
  sub_1A93F93C0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5AF8);
    sub_1A9167718(&qword_1ED2A5B00, &qword_1ED2A5AF8, (uint64_t (*)(void))sub_1A93195B0, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1A93195B0()
{
  unint64_t result;

  result = qword_1ED2A5690;
  if (!qword_1ED2A5690)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptData, &type metadata for EpisodeTranscriptData);
    atomic_store(result, (unint64_t *)&qword_1ED2A5690);
  }
  return result;
}

uint64_t sub_1A93195F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return EpisodeTranscriptContainer.init(from:)(a1, a2);
}

uint64_t sub_1A9319608(_QWORD *a1)
{
  return EpisodeTranscriptContainer.encode(to:)(a1);
}

uint64_t EpisodeTranscriptData.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A931966C()
{
  return 0x7475626972747461;
}

uint64_t sub_1A9319688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A9319728()
{
  sub_1A93198A8();
  return sub_1A93F945C();
}

uint64_t sub_1A9319750()
{
  sub_1A93198A8();
  return sub_1A93F9468();
}

uint64_t EpisodeTranscriptData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE18);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  v12 = *(_OWORD *)(v1 + 3);
  v11 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93198A8();
  sub_1A93F93D8();
  v14 = v7;
  v15 = v6;
  v16 = v8;
  v17 = v12;
  v18 = v11;
  sub_1A93198EC();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v3);
}

unint64_t sub_1A93198A8()
{
  unint64_t result;

  result = qword_1ED2A5678;
  if (!qword_1ED2A5678)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D7D0, &type metadata for EpisodeTranscriptData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5678);
  }
  return result;
}

unint64_t sub_1A93198EC()
{
  unint64_t result;

  result = qword_1EEABDE20;
  if (!qword_1EEABDE20)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptDataAttributes, &type metadata for EpisodeTranscriptDataAttributes);
    atomic_store(result, (unint64_t *)&qword_1EEABDE20);
  }
  return result;
}

uint64_t EpisodeTranscriptData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  _QWORD v14[2];
  char v15;
  uint64_t v16;
  __int128 v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93198A8();
  sub_1A93F93C0();
  if (!v2)
  {
    sub_1A9319A68();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v14[1];
    v10 = v15;
    v11 = v16;
    v12 = v17;
    *(_QWORD *)a2 = v14[0];
    *(_QWORD *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1A9319A68()
{
  unint64_t result;

  result = qword_1ED2A57F8;
  if (!qword_1ED2A57F8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeTranscriptDataAttributes, &type metadata for EpisodeTranscriptDataAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED2A57F8);
  }
  return result;
}

uint64_t sub_1A9319AAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeTranscriptData.init(from:)(a1, a2);
}

uint64_t sub_1A9319AC0(_QWORD *a1)
{
  return EpisodeTranscriptData.encode(to:)(a1);
}

uint64_t EpisodeTranscriptDataAttributes.ttmlToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void EpisodeTranscriptDataAttributes.textSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t EpisodeTranscriptDataAttributes.offerTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeTranscriptDataAttributes.snippet.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A9319B40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9319B74 + 4 * byte_1A941D290[*v0]))(0x656B6F546C6D7474, 0xE90000000000006ELL);
}

uint64_t sub_1A9319B74()
{
  return 0x72756F5374786574;
}

uint64_t sub_1A9319B90()
{
  return 0x707954726566666FLL;
}

uint64_t sub_1A9319BB0()
{
  return 0x74657070696E73;
}

uint64_t sub_1A9319BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A931AB58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9319BEC()
{
  sub_1A9319E30();
  return sub_1A93F945C();
}

uint64_t sub_1A9319C14()
{
  sub_1A9319E30();
  return sub_1A93F9468();
}

uint64_t EpisodeTranscriptDataAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v15[2] = *(_QWORD *)(v1 + 32);
  v16 = v8;
  v15[1] = *(_QWORD *)(v1 + 40);
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A9319E30();
  sub_1A93F93D8();
  v23 = 0;
  sub_1A93F9000();
  if (!v2)
  {
    v13 = v16;
    v22 = v17;
    v21 = 1;
    sub_1A9319E74();
    sub_1A93F9030();
    v18 = v13;
    v20 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B08);
    sub_1A9167718(&qword_1EEABDE38, &qword_1ED2A5B08, (uint64_t (*)(void))sub_1A92890FC, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
    v19 = 3;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_1A9319E30()
{
  unint64_t result;

  result = qword_1ED2A57E0;
  if (!qword_1ED2A57E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D780, &type metadata for EpisodeTranscriptDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A57E0);
  }
  return result;
}

unint64_t sub_1A9319E74()
{
  unint64_t result;

  result = qword_1EEABDE30;
  if (!qword_1EEABDE30)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptSource, &type metadata for TranscriptSource);
    atomic_store(result, (unint64_t *)&qword_1EEABDE30);
  }
  return result;
}

uint64_t EpisodeTranscriptDataAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9319E30();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v26 = 0;
  v9 = sub_1A93F8F4C();
  v11 = v10;
  v24 = 1;
  sub_1A931A170();
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v20 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5B08);
  v23 = 2;
  sub_1A9167718(&qword_1ED2A5B10, &qword_1ED2A5B08, (uint64_t (*)(void))sub_1A9289250, MEMORY[0x1E0DEAF40]);
  sub_1A93F8F7C();
  v22 = 3;
  v19 = v21;
  swift_bridgeObjectRetain();
  v13 = sub_1A93F8F04();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v15;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A931A170()
{
  unint64_t result;

  result = qword_1ED2A5658;
  if (!qword_1ED2A5658)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptSource, &type metadata for TranscriptSource);
    atomic_store(result, (unint64_t *)&qword_1ED2A5658);
  }
  return result;
}

uint64_t sub_1A931A1B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeTranscriptDataAttributes.init(from:)(a1, a2);
}

uint64_t sub_1A931A1C8(_QWORD *a1)
{
  return EpisodeTranscriptDataAttributes.encode(to:)(a1);
}

PodcastsFoundation::TranscriptSource_optional __swiftcall TranscriptSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::TranscriptSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1A931A23C(char *a1, char *a2)
{
  return sub_1A92F992C(*a1, *a2);
}

unint64_t sub_1A931A24C()
{
  unint64_t result;

  result = qword_1EEABDE40;
  if (!qword_1EEABDE40)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptSource, &type metadata for TranscriptSource);
    atomic_store(result, (unint64_t *)&qword_1EEABDE40);
  }
  return result;
}

uint64_t sub_1A931A290()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A931A30C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A931A364()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::TranscriptSource_optional sub_1A931A3DC(Swift::String *a1)
{
  return TranscriptSource.init(rawValue:)(*a1);
}

void sub_1A931A3E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x72656469766F7270;
  if (*v1)
    v2 = 0x656C707061;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A931A424()
{
  sub_1A931AD2C();
  return sub_1A93F82BC();
}

uint64_t sub_1A931A480()
{
  sub_1A931AD2C();
  return sub_1A93F828C();
}

ValueMetadata *type metadata accessor for EpisodeTranscriptContainer()
{
  return &type metadata for EpisodeTranscriptContainer;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptData()
{
  return &type metadata for EpisodeTranscriptData;
}

uint64_t destroy for TranscriptRequestInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptDataAttributes()
{
  return &type metadata for EpisodeTranscriptDataAttributes;
}

uint64_t storeEnumTagSinglePayload for TranscriptSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A931A6D4 + 4 * byte_1A941D299[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A931A708 + 4 * byte_1A941D294[v4]))();
}

uint64_t sub_1A931A708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A931A710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A931A718);
  return result;
}

uint64_t sub_1A931A724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A931A72CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A931A730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A931A738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSource()
{
  return &type metadata for TranscriptSource;
}

uint64_t storeEnumTagSinglePayload for EpisodeTranscriptDataAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A931A7A0 + 4 * byte_1A941D2A3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A931A7D4 + 4 * byte_1A941D29E[v4]))();
}

uint64_t sub_1A931A7D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A931A7DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A931A7E4);
  return result;
}

uint64_t sub_1A931A7F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A931A7F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A931A7FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A931A804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptDataAttributes.CodingKeys()
{
  return &type metadata for EpisodeTranscriptDataAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptData.CodingKeys()
{
  return &type metadata for EpisodeTranscriptData.CodingKeys;
}

uint64_t _s18PodcastsFoundation21EpisodeTranscriptDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A931A874 + 4 * byte_1A941D2A8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A931A894 + 4 * byte_1A941D2AD[v4]))();
}

_BYTE *sub_1A931A874(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A931A894(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A931A89C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A931A8A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A931A8AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A931A8B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptContainer.CodingKeys()
{
  return &type metadata for EpisodeTranscriptContainer.CodingKeys;
}

unint64_t sub_1A931A8D4()
{
  unint64_t result;

  result = qword_1EEABDE48;
  if (!qword_1EEABDE48)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D5E8, &type metadata for EpisodeTranscriptContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDE48);
  }
  return result;
}

unint64_t sub_1A931A91C()
{
  unint64_t result;

  result = qword_1EEABDE50;
  if (!qword_1EEABDE50)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D6A0, &type metadata for EpisodeTranscriptData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDE50);
  }
  return result;
}

unint64_t sub_1A931A964()
{
  unint64_t result;

  result = qword_1EEABDE58;
  if (!qword_1EEABDE58)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D758, &type metadata for EpisodeTranscriptDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDE58);
  }
  return result;
}

unint64_t sub_1A931A9AC()
{
  unint64_t result;

  result = qword_1ED2A57F0;
  if (!qword_1ED2A57F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D6C8, &type metadata for EpisodeTranscriptDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A57F0);
  }
  return result;
}

unint64_t sub_1A931A9F4()
{
  unint64_t result;

  result = qword_1ED2A57E8;
  if (!qword_1ED2A57E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D6F0, &type metadata for EpisodeTranscriptDataAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A57E8);
  }
  return result;
}

unint64_t sub_1A931AA3C()
{
  unint64_t result;

  result = qword_1ED2A5688;
  if (!qword_1ED2A5688)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D610, &type metadata for EpisodeTranscriptData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5688);
  }
  return result;
}

unint64_t sub_1A931AA84()
{
  unint64_t result;

  result = qword_1ED2A5680;
  if (!qword_1ED2A5680)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D638, &type metadata for EpisodeTranscriptData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A5680);
  }
  return result;
}

unint64_t sub_1A931AACC()
{
  unint64_t result;

  result = qword_1ED2A56E8;
  if (!qword_1ED2A56E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D558, &type metadata for EpisodeTranscriptContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A56E8);
  }
  return result;
}

unint64_t sub_1A931AB14()
{
  unint64_t result;

  result = qword_1ED2A56E0;
  if (!qword_1ED2A56E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941D580, &type metadata for EpisodeTranscriptContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2A56E0);
  }
  return result;
}

uint64_t sub_1A931AB58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656B6F546C6D7474 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756F5374786574 && a2 == 0xEA00000000006563 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x707954726566666FLL && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74657070696E73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1A931AD2C()
{
  unint64_t result;

  result = qword_1ED2A5650;
  if (!qword_1ED2A5650)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptSource, &type metadata for TranscriptSource);
    atomic_store(result, (unint64_t *)&qword_1ED2A5650);
  }
  return result;
}

uint64_t static MTInterest.predicateForInterest(withAdamID:)(uint64_t a1)
{
  uint64_t v2;
  id v3;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v2 + 32) = 0x44496D616461;
  *(_QWORD *)(v2 + 40) = 0xE600000000000000;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, a1);
  *(_QWORD *)(v2 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  *(_QWORD *)(v2 + 104) = sub_1A922E830();
  *(_QWORD *)(v2 + 72) = v3;
  return sub_1A93F8754();
}

uint64_t static MTInterest.predicateForFavoritedInterests()()
{
  uint64_t v0;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1A90A92DC();
  strcpy((char *)(v0 + 32), "interestValue");
  *(_WORD *)(v0 + 46) = -4864;
  return sub_1A93F8754();
}

uint64_t static MTInterest.predicateForInterests(excludingAdamIDs:)(uint64_t a1)
{
  uint64_t v2;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v2 + 32) = 0x44496D616461;
  *(_QWORD *)(v2 + 40) = 0xE600000000000000;
  *(_QWORD *)(v2 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDB30);
  *(_QWORD *)(v2 + 104) = sub_1A931B204();
  *(_QWORD *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1A93F8754();
}

uint64_t static MTInterest.predicateForNeutralInterests()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A9405950;
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v1 = sub_1A90A92DC();
  strcpy((char *)(v0 + 32), "interestValue");
  *(_WORD *)(v0 + 46) = -4864;
  v2 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v0 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = 0;
  return sub_1A93F8754();
}

id _s18PodcastsFoundation10MTInterestC40predicateForFavoritedInterestsCategoriesSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A9405520;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1A90A92DC();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  v3 = (void *)sub_1A93F8754();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v4 + 56) = v1;
  *(_QWORD *)(v4 + 64) = v2;
  strcpy((char *)(v4 + 32), "interestValue");
  *(_WORD *)(v4 + 46) = -4864;
  v5 = (void *)sub_1A93F8754();
  v6 = objc_msgSend(v5, sel_AND_, v3);

  return v6;
}

unint64_t sub_1A931B204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABDE60;
  if (!qword_1EEABDE60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABDB30);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABDE60);
  }
  return result;
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.create(session:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.load(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t Publishers.CachedAssetPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

char *sub_1A931B280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  swift_allocObject();
  return sub_1A9062F9C(a1, a2, a3, a4, a5, a6);
}

uint64_t *sub_1A931B2F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  unint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v10 + 64) + v14;
  v16 = *(_QWORD *)(v13 + 64);
  v17 = (*(_BYTE *)(v10 + 80) | *(_BYTE *)(v7 + 80) | v14);
  if (v17 > 7
    || ((*(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80) | v14) & 0x100000) != 0
    || v16 + ((v15 + (v12 & ~v11)) & ~(unint64_t)v14) + 2 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    v31 = v5;
    v21 = ~v11;
    v30 = ~(unint64_t)v14;
    v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v23 = AssociatedTypeWitness;
    v22(a1, a2, v6);
    v24 = ((unint64_t)a1 + v12) & v21;
    v25 = ((unint64_t)a2 + v12) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v24, v25, v23);
    v26 = (v24 + v15) & v30;
    v27 = (v25 + v15) & v30;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(v26, v27, v31);
    v28 = (_BYTE *)(v26 + v16);
    *v28 = *(_BYTE *)(v27 + v16);
    v28[1] = *(_BYTE *)(v27 + v16 + 1);
  }
  return a1;
}

uint64_t sub_1A931B474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  return a1;
}

uint64_t sub_1A931B564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  return a1;
}

uint64_t sub_1A931B654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (_BYTE *)(v19 + v21);
  v23 = (_BYTE *)(v20 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  return a1;
}

uint64_t sub_1A931B744(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  unsigned int v30;
  int v31;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0xFE)
    v12 = 254;
  if (!a2)
    return 0;
  v15 = AssociatedTypeWitness;
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = *(_QWORD *)(v7 + 64) + v16;
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = *(_QWORD *)(v13 + 64);
  if (a2 <= v12)
    goto LABEL_27;
  v21 = v20 + ((v18 + v19 + (v17 & ~v16)) & ~v19) + 2;
  v22 = 8 * v21;
  if (v21 > 3)
    goto LABEL_11;
  v24 = ((a2 - v12 + ~(-1 << v22)) >> v22) + 1;
  if (HIWORD(v24))
  {
    v23 = *(_DWORD *)(a1 + v21);
    if (v23)
      goto LABEL_18;
  }
  else
  {
    if (v24 <= 0xFF)
    {
      if (v24 < 2)
        goto LABEL_27;
LABEL_11:
      v23 = *(unsigned __int8 *)(a1 + v21);
      if (!*(_BYTE *)(a1 + v21))
        goto LABEL_27;
LABEL_18:
      v25 = (v23 - 1) << v22;
      if (v21 > 3)
        v25 = 0;
      if ((_DWORD)v20 + (((_DWORD)v18 + (_DWORD)v19 + (v17 & ~(_DWORD)v16)) & ~(_DWORD)v19) != -2)
      {
        if (v21 <= 3)
          v26 = v20 + ((v18 + v19 + (v17 & ~(_DWORD)v16)) & ~(_DWORD)v19) + 2;
        else
          v26 = 4;
        __asm { BR              X12 }
      }
      v31 = v12 + v25;
      return (v31 + 1);
    }
    v23 = *(unsigned __int16 *)(a1 + v21);
    if (*(_WORD *)(a1 + v21))
      goto LABEL_18;
  }
LABEL_27:
  if ((_DWORD)v8 == v12)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v28 = a1;
    v14 = v8;
    v15 = v6;
    return v27(v28, v14, v15);
  }
  v28 = (v17 + a1) & ~v16;
  if (v11 == v12)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v14 = *(unsigned int *)(v10 + 84);
    return v27(v28, v14, v15);
  }
  v28 = (v28 + v18 + v19) & ~v19;
  if ((_DWORD)v14 == v12)
  {
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = v5;
    return v27(v28, v14, v15);
  }
  v30 = *(unsigned __int8 *)(v28 + v20);
  if (v30 < 2)
    return 0;
  v31 = (v30 + 2147483646) & 0x7FFFFFFF;
  return (v31 + 1);
}

void sub_1A931B970(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v12 + 84) > v11)
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0xFE)
    v11 = 254;
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = *(_QWORD *)(v12 + 64) + ((*(_QWORD *)(v10 + 64) + v14 + ((*(_QWORD *)(v8 + 64) + v13) & ~v13)) & ~v14) + 2;
  if (a3 <= v11)
  {
    v16 = 0u;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v11 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (v11 < a2)
  {
    v17 = ~v11 + a2;
    if (v15 < 4)
    {
      if (*(_DWORD *)(v12 + 64)
         + ((*(_DWORD *)(v10 + 64) + (_DWORD)v14 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v13) & ~(_DWORD)v13)) & ~(_DWORD)v14) != -2)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v12 + 64) + ((*(_QWORD *)(v10 + 64) + v14 + ((*(_QWORD *)(v8 + 64) + v13) & ~v13)) & ~v14) + 2);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t sub_1A931BC1C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t EnumStringConvertible<>.description.getter()
{
  uint64_t v1;

  sub_1A93F8274();
  return v1;
}

{
  sub_1A93F8274();
  return sub_1A93F9060();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDelegate.didMatch(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of InvertableEpisodeAndShowProcessorDelegate.unmatched(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A931BCC0()
{
  sub_1A93F92DC();
  sub_1A93F9300();
  return sub_1A93F9324();
}

void sub_1A931BD00(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931BD40()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A931BDF0()
{
  sub_1A93F92DC();
  sub_1A93F9300();
  return sub_1A93F9324();
}

void sub_1A931BE3C(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931BE84()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A931BF74(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931BFBC()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A931C028(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931C080()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A931C150(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931C19C()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A931C224(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931C278()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A931C318(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A931C36C()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t ArtworkRequest.with(format:)@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  char v10;
  unsigned __int8 v11;
  char v12;
  char v13;
  char v14;
  uint8x8_t v15;
  double v16;
  double v17;
  double v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  void *v24;
  char v25;
  char v26;
  void *v27;
  uint64_t v28;
  void *v29;
  char v30;
  char v31;
  _BYTE v32[46];
  char v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  void *v40;
  char v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  void *v46;
  char v47;
  void *v48;
  __int32 v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  if (*(unsigned __int8 *)(v2 + 152) == a1)
    return sub_1A9131434(v2, a2);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(void **)(v2 + 56);
  v23 = *(void **)(v2 + 72);
  v24 = *(void **)(v2 + 88);
  v29 = *(void **)(v2 + 120);
  v8 = *(_QWORD *)(v2 + 136);
  v27 = *(void **)(v2 + 104);
  v28 = *(_QWORD *)(v2 + 144);
  v9 = *(_BYTE *)(v2 + 153);
  v10 = *(_BYTE *)(v2 + 154);
  v11 = *(_BYTE *)(v2 + 32);
  v12 = *(_BYTE *)(v2 + 64);
  v13 = *(_BYTE *)(v2 + 80);
  v14 = *(_BYTE *)(v2 + 96);
  v26 = *(_BYTE *)(v2 + 112);
  *(_QWORD *)&v35 = *(_QWORD *)v2;
  *((_QWORD *)&v35 + 1) = v4;
  v36 = v5;
  v37 = v6;
  v38 = v11;
  v39 = *(_OWORD *)(v2 + 40);
  v15.i32[1] = DWORD1(v39);
  v40 = v7;
  v41 = v12;
  v42 = v23;
  v43 = v13;
  v44 = v24;
  v45 = v14;
  v46 = v27;
  v47 = v26;
  v48 = v29;
  v15.i32[0] = *(_DWORD *)(v2 + 128);
  v25 = vmovl_u8(v15).u8[0];
  v49 = v15.i32[0];
  v50 = v8;
  v51 = v28;
  v52 = a1;
  v53 = v9;
  v54 = v10;
  v55 = 0;
  v56 = 0;
  v16 = *(double *)(v2 + 176);
  v17 = *(double *)(v2 + 184);
  v18 = *(double *)(v2 + 192);
  v19 = *(_BYTE *)(v2 + 200);
  v34 = *(_BYTE *)(v2 + 201);
  v30 = *(_BYTE *)(v2 + 202);
  v31 = v19;
  v20 = *(_QWORD *)(v2 + 208);
  v21 = v2 + 216;
  v33 = *(_BYTE *)(v2 + 203);
  sub_1A907C394(v21, (uint64_t)v32);
  swift_bridgeObjectRetain();
  sub_1A9176C30(v5, v6, v11);
  sub_1A91618E0(v7, v12);
  sub_1A91618E0(v23, v13);
  sub_1A91618E0(v24, v14);
  sub_1A91618E0(v27, v26);
  sub_1A91618E0(v29, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(&v35, v31, &v34, v30, v20, &v33, (uint64_t)v32, a2, v16, v17, v18);
}

uint64_t sub_1A931C5E4(double a1)
{
  uint64_t result;
  uint64_t v2;
  unint64_t v3;

  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
    return 0;
  sub_1A931FDB4((uint64_t)&v2, a1);
  if ((v3 & 1) == 0)
    return v2;
  v2 = 0;
  v3 = 0xE000000000000000;
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F810C();
  sub_1A93F810C();
  sub_1A93F810C();
  result = sub_1A93F8E14();
  __break(1u);
  return result;
}

uint64_t ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)@<X0>(__int128 *a1@<X0>, char a2@<W1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>)
{
  double v18;
  double v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  char v32;
  uint64_t v33;
  uint8_t *v34;
  uint8_t *v35;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  CGSize v49;
  CGSize v50;

  v46 = *a1;
  v47 = a1[1];
  v48 = *((_QWORD *)a1 + 4);
  v18 = *((double *)a1 + 5);
  v19 = *((double *)a1 + 6);
  v42 = *(__int128 *)((char *)a1 + 120);
  v43 = *(__int128 *)((char *)a1 + 136);
  v44 = *(__int128 *)((char *)a1 + 152);
  v45 = *((_QWORD *)a1 + 21);
  v38 = *(__int128 *)((char *)a1 + 56);
  v39 = *(__int128 *)((char *)a1 + 72);
  v40 = *(__int128 *)((char *)a1 + 88);
  v41 = *(__int128 *)((char *)a1 + 104);
  v20 = *a3;
  v21 = *a6;
  *(_OWORD *)(a8 + 216) = 0u;
  v22 = a8 + 216;
  *(_BYTE *)(a8 + 201) = 13;
  *(_OWORD *)(a8 + 232) = 0u;
  *(_QWORD *)(a8 + 248) = 0;
  sub_1A931CD98(0x5379616C70736964, 0xEC000000656C6163, a11);
  sub_1A931CD98(0x6874646977, 0xE500000000000000, a9);
  sub_1A931CD98(0x746867696568, 0xE600000000000000, a10);
  sub_1A931CD98(0x69772E6C65646F6DLL, 0xEB00000000687464, v18);
  sub_1A931CD98(0x65682E6C65646F6DLL, 0xEC00000074686769, v19);
  v50.width = 0.0;
  v50.height = 0.0;
  v49.width = a9;
  v49.height = a10;
  if (CGSizeEqualToSize(v49, v50))
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v23 = sub_1A93F7698();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED2AD110);
    v24 = sub_1A93F7674();
    v25 = sub_1A93F879C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = a7;
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1A904E000, v24, v25, "Request has an invalid size of 0, this will be convered to the preferred size but may represent an error earlier.", v27, 2u);
      v28 = v27;
      a7 = v26;
      MEMORY[0x1AF41411C](v28, -1, -1);
    }

  }
  if (v18 == 0.0 || v19 == 0.0)
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v29 = sub_1A93F7698();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED2AD110);
    v30 = sub_1A93F7674();
    v31 = sub_1A93F879C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = v20;
      v33 = a7;
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1A904E000, v30, v31, "Model has an invalid dimension of 0, this will be convered to the preferred size but may represent an error earlier.", v34, 2u);
      v35 = v34;
      a7 = v33;
      v20 = v32;
      MEMORY[0x1AF41411C](v35, -1, -1);
    }

  }
  *(_OWORD *)a8 = v46;
  *(_OWORD *)(a8 + 16) = v47;
  *(_QWORD *)(a8 + 32) = v48;
  *(double *)(a8 + 40) = v18;
  *(double *)(a8 + 48) = v19;
  *(_OWORD *)(a8 + 120) = v42;
  *(_OWORD *)(a8 + 136) = v43;
  *(_OWORD *)(a8 + 152) = v44;
  *(_QWORD *)(a8 + 168) = v45;
  *(_OWORD *)(a8 + 56) = v38;
  *(_OWORD *)(a8 + 72) = v39;
  *(_OWORD *)(a8 + 88) = v40;
  *(_OWORD *)(a8 + 104) = v41;
  *(double *)(a8 + 176) = a9;
  *(double *)(a8 + 184) = a10;
  *(double *)(a8 + 192) = a11;
  *(_BYTE *)(a8 + 200) = a2 & 1;
  *(_BYTE *)(a8 + 201) = v20;
  *(_BYTE *)(a8 + 202) = a4 & 1;
  *(_BYTE *)(a8 + 203) = v21;
  *(_QWORD *)(a8 + 208) = a5;
  return sub_1A9210154(a7, v22);
}

uint64_t ArtworkRequest.resized(to:displayScale:)@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  double v22;
  char v23;
  char v24;
  uint64_t v25;
  char v27;
  char v28;
  _BYTE v29[192];
  double v30;
  __int128 v31[11];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v11 = *(_OWORD *)(v5 + 128);
  v12 = *(_OWORD *)(v5 + 96);
  v39 = *(_OWORD *)(v5 + 112);
  v40 = v11;
  v13 = *(_OWORD *)(v5 + 128);
  v14 = *(_OWORD *)(v5 + 160);
  v41 = *(_OWORD *)(v5 + 144);
  v42 = v14;
  v15 = *(_OWORD *)(v5 + 64);
  v16 = *(_OWORD *)(v5 + 32);
  v35 = *(_OWORD *)(v5 + 48);
  v36 = v15;
  v17 = *(_OWORD *)(v5 + 64);
  v18 = *(_OWORD *)(v5 + 96);
  v37 = *(_OWORD *)(v5 + 80);
  v38 = v18;
  v19 = *(_OWORD *)v5;
  v20 = *(_OWORD *)(v5 + 32);
  v33 = *(_OWORD *)(v5 + 16);
  v34 = v20;
  v21 = *(_OWORD *)v5;
  v31[8] = v13;
  v31[9] = v41;
  v31[10] = *(_OWORD *)(v5 + 160);
  v32 = v21;
  v31[4] = v17;
  v31[5] = v37;
  v31[6] = v12;
  v31[7] = v39;
  v31[0] = v19;
  v31[1] = v33;
  v31[2] = v16;
  v31[3] = v35;
  sub_1A9131434(v5, (uint64_t)v29);
  if ((a2 & 1) != 0)
    v22 = v30;
  else
    v22 = a1;
  sub_1A91770E8((uint64_t)&v32);
  sub_1A9131470((uint64_t)v29);
  v23 = *(_BYTE *)(v5 + 200);
  v28 = *(_BYTE *)(v5 + 201);
  v24 = *(_BYTE *)(v5 + 202);
  v25 = *(_QWORD *)(v5 + 208);
  v27 = *(_BYTE *)(v5 + 203);
  sub_1A907C394(v5 + 216, (uint64_t)v29);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v31, v23, &v28, v24, v25, &v27, (uint64_t)v29, a3, a4, a5, v22);
}

uint64_t ArtworkRequest.model.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v2 = v1[7];
  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v4 = v1[9];
  v26 = v1[10];
  v5 = v1[3];
  v6 = v1[5];
  v20 = v1[4];
  v7 = v20;
  v21 = v6;
  v8 = v1[5];
  v9 = v1[7];
  v22 = v1[6];
  v10 = v22;
  v23 = v9;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  v12 = v1[3];
  v14 = *v1;
  v13 = v1[1];
  v18 = v1[2];
  v15 = v18;
  v19 = v12;
  a1[8] = v24;
  a1[9] = v4;
  a1[10] = v1[10];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v2;
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v5;
  return sub_1A91770E8((uint64_t)v17);
}

double ArtworkRequest.targetSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

double ArtworkRequest.displayScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

void ArtworkRequest.displayScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 192) = a1;
}

uint64_t (*ArtworkRequest.displayScale.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.retainAspectRatio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t ArtworkRequest.retainAspectRatio.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 200) = result;
  return result;
}

uint64_t (*ArtworkRequest.retainAspectRatio.modify())()
{
  return nullsub_1;
}

void ArtworkRequest.cropCodeOverride.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 201);
}

_BYTE *ArtworkRequest.cropCodeOverride.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 201) = *result;
  return result;
}

uint64_t (*ArtworkRequest.cropCodeOverride.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.destination.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 202);
}

uint64_t ArtworkRequest.destination.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 202) = result & 1;
  return result;
}

uint64_t (*ArtworkRequest.destination.modify())()
{
  return nullsub_1;
}

void ArtworkRequest.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 203);
}

_BYTE *ArtworkRequest.priority.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 203) = *result;
  return result;
}

uint64_t (*ArtworkRequest.priority.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.effects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkRequest.effects.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 208) = a1;
  return result;
}

uint64_t (*ArtworkRequest.effects.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A907C394(v1 + 216, a1);
}

uint64_t ArtworkRequest.trace.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9210154(a1, v1 + 216);
}

uint64_t (*ArtworkRequest.trace.modify())()
{
  return nullsub_1;
}

void sub_1A931CD98(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2AD110);
    swift_bridgeObjectRetain_n();
    v7 = sub_1A93F7674();
    v8 = sub_1A93F87A8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v13 = v10;
      *(_DWORD *)v9 = 136315394;
      if ((*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) != 0)
        v11 = 5136718;
      else
        v11 = 0x7974696E69666E69;
      if ((*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) != 0)
        v12 = 0xE300000000000000;
      else
        v12 = 0xE800000000000000;
      sub_1A906436C(v11, v12, &v13);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1A906436C(a1, a2, &v13);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v7, v8, "ArtworkRequest received %s for %s. While simulated, this crash should be investigated since it effectively opts the caller into the default size of artwork.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v10, -1, -1);
      MEMORY[0x1AF41411C](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t ArtworkRequest.replacingEffects(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A9131434(v2, a2);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 208) = a1;
  return result;
}

uint64_t ArtworkRequest.bucketed(with:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double v21;
  char v22;
  uint64_t v23;
  char v25;
  char v26;
  _BYTE v27[192];
  double v28;
  __int128 v29[11];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = (*(double (**)(uint64_t, uint64_t, double, double))(v6 + 8))(v5, v6, *(double *)(v2 + 176), *(double *)(v2 + 184));
  v9 = v8;
  v10 = *(_OWORD *)(v2 + 128);
  v11 = *(_OWORD *)(v2 + 96);
  v37 = *(_OWORD *)(v2 + 112);
  v38 = v10;
  v12 = *(_OWORD *)(v2 + 128);
  v13 = *(_OWORD *)(v2 + 160);
  v39 = *(_OWORD *)(v2 + 144);
  v40 = v13;
  v14 = *(_OWORD *)(v2 + 64);
  v15 = *(_OWORD *)(v2 + 32);
  v33 = *(_OWORD *)(v2 + 48);
  v34 = v14;
  v16 = *(_OWORD *)(v2 + 64);
  v17 = *(_OWORD *)(v2 + 96);
  v35 = *(_OWORD *)(v2 + 80);
  v36 = v17;
  v18 = *(_OWORD *)v2;
  v19 = *(_OWORD *)(v2 + 32);
  v31 = *(_OWORD *)(v2 + 16);
  v32 = v19;
  v20 = *(_OWORD *)v2;
  v29[8] = v12;
  v29[9] = v39;
  v29[10] = *(_OWORD *)(v2 + 160);
  v30 = v20;
  v29[4] = v16;
  v29[5] = v35;
  v29[6] = v11;
  v29[7] = v37;
  v29[0] = v18;
  v29[1] = v31;
  v29[2] = v15;
  v29[3] = v33;
  sub_1A9131434(v2, (uint64_t)v27);
  v21 = v28;
  sub_1A91770E8((uint64_t)&v30);
  sub_1A9131470((uint64_t)v27);
  v22 = *(_BYTE *)(v2 + 200);
  v26 = *(_BYTE *)(v3 + 201);
  LOBYTE(v5) = *(_BYTE *)(v3 + 202);
  v23 = *(_QWORD *)(v3 + 208);
  v25 = *(_BYTE *)(v3 + 203);
  sub_1A907C394(v3 + 216, (uint64_t)v27);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v29, v22, &v26, v5, v23, &v25, (uint64_t)v27, a2, v7, v9, v21);
}

uint64_t ArtworkRequest.with(libraryEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint8x8_t v17;
  double v18;
  double v19;
  double v20;
  char v21;
  uint64_t v22;
  void *v24;
  void *v25;
  char v26;
  char v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char v31;
  char v32;
  _BYTE v34[46];
  char v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  __int128 v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  void *v46;
  char v47;
  void *v48;
  char v49;
  void *v50;
  __int32 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;

  v8 = *(_QWORD *)(v4 + 8);
  v9 = *(void **)(v4 + 56);
  v24 = *(void **)(v4 + 72);
  v25 = *(void **)(v4 + 88);
  v30 = *(void **)(v4 + 120);
  v10 = *(_QWORD *)(v4 + 136);
  v28 = *(void **)(v4 + 104);
  v29 = *(_QWORD *)(v4 + 144);
  v11 = *(_BYTE *)(v4 + 152);
  v12 = *(_BYTE *)(v4 + 153);
  v13 = *(_BYTE *)(v4 + 154);
  v14 = *(_BYTE *)(v4 + 64);
  v15 = *(_BYTE *)(v4 + 80);
  v16 = *(_BYTE *)(v4 + 96);
  v27 = *(_BYTE *)(v4 + 112);
  *(_QWORD *)&v37 = *(_QWORD *)v4;
  *((_QWORD *)&v37 + 1) = v8;
  v38 = a1;
  v39 = a2;
  v40 = a3;
  v41 = *(_OWORD *)(v4 + 40);
  v17.i32[1] = DWORD1(v41);
  v42 = v9;
  v43 = v14;
  v44 = v24;
  v45 = v15;
  v46 = v25;
  v47 = v16;
  v48 = v28;
  v49 = v27;
  v50 = v30;
  v17.i32[0] = *(_DWORD *)(v4 + 128);
  v26 = vmovl_u8(v17).u8[0];
  v51 = v17.i32[0];
  v52 = v10;
  v53 = v29;
  v54 = v11;
  v55 = v12;
  v56 = v13;
  v57 = 0;
  v58 = 0;
  v18 = *(double *)(v4 + 176);
  v19 = *(double *)(v4 + 184);
  v20 = *(double *)(v4 + 192);
  v21 = *(_BYTE *)(v4 + 200);
  v36 = *(_BYTE *)(v4 + 201);
  v31 = *(_BYTE *)(v4 + 202);
  v32 = v21;
  v22 = *(_QWORD *)(v4 + 208);
  v35 = *(_BYTE *)(v4 + 203);
  sub_1A907C394(v4 + 216, (uint64_t)v34);
  swift_bridgeObjectRetain();
  sub_1A913A9C0(a1, a2, a3);
  sub_1A91618E0(v9, v14);
  sub_1A91618E0(v24, v15);
  sub_1A91618E0(v25, v16);
  sub_1A91618E0(v28, v27);
  sub_1A91618E0(v30, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(&v37, v32, &v36, v31, v22, &v35, (uint64_t)v34, a4, v18, v19, v20);
}

uint64_t ArtworkRequest.withOriginalSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  _BYTE v24[46];
  char v25;
  char v26;
  __int128 v27[11];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;

  v3 = *(double *)(v1 + 40);
  v4 = *(double *)(v1 + 48);
  v5 = *(double *)(v1 + 192);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  v11 = *(_BYTE *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v13 = *(_BYTE *)(v1 + 96);
  v14 = *(_QWORD *)(v1 + 104);
  v15 = *(_BYTE *)(v1 + 112);
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_BYTE *)(v1 + 152);
  v18 = *(_BYTE *)(v1 + 153);
  v19 = *(_BYTE *)(v1 + 154);
  *(_QWORD *)&v28 = *(_QWORD *)v1;
  *((_QWORD *)&v28 + 1) = v6;
  v29 = *(_OWORD *)(v1 + 16);
  LOBYTE(v30) = v7;
  *((double *)&v30 + 1) = v3;
  *(double *)&v31 = v4;
  *((_QWORD *)&v31 + 1) = v8;
  LOBYTE(v32) = v9;
  *((_QWORD *)&v32 + 1) = v10;
  LOBYTE(v33) = v11;
  *((_QWORD *)&v33 + 1) = v12;
  LOBYTE(v34) = v13;
  *((_QWORD *)&v34 + 1) = v14;
  LOBYTE(v35) = v15;
  *((_QWORD *)&v35 + 1) = v16;
  *(_DWORD *)v36 = *(_DWORD *)(v1 + 128);
  *(_OWORD *)&v36[8] = *(_OWORD *)(v1 + 136);
  v36[24] = v17;
  v36[25] = v18;
  v36[26] = v19;
  v37 = *(_OWORD *)(v1 + 160);
  v27[8] = *(_OWORD *)v36;
  v27[9] = *(_OWORD *)&v36[16];
  v27[10] = v37;
  v27[4] = v32;
  v27[5] = v33;
  v27[6] = v34;
  v27[7] = v35;
  v27[0] = v28;
  v27[1] = v29;
  v27[2] = v30;
  v27[3] = v31;
  v20 = *(_BYTE *)(v1 + 200);
  v26 = *(_BYTE *)(v1 + 201);
  v21 = *(_BYTE *)(v1 + 202);
  v22 = *(_QWORD *)(v1 + 208);
  v25 = *(_BYTE *)(v1 + 203);
  sub_1A907C394(v1 + 216, (uint64_t)v24);
  sub_1A91770E8((uint64_t)&v28);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v27, v20, &v26, v21, v22, &v25, (uint64_t)v24, a1, v3, v4, v5);
}

uint64_t ArtworkRequest.withoutEffects.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_1A9131434(v1, a1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1A931D4D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A931D508 + 4 * byte_1A941DBA8[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

uint64_t sub_1A931D508()
{
  return 0x6953746567726174;
}

uint64_t sub_1A931D524()
{
  return 0x5379616C70736964;
}

unint64_t sub_1A931D544()
{
  return 0xD000000000000011;
}

unint64_t sub_1A931D564()
{
  return 0xD000000000000010;
}

uint64_t sub_1A931D580()
{
  return 0x74616E6974736564;
}

uint64_t sub_1A931D5A0()
{
  return 0x73746365666665;
}

uint64_t sub_1A931D5B8()
{
  return 0x797469726F697270;
}

uint64_t sub_1A931D5D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A931D600 + 4 * byte_1A941DBB0[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

uint64_t sub_1A931D600()
{
  return 0x6953746567726174;
}

uint64_t sub_1A931D61C()
{
  return 0x5379616C70736964;
}

unint64_t sub_1A931D63C()
{
  return 0xD000000000000011;
}

unint64_t sub_1A931D65C()
{
  return 0xD000000000000010;
}

uint64_t sub_1A931D678()
{
  return 0x74616E6974736564;
}

uint64_t sub_1A931D698()
{
  return 0x73746365666665;
}

uint64_t sub_1A931D6B0()
{
  return 0x797469726F697270;
}

void sub_1A931D6C8(char *a1)
{
  sub_1A92F9ADC(*a1);
}

void sub_1A931D6D4()
{
  char *v0;

  sub_1A931BE3C(0, *v0);
}

void sub_1A931D6E0(uint64_t a1)
{
  char *v1;

  sub_1A92273A8(a1, *v1);
}

void sub_1A931D6E8(uint64_t a1)
{
  char *v1;

  sub_1A931BE3C(a1, *v1);
}

uint64_t sub_1A931D6F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9321D84();
  *a1 = result;
  return result;
}

uint64_t sub_1A931D71C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A931D4D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A931D744()
{
  unsigned __int8 *v0;

  return sub_1A931D5D0(*v0);
}

uint64_t sub_1A931D74C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9321D84();
  *a1 = result;
  return result;
}

uint64_t sub_1A931D770()
{
  sub_1A93209B8();
  return sub_1A93F945C();
}

uint64_t sub_1A931D798()
{
  sub_1A93209B8();
  return sub_1A93F9468();
}

uint64_t ArtworkRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  ArtworkModel.hash(into:)();
  sub_1A93F930C();
  sub_1A93F930C();
  sub_1A93F930C();
  sub_1A93F92F4();
  if (*(_BYTE *)(v0 + 201) == 13)
  {
    sub_1A93F92F4();
  }
  else
  {
    sub_1A93F92F4();
    CropCode.rawValue.getter();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
  }
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 208);
  result = sub_1A93F92E8();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    do
    {
      sub_1A93F7FBC();
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ArtworkRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93209B8();
  sub_1A93F93D8();
  v9 = v3[9];
  v25 = v3[8];
  v26 = v9;
  v27 = v3[10];
  v10 = v3[5];
  v21 = v3[4];
  v22 = v10;
  v11 = v3[7];
  v23 = v3[6];
  v24 = v11;
  v12 = v3[1];
  v17 = *v3;
  v13 = v3[2];
  v20 = v3[3];
  v18 = v12;
  v19 = v13;
  v16 = 0;
  sub_1A93209FC();
  sub_1A93F9030();
  if (!v2)
  {
    v17 = v3[11];
    v16 = 1;
    type metadata accessor for CGSize(0);
    sub_1A9066CA8(&qword_1EEABDE80, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9B9F0]);
    sub_1A93F9030();
    *(_QWORD *)&v17 = *((_QWORD *)v3 + 24);
    v16 = 2;
    sub_1A91791FC();
    sub_1A93F9030();
    LOBYTE(v17) = 3;
    sub_1A93F900C();
    LOBYTE(v17) = *((_BYTE *)v3 + 201);
    v16 = 4;
    sub_1A918F3EC();
    sub_1A93F8FE8();
    LOBYTE(v17) = *((_BYTE *)v3 + 202);
    v16 = 5;
    sub_1A9320A40();
    sub_1A93F9030();
    *(_QWORD *)&v17 = *((_QWORD *)v3 + 26);
    v16 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE90);
    sub_1A9320B50(&qword_1EEABDE98, (uint64_t (*)(void))sub_1A9320A84, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
    LOBYTE(v17) = *((_BYTE *)v3 + 203);
    v16 = 7;
    sub_1A921026C();
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ArtworkRequest.hashValue.getter()
{
  sub_1A93F92DC();
  ArtworkRequest.hash(into:)();
  return sub_1A93F9324();
}

uint64_t ArtworkRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[12];
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  _BYTE v36[32];
  uint64_t v37;
  _QWORD *v38;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDEA8);
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 13;
  memset(v36, 0, sizeof(v36));
  v37 = 0;
  v8 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A93209B8();
  sub_1A93F93C0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    return sub_1A9060D8C((uint64_t)v36);
  }
  else
  {
    v9 = v5;
    v13 = a2;
    v17 = 0;
    sub_1A9320AC8();
    v10 = v14;
    sub_1A93F8F7C();
    v29[8] = v26;
    v29[9] = v27;
    v29[10] = v28;
    v29[4] = v22;
    v29[5] = v23;
    v29[6] = v24;
    v29[7] = v25;
    v29[0] = v18;
    v29[1] = v19;
    v29[2] = v20;
    v29[3] = v21;
    type metadata accessor for CGSize(0);
    v15 = 1;
    sub_1A9066CA8(&qword_1EEABDEB8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9BA08]);
    sub_1A93F8F7C();
    v29[11] = v16;
    v15 = 2;
    sub_1A9178FF0();
    sub_1A93F8F7C();
    v30 = v16;
    LOBYTE(v16) = 3;
    v31 = sub_1A93F8F58() & 1;
    v15 = 4;
    sub_1A918F2DC();
    sub_1A93F8F34();
    v32 = v16;
    v15 = 5;
    sub_1A9320B0C();
    sub_1A93F8F7C();
    v33 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDE90);
    v15 = 6;
    sub_1A9320B50(&qword_1EEABDEC8, (uint64_t (*)(void))sub_1A9320BB8, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F7C();
    v35 = v16;
    v15 = 7;
    sub_1A9210338();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v10);
    v34 = v16;
    sub_1A9131434((uint64_t)v29, v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    return sub_1A9131470((uint64_t)v29);
  }
}

uint64_t sub_1A931E160@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkRequest.init(from:)(a1, a2);
}

uint64_t sub_1A931E174(_QWORD *a1)
{
  return ArtworkRequest.encode(to:)(a1);
}

uint64_t sub_1A931E188()
{
  sub_1A93F92DC();
  ArtworkRequest.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A931E1C8()
{
  sub_1A93F92DC();
  ArtworkRequest.hash(into:)();
  return sub_1A93F9324();
}

uint64_t sub_1A931E200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A907C394(v1 + 216, a1);
}

uint64_t sub_1A931E20C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9210154(a1, v1 + 216);
}

uint64_t (*sub_1A931E214())()
{
  return nullsub_1;
}

uint64_t sub_1A931E228@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkRequest.with(format:)(*a1, a2);
}

void ArtworkRequest.key.getter()
{
  CropCode.rawValue.getter();
  sub_1A90828B0();
  swift_bridgeObjectRetain();
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A931E6C8();
  sub_1A93F9060();
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A931E748();
  sub_1A93F9060();
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1A931E428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F85B0();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F85B0();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A931C5E4(*(double *)(v0 + 192));
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  if (*(_BYTE *)(v0 + 201) != 13)
  {
    sub_1A93F8DE4();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
  }
  sub_1A93F810C();
  sub_1A93F8DE4();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 208);
  if (*(_QWORD *)(v1 + 16))
  {
    Array<A>.cacheKey.getter(v1);
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
  }
  v2 = sub_1A93F8010();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A931E6C8()
{
  double *v0;
  double v1;
  double v2;
  uint64_t result;
  char v4;

  v1 = v0[5];
  v2 = v0[24];
  if (v0[22] * v2 < v1)
    v1 = v0[22] * v2;
  result = sub_1A931C5E4(v1);
  if ((v4 & 1) != 0)
  {
    if (600.0 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (600.0 < 9.22337204e18)
    {
      return (uint64_t)600.0;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A931E748()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t result;
  char v4;

  v1 = sub_1A931E6C8();
  v2 = *(double *)(v0 + 184);
  if (v1 >= 1)
    v2 = ceil(v2 * (double)v1 / *(double *)(v0 + 176));
  result = sub_1A931C5E4(v2);
  if ((v4 & 1) != 0)
  {
    if (600.0 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (600.0 < 9.22337204e18)
    {
      return (uint64_t)600.0;
    }
    __break(1u);
  }
  return result;
}

uint64_t Array<A>.cacheKey.getter(uint64_t a1)
{
  int64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v1, 0);
    v2 = *(_QWORD *)(v9 + 16);
    v3 = 16 * v2;
    do
    {
      v4 = *(_QWORD *)(v9 + 24);
      v5 = v2 + 1;
      if (v2 >= v4 >> 1)
        sub_1A908182C(v4 > 1, v2 + 1, 1);
      *(_QWORD *)(v9 + 16) = v5;
      v6 = v9 + v3;
      *(_QWORD *)(v6 + 32) = 0x64657272756C62;
      *(_QWORD *)(v6 + 40) = 0xE700000000000000;
      v3 += 16;
      v2 = v5;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
  v7 = sub_1A93F7FE0();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1A931E908(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ArtworkRequest.key.getter();
  *a1 = v2;
}

uint64_t static ArtworkRequest.CodingError.== infix(_:_:)()
{
  return 1;
}

uint64_t ArtworkRequest.CodingError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ArtworkRequest.CodingError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t ArtworkRequest.stableFilePrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = sub_1A93F7E9C();
  v9[1] = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v10 = sub_1A93F7EA8();
  v9[0] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v2 = sub_1A93F8088();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  if (*(unsigned __int8 *)(v0 + 32) != 255)
  {
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
  }
  sub_1A93F807C();
  sub_1A93F804C();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7 >> 60 != 15)
  {
    sub_1A9066CA8(&qword_1ED2AD1E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
    sub_1A93F7E78();
    __asm { BR              X10 }
  }
  return v13;
}

uint64_t static ArtworkRequest.comparablePrefix(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = 45;
  v10 = 0xE100000000000000;
  v8[2] = &v9;
  swift_bridgeObjectRetain();
  v4 = sub_1A931FF38(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A9320BFC, (uint64_t)v8, a1, a2);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5 >= 2)
    v5 = 2;
  v9 = v4;
  v10 = v4 + 32;
  v11 = 0;
  v12 = (2 * v5) | 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD38);
  sub_1A9066D74(&qword_1ED2ABD30, &qword_1ED2ABD38, MEMORY[0x1E0DEBF78]);
  sub_1A9320C50();
  v6 = sub_1A93F8268();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ArtworkRequest.fileName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = ArtworkRequest.stableFilePrefix.getter();
  v5 = v1;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v6 = v4;
  v7 = v5;
  sub_1A9131434(v0, (uint64_t)&v4);
  sub_1A9131470((uint64_t)&v4);
  sub_1A931E6C8();
  sub_1A93F9060();
  sub_1A93F810C();
  sub_1A931E748();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  CropCode.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 208);
  if (*(_QWORD *)(v2 + 16))
  {
    Array<A>.cacheKey.getter(v2);
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void ArtworkRequest.fileFormat.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x3020200u >> (8 * *(_BYTE *)(v1 + 152));
}

id ArtworkRequest.encode(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;

  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91224E0(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *(id *)v8;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A93F7224();
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_contentsAtPath_, v10);

  if (v11)
  {
    v9 = (id)sub_1A93F72B4();

  }
  else
  {
    sub_1A9320C94();
    swift_allocError();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t ArtworkRequest.decode(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  return sub_1A90D8068(a1, a2);
}

void sub_1A931F330(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x3020200u >> (8 * *(_BYTE *)(v1 + 152));
}

id sub_1A931F34C(uint64_t a1)
{
  return ArtworkRequest.encode(_:)(a1);
}

uint64_t sub_1A931F360@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  return sub_1A90D8068(a1, a2);
}

uint64_t ArtworkRequest.inMemorySize.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  v3 = sub_1A9122048(v1, v2);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
      v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0)
      return v7;
    sub_1A93F8E08();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

void ArtworkRequest.remoteUrl.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  sub_1A9131434((uint64_t)v0, (uint64_t)&v12);
  sub_1A9131470((uint64_t)&v12);
  v2 = v0[1];
  v12 = *v0;
  v13 = v2;
  CropCode.rawValue.getter();
  sub_1A90828B0();
  swift_bridgeObjectRetain();
  v3 = sub_1A93F8AFC();
  v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v3;
  v13 = v5;
  sub_1A931E6C8();
  sub_1A93F9060();
  v6 = sub_1A93F8AFC();
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v8;
  sub_1A931E748();
  sub_1A93F9060();
  v9 = sub_1A93F8AFC();
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v9;
  v13 = v11;
  __asm { BR              X10 }
}

uint64_t sub_1A931F6C4()
{
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F8AFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F7248();
  return swift_bridgeObjectRelease();
}

void sub_1A931F788(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 203);
}

PodcastsFoundation::ArtworkRequest::Destination_optional __swiftcall ArtworkRequest.Destination.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  PodcastsFoundation::ArtworkRequest::Destination_optional v2;

  v1 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = PodcastsFoundation_ArtworkRequest_Destination_unspecified;
  else
    v2.value = PodcastsFoundation_ArtworkRequest_Destination_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t ArtworkRequest.Destination.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6669636570736E75;
  else
    return 0x79616C70736964;
}

uint64_t sub_1A931F824(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6669636570736E75;
  else
    v3 = 0x79616C70736964;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEB00000000646569;
  if (*a2)
    v5 = 0x6669636570736E75;
  else
    v5 = 0x79616C70736964;
  if (*a2)
    v6 = 0xEB00000000646569;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A931F8D4()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A931F95C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A931F9C0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A931FA44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A931FAA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x79616C70736964;
  if (*v1)
    v2 = 0x6669636570736E75;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEB00000000646569;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A931FAE8()
{
  sub_1A9321E10();
  return sub_1A93F82BC();
}

uint64_t sub_1A931FB44()
{
  sub_1A9321E10();
  return sub_1A93F828C();
}

BOOL ArtworkRequest.Effect.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t ArtworkRequest.Effect.rawValue.getter()
{
  return 0x64657272756C62;
}

uint64_t sub_1A931FBEC()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A931FC3C()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A931FC54()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A931FCA0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A931FCF0(_QWORD *a1@<X8>)
{
  *a1 = 0x64657272756C62;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A931FD0C()
{
  sub_1A9321DCC();
  return sub_1A93F82BC();
}

uint64_t sub_1A931FD68()
{
  sub_1A9321DCC();
  return sub_1A93F828C();
}

BOOL sub_1A931FDB4(uint64_t a1, double a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v12 = 0;
    result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047)
    goto LABEL_28;
  v7 = sub_1A93F85D4();
  if (v7 > 63)
    goto LABEL_28;
  v8 = v7;
  v9 = sub_1A93F85BC();
  result = v8 >= v9;
  v11 = v9 + __clz(__rbit64(v5));
  v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    v12 = 0;
    result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64)
      goto LABEL_11;
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0)
    goto LABEL_32;
  if ((unint64_t)v12 < 0x40)
  {
    v14 = v5 << v12;
    if (v8 != 63)
      goto LABEL_17;
LABEL_34:
    if (a2 < 0.0 && !v14)
      goto LABEL_36;
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63)
    goto LABEL_27;
  v13 = 0;
  v14 = 0;
  if (v8 < 0)
    goto LABEL_20;
LABEL_19:
  v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    v12 = v14 | v13;
    if (a2 >= 0.0)
      break;
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0)
      goto LABEL_11;
    v14 = v5 >> -(char)v12;
    if (v8 == 63)
      goto LABEL_34;
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_19;
    v13 = 0;
  }
  if (v12 < 0)
    goto LABEL_31;
  LOBYTE(v6) = 0;
LABEL_25:
  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1A931FF38(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1A93203D4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1A93F8184();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1A93F80E8();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1A93F80E8();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1A93F819C();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1A91198D4(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1A91198D4((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1A93F80E8();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1A93F819C();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1A91198D4(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1A91198D4((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A93F8E08();
  __break(1u);
LABEL_42:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A93203D4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1A93F819C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1A91198D4(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1A91198D4((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  BOOL v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  uint64_t v36[32];
  _BYTE v37[208];
  uint64_t v38;
  _BYTE v39[202];
  char v40;
  _BYTE v41[202];
  char v42;
  _BYTE v43[201];
  unsigned __int8 v44;
  _BYTE v45[201];
  char v46;
  _BYTE v47[256];
  _BYTE v48[256];
  _BYTE v49[192];
  double v50;
  _BYTE v51[192];
  double v52;
  _OWORD v53[11];
  double v54;
  double v55;
  _OWORD v56[11];
  double v57;
  double v58;

  v4 = a1[9];
  v56[8] = a1[8];
  v56[9] = v4;
  v56[10] = a1[10];
  v5 = a1[5];
  v56[4] = a1[4];
  v56[5] = v5;
  v6 = a1[6];
  v56[7] = a1[7];
  v56[6] = v6;
  v7 = a1[1];
  v56[0] = *a1;
  v56[1] = v7;
  v8 = a1[2];
  v56[3] = a1[3];
  v56[2] = v8;
  v9 = a2[9];
  v53[8] = a2[8];
  v53[9] = v9;
  v53[10] = a2[10];
  v10 = a2[5];
  v53[4] = a2[4];
  v53[5] = v10;
  v11 = a2[6];
  v53[7] = a2[7];
  v53[6] = v11;
  v12 = a2[1];
  v53[0] = *a2;
  v53[1] = v12;
  v13 = a2[2];
  v53[3] = a2[3];
  v53[2] = v13;
  v14 = _s18PodcastsFoundation12ArtworkModelV2eeoiySbAC_ACtFZ_0((uint64_t)v56, (uint64_t)v53);
  sub_1A9131434((uint64_t)a1, (uint64_t)v56);
  sub_1A9131434((uint64_t)a2, (uint64_t)v53);
  if (!v14)
  {
    sub_1A9131470((uint64_t)v53);
    sub_1A9131470((uint64_t)v56);
    goto LABEL_10;
  }
  v15 = v57;
  v16 = v58;
  sub_1A9131470((uint64_t)v56);
  v17 = v54;
  v18 = v55;
  sub_1A9131470((uint64_t)v53);
  if (v15 != v17)
  {
LABEL_10:
    sub_1A9131434((uint64_t)a1, (uint64_t)v51);
    sub_1A9131434((uint64_t)a2, (uint64_t)v49);
    goto LABEL_11;
  }
  sub_1A9131434((uint64_t)a1, (uint64_t)v51);
  sub_1A9131434((uint64_t)a2, (uint64_t)v49);
  if (v16 != v18)
  {
LABEL_11:
    sub_1A9131470((uint64_t)v49);
    sub_1A9131470((uint64_t)v51);
    sub_1A9131434((uint64_t)a1, (uint64_t)v48);
    sub_1A9131434((uint64_t)a2, (uint64_t)v47);
    goto LABEL_12;
  }
  v19 = v52;
  sub_1A9131470((uint64_t)v51);
  v20 = v50;
  sub_1A9131470((uint64_t)v49);
  sub_1A9131434((uint64_t)a1, (uint64_t)v48);
  sub_1A9131434((uint64_t)a2, (uint64_t)v47);
  if (v19 != v20)
  {
LABEL_12:
    sub_1A9131470((uint64_t)v47);
    sub_1A9131470((uint64_t)v48);
    sub_1A9131434((uint64_t)a1, (uint64_t)v45);
    sub_1A9131434((uint64_t)a2, (uint64_t)v43);
    goto LABEL_13;
  }
  v21 = v48[200];
  sub_1A9131470((uint64_t)v48);
  v22 = v47[200];
  sub_1A9131470((uint64_t)v47);
  sub_1A9131434((uint64_t)a1, (uint64_t)v45);
  sub_1A9131434((uint64_t)a2, (uint64_t)v43);
  if (v21 != v22)
    goto LABEL_13;
  v23 = v44;
  if (v46 == 13)
  {
    sub_1A9131470((uint64_t)v43);
    sub_1A9131470((uint64_t)v45);
    if (v23 == 13)
      goto LABEL_21;
    goto LABEL_14;
  }
  if (v44 == 13)
  {
LABEL_13:
    sub_1A9131470((uint64_t)v43);
    sub_1A9131470((uint64_t)v45);
LABEL_14:
    sub_1A9131434((uint64_t)a1, (uint64_t)v41);
    sub_1A9131434((uint64_t)a2, (uint64_t)v39);
    goto LABEL_15;
  }
  v41[0] = v46;
  v39[0] = v44;
  v26 = CropCode.rawValue.getter();
  v28 = v27;
  if (v26 != CropCode.rawValue.getter() || v28 != v29)
  {
    v35 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A9131470((uint64_t)v43);
    sub_1A9131470((uint64_t)v45);
    sub_1A9131434((uint64_t)a1, (uint64_t)v41);
    sub_1A9131434((uint64_t)a2, (uint64_t)v39);
    if ((v35 & 1) != 0)
      goto LABEL_22;
LABEL_15:
    sub_1A9131470((uint64_t)v39);
    sub_1A9131470((uint64_t)v41);
    sub_1A9131434((uint64_t)a1, (uint64_t)v37);
    sub_1A9131434((uint64_t)a2, (uint64_t)v36);
    v24 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease_n();
  sub_1A9131470((uint64_t)v43);
  sub_1A9131470((uint64_t)v45);
LABEL_21:
  sub_1A9131434((uint64_t)a1, (uint64_t)v41);
  sub_1A9131434((uint64_t)a2, (uint64_t)v39);
LABEL_22:
  if (v42)
    v30 = 0x6669636570736E75;
  else
    v30 = 0x79616C70736964;
  if (v42)
    v31 = 0xEB00000000646569;
  else
    v31 = 0xE700000000000000;
  if (v40)
    v32 = 0x6669636570736E75;
  else
    v32 = 0x79616C70736964;
  if (v40)
    v33 = 0xEB00000000646569;
  else
    v33 = 0xE700000000000000;
  if (v30 == v32 && v31 == v33)
  {
    swift_bridgeObjectRelease_n();
    sub_1A9131470((uint64_t)v39);
    sub_1A9131470((uint64_t)v41);
    sub_1A9131434((uint64_t)a1, (uint64_t)v37);
    sub_1A9131434((uint64_t)a2, (uint64_t)v36);
LABEL_38:
    v24 = sub_1A9147750(v38, v36[26]);
    goto LABEL_16;
  }
  v34 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9131470((uint64_t)v39);
  sub_1A9131470((uint64_t)v41);
  sub_1A9131434((uint64_t)a1, (uint64_t)v37);
  sub_1A9131434((uint64_t)a2, (uint64_t)v36);
  v24 = 0;
  if ((v34 & 1) != 0)
    goto LABEL_38;
LABEL_16:
  sub_1A9131470((uint64_t)v37);
  sub_1A9131470((uint64_t)v36);
  return v24;
}

unint64_t sub_1A93209B8()
{
  unint64_t result;

  result = qword_1EEABDE70;
  if (!qword_1EEABDE70)
  {
    result = MEMORY[0x1AF414014](&unk_1A941E104, &type metadata for ArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDE70);
  }
  return result;
}

unint64_t sub_1A93209FC()
{
  unint64_t result;

  result = qword_1EEABDE78;
  if (!qword_1EEABDE78)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkModel, &type metadata for ArtworkModel);
    atomic_store(result, (unint64_t *)&qword_1EEABDE78);
  }
  return result;
}

unint64_t sub_1A9320A40()
{
  unint64_t result;

  result = qword_1EEABDE88;
  if (!qword_1EEABDE88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Destination, &type metadata for ArtworkRequest.Destination);
    atomic_store(result, (unint64_t *)&qword_1EEABDE88);
  }
  return result;
}

unint64_t sub_1A9320A84()
{
  unint64_t result;

  result = qword_1EEABDEA0;
  if (!qword_1EEABDEA0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Effect, &type metadata for ArtworkRequest.Effect);
    atomic_store(result, (unint64_t *)&qword_1EEABDEA0);
  }
  return result;
}

unint64_t sub_1A9320AC8()
{
  unint64_t result;

  result = qword_1EEABDEB0;
  if (!qword_1EEABDEB0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkModel, &type metadata for ArtworkModel);
    atomic_store(result, (unint64_t *)&qword_1EEABDEB0);
  }
  return result;
}

unint64_t sub_1A9320B0C()
{
  unint64_t result;

  result = qword_1EEABDEC0;
  if (!qword_1EEABDEC0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Destination, &type metadata for ArtworkRequest.Destination);
    atomic_store(result, (unint64_t *)&qword_1EEABDEC0);
  }
  return result;
}

uint64_t sub_1A9320B50(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABDE90);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9320BB8()
{
  unint64_t result;

  result = qword_1EEABDED0;
  if (!qword_1EEABDED0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Effect, &type metadata for ArtworkRequest.Effect);
    atomic_store(result, (unint64_t *)&qword_1EEABDED0);
  }
  return result;
}

uint64_t sub_1A9320BFC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1A93F90C0() & 1;
}

unint64_t sub_1A9320C50()
{
  unint64_t result;

  result = qword_1ED2A92A8;
  if (!qword_1ED2A92A8)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED2A92A8);
  }
  return result;
}

unint64_t sub_1A9320C94()
{
  unint64_t result;

  result = qword_1EEABDED8;
  if (!qword_1EEABDED8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.CodingError, &type metadata for ArtworkRequest.CodingError);
    atomic_store(result, (unint64_t *)&qword_1EEABDED8);
  }
  return result;
}

unint64_t sub_1A9320CDC()
{
  unint64_t result;

  result = qword_1ED2AB058;
  if (!qword_1ED2AB058)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest, &type metadata for ArtworkRequest);
    atomic_store(result, (unint64_t *)&qword_1ED2AB058);
  }
  return result;
}

unint64_t sub_1A9320D24()
{
  unint64_t result;

  result = qword_1EEABDEE0;
  if (!qword_1EEABDEE0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.CodingError, &type metadata for ArtworkRequest.CodingError);
    atomic_store(result, (unint64_t *)&qword_1EEABDEE0);
  }
  return result;
}

unint64_t sub_1A9320D6C()
{
  unint64_t result;

  result = qword_1EEABDEE8;
  if (!qword_1EEABDEE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Destination, &type metadata for ArtworkRequest.Destination);
    atomic_store(result, (unint64_t *)&qword_1EEABDEE8);
  }
  return result;
}

unint64_t sub_1A9320DB4()
{
  unint64_t result;

  result = qword_1EEABDEF0;
  if (!qword_1EEABDEF0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Effect, &type metadata for ArtworkRequest.Effect);
    atomic_store(result, (unint64_t *)&qword_1EEABDEF0);
  }
  return result;
}

uint64_t destroy for ArtworkRequest(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255)
    sub_1A913A0C0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    sub_1A913A0D8(*(id *)(a1 + 56), v3);
  v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255)
    sub_1A913A0D8(*(id *)(a1 + 72), v4);
  v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255)
    sub_1A913A0D8(*(id *)(a1 + 88), v5);
  v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255)
    sub_1A913A0D8(*(id *)(a1 + 104), v6);
  v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255)
    sub_1A913A0D8(*(id *)(a1 + 120), v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    return __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  return result;
}

uint64_t initializeWithCopy for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  int v9;
  id v10;
  id *v11;
  int v12;
  id v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = (id *)(a2 + 56);
  v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v8;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v10 = *v8;
    sub_1A913A9D8(*v8, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = v9;
  }
  v11 = (id *)(a2 + 72);
  v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v11;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v13 = *v11;
    sub_1A913A9D8(*v11, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v13;
    *(_BYTE *)(a1 + 80) = v12;
  }
  v14 = (id *)(a2 + 88);
  v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v14;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v16 = *v14;
    sub_1A913A9D8(*v14, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v16;
    *(_BYTE *)(a1 + 96) = v15;
  }
  v17 = (id *)(a2 + 104);
  v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v17;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v19 = *v17;
    sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v19;
    *(_BYTE *)(a1 + 112) = v18;
  }
  v20 = (id *)(a2 + 120);
  v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v20;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v22 = *v20;
    sub_1A913A9D8(*v20, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v22;
    *(_BYTE *)(a1 + 128) = v21;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v23 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v23;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  v24 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v24;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v25 = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    v26 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v25;
    *(_QWORD *)(a1 + 248) = v26;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 216, a2 + 216, v25);
  }
  else
  {
    v27 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v27;
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  id *v16;
  id *v17;
  int v18;
  id v19;
  void *v20;
  char v21;
  id v22;
  char v23;
  id v24;
  id *v25;
  id *v26;
  int v27;
  id v28;
  void *v29;
  char v30;
  id v31;
  char v32;
  id v33;
  id *v34;
  id *v35;
  int v36;
  id v37;
  void *v38;
  char v39;
  id v40;
  char v41;
  id v42;
  id *v43;
  id *v44;
  int v45;
  id v46;
  void *v47;
  char v48;
  id v49;
  char v50;
  id v51;
  id *v52;
  id *v53;
  int v54;
  id v55;
  void *v56;
  char v57;
  id v58;
  char v59;
  id v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v4 = v15;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_1A913A9C0(v12, v13, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1A913B300(a1 + 16);
    v14 = *(_BYTE *)(a2 + 32);
    *v4 = *v5;
    *(_BYTE *)(a1 + 32) = v14;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    sub_1A913A9C0(v7, v8, *(_BYTE *)(a2 + 32));
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    v11 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v6;
    sub_1A913A0C0(v9, v10, v11);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v16 = (id *)(a1 + 56);
  v17 = (id *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      v24 = *v17;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v16 = v24;
    }
    else
    {
      v22 = *v17;
      sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v22;
      *(_BYTE *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1A913B334(a1 + 56);
    v23 = *(_BYTE *)(a2 + 64);
    *v16 = *v17;
    *(_BYTE *)(a1 + 64) = v23;
  }
  else
  {
    v19 = *v17;
    sub_1A913A9D8(*v17, *(_BYTE *)(a2 + 64));
    v20 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v19;
    v21 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v18;
    sub_1A913A0D8(v20, v21);
  }
  v25 = (id *)(a1 + 72);
  v26 = (id *)(a2 + 72);
  v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      v33 = *v26;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v25 = v33;
    }
    else
    {
      v31 = *v26;
      sub_1A913A9D8(*v26, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v31;
      *(_BYTE *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_1A913B334(a1 + 72);
    v32 = *(_BYTE *)(a2 + 80);
    *v25 = *v26;
    *(_BYTE *)(a1 + 80) = v32;
  }
  else
  {
    v28 = *v26;
    sub_1A913A9D8(*v26, *(_BYTE *)(a2 + 80));
    v29 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v28;
    v30 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v27;
    sub_1A913A0D8(v29, v30);
  }
  v34 = (id *)(a1 + 88);
  v35 = (id *)(a2 + 88);
  v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      v42 = *v35;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v34 = v42;
    }
    else
    {
      v40 = *v35;
      sub_1A913A9D8(*v35, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v40;
      *(_BYTE *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_1A913B334(a1 + 88);
    v41 = *(_BYTE *)(a2 + 96);
    *v34 = *v35;
    *(_BYTE *)(a1 + 96) = v41;
  }
  else
  {
    v37 = *v35;
    sub_1A913A9D8(*v35, *(_BYTE *)(a2 + 96));
    v38 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v37;
    v39 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v36;
    sub_1A913A0D8(v38, v39);
  }
  v43 = (id *)(a1 + 104);
  v44 = (id *)(a2 + 104);
  v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      v51 = *v44;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v43 = v51;
    }
    else
    {
      v49 = *v44;
      sub_1A913A9D8(*v44, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v49;
      *(_BYTE *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_1A913B334(a1 + 104);
    v50 = *(_BYTE *)(a2 + 112);
    *v43 = *v44;
    *(_BYTE *)(a1 + 112) = v50;
  }
  else
  {
    v46 = *v44;
    sub_1A913A9D8(*v44, *(_BYTE *)(a2 + 112));
    v47 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v46;
    v48 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v45;
    sub_1A913A0D8(v47, v48);
  }
  v52 = (id *)(a1 + 120);
  v53 = (id *)(a2 + 120);
  v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      v60 = *v53;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v52 = v60;
    }
    else
    {
      v58 = *v53;
      sub_1A913A9D8(*v53, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v58;
      *(_BYTE *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_1A913B334(a1 + 120);
    v59 = *(_BYTE *)(a2 + 128);
    *v52 = *v53;
    *(_BYTE *)(a1 + 128) = v59;
  }
  else
  {
    v55 = *v53;
    sub_1A913A9D8(*v53, *(_BYTE *)(a2 + 128));
    v56 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v55;
    v57 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v54;
    sub_1A913A0D8(v56, v57);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = *(_QWORD *)(a2 + 240);
  if (!*(_QWORD *)(a1 + 240))
  {
    if (v61)
    {
      *(_QWORD *)(a1 + 240) = v61;
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v61 - 8))(a1 + 216, a2 + 216);
      return a1;
    }
LABEL_49:
    v62 = *(_OWORD *)(a2 + 216);
    v63 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v62;
    *(_OWORD *)(a1 + 232) = v63;
    return a1;
  }
  if (!v61)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  int v12;
  void *v13;
  _QWORD *v14;
  int v15;
  int v16;
  void *v17;
  _QWORD *v18;
  int v19;
  int v20;
  void *v21;
  _QWORD *v22;
  int v23;
  int v24;
  void *v25;
  _QWORD *v26;
  int v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(_BYTE *)(a1 + 32) = v7;
      sub_1A913A0C0(v8, v9, v6);
      goto LABEL_6;
    }
    sub_1A913B300(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      v13 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v10;
      *(_BYTE *)(a1 + 64) = v12;
      sub_1A913A0D8(v13, v11);
      goto LABEL_11;
    }
    sub_1A913B334(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v14 = (_QWORD *)(a2 + 72);
  v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      v17 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v14;
      *(_BYTE *)(a1 + 80) = v16;
      sub_1A913A0D8(v17, v15);
      goto LABEL_16;
    }
    sub_1A913B334(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v14;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v18 = (_QWORD *)(a2 + 88);
  v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      v21 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v18;
      *(_BYTE *)(a1 + 96) = v20;
      sub_1A913A0D8(v21, v19);
      goto LABEL_21;
    }
    sub_1A913B334(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v18;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v22 = (_QWORD *)(a2 + 104);
  v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      v25 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v22;
      *(_BYTE *)(a1 + 112) = v24;
      sub_1A913A0D8(v25, v23);
      goto LABEL_26;
    }
    sub_1A913B334(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v22;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v26 = (_QWORD *)(a2 + 120);
  v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 != 255)
  {
    v28 = *(unsigned __int8 *)(a2 + 128);
    if (v28 != 255)
    {
      v29 = *(void **)(a1 + 120);
      *(_QWORD *)(a1 + 120) = *v26;
      *(_BYTE *)(a1 + 128) = v28;
      sub_1A913A0D8(v29, v27);
      goto LABEL_31;
    }
    sub_1A913B334(a1 + 120);
  }
  *(_QWORD *)(a1 + 120) = *v26;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  v30 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  v31 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v31;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_BYTE *)(a1 + 202) = *(_BYTE *)(a2 + 202);
  *(_BYTE *)(a1 + 203) = *(_BYTE *)(a2 + 203);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 240))
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  v32 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v32;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 256))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 256) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 256) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest()
{
  return &type metadata for ArtworkRequest;
}

ValueMetadata *type metadata accessor for ArtworkRequest.CodingError()
{
  return &type metadata for ArtworkRequest.CodingError;
}

uint64_t storeEnumTagSinglePayload for ArtworkRequest.Destination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9321AC4 + 4 * byte_1A941DBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9321AF8 + 4 * byte_1A941DBC0[v4]))();
}

uint64_t sub_1A9321AF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9321B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9321B08);
  return result;
}

uint64_t sub_1A9321B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9321B1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9321B20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9321B28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.Destination()
{
  return &type metadata for ArtworkRequest.Destination;
}

uint64_t _s18PodcastsFoundation14ArtworkRequestV6EffectOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9321B84 + 4 * byte_1A941DBCA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9321BA4 + 4 * byte_1A941DBCF[v4]))();
}

_BYTE *sub_1A9321B84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9321BA4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9321BAC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9321BB4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9321BBC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9321BC4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.Effect()
{
  return &type metadata for ArtworkRequest.Effect;
}

uint64_t storeEnumTagSinglePayload for ArtworkRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A9321C2C + 4 * byte_1A941DBD9[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A9321C60 + 4 * byte_1A941DBD4[v4]))();
}

uint64_t sub_1A9321C60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9321C68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9321C70);
  return result;
}

uint64_t sub_1A9321C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9321C84);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A9321C88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9321C90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.CodingKeys()
{
  return &type metadata for ArtworkRequest.CodingKeys;
}

unint64_t sub_1A9321CB0()
{
  unint64_t result;

  result = qword_1EEABDEF8;
  if (!qword_1EEABDEF8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941E0DC, &type metadata for ArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDEF8);
  }
  return result;
}

unint64_t sub_1A9321CF8()
{
  unint64_t result;

  result = qword_1EEABDF00;
  if (!qword_1EEABDF00)
  {
    result = MEMORY[0x1AF414014](&unk_1A941E014, &type metadata for ArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDF00);
  }
  return result;
}

unint64_t sub_1A9321D40()
{
  unint64_t result;

  result = qword_1EEABDF08;
  if (!qword_1EEABDF08)
  {
    result = MEMORY[0x1AF414014](&unk_1A941E03C, &type metadata for ArtworkRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABDF08);
  }
  return result;
}

uint64_t sub_1A9321D84()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_1A9321DCC()
{
  unint64_t result;

  result = qword_1EEABDF10;
  if (!qword_1EEABDF10)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Effect, &type metadata for ArtworkRequest.Effect);
    atomic_store(result, (unint64_t *)&qword_1EEABDF10);
  }
  return result;
}

unint64_t sub_1A9321E10()
{
  unint64_t result;

  result = qword_1EEABDF18;
  if (!qword_1EEABDF18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkRequest.Destination, &type metadata for ArtworkRequest.Destination);
    atomic_store(result, (unint64_t *)&qword_1EEABDF18);
  }
  return result;
}

uint64_t sub_1A9321E54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9321E78()
{
  return swift_deallocObject();
}

uint64_t sub_1A9321E88(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v12 = 0;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A932B5E0;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_29_1;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    if (v12)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9321FCC(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v12 = 0;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A932B514;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1A9055748;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_9_5;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    if (v12)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9322110(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v12 = 0;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A932B514;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_19_2;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    if (v12)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t DownloadStateChecker.init(context:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4;
  return result;
}

void DownloadStateChecker.report(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v8 = *(void **)v3;
  v7 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_BYTE *)(v3 + 24);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v7;
  *(_QWORD *)(v11 + 32) = v9;
  *(_BYTE *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_QWORD *)(v11 + 64) = a3;
  v14[4] = sub_1A91D22B8;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A908A91C;
  v14[3] = &block_descriptor_62;
  v12 = _Block_copy(v14);
  v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);
}

id sub_1A9322370(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A93F71A0();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1A93F726C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1A93F7128();

    swift_willThrow();
    v9 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_1A9322484(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *, _QWORD), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD v27[4];
  uint64_t v28;

  v28 = a7;
  v27[3] = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABDF40);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  v14 = *(_QWORD *)(a5 + 16);
  v15 = (void *)objc_opt_self();
  v16 = v15;
  if (v14)
  {
    v17 = swift_bridgeObjectRetain();
    sub_1A9159F94(v17);
    swift_bridgeObjectRelease();
    v18 = (id)sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v16, sel_predicateForPodcastUuids_, v18);
  }
  else
  {
    v20 = objc_msgSend(v15, sel_predicateForPodcastToAutoRemove);
    v18 = objc_msgSend(v16, sel_predicateForPodcastsToAutodownload);
    v19 = objc_msgSend(v20, "OR:", v18);

  }
  objc_msgSend(v13, sel_setPredicate_, v19);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v21 = sub_1A93F89DC();
  v22 = sub_1A9261668(v21);

  swift_bridgeObjectRelease();
  if (v22)
  {
    v23 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1A932AE14(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  sub_1A93F7380();
  v25 = type metadata accessor for DownloadStateReport();
  *(_QWORD *)&v12[*(int *)(v25 + 20)] = v24;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
  a6(v12, 0);
  return sub_1A905FD54((uint64_t)v12, (uint64_t *)&unk_1EEABDF40);
}

uint64_t sub_1A93227A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

id sub_1A93227E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  uint64_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v44 = a2;
  v3 = v2;
  v4 = *v2;
  v6 = v3[1];
  v5 = v3[2];
  v46 = a1;
  v47 = v5;
  v7 = *((_BYTE *)v3 + 24);
  result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    v9 = result;
    v10 = sub_1A93F8040();
    v12 = v11;

    v13 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
    v14 = objc_msgSend(v13, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

    MEMORY[0x1E0C80A78](v15);
    v38[2] = v10;
    v38[3] = v12;
    v39 = v4;
    v40 = v6;
    v16 = v47;
    v41 = v47;
    v42 = v7;
    v43 = v14;
    v17 = sub_1A9321FCC((uint64_t)sub_1A932B420, (uint64_t)v38);
    v18 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v18);
    v39 = v4;
    v40 = v6;
    v41 = v16;
    v42 = v7;
    v19 = v45;
    v20 = v46;
    v43 = v46;
    v21 = sub_1A932B154(v17, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1A932B438);
    result = (id)swift_bridgeObjectRelease();
    if (!v19)
    {
      v22 = v47;
      v23 = objc_msgSend(v20, sel_uuid);
      if (v23)
      {
        v24 = v23;
        v45 = sub_1A93F8040();
        v26 = v25;

      }
      else
      {
        v26 = 0xE300000000000000;
        v45 = 4999502;
      }
      v49[0] = v4;
      v49[1] = v6;
      v49[2] = v22;
      LOBYTE(v50) = v7;
      v27 = sub_1A9322C8C(v22, v20);
      v28 = v20;
      v29 = (void *)objc_opt_self();
      v30 = objc_msgSend(v29, sel_predicateForPodcastsToAutodownload);
      v31 = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
      v50 = v31;
      v49[0] = v28;
      v32 = v28;
      NSPredicate.explain(with:)(v49, &v51);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      v33 = v51;
      v34 = objc_msgSend(v29, sel_predicateForPodcastToAutoRemove);
      v50 = v31;
      v49[0] = v32;
      v35 = v32;
      NSPredicate.explain(with:)(v49, &v48);

      result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      v36 = v48;
      v37 = v44;
      *v44 = v45;
      v37[1] = v26;
      v37[2] = v27;
      v37[3] = v21;
      v37[4] = v33;
      v37[5] = v36;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1A9322B04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, char a7@<W6>, void *a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v26;
  unint64_t v27[3];
  char v28;
  unint64_t v29;

  v16 = (void *)sub_1A93F8010();
  v17 = objc_msgSend(a4, sel_episodeForUuid_, v16);

  if (v17)
  {
    v27[0] = (unint64_t)a4;
    v27[1] = a5;
    v27[2] = a6;
    v28 = a7 & 1;
    v18 = sub_1A9322C8C(a5, v17);
    sub_1A9322E80(a8, v17, v27);
    if (v9)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = v27[0];
      sub_1A9322FB0(a8, v17, &v29);
      v20 = v29;
      sub_1A93230D8(v17, (uint64_t)&v26);

      v21 = v26;
      *a9 = a1;
      a9[1] = a2;
      a9[2] = v18;
      a9[3] = a3;
      a9[4] = v19;
      a9[5] = v20;
      a9[6] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    a9[6] = 0;
    result = 0.0;
    *((_OWORD *)a9 + 1) = 0u;
    *((_OWORD *)a9 + 2) = 0u;
    *(_OWORD *)a9 = 0u;
  }
  return result;
}

uint64_t sub_1A9322C8C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[2];
  _BYTE v20[32];
  _QWORD *v21;

  v3 = a2;
  v4 = sub_1A932AFF0(a1, v3);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v5, 0);
    v6 = v4 + 32;
    do
    {
      sub_1A9062170(v6, (uint64_t)v20, qword_1ED2AC800);
      sub_1A9062170((uint64_t)v20, (uint64_t)&v17, qword_1ED2AC800);
      if (v18)
      {
        sub_1A908A5DC(&v17, v19);
        sub_1A906443C((uint64_t)v19, (uint64_t)&v17);
        v7 = sub_1A93F8094();
        v9 = v8;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      }
      else
      {
        sub_1A905FD54((uint64_t)&v17, qword_1ED2AC800);
        v9 = 0xE300000000000000;
        v7 = 4999502;
      }
      sub_1A905FD54((uint64_t)v20, qword_1ED2AC800);
      v10 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A908182C(0, v10[2] + 1, 1);
        v10 = v21;
      }
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
      {
        sub_1A908182C(v11 > 1, v12 + 1, 1);
        v10 = v21;
      }
      v10[2] = v12 + 1;
      v13 = &v10[2 * v12];
      v13[4] = v7;
      v13[5] = v9;
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v14 = (_QWORD *)swift_bridgeObjectRetain();
  v15 = sub_1A932B45C(v14, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_1A9322E80@<X0>(id a1@<X1>, void *a2@<X0>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  id result;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  _QWORD v12[4];
  unint64_t v13;

  result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, result, objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(a1, sel_episodeLimitResolvedValue), 0, 0);

    v12[3] = sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    v12[0] = a2;
    v10 = a2;
    NSPredicate.explain(with:)(v12, (uint64_t *)&v13);

    result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    if (v3)
      return result;
    v11 = v13;
  }
  else
  {
    v11 = 0xF000000000000007;
  }
  *a3 = v11;
  return result;
}

id sub_1A9322FB0@<X0>(id a1@<X1>, void *a2@<X0>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  id result;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  _QWORD v12[4];
  unint64_t v13;

  result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, result, objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(a1, sel_episodeLimitResolvedValue));

    v12[3] = sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    v12[0] = a2;
    v10 = a2;
    NSPredicate.explain(with:)(v12, (uint64_t *)&v13);

    result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    if (v3)
      return result;
    v11 = v13;
  }
  else
  {
    v11 = 0xF000000000000007;
  }
  *a3 = v11;
  return result;
}

uint64_t sub_1A93230D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  _QWORD v19[4];
  uint64_t v20;

  v18[0] = a2;
  v3 = sub_1A93F7494();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F738C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v12 = objc_msgSend(v11, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

  v13 = sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  sub_1A93F7374();
  sub_1A93F7470();
  v14 = static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v19[3] = v13;
  v19[0] = a1;
  v15 = a1;
  v16 = v18[1];
  NSPredicate.explain(with:)(v19, &v20);

  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  if (!v16)
    *(_QWORD *)v18[0] = v20;
  return result;
}

uint64_t sub_1A9323278@<X0>(uint64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD *a1@<X8>)@<X3>, void (*a5)(_QWORD *a1@<X8>)@<X4>, int a6@<W5>, void *a7@<X6>, unint64_t *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  int64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  BOOL v33;
  char v34;
  void (*v35)(_QWORD *@<X8>);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char **v41;
  unsigned int v42;
  char **v43;
  id v44;
  void (*v45)(_QWORD *@<X8>);
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(_QWORD *@<X8>);
  void (**v56)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  id v60;
  unsigned int v61;
  char v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  void (*v67)(_QWORD *@<X8>);
  uint64_t v68;
  int v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  void (*v79)(_QWORD *@<X8>);
  id v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  void *v84;
  char *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v94;
  void (**v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD *@<X8>);
  void (*v99)(_QWORD *@<X8>);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  int64_t v122;
  unint64_t v123;
  int64_t v124;
  uint64_t *v125;
  uint64_t v126;
  char v127;
  char v128;
  unint64_t v129;
  uint64_t v130;
  _BOOL8 v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  _QWORD *v136;
  int64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  int64_t v151;
  unint64_t v152;
  int64_t v153;
  uint64_t *v154;
  uint64_t v155;
  char v156;
  char v157;
  unint64_t v158;
  uint64_t v159;
  _BOOL8 v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  char v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  int64_t v179;
  unint64_t v180;
  int64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  unint64_t v187;
  uint64_t v188;
  _BOOL8 v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  char v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  int64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  int64_t v208;
  unint64_t v209;
  int64_t v210;
  uint64_t *v211;
  uint64_t v212;
  char v213;
  char v214;
  unint64_t v215;
  uint64_t v216;
  _BOOL8 v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  char v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  int64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  int64_t v236;
  uint64_t v237;
  unint64_t v238;
  int64_t v239;
  uint64_t *v240;
  uint64_t v241;
  char v242;
  char v243;
  unint64_t v244;
  uint64_t v245;
  _BOOL8 v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  char v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  int64_t v259;
  unint64_t v260;
  int64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  char v266;
  unint64_t v267;
  uint64_t v268;
  _BOOL8 v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  char v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  char v289;
  char v290;
  unint64_t v291;
  uint64_t v292;
  _BOOL8 v293;
  uint64_t v294;
  char v295;
  uint64_t v296;
  char v297;
  _QWORD *v298;
  char v299;
  char v300;
  unint64_t v301;
  uint64_t v302;
  _BOOL8 v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  char v307;
  _QWORD *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  void (*v313)(_QWORD *@<X8>);
  uint64_t v314;
  unint64_t v315;
  unint64_t v316;
  void (**v317)(uint64_t, uint64_t);
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  char v324;
  char v325;
  unint64_t v326;
  uint64_t v327;
  _BOOL8 v328;
  uint64_t v329;
  char v330;
  uint64_t v331;
  char v332;
  _QWORD *v333;
  char v334;
  char v335;
  unint64_t v336;
  uint64_t v337;
  _BOOL8 v338;
  uint64_t v339;
  char v340;
  uint64_t v341;
  char v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unint64_t v347;
  void (*v348)(_QWORD *@<X8>);
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  char v358;
  char v359;
  unint64_t v360;
  uint64_t v361;
  _BOOL8 v362;
  uint64_t v363;
  char v364;
  uint64_t v365;
  char v366;
  _QWORD *v367;
  char v368;
  char v369;
  unint64_t v370;
  uint64_t v371;
  _BOOL8 v372;
  uint64_t v373;
  char v374;
  uint64_t v375;
  char v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  uint64_t v384;
  unint64_t v385;
  unint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  int64_t *v390;
  uint64_t v391;
  char v392;
  char v393;
  uint64_t v394;
  _BOOL8 v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  char v399;
  _QWORD *v400;
  char v401;
  char v402;
  uint64_t v403;
  _BOOL8 v404;
  uint64_t v405;
  char v406;
  uint64_t v407;
  char v408;
  _QWORD *v409;
  int64_t v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t v413;
  int64_t v414;
  unint64_t v415;
  unint64_t v416;
  int64_t *v417;
  uint64_t v418;
  int64_t v419;
  unint64_t *v420;
  unint64_t v421;
  int64_t v422;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v424;
  char v425;
  unint64_t v426;
  uint64_t v427;
  _BOOL8 v428;
  uint64_t v429;
  char v430;
  uint64_t v431;
  char v432;
  _QWORD *v433;
  char v434;
  unint64_t v435;
  char v436;
  unint64_t v437;
  uint64_t v438;
  _BOOL8 v439;
  uint64_t v440;
  char v441;
  uint64_t v442;
  char v443;
  _QWORD *v444;
  id v445;
  void *v446;
  id v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t i;
  uint64_t v453;
  uint64_t v454;
  _BYTE *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  id v459;
  void *v460;
  id v461;
  void *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  id v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  id v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  int64_t v478;
  int v479;
  uint64_t v480;
  char *v481;
  id v482;
  uint64_t v483;
  uint64_t v484;
  void *v485;
  char *v486;
  void (*v487)(_QWORD *@<X8>);
  void (*v488)(_QWORD *@<X8>);
  void (**v489)(uint64_t, uint64_t);
  uint64_t v490;
  unint64_t *v491;
  id v492;
  uint64_t v493;
  void (*v494)(_QWORD *@<X8>);
  void (*v495)(_QWORD *@<X8>);
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  unint64_t v499;
  unint64_t v500;
  void (*v501)(_QWORD *@<X8>);
  void (*v502)(_QWORD *@<X8>);
  char v503;

  v492 = a7;
  v479 = a6;
  v494 = a5;
  v495 = a4;
  v491 = a8;
  v11 = sub_1A93F7494();
  v489 = *(void (***)(uint64_t, uint64_t))(v11 - 8);
  v490 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v470 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F738C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v470 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  v19 = objc_opt_self();
  v477 = a1;
  v478 = a2;
  v20 = (void *)sub_1A93F8010();
  v21 = objc_msgSend((id)v19, sel_predicateForPodcastUUID_, v20);

  objc_msgSend(v18, sel_setPredicate_, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v22 = sub_1A93F89DC();
  v485 = 0;
  v31 = v22;
  v481 = v17;
  v483 = v15;
  v484 = v14;
  v486 = v13;
  v32 = (int64_t)v495;
  v476 = a3;
  if (!sub_1A92B5008())
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v53 = sub_1A9114DBC(0);
    v54 = sub_1A9113A44(v53);

    v25 = 0;
    v27 = 0;
    v26 = 0;
    v487 = 0;
    v488 = 0;
    v28 = 0;
    v29 = 0;
    v19 = 0;
    v55 = 0;
    v30 = 0;
    v56 = 0;
    *v491 = v54;
LABEL_16:
    sub_1A9085818(v25);
    sub_1A9085818(v27);
    sub_1A9085818(v26);
    sub_1A9085818((uint64_t)v488);
    sub_1A9085818(v28);
    sub_1A9085818(v29);
    sub_1A9085818((uint64_t)v487);
    sub_1A9085818(v19);
    sub_1A9085818((uint64_t)v55);
    sub_1A9085818(v30);
    return sub_1A9085818((uint64_t)v56);
  }
  v33 = sub_1A934C288(v31);
  v482 = v18;
  if (!v33)
    goto LABEL_443;
  v34 = v479;
  if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_445;
  }
  v35 = (void (*)(_QWORD *@<X8>))v32;
  v36 = (void *)v19;
  v37 = *(_QWORD *)(v31 + 32);
  swift_unknownObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  objc_opt_self();
  v38 = swift_dynamicCastObjCClass();
  if (!v38)
  {
    swift_unknownObjectRelease();
    v18 = v482;
    goto LABEL_15;
  }
  v39 = (void *)v38;
  v475 = v37;
  v40 = objc_msgSend(v36, sel_predicateForAutoDownloadEnabled);
  v41 = &selRef_dateByAddingTimeInterval_;
  v42 = objc_msgSend(v40, sel_evaluateWithObject_, v39);

  v43 = &selRef_setHour_;
  if (v42)
  {
    v44 = objc_msgSend(v39, sel_uuid);
    v45 = v494;
    if (!v44)
      goto LABEL_457;
    v46 = v44;
    v47 = (void *)objc_opt_self();
    v48 = objc_msgSend(v47, sel_predicateForEpisodesThatShouldBeAutodownloadedForShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v46, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue), 0, 0);

    v49 = v476;
    v500 = v476;
    v501 = (void (*)(_QWORD *@<X8>))v32;
    v502 = v45;
    v503 = v34 & 1;
    v487 = (void (*)(_QWORD *@<X8>))sub_1A9326778((uint64_t)v48, v476);

    v50 = objc_msgSend(v39, sel_uuid);
    if (!v50)
      goto LABEL_458;
    v51 = v50;
    v52 = objc_msgSend(v47, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v50, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue), 0, 0);

    v500 = v49;
    v501 = (void (*)(_QWORD *@<X8>))v32;
    v502 = v45;
    v503 = v34 & 1;
    v497 = sub_1A9326778((uint64_t)v52, v49);

    v35 = (void (*)(_QWORD *@<X8>))v32;
    v43 = &selRef_setHour_;
    v41 = &selRef_dateByAddingTimeInterval_;
  }
  else
  {
    v58 = sub_1A9114C6C(0);
    if (sub_1A9261404(v58))
      v487 = (void (*)(_QWORD *@<X8>))sub_1A91335F8(v58);
    else
      v487 = (void (*)(_QWORD *@<X8>))MEMORY[0x1E0DEE9E8];
    swift_bridgeObjectRelease();
    v59 = sub_1A9114C6C(0);
    if (sub_1A9261404(v59))
    {
      v497 = sub_1A91335F8(v59);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v497 = MEMORY[0x1E0DEE9E8];
    }
  }
  v60 = objc_msgSend(v36, sel_predicateForPodcastToAutoRemove, v470);
  v61 = objc_msgSend(v60, v41[122], v39);

  if (v61)
  {
    v62 = v34;
    v63 = objc_msgSend(v39, v43[373]);
    if (!v63)
      goto LABEL_459;
    v64 = v63;
    v65 = objc_msgSend((id)objc_opt_self(), sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, v63, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue));

    v66 = v476;
    v500 = v476;
    v501 = v35;
    v67 = v494;
    v502 = v494;
    v503 = v34 & 1;
    v496 = sub_1A9326778((uint64_t)v65, v476);

  }
  else
  {
    v68 = sub_1A9114C6C(0);
    if (sub_1A9261404(v68))
    {
      v496 = sub_1A91335F8(v68);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v496 = MEMORY[0x1E0DEE9E8];
    }
    v66 = v476;
    v67 = v494;
    v62 = v34;
  }
  v500 = v66;
  v501 = v35;
  v502 = v67;
  v69 = v62 & 1;
  v503 = v69;
  v70 = objc_msgSend(v39, v43[373]);
  if (!v70)
    goto LABEL_455;
  v71 = v70;
  v72 = (void *)objc_opt_self();
  v73 = objc_msgSend(v72, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v71);

  v493 = sub_1A9326778((uint64_t)v73, v66);
  v74 = objc_msgSend(v72, sel_predicateForDownloadBehavior_, 2);
  v75 = objc_msgSend(v39, v43[373]);
  if (v75)
  {
    v76 = v75;
    v77 = objc_msgSend(v72, sel_predicateForAllEpisodesOnPodcastUuid_, v75);

    v78 = objc_msgSend(v74, sel_AND_, v77);
    v500 = v66;
    v501 = v35;
    v79 = v494;
    v502 = v494;
    v503 = v69;
    v498 = sub_1A9326778((uint64_t)v78, v66);

    v80 = objc_msgSend(v72, sel_predicateForHasValidPersistentId_, 1);
    v500 = v66;
    v501 = v35;
    v502 = v79;
    v503 = v69;
    v488 = (void (*)(_QWORD *@<X8>))sub_1A9326778((uint64_t)v80, v66);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
    v81 = swift_allocObject();
    sub_1A925337C(v81, 2);
    v83 = v82;
    v84 = (void *)sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    v85 = v481;
    sub_1A93F7374();
    LODWORD(v480) = v69;
    v86 = (uint64_t)v486;
    sub_1A93F7470();
    v87 = static MTEpisode.predicateForPurgeableEpisodes(globalRetentionPolicy:evaluationDate:calendar:)((uint64_t)v492);
    v489[1](v86, v490);
    (*(void (**)(char *, uint64_t))(v483 + 8))(v85, v484);
    *v83 = v87;
    v88 = v477;
    v19 = v478;
    v89 = (void *)sub_1A93F8010();
    v90 = objc_msgSend(v72, sel_predicateForAllEpisodesOnPodcastUuid_, v89);

    v83[1] = v90;
    sub_1A925120C();
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
    v91 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v92 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v91);

    v93 = v485;
    v94 = DownloadStateChecker.episodesToBePurged(in:for:)(v66, v88, v19);
    if (v93)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v102 = 0;
      v481 = 0;
      v497 = 0;
      v498 = 0;
      v488 = 0;
      v496 = 0;
      v480 = 0;
      v487 = 0;
      v19 = 0;
      v55 = 0;
      v490 = 0;
      v56 = 0;
LABEL_2:
      v23 = sub_1A9114DBC(0);
      v24 = sub_1A9113A44(v23);

      sub_1A9085818((uint64_t)v98);
      sub_1A9085818((uint64_t)v99);
      sub_1A9085818(v100);
      sub_1A9085818(v101);
      sub_1A9085818(v102);
      *v491 = v24;
LABEL_3:
      v25 = (uint64_t)v481;
      v26 = v497;
      v27 = v498;
      v28 = v496;
      v29 = v480;
      v30 = v490;
      goto LABEL_16;
    }
    v485 = 0;
    v486 = (char *)v96;
    v489 = v95;
    v484 = v97;
    v492 = v84;
    v500 = v66;
    v501 = v495;
    v502 = v79;
    v503 = v480;
    v31 = (uint64_t)&v500;
    v490 = v94;
    v103 = sub_1A9326778((uint64_t)v92, v66);
    if (*(_QWORD *)(v490 + 16) <= *(_QWORD *)(v103 + 16) >> 3)
    {
      v500 = v103;
      sub_1A927105C(v490);
      v104 = v500;
    }
    else
    {
      v104 = sub_1A91F3C3C(v490, v103);
    }
    if ((unint64_t)v489[2] <= *(_QWORD *)(v104 + 16) >> 3)
    {
      v500 = v104;
      sub_1A927105C((uint64_t)v489);
      v105 = v500;
    }
    else
    {
      v105 = sub_1A91F3C3C((uint64_t)v489, v104);
    }
    if (*((_QWORD *)v486 + 2) <= *(_QWORD *)(v105 + 16) >> 3)
    {
      v500 = v105;
      sub_1A927105C((uint64_t)v486);
      v106 = v500;
    }
    else
    {
      v106 = sub_1A91F3C3C((uint64_t)v486, v105);
    }
    v107 = *(_QWORD *)(v484 + 16);
    v108 = *(_QWORD *)(v106 + 16);
    v470 = v72;
    v474 = v92;
    if (v107 > v108 >> 3)
    {
      v483 = sub_1A91F3C3C(v484, v106);
    }
    else
    {
      v500 = v106;
      sub_1A927105C(v484);
      v483 = v500;
    }
    v500 = MEMORY[0x1E0DEE9E0];
    v109 = v493 + 56;
    v110 = 1 << *(_BYTE *)(v493 + 32);
    v111 = -1;
    if (v110 < 64)
      v111 = ~(-1 << v110);
    v112 = v111 & *(_QWORD *)(v493 + 56);
    v32 = (unint64_t)(v110 + 63) >> 6;
    swift_bridgeObjectRetain();
    v495 = 0;
    v113 = 0;
    while (1)
    {
      if (v112)
      {
        v120 = __clz(__rbit64(v112));
        v112 &= v112 - 1;
        v121 = v120 | (v113 << 6);
      }
      else
      {
        v122 = v113 + 1;
        if (__OFADD__(v113, 1))
          goto LABEL_428;
        if (v122 >= v32)
        {
LABEL_74:
          swift_release();
          v494 = 0;
          v137 = 0;
          v138 = v498;
          v139 = v498 + 56;
          v140 = 1 << *(_BYTE *)(v498 + 32);
          v141 = -1;
          if (v140 < 64)
            v141 = ~(-1 << v140);
          v142 = v141 & *(_QWORD *)(v498 + 56);
          v32 = (unint64_t)(v140 + 63) >> 6;
          while (1)
          {
            if (v142)
            {
              v149 = __clz(__rbit64(v142));
              v142 &= v142 - 1;
              v150 = v149 | (v137 << 6);
            }
            else
            {
              v151 = v137 + 1;
              if (__OFADD__(v137, 1))
                goto LABEL_429;
              if (v151 >= v32)
              {
LABEL_102:
                swift_release();
                v166 = sub_1A92C2BB8(v493, (uint64_t)v487);
                v31 = 0;
                v19 = 0;
                v167 = *(_QWORD *)(v166 + 56);
                v498 = v166 + 56;
                v168 = 1 << *(_BYTE *)(v166 + 32);
                v169 = -1;
                if (v168 < 64)
                  v169 = ~(-1 << v168);
                v170 = v169 & v167;
                v32 = (unint64_t)(v168 + 63) >> 6;
                while (1)
                {
                  if (v170)
                  {
                    v177 = __clz(__rbit64(v170));
                    v170 &= v170 - 1;
                    v178 = v177 | (v19 << 6);
                  }
                  else
                  {
                    v179 = v19 + 1;
                    if (__OFADD__(v19, 1))
                      goto LABEL_430;
                    if (v179 >= v32)
                    {
LABEL_130:
                      v473 = v31;
                      swift_release();
                      v31 = 0;
                      v32 = 0;
                      v195 = v497 + 56;
                      v196 = 1 << *(_BYTE *)(v497 + 32);
                      v197 = -1;
                      if (v196 < 64)
                        v197 = ~(-1 << v196);
                      v198 = v197 & *(_QWORD *)(v497 + 56);
                      v199 = (unint64_t)(v196 + 63) >> 6;
                      while (1)
                      {
                        if (v198)
                        {
                          v206 = __clz(__rbit64(v198));
                          v198 &= v198 - 1;
                          v207 = v206 | (v32 << 6);
                        }
                        else
                        {
                          v208 = v32 + 1;
                          if (__OFADD__(v32, 1))
                            goto LABEL_431;
                          if (v208 >= v199)
                          {
LABEL_158:
                            v472 = v31;
                            swift_release();
                            v31 = 0;
                            v32 = 0;
                            v223 = v496 + 56;
                            v224 = 1 << *(_BYTE *)(v496 + 32);
                            v225 = -1;
                            if (v224 < 64)
                              v225 = ~(-1 << v224);
                            v226 = v225 & *(_QWORD *)(v496 + 56);
                            v227 = (unint64_t)(v224 + 63) >> 6;
                            while (1)
                            {
                              if (v226)
                              {
                                v234 = __clz(__rbit64(v226));
                                v226 &= v226 - 1;
                                v235 = v234 | (v32 << 6);
                              }
                              else
                              {
                                v236 = v32 + 1;
                                if (__OFADD__(v32, 1))
                                  goto LABEL_432;
                                v237 = (uint64_t)v488;
                                if (v236 >= v227)
                                {
LABEL_186:
                                  v471 = v31;
                                  swift_release();
                                  v252 = sub_1A92C2BB8(v493, v237);
                                  v31 = 0;
                                  v19 = 0;
                                  v253 = *(_QWORD *)(v252 + 56);
                                  v498 = v252 + 56;
                                  v254 = 1 << *(_BYTE *)(v252 + 32);
                                  v255 = -1;
                                  if (v254 < 64)
                                    v255 = ~(-1 << v254);
                                  v256 = v255 & v253;
                                  v32 = (unint64_t)(v254 + 63) >> 6;
                                  while (1)
                                  {
                                    if (v256)
                                    {
                                      v257 = __clz(__rbit64(v256));
                                      v256 &= v256 - 1;
                                      v258 = v257 | (v19 << 6);
                                    }
                                    else
                                    {
                                      v259 = v19 + 1;
                                      if (__OFADD__(v19, 1))
                                        goto LABEL_433;
                                      if (v259 >= v32)
                                      {
LABEL_214:
                                        v481 = (char *)v31;
                                        swift_release();
                                        v275 = v490 + 56;
                                        v276 = 1 << *(_BYTE *)(v490 + 32);
                                        v277 = -1;
                                        if (v276 < 64)
                                          v277 = ~(-1 << v276);
                                        v278 = v277 & *(_QWORD *)(v490 + 56);
                                        v496 = (unint64_t)(v276 + 63) >> 6;
                                        swift_bridgeObjectRetain();
                                        v497 = 0;
                                        v498 = 0;
                                        v279 = 0;
                                        v32 = 0x8000000000000000;
                                        while (1)
                                        {
                                          if (v278)
                                          {
                                            v281 = __clz(__rbit64(v278));
                                            v278 &= v278 - 1;
                                            v282 = v281 | (v279 << 6);
                                            v283 = v490;
                                          }
                                          else
                                          {
                                            v284 = v279 + 1;
                                            v283 = v490;
                                            if (__OFADD__(v279, 1))
                                              goto LABEL_434;
                                            if (v284 >= v496)
                                            {
LABEL_250:
                                              swift_release();
                                              v309 = (char *)(v489 + 7);
                                              v310 = 1 << *((_BYTE *)v489 + 32);
                                              v311 = -1;
                                              if (v310 < 64)
                                                v311 = ~(-1 << v310);
                                              v312 = v311 & (unint64_t)v489[7];
                                              v488 = (void (*)(_QWORD *@<X8>))((unint64_t)(v310 + 63) >> 6);
                                              swift_bridgeObjectRetain();
                                              v313 = 0;
                                              v496 = 0;
                                              v19 = 0;
                                              v32 = 0x8000000000000000;
                                              while (1)
                                              {
                                                if (v312)
                                                {
                                                  v315 = __clz(__rbit64(v312));
                                                  v312 &= v312 - 1;
                                                  v316 = v315 | (v19 << 6);
                                                  v317 = v489;
                                                }
                                                else
                                                {
                                                  v318 = v19 + 1;
                                                  v317 = v489;
                                                  if (__OFADD__(v19, 1))
                                                    goto LABEL_435;
                                                  if (v318 >= (uint64_t)v488)
                                                  {
LABEL_286:
                                                    v488 = v313;
                                                    swift_release();
                                                    v344 = *((_QWORD *)v486 + 7);
                                                    v480 = (uint64_t)(v486 + 56);
                                                    v345 = 1 << v486[32];
                                                    v346 = -1;
                                                    if (v345 < 64)
                                                      v346 = ~(-1 << v345);
                                                    v347 = v346 & v344;
                                                    v487 = (void (*)(_QWORD *@<X8>))((unint64_t)(v345 + 63) >> 6);
                                                    swift_bridgeObjectRetain();
                                                    v31 = 0;
                                                    v348 = 0;
                                                    v32 = 0;
                                                    v19 = 0x8000000000000000;
                                                    while (1)
                                                    {
                                                      if (v347)
                                                      {
                                                        v349 = __clz(__rbit64(v347));
                                                        v347 &= v347 - 1;
                                                        v350 = v349 | (v32 << 6);
                                                        v351 = (uint64_t)v486;
                                                      }
                                                      else
                                                      {
                                                        v352 = v32 + 1;
                                                        v351 = (uint64_t)v486;
                                                        if (__OFADD__(v32, 1))
                                                          goto LABEL_436;
                                                        if (v352 >= (uint64_t)v487)
                                                        {
LABEL_322:
                                                          v480 = v31;
                                                          v487 = v348;
                                                          swift_release();
                                                          swift_bridgeObjectRelease();
                                                          swift_bridgeObjectRelease();
                                                          swift_bridgeObjectRelease();
                                                          v19 = 0;
                                                          v55 = 0;
                                                          v378 = 0;
                                                          v379 = v484;
                                                          v380 = *(_QWORD *)(v484 + 56);
                                                          v489 = (void (**)(uint64_t, uint64_t))(v484 + 56);
                                                          v381 = 1 << *(_BYTE *)(v484 + 32);
                                                          v382 = -1;
                                                          if (v381 < 64)
                                                            v382 = ~(-1 << v381);
                                                          v383 = v382 & v380;
                                                          v490 = (unint64_t)(v381 + 63) >> 6;
                                                          while (1)
                                                          {
                                                            if (v383)
                                                            {
                                                              v385 = __clz(__rbit64(v383));
                                                              v383 &= v383 - 1;
                                                              v386 = v385 | (v378 << 6);
                                                            }
                                                            else
                                                            {
                                                              v387 = v378 + 1;
                                                              if (__OFADD__(v378, 1))
                                                                goto LABEL_437;
                                                              if (v387 >= v490)
                                                              {
LABEL_358:
                                                                swift_release();
                                                                v489 = 0;
                                                                v490 = 0;
                                                                v410 = 0;
                                                                v31 = v483 + 56;
                                                                v411 = 1 << *(_BYTE *)(v483 + 32);
                                                                v412 = -1;
                                                                if (v411 < 64)
                                                                  v412 = ~(-1 << v411);
                                                                v413 = v412 & *(_QWORD *)(v483 + 56);
                                                                v414 = (unint64_t)(v411 + 63) >> 6;
                                                                v486 = (char *)(v483 + 56);
                                                                v484 = v414;
                                                                if (v413)
                                                                {
LABEL_361:
                                                                  v415 = __clz(__rbit64(v413));
                                                                  v413 &= v413 - 1;
                                                                  v416 = v415 | (v410 << 6);
                                                                  goto LABEL_362;
                                                                }
                                                                while (1)
                                                                {
                                                                  v419 = v410 + 1;
                                                                  if (__OFADD__(v410, 1))
                                                                    goto LABEL_438;
                                                                  v420 = v491;
                                                                  v56 = v489;
                                                                  if (v419 >= v414)
                                                                    goto LABEL_396;
                                                                  v421 = *(_QWORD *)(v31 + 8 * v419);
                                                                  ++v410;
                                                                  if (!v421)
                                                                  {
                                                                    v410 = v419 + 1;
                                                                    if (v419 + 1 >= v414)
                                                                      goto LABEL_396;
                                                                    v421 = *(_QWORD *)(v31 + 8 * v410);
                                                                    if (!v421)
                                                                    {
                                                                      v410 = v419 + 2;
                                                                      if (v419 + 2 >= v414)
                                                                        goto LABEL_396;
                                                                      v421 = *(_QWORD *)(v31 + 8 * v410);
                                                                      if (!v421)
                                                                      {
                                                                        v422 = v419 + 3;
                                                                        if (v422 >= v414)
                                                                        {
LABEL_396:
                                                                          swift_bridgeObjectRelease();
                                                                          swift_release();
                                                                          if ((v479 & 1) != 0)
                                                                          {
                                                                            sub_1A93F8040();
                                                                            v445 = sub_1A92C48C8();
                                                                            v446 = (void *)sub_1A93F8010();
                                                                            v447 = objc_msgSend(v470, sel_predicateForAllEpisodesOnPodcastUuid_, v446);

                                                                            objc_msgSend(v445, sel_setPredicate_, v447);
                                                                            v93 = v485;
                                                                            v448 = sub_1A93F89DC();
                                                                            if (v93)
                                                                            {

                                                                              swift_unknownObjectRelease();
                                                                              swift_bridgeObjectRelease();
                                                                              v99 = v494;
                                                                              v98 = v495;
                                                                              v100 = v473;
                                                                              v101 = v472;
                                                                              v102 = v471;
                                                                              goto LABEL_2;
                                                                            }
                                                                            v449 = v448;
                                                                            v492 = v445;
                                                                            v450 = sub_1A92B5008();
                                                                            if (v450)
                                                                            {
                                                                              v451 = v450;
                                                                              if (v450 < 1)
                                                                                goto LABEL_454;
                                                                              LODWORD(v493) = sub_1A934C7A0(v449);
                                                                              for (i = 0; i != v451; ++i)
                                                                              {
                                                                                if ((v493 & 1) != 0)
                                                                                  v459 = *(id *)(v449 + 8 * i + 32);
                                                                                else
                                                                                  v459 = (id)MEMORY[0x1AF4129DC](i, v449);
                                                                                v460 = v459;
                                                                                v461 = objc_msgSend(v459, sel_uuid, v470);
                                                                                if (v461)
                                                                                {
                                                                                  v462 = v461;
                                                                                  v463 = v449;
                                                                                  v464 = sub_1A93F8040();
                                                                                  v466 = v465;

                                                                                  v467 = v500;
                                                                                  swift_bridgeObjectRetain();
                                                                                  v468 = v464;
                                                                                  LOBYTE(v464) = sub_1A93C223C(v464, v466, v467);
                                                                                  swift_bridgeObjectRelease();
                                                                                  if ((v464 & 1) != 0)
                                                                                  {
                                                                                    swift_bridgeObjectRelease();
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A10);
                                                                                    v453 = swift_allocObject();
                                                                                    v454 = sub_1A925336C(v453, 1);
                                                                                    *v455 = 13;
                                                                                    v458 = nullsub_1(v454, v455, v456, v457);
                                                                                    sub_1A927CE54(v458, v468, v466);
                                                                                  }
                                                                                  v449 = v463;
                                                                                }

                                                                              }
                                                                            }

                                                                            swift_bridgeObjectRelease();
                                                                            swift_unknownObjectRelease();
                                                                            v420 = v491;
                                                                            v56 = v489;
                                                                          }
                                                                          else
                                                                          {

                                                                            swift_unknownObjectRelease();
                                                                          }
                                                                          v469 = v500;
                                                                          sub_1A9085818((uint64_t)v495);
                                                                          sub_1A9085818((uint64_t)v494);
                                                                          sub_1A9085818(v473);
                                                                          sub_1A9085818(v472);
                                                                          sub_1A9085818(v471);
                                                                          *v420 = v469;
                                                                          goto LABEL_3;
                                                                        }
                                                                        v421 = *(_QWORD *)(v31 + 8 * v422);
                                                                        if (!v421)
                                                                        {
                                                                          while (1)
                                                                          {
                                                                            v410 = v422 + 1;
                                                                            if (__OFADD__(v422, 1))
                                                                              goto LABEL_451;
                                                                            if (v410 >= v414)
                                                                              goto LABEL_396;
                                                                            v421 = *(_QWORD *)(v31 + 8 * v410);
                                                                            ++v422;
                                                                            if (v421)
                                                                              goto LABEL_377;
                                                                          }
                                                                        }
                                                                        v410 = v422;
                                                                      }
                                                                    }
                                                                  }
LABEL_377:
                                                                  v413 = (v421 - 1) & v421;
                                                                  v416 = __clz(__rbit64(v421)) + (v410 << 6);
LABEL_362:
                                                                  v417 = (int64_t *)(*(_QWORD *)(v483 + 48)
                                                                                          + 16 * v416);
                                                                  v32 = *v417;
                                                                  v418 = v417[1];
                                                                  swift_bridgeObjectRetain();
                                                                  if ((sub_1A92EFAA4(v32, v418, v493) & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRetain();
                                                                    sub_1A9085818(v490);
                                                                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                                                                    v424 = v500;
                                                                    v499 = v500;
                                                                    v500 = 0x8000000000000000;
                                                                    v426 = sub_1A9094640(v32, v418);
                                                                    v427 = *(_QWORD *)(v424 + 16);
                                                                    v428 = (v425 & 1) == 0;
                                                                    v429 = v427 + v428;
                                                                    if (__OFADD__(v427, v428))
                                                                      goto LABEL_452;
                                                                    v430 = v425;
                                                                    if (*(_QWORD *)(v424 + 24) >= v429)
                                                                    {
                                                                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                                                                      {
                                                                        sub_1A930B004();
                                                                        v424 = v499;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      sub_1A93059DC(v429, isUniquelyReferenced_nonNull_native);
                                                                      v424 = v499;
                                                                      v431 = sub_1A9094640(v32, v418);
                                                                      if ((v430 & 1) != (v432 & 1))
                                                                        goto LABEL_460;
                                                                      v426 = v431;
                                                                    }
                                                                    v500 = v424;
                                                                    swift_bridgeObjectRelease();
                                                                    v433 = (_QWORD *)v500;
                                                                    swift_bridgeObjectRetain();
                                                                    if ((v430 & 1) == 0)
                                                                    {
                                                                      sub_1A931053C(v426, v32, v418, MEMORY[0x1E0DEE9D8], v433);
                                                                      swift_bridgeObjectRetain();
                                                                    }
                                                                    swift_bridgeObjectRelease();
                                                                    sub_1A91AC6E0(12);
                                                                    swift_bridgeObjectRelease();
                                                                    sub_1A9085818((uint64_t)v489);
                                                                    v434 = swift_isUniquelyReferenced_nonNull_native();
                                                                    v435 = v500;
                                                                    v499 = v500;
                                                                    v500 = 0x8000000000000000;
                                                                    v437 = sub_1A9094640(v32, v418);
                                                                    v438 = *(_QWORD *)(v435 + 16);
                                                                    v439 = (v436 & 1) == 0;
                                                                    v440 = v438 + v439;
                                                                    if (__OFADD__(v438, v439))
                                                                      goto LABEL_453;
                                                                    v441 = v436;
                                                                    if (*(_QWORD *)(v435 + 24) >= v440)
                                                                    {
                                                                      if ((v434 & 1) == 0)
                                                                      {
                                                                        sub_1A930B004();
                                                                        v435 = v499;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      sub_1A93059DC(v440, v434);
                                                                      v435 = v499;
                                                                      v442 = sub_1A9094640(v32, v418);
                                                                      if ((v441 & 1) != (v443 & 1))
                                                                        goto LABEL_460;
                                                                      v437 = v442;
                                                                    }
                                                                    v500 = v435;
                                                                    swift_bridgeObjectRelease();
                                                                    v444 = (_QWORD *)v500;
                                                                    swift_bridgeObjectRetain();
                                                                    if ((v441 & 1) == 0)
                                                                    {
                                                                      sub_1A931053C(v437, v32, v418, MEMORY[0x1E0DEE9D8], v444);
                                                                      swift_bridgeObjectRetain();
                                                                    }
                                                                    swift_bridgeObjectRelease();
                                                                    sub_1A91AC6E0(0);
                                                                    swift_bridgeObjectRelease();
                                                                    v489 = (void (**)(uint64_t, uint64_t))sub_1A9326964;
                                                                    v490 = (uint64_t)sub_1A9326964;
                                                                    v31 = (uint64_t)v486;
                                                                    v414 = v484;
                                                                    if (v413)
                                                                      goto LABEL_361;
                                                                  }
                                                                  else
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    if (v413)
                                                                      goto LABEL_361;
                                                                  }
                                                                }
                                                              }
                                                              v388 = (unint64_t)v489[v387];
                                                              ++v378;
                                                              if (!v388)
                                                              {
                                                                v378 = v387 + 1;
                                                                if (v387 + 1 >= v490)
                                                                  goto LABEL_358;
                                                                v388 = (unint64_t)v489[v378];
                                                                if (!v388)
                                                                {
                                                                  v378 = v387 + 2;
                                                                  if (v387 + 2 >= v490)
                                                                    goto LABEL_358;
                                                                  v388 = (unint64_t)v489[v378];
                                                                  if (!v388)
                                                                  {
                                                                    v389 = v387 + 3;
                                                                    if (v389 >= v490)
                                                                      goto LABEL_358;
                                                                    v388 = (unint64_t)v489[v389];
                                                                    if (!v388)
                                                                    {
                                                                      while (1)
                                                                      {
                                                                        v378 = v389 + 1;
                                                                        if (__OFADD__(v389, 1))
                                                                          break;
                                                                        if (v378 >= v490)
                                                                          goto LABEL_358;
                                                                        v388 = (unint64_t)v489[v378];
                                                                        ++v389;
                                                                        if (v388)
                                                                          goto LABEL_341;
                                                                      }
LABEL_450:
                                                                      __break(1u);
LABEL_451:
                                                                      __break(1u);
LABEL_452:
                                                                      __break(1u);
LABEL_453:
                                                                      __break(1u);
LABEL_454:
                                                                      __break(1u);
LABEL_455:
                                                                      __break(1u);
                                                                      goto LABEL_456;
                                                                    }
                                                                    v378 = v389;
                                                                  }
                                                                }
                                                              }
LABEL_341:
                                                              v383 = (v388 - 1) & v388;
                                                              v386 = __clz(__rbit64(v388)) + (v378 << 6);
                                                            }
                                                            v390 = (int64_t *)(*(_QWORD *)(v379 + 48) + 16 * v386);
                                                            v32 = *v390;
                                                            v391 = v390[1];
                                                            swift_bridgeObjectRetain_n();
                                                            sub_1A9085818(v19);
                                                            v392 = swift_isUniquelyReferenced_nonNull_native();
                                                            v31 = v500;
                                                            v499 = v500;
                                                            v500 = 0x8000000000000000;
                                                            v19 = sub_1A9094640(v32, v391);
                                                            v394 = *(_QWORD *)(v31 + 16);
                                                            v395 = (v393 & 1) == 0;
                                                            v396 = v394 + v395;
                                                            if (__OFADD__(v394, v395))
                                                              goto LABEL_426;
                                                            v397 = v393;
                                                            if (*(_QWORD *)(v31 + 24) >= v396)
                                                            {
                                                              if ((v392 & 1) == 0)
                                                              {
                                                                sub_1A930B004();
                                                                v31 = v499;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              sub_1A93059DC(v396, v392);
                                                              v31 = v499;
                                                              v398 = sub_1A9094640(v32, v391);
                                                              if ((v397 & 1) != (v399 & 1))
                                                                goto LABEL_460;
                                                              v19 = v398;
                                                            }
                                                            v500 = v31;
                                                            swift_bridgeObjectRelease();
                                                            v400 = (_QWORD *)v500;
                                                            swift_bridgeObjectRetain();
                                                            if ((v397 & 1) == 0)
                                                            {
                                                              sub_1A931053C(v19, v32, v391, MEMORY[0x1E0DEE9D8], v400);
                                                              swift_bridgeObjectRetain();
                                                            }
                                                            swift_bridgeObjectRelease();
                                                            sub_1A91AC6E0(11);
                                                            swift_bridgeObjectRelease();
                                                            sub_1A9085818((uint64_t)v55);
                                                            v401 = swift_isUniquelyReferenced_nonNull_native();
                                                            v31 = v500;
                                                            v499 = v500;
                                                            v500 = 0x8000000000000000;
                                                            v19 = sub_1A9094640(v32, v391);
                                                            v403 = *(_QWORD *)(v31 + 16);
                                                            v404 = (v402 & 1) == 0;
                                                            v405 = v403 + v404;
                                                            if (__OFADD__(v403, v404))
                                                              goto LABEL_427;
                                                            v406 = v402;
                                                            if (*(_QWORD *)(v31 + 24) >= v405)
                                                            {
                                                              if ((v401 & 1) == 0)
                                                              {
                                                                sub_1A930B004();
                                                                v31 = v499;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              sub_1A93059DC(v405, v401);
                                                              v31 = v499;
                                                              v407 = sub_1A9094640(v32, v391);
                                                              if ((v406 & 1) != (v408 & 1))
                                                                goto LABEL_460;
                                                              v19 = v407;
                                                            }
                                                            v500 = v31;
                                                            swift_bridgeObjectRelease();
                                                            v409 = (_QWORD *)v500;
                                                            swift_bridgeObjectRetain();
                                                            if ((v406 & 1) == 0)
                                                            {
                                                              sub_1A931053C(v19, v32, v391, MEMORY[0x1E0DEE9D8], v409);
                                                              swift_bridgeObjectRetain();
                                                            }
                                                            v384 = v409[7];
                                                            swift_bridgeObjectRelease();
                                                            v31 = v384 + 8 * v19;
                                                            sub_1A91AC6E0(0);
                                                            swift_bridgeObjectRelease();
                                                            v19 = (int64_t)sub_1A9326964;
                                                            v55 = sub_1A9326964;
                                                            v379 = v484;
                                                          }
                                                        }
                                                        v353 = *(_QWORD *)(v480 + 8 * v352);
                                                        ++v32;
                                                        if (!v353)
                                                        {
                                                          v32 = v352 + 1;
                                                          if (v352 + 1 >= (uint64_t)v487)
                                                            goto LABEL_322;
                                                          v353 = *(_QWORD *)(v480 + 8 * v32);
                                                          if (!v353)
                                                          {
                                                            v32 = v352 + 2;
                                                            if (v352 + 2 >= (uint64_t)v487)
                                                              goto LABEL_322;
                                                            v353 = *(_QWORD *)(v480 + 8 * v32);
                                                            if (!v353)
                                                            {
                                                              v354 = v352 + 3;
                                                              if (v354 >= (uint64_t)v487)
                                                                goto LABEL_322;
                                                              v353 = *(_QWORD *)(v480 + 8 * v354);
                                                              if (!v353)
                                                              {
                                                                while (1)
                                                                {
                                                                  v32 = v354 + 1;
                                                                  if (__OFADD__(v354, 1))
                                                                    break;
                                                                  if (v32 >= (uint64_t)v487)
                                                                    goto LABEL_322;
                                                                  v353 = *(_QWORD *)(v480 + 8 * v32);
                                                                  ++v354;
                                                                  if (v353)
                                                                    goto LABEL_305;
                                                                }
LABEL_449:
                                                                __break(1u);
                                                                goto LABEL_450;
                                                              }
                                                              v32 = v354;
                                                            }
                                                          }
                                                        }
LABEL_305:
                                                        v347 = (v353 - 1) & v353;
                                                        v350 = __clz(__rbit64(v353)) + (v32 << 6);
                                                      }
                                                      v355 = (uint64_t *)(*(_QWORD *)(v351 + 48) + 16 * v350);
                                                      v357 = *v355;
                                                      v356 = v355[1];
                                                      swift_bridgeObjectRetain_n();
                                                      sub_1A9085818(v31);
                                                      v358 = swift_isUniquelyReferenced_nonNull_native();
                                                      v31 = v500;
                                                      v499 = v500;
                                                      v500 = 0x8000000000000000;
                                                      v360 = sub_1A9094640(v357, v356);
                                                      v361 = *(_QWORD *)(v31 + 16);
                                                      v362 = (v359 & 1) == 0;
                                                      v363 = v361 + v362;
                                                      if (__OFADD__(v361, v362))
                                                        goto LABEL_424;
                                                      v364 = v359;
                                                      if (*(_QWORD *)(v31 + 24) >= v363)
                                                      {
                                                        if ((v358 & 1) == 0)
                                                        {
                                                          sub_1A930B004();
                                                          v31 = v499;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        sub_1A93059DC(v363, v358);
                                                        v31 = v499;
                                                        v365 = sub_1A9094640(v357, v356);
                                                        if ((v364 & 1) != (v366 & 1))
                                                          goto LABEL_460;
                                                        v360 = v365;
                                                      }
                                                      v500 = v31;
                                                      swift_bridgeObjectRelease();
                                                      v367 = (_QWORD *)v500;
                                                      swift_bridgeObjectRetain();
                                                      if ((v364 & 1) == 0)
                                                      {
                                                        sub_1A931053C(v360, v357, v356, MEMORY[0x1E0DEE9D8], v367);
                                                        swift_bridgeObjectRetain();
                                                      }
                                                      swift_bridgeObjectRelease();
                                                      sub_1A91AC6E0(10);
                                                      swift_bridgeObjectRelease();
                                                      sub_1A9085818((uint64_t)v348);
                                                      v368 = swift_isUniquelyReferenced_nonNull_native();
                                                      v31 = v500;
                                                      v499 = v500;
                                                      v500 = 0x8000000000000000;
                                                      v370 = sub_1A9094640(v357, v356);
                                                      v371 = *(_QWORD *)(v31 + 16);
                                                      v372 = (v369 & 1) == 0;
                                                      v373 = v371 + v372;
                                                      if (__OFADD__(v371, v372))
                                                        goto LABEL_425;
                                                      v374 = v369;
                                                      if (*(_QWORD *)(v31 + 24) >= v373)
                                                      {
                                                        if ((v368 & 1) == 0)
                                                        {
                                                          sub_1A930B004();
                                                          v31 = v499;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        sub_1A93059DC(v373, v368);
                                                        v31 = v499;
                                                        v375 = sub_1A9094640(v357, v356);
                                                        if ((v374 & 1) != (v376 & 1))
                                                          goto LABEL_460;
                                                        v370 = v375;
                                                      }
                                                      v500 = v31;
                                                      swift_bridgeObjectRelease();
                                                      v377 = (_QWORD *)v500;
                                                      swift_bridgeObjectRetain();
                                                      if ((v374 & 1) == 0)
                                                      {
                                                        sub_1A931053C(v370, v357, v356, MEMORY[0x1E0DEE9D8], v377);
                                                        swift_bridgeObjectRetain();
                                                      }
                                                      swift_bridgeObjectRelease();
                                                      sub_1A91AC6E0(0);
                                                      swift_bridgeObjectRelease();
                                                      v31 = (uint64_t)sub_1A9326964;
                                                      v348 = sub_1A9326964;
                                                    }
                                                  }
                                                  v319 = *(_QWORD *)&v309[8 * v318];
                                                  ++v19;
                                                  if (!v319)
                                                  {
                                                    v19 = v318 + 1;
                                                    if (v318 + 1 >= (uint64_t)v488)
                                                      goto LABEL_286;
                                                    v319 = *(_QWORD *)&v309[8 * v19];
                                                    if (!v319)
                                                    {
                                                      v19 = v318 + 2;
                                                      if (v318 + 2 >= (uint64_t)v488)
                                                        goto LABEL_286;
                                                      v319 = *(_QWORD *)&v309[8 * v19];
                                                      if (!v319)
                                                      {
                                                        v320 = v318 + 3;
                                                        if (v320 >= (uint64_t)v488)
                                                          goto LABEL_286;
                                                        v319 = *(_QWORD *)&v309[8 * v320];
                                                        if (!v319)
                                                        {
                                                          while (1)
                                                          {
                                                            v19 = v320 + 1;
                                                            if (__OFADD__(v320, 1))
                                                              break;
                                                            if (v19 >= (uint64_t)v488)
                                                              goto LABEL_286;
                                                            v319 = *(_QWORD *)&v309[8 * v19];
                                                            ++v320;
                                                            if (v319)
                                                              goto LABEL_269;
                                                          }
LABEL_448:
                                                          __break(1u);
                                                          goto LABEL_449;
                                                        }
                                                        v19 = v320;
                                                      }
                                                    }
                                                  }
LABEL_269:
                                                  v312 = (v319 - 1) & v319;
                                                  v316 = __clz(__rbit64(v319)) + (v19 << 6);
                                                }
                                                v321 = (uint64_t *)((char *)v317[6] + 16 * v316);
                                                v323 = *v321;
                                                v322 = v321[1];
                                                swift_bridgeObjectRetain_n();
                                                sub_1A9085818((uint64_t)v313);
                                                v324 = swift_isUniquelyReferenced_nonNull_native();
                                                v31 = v500;
                                                v499 = v500;
                                                v500 = 0x8000000000000000;
                                                v326 = sub_1A9094640(v323, v322);
                                                v327 = *(_QWORD *)(v31 + 16);
                                                v328 = (v325 & 1) == 0;
                                                v329 = v327 + v328;
                                                if (__OFADD__(v327, v328))
                                                  goto LABEL_422;
                                                v330 = v325;
                                                if (*(_QWORD *)(v31 + 24) >= v329)
                                                {
                                                  if ((v324 & 1) == 0)
                                                  {
                                                    sub_1A930B004();
                                                    v31 = v499;
                                                  }
                                                }
                                                else
                                                {
                                                  sub_1A93059DC(v329, v324);
                                                  v31 = v499;
                                                  v331 = sub_1A9094640(v323, v322);
                                                  if ((v330 & 1) != (v332 & 1))
                                                    goto LABEL_460;
                                                  v326 = v331;
                                                }
                                                v500 = v31;
                                                swift_bridgeObjectRelease();
                                                v333 = (_QWORD *)v500;
                                                swift_bridgeObjectRetain();
                                                if ((v330 & 1) == 0)
                                                {
                                                  sub_1A931053C(v326, v323, v322, MEMORY[0x1E0DEE9D8], v333);
                                                  swift_bridgeObjectRetain();
                                                }
                                                swift_bridgeObjectRelease();
                                                sub_1A91AC6E0(9);
                                                swift_bridgeObjectRelease();
                                                sub_1A9085818(v496);
                                                v334 = swift_isUniquelyReferenced_nonNull_native();
                                                v31 = v500;
                                                v499 = v500;
                                                v500 = 0x8000000000000000;
                                                v336 = sub_1A9094640(v323, v322);
                                                v337 = *(_QWORD *)(v31 + 16);
                                                v338 = (v335 & 1) == 0;
                                                v339 = v337 + v338;
                                                if (__OFADD__(v337, v338))
                                                  goto LABEL_423;
                                                v340 = v335;
                                                if (*(_QWORD *)(v31 + 24) >= v339)
                                                {
                                                  if ((v334 & 1) == 0)
                                                  {
                                                    sub_1A930B004();
                                                    v31 = v499;
                                                  }
                                                }
                                                else
                                                {
                                                  sub_1A93059DC(v339, v334);
                                                  v31 = v499;
                                                  v341 = sub_1A9094640(v323, v322);
                                                  if ((v340 & 1) != (v342 & 1))
                                                    goto LABEL_460;
                                                  v336 = v341;
                                                }
                                                v500 = v31;
                                                swift_bridgeObjectRelease();
                                                v343 = (_QWORD *)v500;
                                                swift_bridgeObjectRetain();
                                                if ((v340 & 1) == 0)
                                                {
                                                  sub_1A931053C(v336, v323, v322, MEMORY[0x1E0DEE9D8], v343);
                                                  swift_bridgeObjectRetain();
                                                }
                                                v314 = v343[7];
                                                swift_bridgeObjectRelease();
                                                v31 = v314 + 8 * v336;
                                                sub_1A91AC6E0(0);
                                                swift_bridgeObjectRelease();
                                                v313 = sub_1A9326964;
                                                v496 = (uint64_t)sub_1A9326964;
                                              }
                                            }
                                            v285 = *(_QWORD *)(v275 + 8 * v284);
                                            ++v279;
                                            if (!v285)
                                            {
                                              v279 = v284 + 1;
                                              if (v284 + 1 >= v496)
                                                goto LABEL_250;
                                              v285 = *(_QWORD *)(v275 + 8 * v279);
                                              if (!v285)
                                              {
                                                v279 = v284 + 2;
                                                if (v284 + 2 >= v496)
                                                  goto LABEL_250;
                                                v285 = *(_QWORD *)(v275 + 8 * v279);
                                                if (!v285)
                                                {
                                                  v286 = v284 + 3;
                                                  if (v286 >= v496)
                                                    goto LABEL_250;
                                                  v285 = *(_QWORD *)(v275 + 8 * v286);
                                                  if (!v285)
                                                  {
                                                    while (1)
                                                    {
                                                      v279 = v286 + 1;
                                                      if (__OFADD__(v286, 1))
                                                        break;
                                                      if (v279 >= v496)
                                                        goto LABEL_250;
                                                      v285 = *(_QWORD *)(v275 + 8 * v279);
                                                      ++v286;
                                                      if (v285)
                                                        goto LABEL_233;
                                                    }
LABEL_447:
                                                    __break(1u);
                                                    goto LABEL_448;
                                                  }
                                                  v279 = v286;
                                                }
                                              }
                                            }
LABEL_233:
                                            v278 = (v285 - 1) & v285;
                                            v282 = __clz(__rbit64(v285)) + (v279 << 6);
                                          }
                                          v287 = (uint64_t *)(*(_QWORD *)(v283 + 48) + 16 * v282);
                                          v288 = *v287;
                                          v19 = v287[1];
                                          swift_bridgeObjectRetain_n();
                                          sub_1A9085818(v498);
                                          v289 = swift_isUniquelyReferenced_nonNull_native();
                                          v31 = v500;
                                          v499 = v500;
                                          v500 = 0x8000000000000000;
                                          v291 = sub_1A9094640(v288, v19);
                                          v292 = *(_QWORD *)(v31 + 16);
                                          v293 = (v290 & 1) == 0;
                                          v294 = v292 + v293;
                                          if (__OFADD__(v292, v293))
                                            goto LABEL_420;
                                          v295 = v290;
                                          if (*(_QWORD *)(v31 + 24) >= v294)
                                          {
                                            if ((v289 & 1) == 0)
                                            {
                                              sub_1A930B004();
                                              v31 = v499;
                                            }
                                          }
                                          else
                                          {
                                            sub_1A93059DC(v294, v289);
                                            v31 = v499;
                                            v296 = sub_1A9094640(v288, v19);
                                            if ((v295 & 1) != (v297 & 1))
                                              goto LABEL_460;
                                            v291 = v296;
                                          }
                                          v500 = v31;
                                          swift_bridgeObjectRelease();
                                          v298 = (_QWORD *)v500;
                                          swift_bridgeObjectRetain();
                                          if ((v295 & 1) == 0)
                                          {
                                            sub_1A931053C(v291, v288, v19, MEMORY[0x1E0DEE9D8], v298);
                                            swift_bridgeObjectRetain();
                                          }
                                          swift_bridgeObjectRelease();
                                          sub_1A91AC6E0(8);
                                          swift_bridgeObjectRelease();
                                          sub_1A9085818(v497);
                                          v299 = swift_isUniquelyReferenced_nonNull_native();
                                          v31 = v500;
                                          v499 = v500;
                                          v500 = 0x8000000000000000;
                                          v301 = sub_1A9094640(v288, v19);
                                          v302 = *(_QWORD *)(v31 + 16);
                                          v303 = (v300 & 1) == 0;
                                          v304 = v302 + v303;
                                          if (__OFADD__(v302, v303))
                                            goto LABEL_421;
                                          v305 = v300;
                                          if (*(_QWORD *)(v31 + 24) >= v304)
                                          {
                                            if ((v299 & 1) == 0)
                                            {
                                              sub_1A930B004();
                                              v31 = v499;
                                            }
                                          }
                                          else
                                          {
                                            sub_1A93059DC(v304, v299);
                                            v31 = v499;
                                            v306 = sub_1A9094640(v288, v19);
                                            if ((v305 & 1) != (v307 & 1))
                                              goto LABEL_460;
                                            v301 = v306;
                                          }
                                          v500 = v31;
                                          swift_bridgeObjectRelease();
                                          v308 = (_QWORD *)v500;
                                          swift_bridgeObjectRetain();
                                          if ((v305 & 1) == 0)
                                          {
                                            sub_1A931053C(v301, v288, v19, MEMORY[0x1E0DEE9D8], v308);
                                            swift_bridgeObjectRetain();
                                          }
                                          v280 = v308[7];
                                          swift_bridgeObjectRelease();
                                          v31 = v280 + 8 * v301;
                                          sub_1A91AC6E0(0);
                                          swift_bridgeObjectRelease();
                                          v497 = (uint64_t)sub_1A9326964;
                                          v498 = (uint64_t)sub_1A9326964;
                                        }
                                      }
                                      v260 = *(_QWORD *)(v498 + 8 * v259);
                                      ++v19;
                                      if (!v260)
                                      {
                                        v19 = v259 + 1;
                                        if (v259 + 1 >= v32)
                                          goto LABEL_214;
                                        v260 = *(_QWORD *)(v498 + 8 * v19);
                                        if (!v260)
                                        {
                                          v19 = v259 + 2;
                                          if (v259 + 2 >= v32)
                                            goto LABEL_214;
                                          v260 = *(_QWORD *)(v498 + 8 * v19);
                                          if (!v260)
                                          {
                                            v261 = v259 + 3;
                                            if (v261 >= v32)
                                              goto LABEL_214;
                                            v260 = *(_QWORD *)(v498 + 8 * v261);
                                            if (!v260)
                                            {
                                              while (1)
                                              {
                                                v19 = v261 + 1;
                                                if (__OFADD__(v261, 1))
                                                  break;
                                                if (v19 >= v32)
                                                  goto LABEL_214;
                                                v260 = *(_QWORD *)(v498 + 8 * v19);
                                                ++v261;
                                                if (v260)
                                                  goto LABEL_205;
                                              }
LABEL_446:
                                              __break(1u);
                                              goto LABEL_447;
                                            }
                                            v19 = v261;
                                          }
                                        }
                                      }
LABEL_205:
                                      v256 = (v260 - 1) & v260;
                                      v258 = __clz(__rbit64(v260)) + (v19 << 6);
                                    }
                                    v262 = (uint64_t *)(*(_QWORD *)(v252 + 48) + 16 * v258);
                                    v264 = *v262;
                                    v263 = v262[1];
                                    swift_bridgeObjectRetain();
                                    sub_1A9085818(v31);
                                    v265 = swift_isUniquelyReferenced_nonNull_native();
                                    v31 = v500;
                                    v499 = v500;
                                    v500 = 0x8000000000000000;
                                    v267 = sub_1A9094640(v264, v263);
                                    v268 = *(_QWORD *)(v31 + 16);
                                    v269 = (v266 & 1) == 0;
                                    v270 = v268 + v269;
                                    if (__OFADD__(v268, v269))
                                      goto LABEL_419;
                                    v271 = v266;
                                    if (*(_QWORD *)(v31 + 24) >= v270)
                                    {
                                      if ((v265 & 1) == 0)
                                      {
                                        sub_1A930B004();
                                        v31 = v499;
                                      }
                                    }
                                    else
                                    {
                                      sub_1A93059DC(v270, v265);
                                      v31 = v499;
                                      v272 = sub_1A9094640(v264, v263);
                                      if ((v271 & 1) != (v273 & 1))
                                        goto LABEL_460;
                                      v267 = v272;
                                    }
                                    v500 = v31;
                                    swift_bridgeObjectRelease();
                                    v274 = (_QWORD *)v500;
                                    swift_bridgeObjectRetain();
                                    if ((v271 & 1) == 0)
                                    {
                                      sub_1A931053C(v267, v264, v263, MEMORY[0x1E0DEE9D8], v274);
                                      swift_bridgeObjectRetain();
                                    }
                                    swift_bridgeObjectRelease();
                                    sub_1A91AC6E0(5);
                                    swift_bridgeObjectRelease();
                                    v31 = (uint64_t)sub_1A9326964;
                                  }
                                }
                                v238 = *(_QWORD *)(v223 + 8 * v236);
                                ++v32;
                                if (!v238)
                                {
                                  v32 = v236 + 1;
                                  if (v236 + 1 >= v227)
                                    goto LABEL_186;
                                  v238 = *(_QWORD *)(v223 + 8 * v32);
                                  if (!v238)
                                  {
                                    v32 = v236 + 2;
                                    if (v236 + 2 >= v227)
                                      goto LABEL_186;
                                    v238 = *(_QWORD *)(v223 + 8 * v32);
                                    if (!v238)
                                    {
                                      v239 = v236 + 3;
                                      if (v239 >= v227)
                                        goto LABEL_186;
                                      v238 = *(_QWORD *)(v223 + 8 * v239);
                                      if (!v238)
                                      {
                                        while (1)
                                        {
                                          v32 = v239 + 1;
                                          if (__OFADD__(v239, 1))
                                            break;
                                          if (v32 >= v227)
                                            goto LABEL_186;
                                          v238 = *(_QWORD *)(v223 + 8 * v32);
                                          ++v239;
                                          if (v238)
                                            goto LABEL_177;
                                        }
LABEL_445:
                                        __break(1u);
                                        goto LABEL_446;
                                      }
                                      v32 = v239;
                                    }
                                  }
                                }
LABEL_177:
                                v226 = (v238 - 1) & v238;
                                v235 = __clz(__rbit64(v238)) + (v32 << 6);
                              }
                              v240 = (uint64_t *)(*(_QWORD *)(v496 + 48) + 16 * v235);
                              v241 = *v240;
                              v19 = v240[1];
                              swift_bridgeObjectRetain();
                              sub_1A9085818(v31);
                              v242 = swift_isUniquelyReferenced_nonNull_native();
                              v31 = v500;
                              v499 = v500;
                              v500 = 0x8000000000000000;
                              v244 = sub_1A9094640(v241, v19);
                              v245 = *(_QWORD *)(v31 + 16);
                              v246 = (v243 & 1) == 0;
                              v247 = v245 + v246;
                              if (__OFADD__(v245, v246))
                                goto LABEL_418;
                              v248 = v243;
                              if (*(_QWORD *)(v31 + 24) >= v247)
                              {
                                if ((v242 & 1) == 0)
                                {
                                  sub_1A930B004();
                                  v31 = v499;
                                }
                              }
                              else
                              {
                                sub_1A93059DC(v247, v242);
                                v31 = v499;
                                v249 = sub_1A9094640(v241, v19);
                                if ((v248 & 1) != (v250 & 1))
                                  goto LABEL_460;
                                v244 = v249;
                              }
                              v500 = v31;
                              swift_bridgeObjectRelease();
                              v251 = (_QWORD *)v500;
                              swift_bridgeObjectRetain();
                              if ((v248 & 1) == 0)
                              {
                                sub_1A931053C(v244, v241, v19, MEMORY[0x1E0DEE9D8], v251);
                                swift_bridgeObjectRetain();
                              }
                              v228 = v251[7];
                              swift_bridgeObjectRelease();
                              sub_1A91ACED4();
                              v229 = *(_QWORD *)(*(_QWORD *)(v228 + 8 * v244) + 16);
                              sub_1A91ACF4C(v229);
                              v230 = sub_1A91AD3B0(v229, 2);
                              nullsub_1(v230, v231, v232, v233);
                              swift_bridgeObjectRelease();
                              v31 = (uint64_t)sub_1A9326964;
                            }
                          }
                          v209 = *(_QWORD *)(v195 + 8 * v208);
                          ++v32;
                          if (!v209)
                          {
                            v32 = v208 + 1;
                            if (v208 + 1 >= v199)
                              goto LABEL_158;
                            v209 = *(_QWORD *)(v195 + 8 * v32);
                            if (!v209)
                            {
                              v32 = v208 + 2;
                              if (v208 + 2 >= v199)
                                goto LABEL_158;
                              v209 = *(_QWORD *)(v195 + 8 * v32);
                              if (!v209)
                              {
                                v210 = v208 + 3;
                                if (v210 >= v199)
                                  goto LABEL_158;
                                v209 = *(_QWORD *)(v195 + 8 * v210);
                                if (!v209)
                                {
                                  while (1)
                                  {
                                    v32 = v210 + 1;
                                    if (__OFADD__(v210, 1))
                                      break;
                                    if (v32 >= v199)
                                      goto LABEL_158;
                                    v209 = *(_QWORD *)(v195 + 8 * v32);
                                    ++v210;
                                    if (v209)
                                      goto LABEL_149;
                                  }
LABEL_442:
                                  __break(1u);
LABEL_443:
                                  v37 = MEMORY[0x1AF4129DC](0, v31);
                                  v34 = v479;
                                  v35 = (void (*)(_QWORD *@<X8>))v32;
                                  v36 = (void *)v19;
                                  goto LABEL_8;
                                }
                                v32 = v210;
                              }
                            }
                          }
LABEL_149:
                          v198 = (v209 - 1) & v209;
                          v207 = __clz(__rbit64(v209)) + (v32 << 6);
                        }
                        v211 = (uint64_t *)(*(_QWORD *)(v497 + 48) + 16 * v207);
                        v212 = *v211;
                        v19 = v211[1];
                        swift_bridgeObjectRetain();
                        sub_1A9085818(v31);
                        v213 = swift_isUniquelyReferenced_nonNull_native();
                        v31 = v500;
                        v499 = v500;
                        v500 = 0x8000000000000000;
                        v215 = sub_1A9094640(v212, v19);
                        v216 = *(_QWORD *)(v31 + 16);
                        v217 = (v214 & 1) == 0;
                        v218 = v216 + v217;
                        if (__OFADD__(v216, v217))
                          goto LABEL_417;
                        v219 = v214;
                        if (*(_QWORD *)(v31 + 24) >= v218)
                        {
                          if ((v213 & 1) == 0)
                          {
                            sub_1A930B004();
                            v31 = v499;
                          }
                        }
                        else
                        {
                          sub_1A93059DC(v218, v213);
                          v31 = v499;
                          v220 = sub_1A9094640(v212, v19);
                          if ((v219 & 1) != (v221 & 1))
                            goto LABEL_460;
                          v215 = v220;
                        }
                        v500 = v31;
                        swift_bridgeObjectRelease();
                        v222 = (_QWORD *)v500;
                        swift_bridgeObjectRetain();
                        if ((v219 & 1) == 0)
                        {
                          sub_1A931053C(v215, v212, v19, MEMORY[0x1E0DEE9D8], v222);
                          swift_bridgeObjectRetain();
                        }
                        v200 = v222[7];
                        swift_bridgeObjectRelease();
                        sub_1A91ACED4();
                        v201 = *(_QWORD *)(*(_QWORD *)(v200 + 8 * v215) + 16);
                        sub_1A91ACF4C(v201);
                        v202 = sub_1A91AD3B0(v201, 1);
                        nullsub_1(v202, v203, v204, v205);
                        swift_bridgeObjectRelease();
                        v31 = (uint64_t)sub_1A9326964;
                      }
                    }
                    v180 = *(_QWORD *)(v498 + 8 * v179);
                    ++v19;
                    if (!v180)
                    {
                      v19 = v179 + 1;
                      if (v179 + 1 >= v32)
                        goto LABEL_130;
                      v180 = *(_QWORD *)(v498 + 8 * v19);
                      if (!v180)
                      {
                        v19 = v179 + 2;
                        if (v179 + 2 >= v32)
                          goto LABEL_130;
                        v180 = *(_QWORD *)(v498 + 8 * v19);
                        if (!v180)
                        {
                          v181 = v179 + 3;
                          if (v181 >= v32)
                            goto LABEL_130;
                          v180 = *(_QWORD *)(v498 + 8 * v181);
                          if (!v180)
                          {
                            while (1)
                            {
                              v19 = v181 + 1;
                              if (__OFADD__(v181, 1))
                                break;
                              if (v19 >= v32)
                                goto LABEL_130;
                              v180 = *(_QWORD *)(v498 + 8 * v19);
                              ++v181;
                              if (v180)
                                goto LABEL_121;
                            }
LABEL_441:
                            __break(1u);
                            goto LABEL_442;
                          }
                          v19 = v181;
                        }
                      }
                    }
LABEL_121:
                    v170 = (v180 - 1) & v180;
                    v178 = __clz(__rbit64(v180)) + (v19 << 6);
                  }
                  v182 = (uint64_t *)(*(_QWORD *)(v166 + 48) + 16 * v178);
                  v184 = *v182;
                  v183 = v182[1];
                  swift_bridgeObjectRetain();
                  sub_1A9085818(v31);
                  v185 = swift_isUniquelyReferenced_nonNull_native();
                  v31 = v500;
                  v499 = v500;
                  v500 = 0x8000000000000000;
                  v187 = sub_1A9094640(v184, v183);
                  v188 = *(_QWORD *)(v31 + 16);
                  v189 = (v186 & 1) == 0;
                  v190 = v188 + v189;
                  if (__OFADD__(v188, v189))
                    goto LABEL_416;
                  v191 = v186;
                  if (*(_QWORD *)(v31 + 24) >= v190)
                  {
                    if ((v185 & 1) == 0)
                    {
                      sub_1A930B004();
                      v31 = v499;
                    }
                  }
                  else
                  {
                    sub_1A93059DC(v190, v185);
                    v31 = v499;
                    v192 = sub_1A9094640(v184, v183);
                    if ((v191 & 1) != (v193 & 1))
                      goto LABEL_460;
                    v187 = v192;
                  }
                  v500 = v31;
                  swift_bridgeObjectRelease();
                  v194 = (_QWORD *)v500;
                  swift_bridgeObjectRetain();
                  if ((v191 & 1) == 0)
                  {
                    sub_1A931053C(v187, v184, v183, MEMORY[0x1E0DEE9D8], v194);
                    swift_bridgeObjectRetain();
                  }
                  v171 = v194[7];
                  swift_bridgeObjectRelease();
                  sub_1A91ACED4();
                  v172 = *(_QWORD *)(*(_QWORD *)(v171 + 8 * v187) + 16);
                  sub_1A91ACF4C(v172);
                  v173 = sub_1A91AD3B0(v172, 3);
                  nullsub_1(v173, v174, v175, v176);
                  swift_bridgeObjectRelease();
                  v31 = (uint64_t)sub_1A9326964;
                }
              }
              v152 = *(_QWORD *)(v139 + 8 * v151);
              ++v137;
              if (!v152)
              {
                v137 = v151 + 1;
                if (v151 + 1 >= v32)
                  goto LABEL_102;
                v152 = *(_QWORD *)(v139 + 8 * v137);
                if (!v152)
                {
                  v137 = v151 + 2;
                  if (v151 + 2 >= v32)
                    goto LABEL_102;
                  v152 = *(_QWORD *)(v139 + 8 * v137);
                  if (!v152)
                  {
                    v153 = v151 + 3;
                    if (v153 >= v32)
                      goto LABEL_102;
                    v152 = *(_QWORD *)(v139 + 8 * v153);
                    if (!v152)
                    {
                      while (1)
                      {
                        v137 = v153 + 1;
                        if (__OFADD__(v153, 1))
                          break;
                        if (v137 >= v32)
                          goto LABEL_102;
                        v152 = *(_QWORD *)(v139 + 8 * v137);
                        ++v153;
                        if (v152)
                          goto LABEL_93;
                      }
LABEL_440:
                      __break(1u);
                      goto LABEL_441;
                    }
                    v137 = v153;
                  }
                }
              }
LABEL_93:
              v142 = (v152 - 1) & v152;
              v150 = __clz(__rbit64(v152)) + (v137 << 6);
            }
            v154 = (uint64_t *)(*(_QWORD *)(v138 + 48) + 16 * v150);
            v155 = *v154;
            v19 = v154[1];
            swift_bridgeObjectRetain();
            sub_1A9085818((uint64_t)v494);
            v156 = swift_isUniquelyReferenced_nonNull_native();
            v31 = v500;
            v499 = v500;
            v500 = 0x8000000000000000;
            v158 = sub_1A9094640(v155, v19);
            v159 = *(_QWORD *)(v31 + 16);
            v160 = (v157 & 1) == 0;
            v161 = v159 + v160;
            if (__OFADD__(v159, v160))
              goto LABEL_415;
            v162 = v157;
            if (*(_QWORD *)(v31 + 24) >= v161)
            {
              if ((v156 & 1) == 0)
              {
                sub_1A930B004();
                v31 = v499;
              }
            }
            else
            {
              sub_1A93059DC(v161, v156);
              v31 = v499;
              v163 = sub_1A9094640(v155, v19);
              if ((v162 & 1) != (v164 & 1))
                goto LABEL_460;
              v158 = v163;
            }
            v500 = v31;
            swift_bridgeObjectRelease();
            v165 = (_QWORD *)v500;
            swift_bridgeObjectRetain();
            if ((v162 & 1) == 0)
            {
              sub_1A931053C(v158, v155, v19, MEMORY[0x1E0DEE9D8], v165);
              swift_bridgeObjectRetain();
            }
            v143 = v165[7];
            swift_bridgeObjectRelease();
            v31 = v143 + 8 * v158;
            sub_1A91ACED4();
            v144 = *(_QWORD *)(*(_QWORD *)v31 + 16);
            sub_1A91ACF4C(v144);
            v145 = sub_1A91AD3B0(v144, 4);
            nullsub_1(v145, v146, v147, v148);
            swift_bridgeObjectRelease();
            v494 = sub_1A9326964;
            v138 = v498;
          }
        }
        v123 = *(_QWORD *)(v109 + 8 * v122);
        ++v113;
        if (!v123)
        {
          v113 = v122 + 1;
          if (v122 + 1 >= v32)
            goto LABEL_74;
          v123 = *(_QWORD *)(v109 + 8 * v113);
          if (!v123)
          {
            v113 = v122 + 2;
            if (v122 + 2 >= v32)
              goto LABEL_74;
            v123 = *(_QWORD *)(v109 + 8 * v113);
            if (!v123)
            {
              v124 = v122 + 3;
              if (v124 >= v32)
                goto LABEL_74;
              v123 = *(_QWORD *)(v109 + 8 * v124);
              if (!v123)
              {
                while (1)
                {
                  v113 = v124 + 1;
                  if (__OFADD__(v124, 1))
                    goto LABEL_439;
                  if (v113 >= v32)
                    goto LABEL_74;
                  v123 = *(_QWORD *)(v109 + 8 * v113);
                  ++v124;
                  if (v123)
                    goto LABEL_65;
                }
              }
              v113 = v124;
            }
          }
        }
LABEL_65:
        v112 = (v123 - 1) & v123;
        v121 = __clz(__rbit64(v123)) + (v113 << 6);
      }
      v125 = (uint64_t *)(*(_QWORD *)(v493 + 48) + 16 * v121);
      v126 = *v125;
      v19 = v125[1];
      swift_bridgeObjectRetain();
      sub_1A9085818((uint64_t)v495);
      v127 = swift_isUniquelyReferenced_nonNull_native();
      v31 = v500;
      v499 = v500;
      v500 = 0x8000000000000000;
      v129 = sub_1A9094640(v126, v19);
      v130 = *(_QWORD *)(v31 + 16);
      v131 = (v128 & 1) == 0;
      v132 = v130 + v131;
      if (__OFADD__(v130, v131))
      {
        __break(1u);
LABEL_415:
        __break(1u);
LABEL_416:
        __break(1u);
LABEL_417:
        __break(1u);
LABEL_418:
        __break(1u);
LABEL_419:
        __break(1u);
LABEL_420:
        __break(1u);
LABEL_421:
        __break(1u);
LABEL_422:
        __break(1u);
LABEL_423:
        __break(1u);
LABEL_424:
        __break(1u);
LABEL_425:
        __break(1u);
LABEL_426:
        __break(1u);
LABEL_427:
        __break(1u);
LABEL_428:
        __break(1u);
LABEL_429:
        __break(1u);
LABEL_430:
        __break(1u);
LABEL_431:
        __break(1u);
LABEL_432:
        __break(1u);
LABEL_433:
        __break(1u);
LABEL_434:
        __break(1u);
LABEL_435:
        __break(1u);
LABEL_436:
        __break(1u);
LABEL_437:
        __break(1u);
LABEL_438:
        __break(1u);
LABEL_439:
        __break(1u);
        goto LABEL_440;
      }
      v133 = v128;
      if (*(_QWORD *)(v31 + 24) >= v132)
      {
        if ((v127 & 1) == 0)
        {
          sub_1A930B004();
          v31 = v499;
        }
      }
      else
      {
        sub_1A93059DC(v132, v127);
        v31 = v499;
        v134 = sub_1A9094640(v126, v19);
        if ((v133 & 1) != (v135 & 1))
          goto LABEL_460;
        v129 = v134;
      }
      v500 = v31;
      swift_bridgeObjectRelease();
      v136 = (_QWORD *)v500;
      swift_bridgeObjectRetain();
      if ((v133 & 1) == 0)
      {
        sub_1A931053C(v129, v126, v19, MEMORY[0x1E0DEE9D8], v136);
        swift_bridgeObjectRetain();
      }
      v114 = v136[7];
      swift_bridgeObjectRelease();
      v31 = v114 + 8 * v129;
      sub_1A91ACED4();
      v115 = *(_QWORD *)(*(_QWORD *)v31 + 16);
      sub_1A91ACF4C(v115);
      v116 = sub_1A91AD3B0(v115, 0);
      nullsub_1(v116, v117, v118, v119);
      swift_bridgeObjectRelease();
      v495 = sub_1A9326964;
    }
  }
LABEL_456:
  __break(1u);
LABEL_457:
  __break(1u);
LABEL_458:
  __break(1u);
LABEL_459:
  __break(1u);
LABEL_460:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t DownloadStateChecker.episodesToBePurged(in:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  int v27;
  int v28;
  Swift::Int32 v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  __int16 v51;
  uint64_t v52;
  __int16 v53;
  __int16 v54;
  _QWORD v55[2];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70[4];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSError v76;
  Swift::OpaquePointer_optional v77;

  v76.super.isa = (Class)*MEMORY[0x1E0C80C00];
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF20);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = (id)MEMORY[0x1E0DEE9E8];
  v71 = MEMORY[0x1E0DEE9E8];
  v70[2] = (id)MEMORY[0x1E0DEE9E8];
  v70[1] = (id)MEMORY[0x1E0DEE9E8];
  v72 = a2;
  v73 = a3;
  v74 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF28);
  sub_1A93F89B8();
  if (v3)
    return swift_bridgeObjectRelease_n();
  v61 = (uint64_t *)v13;
  v62 = v8;
  v68 = v7;
  v15 = *(_QWORD *)(v75 + 16);
  if (v15)
  {
    v66 = 0;
    v16 = v61;
    v65 = (char *)v61 + *(int *)(v10 + 48);
    v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v55[1] = v75;
    v18 = v75 + v17;
    v64 = (id)objc_opt_self();
    v63 = *(_QWORD *)(v11 + 72);
    v60 = *(_QWORD *)"GJ\b@";
    v57 = *MEMORY[0x1E0CB3308];
    *(_QWORD *)&v19 = 136315138;
    v59 = v19;
    v58 = MEMORY[0x1E0DEE9B8] + 8;
    v56 = xmmword_1A9405520;
    v20 = v68;
    v21 = v62;
    while (1)
    {
      sub_1A9062170(v18, (uint64_t)v16, &qword_1EEABDF20);
      v23 = *v16;
      v22 = v16[1];
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v69, v65, v20);
      v75 = 65542;
      v24 = (void *)sub_1A93F71A0();
      v70[0] = 0;
      v25 = objc_msgSend(v64, sel_fileHandleForReadingFromURL_error_, v24, v70);

      if (!v25)
        break;
      v67 = v22;
      v26 = v70[0];
      v27 = objc_msgSend(v25, sel_fileDescriptor);
      v28 = ffsctl(v27, v60, &v75, 0);
      if (v28)
      {
        v29 = v28;
        sub_1A9072534(0, &qword_1ED2ABD18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v56;
        *(_QWORD *)(inited + 32) = sub_1A93F8040();
        *(_QWORD *)(inited + 40) = v31;
        *(_QWORD *)(inited + 72) = v68;
        v20 = v68;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(boxed_opaque_existential_1, v69, v20);
        v77.value._rawValue = (void *)sub_1A908A4A8(inited);
        v16 = v61;
        NSError.init(fsctlCode:userInfo:)(&v76, v29, v77);
        v34 = v33;
        swift_willThrow();
        swift_bridgeObjectRelease();

LABEL_9:
        if (qword_1ED2A3F28 != -1)
          swift_once();
        v66 = 0;
        v36 = sub_1A93F7698();
        __swift_project_value_buffer(v36, (uint64_t)qword_1ED2A3F08);
        v37 = v34;
        v38 = v34;
        v39 = sub_1A93F7674();
        v40 = sub_1A93F879C();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = swift_slowAlloc();
          v42 = swift_slowAlloc();
          v75 = v42;
          *(_DWORD *)v41 = v59;
          v70[0] = v34;
          v43 = v34;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
          v44 = sub_1A93F8094();
          *(_QWORD *)(v41 + 4) = sub_1A906436C(v44, v45, &v75);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A904E000, v39, v40, "Unable to evaluate media for purgeability: %s", (uint8_t *)v41, 0xCu);
          swift_arrayDestroy();
          v46 = v42;
          v20 = v68;
          MEMORY[0x1AF41411C](v46, -1, -1);
          v47 = v41;
          v16 = v61;
          MEMORY[0x1AF41411C](v47, -1, -1);

        }
        else
        {

        }
        v21 = v62;
        goto LABEL_15;
      }

      if ((v75 & 0x8000) != 0 && (v75 & 6) != 0)
      {
        v48 = v23;
        v49 = v67;
      }
      else
      {
        v50 = v66;
        sub_1A92B7FF4();
        v52 = v67;
        if (v50)
        {
          swift_bridgeObjectRelease();
          v34 = v50;
          goto LABEL_9;
        }
        v66 = 0;
        if ((v51 & 0x800) == 0 || (v51 & 6) == 0)
        {
          sub_1A92B7FF4();
          v66 = 0;
          if ((v53 & 0x400) == 0 || (v53 & 6) == 0)
          {
            sub_1A92B7FF4();
            v66 = 0;
            if ((v54 & 0x200) == 0 || (v54 & 6) == 0)
            {
              (*(void (**)(char *, uint64_t))(v21 + 8))(v69, v20);
              swift_bridgeObjectRelease();
              goto LABEL_16;
            }
          }
        }
        v48 = v23;
        v49 = v52;
      }
      sub_1A9091D1C(&v75, v48, v49);
      swift_bridgeObjectRelease();
LABEL_15:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v69, v20);
LABEL_16:
      v18 += v63;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        return v71;
      }
    }
    v35 = v70[0];
    v34 = (void *)sub_1A93F7128();

    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A9326778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[6];

  v5 = *(_QWORD *)(v2 + 8);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v6, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A9405960;
  sub_1A93F8040();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v9 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithKey_ascending_, v9, 1);

  *(_QWORD *)(v7 + 32) = v10;
  v15[5] = v7;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v11 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v11);

  objc_msgSend(v6, sel_setResultType_, 2);
  sub_1A911E988(v5);
  v12 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v12);

  v15[2] = a2;
  v15[3] = v6;
  v13 = sub_1A9322110((uint64_t)sub_1A932B528, (uint64_t)v15);

  return v13;
}

void sub_1A9326964(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

void sub_1A9326974(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t *v21;
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v2 = sub_1A93F89DC();
  v3 = sub_1A909D004(v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v21 = a1;
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = 0;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v8 = *(_QWORD *)(v3 + 8 * v5 + 32);
        v25 = sub_1A93F8040();
        v26 = v9;
        swift_bridgeObjectRetain();
        sub_1A93F8C1C();
        if (*(_QWORD *)(v8 + 16) && (v10 = sub_1A90A597C((uint64_t)v22), (v11 & 1) != 0))
        {
          sub_1A906443C(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v23);
        }
        else
        {
          v23 = 0u;
          v24 = 0u;
        }
        sub_1A90A5908((uint64_t)v22);
        if (*((_QWORD *)&v24 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            goto LABEL_15;
        }
        else
        {
          sub_1A905FD54((uint64_t)&v23, qword_1ED2AC800);
        }
        v25 = 0;
        v26 = 0;
LABEL_15:
        swift_bridgeObjectRelease();
        v12 = v26;
        if (v26)
        {
          v13 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1A907ECFC(0, v6[2] + 1, 1, v6);
          v15 = v6[2];
          v14 = v6[3];
          if (v15 >= v14 >> 1)
            v6 = sub_1A907ECFC((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
          v6[2] = v15 + 1;
          v7 = &v6[2 * v15];
          v7[4] = v13;
          v7[5] = v12;
        }
        if (v4 == ++v5)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_27;
        }
      }
    }
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_27:
    v16 = sub_1A9159F94((uint64_t)v6);
    swift_bridgeObjectRelease();
    a1 = v21;
  }
  else
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v17 = sub_1A93F7698();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A3F08);
    v18 = sub_1A93F7674();
    v19 = sub_1A93F879C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1A904E000, v18, v19, "Unable to fetch episodes: Result is unexpected", v20, 2u);
      MEMORY[0x1AF41411C](v20, -1, -1);
    }

    v16 = MEMORY[0x1E0DEE9E8];
  }
  *a1 = v16;
}

void sub_1A9326DF8(unint64_t a1@<X2>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  unint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint64_t v73;

  v71 = a1;
  v61 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v65 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F726C();
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABDF30);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF20);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v59 - v13;
  sub_1A93F8040();
  v15 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v16 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A940EB90;
  v19 = (void *)objc_opt_self();
  *(_QWORD *)(v18 + 32) = objc_msgSend(v19, sel_predicateForDownloaded_excludeHidden_, 1, 0);
  v20 = (void *)sub_1A93F8010();
  v21 = objc_msgSend(v19, sel_predicateForAllEpisodesOnPodcastUuid_, v20);

  *(_QWORD *)(v18 + 40) = v21;
  v73 = v18;
  sub_1A93F8328();
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  v22 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v22);

  objc_msgSend(v17, sel_setPredicate_, v23);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v24 = v72;
  v25 = sub_1A93F89DC();
  if (v24)
  {

    return;
  }
  v26 = v25;
  v72 = v8;
  v66 = v14;
  v69 = v11;
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1A93F8E5C();
  }
  else
  {
    v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v28 = v61;
  v30 = v67;
  v29 = v68;
  v31 = (uint64_t)v69;
  if (v27)
  {
    if (v27 >= 1)
    {
      v59 = 0;
      v60 = v17;
      v32 = 0;
      v70 = v26 & 0xC000000000000001;
      v33 = MEMORY[0x1E0DEE9D8];
      v71 = v26;
      v34 = (uint64_t)v72;
      while (1)
      {
        if (v70)
          v35 = (id)MEMORY[0x1AF4129DC](v32, v26);
        else
          v35 = *(id *)(v26 + 8 * v32 + 32);
        v36 = v35;
        v37 = objc_msgSend(v35, sel_uuid, v59);
        if (v37)
        {
          v38 = v37;
          v39 = sub_1A93F8040();
          v41 = v40;

          v42 = objc_msgSend(v36, sel_assetURL);
          if (v42)
          {
            v43 = v42;
            sub_1A93F8040();

            v44 = (uint64_t)v65;
            v45 = v64;
            sub_1A93F7248();
            v46 = v63;
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) != 1)
            {
              v48 = v44;
              v49 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
              v50 = v62;
              v49(v62, v48, v45);
              v51 = v68;
              v52 = v72;
              v53 = (char *)v72 + *(int *)(v68 + 48);
              *v72 = v39;
              v52[1] = v41;
              v34 = (uint64_t)v52;
              v54 = v45;
              v29 = v51;
              v49(v53, (uint64_t)v50, v54);
              v47 = 0;
              v30 = v67;
              v31 = (uint64_t)v69;
              goto LABEL_21;
            }
            swift_bridgeObjectRelease();
            sub_1A905FD54(v44, &qword_1ED2AD3D0);
            v47 = 1;
            v30 = v67;
            v29 = v68;
          }
          else
          {
            swift_bridgeObjectRelease();
            v47 = 1;
          }
          v31 = (uint64_t)v69;
          v34 = (uint64_t)v72;
        }
        else
        {
          v47 = 1;
        }
LABEL_21:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v34, v47, 1, v29);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29) == 1)
        {
          sub_1A905FD54(v34, (uint64_t *)&unk_1EEABDF30);
          v26 = v71;
        }
        else
        {
          v55 = (uint64_t)v66;
          sub_1A9062F08(v34, (uint64_t)v66, &qword_1EEABDF20);
          sub_1A9062F08(v55, v31, &qword_1EEABDF20);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v26 = v71;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v33 = sub_1A9119B14(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
          v58 = *(_QWORD *)(v33 + 16);
          v57 = *(_QWORD *)(v33 + 24);
          if (v58 >= v57 >> 1)
            v33 = sub_1A9119B14(v57 > 1, v58 + 1, 1, v33);
          *(_QWORD *)(v33 + 16) = v58 + 1;
          sub_1A9062F08(v31, v33+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v58, &qword_1EEABDF20);
          v34 = (uint64_t)v72;
        }
        if (v27 == ++v32)
        {

          swift_bridgeObjectRelease();
          v28 = v61;
          goto LABEL_29;
        }
      }
    }
    __break(1u);
  }
  else
  {

    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    swift_bridgeObjectRelease();
    *v28 = v33;
  }
}

void sub_1A932742C(unint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1A9326DF8(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1A9327448(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A93F8BC8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A93F8BBC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A9329014(v7, result + 1, &qword_1EEAB98B8, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, (void (*)(unint64_t))sub_1A91C45E8);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A91C45E8(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A93293C8((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8A30();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A93F8A3C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A93F8A3C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A9329448((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A9327704(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v7 = *v3;
  sub_1A93F92DC();
  sub_1A93F92F4();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
  }
  v8 = sub_1A93F9324();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v3;
    *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1A93295CC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = ~v9;
  v12 = *(_QWORD *)(v7 + 48);
  while (1)
  {
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = v13[1];
    if (v14)
      break;
    if (!a3)
      goto LABEL_15;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_16;
  }
  if (!a3)
    goto LABEL_6;
  v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_1A93F90C0() & 1) == 0)
    goto LABEL_6;
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1A93278CC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1A93F92D0();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A9329780(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A93279C4(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1A93F73E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1A932B590((unint64_t *)&qword_1ED2A1F40, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1A93F7FA4();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1A932B590((unint64_t *)&unk_1EEABC520, MEMORY[0x1E0CB09D0]);
      v21 = sub_1A93F8004();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A93298A0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t destroy for DownloadStateChecker(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadStateChecker(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadStateChecker(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DownloadStateChecker(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadStateChecker(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadStateChecker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateChecker()
{
  return &type metadata for DownloadStateChecker;
}

void sub_1A9327E04(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_1A93F92DC();
  sub_1A93F92F4();
  if ((a3 & 1) == 0)
    sub_1A93F930C();
  __asm { BR              X9 }
}

uint64_t sub_1A9327EB0()
{
  __int16 v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v3 = sub_1A93F9324();
  v4 = -1 << *(_BYTE *)(v1 + 32);
  for (i = v3 & ~v4; ((*(_QWORD *)(v1 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & ~v4)
  {
    v6 = *(_QWORD *)(v1 + 48) + 16 * i;
    if ((*(_BYTE *)(v6 + 8) & 1) != 0)
    {
      if ((v0 & 1) != 0)
        goto LABEL_9;
    }
    else if ((v0 & 1) == 0 && *(void **)v6 == v12)
    {
LABEL_9:
      __asm { BR              X9 }
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v10;
  *v10 = 0x8000000000000000;
  sub_1A9329A94(v12, v0 & 0xFF01, i, isUniquelyReferenced_nonNull_native);
  *v10 = v13;
  swift_bridgeObjectRelease();
  result = 1;
  *(_QWORD *)v11 = v12;
  *(_BYTE *)(v11 + 8) = v9;
  *(_BYTE *)(v11 + 9) = v2;
  return result;
}

void sub_1A93281AC(uint64_t a1, char a2)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A9328220()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v2 = sub_1A93F9324() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_1A9329E58(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_1A9328520(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v6 = a3 & 1;
  v7 = *v3;
  sub_1A93F92DC();
  sub_1A93F92E8();
  v8 = sub_1A93F9324();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_QWORD *)(v7 + 48) + 16 * v10;
      if (*(_BYTE *)(v12 + 8) == 1)
        __asm { BR              X1 }
      if (!v6)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v14 = *(_QWORD *)(*v3 + 48) + 16 * v10;
    a2 = *(_QWORD *)v14;
    v6 = *(unsigned __int8 *)(v14 + 8);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A932A214(a2, v6, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1A93286E0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A93F8BC8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A9072534(0, &qword_1ED2A9390);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A93F8BBC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A9329014(v7, result + 1, &qword_1EEAB98C0, &qword_1ED2A9390, 0x1E0C99D80, (void (*)(unint64_t))sub_1A91C5E44);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A91C5E44(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A93293C8((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A93F8A30();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1A9072534(0, &qword_1ED2A9390);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A93F8A3C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A93F8A3C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A932A410((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A932899C(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v7 = sub_1A93F9324();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    v11 = *(_QWORD *)&aStdq_8[8 * (char)a2];
    while (*(_QWORD *)&aStdq_8[8 * *(char *)(*(_QWORD *)(v6 + 48) + v9)] != v11)
    {
      v12 = sub_1A93F90C0();
      swift_bridgeObjectRelease_n();
      if ((v12 & 1) != 0)
        goto LABEL_8;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    result = 0;
    LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v9);
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A932A594(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1A9328B34(uint64_t a1, void *a2, void *a3, char a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  BOOL v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;

  v8 = *v4;
  sub_1A93F92DC();
  v27 = v4;
  if (a4)
  {
    sub_1A93F92E8();
    swift_bridgeObjectRetain();
    if (a4 == 1)
    {
      sub_1A93F7FBC();
    }
    else
    {
      sub_1A91599C0(a2, a3, 2);
      sub_1A93F8A48();
      sub_1A9158B44(a2, a3, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
    swift_bridgeObjectRetain();
  }
  v9 = sub_1A93F9324();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v27;
    *v27 = 0x8000000000000000;
    sub_1A91599C0(a2, a3, a4);
    sub_1A932A738(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    *v27 = v30;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    result = 1;
    *(_BYTE *)(a1 + 16) = a4;
    return result;
  }
  v12 = ~v10;
  v28 = ~v10;
  while (1)
  {
    v13 = *(_QWORD *)(v8 + 48) + 24 * v11;
    v14 = *(void **)v13;
    if (!*(_BYTE *)(v13 + 16))
    {
      if (!a4 && v14 == a2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      goto LABEL_8;
    }
    v15 = *(void **)(v13 + 8);
    if (*(_BYTE *)(v13 + 16) == 1)
      break;
    if (a4 == 2)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A4248);
      sub_1A91599C0(a2, a3, 2);
      sub_1A91599C0(v14, v15, 2);
      v17 = sub_1A93F8A3C();
      v12 = v28;
      sub_1A9158B44(a2, a3, 2);
      sub_1A9158B44(v14, v15, 2);
      if ((v17 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = a2;
        v19 = a3;
        v20 = 2;
        goto LABEL_26;
      }
    }
LABEL_8:
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_24;
  }
  if (a4 != 1)
    goto LABEL_8;
  v16 = v14 == a2 && v15 == a3;
  if (!v16 && (sub_1A93F90C0() & 1) == 0)
    goto LABEL_8;
  swift_bridgeObjectRelease();
  v18 = a2;
  v19 = a3;
  v20 = 1;
LABEL_26:
  sub_1A9158B44(v18, v19, v20);
LABEL_27:
  v23 = *(_QWORD *)(*v27 + 48) + 24 * v11;
  v24 = *(void **)v23;
  v25 = *(void **)(v23 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v23;
  *(_QWORD *)(a1 + 8) = v25;
  v26 = *(_BYTE *)(v23 + 16);
  *(_BYTE *)(a1 + 16) = v26;
  sub_1A91599C0(v24, v25, v26);
  return 0;
}

uint64_t sub_1A9328E84(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v7 = *v3;
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F9444();
  v8 = sub_1A93F9324();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A932A9E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13 = a2;
    *((_QWORD *)&v13 + 1) = a3;
    result = 1;
    goto LABEL_8;
  }
  if ((sub_1A93F9438() & 1) == 0)
  {
    v11 = ~v9;
    do
    {
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while ((sub_1A93F9438() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  result = 0;
  v13 = *(_OWORD *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
LABEL_8:
  *a1 = v13;
  return result;
}

uint64_t sub_1A9328FF0(uint64_t a1, uint64_t a2)
{
  return sub_1A9329014(a1, a2, &qword_1ED2A4340, (unint64_t *)&qword_1ED2A41B8, 0x1E0C97B90, (void (*)(unint64_t))sub_1A90A3870);
}

uint64_t sub_1A9329014(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_1A93F8C40();
    v21 = v8;
    sub_1A93F8B8C();
    if (sub_1A93F8BE0())
    {
      sub_1A9072534(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_1A93F8A30();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1A93F8BE0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

__n128 sub_1A9329214(uint64_t a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  _BYTE v10[40];
  _BYTE v11[8];
  unint64_t v12;

  sub_1A93F92DC();
  v4 = *(unsigned __int8 *)(a1 + 24);
  sub_1A93F7FBC();
  sub_1A93F92F4();
  if (v4 != 1)
    sub_1A93F930C();
  sub_1A9094604(a1 + 32, (uint64_t)v10);
  sub_1A9094604((uint64_t)v10, (uint64_t)v11);
  if (v12 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  sub_1A93F9324();
  v5 = sub_1A93F8B74();
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  v6 = *(_QWORD *)(a2 + 48) + 72 * v5;
  *(_OWORD *)v6 = *(_OWORD *)a1;
  result = *(__n128 *)(a1 + 16);
  v8 = *(_OWORD *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(v6 + 32) = v8;
  *(_OWORD *)(v6 + 48) = v9;
  *(__n128 *)(v6 + 16) = result;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1A93293C8(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1A93F8A30();
  result = sub_1A93F8B74();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1A9329448(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A91C45E8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1A923775C();
      goto LABEL_14;
    }
    sub_1A9239004(v8);
  }
  v9 = *v3;
  v10 = sub_1A93F8A30();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1A93F8A3C();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1A93F8A3C();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1A93295CC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A91C45F4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A92378FC();
      goto LABEL_22;
    }
    sub_1A9239010();
  }
  v11 = *v4;
  sub_1A93F92DC();
  sub_1A93F92F4();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
  }
  result = sub_1A93F9324();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v11 + 48);
    do
    {
      v16 = (_QWORD *)(v15 + 16 * a3);
      v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          v18 = *v16 == v8 && v17 == a2;
          if (v18 || (result = sub_1A93F90C0(), (result & 1) != 0))
          {
LABEL_21:
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
            result = sub_1A93F924C();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  v19 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v20 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * a3);
  *v20 = v8;
  v20[1] = a2;
  v21 = *(_QWORD *)(v19 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v23;
  return result;
}

uint64_t sub_1A9329780(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A91C48FC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A9237AA8();
      goto LABEL_14;
    }
    sub_1A92392E4();
  }
  v8 = *v3;
  result = sub_1A93F92D0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A93298A0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1A93F73E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1A91C4B88();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1A9237C3C();
      goto LABEL_12;
    }
    sub_1A9239544();
  }
  v13 = *v3;
  sub_1A932B590((unint64_t *)&qword_1ED2A1F40, MEMORY[0x1E0CB09C8]);
  v14 = sub_1A93F7FA4();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1A932B590((unint64_t *)&unk_1EEABC520, MEMORY[0x1E0CB09D0]);
      v19 = sub_1A93F8004();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1A93F924C();
  __break(1u);
  return result;
}

void *sub_1A9329A94(void *result, __int16 a2, unint64_t a3, char a4)
{
  uint64_t v4;
  void *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;

  v6 = result;
  v7 = a2;
  v8 = HIBYTE(a2);
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1A91C542C();
      goto LABEL_8;
    }
    if (v10 <= v9)
    {
      sub_1A9239D2C();
LABEL_8:
      sub_1A93F92DC();
      sub_1A93F92F4();
      if ((v7 & 1) == 0)
        sub_1A93F930C();
      __asm { BR              X9 }
    }
    result = sub_1A9238450();
  }
  v11 = *v16;
  *(_QWORD *)(*v16 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v12 = *(_QWORD *)(v11 + 48) + 16 * a3;
  *(_QWORD *)v12 = v6;
  *(_BYTE *)(v12 + 8) = v7 & 1;
  *(_BYTE *)(v12 + 9) = v8;
  v13 = *(_QWORD *)(v11 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1A9329E0CLL);
  }
  *(_QWORD *)(v11 + 16) = v15;
  return result;
}

void *sub_1A9329E58(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1A91C57F0();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1A923A0B4();
LABEL_8:
      sub_1A93F92DC();
      __asm { BR              X10 }
    }
    result = sub_1A9238608();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1A932A1BCLL);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1A932A214(uint64_t result, char a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1A91C5B58();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_1A9238614();
        goto LABEL_15;
      }
      sub_1A923A3E8();
    }
    v10 = *v4;
    sub_1A93F92DC();
    sub_1A93F92E8();
    result = sub_1A93F9324();
    v11 = -1 << *(_BYTE *)(v10 + 32);
    a3 = result & ~v11;
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v12 = ~v11;
      while (1)
      {
        v13 = *(_QWORD *)(v10 + 48) + 16 * a3;
        result = *(unsigned __int8 *)(v13 + 8);
        if ((_DWORD)result == 1)
          __asm { BR              X0 }
        if ((a2 & 1) == 0)
          break;
        a3 = (a3 + 1) & v12;
        if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          goto LABEL_15;
      }
      result = sub_1A93F924C();
      __break(1u);
    }
  }
LABEL_15:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v15 = *(_QWORD *)(v14 + 48) + 16 * a3;
  *(_QWORD *)v15 = v7;
  *(_BYTE *)(v15 + 8) = a2 & 1;
  v16 = *(_QWORD *)(v14 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
    JUMPOUT(0x1A932A3FCLL);
  }
  *(_QWORD *)(v14 + 16) = v18;
  return result;
}

void sub_1A932A410(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A91C5E44(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1A9238974();
      goto LABEL_14;
    }
    sub_1A923A6A0(v8);
  }
  v9 = *v3;
  v10 = sub_1A93F8A30();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1A9072534(0, &qword_1ED2A9390);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1A93F8A3C();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1A93F8A3C();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1A932A594(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_1A91C5E50();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1A9238B20();
      goto LABEL_13;
    }
    sub_1A923A6AC();
  }
  v9 = *v3;
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  result = sub_1A93F9324();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v10;
    v12 = *(_QWORD *)&aStdq_8[8 * v6];
    while (*(_QWORD *)&aStdq_8[8 * *(char *)(*(_QWORD *)(v9 + 48) + a2)] != v12)
    {
      v13 = sub_1A93F90C0();
      result = swift_bridgeObjectRelease_n();
      if ((v13 & 1) != 0)
        goto LABEL_17;
      a2 = (a2 + 1) & v11;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_13:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (!v16)
  {
    *(_QWORD *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  swift_bridgeObjectRelease_n();
LABEL_17:
  result = sub_1A93F924C();
  __break(1u);
  return result;
}

void sub_1A932A738(void *a1, void *a2, char a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a5 & 1) != 0)
    goto LABEL_31;
  if ((a5 & 1) != 0)
  {
    sub_1A91C6120();
  }
  else
  {
    if (v10 > v9)
    {
      sub_1A9238CB4();
      goto LABEL_31;
    }
    sub_1A923A948();
  }
  v11 = *v5;
  sub_1A93F92DC();
  if (a3)
  {
    sub_1A93F92E8();
    if (a3 == 1)
    {
      sub_1A93F7FBC();
    }
    else
    {
      v12 = a1;
      sub_1A93F8A48();
      sub_1A9158B44(a1, a2, 2);
    }
  }
  else
  {
    sub_1A93F92E8();
    sub_1A93F930C();
  }
  v13 = sub_1A93F9324();
  v14 = -1 << *(_BYTE *)(v11 + 32);
  a4 = v13 & ~v14;
  if (((*(_QWORD *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v15 = ~v14;
    do
    {
      v16 = *(_QWORD *)(v11 + 48) + 24 * a4;
      v17 = *(void **)v16;
      if (*(_BYTE *)(v16 + 16))
      {
        v18 = *(void **)(v16 + 8);
        if (*(_BYTE *)(v16 + 16) == 1)
        {
          if (a3 == 1)
          {
            v19 = v17 == a1 && v18 == a2;
            if (v19 || (sub_1A93F90C0() & 1) != 0)
            {
LABEL_30:
              sub_1A93F924C();
              __break(1u);
              break;
            }
          }
        }
        else if (a3 == 2)
        {
          sub_1A9072534(0, (unint64_t *)&qword_1ED2A4248);
          sub_1A91599C0(a1, a2, 2);
          sub_1A91599C0(v17, v18, 2);
          v20 = sub_1A93F8A3C();
          sub_1A9158B44(a1, a2, 2);
          sub_1A9158B44(v17, v18, 2);
          if ((v20 & 1) != 0)
            goto LABEL_30;
        }
      }
      else if (!a3 && v17 == a1)
      {
        goto LABEL_30;
      }
      a4 = (a4 + 1) & v15;
    }
    while (((*(_QWORD *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_31:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_QWORD *)v22 = a1;
  *(_QWORD *)(v22 + 8) = a2;
  *(_BYTE *)(v22 + 16) = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_1A932A9E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_14;
  if ((a4 & 1) != 0)
  {
    sub_1A91C6480();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_1A9238E70();
      goto LABEL_14;
    }
    sub_1A923AC7C();
  }
  v10 = *v4;
  sub_1A93F92DC();
  sub_1A93F9444();
  result = sub_1A93F9324();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    result = sub_1A93F9438();
    if ((result & 1) != 0)
    {
LABEL_13:
      result = sub_1A93F924C();
      __break(1u);
    }
    else
    {
      v12 = ~v11;
      while (1)
      {
        a3 = (a3 + 1) & v12;
        if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        result = sub_1A93F9438();
        if ((result & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v14 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * a3);
  *v14 = v7;
  v14[1] = a2;
  v15 = *(_QWORD *)(v13 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v17;
  return result;
}

uint64_t sub_1A932AB64(_QWORD *a1, _QWORD *a2, char a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = a1[2];
  if (!v5 || (v39 = a2[2]) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v7 = a1[4];
  v8 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = a2[5];
  v40 = a2[4];
  v10 = (_QWORD *)*a4;
  swift_bridgeObjectRetain();
  v41 = v7;
  v12 = sub_1A9094640(v7, v8);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    v16 = v11;
    v17 = 0;
    v18 = 0;
    v37 = v5 - 1;
    while (1)
    {
      if (v10[3] >= v15)
      {
        if ((a3 & 1) == 0)
          sub_1A9307F14();
      }
      else
      {
        sub_1A92FF8D0(v15, a3 & 1);
        v19 = sub_1A9094640(v41, v8);
        if ((v16 & 1) != (v20 & 1))
          goto LABEL_26;
        v12 = v19;
      }
      v21 = (_QWORD *)*a4;
      if ((v16 & 1) != 0)
      {
        v22 = 16 * v12;
        v23 = (uint64_t *)(v21[7] + 16 * v12);
        v25 = *v23;
        v24 = v23[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = (_QWORD *)(v21[7] + v22);
        swift_bridgeObjectRelease();
        *v26 = v25;
        v26[1] = v24;
      }
      else
      {
        v21[(v12 >> 6) + 8] |= 1 << v12;
        v27 = (uint64_t *)(v21[6] + 16 * v12);
        *v27 = v41;
        v27[1] = v8;
        v28 = (_QWORD *)(v21[7] + 16 * v12);
        *v28 = v40;
        v28[1] = v9;
        v29 = v21[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_25;
        v21[2] = v31;
      }
      if (v37 == v18)
        break;
      if ((unint64_t)(v18 + 1) >= a1[2])
        goto LABEL_24;
      if (v39 == ++v18)
        break;
      v32 = a1[v17 + 6];
      v8 = a1[v17 + 7];
      swift_bridgeObjectRetain();
      v9 = a2[v17 + 7];
      v40 = a2[v17 + 6];
      v10 = (_QWORD *)*a4;
      swift_bridgeObjectRetain();
      v41 = v32;
      v12 = sub_1A9094640(v32, v8);
      v16 = v33;
      v34 = v10[2];
      v35 = (v33 & 1) == 0;
      a3 = 1;
      v17 += 2;
      v15 = v34 + v35;
      if (__OFADD__(v34, v35))
        goto LABEL_23;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A932AE14(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v25 = MEMORY[0x1E0DEE9D8];
    result = sub_1A929E880(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v25;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1AF4129DC](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      sub_1A93227E4(v8, &v21);
      if (v2)
      {
        swift_release();

        return v5;
      }
      v10 = v4;

      v11 = v21;
      v12 = v22;
      v13 = v23;
      v14 = v24;
      v25 = v5;
      v16 = *(_QWORD *)(v5 + 16);
      v15 = *(_QWORD *)(v5 + 24);
      if (v16 >= v15 >> 1)
      {
        v19 = v24;
        v20 = v22;
        sub_1A929E880(v15 > 1, v16 + 1, 1);
        v14 = v19;
        v12 = v20;
        v5 = v25;
      }
      *(_QWORD *)(v5 + 16) = v16 + 1;
      v17 = v5 + 48 * v16;
      *(_QWORD *)(v17 + 32) = v11;
      ++v7;
      *(_OWORD *)(v17 + 40) = v12;
      *(_QWORD *)(v17 + 56) = v13;
      *(_OWORD *)(v17 + 64) = v14;
      v4 = v10;
      v18 = v10 == v7;
      v2 = 0;
      if (v18)
        return v5;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A932AFF0(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD v12[2];
  _BYTE v13[32];
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1A929E7F0(0, v2, 0);
    v3 = v14;
    v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1A93F8010();
      v8 = objc_msgSend(a2, sel_valueForKey_, v7);

      if (v8)
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v12, 0, sizeof(v12));
      }
      sub_1A9062F08((uint64_t)v12, (uint64_t)v13, qword_1ED2AC800);
      swift_bridgeObjectRelease();
      v14 = v3;
      v10 = *(_QWORD *)(v3 + 16);
      v9 = *(_QWORD *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1A929E7F0(v9 > 1, v10 + 1, 1);
        v3 = v14;
      }
      v6 += 16;
      *(_QWORD *)(v3 + 16) = v10 + 1;
      sub_1A9062F08((uint64_t)v13, v3 + 32 * v10 + 32, qword_1ED2AC800);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A932B154(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  int64_t v38;

  v3 = v2;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v38 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1))
      break;
    if (v11 >= v38)
      goto LABEL_31;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v38)
        goto LABEL_31;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_15;
      v16 = v11 + 2;
      if (v11 + 2 >= v38)
        goto LABEL_31;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_15;
      v16 = v11 + 3;
      if (v11 + 3 >= v38)
        goto LABEL_31;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_15:
        v11 = v16;
      }
      else
      {
        v25 = v11 + 4;
        if (v11 + 4 >= v38)
        {
LABEL_31:
          swift_release();
          return (uint64_t)v32;
        }
        v15 = *(_QWORD *)(v6 + 8 * v25);
        for (v11 += 4; !v15; ++v25)
        {
          v11 = v25 + 1;
          if (__OFADD__(v25, 1))
            goto LABEL_34;
          if (v11 >= v38)
            goto LABEL_31;
          v15 = *(_QWORD *)(v6 + 8 * v11);
        }
      }
    }
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_17:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v33, v18, v19, v20);
    if (v3)
    {
      v26 = v32;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v26;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((_QWORD)v34)
    {
      v31 = v34;
      v29 = v35;
      v30 = v36;
      v27 = v33;
      v28 = v37;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A91199E0(0, v32[2] + 1, 1, v32);
        v32 = (_QWORD *)result;
      }
      v22 = v32[2];
      v21 = v32[3];
      v23 = v31;
      if (v22 >= v21 >> 1)
      {
        result = (uint64_t)sub_1A91199E0((_QWORD *)(v21 > 1), v22 + 1, 1, v32);
        v23 = v31;
        v32 = (_QWORD *)result;
      }
      v32[2] = v22 + 1;
      v24 = &v32[7 * v22];
      v24[4] = v27;
      *(_OWORD *)(v24 + 5) = v23;
      v24[7] = v29;
      *((_OWORD *)v24 + 4) = v30;
      v24[10] = v28;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A932B420@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A9323278(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD *@<X8>))(v1 + 40), *(void (**)(_QWORD *@<X8>))(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void **)(v1 + 64), a1);
}

double sub_1A932B438@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_1A9322B04(a1, a2, a3, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_BYTE *)(v4 + 40), *(void **)(v4 + 48), a4);
}

uint64_t sub_1A932B45C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (a2[2] >= a1[2])
    v4 = a1[2];
  else
    v4 = a2[2];
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF50);
    v5 = sub_1A93F8E8C();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E0];
  }
  v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A932AB64(a1, a2, 1, &v7);
  return v7;
}

uint64_t sub_1A932B504()
{
  return swift_deallocObject();
}

uint64_t sub_1A932B518()
{
  return swift_deallocObject();
}

void sub_1A932B528(uint64_t *a1@<X8>)
{
  sub_1A9326974(a1);
}

uint64_t sub_1A932B530()
{
  return swift_deallocObject();
}

uint64_t sub_1A932B540()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  (*(void (**)(uint64_t *__return_ptr))(v0 + 24))(&v4);
  v2 = v4;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t sub_1A932B580()
{
  return swift_deallocObject();
}

uint64_t sub_1A932B590(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A93F73E0();
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A932B5D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A932B5E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 16);
  (*(void (**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A932B61C()
{
  return swift_deallocObject();
}

void NSUserDefaults.recordExecution(of:at:)()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1A93F7314();
  sub_1A93F8C70();
  sub_1A93F810C();
  sub_1A93F810C();
  v2 = (id)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

uint64_t sub_1A932B700(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v2 = sub_1A93F738C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F8040();
  sub_1A93F7368();
  v6 = a1;
  NSUserDefaults.recordExecution(of:at:)();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1A932B7CC()
{
  uint64_t v0;
  int v1;
  id v2;
  char **v3;
  char **v4;
  id v5;

  switch(*(_QWORD *)(v0 + OBJC_IVAR___MTContentKeyRequest_requestType))
  {
    case 0:
      v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v3 = &selRef_podcastsLicenseStreamingStart;
      v4 = &selRef_podcastsLicenseOfflineStart;
      goto LABEL_6;
    case 1:
      v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v3 = &selRef_podcastsLicenseStreamingRenew;
      v4 = &selRef_podcastsLicenseOfflineRenew;
      goto LABEL_6;
    case 2:
      v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v3 = &selRef_podcastsLicenseStreamingStop;
      v4 = &selRef_podcastsLicenseOfflineStop;
LABEL_6:
      if (v1)
        v3 = v4;
      break;
    case 3:
      v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v3 = &selRef_podcastsLicenseOfflineStopNonce;
      break;
    default:
      sub_1A93F921C();
      __break(1u);
      JUMPOUT(0x1A932B96CLL);
  }
  v5 = objc_msgSend(v2, *v3);

  return v5;
}

void Data.inMemorySize.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A932B9AC(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2);
}

uint64_t String.inMemorySize.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  swift_bridgeObjectRetain();
  v4 = sub_1A9122048(a1, a2);
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(v4 + 8 * v7 + 32);
      v10 = __OFADD__(v8, v9);
      v8 += v9;
      if (v10)
      {
        __break(1u);
        return result;
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    if ((v8 & 0x8000000000000000) == 0)
      return v8;
    sub_1A93F8E08();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A932BB30()
{
  unint64_t *v0;

  return String.inMemorySize.getter(*v0, v0[1]);
}

void sub_1A932BB38()
{
  uint64_t *v0;

  Data.inMemorySize.getter(*v0, v0[1]);
}

uint64_t Double.inMemorySize.getter()
{
  return 8;
}

uint64_t sub_1A932BB48()
{
  return 8;
}

uint64_t Float.inMemorySize.getter()
{
  return 4;
}

uint64_t sub_1A932BB58()
{
  return 4;
}

uint64_t Array<A>.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v0);
  sub_1A93F8214();
  return v2;
}

uint64_t sub_1A932BBE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 24) + 8))(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  if (__CFADD__(*a1, result))
    __break(1u);
  else
    *a1 += result;
  return result;
}

uint64_t sub_1A932BC34()
{
  return Array<A>.inMemorySize.getter();
}

uint64_t Dictionary<>.inMemorySize.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1A93F7F5C();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEA0D0], v0);
  sub_1A93F8214();
  return v2;
}

uint64_t sub_1A932BCD0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  swift_getTupleTypeMetadata2();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  if (__CFADD__(*a1, result))
    __break(1u);
  else
    *a1 += result;
  return result;
}

uint64_t sub_1A932BD58(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A932BCD0(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1A932BD74()
{
  return Dictionary<>.inMemorySize.getter();
}

uint64_t URL.hasiPodLibraryScheme.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = sub_1A93F723C();
  if (v1)
  {
    if (v0 == 0x62696C2D646F7069 && v1 == 0xEC00000079726172)
      v2 = 1;
    else
      v2 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t URL.contained(within:)()
{
  char v0;

  sub_1A93F7224();
  sub_1A93F7224();
  v0 = sub_1A93F816C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

Swift::String_optional __swiftcall URL.md5()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::String_optional result;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v0 = sub_1A93F7E9C();
  v10[1] = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v11 = sub_1A93F7EA8();
  v10[0] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v1 = sub_1A93F8088();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7224();
  sub_1A93F807C();
  sub_1A93F804C();
  v6 = v5;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v6 >> 60 != 15)
  {
    sub_1A9066CA8(&qword_1ED2AD1E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
    sub_1A93F7E78();
    __asm { BR              X10 }
  }
  v7 = 0;
  v8 = 0;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

Swift::Int64_optional __swiftcall URL.volumeAvailableCapacityForOpportunisticUsage()()
{
  Swift::Int64 v0;
  Swift::Bool v1;
  Swift::Int64_optional result;

  v0 = sub_1A932C298(MEMORY[0x1E0C99BB0], MEMORY[0x1E0CAF3B0]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

Swift::Int_optional __swiftcall URL.volumeAvailableCapacity()()
{
  Swift::Int v0;
  Swift::Bool v1;
  Swift::Int_optional result;

  v0 = sub_1A932C298(MEMORY[0x1E0C99BB8], (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF3A0]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

Swift::Int_optional __swiftcall URL.volumeTotalCapacity()()
{
  Swift::Int v0;
  Swift::Bool v1;
  Swift::Int_optional result;

  v0 = sub_1A932C298(MEMORY[0x1E0C99CF0], (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF370]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_1A932C298(void **a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_1A93F7074();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_1A93F71DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A44A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_QWORD *)(inited + 32) = v8;
  v10 = v8;
  sub_1A9133D84(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1A93F717C();
  v11 = swift_bridgeObjectRelease();
  v12 = a2(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

Swift::Bool __swiftcall URL.isVolumeAvailableCapacityForOpportunisticUsageAbove(threshold:)(Swift::Int64_optional threshold)
{
  return sub_1A932C588(threshold.value, threshold.is_nil, (uint64_t (*)(void))URL.volumeAvailableCapacityForOpportunisticUsage());
}

Swift::Bool __swiftcall URL.isVolumeAvailableCapacityAbove(threshold:)(Swift::Int64_optional threshold)
{
  return sub_1A932C588(threshold.value, threshold.is_nil, (uint64_t (*)(void))URL.volumeAvailableCapacity());
}

uint64_t sub_1A932C588(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = a3();
  if ((a2 & 1) != 0)
    v7 = 0;
  else
    v7 = a1;
  return v6 & 1 | (v7 < v5);
}

Swift::Void __swiftcall TraceInterval.end()()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t dispatch thunk of Trace.emit(event:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of Trace.start(interval:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

BOOL MTEpisode.bookmarksSyncType.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_priceType);
  if (v1)
  {
    v2 = v1;
    sub_1A93F8040();

  }
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = MTEpisodePriceTypeFromPersistentString(v3);

  return (unint64_t)(v4 - 2) < 3;
}

uint64_t sub_1A932C71C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC900);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = v1 + qword_1ED2A2EC8;
  swift_beginAccess();
  sub_1A9062170(v9, (uint64_t)v8, &qword_1ED2AC900);
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A905FD54((uint64_t)v8, &qword_1ED2AC900);
  if (qword_1ED2A42C0 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (id)qword_1ED2A42B0;
  swift_retain();
  sub_1A93F75CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1A908A030((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1A932C8F4(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation26ModernEpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1A932C910(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  void *v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    objc_msgSend(*(id *)(a1 + 80), sel_lock);
    swift_beginAccess();
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 48);
    v5 = *(unsigned __int8 *)(a1 + 56);
    v6 = *(void **)(a1 + 80);
    sub_1A908850C(v3, v4, v5);
    objc_msgSend(v6, sel_unlock);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t ModernEpisodeDownloadStateMachine.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t ModernEpisodeDownloadStateMachine.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s18PodcastsFoundation26ModernEpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v7;

  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 != a4 || a2 != a5)
          return sub_1A93F90C0();
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6)
    return 0;
  v7 = ((a2 & 1) == 0) ^ a5;
  if (*(double *)&a1 != *(double *)&a4)
    v7 = 0;
  return v7 & 1;
}

uint64_t assignWithCopy for ModernEpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A9086040(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A9085FE0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModernEpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A9085FE0(v4, v5, v6);
  return a1;
}

uint64_t sub_1A932CC78(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t method lookup function for ModernEpisodeDownloadStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A932CC9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A932CCC0(uint64_t a1)
{
  return sub_1A932C910(a1);
}

uint64_t sub_1A932CCC8@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  unsigned __int8 v43;
  id v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t result;
  unint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  BOOL v55;
  unint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  char *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int *v78;
  uint64_t *v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  id v97;
  unint64_t *v98;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char **)((char *)&v86 - v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v86 - v15;
  v17 = objc_msgSend(a1, sel_url, v14);
  if (v17)
  {
    v18 = v17;
    sub_1A93F8040();

    sub_1A93F7248();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  }
  v20 = objc_msgSend(a1, sel_interest);
  v95 = v16;
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_adamID);
    objc_msgSend(v21, sel_interestValue);
    v24 = v23;
    v25 = objc_msgSend(v21, sel_lastUpdatedDate);
    v26 = type metadata accessor for InterestModel();
    sub_1A93F7368();

    *v9 = v22;
    v9[1] = v24;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28 = v26;
    v16 = v95;
    v27(v9, 0, 1, v28);
  }
  else
  {
    v29 = type metadata accessor for InterestModel();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 1, 1, v29);
  }
  v30 = objc_msgSend(a1, sel_adamID);
  v31 = objc_msgSend(a1, sel_name);
  v32 = sub_1A93F8040();
  v34 = v33;

  sub_1A9062170((uint64_t)v16, (uint64_t)v12, &qword_1ED2AD3D0);
  v35 = objc_msgSend(a1, sel_color);
  v93 = v32;
  v94 = v30;
  v92 = v34;
  if (v35)
  {
    v36 = v35;
    v37 = sub_1A93F8040();
    v90 = v38;
    v91 = v37;

  }
  else
  {
    v90 = 0;
    v91 = 0;
  }
  sub_1A9062170((uint64_t)v9, (uint64_t)v6, &qword_1EEABDF58);
  v39 = objc_msgSend(a1, sel_podcasts);
  sub_1A91C675C();
  sub_1A9066CA8((unint64_t *)&qword_1EEAB98A8, (uint64_t (*)(uint64_t))sub_1A91C675C, MEMORY[0x1E0DEFCF8]);
  v40 = sub_1A93F85F8();

  if ((v40 & 0xC000000000000001) != 0)
  {
    v89 = (uint64_t)v9;
    v41 = (unint64_t *)MEMORY[0x1E0DEE9E8];
    v98 = (unint64_t *)MEMORY[0x1E0DEE9E8];
    sub_1A93F8B8C();
    v42 = sub_1A93F8BE0();
    if (v42)
    {
      v86 = v12;
      v87 = v6;
      v88 = a2;
      do
      {
        v96 = v42;
        swift_dynamicCast();
        v43 = objc_msgSend(v97, sel_subscribed);
        v44 = v97;
        if ((v43 & 1) != 0)
        {
          v45 = v98;
          v46 = v98[2];
          if (v98[3] <= v46)
          {
            sub_1A91C50E4(v46 + 1);
            v45 = v98;
          }
          result = sub_1A93F8A30();
          v48 = v45 + 7;
          v49 = -1 << *((_BYTE *)v45 + 32);
          v50 = result & ~v49;
          v51 = v50 >> 6;
          if (((-1 << v50) & ~v45[(v50 >> 6) + 7]) != 0)
          {
            v52 = __clz(__rbit64((-1 << v50) & ~v45[(v50 >> 6) + 7])) | v50 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v53 = 0;
            v54 = (unint64_t)(63 - v49) >> 6;
            do
            {
              if (++v51 == v54 && (v53 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v55 = v51 == v54;
              if (v51 == v54)
                v51 = 0;
              v53 |= v55;
              v56 = v48[v51];
            }
            while (v56 == -1);
            v52 = __clz(__rbit64(~v56)) + (v51 << 6);
          }
          *(unint64_t *)((char *)v48 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
          *(_QWORD *)(v45[6] + 8 * v52) = v44;
          ++v45[2];
        }
        else
        {

        }
        v42 = sub_1A93F8BE0();
      }
      while (v42);
      v41 = v98;
      v6 = v87;
      a2 = v88;
      v12 = v86;
    }
    swift_release();
    v9 = (_QWORD *)v89;
    if (((unint64_t)v41 & 0xC000000000000001) != 0)
      goto LABEL_33;
  }
  else
  {
    v41 = sub_1A91C6798(v40);
    if (((unint64_t)v41 & 0xC000000000000001) != 0)
    {
LABEL_33:
      v89 = sub_1A93F8BBC();
      goto LABEL_34;
    }
  }
  v89 = v41[2];
LABEL_34:
  swift_release();
  v57 = objc_msgSend(a1, sel_artworkPrimaryColor);
  if (v57)
  {
    v58 = v57;
    v59 = sub_1A93F8040();
    v87 = v60;
    v88 = (_QWORD *)v59;

  }
  else
  {
    v87 = 0;
    v88 = 0;
  }
  v61 = objc_msgSend(a1, sel_artworkTemplateURL, v86);
  if (v61)
  {
    v62 = v61;
    v63 = (uint64_t)v9;
    v64 = sub_1A93F8040();
    v66 = v65;

  }
  else
  {
    v63 = (uint64_t)v9;
    v64 = 0;
    v66 = 0;
  }
  v67 = objc_msgSend(a1, sel_artworkHeightNumber);
  v68 = v67;
  v69 = (uint64_t)v6;
  if (v67)
  {
    objc_msgSend(v67, sel_doubleValue);
    v71 = v70;

  }
  else
  {
    v71 = 0;
  }
  v72 = objc_msgSend(a1, sel_artworkWidthNumber);
  v73 = v72;
  if (v72)
  {
    objc_msgSend(v72, sel_doubleValue);
    v75 = v74;

  }
  else
  {

    v75 = 0;
  }
  sub_1A905FD54(v63, &qword_1EEABDF58);
  sub_1A905FD54((uint64_t)v95, &qword_1ED2AD3D0);
  v76 = v93;
  *a2 = v94;
  a2[1] = v76;
  a2[2] = v92;
  v77 = a2;
  v78 = (int *)type metadata accessor for CategoryModel();
  sub_1A9062F08((uint64_t)v12, (uint64_t)v77 + v78[6], &qword_1ED2AD3D0);
  v79 = (_QWORD *)((char *)v77 + v78[7]);
  v80 = v90;
  *v79 = v91;
  v79[1] = v80;
  result = sub_1A9062F08(v69, (uint64_t)v77 + v78[8], &qword_1EEABDF58);
  *(_QWORD *)((char *)v77 + v78[9]) = v89;
  v81 = (_QWORD *)((char *)v77 + v78[10]);
  v82 = v87;
  *v81 = v88;
  v81[1] = v82;
  v83 = (_QWORD *)((char *)v77 + v78[11]);
  *v83 = v64;
  v83[1] = v66;
  v84 = (char *)v77 + v78[12];
  *(_QWORD *)v84 = v71;
  v84[8] = v68 == 0;
  v85 = (char *)v77 + v78[13];
  *(_QWORD *)v85 = v75;
  v85[8] = v73 == 0;
  return result;
}

uint64_t CategoryModel.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CategoryModel.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CategoryModel();
  return sub_1A9062170(v1 + *(int *)(v3 + 24), a1, &qword_1ED2AD3D0);
}

uint64_t type metadata accessor for CategoryModel()
{
  uint64_t result;

  result = qword_1ED2AB040;
  if (!qword_1ED2AB040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CategoryModel.color.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.interest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CategoryModel();
  return sub_1A9062170(v1 + *(int *)(v3 + 32), a1, &qword_1EEABDF58);
}

uint64_t CategoryModel.followedShowsCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 36));
}

uint64_t CategoryModel.artworkPrimaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.artworkTemplateURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.artworkHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 48));
}

uint64_t CategoryModel.artworkWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 52));
}

BOOL CategoryModel.isFavorited.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  double v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
  MEMORY[0x1E0C80A78](v1);
  v3 = (double *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for CategoryModel();
  sub_1A9062170(v0 + *(int *)(v4 + 32), (uint64_t)v3, &qword_1EEABDF58);
  v5 = type metadata accessor for InterestModel();
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1A905FD54((uint64_t)v3, &qword_1EEABDF58);
    return 0;
  }
  else
  {
    v7 = v3[1];
    sub_1A9064714((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for InterestModel);
    return v7 == 1.0;
  }
}

uint64_t CategoryModel.hash(into:)()
{
  sub_1A93F930C();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t CategoryModel.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A932D754()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A932D7A4()
{
  sub_1A93F930C();
  return sub_1A93F7FBC();
}

uint64_t sub_1A932D7D4()
{
  sub_1A93F92DC();
  sub_1A93F930C();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t _s18PodcastsFoundation13CategoryModelV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v15;

  v4 = type metadata accessor for CategoryModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - v8;
  v10 = *a1;
  v11 = *a2;
  sub_1A9151768((uint64_t)a1, (uint64_t)&v15 - v8);
  sub_1A9151768((uint64_t)a2, (uint64_t)v6);
  if (v10 == v11)
  {
    if (*((_QWORD *)v9 + 1) == *((_QWORD *)v6 + 1) && *((_QWORD *)v9 + 2) == *((_QWORD *)v6 + 2))
      v13 = 1;
    else
      v13 = sub_1A93F90C0();
  }
  else
  {
    v13 = 0;
  }
  sub_1A9064714((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CategoryModel);
  sub_1A9064714((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CategoryModel);
  return v13 & 1;
}

uint64_t sub_1A932D920()
{
  return sub_1A9066CA8(&qword_1ED2AB038, (uint64_t (*)(uint64_t))type metadata accessor for CategoryModel, (uint64_t)&protocol conformance descriptor for CategoryModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_OWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A93F726C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_OWORD *)((char *)v4 + v16);
    v21 = (_OWORD *)((char *)a2 + v16);
    v22 = type metadata accessor for InterestModel();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      v26 = *(int *)(v22 + 24);
      v27 = (char *)v20 + v26;
      v28 = (char *)v21 + v26;
      v29 = sub_1A93F738C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v30 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v31 = (uint64_t *)((char *)v4 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = a3[11];
    v35 = a3[12];
    v36 = (uint64_t *)((char *)v4 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (char *)v4 + v35;
    v40 = (char *)a2 + v35;
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v39[8] = v40[8];
    v41 = a3[13];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v43[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CategoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 32);
  v8 = type metadata accessor for InterestModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = v7 + *(int *)(v8 + 24);
    v10 = sub_1A93F738C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_OWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_OWORD *)(a1 + v14);
  v19 = (_OWORD *)(a2 + v14);
  v20 = type metadata accessor for InterestModel();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v24 = *(int *)(v20 + 24);
    v25 = (char *)v18 + v24;
    v26 = (char *)v19 + v24;
    v27 = sub_1A93F738C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v28 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[11];
  v33 = a3[12];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a1 + v33;
  v38 = a2 + v33;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CategoryModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for InterestModel();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *v19 = *v20;
      v19[1] = v20[1];
      v46 = *(int *)(v21 + 24);
      v47 = (char *)v19 + v46;
      v48 = (char *)v20 + v46;
      v49 = sub_1A93F738C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
      goto LABEL_13;
    }
    sub_1A9064714((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for InterestModel);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *v19 = *v20;
  v19[1] = v20[1];
  v26 = *(int *)(v21 + 24);
  v27 = (char *)v19 + v26;
  v28 = (char *)v20 + v26;
  v29 = sub_1A93F738C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[12];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *(_QWORD *)v38 = v40;
  v41 = a3[13];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)v43;
  v42[8] = v43[8];
  *(_QWORD *)v42 = v44;
  return a1;
}

uint64_t initializeWithTake for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for InterestModel();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v18 = *(int *)(v15 + 24);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = sub_1A93F738C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v22 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a3[13];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  return a1;
}

uint64_t assignWithTake for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = type metadata accessor for InterestModel();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *v21 = *v22;
      v21[1] = v22[1];
      v50 = *(int *)(v23 + 24);
      v51 = (char *)v21 + v50;
      v52 = (char *)v22 + v50;
      v53 = sub_1A93F738C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
      goto LABEL_13;
    }
    sub_1A9064714((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for InterestModel);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v28 = *(int *)(v23 + 24);
  v29 = (char *)v21 + v28;
  v30 = (char *)v22 + v28;
  v31 = sub_1A93F738C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  v33 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[11];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v43 = a3[12];
  v44 = a3[13];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  v47 = a1 + v44;
  v48 = a2 + v44;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A932E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CategoryModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A932E704(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDF58);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1A932E7A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A90C44E8(319, (unint64_t *)&qword_1ED2AD6E8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1A90C44E8(319, &qword_1ED2AB050, (void (*)(uint64_t))type metadata accessor for InterestModel);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

PodcastsFoundation::FairPlayVersion_optional __swiftcall FairPlayVersion.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::FairPlayVersion_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FairPlayVersion.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 12918;
  else
    return 12662;
}

id static FairPlayMigrationController.shared.getter()
{
  if (qword_1ED2A4860 != -1)
    swift_once();
  return (id)qword_1ED2A7A30;
}

uint64_t sub_1A932E944()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A932E968()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A932E978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A8878);
  v15 = sub_1A93F7674();
  v16 = sub_1A93F8790();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v31 = v18;
    *(_DWORD *)v17 = 136315138;
    v30 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v31);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v15, v16, "%s Beginning migration from legacy FairPlay to V2.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v18, -1, -1);
    MEMORY[0x1AF41411C](v17, -1, -1);
  }

  v19 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 24);
  v20 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher), v19);
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v21;
  v22[3] = a1;
  v22[4] = a2;
  v22[5] = ObjectType;
  v23 = *(void (**)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v20 + 24);
  swift_retain();
  swift_retain();
  v23(sub_1A9337018, v22, v19, v20);
  swift_release();
  swift_release();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  v26 = (void *)sub_1A93F8010();
  swift_bridgeObjectRetain();
  v27 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setValue_forKey_, v26, v27);

  v28 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  v29 = (char *)objc_msgSend(v28, sel_fairPlayMigrationRetryCount);
  if (__OFADD__(v29, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v28, sel_setFairPlayMigrationRetryCount_, v29 + 1);

  }
}

uint64_t FairPlayMigrationController.rollbackIfNecessary(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1A90C85DC(a1, a2, (uint64_t)&unk_1E54F2B88, (uint64_t)sub_1A932F194, (uint64_t)&block_descriptor_10_4);
}

void sub_1A932ED18(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = a1 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1AF41420C](v6);
  if (!v7)
    return;
  v8 = (void *)v7;
  if (qword_1ED2A8890 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8878);
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8790();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = a4;
    v14 = a2;
    v15 = swift_slowAlloc();
    v33 = v15;
    *(_DWORD *)v12 = 136315138;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v33);
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v10, v11, "%s Determining rollback status.", v12, 0xCu);
    swift_arrayDestroy();
    v16 = v15;
    a2 = v14;
    a4 = v13;
    MEMORY[0x1AF41411C](v16, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }

  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel__applePodcastsFoundationSharedUserDefaults);
  NSUserDefaults.fairPlayVersion.getter((BOOL *)&v33);

  v19 = v33;
  v20 = objc_msgSend(v17, sel__applePodcastsFoundationSharedUserDefaults);
  v21 = sub_1A90A4348();
  if (v21 == 2)
  {
    v22 = qword_1EEAB8A98;
    v23 = unk_1EEAB8AA0;
    swift_bridgeObjectRetain();
    LOBYTE(v22) = sub_1A90A427C(v22, v23, 1);

    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    v24 = v21;

    if ((v24 & 1) != 0)
      goto LABEL_15;
  }
  if (v19)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = a2;
    v26[3] = a3;
    v26[4] = a4;
    swift_retain();
    sub_1A932F54C((uint64_t)sub_1A9335CA0, (uint64_t)v26);

    swift_release();
    return;
  }
  v25 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_14;
LABEL_15:
  v27 = sub_1A93F7674();
  v28 = sub_1A93F8790();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v33 = v31;
    *(_DWORD *)v29 = 136315650;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v33);
    sub_1A93F8AA8();
    *(_WORD *)(v29 + 12) = 1026;
    sub_1A93F8AA8();
    *(_WORD *)(v29 + 18) = 2082;
    if (v19)
      v30 = 12918;
    else
      v30 = 12662;
    sub_1A906436C(v30, 0xE200000000000000, &v33);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v27, v28, "%s Rollback unnecessary, isFairPlayV2Enabled: %{BOOL,public}d, fairPlayVersion: %{public}s.", (uint8_t *)v29, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    MEMORY[0x1AF41411C](v29, -1, -1);
  }

  a2();
}

uint64_t sub_1A932F184()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A932F194()
{
  uint64_t v0;

  sub_1A932ED18(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A932F1A0(void *a1, unsigned __int8 a2, char a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, const char *a7, const char *a8)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;

  if ((a3 & 1) != 0)
  {
    sub_1A92411AC(a1, a2);
    if (qword_1ED2A8890 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A8878);
    sub_1A92411AC(a1, a2);
    sub_1A92411AC(a1, a2);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F87B4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v28 = v22;
      *(_DWORD *)v21 = 136315394;
      sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v28);
      sub_1A93F8AA8();
      *(_WORD *)(v21 + 12) = 2080;
      v27 = a2;
      sub_1A9336F10();
      v23 = sub_1A93F927C();
      v26 = sub_1A906436C(v23, v24, &v28);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9336ED8(a1, a2, 1);
      sub_1A9336ED8(a1, a2, 1);
      _os_log_impl(&dword_1A904E000, v19, v20, a8, (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v22, -1, -1);
      MEMORY[0x1AF41411C](v21, -1, -1);

      sub_1A9336ED8(a1, a2, 1);
    }
    else
    {
      sub_1A9336ED8(a1, a2, 1);
      sub_1A9336ED8(a1, a2, 1);
      sub_1A92411D0(a1, a2);

    }
  }
  else
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v10 = sub_1A93F7698();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8878);
    v11 = sub_1A93F7674();
    v12 = sub_1A93F87B4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v26 = v14;
      *(_DWORD *)v13 = 136315138;
      v28 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v26);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v11, v12, a7, v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v14, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);
    }

  }
  return a4();
}

uint64_t sub_1A932F54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);
  uint64_t v20;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1A93F7E18();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_1A93F7E3C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    v15 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 24);
    v16 = *(_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher), v15);
    v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v17;
    v18[3] = a1;
    v18[4] = a2;
    v18[5] = ObjectType;
    v19 = *(void (**)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v16 + 16);
    swift_retain();
    swift_retain();
    v19(sub_1A9335CE0, v18, v15, v16);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A932F6E0(void *a1, char a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  _QWORD *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  NSObject *v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t aBlock[6];

  v78 = a6;
  v11 = type metadata accessor for FairPlayMigrationData(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A93F7D58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v72 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1A93F7DB8();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v18 = MEMORY[0x1AF41420C](a3 + 16);
  if (v18)
  {
    v19 = (char *)v18;
    if ((a2 & 1) != 0)
    {
      v28 = a1;
      if (qword_1ED2A8890 != -1)
        swift_once();
      v29 = sub_1A93F7698();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED2A8878);
      v30 = a1;
      v31 = a1;
      v32 = sub_1A93F7674();
      v33 = sub_1A93F879C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v67 = a4;
        v35 = v34;
        v36 = swift_slowAlloc();
        aBlock[0] = v36;
        *(_DWORD *)v35 = 136315394;
        v79 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v35 + 12) = 2082;
        swift_getErrorValue();
        v37 = sub_1A93F927C();
        v79 = sub_1A906436C(v37, v38, aBlock);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A909CFC0(a1, 1);
        sub_1A909CFC0(a1, 1);
        _os_log_impl(&dword_1A904E000, v32, v33, "%s Unable to migrate, no migration data found with error %{public}s.", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v36, -1, -1);
        v39 = v35;
        a4 = v67;
        MEMORY[0x1AF41411C](v39, -1, -1);
      }
      else
      {
        sub_1A909CFC0(a1, 1);
        sub_1A909CFC0(a1, 1);
      }

      v61 = a1;
      a4(a1, 1, 1);

      sub_1A909CFC0(a1, 1);
      sub_1A909CFC0(a1, 1);
    }
    else
    {
      v20 = qword_1ED2A8890;
      swift_bridgeObjectRetain();
      if (v20 != -1)
        swift_once();
      v64 = v14;
      v65 = a5;
      v21 = sub_1A93F7698();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8878);
      swift_bridgeObjectRetain();
      v22 = sub_1A93F7674();
      v23 = a1;
      v24 = sub_1A93F8790();
      v25 = os_log_type_enabled(v22, v24);
      v67 = a4;
      v77 = v19;
      v63 = v15;
      if (v25)
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        aBlock[0] = v27;
        *(_DWORD *)v26 = 136315394;
        v79 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v26 + 12) = 2048;
        v79 = v23[2];
        sub_1A93F8AA8();
        sub_1A909CFC0(v23, 0);
        _os_log_impl(&dword_1A904E000, v22, v24, "%s Fetched migration data for %ld episodes.", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v27, -1, -1);
        MEMORY[0x1AF41411C](v26, -1, -1);
      }
      else
      {
        sub_1A909CFC0(v23, 0);
      }

      v40 = swift_allocObject();
      v41 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v40 + 16) = MEMORY[0x1E0DEE9D8];
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v41;
      v43 = dispatch_group_create();
      v66 = (char *)v23;
      v44 = v23[2];
      v45 = (uint64_t)v68;
      if (v44)
      {
        v46 = *(unsigned __int8 *)(v12 + 80);
        v47 = &v66[(v46 + 32) & ~v46];
        v48 = *(_QWORD *)(v12 + 72);
        v75 = (v46 + 48) & ~v46;
        v76 = v48;
        v49 = (v13 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
        v73 = v49 + 8;
        v74 = v46 | 7;
        do
        {
          dispatch_group_enter(v43);
          sub_1A9064630((uint64_t)v47, v45, type metadata accessor for FairPlayMigrationData);
          v50 = (_QWORD *)swift_allocObject();
          v51 = v77;
          v50[2] = v77;
          v50[3] = v40;
          v50[4] = v43;
          v50[5] = v42;
          sub_1A9116174(v45, (uint64_t)v50 + v75, type metadata accessor for FairPlayMigrationData);
          *(_QWORD *)((char *)v50 + v49) = v78;
          swift_retain();
          swift_retain();
          v52 = v51;
          v53 = v43;
          sub_1A9331054((uint64_t)v47, sub_1A9337144, (uint64_t)v50);
          swift_release();
          v47 += v76;
          --v44;
        }
        while (v44);
      }
      sub_1A909CFC0(v66, 0);
      v54 = v77;
      v76 = *(_QWORD *)&v77[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = v40;
      v55[3] = v42;
      v56 = v65;
      v55[4] = v67;
      v55[5] = v56;
      v55[6] = v78;
      aBlock[4] = (uint64_t)sub_1A93371D4;
      aBlock[5] = (uint64_t)v55;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1A908A91C;
      aBlock[3] = (uint64_t)&block_descriptor_109;
      v57 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      v58 = v69;
      sub_1A93F7D88();
      v79 = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
      v59 = v72;
      v60 = v64;
      sub_1A93F8B5C();
      sub_1A93F87FC();
      _Block_release(v57);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v60);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v71);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    a4(0, 2, 1);
  }
}

void sub_1A932FF24(uint64_t a1, NSObject *a2, uint64_t a3, NSObject *a4, _QWORD **a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  unsigned __int8 v23;
  _QWORD **v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  uint64_t v41;
  _QWORD *v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t *v50;
  _QWORD **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;

  v47 = a3;
  v48 = a7;
  v50 = a6;
  v51 = a5;
  v49 = a2;
  v9 = type metadata accessor for FairPlayMigrationData(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v46 - v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFA0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(a1, (uint64_t)v21, &qword_1EEABDFA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v49 = a4;
    v22 = *(void **)v21;
    v23 = v21[8];
    if (qword_1ED2A8890 != -1)
      swift_once();
    v24 = v51 + 2;
    v25 = sub_1A93F7698();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A8878);
    sub_1A9064630((uint64_t)v50, (uint64_t)v11, type metadata accessor for FairPlayMigrationData);
    sub_1A92411AC(v22, v23);
    sub_1A92411AC(v22, v23);
    v26 = sub_1A93F7674();
    v27 = sub_1A93F879C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v51 = v24;
      v29 = v28;
      v30 = swift_slowAlloc();
      v52 = v30;
      *(_DWORD *)v29 = 136315650;
      v53 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v52);
      sub_1A93F8AA8();
      *(_WORD *)(v29 + 12) = 2048;
      v31 = *v11;
      sub_1A9064714((uint64_t)v11, type metadata accessor for FairPlayMigrationData);
      v53 = v31;
      sub_1A93F8AA8();
      *(_WORD *)(v29 + 22) = 2080;
      v53 = (uint64_t)v22;
      v54 = v23;
      sub_1A9336F10();
      v32 = sub_1A93F927C();
      v53 = sub_1A906436C(v32, v33, &v52);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A92411D0(v22, v23);
      sub_1A92411D0(v22, v23);
      _os_log_impl(&dword_1A904E000, v26, v27, "%s Failed to migrate %lld with error %s.", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v30, -1, -1);
      v34 = v29;
      v24 = v51;
      MEMORY[0x1AF41411C](v34, -1, -1);
    }
    else
    {
      sub_1A9064714((uint64_t)v11, type metadata accessor for FairPlayMigrationData);
      sub_1A92411D0(v22, v23);
      sub_1A92411D0(v22, v23);
    }

    v40 = v49;
    v41 = *v50;
    swift_beginAccess();
    v42 = *v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v24 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v42 = sub_1A9118AF8(0, v42[2] + 1, 1, v42);
      *v24 = v42;
    }
    v45 = v42[2];
    v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      v42 = sub_1A9118AF8((_QWORD *)(v44 > 1), v45 + 1, 1, v42);
      *v24 = v42;
    }
    v42[2] = v45 + 1;
    v42[v45 + 4] = v41;
    swift_endAccess();
    dispatch_group_leave(v40);
    sub_1A92411D0(v22, v23);
  }
  else
  {
    sub_1A9116174((uint64_t)v21, (uint64_t)v18, type metadata accessor for FairPlayMigrationData.ValidatedData);
    sub_1A9064630((uint64_t)v18, (uint64_t)v15, type metadata accessor for FairPlayMigrationData.ValidatedData);
    v35 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v36 = (v14 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v47;
    sub_1A9116174((uint64_t)v15, v38 + v35, type metadata accessor for FairPlayMigrationData.ValidatedData);
    *(_QWORD *)(v38 + v36) = a4;
    *(_QWORD *)(v38 + v37) = v51;
    *(_QWORD *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    swift_retain();
    v39 = a4;
    swift_retain();
    sub_1A9330890(v18, (void (*)(id, uint64_t))sub_1A93375D0, v38);
    swift_release();
    sub_1A9064714((uint64_t)v18, type metadata accessor for FairPlayMigrationData.ValidatedData);
  }
}

void sub_1A933043C(void *a1, __int16 a2, uint64_t a3, uint64_t *a4, NSObject *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD **v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  _QWORD **v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v12 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 0x100) != 0)
  {
    sub_1A92411AC(a1, a2);
    if (qword_1ED2A8890 != -1)
      swift_once();
    v40 = (_QWORD **)(a6 + 16);
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8878);
    sub_1A9064630((uint64_t)a4, (uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
    sub_1A92411AC(a1, a2);
    sub_1A92411AC(a1, a2);
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v39 = a5;
      v25 = v24;
      v38 = swift_slowAlloc();
      v41 = v38;
      *(_DWORD *)v25 = 136315650;
      v42 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v41);
      sub_1A93F8AA8();
      *(_WORD *)(v25 + 12) = 2048;
      v26 = *v14;
      sub_1A9064714((uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
      v42 = v26;
      sub_1A93F8AA8();
      *(_WORD *)(v25 + 22) = 2080;
      v42 = (uint64_t)a1;
      v43 = a2;
      sub_1A9336F10();
      v27 = sub_1A93F927C();
      v42 = sub_1A906436C(v27, v28, &v41);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      sub_1A9337694(a1, a2, 1);
      sub_1A9337694(a1, a2, 1);
      _os_log_impl(&dword_1A904E000, v22, v23, "%s Failed to migrate %lld with error %s.", (uint8_t *)v25, 0x20u);
      v29 = v38;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v29, -1, -1);
      v30 = v25;
      a5 = v39;
      MEMORY[0x1AF41411C](v30, -1, -1);
    }
    else
    {
      sub_1A9064714((uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
      sub_1A9337694(a1, a2, 1);
      sub_1A9337694(a1, a2, 1);
    }

    v31 = *a4;
    v32 = v40;
    swift_beginAccess();
    v33 = *v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v32 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v33 = sub_1A9118AF8(0, v33[2] + 1, 1, v33);
      *v32 = v33;
    }
    v36 = v33[2];
    v35 = v33[3];
    if (v36 >= v35 >> 1)
    {
      v33 = sub_1A9118AF8((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
      *v32 = v33;
    }
    v33[2] = v36 + 1;
    v33[v36 + 4] = v31;
    swift_endAccess();
    dispatch_group_leave(a5);
    sub_1A9337694(a1, a2, 1);
  }
  else
  {
    v15 = (_QWORD *)(a3 + 16);
    v16 = *a4;
    swift_beginAccess();
    v17 = *(_QWORD **)(a3 + 16);
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *v15 = v17;
    if ((v18 & 1) == 0)
    {
      v17 = sub_1A9118AF8(0, v17[2] + 1, 1, v17);
      *v15 = v17;
    }
    v20 = v17[2];
    v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      v17 = sub_1A9118AF8((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
      *v15 = v17;
    }
    v17[2] = v20 + 1;
    v17[v20 + 4] = v16;
    swift_endAccess();
    dispatch_group_leave(a5);
  }
}

void sub_1A9330890(uint64_t *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  char *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t, char *, uint64_t);
  char *v55;
  id v56;
  uint64_t v57;
  char **v58;
  uint64_t v59;
  _QWORD *v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  _QWORD *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  _QWORD *v78;
  char **v79;
  _QWORD *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(id, uint64_t);
  uint64_t v90;
  char *v91;

  v89 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v82 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F726C();
  v9 = *(char ***)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v81 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  v85 = v13;
  v86 = v14;
  MEMORY[0x1E0C80A78](v13);
  v83 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v84 = (char *)&v79 - v17;
  v18 = (_QWORD *)sub_1A93F7E18();
  v19 = *(v18 - 1);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char ***)((char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = v3;
  v23 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v19 + 104))(v22, *MEMORY[0x1E0DEF740], v18, v20);
  v24 = v23;
  v25 = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, _QWORD *))(v19 + 8))(v22, v18);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v26 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  sub_1A93F7218();
  v27 = objc_allocWithZone(MEMORY[0x1E0DDBF68]);
  v28 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v27, sel_initWithPath_, v28);

  v29 = (char *)sub_1A93325E4(*(uint64_t *)((char *)a1 + *(int *)(v26 + 36)), *(uint64_t *)((char *)a1 + *(int *)(v26 + 36) + 8));
  if (!v29)
  {
    v47 = v18;
    sub_1A933539C(a1, v47, v89, a3, v88);

    return;
  }
  v30 = v29;
  v79 = v9;
  v31 = objc_msgSend(v29, sel_keyData);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1A93F72B4();
    v80 = v18;
    v34 = a3;
    v35 = v33;
    v37 = v36;

    v38 = v8;
    v39 = v30;
    v40 = a1[2];
    v41 = a1[3];
    sub_1A90D8068(v40, v41);
    sub_1A90D8068(v35, v37);
    sub_1A93533B4(v35, v37);
    v43 = v42;
    v44 = v41;
    v30 = v39;
    v8 = v38;
    sub_1A905F180(v40, v44);
    sub_1A905F180(v35, v37);
    v45 = v35;
    a3 = v34;
    v18 = v80;
    sub_1A905F180(v45, v37);
    v46 = (uint64_t)v87;
    if ((v43 & 1) != 0)
    {
      sub_1A9332728(*a1);
      v89(0, 0);

      return;
    }
  }
  else
  {
    v48 = a1[2];
    v49 = a1[3];
    sub_1A90D8068(v48, v49);
    sub_1A9069F9C(0, 0xF000000000000000);
    sub_1A9069F9C(v48, v49);
    v46 = (uint64_t)v87;
  }
  v50 = objc_msgSend(v30, sel_renewalDate);
  if (!v50)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v46, 1, 1, v85);
    goto LABEL_13;
  }
  v51 = v50;
  v52 = v83;
  sub_1A93F7368();

  v53 = v86;
  v54 = *(void (**)(uint64_t, char *, uint64_t))(v86 + 32);
  v55 = v52;
  v25 = v85;
  v54(v46, v55, v85);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v46, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v46, 1, v25) == 1)
  {
LABEL_13:

    sub_1A905FD54(v46, (uint64_t *)&unk_1ED2AD360);
    return;
  }
  v54((uint64_t)v84, (char *)v46, v25);
  if ((sub_1A93F7320() & 1) == 0)
  {
    v87 = v30;
    v9 = &selRef_updatedProperties;
    v56 = objc_msgSend(v18, sel_filePath);
    sub_1A93F8040();

    v57 = (uint64_t)v82;
    sub_1A93F7248();
    swift_bridgeObjectRelease();
    v58 = v79;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v79[6])(v57, 1, v8) != 1)
    {
      v74 = v81;
      ((void (*)(char *, uint64_t, uint64_t))v58[4])(v81, v57, v8);
      v75 = v88;
      v76 = *(void **)(v88 + OBJC_IVAR___PFFairPlayMigrationController_invalidationManager);
      v77 = (void *)sub_1A93F71A0();
      objc_msgSend(v76, sel_markKeyForInvalidationAt_shouldRemove_, v77, 1);

      ((void (*)(char *, uint64_t))v58[1])(v74, v8);
LABEL_21:
      v78 = v18;
      sub_1A933539C(a1, v78, v89, a3, v75);

      v30 = v87;
      goto LABEL_22;
    }
    sub_1A905FD54(v57, &qword_1ED2AD3D0);
    if (qword_1ED2A8890 == -1)
    {
LABEL_16:
      v59 = sub_1A93F7698();
      __swift_project_value_buffer(v59, (uint64_t)qword_1ED2A8878);
      v60 = v18;
      v61 = sub_1A93F7674();
      v62 = sub_1A93F879C();
      v63 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        v64 = swift_slowAlloc();
        LODWORD(v82) = v63;
        v65 = v64;
        v83 = (char *)swift_slowAlloc();
        v91 = v83;
        *(_DWORD *)v65 = 136315651;
        v90 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, (uint64_t *)&v91);
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 12) = 2160;
        v90 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 22) = 2081;
        v81 = (char *)(v65 + 24);
        v66 = a1;
        v67 = v18;
        v68 = a3;
        v69 = objc_msgSend(v60, v9[83]);
        v70 = sub_1A93F8040();
        v72 = v71;

        a3 = v68;
        v18 = v67;
        a1 = v66;
        v90 = sub_1A906436C(v70, v72, (uint64_t *)&v91);
        v25 = v85;
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v61, (os_log_type_t)v82, "%s Unable to invalidate key, invalid key store path %{private,mask.hash}s.", (uint8_t *)v65, 0x20u);
        v73 = v83;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v73, -1, -1);
        MEMORY[0x1AF41411C](v65, -1, -1);

      }
      else
      {

      }
      v75 = v88;
      goto LABEL_21;
    }
LABEL_24:
    swift_once();
    goto LABEL_16;
  }
  sub_1A933298C(*a1, (uint64_t)v89, a3);
LABEL_22:

  (*(void (**)(char *, uint64_t))(v86 + 8))(v84, v25);
}

uint64_t sub_1A9331054(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void (*v44)(_QWORD, double);
  void (*v45)(_QWORD *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void *v88;
  id v89;
  id v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  void (*v94)(void);
  char *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t *v105;
  unint64_t v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  int *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  id v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t *v127;
  NSObject *v128;
  os_log_type_t v129;
  _BOOL4 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  char *v143;
  void *v144;
  id v145;
  uint64_t v146;
  _QWORD *v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t (*v156)(_QWORD *, uint64_t);
  uint64_t v157;
  unsigned int v158;
  void (*v159)(_QWORD *, _QWORD, uint64_t);
  id v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  _QWORD *v163;
  char *v164;
  char *v165;
  void (*v166)(void);
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  void (*v184)(uint64_t);
  uint64_t v185;
  uint64_t aBlock[6];
  uint64_t v187;

  v184 = a2;
  v185 = a3;
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFA0);
  MEMORY[0x1E0C80A78](v182);
  v183 = (uint64_t *)((char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = type metadata accessor for FairPlayMigrationData(0);
  v161 = *(_QWORD *)(v173 - 8);
  v6 = *(_QWORD *)(v161 + 64);
  MEMORY[0x1E0C80A78](v173);
  v181 = (uint64_t)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v180 = (uint64_t *)((char *)&v154 - v8);
  MEMORY[0x1E0C80A78](v9);
  v171 = (uint64_t *)((char *)&v154 - v10);
  MEMORY[0x1E0C80A78](v11);
  v166 = (void (*)(void))((char *)&v154 - v12);
  MEMORY[0x1E0C80A78](v13);
  v162 = (void (*)(char *, char *, uint64_t))((char *)&v154 - v14);
  MEMORY[0x1E0C80A78](v15);
  v163 = (uint64_t *)((char *)&v154 - v16);
  MEMORY[0x1E0C80A78](v17);
  v169 = (uint64_t)&v154 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v19);
  v170 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F738C();
  v22 = *(_QWORD *)(v21 - 8);
  v174 = v21;
  v175 = v22;
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](v21);
  v164 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v165 = (char *)&v154 - v25;
  MEMORY[0x1E0C80A78](v26);
  v172 = (char *)&v154 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1A93F726C();
  v32 = *(_QWORD *)(v31 - 8);
  v178 = v31;
  v179 = v32;
  v33 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v31);
  v167 = (char *)&v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v168 = (char *)&v154 - v35;
  MEMORY[0x1E0C80A78](v36);
  v177 = (char *)&v154 - v37;
  v38 = sub_1A93F7E18();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (uint64_t *)((char *)&v154 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = v3;
  v43 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v42 = v43;
  v44 = *(void (**)(_QWORD, double))(v39 + 104);
  v158 = *MEMORY[0x1E0DEF740];
  v159 = (void (*)(_QWORD *, _QWORD, uint64_t))v44;
  v44(v42, v40);
  v160 = v43;
  LOBYTE(v43) = sub_1A93F7E3C();
  v45 = *(void (**)(_QWORD *, uint64_t))(v39 + 8);
  v45(v42, v38);
  if ((v43 & 1) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (!*(_QWORD *)(a1 + 32))
  {
LABEL_13:
    if (qword_1ED2A8890 == -1)
    {
LABEL_14:
      v60 = sub_1A93F7698();
      __swift_project_value_buffer(v60, (uint64_t)qword_1ED2A8878);
      v61 = v180;
      sub_1A9064630(a1, (uint64_t)v180, type metadata accessor for FairPlayMigrationData);
      v62 = v181;
      sub_1A9064630(a1, v181, type metadata accessor for FairPlayMigrationData);
      v63 = sub_1A93F7674();
      v64 = sub_1A93F879C();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc();
        v66 = swift_slowAlloc();
        aBlock[0] = v66;
        *(_DWORD *)v65 = 136315907;
        v187 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 12) = 2160;
        v187 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 22) = 2049;
        v67 = *v61;
        sub_1A9064714((uint64_t)v61, type metadata accessor for FairPlayMigrationData);
        v187 = v67;
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 32) = 2082;
        if (*(_QWORD *)(v62 + 32))
        {
          v68 = *(_QWORD *)(v62 + 24);
          v69 = *(_QWORD *)(v62 + 32);
        }
        else
        {
          v69 = 0xE300000000000000;
          v68 = 7104878;
        }
        swift_bridgeObjectRetain();
        v187 = sub_1A906436C(v68, v69, aBlock);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A9064714(v62, type metadata accessor for FairPlayMigrationData);
        _os_log_impl(&dword_1A904E000, v63, v64, "%s Unable to migrate %{private,mask.hash}lld, no or invalid asset url (%{public}s) found.", (uint8_t *)v65, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v66, -1, -1);
        MEMORY[0x1AF41411C](v65, -1, -1);
      }
      else
      {
        sub_1A9064714((uint64_t)v61, type metadata accessor for FairPlayMigrationData);
        sub_1A9064714(v62, type metadata accessor for FairPlayMigrationData);
      }

      v70 = (uint64_t)v183;
      *v183 = 4;
      *(_BYTE *)(v70 + 8) = 2;
      swift_storeEnumTagMultiPayload();
      v184(v70);
      return sub_1A905FD54(v70, &qword_1EEABDFA0);
    }
LABEL_43:
    swift_once();
    goto LABEL_14;
  }
  v176 = a1;
  sub_1A93F7248();
  v47 = v178;
  v46 = v179;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v30, 1, v178) == 1)
  {
    sub_1A905FD54((uint64_t)v30, &qword_1ED2AD3D0);
LABEL_12:
    a1 = v176;
    goto LABEL_13;
  }
  v156 = (uint64_t (*)(_QWORD *, uint64_t))v45;
  v48 = v177;
  v155 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v155(v177, v30, v47);
  if ((sub_1A93F7140() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
    goto LABEL_12;
  }
  v49 = *(_QWORD *)(v176 + 16);
  if (v49 >> 60 == 15)
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v50 = sub_1A93F7698();
    __swift_project_value_buffer(v50, (uint64_t)qword_1ED2A8878);
    v51 = v171;
    sub_1A9064630(v176, (uint64_t)v171, type metadata accessor for FairPlayMigrationData);
    v52 = sub_1A93F7674();
    v53 = sub_1A93F879C();
    v54 = os_log_type_enabled(v52, v53);
    v56 = v178;
    v55 = v179;
    if (v54)
    {
      v57 = swift_slowAlloc();
      v58 = swift_slowAlloc();
      aBlock[0] = v58;
      *(_DWORD *)v57 = 136315651;
      v187 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
      sub_1A93F8AA8();
      *(_WORD *)(v57 + 12) = 2160;
      v187 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v57 + 22) = 2049;
      v59 = *v51;
      sub_1A9064714((uint64_t)v51, type metadata accessor for FairPlayMigrationData);
      v187 = v59;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v52, v53, "%s Unable to migrate %{private,mask.hash}lld, no legacy key found.", (uint8_t *)v57, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v58, -1, -1);
      MEMORY[0x1AF41411C](v57, -1, -1);
    }
    else
    {
      sub_1A9064714((uint64_t)v51, type metadata accessor for FairPlayMigrationData);
    }

    v86 = v177;
    v87 = (uint64_t)v183;
    *v183 = 7;
    *(_BYTE *)(v87 + 8) = 2;
    swift_storeEnumTagMultiPayload();
    v184(v87);
    sub_1A905FD54(v87, &qword_1EEABDFA0);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v86, v56);
  }
  else
  {
    v72 = *(_QWORD *)(v176 + 8);
    v73 = (uint64_t)v170;
    sub_1A9062170(v176 + *(int *)(v173 + 28), (uint64_t)v170, (uint64_t *)&unk_1ED2AD360);
    v75 = v174;
    v74 = v175;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v73, 1, v174) == 1)
    {
      sub_1A90D8068(v72, v49);
      sub_1A905FD54(v73, (uint64_t *)&unk_1ED2AD360);
      if (qword_1ED2A8890 != -1)
        swift_once();
      v76 = sub_1A93F7698();
      __swift_project_value_buffer(v76, (uint64_t)qword_1ED2A8878);
      v77 = (uint64_t *)v166;
      sub_1A9064630(v176, (uint64_t)v166, type metadata accessor for FairPlayMigrationData);
      v78 = sub_1A93F7674();
      v79 = sub_1A93F879C();
      v80 = os_log_type_enabled(v78, v79);
      v81 = v179;
      if (v80)
      {
        v82 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        aBlock[0] = v83;
        *(_DWORD *)v82 = 136315651;
        v187 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v82 + 12) = 2160;
        v187 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v82 + 22) = 2049;
        v84 = v72;
        v85 = *v77;
        sub_1A9064714((uint64_t)v77, type metadata accessor for FairPlayMigrationData);
        v187 = v85;
        v72 = v84;
        v81 = v179;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v78, v79, "%s Unable to migrate %{private,mask.hash}lld, no legacy key renewal data found.", (uint8_t *)v82, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v83, -1, -1);
        MEMORY[0x1AF41411C](v82, -1, -1);
      }
      else
      {
        sub_1A9064714((uint64_t)v77, type metadata accessor for FairPlayMigrationData);
      }

      v136 = v177;
      v137 = (uint64_t)v183;
      *v183 = 8;
      *(_BYTE *)(v137 + 8) = 2;
      swift_storeEnumTagMultiPayload();
      v184(v137);
      sub_1A9069F9C(v72, v49);
      sub_1A905FD54(v137, &qword_1EEABDFA0);
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v136, v178);
    }
    else
    {
      v180 = *(uint64_t **)(v74 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v180)(v172, v73, v75);
      v88 = (void *)objc_opt_self();
      v181 = v72;
      sub_1A90D8068(v72, v49);
      v89 = objc_msgSend(v88, sel_ams_sharedAccountStore);
      v90 = objc_msgSend(v89, sel_ams_activeiTunesAccount);

      if (v90
        && (v91 = (char *)objc_msgSend(v90, sel_ams_DSID), v90, v91))
      {
        sub_1A9064630(v176, v169, type metadata accessor for FairPlayMigrationData);
        v170 = v91;
        v92 = v178;
        v93 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
        v93(v168, v177, v178);
        v94 = *(void (**)(void))(v175 + 16);
        v171 = (uint64_t *)v49;
        v95 = v165;
        v94();
        sub_1A9064630(v169, (uint64_t)v163, type metadata accessor for FairPlayMigrationData);
        v162 = v93;
        v93(v167, v168, v92);
        v166 = v94;
        ((void (*)(char *, char *, uint64_t))v94)(v164, v95, v75);
        v96 = v181;
        v97 = (*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
        v98 = (v6 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
        v99 = (v98 + 15) & 0xFFFFFFFFFFFFFFF8;
        v100 = (*(unsigned __int8 *)(v179 + 80) + v99 + 16) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
        v101 = (v33 + *(unsigned __int8 *)(v175 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
        v102 = swift_allocObject();
        v103 = v185;
        *(_QWORD *)(v102 + 16) = v184;
        *(_QWORD *)(v102 + 24) = v103;
        sub_1A9116174(v169, v102 + v97, type metadata accessor for FairPlayMigrationData);
        v104 = v170;
        *(_QWORD *)(v102 + v98) = v170;
        v105 = (uint64_t *)(v102 + v99);
        v106 = (unint64_t)v171;
        *v105 = v96;
        v105[1] = v106;
        v155((char *)(v102 + v100), v168, v178);
        v169 = v102;
        ((void (*)(unint64_t, char *, uint64_t))v180)(v102 + v101, v165, v174);
        v107 = v160;
        *v42 = v160;
        v159(v42, v158, v38);
        sub_1A906A3DC(v96, v106);
        swift_retain();
        v108 = v104;
        v109 = v107;
        sub_1A906A3DC(v96, v106);
        swift_retain();
        v110 = v108;
        LOBYTE(v108) = sub_1A93F7E3C();
        result = v156(v42, v38);
        if ((v108 & 1) != 0)
        {
          v111 = (uint64_t *)(v176 + *(int *)(v173 + 32));
          v112 = v111[1];
          if (v112)
          {
            v113 = *v111;
            v114 = v163;
            v115 = *v163;
            v116 = (int *)type metadata accessor for FairPlayMigrationData.ValidatedData(0);
            v117 = v183;
            v162((char *)v183 + v116[7], v167, v178);
            v118 = v164;
            v119 = v174;
            ((void (*)(char *, char *, uint64_t))v166)((char *)v117 + v116[8], v164, v174);
            *v117 = v115;
            v117[1] = v110;
            v120 = v181;
            v117[2] = v181;
            v117[3] = v106;
            v121 = (_QWORD *)((char *)v117 + v116[9]);
            *v121 = v113;
            v121[1] = v112;
            swift_storeEnumTagMultiPayload();
            sub_1A906A3DC(v120, v106);
            v122 = v110;
            swift_bridgeObjectRetain();
            v184((uint64_t)v117);
            sub_1A905FD54((uint64_t)v117, &qword_1EEABDFA0);
            swift_release();
            swift_release();
            sub_1A9064714((uint64_t)v114, type metadata accessor for FairPlayMigrationData);

            sub_1A9069F9C(v120, v106);
            v123 = v178;
            v124 = *(void (**)(char *, uint64_t))(v179 + 8);
            v124(v167, v178);
            v125 = *(void (**)(char *, uint64_t))(v175 + 8);
            v125(v118, v119);
            sub_1A9069F9C(v120, v106);

            v125(v172, v119);
            return ((uint64_t (*)(char *, uint64_t))v124)(v177, v123);
          }
          else
          {
            v141 = *(void **)(v157 + OBJC_IVAR___PFFairPlayMigrationController_metadataLoader);
            v142 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
            v143 = v177;
            v144 = (void *)sub_1A93F71A0();
            v145 = objc_msgSend(v142, sel_initWithURL_options_, v144, 0);

            v146 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v147 = (_QWORD *)swift_allocObject();
            v147[2] = v146;
            v147[3] = sub_1A9337398;
            v147[4] = v169;
            aBlock[4] = (uint64_t)sub_1A9337494;
            aBlock[5] = (uint64_t)v147;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1A926CB6C;
            aBlock[3] = (uint64_t)&block_descriptor_119;
            v148 = _Block_copy(aBlock);
            swift_retain();
            swift_release();
            objc_msgSend(v141, sel_keyIdentifiersFrom_completion_, v145, v148);
            _Block_release(v148);
            swift_release();
            swift_release();

            sub_1A9064714((uint64_t)v163, type metadata accessor for FairPlayMigrationData);
            v149 = v181;
            sub_1A9069F9C(v181, v106);
            v150 = v178;
            v151 = *(void (**)(char *, uint64_t))(v179 + 8);
            v151(v167, v178);
            v152 = v174;
            v153 = *(void (**)(char *, uint64_t))(v175 + 8);
            v153(v164, v174);
            sub_1A9069F9C(v149, v106);

            v153(v172, v152);
            return ((uint64_t (*)(char *, uint64_t))v151)(v143, v150);
          }
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        if (qword_1ED2A8890 != -1)
          swift_once();
        v126 = sub_1A93F7698();
        __swift_project_value_buffer(v126, (uint64_t)qword_1ED2A8878);
        v127 = (uint64_t *)v162;
        sub_1A9064630(v176, (uint64_t)v162, type metadata accessor for FairPlayMigrationData);
        v128 = sub_1A93F7674();
        v129 = sub_1A93F879C();
        v130 = os_log_type_enabled(v128, v129);
        v131 = v179;
        if (v130)
        {
          v132 = swift_slowAlloc();
          v133 = swift_slowAlloc();
          aBlock[0] = v133;
          *(_DWORD *)v132 = 136315651;
          v187 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
          sub_1A93F8AA8();
          *(_WORD *)(v132 + 12) = 2160;
          v187 = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v132 + 22) = 2049;
          v134 = (uint64_t)v127;
          v135 = *v127;
          sub_1A9064714(v134, type metadata accessor for FairPlayMigrationData);
          v187 = v135;
          sub_1A93F8AA8();
          _os_log_impl(&dword_1A904E000, v128, v129, "%s Unable to migrate %{private,mask.hash}lld, no DSID found.", (uint8_t *)v132, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v133, -1, -1);
          MEMORY[0x1AF41411C](v132, -1, -1);
        }
        else
        {
          sub_1A9064714((uint64_t)v127, type metadata accessor for FairPlayMigrationData);
        }

        v138 = v177;
        v139 = v181;
        v140 = (uint64_t)v183;
        *v183 = 1;
        *(_BYTE *)(v140 + 8) = 2;
        swift_storeEnumTagMultiPayload();
        v184(v140);
        sub_1A9069F9C(v139, v49);
        sub_1A905FD54(v140, &qword_1EEABDFA0);
        (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v174);
        return (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v138, v178);
      }
    }
  }
  return result;
}

uint64_t sub_1A933242C(void *a1, uint64_t a2, char a3, void (*a4)(_QWORD), uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(_QWORD);

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABDFA0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *(_QWORD *)v20 = a1;
    v20[8] = a2;
    swift_storeEnumTagMultiPayload();
    sub_1A92411AC(a1, a2);
  }
  else
  {
    v35 = a11;
    v36 = a9;
    v34 = *a6;
    v21 = (int *)type metadata accessor for FairPlayMigrationData.ValidatedData(0);
    v22 = v21[7];
    v37 = a4;
    v23 = &v20[v22];
    v24 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, a10, v24);
    v25 = &v20[v21[8]];
    v26 = sub_1A93F738C();
    v27 = v25;
    a4 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, v35, v26);
    *(_QWORD *)v20 = v34;
    *((_QWORD *)v20 + 1) = a7;
    v28 = a7;
    *((_QWORD *)v20 + 2) = a8;
    v29 = a8;
    v30 = v36;
    *((_QWORD *)v20 + 3) = v36;
    v31 = &v20[v21[9]];
    *(_QWORD *)v31 = a1;
    *((_QWORD *)v31 + 1) = a2;
    swift_storeEnumTagMultiPayload();
    sub_1A93374BC(a1, a2, 0);
    v32 = v28;
    sub_1A90D8068(v29, v30);
  }
  a4(v20);
  return sub_1A905FD54((uint64_t)v20, &qword_1EEABDFA0);
}

uint64_t sub_1A93325E4(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v12 = 0;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = &v12;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A9337678;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1A933770C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9276E2C;
  aBlock[3] = &block_descriptor_138;
  v7 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_enumerateKeyEntriesUsingBlock_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

id sub_1A9332728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_1A93F7E18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v10 = v9;
  LOBYTE(v9) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v11 = sub_1A93F7698();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8878);
  v12 = sub_1A93F7674();
  v13 = sub_1A93F8790();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v18 = v15;
    *(_DWORD *)v14 = 136315651;
    v17 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v18);
    sub_1A93F8AA8();
    *(_WORD *)(v14 + 12) = 2160;
    v17 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v14 + 22) = 2049;
    v17 = a1;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v12, v13, "%s Removing legacy key for %{private,mask.hash}lld", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v15, -1, -1);
    MEMORY[0x1AF41411C](v14, -1, -1);
  }

  return objc_msgSend(*(id *)(v2 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage), sel_removeKeyDataForStoreTrackID_, a1);
}

uint64_t sub_1A933298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = sub_1A93F7E18();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v4 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9, v11);
  v15 = v14;
  LOBYTE(v14) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) != 0)
  {
    if (qword_1ED2A8890 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v16 = sub_1A93F7698();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A8878);
  v17 = sub_1A93F7674();
  v18 = sub_1A93F8790();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v28 = ObjectType;
    v21 = a2;
    v22 = v20;
    v30 = v20;
    *(_DWORD *)v19 = 136315651;
    v29 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, &v30);
    sub_1A93F8AA8();
    *(_WORD *)(v19 + 12) = 2160;
    v29 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v19 + 22) = 2049;
    v29 = a1;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v17, v18, "%s Invalidating legacy key for %{private,mask.hash}lld", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    v23 = v22;
    a2 = v21;
    ObjectType = v28;
    MEMORY[0x1AF41411C](v23, -1, -1);
    MEMORY[0x1AF41411C](v19, -1, -1);
  }

  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v24;
  v25[3] = a2;
  v25[4] = a3;
  v25[5] = ObjectType;
  swift_retain();
  swift_retain();
  sub_1A9267134(a1, (uint64_t)sub_1A9336E34, (uint64_t)v25);
  swift_release();
  return swift_release();
}

uint64_t sub_1A9332C84(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint8_t *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[7];

  v8 = sub_1A93F7D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x1AF41420C](a2 + 16);
  if (!v16)
    return a3(0, 258);
  v17 = (void *)v16;
  v28 = a3;
  v29 = v13;
  v30 = v12;
  if (*(_QWORD *)(a1 + 16))
  {
    v27 = v9;
    if (qword_1ED2A8890 != -1)
      swift_once();
    v18 = sub_1A93F7698();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A8878);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F879C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v26 = v21 + 4;
      v31 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v19, v20, "%s Unable to invalidate and remove legacy FairPlay key.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v22, -1, -1);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    v9 = v27;
  }
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v28;
  *(_QWORD *)(v23 + 24) = a4;
  aBlock[4] = (uint64_t)sub_1A9336E64;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_60;
  v24 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);

  return swift_release();
}

uint64_t sub_1A9333008(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD v21[3];
  _QWORD aBlock[6];

  v8 = sub_1A93F7D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x1AF41420C](a2 + 16);
  if (!v16)
    return a3(0, 2, 1);
  v17 = (void *)v16;
  v21[1] = *(_QWORD *)(v16 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a3;
  v18[4] = a4;
  aBlock[4] = sub_1A93374B0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_125;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A93F7D88();
  v21[2] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  v21[0] = v12;
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, _QWORD))(v13 + 8))(v15, v21[0]);

  return swift_release();
}

uint64_t sub_1A933324C(_QWORD *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  if (!a1 || !a1[2])
    return a2(6, 2, 1);
  v3 = a1[4];
  v4 = a1[5];
  swift_bridgeObjectRetain();
  a2(v3, v4, 0);
  return swift_bridgeObjectRelease();
}

void sub_1A93332C0(unint64_t a1, char a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  void (**v12)(_QWORD, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  dispatch_group_t v25;
  objc_class *v26;
  void *v27;
  objc_class *v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD **v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  id v56;
  _QWORD *v57;
  objc_class *v58;
  uint64_t v59;
  void *v60;
  char *v61;
  char *v62;
  dispatch_group_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  _QWORD **v66;
  char *v67;
  void (**v68)(_QWORD, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  dispatch_group_t v75;
  objc_class *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t aBlock[6];

  v70 = a6;
  v11 = sub_1A93F7D58();
  v12 = *(void (***)(_QWORD, uint64_t))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v72 = *(_QWORD *)(v15 - 8);
  v73 = v15;
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v78 = (char *)MEMORY[0x1AF41420C](a3 + 16);
  if (v78)
  {
    if ((a2 & 1) != 0)
    {
      v30 = (id)a1;
      if (qword_1ED2A8890 != -1)
        swift_once();
      v31 = sub_1A93F7698();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED2A8878);
      v32 = (id)a1;
      v33 = (id)a1;
      v34 = sub_1A93F7674();
      v35 = sub_1A93F879C();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = a4;
        v37 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        aBlock[0] = v38;
        *(_DWORD *)v37 = 136315394;
        v79 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v37 + 12) = 2082;
        swift_getErrorValue();
        v39 = sub_1A93F927C();
        v79 = sub_1A906436C(v39, v40, aBlock);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        sub_1A909CFC0((id)a1, 1);
        sub_1A909CFC0((id)a1, 1);
        _os_log_impl(&dword_1A904E000, v34, v35, "%s Unable to rollback, no episode data found with error %{public}s.", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v38, -1, -1);
        v41 = v37;
        a4 = v36;
        MEMORY[0x1AF41411C](v41, -1, -1);
      }
      else
      {
        sub_1A909CFC0((id)a1, 1);
        sub_1A909CFC0((id)a1, 1);
      }

      v42 = (id)a1;
      a4(a1, 1, 1);

      sub_1A909CFC0((id)a1, 1);
      sub_1A909CFC0((id)a1, 1);
    }
    else
    {
      v69 = a5;
      swift_bridgeObjectRetain();
      v75 = dispatch_group_create();
      v17 = swift_allocObject();
      v18 = MEMORY[0x1E0DEE9D8];
      v77 = v17;
      *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9D8];
      v19 = swift_allocObject();
      v76 = (objc_class *)v19;
      *(_QWORD *)(v19 + 16) = v18;
      v66 = (_QWORD **)(v19 + 16);
      if (a1 >> 62)
      {
LABEL_36:
        swift_bridgeObjectRetain();
        v20 = sub_1A93F8E5C();
        sub_1A909CFC0((id)a1, 0);
      }
      else
      {
        v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v67 = v14;
      v68 = v12;
      if (v20)
      {
        v64 = v11;
        v65 = a4;
        v74 = a1 & 0xC000000000000001;
        v11 = 4;
        v21 = v77;
        while (1)
        {
          a4 = (void (*)(_QWORD, _QWORD, _QWORD))(v11 - 4);
          if (v74)
            v22 = (char *)MEMORY[0x1AF4129DC](v11 - 4, a1);
          else
            v22 = (char *)*(id *)(a1 + 8 * v11);
          v14 = v22;
          v23 = v11 - 3;
          if (__OFADD__(a4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (!*(_QWORD *)&v22[OBJC_IVAR___PFFairPlayAsset_keyStore])
            break;
          objc_opt_self();
          v24 = swift_dynamicCastObjCClass();
          if (!v24)
            break;
          v12 = (void (**)(_QWORD, uint64_t))v24;
          swift_unknownObjectRetain();
          v25 = v75;
          dispatch_group_enter(v75);
          v26 = v14;
          swift_retain();
          v27 = (void *)a1;
          v28 = v76;
          swift_retain();
          v29 = v25;
          sub_1A9335D20(v12, (uint64_t)v78, v21, v26, v28, v29);
          swift_unknownObjectRelease();

          a1 = (unint64_t)v27;
          swift_release();
          swift_release();

          ++v11;
          if (v23 == v20)
          {
            sub_1A909CFC0(v27, 0);
            a4 = v65;
            v11 = v64;
            goto LABEL_27;
          }
        }
        sub_1A909CFC0((id)a1, 0);
        if (qword_1ED2A8890 != -1)
          swift_once();
        v43 = sub_1A93F7698();
        __swift_project_value_buffer(v43, (uint64_t)qword_1ED2A8878);
        v44 = v14;
        v45 = sub_1A93F7674();
        v46 = sub_1A93F879C();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          aBlock[0] = v48;
          *(_DWORD *)v47 = 136315651;
          v79 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
          sub_1A93F8AA8();
          *(_WORD *)(v47 + 12) = 2160;
          v79 = 1752392040;
          sub_1A93F8AA8();
          *(_WORD *)(v47 + 22) = 2049;
          v79 = *(_QWORD *)&v44[OBJC_IVAR___PFFairPlayAsset_adamID];
          sub_1A93F8AA8();

          _os_log_impl(&dword_1A904E000, v45, v46, "%s Unable to migrate %{private,mask.hash}lld, no key store found.", (uint8_t *)v47, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v48, -1, -1);
          MEMORY[0x1AF41411C](v47, -1, -1);

        }
        else
        {

        }
        a4 = v65;
        v50 = *(_QWORD *)&v44[OBJC_IVAR___PFFairPlayAsset_adamID];
        v51 = v66;
        swift_beginAccess();
        v52 = *v51;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v51 = v52;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v52 = sub_1A9118AF8(0, v52[2] + 1, 1, v52);
          *v51 = v52;
        }
        v49 = v70;
        v55 = v52[2];
        v54 = v52[3];
        if (v55 >= v54 >> 1)
        {
          v52 = sub_1A9118AF8((_QWORD *)(v54 > 1), v55 + 1, 1, v52);
          *v51 = v52;
        }
        v52[2] = v55 + 1;
        v52[v55 + 4] = v50;
        swift_endAccess();

        v11 = v64;
      }
      else
      {
        sub_1A909CFC0((id)a1, 0);
LABEL_27:
        v49 = v70;
      }
      v56 = v78;
      v74 = *(_QWORD *)&v78[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
      v57 = (_QWORD *)swift_allocObject();
      v58 = v76;
      v57[2] = v77;
      v57[3] = v58;
      v59 = v69;
      v57[4] = a4;
      v57[5] = v59;
      v57[6] = v49;
      aBlock[4] = (uint64_t)sub_1A9335D14;
      aBlock[5] = (uint64_t)v57;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1A908A91C;
      aBlock[3] = (uint64_t)&block_descriptor_34_0;
      v60 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      v61 = v71;
      sub_1A93F7D88();
      v79 = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
      sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
      v62 = v67;
      sub_1A93F8B5C();
      v63 = v75;
      sub_1A93F87FC();
      _Block_release(v60);

      ((void (**)(char *, uint64_t))v68)[1](v62, v11);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v61, v73);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    a4(0, 2, 1);
  }
}

void sub_1A9333BE8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v7;
  _QWORD **v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;

  v7 = *(_QWORD *)(a4 + OBJC_IVAR___PFFairPlayAsset_adamID);
  if ((a2 & 0x100) != 0)
    v8 = (_QWORD **)(a5 + 16);
  else
    v8 = (_QWORD **)(a3 + 16);
  swift_beginAccess();
  v9 = *v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_1A9118AF8(0, v9[2] + 1, 1, v9);
    *v8 = v9;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    v9 = sub_1A9118AF8((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    *v8 = v9;
  }
  v9[2] = v12 + 1;
  v9[v12 + 4] = v7;
  swift_endAccess();
  dispatch_group_leave(a6);
}

uint64_t sub_1A9333CD8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4, uint64_t a5, const char *a6)
{
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29[3];

  if (qword_1ED2A8890 != -1)
    swift_once();
  v10 = (uint64_t *)(a1 + 16);
  v11 = (uint64_t *)(a2 + 16);
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8878);
  swift_retain_n();
  swift_retain_n();
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)v15 = 136316163;
    sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v29);
    sub_1A93F8AA8();
    *(_WORD *)(v15 + 12) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v15 + 22) = 2081;
    swift_beginAccess();
    v16 = swift_bridgeObjectRetain();
    v28 = a3;
    v17 = MEMORY[0x1AF412034](v16, MEMORY[0x1E0DEDC60]);
    v19 = v18;
    v11 = (uint64_t *)(a2 + 16);
    v10 = (uint64_t *)(a1 + 16);
    swift_bridgeObjectRelease();
    sub_1A906436C(v17, v19, v29);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2160;
    sub_1A93F8AA8();
    *(_WORD *)(v15 + 42) = 2081;
    swift_beginAccess();
    v20 = swift_bridgeObjectRetain();
    v21 = MEMORY[0x1AF412034](v20, MEMORY[0x1E0DEDC60]);
    v23 = v22;
    a3 = v28;
    swift_bridgeObjectRelease();
    sub_1A906436C(v21, v23, v29);
    sub_1A93F8AA8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v13, v14, a6, (uint8_t *)v15, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v27, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  swift_beginAccess();
  v24 = *v10;
  swift_beginAccess();
  v25 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v24, v25, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A9334084(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t), uint64_t a5, void *a6, void *a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v11 = a3 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1AF41420C](v11);
  if (v12)
  {
    v13 = (void *)v12;
    sub_1A9334114(a6, a7, a4, a5);

  }
  else
  {
    a4(0, 258);
  }
}

uint64_t sub_1A9334114(void *a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  unint64_t v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  void *v29;
  id v30;
  id v31;
  _QWORD *v32;
  void (*v33)(_QWORD, _QWORD);
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  void (*v80)(_QWORD, _QWORD);
  uint64_t v81;
  uint64_t aBlock[7];
  uint64_t v83;

  v5 = v4;
  v80 = a3;
  v81 = a4;
  ObjectType = swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F738C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v70 - v18;
  v20 = objc_msgSend(a1, sel_adamID, v17);
  if (v20)
  {
    v21 = v20;
    v79 = objc_msgSend(v20, sel_integerValue);

    v22 = objc_msgSend(a1, sel_keyData);
    if (v22)
    {
      v23 = v22;
      v77 = sub_1A93F72B4();
      v78 = v24;

      v25 = objc_msgSend(a1, sel_renewalDate);
      if (v25)
      {
        v26 = v25;
        sub_1A93F7368();

        v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v27(v11, v15, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v27(v19, v11, v12);
          v28 = objc_msgSend(a1, sel_accountDSID);
          if (v28)
          {
            v29 = v28;
            v76 = *(id *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage);
            v30 = objc_msgSend(a1, sel_identifier);
            if (!v30)
            {
              sub_1A93F8040();
              v30 = (id)sub_1A93F8010();
              swift_bridgeObjectRelease();
            }
            v75 = sub_1A93F729C();
            v74 = sub_1A93F7314();
            v31 = objc_msgSend(v29, sel_longLongValue);
            v72 = *(_QWORD *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
            v73 = v31;
            v32 = (_QWORD *)swift_allocObject();
            v32[2] = a2;
            v32[3] = a1;
            v71 = v29;
            v34 = v79;
            v33 = v80;
            v32[4] = v79;
            v32[5] = v33;
            v32[6] = v81;
            v32[7] = ObjectType;
            aBlock[4] = (uint64_t)sub_1A9336EC8;
            aBlock[5] = (uint64_t)v32;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1A9240F4C;
            aBlock[3] = (uint64_t)&block_descriptor_66_0;
            v35 = _Block_copy(aBlock);
            v36 = a2;
            v37 = a1;
            swift_retain();
            swift_release();
            v38 = (void *)v75;
            v39 = v34;
            v40 = (void *)v74;
            objc_msgSend(v76, sel_saveKeyDataWithKeyIdentifier_storeTrackID_keyData_renewalDate_dsid_responseQueue_completion_, v30, v39, v75, v74, v73, v72, v35);
            sub_1A905F180(v77, v78);
            _Block_release(v35);

          }
          else
          {
            if (qword_1ED2A8890 != -1)
              swift_once();
            v64 = sub_1A93F7698();
            __swift_project_value_buffer(v64, (uint64_t)qword_1ED2A8878);
            v65 = sub_1A93F7674();
            v66 = sub_1A93F879C();
            if (os_log_type_enabled(v65, v66))
            {
              v67 = swift_slowAlloc();
              v68 = swift_slowAlloc();
              aBlock[0] = v68;
              *(_DWORD *)v67 = 136315651;
              v83 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
              sub_1A93F8AA8();
              *(_WORD *)(v67 + 12) = 2160;
              v83 = 1752392040;
              sub_1A93F8AA8();
              *(_WORD *)(v67 + 22) = 2049;
              v83 = (uint64_t)v79;
              sub_1A93F8AA8();
              _os_log_impl(&dword_1A904E000, v65, v66, "%s Unable to rollback %{private,mask.hash}ld, no DSID found.", (uint8_t *)v67, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x1AF41411C](v68, -1, -1);
              MEMORY[0x1AF41411C](v67, -1, -1);
            }

            v69 = v78;
            v80(1, 258);
            sub_1A905F180(v77, v69);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }
      sub_1A905FD54((uint64_t)v11, (uint64_t *)&unk_1ED2AD360);
      if (qword_1ED2A8890 != -1)
        swift_once();
      v57 = sub_1A93F7698();
      __swift_project_value_buffer(v57, (uint64_t)qword_1ED2A8878);
      v58 = sub_1A93F7674();
      v59 = sub_1A93F879C();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        v61 = swift_slowAlloc();
        aBlock[0] = v61;
        *(_DWORD *)v60 = 136315651;
        v83 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v60 + 12) = 2160;
        v83 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v60 + 22) = 2049;
        v83 = (uint64_t)v79;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v58, v59, "%s Unable to rollback %{private,mask.hash}ld, no renewal date found.", (uint8_t *)v60, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v61, -1, -1);
        MEMORY[0x1AF41411C](v60, -1, -1);
      }

      v63 = v77;
      v62 = v78;
      v80(5, 258);
      return sub_1A905F180(v63, v62);
    }
    else
    {
      if (qword_1ED2A8890 != -1)
        swift_once();
      v51 = sub_1A93F7698();
      __swift_project_value_buffer(v51, (uint64_t)qword_1ED2A8878);
      v52 = sub_1A93F7674();
      v53 = sub_1A93F879C();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc();
        v55 = swift_slowAlloc();
        aBlock[0] = v55;
        *(_DWORD *)v54 = 136315651;
        v83 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v54 + 12) = 2160;
        v83 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v54 + 22) = 2049;
        v83 = (uint64_t)v79;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v52, v53, "%s Unable to rollback %{private,mask.hash}ld, no key data found.", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v55, -1, -1);
        MEMORY[0x1AF41411C](v54, -1, -1);
      }

      return ((uint64_t (*)(uint64_t, uint64_t))v80)(3, 258);
    }
  }
  else
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v41 = sub_1A93F7698();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A8878);
    v42 = a1;
    v43 = sub_1A93F7674();
    v44 = sub_1A93F879C();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      aBlock[0] = v46;
      *(_DWORD *)v45 = 136315651;
      v83 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
      sub_1A93F8AA8();
      *(_WORD *)(v45 + 12) = 2160;
      v83 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v45 + 22) = 2081;
      v47 = objc_msgSend(v42, sel_identifier);
      v48 = sub_1A93F8040();
      v50 = v49;

      v83 = sub_1A906436C(v48, v50, aBlock);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v43, v44, "%s Unable to rollback %{private,mask.hash}s, no adam ID found.", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v46, -1, -1);
      MEMORY[0x1AF41411C](v45, -1, -1);

    }
    else
    {

    }
    return ((uint64_t (*)(uint64_t, uint64_t))v80)(2, 258);
  }
}

void sub_1A9334B68(char a1, void *a2, id a3, uint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  uint64_t v26[2];

  if ((a1 & 1) != 0)
  {
    v7 = objc_msgSend(a3, sel_identifier);
    if (!v7)
    {
      sub_1A93F8040();
      v7 = (id)sub_1A93F8010();
      swift_bridgeObjectRelease();
    }
    v8 = objc_msgSend(a2, sel_removeKeyForIdentifier_, v7);

    if (v8)
    {
      v9 = qword_1ED2A8890;
      v10 = v8;
      if (v9 != -1)
        swift_once();
      v11 = sub_1A93F7698();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A8878);
      v12 = v10;
      v13 = sub_1A93F7674();
      v14 = sub_1A93F879C();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v25 = a5;
        v16 = swift_slowAlloc();
        v26[0] = v16;
        *(_DWORD *)v15 = 136315907;
        sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v26);
        sub_1A93F8AA8();
        *(_WORD *)(v15 + 12) = 2160;
        sub_1A93F8AA8();
        *(_WORD *)(v15 + 22) = 2049;
        sub_1A93F8AA8();
        *(_WORD *)(v15 + 32) = 2082;
        swift_getErrorValue();
        v17 = sub_1A93F927C();
        sub_1A906436C(v17, v18, v26);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v13, v14, "%s Unable to remove key from key store for %{private,mask.hash}ld with error %{public}s.", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        v19 = v16;
        a5 = v25;
        MEMORY[0x1AF41411C](v19, -1, -1);
        MEMORY[0x1AF41411C](v15, -1, -1);

      }
      else
      {

      }
    }
    a5(0, 0);

  }
  else
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v20 = sub_1A93F7698();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A8878);
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26[0] = v24;
      *(_DWORD *)v23 = 136315651;
      sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v26);
      sub_1A93F8AA8();
      *(_WORD *)(v23 + 12) = 2160;
      sub_1A93F8AA8();
      *(_WORD *)(v23 + 22) = 2049;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v21, v22, "%s Unable to rollback %{private,mask.hash}ld, could not save in the database.", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);
    }

    a5(0, 256);
  }
}

id FairPlayMigrationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9335078(char *a1, char *a2)
{
  return sub_1A92F99CC(*a1, *a2);
}

unint64_t sub_1A9335088()
{
  unint64_t result;

  result = qword_1EEABDF68;
  if (!qword_1EEABDF68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FairPlayVersion, &type metadata for FairPlayVersion);
    atomic_store(result, (unint64_t *)&qword_1EEABDF68);
  }
  return result;
}

uint64_t sub_1A93350CC()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9335128()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9335158()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::FairPlayVersion_optional sub_1A93351B0(Swift::String *a1)
{
  return FairPlayVersion.init(rawValue:)(*a1);
}

void sub_1A93351BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 12662;
  if (*v1)
    v2 = 12918;
  *a1 = v2;
  a1[1] = 0xE200000000000000;
}

uint64_t method lookup function for FairPlayMigrationController()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for FairPlayVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9335234 + 4 * byte_1A941E4D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9335268 + 4 * byte_1A941E4D0[v4]))();
}

uint64_t sub_1A9335268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9335270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9335278);
  return result;
}

uint64_t sub_1A9335284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A933528CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9335290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9335298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FairPlayVersion()
{
  return &type metadata for FairPlayVersion;
}

uint64_t sub_1A93352B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A93352D8(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4, void **a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  void *v16;
  id v17;

  v10 = objc_msgSend(a1, sel_identifier);
  v11 = sub_1A93F8040();
  v13 = v12;

  if (v11 == a3 && v13 == a4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_8:
    v16 = *a5;
    *a5 = a1;
    v17 = a1;

    *a2 = 1;
  }
}

void sub_1A933539C(uint64_t *a1, id a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void (*v42)(id, uint64_t);
  uint64_t v43;
  uint64_t v44[2];

  v41 = a4;
  v42 = a3;
  v8 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v41 - v12);
  v14 = sub_1A93F7E18();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(a5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E0DEF740], v14, v16);
  v20 = v19;
  LOBYTE(v19) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v21 = (void *)sub_1A93F729C();
  v22 = (void *)sub_1A93F8010();
  v23 = *a1;
  v24 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v25 = objc_msgSend(v24, sel_initWithLongLong_, v23, v41);
  v26 = (void *)sub_1A93F7314();
  a2 = objc_msgSend(a2, sel_saveKey_forIdentifier_adamID_withRenewalDate_accountDSID_keyServerProtocolType_, v21, v22, v25, v26, a1[1], 2);

  if (a2)
  {
    v27 = qword_1ED2A8890;
    v10 = (uint64_t *)a2;
    if (v27 == -1)
    {
LABEL_4:
      v28 = sub_1A93F7698();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED2A8878);
      sub_1A9064630((uint64_t)a1, (uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
      v29 = sub_1A93F7674();
      v30 = sub_1A93F879C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v44[0] = v32;
        *(_DWORD *)v31 = 136315651;
        v43 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v44);
        sub_1A93F8AA8();
        *(_WORD *)(v31 + 12) = 2160;
        v43 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v31 + 22) = 2049;
        v33 = *v13;
        sub_1A9064714((uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
        v43 = v33;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v29, v30, "%s Unable to migrate %{private,mask.hash}lld, unable to save with error.", (uint8_t *)v31, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v32, -1, -1);
        MEMORY[0x1AF41411C](v31, -1, -1);
      }
      else
      {
        sub_1A9064714((uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
      }

      v40 = v10;
      v42(a2, 256);

      return;
    }
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  sub_1A9332728(v23);
  if (qword_1ED2A8890 != -1)
    swift_once();
  v34 = sub_1A93F7698();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED2A8878);
  sub_1A9064630((uint64_t)a1, (uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
  v35 = sub_1A93F7674();
  v36 = sub_1A93F8790();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v44[0] = v38;
    *(_DWORD *)v37 = 136315651;
    v43 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v44);
    sub_1A93F8AA8();
    *(_WORD *)(v37 + 12) = 2160;
    v43 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v37 + 22) = 2049;
    v39 = *v10;
    sub_1A9064714((uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
    v43 = v39;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v35, v36, "%s Finished migrating %{private,mask.hash}lld.", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v38, -1, -1);
    MEMORY[0x1AF41411C](v37, -1, -1);
  }
  else
  {
    sub_1A9064714((uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
  }

  v42(0, 0);
}

id sub_1A933592C(void *a1, void *a2, void *a3, uint64_t a4, void *a5, char *a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  objc_class *v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  objc_class *v24;
  char *v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  id v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  objc_class *ObjectType;
  objc_super v41;
  objc_super v42;
  _QWORD v43[5];
  objc_super v44;

  v38 = a4;
  v39 = a5;
  v36 = a2;
  v37 = a3;
  v35 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v34 = sub_1A93F885C();
  v7 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F8808();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v12);
  v33 = OBJC_IVAR___PFFairPlayMigrationController_internalQueue;
  v32[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v13 = a6;
  sub_1A93F7D88();
  v43[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v34);
  v14 = (void *)sub_1A93F888C();
  *(_QWORD *)&a6[v33] = v14;
  v16 = v35;
  v15 = v36;
  *(_QWORD *)&v13[OBJC_IVAR___PFFairPlayMigrationController_metadataLoader] = v35;
  *(_QWORD *)&v13[OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage] = v15;
  v17 = (objc_class *)type metadata accessor for DispatchingFairPlayInvalidationManaging();
  v18 = (char *)objc_allocWithZone(v17);
  v19 = v37;
  *(_QWORD *)&v18[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = v37;
  *(_QWORD *)&v18[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = v14;
  v44.receiver = v18;
  v44.super_class = v17;
  v20 = v16;
  v21 = v15;
  v22 = v14;
  v23 = v19;
  *(_QWORD *)&v13[OBJC_IVAR___PFFairPlayMigrationController_invalidationManager] = objc_msgSendSuper2(&v44, sel_init);
  v43[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v43[4] = &off_1E54F44F0;
  v43[0] = v38;
  v24 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  v25 = (char *)objc_allocWithZone(v24);
  sub_1A905DC3C((uint64_t)v43, (uint64_t)&v25[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(_QWORD *)&v25[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v22;
  v42.receiver = v25;
  v42.super_class = v24;
  v26 = v22;
  swift_retain();
  v27 = objc_msgSendSuper2(&v42, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

  v28 = &v13[OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher];
  *((_QWORD *)v28 + 3) = v24;
  *((_QWORD *)v28 + 4) = &off_1E54ED678;
  *(_QWORD *)v28 = v27;
  v29 = v39;
  *(_QWORD *)&v13[OBJC_IVAR___PFFairPlayMigrationController_legacyDownloadRenewalManager] = v39;
  v30 = v29;

  v41.receiver = v13;
  v41.super_class = ObjectType;
  return objc_msgSendSuper2(&v41, sel_init);
}

uint64_t sub_1A9335C7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9335CA0(void *a1, unsigned __int8 a2, char a3)
{
  uint64_t v3;

  return sub_1A932F1A0(a1, a2, a3 & 1, *(uint64_t (**)(void))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), "%s Finished rollback.", "%s Rollback failed with error %s.");
}

uint64_t sub_1A9335CD0()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A9335CE0(uint64_t a1, char a2)
{
  return sub_1A9337024(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A93332C0);
}

uint64_t sub_1A9335CEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9335D14()
{
  return sub_1A93371E0("%s Finished rollback. Successfully rolled back %{private,mask.hash}s, failed to rollback %{private,mask.hash}s");
}

void sub_1A9335D20(void *a1, uint64_t a2, uint64_t a3, objc_class *a4, objc_class *a5, objc_class *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  objc_class *v33;
  NSObject *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  SEL *v39;
  id v40;
  void *v41;
  char *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  objc_class *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(void);
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  char *v88;
  id v89;
  uint64_t v90;
  char v91;
  char v92;
  id v93;
  id v94;
  char *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  NSObject *v102;
  os_log_type_t v103;
  int v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  id v115;
  void *v116;
  id v117;
  id v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  void *v121;
  void *v122;
  char *v123;
  void (*v124)(char *, uint64_t);
  id v125;
  id v126;
  void *v127;
  objc_class *v128;
  NSObject *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145[2];
  uint64_t aBlock[6];
  id v147;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v12);
  v131 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1A93F726C();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v130 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v15);
  v135 = (uint64_t)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v138 = (char *)&v125 - v18;
  v19 = sub_1A93F738C();
  v20 = *(_QWORD *)(v19 - 8);
  v139 = v19;
  v140 = v20;
  MEMORY[0x1E0C80A78](v19);
  v134 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v137 = (char *)&v125 - v23;
  MEMORY[0x1E0C80A78](v24);
  v136 = (char *)&v125 - v25;
  v26 = sub_1A93F7E18();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (id *)((char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = swift_allocObject();
  v30[2].isa = (Class)a3;
  v30[3].isa = a4;
  v141 = a2;
  v31 = *(void **)(a2 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  v30[4].isa = a5;
  v30[5].isa = a6;
  v32 = v30;
  *v29 = v31;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E0DEF740], v26);
  v142 = a3;
  swift_retain();
  v33 = a4;
  v143 = (uint64_t)a5;
  swift_retain();
  v34 = a6;
  v35 = v31;
  LOBYTE(a6) = sub_1A93F7E3C();
  (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  if ((a6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  v147 = 0;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = &v147;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1A9336D7C;
  *(_QWORD *)(v37 + 24) = v36;
  aBlock[4] = (uint64_t)sub_1A9336DC4;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A9276E2C;
  aBlock[3] = (uint64_t)&block_descriptor_46;
  v38 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateKeyEntriesUsingBlock_, v38);
  _Block_release(v38);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v38 & 1) != 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v39 = (SEL *)&unk_1E5532000;
  if (v147)
  {
    v129 = v34;
    a5 = (objc_class *)v147;
    v40 = -[objc_class adamID](a5, sel_adamID);
    v34 = v32;
    if (v40)
    {
      v41 = v40;
      v127 = a1;
      v128 = v33;
      v42 = (char *)objc_msgSend(v40, sel_longLongValue);

      v43 = *(void **)(v141 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage);
      v44 = -[objc_class identifier](a5, sel_identifier);
      v45 = sub_1A93F8040();
      v47 = v46;

      aBlock[0] = (uint64_t)v42;
      v48 = sub_1A93F9060();
      v50 = v49;
      v51 = objc_allocWithZone((Class)type metadata accessor for ContentKeyRequest(0));
      sub_1A9278A30(v45, v47, v48, v50, 0, 1, 0);
      v53 = v52;
      v54 = (char *)objc_msgSend(v43, sel_retrieveKeyDataFor_, v52);

      if (!v54)
      {
        sub_1A9334114(a5, v127, (void (*)(_QWORD, _QWORD))sub_1A9336D54, (uint64_t)v34);
LABEL_31:

        v39 = (SEL *)&unk_1E5532000;
        goto LABEL_32;
      }
      v126 = v54;
      v55 = (uint64_t *)&v54[OBJC_IVAR___MTContentKeyResponse_keyData];
      swift_beginAccess();
      v56 = *v55;
      v57 = v55[1];
      sub_1A906A3DC(*v55, v57);
      v58 = -[objc_class keyData](a5, sel_keyData);
      if (v58)
      {
        v59 = v58;
        v60 = sub_1A93F72B4();
        v62 = v61;

        if (v57 >> 60 == 15)
        {
          if (v62 >> 60 == 15)
            goto LABEL_28;
          goto LABEL_20;
        }
        if (v62 >> 60 == 15)
        {
LABEL_20:
          sub_1A9069F9C(v56, v57);
          sub_1A9069F9C(v60, v62);
LABEL_21:
          v80 = -[objc_class renewalDate](a5, sel_renewalDate, a5);
          if (v80)
          {
            v81 = v80;
            v82 = (uint64_t)v137;
            sub_1A93F7368();

            v84 = v139;
            v83 = v140;
            v85 = *(void (**)(void))(v140 + 32);
            v86 = (uint64_t)v138;
            ((void (*)(char *, uint64_t, uint64_t))v85)(v138, v82, v139);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v86, 0, 1, v84);
            v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
            v39 = (SEL *)&unk_1E5532000;
            if (v87(v86, 1, v84) != 1)
            {
              v137 = v42;
              v88 = v136;
              ((void (*)(char *, uint64_t, uint64_t))v85)(v136, v86, v84);
              v89 = v126;
              v90 = v135;
              sub_1A9062170((uint64_t)v126 + OBJC_IVAR___MTContentKeyResponse_renewalDate, v135, (uint64_t *)&unk_1ED2AD360);
              if (v87(v90, 1, v84) == 1)
              {
                (*(void (**)(char *, uint64_t))(v83 + 8))(v88, v84);

                sub_1A905FD54(v90, (uint64_t *)&unk_1ED2AD360);
              }
              else
              {
                v95 = v134;
                v85();
                if ((sub_1A93F7320() & 1) != 0)
                {
                  v96 = objc_msgSend(v127, sel_filePath);
                  sub_1A93F8040();

                  v97 = (uint64_t)v131;
                  sub_1A93F7248();
                  swift_bridgeObjectRelease();
                  v98 = v132;
                  v99 = v133;
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v97, 1, v133) == 1)
                  {
                    sub_1A905FD54(v97, &qword_1ED2AD3D0);
                    if (qword_1ED2A8890 != -1)
                      swift_once();
                    v100 = sub_1A93F7698();
                    __swift_project_value_buffer(v100, (uint64_t)qword_1ED2A8878);
                    v101 = v127;
                    v102 = sub_1A93F7674();
                    v103 = sub_1A93F879C();
                    v104 = v103;
                    if (os_log_type_enabled(v102, v103))
                    {
                      v105 = swift_slowAlloc();
                      v141 = swift_slowAlloc();
                      v145[0] = v141;
                      *(_DWORD *)v105 = 136315651;
                      v144 = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, v145);
                      sub_1A93F8AA8();
                      *(_WORD *)(v105 + 12) = 2160;
                      v144 = 1752392040;
                      sub_1A93F8AA8();
                      *(_WORD *)(v105 + 22) = 2081;
                      v137 = (char *)(v105 + 24);
                      v106 = objc_msgSend(v101, sel_filePath);
                      v107 = sub_1A93F8040();
                      LODWORD(v138) = v104;
                      v108 = v107;
                      v110 = v109;

                      v95 = v134;
                      v144 = sub_1A906436C(v108, v110, v145);
                      sub_1A93F8AA8();

                      v39 = (SEL *)&unk_1E5532000;
                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_1A904E000, v102, (os_log_type_t)v138, "%s Unable to invalidate key, invalid key store path %{private,mask.hash}s.", (uint8_t *)v105, 0x20u);
                      v111 = v141;
                      swift_arrayDestroy();
                      MEMORY[0x1AF41411C](v111, -1, -1);
                      v112 = v105;
                      v84 = v139;
                      MEMORY[0x1AF41411C](v112, -1, -1);

                    }
                    else
                    {

                    }
                  }
                  else
                  {
                    v120 = v130;
                    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v130, v97, v99);
                    v121 = *(void **)(v141 + OBJC_IVAR___PFFairPlayMigrationController_invalidationManager);
                    v122 = (void *)sub_1A93F71A0();
                    objc_msgSend(v121, sel_markKeyForInvalidationAt_shouldRemove_, v122, 1);

                    (*(void (**)(char *, uint64_t))(v98 + 8))(v120, v99);
                  }
                  v123 = v136;
                  sub_1A9333BE8(0, 0, v142, (uint64_t)v128, v143, v129);

                  v124 = *(void (**)(char *, uint64_t))(v140 + 8);
                  v124(v95, v84);
                  v124(v123, v84);
                }
                else
                {
                  v113 = swift_allocObject();
                  swift_unknownObjectWeakInit();
                  v114 = (_QWORD *)swift_allocObject();
                  v114[2] = v113;
                  v114[3] = sub_1A9336D54;
                  v115 = v125;
                  v114[4] = v34;
                  v114[5] = v115;
                  v116 = v127;
                  v114[6] = v127;
                  v117 = v115;
                  v118 = v116;
                  swift_retain();
                  swift_retain();
                  sub_1A933298C((uint64_t)v137, (uint64_t)sub_1A9336E08, (uint64_t)v114);

                  swift_release();
                  v119 = *(void (**)(char *, uint64_t))(v83 + 8);
                  v119(v95, v84);
                  v119(v136, v84);
                  swift_release();
                }
              }
              goto LABEL_32;
            }
          }
          else
          {
            v86 = (uint64_t)v138;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v138, 1, 1, v139);
            v39 = (SEL *)&unk_1E5532000;
          }

          sub_1A905FD54(v86, (uint64_t *)&unk_1ED2AD360);
LABEL_32:

          v63 = (void *)objc_opt_self();
          v79 = objc_msgSend(v63, v39[201]);
LABEL_33:
          v64 = v79;
          v65 = (void *)sub_1A93F8010();
          swift_bridgeObjectRetain();
          v66 = (void *)sub_1A93F8010();
          swift_bridgeObjectRelease();
          objc_msgSend(v64, sel_setValue_forKey_, v65, v66);
          goto LABEL_34;
        }
        sub_1A90D8068(v56, v57);
        sub_1A93533B4(v56, v57);
        v92 = v91;
        sub_1A9069F9C(v60, v62);
        sub_1A9069F9C(v56, v57);
        sub_1A9069F9C(v56, v57);
        if ((v92 & 1) == 0)
          goto LABEL_21;
      }
      else if (v57 >> 60 != 15)
      {
        v60 = 0;
        v62 = 0xF000000000000000;
        goto LABEL_20;
      }
LABEL_28:
      v93 = -[objc_class identifier](a5, sel_identifier);
      if (!v93)
      {
        sub_1A93F8040();
        v93 = (id)sub_1A93F8010();
        swift_bridgeObjectRelease();
      }

      sub_1A9333BE8(0, 0, v142, (uint64_t)v128, v143, v129);
      goto LABEL_31;
    }
    if (qword_1ED2A8890 == -1)
    {
LABEL_12:
      v67 = sub_1A93F7698();
      __swift_project_value_buffer(v67, (uint64_t)qword_1ED2A8878);
      v68 = a5;
      v69 = sub_1A93F7674();
      v70 = sub_1A93F879C();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = swift_slowAlloc();
        v128 = v33;
        v72 = v71;
        aBlock[0] = swift_slowAlloc();
        v141 = (uint64_t)v34;
        v73 = aBlock[0];
        *(_DWORD *)v72 = 136315651;
        v145[0] = sub_1A906436C(0xD000000000000028, 0x80000001A944D4F0, aBlock);
        sub_1A93F8AA8();
        *(_WORD *)(v72 + 12) = 2160;
        v145[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v72 + 22) = 2081;
        v140 = v72 + 24;
        v74 = -[objc_class identifier](v68, sel_identifier);
        v75 = sub_1A93F8040();
        v77 = v76;

        v145[0] = sub_1A906436C(v75, v77, aBlock);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v69, v70, "%s Unable to rollback %{private,mask.hash}s, no adam ID found.", (uint8_t *)v72, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v73, -1, -1);
        v78 = v72;
        v33 = v128;
        MEMORY[0x1AF41411C](v78, -1, -1);

      }
      else
      {

      }
      v39 = (SEL *)&unk_1E5532000;
      sub_1A9333BE8(2, 258, v142, (uint64_t)v33, v143, v129);

      v63 = (void *)objc_opt_self();
      v79 = objc_msgSend(v63, sel__applePodcastsFoundationSharedUserDefaults);
      goto LABEL_33;
    }
LABEL_47:
    swift_once();
    goto LABEL_12;
  }
  sub_1A9333BE8(0, 0, v142, (uint64_t)v33, v143, v34);

  v63 = (void *)objc_opt_self();
  v64 = objc_msgSend(v63, sel__applePodcastsFoundationSharedUserDefaults);
  v65 = (void *)sub_1A93F8010();
  swift_bridgeObjectRetain();
  v66 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v64, sel_setValue_forKey_, v65, v66);
LABEL_34:

  v94 = objc_msgSend(v63, v39[201]);
  objc_msgSend(v94, sel_setFairPlayMigrationRetryCount_, 0);
  swift_release();
  swift_release();

}

uint64_t sub_1A9336D18()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1A9336D54(uint64_t a1, __int16 a2)
{
  uint64_t v2;

  sub_1A9333BE8(a1, a2 & 0x1FF, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(NSObject **)(v2 + 40));
}

uint64_t sub_1A9336D6C()
{
  return swift_deallocObject();
}

void sub_1A9336D7C(void *a1, _BYTE *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;

  v4 = *(void ***)(v2 + 16);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  *a2 = 1;
}

uint64_t sub_1A9336DB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A9336DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A9276E0C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1A9336DCC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A9336E08(uint64_t a1, __int16 a2)
{
  uint64_t v2;

  sub_1A9334084(a1, a2 & 0x1FF, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_1A9336E24()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A9336E34(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9332C84(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A9336E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9336E64()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

uint64_t sub_1A9336E94()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A9336EC8(char a1)
{
  uint64_t v1;

  sub_1A9334B68(a1, *(void **)(v1 + 16), *(id *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD, _QWORD))(v1 + 40));
}

void sub_1A9336ED8(void *a1, unsigned __int8 a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    sub_1A92411D0(a1, a2);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A9336F10()
{
  unint64_t result;

  result = qword_1EEABDF98;
  if (!qword_1EEABDF98)
  {
    result = MEMORY[0x1AF414014](&unk_1A941E618, &type metadata for FairPlayMigrationError);
    atomic_store(result, (unint64_t *)&qword_1EEABDF98);
  }
  return result;
}

uint64_t sub_1A9336F54()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9336F80()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A9336FB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1A9336FD8(void *a1, unsigned __int8 a2, char a3)
{
  uint64_t v3;

  return sub_1A932F1A0(a1, a2, a3 & 1, *(uint64_t (**)(void))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), "%s Finished migration.", "%s Migration failed with error %s.");
}

uint64_t sub_1A9337008()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A9337018(uint64_t a1, char a2)
{
  return sub_1A9337024(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A932F6E0);
}

uint64_t sub_1A9337024(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1A9337038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FairPlayMigrationData(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(v3 + 8), v4);
  swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 28);
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A9337144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FairPlayMigrationData(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1A932FF24(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32), *(_QWORD ***)(v1 + 40), (uint64_t *)(v1 + v4), *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_30Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A93371D4()
{
  return sub_1A93371E0("%s Finished migration. Successfully migrated %{private,mask.hash}s, failed to migrate %{private,mask.hash}s");
}

uint64_t sub_1A93371E0(const char *a1)
{
  uint64_t v1;

  return sub_1A9333CD8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1A9337204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for FairPlayMigrationData(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 64);
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v19 = v5;
  v20 = v4;
  v17 = *(_QWORD *)(v5 + 64);
  v7 = sub_1A93F738C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  swift_release();
  v10 = v0 + v3;
  v11 = *(_QWORD *)(v0 + v3 + 16);
  if (v11 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(v10 + 8), v11);
  swift_bridgeObjectRelease();
  v12 = v10 + *(int *)(v1 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v7);
  v13 = (v18 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v6 + v14 + 16) & ~v6;
  swift_bridgeObjectRelease();

  sub_1A905F180(*(_QWORD *)(v0 + v14), *(_QWORD *)(v0 + v14 + 8));
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v0 + v15, v20);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + ((v17 + v9 + v15) & ~v9), v7);
  return swift_deallocObject();
}

uint64_t sub_1A9337398(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(type metadata accessor for FairPlayMigrationData(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(sub_1A93F726C() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + v10 + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F738C() - 8) + 80);
  return sub_1A933242C(a1, a2, v6, *(void (**)(_QWORD))(v3 + 16), *(_QWORD *)(v3 + 24), (uint64_t *)(v3 + v8), *(void **)(v3 + v9), *(_QWORD *)(v3 + v10), *(_QWORD *)(v3 + v10 + 8), v3 + v12, v3 + ((v13 + v14 + v12) & ~v14));
}

uint64_t sub_1A9337484()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A9337494(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9333008(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A93374A0()
{
  return objectdestroy_2Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A93374B0()
{
  uint64_t v0;

  return sub_1A933324C(*(_QWORD **)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 24));
}

id sub_1A93374BC(void *a1, unsigned __int8 a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1A92411AC(a1, a2);
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1A93374CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = v0 + v3;

  sub_1A905F180(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  v6 = v0 + v3 + *(int *)(v1 + 28);
  v7 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v1 + 32);
  v9 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1A93375D0(void *a1, __int16 a2)
{
  uint64_t v2;
  __int16 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = a2 & 0x1FF;
  v5 = *(_QWORD *)(type metadata accessor for FairPlayMigrationData.ValidatedData(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A933043C(a1, v4, *(_QWORD *)(v2 + 16), (uint64_t *)(v2 + v6), *(NSObject **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A9337654()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A9337678(void *a1, _BYTE *a2)
{
  uint64_t v2;

  sub_1A93352D8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void ***)(v2 + 32));
}

uint64_t sub_1A9337684()
{
  return swift_deallocObject();
}

void sub_1A9337694(id a1, unsigned __int8 a2, char a3)
{
  if ((a3 & 1) != 0)
    sub_1A92411D0(a1, a2);
}

ValueMetadata *type metadata accessor for FairPlayMigrationError()
{
  return &type metadata for FairPlayMigrationError;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

float NetworkTaskPriority.rawValue.getter()
{
  char *v0;

  return flt_1A9406340[*v0];
}

PodcastsFoundation::FileFormat_optional __swiftcall FileFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::FileFormat_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FileFormat.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93377B4 + 4 * byte_1A941E6FB[*v0]))(6778480, 0xE300000000000000);
}

uint64_t sub_1A93377B4(uint64_t a1)
{
  return a1 + 506;
}

uint64_t sub_1A93377BC()
{
  return 1734701162;
}

uint64_t sub_1A93377CC()
{
  return 1667851624;
}

uint64_t sub_1A93377DC()
{
  return 7633012;
}

uint64_t sub_1A93377E8()
{
  return 0x7473696C70;
}

uint64_t sub_1A93377FC()
{
  return 0x69736D617A616873;
}

uint64_t sub_1A9337820()
{
  return 1819112564;
}

uint64_t sub_1A9337830()
{
  return 7105912;
}

void sub_1A933783C(char *a1)
{
  sub_1A92F8F88(*a1);
}

uint64_t sub_1A9337848()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A9227690((uint64_t)v3, v1);
  return sub_1A93F9324();
}

void sub_1A933788C(uint64_t a1)
{
  char *v1;

  sub_1A9227690(a1, *v1);
}

uint64_t sub_1A9337894()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A9227690((uint64_t)v3, v1);
  return sub_1A93F9324();
}

PodcastsFoundation::FileFormat_optional sub_1A93378D4(Swift::String *a1)
{
  return FileFormat.init(rawValue:)(*a1);
}

uint64_t sub_1A93378E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FileFormat.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A9337904()
{
  sub_1A93381F4();
  return sub_1A93F82BC();
}

uint64_t sub_1A9337960()
{
  sub_1A93381F4();
  return sub_1A93F828C();
}

uint64_t NetworkTaskPriority.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A93379E0 + 4 * byte_1A941E704[*v0]))(0x756F72676B636142, 0xEA0000000000646ELL);
}

uint64_t sub_1A93379E0()
{
  return 0x7974696C697455;
}

uint64_t sub_1A93379F8()
{
  return 0x74696E4972657355;
}

uint64_t sub_1A9337A1C()
{
  return 0x65746E4972657355;
}

void NetworkTaskPriority.debugDescription.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F8C70();
  sub_1A93F810C();
  __asm { BR              X9 }
}

uint64_t sub_1A9337AAC()
{
  uint64_t v1;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F85E0();
  sub_1A93F810C();
  return v1;
}

PodcastsFoundation::NetworkTaskPriority_optional __swiftcall NetworkTaskPriority.init(rawValue:)(Swift::Float rawValue)
{
  char *v1;
  char v2;
  char v3;
  PodcastsFoundation::NetworkTaskPriority_optional result;

  if (rawValue == 0.4)
  {
    *v1 = 0;
  }
  else if (rawValue == 0.6)
  {
    *v1 = 1;
  }
  else
  {
    if (rawValue == 1.0)
      v2 = 3;
    else
      v2 = 4;
    if (rawValue == 0.8)
      v3 = 2;
    else
      v3 = v2;
    *v1 = v3;
  }
  return result;
}

void *static NetworkTaskPriority.allCases.getter()
{
  return &unk_1E54D7AC0;
}

PodcastsFoundation::NetworkTaskPriority_optional sub_1A9337C68(Swift::Float *a1)
{
  return NetworkTaskPriority.init(rawValue:)(*a1);
}

float sub_1A9337C70@<S0>(float *a1@<X8>)
{
  char *v1;
  float result;

  result = flt_1A9406340[*v1];
  *a1 = result;
  return result;
}

void sub_1A9337C88(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7500;
}

uint64_t sub_1A9337C98()
{
  sub_1A93381B0();
  return sub_1A93F82C8();
}

uint64_t sub_1A9337CF4()
{
  sub_1A93381B0();
  return sub_1A93F8298();
}

uint64_t sub_1A9337D40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9337D74 + 4 * byte_1A941E70C[*v0]))(0x756F72676B636142, 0xEA0000000000646ELL);
}

uint64_t sub_1A9337D74()
{
  return 0x7974696C697455;
}

uint64_t sub_1A9337D8C()
{
  return 0x74696E4972657355;
}

uint64_t sub_1A9337DB0()
{
  return 0x65746E4972657355;
}

BOOL sub_1A9337DD8(char *a1, char *a2)
{
  return flt_1A9406340[*a1] == flt_1A9406340[*a2];
}

uint64_t sub_1A9337DFC()
{
  return sub_1A931BDF0();
}

uint64_t sub_1A9337E08()
{
  return sub_1A93F9300();
}

uint64_t sub_1A9337E3C()
{
  return sub_1A931BDF0();
}

uint64_t FileBasedAssetLocation<>.decode(_:)(uint64_t a1, unint64_t a2)
{
  sub_1A90D8068(a1, a2);
  return a1;
}

unint64_t sub_1A9337E84()
{
  unint64_t result;

  result = qword_1EEABDFA8;
  if (!qword_1EEABDFA8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FileFormat, &type metadata for FileFormat);
    atomic_store(result, (unint64_t *)&qword_1EEABDFA8);
  }
  return result;
}

unint64_t sub_1A9337ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABDFB0;
  if (!qword_1EEABDFB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABDFB8);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEABDFB0);
  }
  return result;
}

unint64_t sub_1A9337F1C()
{
  unint64_t result;

  result = qword_1EEABDFC0;
  if (!qword_1EEABDFC0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NetworkTaskPriority, &type metadata for NetworkTaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EEABDFC0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FileFormat(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FileFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A933803C + 4 * byte_1A941E715[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A9338070 + 4 * byte_1A941E710[v4]))();
}

uint64_t sub_1A9338070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9338078(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9338080);
  return result;
}

uint64_t sub_1A933808C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9338094);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A9338098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93380A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of KeyedAssetLocation.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.fileName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.encode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.decode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of NetworkAssetLocation.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t storeEnumTagSinglePayload for NetworkTaskPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9338140 + 4 * byte_1A941E71F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9338174 + 4 * byte_1A941E71A[v4]))();
}

uint64_t sub_1A9338174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A933817C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9338184);
  return result;
}

uint64_t sub_1A9338190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9338198);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A933819C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A93381A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A93381B0()
{
  unint64_t result;

  result = qword_1EEABDFC8;
  if (!qword_1EEABDFC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NetworkTaskPriority, &type metadata for NetworkTaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EEABDFC8);
  }
  return result;
}

unint64_t sub_1A93381F4()
{
  unint64_t result;

  result = qword_1EEABDFD0;
  if (!qword_1EEABDFD0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for FileFormat, &type metadata for FileFormat);
    atomic_store(result, (unint64_t *)&qword_1EEABDFD0);
  }
  return result;
}

uint64_t FileBasedAssetLocation<>.encode(_:)(uint64_t a1, unint64_t a2)
{
  return FileBasedAssetLocation<>.decode(_:)(a1, a2);
}

uint64_t MTEpisodeEntitlementState.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A93383B4(a1, a2);
}

uint64_t MTEpisodeEntitlementState.description.getter(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
      return 1701147238;
    case 2:
      return 0x6C7469746E656E75;
    case 1:
      return 0x64656C7469746E65;
  }
  type metadata accessor for MTEpisodeEntitlementState(0);
  result = sub_1A93F921C();
  __break(1u);
  return result;
}

uint64_t sub_1A93382FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char v5;

  result = sub_1A93383B4(a1, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A9338328()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if (!*v0)
    return 1701147238;
  if (v1 == 2)
    return 0x6C7469746E656E75;
  if (v1 == 1)
    return 0x64656C7469746E65;
  result = sub_1A93F921C();
  __break(1u);
  return result;
}

uint64_t sub_1A93383B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701147238 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C7469746E65 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C7469746E656E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 0;
  }
}

unint64_t sub_1A933851C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABDFD8;
  if (!qword_1EEABDFD8)
  {
    type metadata accessor for MTEpisodeEntitlementState(255);
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MTEpisodeEntitlementState, v1);
    atomic_store(result, (unint64_t *)&qword_1EEABDFD8);
  }
  return result;
}

void SHSignature.inMemorySize.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_dataRepresentation);
  sub_1A93F72B4();
  v3 = v2;

  __asm { BR              X10 }
}

uint64_t sub_1A93385C4()
{
  uint64_t v0;
  unint64_t v1;

  sub_1A905F180(v0, v1);
  return BYTE6(v1);
}

void sub_1A9338674()
{
  SHSignature.inMemorySize.getter();
}

uint64_t sub_1A9338694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a1;
  v24 = a3;
  v5 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1A93F726C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v25 = a2;
  v18 = *(unsigned __int8 *)(a2 + 809);
  sub_1A93388C4(v18, (uint64_t)&v24 - v16);
  sub_1A9064630(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
  v26 = v5;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    v19(v14, v7, v8);
  }
  else
  {
    v20 = *v7;
    v21 = v7[1];
    sub_1A93388C4(v18, (uint64_t)v11);
    sub_1A93F72C0();
    if (v3)
    {
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v11, v8);
      sub_1A905F180(v20, v21);
      return ((uint64_t (*)(char *, uint64_t))v22)(v17, v8);
    }
    sub_1A905F180(v20, v21);
    v19 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    v19(v14, (uint64_t *)v11, v8);
  }
  sub_1A927BF2C((uint64_t)v14, (uint64_t)v17, v25 + 264);
  if (v3)
  {
    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v14, v8);
    return ((uint64_t (*)(char *, uint64_t))v22)(v17, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v19(v24, (uint64_t *)v17, v8);
  return swift_storeEnumTagMultiPayload();
}

void sub_1A93388C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];

  v13[0] = a1;
  v13[1] = a2;
  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = objc_msgSend(v11, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13[2] = 0x6D726F662E706D74;
  v13[3] = 0xEB000000002E7461;
  __asm { BR              X10 }
}

uint64_t sub_1A9338A60()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return v0(v2, v1);
}

uint64_t sub_1A9338AF4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  char v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v24[46];
  char v25;
  char v26;
  __int128 v27[11];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[16];
  _OWORD v46[11];

  sub_1A9062170(a2, a3 + 256, &qword_1EEABE060);
  sub_1A9131434(a2, (uint64_t)&v28);
  v46[8] = v36;
  v46[9] = v37;
  v46[10] = v38;
  v46[4] = v32;
  v46[5] = v33;
  v46[6] = v34;
  v46[7] = v35;
  v46[0] = v28;
  v46[1] = v29;
  v46[2] = v30;
  v46[3] = v31;
  v27[8] = v36;
  v27[9] = v37;
  v27[10] = v38;
  v27[4] = v32;
  v27[5] = v33;
  v27[6] = v34;
  v27[7] = v35;
  v27[0] = v28;
  v27[1] = v29;
  v27[2] = v30;
  v27[3] = v31;
  v12 = v39;
  v26 = v40;
  v13 = v41;
  v14 = v43;
  v25 = v42;
  sub_1A9062170((uint64_t)&v44, (uint64_t)v24, &qword_1ED2AD0C0);
  sub_1A91770E8((uint64_t)v46);
  swift_bridgeObjectRetain();
  ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v27, v12, &v26, v13, v14, &v25, (uint64_t)v24, (uint64_t)v45, a4, a5, a6);
  sub_1A905FD54(a2, &qword_1EEABE060);
  sub_1A9131470((uint64_t)&v28);
  v15 = v45[13];
  *(_OWORD *)(a3 + 192) = v45[12];
  *(_OWORD *)(a3 + 208) = v15;
  v16 = v45[15];
  *(_OWORD *)(a3 + 224) = v45[14];
  *(_OWORD *)(a3 + 240) = v16;
  v17 = v45[9];
  *(_OWORD *)(a3 + 128) = v45[8];
  *(_OWORD *)(a3 + 144) = v17;
  v18 = v45[11];
  *(_OWORD *)(a3 + 160) = v45[10];
  *(_OWORD *)(a3 + 176) = v18;
  v19 = v45[5];
  *(_OWORD *)(a3 + 64) = v45[4];
  *(_OWORD *)(a3 + 80) = v19;
  v20 = v45[7];
  *(_OWORD *)(a3 + 96) = v45[6];
  *(_OWORD *)(a3 + 112) = v20;
  v21 = v45[1];
  *(_OWORD *)a3 = v45[0];
  *(_OWORD *)(a3 + 16) = v21;
  v22 = v45[3];
  *(_OWORD *)(a3 + 32) = v45[2];
  *(_OWORD *)(a3 + 48) = v22;
  *(double *)(a3 + 1608) = a4;
  *(double *)(a3 + 1616) = a5;
  *(double *)(a3 + 1624) = a6;
  return sub_1A905D4AC(a1, a3 + 1632);
}

uint64_t sub_1A9338CC0()
{
  CGSize *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BOOL4 v15;
  double v16;
  double v17;
  os_unfair_lock_s *v18;
  uint64_t *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  _QWORD *v37;
  uint64_t v38;
  __int128 v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __int128 v44[2];
  _QWORD v45[209];
  __int128 v46[3];
  uint64_t v47;
  _QWORD v48[210];

  v1 = (uint64_t)v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE188);
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - v6;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE190);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  v14 = (uint64_t)&v0[16];
  v15 = CGSizeEqualToSize(v0[27], v0[11]);
  sub_1A9062170(v1, (uint64_t)v48, &qword_1EEABE068);
  if (!v15)
  {
    sub_1A905FD54((uint64_t)v48, &qword_1EEABE068);
    goto LABEL_5;
  }
  v16 = *(double *)&v48[56];
  v17 = *(double *)&v48[24];
  sub_1A905FD54((uint64_t)v48, &qword_1EEABE068);
  if (v16 != v17)
  {
LABEL_5:
    sub_1A933ED60(v45);
    v41 = v7;
    v42 = v13;
    v23 = *(os_unfair_lock_s **)(v1 + 1600);
    v24 = (uint64_t *)&v23[4];
    v25 = v23 + 6;
    os_unfair_lock_lock(v23 + 6);
    v26 = sub_1A933C6C0(v24, v14, (uint64_t)v45);
    os_unfair_lock_unlock(v25);
    sub_1A905FD54((uint64_t)v45, &qword_1EEABE0F8);
    v47 = v26;
    sub_1A905DC3C(v1 + 1632, (uint64_t)v46);
    v40 = *(_OWORD *)(v1 + 1608);
    v27 = *(_QWORD *)(v1 + 1624);
    sub_1A9062170(v1, (uint64_t)v45, &qword_1EEABE068);
    sub_1A905D4AC(v46, (uint64_t)v44);
    v28 = swift_allocObject();
    memcpy((void *)(v28 + 16), v45, 0x688uLL);
    sub_1A905D4AC(v44, v28 + 1688);
    *(_OWORD *)(v28 + 1728) = v40;
    *(_QWORD *)(v28 + 1744) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAD0);
    type metadata accessor for ArtworkContent();
    sub_1A9066D74((unint64_t *)&qword_1ED2ABAC8, &qword_1ED2ABAD0, MEMORY[0x1E0C95D90]);
    *(_QWORD *)&v40 = v4;
    v29 = (uint64_t)v10;
    v30 = v2;
    v31 = v41;
    sub_1A93F7C20();
    swift_release();
    swift_release();
    sub_1A9131434(v1, (uint64_t)v45);
    sub_1A9062170((uint64_t)&v45[27], (uint64_t)v46, &qword_1ED2AD0C0);
    sub_1A9131470((uint64_t)v45);
    v32 = v43;
    v33 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 16);
    v34 = (char *)v40;
    v33(v40, v31, v30);
    sub_1A9062170((uint64_t)v46, (uint64_t)v45, &qword_1ED2AD0C0);
    v33(v29, v34, v30);
    sub_1A9062170((uint64_t)v45, v29 + v8[9], &qword_1ED2AD0C0);
    v35 = v29 + v8[10];
    *(_QWORD *)v35 = "DiskResizeOperation";
    *(_QWORD *)(v35 + 8) = 19;
    *(_BYTE *)(v35 + 16) = 2;
    *(_BYTE *)(v29 + v8[12]) = 0;
    sub_1A905FD54((uint64_t)v45, &qword_1ED2AD0C0);
    v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v36((uint64_t)v34, v30);
    v37 = (_QWORD *)(v29 + v8[11]);
    *v37 = 0;
    v37[1] = 0xE000000000000000;
    *(_BYTE *)(v29 + v8[13]) = 0;
    v38 = (uint64_t)v42;
    sub_1A9062F08(v29, (uint64_t)v42, &qword_1EEABE190);
    sub_1A905FD54((uint64_t)v46, &qword_1ED2AD0C0);
    v36((uint64_t)v31, v30);
    sub_1A9066D74(&qword_1EEABE198, &qword_1EEABE190, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v22 = sub_1A93F7B24();
    sub_1A905FD54(v38, &qword_1EEABE190);
    return v22;
  }
  sub_1A933ED60(v45);
  v18 = *(os_unfair_lock_s **)(v1 + 1600);
  v19 = (uint64_t *)&v18[4];
  v20 = v18 + 6;
  os_unfair_lock_lock(v18 + 6);
  v21 = sub_1A933C6C0(v19, v14, (uint64_t)v45);
  os_unfair_lock_unlock(v20);
  sub_1A905FD54((uint64_t)v45, &qword_1EEABE0F8);
  v45[0] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAD0);
  sub_1A9066D74((unint64_t *)&qword_1ED2ABAC8, &qword_1ED2ABAD0, MEMORY[0x1E0C95D90]);
  v22 = sub_1A93F7B24();
  swift_release();
  return v22;
}

uint64_t sub_1A933916C@<X0>(uint64_t a1@<X0>, void (*a2)(_BYTE *, _BYTE *, uint64_t)@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  os_signpost_id_t v52;
  uint64_t v53;
  void (*v54)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  void (*v63)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v78;
  _BYTE *v79;
  NSObject *v80;
  os_signpost_type_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  void (*v86)(_BYTE *, uint64_t);
  _BYTE *v87;
  _BYTE *v88;
  uint8_t *v89;
  os_signpost_id_t v90;
  _BYTE v91[4];
  int v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t *v103;
  uint64_t v104;
  void (*v105)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v106;
  void (*v107)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117[3];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[3];
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[8];

  v110 = a3;
  v104 = a1;
  v98 = a4;
  v11 = sub_1A93F7638();
  v94 = *(_QWORD *)(v11 - 8);
  v95 = v11;
  MEMORY[0x1E0C80A78](v11);
  v93 = &v91[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v13);
  v102 = &v91[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v91[-v16];
  v108 = type metadata accessor for ArtworkContent();
  MEMORY[0x1E0C80A78](v108);
  v103 = (uint64_t *)&v91[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = sub_1A93F726C();
  v113 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v20 = &v91[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v99 = (uint64_t *)&v91[-v22];
  MEMORY[0x1E0C80A78](v23);
  v112 = &v91[-v24];
  v111 = sub_1A93F75FC();
  v25 = *(_QWORD **)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v100 = &v91[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v27);
  v116 = &v91[-v28];
  MEMORY[0x1E0C80A78](v29);
  v114 = &v91[-v30];
  v31 = sub_1A93F73E0();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = &v91[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = a2;
  sub_1A9062170((uint64_t)a2 + 216, (uint64_t)v117, &qword_1ED2AD0C0);
  v35 = v118;
  if (v118)
  {
    v36 = v119;
    __swift_project_boxed_opaque_existential_1(v117, v118);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    v39 = v38;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v117);
  }
  else
  {
    sub_1A905FD54((uint64_t)v117, &qword_1ED2AD0C0);
    sub_1A93F73D4();
    v37 = sub_1A93F73A4();
    v39 = v40;
    (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v34, v31);
  }
  v101 = v20;
  v106 = v17;
  v41 = v114;
  if (qword_1ED2A86B0 != -1)
    swift_once();
  v42 = sub_1A93F762C();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED2A8698);
  sub_1A93F7620();
  sub_1A93F75D8();
  swift_bridgeObjectRetain();
  v97 = v43;
  v44 = sub_1A93F7620();
  v45 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v107 = (void (*)(_BYTE *, _BYTE *, uint64_t))v25[2];
    v96 = v25;
    v46 = v111;
    v107(v116, v41, v111);
    v92 = v45;
    v47 = v37;
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v117[0] = v49;
    *(_DWORD *)v48 = 136315138;
    swift_bridgeObjectRetain();
    v124[0] = sub_1A906436C(v47, v39, v117);
    sub_1A93F8AA8();
    v50 = v116;
    v25 = v96;
    v51 = v46;
    swift_bridgeObjectRelease_n();
    v52 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v44, (os_signpost_type_t)v92, v52, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v48, 0xCu);
    swift_arrayDestroy();
    v53 = v49;
    v41 = v114;
    MEMORY[0x1AF41411C](v53, -1, -1);
    MEMORY[0x1AF41411C](v48, -1, -1);

    ((void (*)(_BYTE *, uint64_t))v25[1])(v50, v46);
    v54 = v107;
    v55 = v112;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v54 = (void (*)(_BYTE *, _BYTE *, uint64_t))v25[2];
    v51 = v111;
    v55 = v112;
    v50 = v116;
  }
  v107 = v54;
  v54(v50, v41, v51);
  sub_1A93F765C();
  swift_allocObject();
  v114 = (_BYTE *)sub_1A93F7650();
  v96 = (_QWORD *)v25[1];
  ((void (*)(_BYTE *, uint64_t))v96)(v41, v51);
  sub_1A9131434((uint64_t)v105, (uint64_t)v117);
  sub_1A9062170((uint64_t)&v120, (uint64_t)v121, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v117);
  v56 = v122;
  v57 = v113;
  if (v122)
  {
    v58 = v123;
    __swift_project_boxed_opaque_existential_1(v121, v122);
    __swift_project_boxed_opaque_existential_1(v110, v110[3]);
    swift_getDynamicType();
    v59 = sub_1A93F9474();
    (*(void (**)(_QWORD *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 24))(v124, "ResizeImage", 11, 2, v59, v60, v56, v58);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v121);
  }
  else
  {
    sub_1A905FD54((uint64_t)v121, &qword_1ED2AD0C0);
    memset(v124, 0, 40);
  }
  v61 = v109;
  v62 = v103;
  sub_1A9064630(v104, (uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v63 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 32);
    v64 = v55;
    v65 = v62;
  }
  else
  {
    v66 = *v62;
    v67 = v62[1];
    v68 = v99;
    sub_1A9339BB0(4, (uint64_t)v99);
    v69 = v115;
    sub_1A93F72C0();
    v115 = v69;
    if (v69)
    {
      (*(void (**)(uint64_t *, uint64_t))(v57 + 8))(v68, v61);
      sub_1A905F180(v66, v67);
      swift_release();
      return sub_1A905FD54((uint64_t)v124, qword_1ED2A6060);
    }
    sub_1A905F180(v66, v67);
    v63 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 32);
    v64 = v55;
    v65 = v68;
  }
  v105 = v63;
  v63(v64, v65, v61);
  v70 = v55;
  v71 = v57;
  v72 = v110[3];
  v73 = v110[4];
  __swift_project_boxed_opaque_existential_1(v110, v72);
  v74 = (uint64_t)v106;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double, double, double))(v73 + 8))(v70, v72, v73, a5, a6, a7);
  v75 = v102;
  sub_1A9062170(v74, (uint64_t)v102, &qword_1ED2AD3D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v71 + 48))(v75, 1, v61) == 1)
  {
    sub_1A905FD54((uint64_t)v75, &qword_1ED2AD3D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE1A0);
    sub_1A9066D74(&qword_1EEABE1A8, &qword_1EEABE1A0, (uint64_t)&protocol conformance descriptor for DiskResizeArtworkProcessingStep<A>.ResizeError);
    swift_allocError();
    *v76 = 0;
    swift_willThrow();
    swift_release();
    sub_1A905FD54(v74, &qword_1ED2AD3D0);
    (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v70, v61);
    return sub_1A905FD54((uint64_t)v124, qword_1ED2A6060);
  }
  v105(v101, v75, v61);
  sub_1A9062170((uint64_t)v124, (uint64_t)v117, qword_1ED2A6060);
  if (v118)
  {
    __swift_project_boxed_opaque_existential_1(v117, v118);
    TraceInterval.end()();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v117);
  }
  else
  {
    sub_1A905FD54((uint64_t)v117, qword_1ED2A6060);
  }
  v78 = v111;
  v79 = v100;
  v80 = sub_1A93F7620();
  sub_1A93F7644();
  v81 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    v82 = v93;
    sub_1A93F7668();
    swift_release();
    v84 = v94;
    v83 = v95;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v94 + 88))(v82, v95) == *MEMORY[0x1E0DF2190])
    {
      v85 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v82, v83);
      v85 = "";
    }
    v86 = (void (*)(_BYTE *, uint64_t))v96;
    v87 = v116;
    v88 = v100;
    v107(v116, v100, v78);
    v89 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v89 = 0;
    v90 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v80, v81, v90, "ResizeImage", v85, v89, 2u);
    MEMORY[0x1AF41411C](v89, -1, -1);

    v86(v88, v78);
    sub_1A905FD54((uint64_t)v106, &qword_1ED2AD3D0);
    v61 = v109;
    (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v112, v109);
    sub_1A905FD54((uint64_t)v124, qword_1ED2A6060);
    swift_release();
    v86(v87, v78);
  }
  else
  {

    ((void (*)(_BYTE *, uint64_t))v96)(v79, v78);
    sub_1A905FD54((uint64_t)v106, &qword_1ED2AD3D0);
    (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v112, v61);
    sub_1A905FD54((uint64_t)v124, qword_1ED2A6060);
    swift_release();
  }
  v105(v98, v101, v61);
  return swift_storeEnumTagMultiPayload();
}

void sub_1A9339BB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v13[4];

  v13[0] = a1;
  v13[1] = a2;
  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = objc_msgSend(v11, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13[2] = 0x697365722E706D74;
  v13[3] = 0xEB000000002E657ALL;
  __asm { BR              X10 }
}

uint64_t sub_1A9339D4C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return v0(v2, v1);
}

uint64_t sub_1A9339DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE368);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE370);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB97E8);
  v8 = MEMORY[0x1E0C95950];
  sub_1A9066D74(&qword_1EEABE378, &qword_1EEAB97E8, MEMORY[0x1E0C95950]);
  sub_1A93F7B84();
  v9 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE380);
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v10 + 16) = v11;
  *(_BYTE *)(v10 + 24) = 1;
  *(_OWORD *)(v10 + 32) = xmmword_1A9411140;
  *(_BYTE *)(v10 + 48) = 2;
  *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 144)) = MEMORY[0x1E0DEE9D8];
  sub_1A9062F08((uint64_t)v3, v10 + *(_QWORD *)(*(_QWORD *)v10 + 136), &qword_1EEABE368);
  sub_1A9066D74(&qword_1EEABE388, &qword_1EEABE370, v8);
  sub_1A9066D74(&qword_1EEABE390, &qword_1EEABE380, (uint64_t)&protocol conformance descriptor for RepublishingValueSubject<A, B>);
  v12 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE398);
  sub_1A9066D74(&qword_1EEABE3A0, &qword_1EEABE398, MEMORY[0x1E0C95C98]);
  v13 = sub_1A93F79F8();
  swift_release();
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE3A8);
  sub_1A9066D74(&qword_1EEABE3B0, &qword_1EEABE3A8, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  return swift_release();
}

uint64_t sub_1A933A0C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  v15[1] = a2;
  v15[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE028);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE130);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE108);
  sub_1A9066D74(&qword_1EEABE138, &qword_1EEABE108, MEMORY[0x1E0C957C0]);
  sub_1A93F7B84();
  v9 = type metadata accessor for ArtworkContent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE140);
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v10 + 16) = v11;
  *(_BYTE *)(v10 + 24) = 1;
  *(_OWORD *)(v10 + 32) = xmmword_1A9411140;
  *(_BYTE *)(v10 + 48) = 2;
  *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 144)) = MEMORY[0x1E0DEE9D8];
  sub_1A9062F08((uint64_t)v4, v10 + *(_QWORD *)(*(_QWORD *)v10 + 136), &qword_1EEABE028);
  sub_1A9066D74(&qword_1EEABE148, &qword_1EEABE130, MEMORY[0x1E0C95950]);
  sub_1A9066D74(&qword_1EEABE150, &qword_1EEABE140, (uint64_t)&protocol conformance descriptor for RepublishingValueSubject<A, B>);
  v12 = sub_1A93F7CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE158);
  sub_1A9066D74(&qword_1EEABE160, &qword_1EEABE158, MEMORY[0x1E0C95C98]);
  v13 = sub_1A93F79F8();
  swift_release();
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE168);
  sub_1A9066D74(&qword_1EEABE170, &qword_1EEABE168, MEMORY[0x1E0C95768]);
  sub_1A93F7B30();
  return swift_release();
}

void *sub_1A933A38C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1A93F8E5C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4129DC](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A933A4AC@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v29 = a4;
  v28 = a3(0);
  v32 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v30 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v31 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_1A9064630(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v12, a3);
    sub_1A9116174((uint64_t)v12, (uint64_t)v9, a3);
    v24 = a1(v9);
    if (v4)
    {
      sub_1A9064714((uint64_t)v9, a3);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v29;
      sub_1A9116174((uint64_t)v9, v29, a3);
      v26 = 0;
      v27 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
    result = sub_1A9064714((uint64_t)v9, a3);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v31)
      goto LABEL_28;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        v22 = *(_QWORD *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v31)
              goto LABEL_28;
            v22 = *(_QWORD *)(v30 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v27 = v28;
      v25 = v29;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A933A758@<X0>(uint64_t (*a1)(__int128 *)@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[16];

  v7 = a2 + 64;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    sub_1A9131434(*(_QWORD *)(a2 + 48) + (i << 8), (uint64_t)v44);
    v40 = v44[12];
    v41 = v44[13];
    v42 = v44[14];
    v43 = v44[15];
    v36 = v44[8];
    v37 = v44[9];
    v38 = v44[10];
    v39 = v44[11];
    v32 = v44[4];
    v33 = v44[5];
    v34 = v44[6];
    v35 = v44[7];
    v28 = v44[0];
    v29 = v44[1];
    v30 = v44[2];
    v31 = v44[3];
    v19 = a1(&v28);
    if (v3)
    {
      sub_1A9131470((uint64_t)&v28);
      return swift_release();
    }
    if ((v19 & 1) != 0)
    {
      result = swift_release();
      v20 = v41;
      a3[12] = v40;
      a3[13] = v20;
      v21 = v43;
      a3[14] = v42;
      a3[15] = v21;
      v22 = v37;
      a3[8] = v36;
      a3[9] = v22;
      v23 = v39;
      a3[10] = v38;
      a3[11] = v23;
      v24 = v33;
      a3[4] = v32;
      a3[5] = v24;
      v25 = v35;
      a3[6] = v34;
      a3[7] = v25;
      v26 = v29;
      *a3 = v28;
      a3[1] = v26;
      v27 = v31;
      a3[2] = v30;
      a3[3] = v27;
      return result;
    }
    result = sub_1A9131470((uint64_t)&v28);
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= v11)
      goto LABEL_28;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_28;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_28;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_28;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_28:
    result = swift_release();
    a3[14] = 0u;
    a3[15] = 0u;
    a3[12] = 0u;
    a3[13] = 0u;
    a3[10] = 0u;
    a3[11] = 0u;
    a3[8] = 0u;
    a3[9] = 0u;
    a3[6] = 0u;
    a3[7] = 0u;
    a3[4] = 0u;
    a3[5] = 0u;
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_28;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A933AA14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int128 v19;
  __int128 v20;
  __int128 v21;
  unsigned __int128 v23;
  _OWORD v24[3];
  __int128 v25;
  _BYTE v26[26];
  _BYTE v27[40];
  _BYTE v28[40];

  v10 = a2(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24[-1] - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v14 = (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v13 + 52)))(a1);
  sub_1A9064630(a1, (uint64_t)v12, a2);
  sub_1A9062170((uint64_t)&v12[*(int *)(v10 + 36)], (uint64_t)v28, &qword_1ED2AD0C0);
  sub_1A9064714((uint64_t)v12, a2);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  *(_QWORD *)&v24[0] = sub_1A93F9474();
  *((_QWORD *)&v24[0] + 1) = v15;
  sub_1A93F810C();
  v16 = v24[0];
  sub_1A9062170((uint64_t)v28, (uint64_t)v27, &qword_1ED2AD0C0);
  *(_QWORD *)&v24[0] = v14;
  sub_1A9062170((uint64_t)v27, (uint64_t)v24 + 8, &qword_1ED2AD0C0);
  *(_QWORD *)&v25 = "FetchFromSource";
  *((_QWORD *)&v25 + 1) = 15;
  v26[0] = 2;
  v26[24] = 0;
  v23 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v19 = v23;
  v18 = v19 >> 64;
  v17 = v19;
  sub_1A905FD54((uint64_t)v27, &qword_1ED2AD0C0);
  *(_OWORD *)&v26[8] = __PAIR128__(v18, v17);
  v26[25] = 0;
  v20 = v25;
  a5[2] = v24[2];
  a5[3] = v20;
  v21 = v24[1];
  *a5 = v24[0];
  a5[1] = v21;
  a5[4] = *(_OWORD *)v26;
  *(_OWORD *)((char *)a5 + 74) = *(_OWORD *)&v26[10];
  sub_1A905FD54((uint64_t)v28, &qword_1ED2AD0C0);
  return swift_release();
}

uint64_t sub_1A933ABF0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v10[40];
  _OWORD v11[3];
  __int128 v12;
  _BYTE v13[26];
  uint64_t v14;
  _BYTE v15[40];

  v4 = (*(uint64_t (**)(void))(a1 + 256))();
  sub_1A9131434(a1, (uint64_t)v11);
  sub_1A9062170((uint64_t)&v14, (uint64_t)v15, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE200);
  *(_QWORD *)&v11[0] = sub_1A93F9474();
  *((_QWORD *)&v11[0] + 1) = v5;
  sub_1A93F810C();
  v6 = v11[0];
  sub_1A9062170((uint64_t)v15, (uint64_t)v10, &qword_1ED2AD0C0);
  *(_QWORD *)&v11[0] = v4;
  sub_1A9062170((uint64_t)v10, (uint64_t)v11 + 8, &qword_1ED2AD0C0);
  *(_QWORD *)&v12 = "FetchFromSource";
  *((_QWORD *)&v12 + 1) = 15;
  v13[0] = 2;
  v13[24] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A905FD54((uint64_t)v10, &qword_1ED2AD0C0);
  *(_OWORD *)&v13[8] = v6;
  v13[25] = 0;
  v7 = v12;
  a2[2] = v11[2];
  a2[3] = v7;
  v8 = v11[1];
  *a2 = v11[0];
  a2[1] = v8;
  a2[4] = *(_OWORD *)v13;
  *(_OWORD *)((char *)a2 + 74) = *(_OWORD *)&v13[10];
  sub_1A905FD54((uint64_t)v15, &qword_1ED2AD0C0);
  return swift_release();
}

uint64_t sub_1A933AD5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[2];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  _UNKNOWN **v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[3];
  uint64_t v85;

  v56[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC78);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE220);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE228);
  v60 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v59 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE230);
  v62 = *(_QWORD *)(v12 - 8);
  v63 = v12;
  MEMORY[0x1E0C80A78](v12);
  v61 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56[0] = type metadata accessor for TTMLRequest();
  v14 = *(_QWORD *)(v56[0] - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v56[0]);
  v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v56 - v18;
  v64 = a1;
  v20 = *a1;
  v21 = *(_QWORD *)(v20 + 16);
  v66 = (uint64_t)v56 - v18;
  if (v21 && (v22 = sub_1A912E83C(a2), (v23 & 1) != 0))
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
    sub_1A9064630(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    sub_1A9062170((uint64_t)&v19[*(int *)(v56[0] + 36)], (uint64_t)&v69, &qword_1ED2AD0C0);
    v85 = v24;
    swift_retain();
    sub_1A9064714((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    if (*((_QWORD *)&v70 + 1))
    {
      sub_1A905D4AC(&v69, (uint64_t)&v80);
      v65 = a2;
      v25 = sub_1A9064630(a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      MEMORY[0x1E0C80A78](v25);
      swift_bridgeObjectRetain();
      sub_1A933A4AC((uint64_t (*)(char *))sub_1A93426E0, v20, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, (uint64_t)v7);
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
      v26 = v56[0];
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v14 + 48))(v7, 1, v56[0]) == 1)
      {
        sub_1A905FD54((uint64_t)v7, &qword_1EEABCC78);
      }
      else
      {
        v78 = v26;
        v79 = &protocol witness table for TTMLRequest;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v77);
        sub_1A9116174((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
        sub_1A905D4AC(&v77, (uint64_t)&v69);
        v47 = __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
        sub_1A9062170((uint64_t)v47 + *(int *)(v26 + 36), (uint64_t)&v67, &qword_1ED2AD0C0);
        if (v68)
        {
          sub_1A905D4AC(&v67, (uint64_t)v74);
          v48 = *((_QWORD *)&v81 + 1);
          v49 = v82;
          __swift_project_boxed_opaque_existential_1(&v80, *((uint64_t *)&v81 + 1));
          v50 = v75;
          v51 = v76;
          __swift_project_boxed_opaque_existential_1(v74, v75);
          v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v50, v51);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v52, v53, v48, v49);
          v26 = v56[0];
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
        }
        else
        {
          sub_1A905FD54((uint64_t)&v67, &qword_1ED2AD0C0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v69);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v80);
      a2 = v65;
      v45 = v85;
    }
    else
    {
      sub_1A905FD54((uint64_t)&v69, &qword_1ED2AD0C0);
      v45 = v85;
      v26 = v56[0];
    }
    v54 = v66;
    sub_1A9064630(a2, v66, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    sub_1A9062170(v54 + *(int *)(v26 + 36), (uint64_t)&v77, &qword_1ED2AD0C0);
    sub_1A9064714(v54, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    sub_1A9062170((uint64_t)&v77, (uint64_t)v74, &qword_1ED2AD0C0);
    *(_QWORD *)&v69 = v45;
    sub_1A9062170((uint64_t)v74, (uint64_t)&v69 + 8, &qword_1ED2AD0C0);
    *(_QWORD *)&v72 = "FromUniquePipeline";
    *((_QWORD *)&v72 + 1) = 18;
    LOBYTE(v73[0]) = 2;
    BYTE8(v73[1]) = 0;
    swift_retain();
    sub_1A905FD54((uint64_t)v74, &qword_1ED2AD0C0);
    *((_QWORD *)&v73[0] + 1) = 0;
    *(_QWORD *)&v73[1] = 0xE000000000000000;
    BYTE9(v73[1]) = 0;
    v82 = v71;
    v83 = v72;
    v80 = v69;
    v81 = v70;
    v84[0] = v73[0];
    *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v73 + 10);
    sub_1A905FD54((uint64_t)&v77, &qword_1ED2AD0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE290);
    sub_1A9066D74(&qword_1EEABE298, &qword_1EEABE290, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v41 = sub_1A93F7B24();
    swift_release();
    sub_1A905FD54((uint64_t)&v80, &qword_1EEABE290);
  }
  else
  {
    v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC60) + 48);
    v65 = a2;
    v28 = *(_QWORD *)(a2 + v27);
    sub_1A9064630(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    v29 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v28;
    sub_1A9116174((uint64_t)v19, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = sub_1A93426BC;
    *(_QWORD *)(v31 + 24) = v30;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = sub_1A93426BC;
    *(_QWORD *)(v32 + 24) = v30;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE208);
    sub_1A9066D74(&qword_1EEABE238, &qword_1EEABE208, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v33 = v59;
    sub_1A93F7B3C();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE240);
    sub_1A9066D74(&qword_1EEABE248, &qword_1EEABE228, MEMORY[0x1E0C957C0]);
    sub_1A93F7B84();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE250);
    v34 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
    v35 = swift_allocObject();
    *(_DWORD *)(v35 + 16) = 0;
    *(_QWORD *)(v34 + 16) = v35;
    *(_BYTE *)(v34 + 24) = 1;
    *(_OWORD *)(v34 + 32) = xmmword_1A9411140;
    *(_BYTE *)(v34 + 48) = 2;
    *(_QWORD *)(v34 + 112) = MEMORY[0x1E0DEE9D8];
    sub_1A9066D74(&qword_1EEABE258, &qword_1EEABE220, MEMORY[0x1E0C95950]);
    sub_1A9066D74(&qword_1EEABE260, &qword_1EEABE250, (uint64_t)&protocol conformance descriptor for RepublishingValueSubject<A, B>);
    *(_OWORD *)(v34 + 56) = 0u;
    *(_OWORD *)(v34 + 72) = 0u;
    *(_OWORD *)(v34 + 88) = 0u;
    *(_QWORD *)(v34 + 104) = 0;
    v36 = v58;
    v37 = sub_1A93F7CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v36);
    *(_QWORD *)&v80 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE268);
    sub_1A9066D74(&qword_1EEABE270, &qword_1EEABE268, MEMORY[0x1E0C95C98]);
    v38 = sub_1A93F79F8();
    swift_release();
    *(_QWORD *)&v80 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE278);
    sub_1A9066D74(&qword_1EEABE280, &qword_1EEABE278, MEMORY[0x1E0C95768]);
    v39 = v61;
    sub_1A93F7B30();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v85);
    sub_1A9066D74(&qword_1EEABE288, &qword_1EEABE230, MEMORY[0x1E0C95708]);
    v40 = v63;
    v41 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v40);
    v42 = v66;
    sub_1A9064630(v65, v66, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    swift_retain();
    v43 = v64;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v80 = *v43;
    *v43 = 0x8000000000000000;
    sub_1A930EE80(v41, v42, isUniquelyReferenced_nonNull_native);
    *v43 = v80;
    swift_bridgeObjectRelease();
    sub_1A9064714(v42, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
    swift_release();
  }
  return v41;
}

uint64_t sub_1A933B6BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD v74[2];
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  _UNKNOWN **v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _OWORD v85[3];
  uint64_t v86;

  v57[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC70);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2D0);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2D8);
  v61 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v60 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2E0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  MEMORY[0x1E0C80A78](v12);
  v62 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57[0] = type metadata accessor for ShazamSignatureRequest();
  v14 = *(_QWORD *)(v57[0] - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v57[0]);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v57 - v18;
  v65 = a1;
  v20 = *a1;
  v21 = *(_QWORD *)(v20 + 16);
  v67 = (uint64_t)v57 - v18;
  if (v21 && (v22 = sub_1A912E820(a2), (v23 & 1) != 0))
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
    sub_1A9064630(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    sub_1A9062170((uint64_t)&v19[*(int *)(v57[0] + 36)], (uint64_t)&v70, &qword_1ED2AD0C0);
    v86 = v24;
    swift_retain();
    sub_1A9064714((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    if (*((_QWORD *)&v71 + 1))
    {
      sub_1A905D4AC(&v70, (uint64_t)&v81);
      v66 = a2;
      v25 = sub_1A9064630(a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      MEMORY[0x1E0C80A78](v25);
      swift_bridgeObjectRetain();
      sub_1A933A4AC((uint64_t (*)(char *))sub_1A93428A0, v20, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, (uint64_t)v7);
      swift_bridgeObjectRelease();
      sub_1A9064714((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
      v26 = v57[0];
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v14 + 48))(v7, 1, v57[0]) == 1)
      {
        sub_1A905FD54((uint64_t)v7, &qword_1EEABCC70);
      }
      else
      {
        v79 = v26;
        v80 = &protocol witness table for ShazamSignatureRequest;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v78);
        sub_1A9116174((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
        sub_1A905D4AC(&v78, (uint64_t)&v70);
        v48 = __swift_project_boxed_opaque_existential_1(&v70, *((uint64_t *)&v71 + 1));
        sub_1A9062170((uint64_t)v48 + *(int *)(v26 + 36), (uint64_t)&v68, &qword_1ED2AD0C0);
        if (v69)
        {
          sub_1A905D4AC(&v68, (uint64_t)v75);
          v49 = *((_QWORD *)&v82 + 1);
          v50 = v83;
          __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
          v51 = v76;
          v52 = v77;
          __swift_project_boxed_opaque_existential_1(v75, v76);
          v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v53, v54, v49, v50);
          v26 = v57[0];
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
        }
        else
        {
          sub_1A905FD54((uint64_t)&v68, &qword_1ED2AD0C0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v70);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v81);
      a2 = v66;
      v46 = v86;
    }
    else
    {
      sub_1A905FD54((uint64_t)&v70, &qword_1ED2AD0C0);
      v46 = v86;
      v26 = v57[0];
    }
    v55 = v67;
    sub_1A9064630(a2, v67, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    sub_1A9062170(v55 + *(int *)(v26 + 36), (uint64_t)&v78, &qword_1ED2AD0C0);
    sub_1A9064714(v55, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    sub_1A9062170((uint64_t)&v78, (uint64_t)v75, &qword_1ED2AD0C0);
    *(_QWORD *)&v70 = v46;
    sub_1A9062170((uint64_t)v75, (uint64_t)&v70 + 8, &qword_1ED2AD0C0);
    *(_QWORD *)&v73 = "FromUniquePipeline";
    *((_QWORD *)&v73 + 1) = 18;
    LOBYTE(v74[0]) = 2;
    BYTE8(v74[1]) = 0;
    swift_retain();
    sub_1A905FD54((uint64_t)v75, &qword_1ED2AD0C0);
    *((_QWORD *)&v74[0] + 1) = 0;
    *(_QWORD *)&v74[1] = 0xE000000000000000;
    BYTE9(v74[1]) = 0;
    v83 = v72;
    v84 = v73;
    v81 = v70;
    v82 = v71;
    v85[0] = v74[0];
    *(_OWORD *)((char *)v85 + 10) = *(_OWORD *)((char *)v74 + 10);
    sub_1A905FD54((uint64_t)&v78, &qword_1ED2AD0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE340);
    sub_1A9066D74(&qword_1EEABE348, &qword_1EEABE340, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v42 = sub_1A93F7B24();
    swift_release();
    sub_1A905FD54((uint64_t)&v81, &qword_1EEABE340);
  }
  else
  {
    v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCC8) + 48);
    v66 = a2;
    v28 = *(_QWORD *)(a2 + v27);
    sub_1A9064630(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    v29 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v28;
    sub_1A9116174((uint64_t)v19, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = sub_1A9342810;
    *(_QWORD *)(v31 + 24) = v30;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = sub_1A9342810;
    *(_QWORD *)(v32 + 24) = v30;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2B8);
    sub_1A9066D74(&qword_1EEABE2E8, &qword_1EEABE2B8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v33 = v60;
    sub_1A93F7B3C();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2F0);
    sub_1A9066D74(&qword_1EEABE2F8, &qword_1EEABE2D8, MEMORY[0x1E0C957C0]);
    sub_1A93F7B84();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE300);
    v34 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
    v35 = swift_allocObject();
    *(_DWORD *)(v35 + 16) = 0;
    *(_QWORD *)(v34 + 16) = v35;
    *(_BYTE *)(v34 + 24) = 1;
    *(_OWORD *)(v34 + 32) = xmmword_1A9411140;
    *(_BYTE *)(v34 + 48) = 2;
    v36 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v34 + 56) = 0;
    *(_QWORD *)(v34 + 64) = v36;
    sub_1A9066D74(&qword_1EEABE308, &qword_1EEABE2D0, MEMORY[0x1E0C95950]);
    sub_1A9066D74(&qword_1EEABE310, &qword_1EEABE300, (uint64_t)&protocol conformance descriptor for RepublishingValueSubject<A, B>);
    v37 = v59;
    v38 = sub_1A93F7CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v37);
    *(_QWORD *)&v81 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE318);
    sub_1A9066D74(&qword_1EEABE320, &qword_1EEABE318, MEMORY[0x1E0C95C98]);
    v39 = sub_1A93F79F8();
    swift_release();
    *(_QWORD *)&v81 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE328);
    sub_1A9072534(0, &qword_1EEAB82E8);
    sub_1A9066D74(&qword_1EEABE330, &qword_1EEABE328, MEMORY[0x1E0C95768]);
    v40 = v62;
    sub_1A93F7B30();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v86);
    sub_1A9066D74(&qword_1EEABE338, &qword_1EEABE2E0, MEMORY[0x1E0C95708]);
    v41 = v64;
    v42 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
    v43 = v67;
    sub_1A9064630(v66, v67, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    swift_retain();
    v44 = v65;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v81 = *v44;
    *v44 = 0x8000000000000000;
    sub_1A930EEA4(v42, v43, isUniquelyReferenced_nonNull_native);
    *v44 = v81;
    swift_bridgeObjectRelease();
    sub_1A9064714(v43, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
    swift_release();
  }
  return v42;
}

uint64_t sub_1A933C020(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  unint64_t v69;
  _QWORD v70[23];
  __int128 v71;
  ValueMetadata *v72;
  _UNKNOWN **v73;
  _QWORD v74[5];
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _OWORD v82[2];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD *v93;

  v57 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE108);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE110);
  v93 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v13 = sub_1A912E8D8((_OWORD *)a2), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    sub_1A9131434(a2, (uint64_t)&v78);
    sub_1A9062170((uint64_t)&v90 + 8, (uint64_t)&v65, &qword_1ED2AD0C0);
    swift_retain();
    sub_1A9131470((uint64_t)&v78);
    if (*((_QWORD *)&v66 + 1))
    {
      sub_1A905D4AC(&v65, (uint64_t)v75);
      v16 = sub_1A9131434(a2, (uint64_t)&v65);
      MEMORY[0x1E0C80A78](v16);
      swift_bridgeObjectRetain();
      sub_1A933A758((uint64_t (*)(__int128 *))sub_1A9341BB4, v12, &v78);
      swift_bridgeObjectRelease();
      sub_1A9131470((uint64_t)&v65);
      if (*((_QWORD *)&v78 + 1))
      {
        v72 = &type metadata for ArtworkRequest;
        v73 = &protocol witness table for ArtworkRequest;
        v17 = (_OWORD *)swift_allocObject();
        *(_QWORD *)&v71 = v17;
        v18 = v90;
        v17[13] = v89;
        v17[14] = v18;
        v19 = v92;
        v17[15] = v91;
        v17[16] = v19;
        v20 = v86;
        v17[9] = v85;
        v17[10] = v20;
        v21 = v88;
        v17[11] = v87;
        v17[12] = v21;
        v22 = v82[1];
        v17[5] = v82[0];
        v17[6] = v22;
        v23 = v84;
        v17[7] = v83;
        v17[8] = v23;
        v24 = v79;
        v17[1] = v78;
        v17[2] = v24;
        v25 = v81;
        v17[3] = v80;
        v17[4] = v25;
        sub_1A905D4AC(&v71, (uint64_t)v74);
        v26 = __swift_project_boxed_opaque_existential_1(v74, v74[3]);
        sub_1A9062170((uint64_t)(v26 + 27), (uint64_t)&v60, &qword_1ED2AD0C0);
        if (v61)
        {
          sub_1A905D4AC(&v60, (uint64_t)v62);
          v27 = v76;
          v28 = v77;
          v93 = __swift_project_boxed_opaque_existential_1(v75, v76);
          v56 = v3;
          v29 = a2;
          v30 = v63;
          v31 = v64;
          __swift_project_boxed_opaque_existential_1(v62, v63);
          v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
          v33 = v31;
          a2 = v29;
          v34 = v32(v30, v33);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v34, v35, v27, v28);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        }
        else
        {
          sub_1A905FD54((uint64_t)&v60, &qword_1ED2AD0C0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
      }
      else
      {
        sub_1A905FD54((uint64_t)&v78, &qword_1EEABE128);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    }
    else
    {
      sub_1A905FD54((uint64_t)&v65, &qword_1ED2AD0C0);
    }
    sub_1A9131434(a2, (uint64_t)&v78);
    sub_1A9062170((uint64_t)&v90 + 8, (uint64_t)v75, &qword_1ED2AD0C0);
    sub_1A9131470((uint64_t)&v78);
    sub_1A9062170((uint64_t)v75, (uint64_t)v74, &qword_1ED2AD0C0);
    *(_QWORD *)&v65 = v15;
    sub_1A9062170((uint64_t)v74, (uint64_t)&v65 + 8, &qword_1ED2AD0C0);
    *(_QWORD *)&v68 = "FromUniquePipeline";
    *((_QWORD *)&v68 + 1) = 18;
    LOBYTE(v69) = 2;
    LOBYTE(v70[2]) = 0;
    swift_retain();
    sub_1A905FD54((uint64_t)v74, &qword_1ED2AD0C0);
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    BYTE1(v70[2]) = 0;
    v80 = v67;
    v81 = v68;
    v78 = v65;
    v79 = v66;
    v82[0] = v69;
    *(_OWORD *)((char *)v82 + 10) = *(_OWORD *)((char *)v70 + 2);
    sub_1A905FD54((uint64_t)v75, &qword_1ED2AD0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE088);
    sub_1A9066D74(&qword_1EEABE090, &qword_1EEABE088, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v50 = sub_1A93F7B24();
    swift_release();
    sub_1A905FD54((uint64_t)&v78, &qword_1EEABE088);
  }
  else
  {
    v36 = *(_QWORD *)(a2 + 2200);
    sub_1A9131434(a2, (uint64_t)&v78);
    v37 = swift_allocObject();
    v55 = a2;
    v38 = v37;
    v39 = v90;
    *(_OWORD *)(v37 + 216) = v89;
    *(_OWORD *)(v37 + 232) = v39;
    v40 = v92;
    *(_OWORD *)(v37 + 248) = v91;
    *(_OWORD *)(v37 + 264) = v40;
    v41 = v86;
    *(_OWORD *)(v37 + 152) = v85;
    *(_OWORD *)(v37 + 168) = v41;
    v42 = v88;
    *(_OWORD *)(v37 + 184) = v87;
    *(_OWORD *)(v37 + 200) = v42;
    v43 = v82[1];
    *(_OWORD *)(v37 + 88) = v82[0];
    *(_OWORD *)(v37 + 104) = v43;
    v44 = v84;
    *(_OWORD *)(v37 + 120) = v83;
    *(_OWORD *)(v37 + 136) = v44;
    v45 = v79;
    *(_OWORD *)(v37 + 24) = v78;
    *(_OWORD *)(v37 + 40) = v45;
    v46 = v81;
    *(_OWORD *)(v37 + 56) = v80;
    *(_QWORD *)(v37 + 16) = v36;
    *(_OWORD *)(v37 + 72) = v46;
    v47 = swift_allocObject();
    v54 = v9;
    *(_QWORD *)(v47 + 16) = sub_1A9341B74;
    *(_QWORD *)(v47 + 24) = v38;
    v48 = swift_allocObject();
    v56 = v3;
    *(_QWORD *)(v48 + 16) = sub_1A9341B74;
    *(_QWORD *)(v48 + 24) = v38;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0F8);
    sub_1A9066D74(&qword_1EEABE118, &qword_1EEABE0F8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    sub_1A93F7B3C();
    swift_release();
    swift_release();
    sub_1A933A0C0((uint64_t)sub_1A933D8B4, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
    sub_1A9066D74(&qword_1EEABE120, &qword_1EEABE110, MEMORY[0x1E0C95708]);
    v49 = v54;
    v50 = sub_1A93F7B24();
    ((void (*)(char *, uint64_t))v93[1])(v11, v49);
    sub_1A9131434(v55, (uint64_t)&v78);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v65 = *a1;
    *a1 = 0x8000000000000000;
    sub_1A930F940(v50, &v78, isUniquelyReferenced_nonNull_native);
    *a1 = v65;
    swift_bridgeObjectRelease();
    sub_1A9131470((uint64_t)&v78);
    swift_release();
  }
  return v50;
}

uint64_t sub_1A933C6C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  unint64_t v69;
  _QWORD v70[23];
  __int128 v71;
  ValueMetadata *v72;
  _UNKNOWN **v73;
  _QWORD v74[5];
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _OWORD v82[2];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD *v93;

  v57 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE108);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE110);
  v93 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v13 = sub_1A912E8D8((_OWORD *)a2), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    sub_1A9131434(a2, (uint64_t)&v78);
    sub_1A9062170((uint64_t)&v90 + 8, (uint64_t)&v65, &qword_1ED2AD0C0);
    swift_retain();
    sub_1A9131470((uint64_t)&v78);
    if (*((_QWORD *)&v66 + 1))
    {
      sub_1A905D4AC(&v65, (uint64_t)v75);
      v16 = sub_1A9131434(a2, (uint64_t)&v65);
      MEMORY[0x1E0C80A78](v16);
      swift_bridgeObjectRetain();
      sub_1A933A758((uint64_t (*)(__int128 *))sub_1A9342A48, v12, &v78);
      swift_bridgeObjectRelease();
      sub_1A9131470((uint64_t)&v65);
      if (*((_QWORD *)&v78 + 1))
      {
        v72 = &type metadata for ArtworkRequest;
        v73 = &protocol witness table for ArtworkRequest;
        v17 = (_OWORD *)swift_allocObject();
        *(_QWORD *)&v71 = v17;
        v18 = v90;
        v17[13] = v89;
        v17[14] = v18;
        v19 = v92;
        v17[15] = v91;
        v17[16] = v19;
        v20 = v86;
        v17[9] = v85;
        v17[10] = v20;
        v21 = v88;
        v17[11] = v87;
        v17[12] = v21;
        v22 = v82[1];
        v17[5] = v82[0];
        v17[6] = v22;
        v23 = v84;
        v17[7] = v83;
        v17[8] = v23;
        v24 = v79;
        v17[1] = v78;
        v17[2] = v24;
        v25 = v81;
        v17[3] = v80;
        v17[4] = v25;
        sub_1A905D4AC(&v71, (uint64_t)v74);
        v26 = __swift_project_boxed_opaque_existential_1(v74, v74[3]);
        sub_1A9062170((uint64_t)(v26 + 27), (uint64_t)&v60, &qword_1ED2AD0C0);
        if (v61)
        {
          sub_1A905D4AC(&v60, (uint64_t)v62);
          v27 = v76;
          v28 = v77;
          v93 = __swift_project_boxed_opaque_existential_1(v75, v76);
          v56 = v3;
          v29 = a2;
          v30 = v63;
          v31 = v64;
          __swift_project_boxed_opaque_existential_1(v62, v63);
          v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
          v33 = v31;
          a2 = v29;
          v34 = v32(v30, v33);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v34, v35, v27, v28);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        }
        else
        {
          sub_1A905FD54((uint64_t)&v60, &qword_1ED2AD0C0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
      }
      else
      {
        sub_1A905FD54((uint64_t)&v78, &qword_1EEABE128);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    }
    else
    {
      sub_1A905FD54((uint64_t)&v65, &qword_1ED2AD0C0);
    }
    sub_1A9131434(a2, (uint64_t)&v78);
    sub_1A9062170((uint64_t)&v90 + 8, (uint64_t)v75, &qword_1ED2AD0C0);
    sub_1A9131470((uint64_t)&v78);
    sub_1A9062170((uint64_t)v75, (uint64_t)v74, &qword_1ED2AD0C0);
    *(_QWORD *)&v65 = v15;
    sub_1A9062170((uint64_t)v74, (uint64_t)&v65 + 8, &qword_1ED2AD0C0);
    *(_QWORD *)&v68 = "FromUniquePipeline";
    *((_QWORD *)&v68 + 1) = 18;
    LOBYTE(v69) = 2;
    LOBYTE(v70[2]) = 0;
    swift_retain();
    sub_1A905FD54((uint64_t)v74, &qword_1ED2AD0C0);
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    BYTE1(v70[2]) = 0;
    v80 = v67;
    v81 = v68;
    v78 = v65;
    v79 = v66;
    v82[0] = v69;
    *(_OWORD *)((char *)v82 + 10) = *(_OWORD *)((char *)v70 + 2);
    sub_1A905FD54((uint64_t)v75, &qword_1ED2AD0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE088);
    sub_1A9066D74(&qword_1EEABE090, &qword_1EEABE088, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v50 = sub_1A93F7B24();
    swift_release();
    sub_1A905FD54((uint64_t)&v78, &qword_1EEABE088);
  }
  else
  {
    v36 = *(_QWORD *)(a2 + 1344);
    sub_1A9131434(a2, (uint64_t)&v78);
    v37 = swift_allocObject();
    v55 = a2;
    v38 = v37;
    v39 = v90;
    *(_OWORD *)(v37 + 216) = v89;
    *(_OWORD *)(v37 + 232) = v39;
    v40 = v92;
    *(_OWORD *)(v37 + 248) = v91;
    *(_OWORD *)(v37 + 264) = v40;
    v41 = v86;
    *(_OWORD *)(v37 + 152) = v85;
    *(_OWORD *)(v37 + 168) = v41;
    v42 = v88;
    *(_OWORD *)(v37 + 184) = v87;
    *(_OWORD *)(v37 + 200) = v42;
    v43 = v82[1];
    *(_OWORD *)(v37 + 88) = v82[0];
    *(_OWORD *)(v37 + 104) = v43;
    v44 = v84;
    *(_OWORD *)(v37 + 120) = v83;
    *(_OWORD *)(v37 + 136) = v44;
    v45 = v79;
    *(_OWORD *)(v37 + 24) = v78;
    *(_OWORD *)(v37 + 40) = v45;
    v46 = v81;
    *(_OWORD *)(v37 + 56) = v80;
    *(_QWORD *)(v37 + 16) = v36;
    *(_OWORD *)(v37 + 72) = v46;
    v47 = swift_allocObject();
    v54 = v9;
    *(_QWORD *)(v47 + 16) = sub_1A9342A88;
    *(_QWORD *)(v47 + 24) = v38;
    v48 = swift_allocObject();
    v56 = v3;
    *(_QWORD *)(v48 + 16) = sub_1A9342A88;
    *(_QWORD *)(v48 + 24) = v38;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0F8);
    sub_1A9066D74(&qword_1EEABE118, &qword_1EEABE0F8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    sub_1A93F7B3C();
    swift_release();
    swift_release();
    sub_1A933A0C0((uint64_t)sub_1A9342A80, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
    sub_1A9066D74(&qword_1EEABE120, &qword_1EEABE110, MEMORY[0x1E0C95708]);
    v49 = v54;
    v50 = sub_1A93F7B24();
    ((void (*)(char *, uint64_t))v93[1])(v11, v49);
    sub_1A9131434(v55, (uint64_t)&v78);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v65 = *a1;
    *a1 = 0x8000000000000000;
    sub_1A930F940(v50, &v78, isUniquelyReferenced_nonNull_native);
    *a1 = v65;
    swift_bridgeObjectRelease();
    sub_1A9131470((uint64_t)&v78);
    swift_release();
  }
  return v50;
}

uint64_t sub_1A933CD60(os_unfair_lock_s *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), void (*a5)(void), void (*a6)(uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t *v15;
  _BYTE v17[16];

  v12 = a3(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v17[-v13];
  sub_1A9064630(a2, (uint64_t)&v17[-v13], a3);
  v15 = (uint64_t *)&a1[4];
  a1 += 6;
  os_unfair_lock_lock(a1);
  sub_1A933CEA0(v15, (uint64_t)v14, a4, a5, a3, a6);
  os_unfair_lock_unlock(a1);
  return sub_1A9064714((uint64_t)v14, a3);
}

uint64_t sub_1A933CE34(os_unfair_lock_s *a1, uint64_t a2)
{
  uint64_t *v3;
  _OWORD v5[16];

  sub_1A9131434(a2, (uint64_t)v5);
  v3 = (uint64_t *)&a1[4];
  a1 += 6;
  os_unfair_lock_lock(a1);
  sub_1A933CF98(v3, v5);
  os_unfair_lock_unlock(a1);
  return sub_1A9131470((uint64_t)v5);
}

uint64_t sub_1A933CEA0(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void), uint64_t (*a5)(_QWORD), void (*a6)(uint64_t, uint64_t))
{
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRetain();
  v12 = a3(a2);
  v14 = v13;
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *a1;
    v20 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a4();
      v17 = v20;
    }
    v18 = *(_QWORD *)(v17 + 48);
    v19 = a5(0);
    sub_1A9064714(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v12, a5);
    a6(v12, v17);
    *a1 = v17;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A933CF98(uint64_t *a1, _OWORD *a2)
{
  unint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRetain();
  v4 = sub_1A912E8D8(a2);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *a1;
    v10 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A930B1D0();
      v9 = v10;
    }
    sub_1A9131470(*(_QWORD *)(v9 + 48) + (v4 << 8));
    sub_1A91ABE38(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A933D05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  id *v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47[6];
  _QWORD v48[27];
  uint64_t v49;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0E8);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v38 - v7;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v43 = (uint64_t)&v38 - v12;
  v13 = v0 + 8;
  v39 = v0 + 8;
  sub_1A933EBA4(v48);
  v14 = *(os_unfair_lock_s **)(v0 + 2208);
  v15 = (id *)v0;
  v38 = v0;
  v16 = (uint64_t *)&v14[4];
  v17 = v14 + 6;
  os_unfair_lock_lock(v14 + 6);
  v18 = sub_1A933C020(v16, v13, (uint64_t)v48);
  os_unfair_lock_unlock(v17);
  sub_1A905FD54((uint64_t)v48, &qword_1EEABE0F8);
  v48[0] = v18;
  v47[0] = *v15;
  v19 = v47[0];
  v20 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
  v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAD0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&qword_1ED2ABAC8, &qword_1ED2ABAD0, MEMORY[0x1E0C95D90]);
  sub_1A90C0B34((unint64_t *)&qword_1ED2A1C90, (unint64_t *)&qword_1ED2AD6C0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v22 = v44;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v3, &qword_1ED2A1C88);

  swift_release();
  sub_1A9131434(v39, (uint64_t)v48);
  sub_1A9062170((uint64_t)&v49, (uint64_t)v47, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v48);
  v23 = sub_1A93F8898();
  v25 = v24;
  v26 = v40;
  v27 = v41;
  v28 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29 = v42;
  v28(v40, v22, v42);
  sub_1A9062170((uint64_t)v47, (uint64_t)v48, &qword_1ED2AD0C0);
  v28(v10, v26, v29);
  sub_1A9062170((uint64_t)v48, (uint64_t)&v10[v8[9]], &qword_1ED2AD0C0);
  v30 = &v10[v8[10]];
  *(_QWORD *)v30 = "QueueHop";
  *((_QWORD *)v30 + 1) = 8;
  v30[16] = 2;
  v10[v8[12]] = 0;
  v45 = v23;
  v46 = v25;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v31 = v45;
  v32 = v46;
  sub_1A905FD54((uint64_t)v48, &qword_1ED2AD0C0);
  v33 = *(void (**)(char *, uint64_t))(v27 + 8);
  v33(v26, v29);
  v34 = &v10[v8[11]];
  *(_QWORD *)v34 = v31;
  *((_QWORD *)v34 + 1) = v32;
  v10[v8[13]] = 0;
  v35 = v43;
  sub_1A9062F08((uint64_t)v10, v43, &qword_1EEABE0F0);
  sub_1A905FD54((uint64_t)v47, &qword_1ED2AD0C0);
  v33(v44, v29);
  sub_1A9066D74(&qword_1EEABE100, &qword_1EEABE0F0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v36 = sub_1A93F7B24();
  sub_1A905FD54(v35, &qword_1EEABE0F0);
  return v36;
}

uint64_t sub_1A933D470()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  void *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void **v34;
  void **v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[27];
  uint64_t v44;
  id v45[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0E8);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v40 = (char *)&v33 - v7;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE0F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)&v33 - v12;
  v13 = v0;
  v35 = v0;
  v34 = v0 + 1;
  v43[0] = sub_1A93407F4();
  v14 = *v0;
  v45[0] = *v13;
  v15 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
  v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAD0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&qword_1ED2ABAC8, &qword_1ED2ABAD0, MEMORY[0x1E0C95D90]);
  sub_1A90C0B34((unint64_t *)&qword_1ED2A1C90, (unint64_t *)&qword_1ED2AD6C0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v17 = v40;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v3, &qword_1ED2A1C88);

  swift_release();
  sub_1A9131434((uint64_t)v34, (uint64_t)v43);
  sub_1A9062170((uint64_t)&v44, (uint64_t)v45, &qword_1ED2AD0C0);
  sub_1A9131470((uint64_t)v43);
  v18 = sub_1A93F8898();
  v20 = v19;
  v21 = v36;
  v22 = v37;
  v23 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v24 = v38;
  v23(v36, v17, v38);
  sub_1A9062170((uint64_t)v45, (uint64_t)v43, &qword_1ED2AD0C0);
  v23(v10, v21, v24);
  sub_1A9062170((uint64_t)v43, (uint64_t)&v10[v8[9]], &qword_1ED2AD0C0);
  v25 = &v10[v8[10]];
  *(_QWORD *)v25 = "QueueHop";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v10[v8[12]] = 0;
  v41 = v18;
  v42 = v20;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v26 = v41;
  v27 = v42;
  sub_1A905FD54((uint64_t)v43, &qword_1ED2AD0C0);
  v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v21, v24);
  v29 = &v10[v8[11]];
  *(_QWORD *)v29 = v26;
  *((_QWORD *)v29 + 1) = v27;
  v10[v8[13]] = 0;
  v30 = v39;
  sub_1A9062F08((uint64_t)v10, v39, &qword_1EEABE0F0);
  sub_1A905FD54((uint64_t)v45, &qword_1ED2AD0C0);
  v28(v40, v24);
  sub_1A9066D74(&qword_1EEABE100, &qword_1EEABE0F0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v31 = sub_1A93F7B24();
  sub_1A905FD54(v30, &qword_1EEABE0F0);
  return v31;
}

uint64_t sub_1A933D830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A933D848(a1, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptData.TimeBombedURLs, a2);
}

uint64_t sub_1A933D83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A933D848(a1, (uint64_t (*)(_QWORD))type metadata accessor for ArtworkContent, a2);
}

uint64_t sub_1A933D848@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_1A9064630(a1, a3, a2);
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

uint64_t sub_1A933D894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9062170(a1, a2, &qword_1EEABE368);
}

uint64_t sub_1A933D8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9062170(a1, a2, &qword_1EEABE028);
}

uint64_t sub_1A933D8D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[56];

  v2 = v1;
  v45 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC48);
  MEMORY[0x1E0C80A78](v44);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE208);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE210);
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v40 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC60);
  sub_1A933DD44((uint64_t)v8);
  v15 = *(os_unfair_lock_s **)(v1 + *(int *)(v14 + 48));
  v16 = (uint64_t *)&v15[4];
  v17 = v15 + 6;
  os_unfair_lock_lock(v15 + 6);
  v18 = sub_1A933AD5C(v16, v2, (uint64_t)v8);
  os_unfair_lock_unlock(v17);
  sub_1A905FD54((uint64_t)v8, &qword_1EEABE208);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC68);
  v20 = v2 + v19[20];
  v21 = v2 + v19[19];
  LOBYTE(v14) = *(_BYTE *)(v2 + v19[21]);
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 56);
  v24 = (uint64_t)v13 + v9[13];
  v46 = *(_OWORD *)(v21 + 8);
  v25 = *(_OWORD *)(v21 + 40);
  v47 = *(_OWORD *)(v21 + 24);
  v48 = v25;
  sub_1A9064630(v20, v24, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  *v13 = v18;
  v26 = (char *)v13 + v9[14];
  *(_QWORD *)v26 = v22;
  *(_OWORD *)(v26 + 8) = v46;
  *(_OWORD *)(v26 + 24) = v47;
  *(_OWORD *)(v26 + 40) = v48;
  *((_QWORD *)v26 + 7) = v23;
  *((_BYTE *)v13 + v9[15]) = v14;
  *((_BYTE *)v13 + v9[16]) = 0;
  sub_1A9064630(v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9062170((uint64_t)&v5[*(int *)(v41 + 36)], (uint64_t)v56, &qword_1ED2AD0C0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A9064714((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v27 = *(_QWORD *)(v21 + 56);
  v51 = *(_QWORD *)v21;
  v28 = *(_OWORD *)(v21 + 8);
  v47 = *(_OWORD *)(v21 + 24);
  v52 = v28;
  v53 = v47;
  v48 = *(_OWORD *)(v21 + 40);
  v54 = v48;
  v55 = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE218);
  v51 = sub_1A93F8094();
  *(_QWORD *)&v52 = v29;
  sub_1A93F810C();
  v31 = v51;
  v30 = v52;
  v32 = v43;
  sub_1A9062170((uint64_t)v13, v43, &qword_1EEABE210);
  sub_1A9062170((uint64_t)v56, (uint64_t)&v51, &qword_1ED2AD0C0);
  v33 = v42;
  sub_1A9062170(v32, v42, &qword_1EEABE210);
  v34 = (int *)v44;
  sub_1A9062170((uint64_t)&v51, v33 + *(int *)(v44 + 36), &qword_1ED2AD0C0);
  v35 = v33 + v34[10];
  *(_QWORD *)v35 = "Cache";
  *(_QWORD *)(v35 + 8) = 5;
  *(_BYTE *)(v35 + 16) = 2;
  *(_BYTE *)(v33 + v34[12]) = 0;
  v49 = v31;
  v50 = v30;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v36 = v49;
  v37 = v50;
  sub_1A905FD54((uint64_t)&v51, &qword_1ED2AD0C0);
  sub_1A905FD54(v32, &qword_1EEABE210);
  v38 = (uint64_t *)(v33 + v34[11]);
  *v38 = v36;
  v38[1] = v37;
  *(_BYTE *)(v33 + v34[13]) = 0;
  sub_1A9062F08(v33, v45, &qword_1EEABCC48);
  sub_1A905FD54((uint64_t)v56, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)v13, &qword_1EEABE210);
}

uint64_t sub_1A933DD44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  __int128 v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _BYTE v57[48];

  v47 = a1;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE208);
  MEMORY[0x1E0C80A78](v46);
  v45 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC50);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2A0);
  v8 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2A8);
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1A9062170(v1, (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EEABCC50);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = swift_allocObject();
  sub_1A9062F08((uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, &qword_1EEABCC50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE290);
  sub_1A9066D74(&qword_1EEABE298, &qword_1EEABE290, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7AAC();
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC58);
  v19 = v1 + v18[20];
  v20 = v1 + v18[19];
  LOBYTE(v16) = *(_BYTE *)(v1 + v18[21]);
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 56);
  v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v40 = *(_OWORD *)(v20 + 8);
  v24 = *(_OWORD *)(v20 + 40);
  v48 = *(_OWORD *)(v20 + 24);
  v49 = v24;
  v23(v15, v10, v7);
  sub_1A9064630(v19, (uint64_t)&v15[v11[13]], (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v25 = &v15[v11[14]];
  *(_QWORD *)v25 = v21;
  *(_OWORD *)(v25 + 8) = v40;
  *(_OWORD *)(v25 + 24) = v48;
  *(_OWORD *)(v25 + 40) = v49;
  *((_QWORD *)v25 + 7) = v22;
  v15[v11[15]] = v16;
  v15[v11[16]] = 0;
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v10, v41);
  v27 = v42;
  sub_1A9064630(v19, v42, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9062170(v27 + *(int *)(v43 + 36), (uint64_t)v57, &qword_1ED2AD0C0);
  sub_1A9064714(v27, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v28 = *(_QWORD *)(v20 + 56);
  v52 = *(_QWORD *)v20;
  v53 = *(_OWORD *)(v20 + 8);
  v48 = *(_OWORD *)(v20 + 24);
  v54 = v48;
  v49 = *(_OWORD *)(v20 + 40);
  v55 = v49;
  v56 = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE218);
  v52 = sub_1A93F8094();
  *(_QWORD *)&v53 = v29;
  sub_1A93F810C();
  v30 = v52;
  v31 = v53;
  v32 = v44;
  sub_1A9062170((uint64_t)v15, v44, &qword_1EEABE2A8);
  sub_1A9062170((uint64_t)v57, (uint64_t)&v52, &qword_1ED2AD0C0);
  v33 = v45;
  sub_1A9062170(v32, v45, &qword_1EEABE2A8);
  v34 = (int *)v46;
  sub_1A9062170((uint64_t)&v52, v33 + *(int *)(v46 + 36), &qword_1ED2AD0C0);
  v35 = v33 + v34[10];
  *(_QWORD *)v35 = "Cache";
  *(_QWORD *)(v35 + 8) = 5;
  *(_BYTE *)(v35 + 16) = 2;
  *(_BYTE *)(v33 + v34[12]) = 0;
  v50 = v30;
  v51 = v31;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v36 = v50;
  v37 = v51;
  sub_1A905FD54((uint64_t)&v52, &qword_1ED2AD0C0);
  sub_1A905FD54(v32, &qword_1EEABE2A8);
  v38 = (uint64_t *)(v33 + v34[11]);
  *v38 = v36;
  v38[1] = v37;
  *(_BYTE *)(v33 + v34[13]) = 0;
  sub_1A9062F08(v33, v47, &qword_1EEABE208);
  sub_1A905FD54((uint64_t)v57, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)v15, &qword_1EEABE2A8);
}

uint64_t sub_1A933E23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[56];

  v2 = v1;
  v45 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCB0);
  MEMORY[0x1E0C80A78](v44);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2B8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2C0);
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v40 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCC8);
  sub_1A933E6AC((uint64_t)v8);
  v15 = *(os_unfair_lock_s **)(v1 + *(int *)(v14 + 48));
  v16 = (uint64_t *)&v15[4];
  v17 = v15 + 6;
  os_unfair_lock_lock(v15 + 6);
  v18 = sub_1A933B6BC(v16, v2, (uint64_t)v8);
  os_unfair_lock_unlock(v17);
  sub_1A905FD54((uint64_t)v8, &qword_1EEABE2B8);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCD0);
  v20 = v2 + v19[20];
  v21 = v2 + v19[19];
  LOBYTE(v14) = *(_BYTE *)(v2 + v19[21]);
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 56);
  v24 = (uint64_t)v13 + v9[13];
  v46 = *(_OWORD *)(v21 + 8);
  v25 = *(_OWORD *)(v21 + 40);
  v47 = *(_OWORD *)(v21 + 24);
  v48 = v25;
  sub_1A9064630(v20, v24, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  *v13 = v18;
  v26 = (char *)v13 + v9[14];
  *(_QWORD *)v26 = v22;
  *(_OWORD *)(v26 + 8) = v46;
  *(_OWORD *)(v26 + 24) = v47;
  *(_OWORD *)(v26 + 40) = v48;
  *((_QWORD *)v26 + 7) = v23;
  *((_BYTE *)v13 + v9[15]) = v14;
  *((_BYTE *)v13 + v9[16]) = 0;
  sub_1A9064630(v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9062170((uint64_t)&v5[*(int *)(v41 + 36)], (uint64_t)v56, &qword_1ED2AD0C0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A9064714((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v27 = *(_QWORD *)(v21 + 56);
  v51 = *(_QWORD *)v21;
  v28 = *(_OWORD *)(v21 + 8);
  v47 = *(_OWORD *)(v21 + 24);
  v52 = v28;
  v53 = v47;
  v48 = *(_OWORD *)(v21 + 40);
  v54 = v48;
  v55 = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2C8);
  v51 = sub_1A93F8094();
  *(_QWORD *)&v52 = v29;
  sub_1A93F810C();
  v31 = v51;
  v30 = v52;
  v32 = v43;
  sub_1A9062170((uint64_t)v13, v43, &qword_1EEABE2C0);
  sub_1A9062170((uint64_t)v56, (uint64_t)&v51, &qword_1ED2AD0C0);
  v33 = v42;
  sub_1A9062170(v32, v42, &qword_1EEABE2C0);
  v34 = (int *)v44;
  sub_1A9062170((uint64_t)&v51, v33 + *(int *)(v44 + 36), &qword_1ED2AD0C0);
  v35 = v33 + v34[10];
  *(_QWORD *)v35 = "Cache";
  *(_QWORD *)(v35 + 8) = 5;
  *(_BYTE *)(v35 + 16) = 2;
  *(_BYTE *)(v33 + v34[12]) = 0;
  v49 = v31;
  v50 = v30;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v36 = v49;
  v37 = v50;
  sub_1A905FD54((uint64_t)&v51, &qword_1ED2AD0C0);
  sub_1A905FD54(v32, &qword_1EEABE2C0);
  v38 = (uint64_t *)(v33 + v34[11]);
  *v38 = v36;
  v38[1] = v37;
  *(_BYTE *)(v33 + v34[13]) = 0;
  sub_1A9062F08(v33, v45, &qword_1EEABCCB0);
  sub_1A905FD54((uint64_t)v56, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)v13, &qword_1EEABE2C0);
}

uint64_t sub_1A933E6AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  __int128 v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _BYTE v57[48];

  v47 = a1;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2B8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCB8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE350);
  v8 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE358);
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  sub_1A9062170(v1, (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EEABCCB8);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = swift_allocObject();
  sub_1A9062F08((uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, &qword_1EEABCCB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE340);
  sub_1A9066D74(&qword_1EEABE348, &qword_1EEABE340, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7AAC();
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCC0);
  v19 = v1 + v18[20];
  v20 = v1 + v18[19];
  LOBYTE(v16) = *(_BYTE *)(v1 + v18[21]);
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 56);
  v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v40 = *(_OWORD *)(v20 + 8);
  v24 = *(_OWORD *)(v20 + 40);
  v48 = *(_OWORD *)(v20 + 24);
  v49 = v24;
  v23(v15, v10, v7);
  sub_1A9064630(v19, (uint64_t)&v15[v11[13]], (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v25 = &v15[v11[14]];
  *(_QWORD *)v25 = v21;
  *(_OWORD *)(v25 + 8) = v40;
  *(_OWORD *)(v25 + 24) = v48;
  *(_OWORD *)(v25 + 40) = v49;
  *((_QWORD *)v25 + 7) = v22;
  v15[v11[15]] = v16;
  v15[v11[16]] = 0;
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v10, v41);
  v27 = v42;
  sub_1A9064630(v19, v42, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9062170(v27 + *(int *)(v43 + 36), (uint64_t)v57, &qword_1ED2AD0C0);
  sub_1A9064714(v27, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v28 = *(_QWORD *)(v20 + 56);
  v52 = *(_QWORD *)v20;
  v53 = *(_OWORD *)(v20 + 8);
  v48 = *(_OWORD *)(v20 + 24);
  v54 = v48;
  v49 = *(_OWORD *)(v20 + 40);
  v55 = v49;
  v56 = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE2C8);
  v52 = sub_1A93F8094();
  *(_QWORD *)&v53 = v29;
  sub_1A93F810C();
  v30 = v52;
  v31 = v53;
  v32 = v44;
  sub_1A9062170((uint64_t)v15, v44, &qword_1EEABE358);
  sub_1A9062170((uint64_t)v57, (uint64_t)&v52, &qword_1ED2AD0C0);
  v33 = v45;
  sub_1A9062170(v32, v45, &qword_1EEABE358);
  v34 = (int *)v46;
  sub_1A9062170((uint64_t)&v52, v33 + *(int *)(v46 + 36), &qword_1ED2AD0C0);
  v35 = v33 + v34[10];
  *(_QWORD *)v35 = "Cache";
  *(_QWORD *)(v35 + 8) = 5;
  *(_BYTE *)(v35 + 16) = 2;
  *(_BYTE *)(v33 + v34[12]) = 0;
  v50 = v30;
  v51 = v31;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v36 = v50;
  v37 = v51;
  sub_1A905FD54((uint64_t)&v52, &qword_1ED2AD0C0);
  sub_1A905FD54(v32, &qword_1EEABE358);
  v38 = (uint64_t *)(v33 + v34[11]);
  *v38 = v36;
  v38[1] = v37;
  *(_BYTE *)(v33 + v34[13]) = 0;
  sub_1A9062F08(v33, v47, &qword_1EEABE2B8);
  sub_1A905FD54((uint64_t)v57, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)v15, &qword_1EEABE358);
}

uint64_t sub_1A933EBA4@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD __src[46];
  _BYTE v11[40];
  _BYTE v12[280];
  _BYTE v13[40];
  uint64_t v14;
  _QWORD v15[33];
  char v16;
  char v17;

  v3 = sub_1A9338CC0();
  v4 = *(_BYTE *)(v1 + 1936);
  v5 = *(_QWORD *)(v1 + 1672);
  sub_1A9131434(v1 + 1680, (uint64_t)v15);
  v14 = v3;
  v15[32] = v5;
  v16 = v4;
  v17 = 0;
  sub_1A9131434(v1 + 1680, (uint64_t)__src);
  sub_1A9062170((uint64_t)&__src[27], (uint64_t)v13, &qword_1ED2AD0C0);
  swift_retain();
  sub_1A9131470((uint64_t)__src);
  __src[0] = *(_QWORD *)(v1 + 1672);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE178);
  __src[0] = sub_1A93F8094();
  __src[1] = v6;
  sub_1A93F810C();
  v7 = __src[0];
  v8 = __src[1];
  sub_1A9062170((uint64_t)&v14, (uint64_t)v12, &qword_1EEABE180);
  sub_1A9062170((uint64_t)v13, (uint64_t)v11, &qword_1ED2AD0C0);
  sub_1A9062170((uint64_t)v12, (uint64_t)__src, &qword_1EEABE180);
  sub_1A9062170((uint64_t)v11, (uint64_t)&__src[35], &qword_1ED2AD0C0);
  __src[40] = "Cache";
  __src[41] = 5;
  LOBYTE(__src[42]) = 2;
  LOBYTE(__src[45]) = 0;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A905FD54((uint64_t)v11, &qword_1ED2AD0C0);
  sub_1A905FD54((uint64_t)v12, &qword_1EEABE180);
  __src[43] = v7;
  __src[44] = v8;
  BYTE1(__src[45]) = 0;
  memcpy(a1, __src, 0x16AuLL);
  sub_1A905FD54((uint64_t)v13, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)&v14, &qword_1EEABE180);
}

uint64_t sub_1A933ED60@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  _BYTE v20[280];
  _BYTE v21[40];
  _QWORD v22[102];
  uint64_t v23;
  _QWORD v24[33];
  char v25;
  char v26;

  v2 = v1;
  v16 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE188);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1A933D470();
  sub_1A9062170(v1, (uint64_t)v22, &qword_1EEABE050);
  v7 = swift_allocObject();
  memcpy((void *)(v7 + 16), v22, 0x32AuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABAD0);
  type metadata accessor for ArtworkContent();
  sub_1A9066D74((unint64_t *)&qword_1ED2ABAC8, &qword_1ED2ABAD0, MEMORY[0x1E0C95D90]);
  sub_1A93F7C20();
  swift_release();
  swift_release();
  sub_1A9066D74(&qword_1EEABE1B0, &qword_1EEABE188, MEMORY[0x1E0C95B48]);
  v8 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v4) = *(_BYTE *)(v2 + 1080);
  v9 = *(_QWORD *)(v2 + 816);
  sub_1A9131434(v2 + 824, (uint64_t)v24);
  v23 = v8;
  v24[32] = v9;
  v25 = v4;
  v26 = 0;
  sub_1A9131434(v2 + 824, (uint64_t)v22);
  sub_1A9062170((uint64_t)&v22[27], (uint64_t)v21, &qword_1ED2AD0C0);
  swift_retain();
  sub_1A9131470((uint64_t)v22);
  v22[0] = *(_QWORD *)(v2 + 816);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABE178);
  v22[0] = sub_1A93F8094();
  v22[1] = v10;
  sub_1A93F810C();
  v11 = v22[0];
  v12 = v22[1];
  sub_1A9062170((uint64_t)&v23, (uint64_t)v20, &qword_1EEABE180);
  sub_1A9062170((uint64_t)v21, (uint64_t)v19, &qword_1ED2AD0C0);
  sub_1A9062170((uint64_t)v20, (uint64_t)v22, &qword_1EEABE180);
  sub_1A9062170((uint64_t)v19, (uint64_t)&v22[35], &qword_1ED2AD0C0);
  v22[40] = "Cache";
  v22[41] = 5;
  LOBYTE(v22[42]) = 2;
  LOBYTE(v22[45]) = 0;
  v17 = v11;
  v18 = v12;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v13 = v17;
  v14 = v18;
  sub_1A905FD54((uint64_t)v19, &qword_1ED2AD0C0);
  sub_1A905FD54((uint64_t)v20, &qword_1EEABE180);
  v22[43] = v13;
  v22[44] = v14;
  BYTE1(v22[45]) = 0;
  memcpy(v16, v22, 0x16AuLL);
  sub_1A905FD54((uint64_t)v21, &qword_1ED2AD0C0);
  return sub_1A905FD54((uint64_t)&v23, &qword_1EEABE180);
}

