uint64_t PendingPlaybackMetadata.withPlayState(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_BYTE *)(v2 + 8);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  v12 = *(_QWORD *)(v2 + 32);
  sub_1A9188C8C(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  return sub_1A9236DC0(v8, v9, v10, v11, v12, 0, (uint64_t)v7, a2);
}

id sub_1A923775C()
{
  return sub_1A9238980(&qword_1EEAB98B8);
}

void *sub_1A9237768()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A5B50);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A92378FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98D0);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9237AA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98C8);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9237C3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD40);
  v6 = *v0;
  v7 = sub_1A93F8C28();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1A9237E60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  void *__src;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9910);
  v28 = v0;
  v1 = *v0;
  v2 = sub_1A93F8C28();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v28 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5)
    result = memmove(result, __src, 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v11)
      goto LABEL_28;
    v26 = *((_QWORD *)__src + v25);
    ++v7;
    if (!v26)
    {
      v7 = v25 + 1;
      if (v25 + 1 >= v11)
        goto LABEL_28;
      v26 = *((_QWORD *)__src + v7);
      if (!v26)
      {
        v7 = v25 + 2;
        if (v25 + 2 >= v11)
          goto LABEL_28;
        v26 = *((_QWORD *)__src + v7);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v10 = (v26 - 1) & v26;
    v13 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    v14 = 72 * v13;
    v15 = *(_QWORD *)(v1 + 48) + v14;
    v16 = *(_QWORD *)(v15 + 8);
    v17 = *(_QWORD *)(v15 + 16);
    v18 = *(_BYTE *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v20 = *(_QWORD *)(v15 + 40);
    v21 = *(_QWORD *)(v15 + 48);
    v22 = *(_QWORD *)(v15 + 56);
    v23 = *(_QWORD *)(v15 + 64);
    v24 = *(_QWORD *)(v3 + 48) + v14;
    *(_QWORD *)v24 = *(_QWORD *)v15;
    *(_QWORD *)(v24 + 8) = v16;
    *(_QWORD *)(v24 + 16) = v17;
    *(_BYTE *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v20;
    *(_QWORD *)(v24 + 48) = v21;
    *(_QWORD *)(v24 + 56) = v22;
    *(_QWORD *)(v24 + 64) = v23;
    swift_bridgeObjectRetain();
    result = (void *)sub_1A9094654(v19, v20, v21);
  }
  v27 = v25 + 3;
  if (v27 >= v11)
    goto LABEL_28;
  v26 = *((_QWORD *)__src + v27);
  if (v26)
  {
    v7 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v7 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v7 >= v11)
      goto LABEL_28;
    v26 = *((_QWORD *)__src + v7);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9238084()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4328);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9238234()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for CategoryModel();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9908);
  v6 = *v0;
  v7 = sub_1A93F8C28();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_1A9064630(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CategoryModel);
    result = (void *)sub_1A915A7C8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1A9238450()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9900);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 9);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v20 = v18;
    *(_BYTE *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 9) = v17;
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A92385FC()
{
  return sub_1A9238980(&qword_1ED2A4340);
}

void *sub_1A9238608()
{
  return sub_1A9238B2C(&qword_1EEAB98F0);
}

void *sub_1A9238614()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E40);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A92387B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4320);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 16) = v20;
    result = (void *)sub_1A9086E60(v18, v19, v20);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A9238974()
{
  return sub_1A9238980(&qword_1EEAB98C0);
}

id sub_1A9238980(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8C28();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9238B20()
{
  return sub_1A9238B2C(&qword_1EEAB98E8);
}

void *sub_1A9238B2C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A93F8C28();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9238CB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98B0);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_QWORD *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 16) = v21;
    result = sub_1A91599C0(v18, v19, v21);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A9238E70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98E0);
  v2 = *v0;
  v3 = sub_1A93F8C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A9239004(uint64_t a1)
{
  return sub_1A90A387C(a1, &qword_1EEAB98B8);
}

uint64_t sub_1A9239010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98D0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v19;
    v20 = v19[1];
    sub_1A93F92DC();
    sub_1A93F92F4();
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      sub_1A93F7FBC();
      swift_bridgeObjectRelease();
    }
    result = sub_1A93F9324();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A92392E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98C8);
  result = sub_1A93F8C34();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1A93F92D0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A9239544()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABD40);
  v7 = sub_1A93F8C34();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1A923B1D8();
    result = sub_1A93F7FA4();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1A9239854()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9910);
  v3 = sub_1A93F8C34();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v8)
      goto LABEL_22;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_22;
      v17 = *(_QWORD *)(v5 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_22;
        v17 = *(_QWORD *)(v5 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v7 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_6:
    v12 = *(_QWORD *)(v2 + 48) + 72 * v11;
    v19[0] = *(_OWORD *)v12;
    v14 = *(_OWORD *)(v12 + 32);
    v13 = *(_OWORD *)(v12 + 48);
    v15 = *(_QWORD *)(v12 + 64);
    v19[1] = *(_OWORD *)(v12 + 16);
    v19[2] = v14;
    v20 = v15;
    v19[3] = v13;
    sub_1A908E2B0(v19);
    sub_1A9329214((uint64_t)v19, v3);
  }
  v18 = v16 + 3;
  if (v18 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v17 = *(_QWORD *)(v5 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1A9239A20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v1 = v0;
  v2 = type metadata accessor for CategoryModel();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9908);
  v7 = sub_1A93F8C34();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v30 = v0;
  v31 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v32 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32)
      goto LABEL_33;
    v20 = *(_QWORD *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_33;
      v20 = *(_QWORD *)(v31 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_33;
        v20 = *(_QWORD *)(v31 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    sub_1A9064630(*(_QWORD *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CategoryModel);
    sub_1A93F92DC();
    sub_1A93F930C();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1A915A7C8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v16 * v22);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v32)
      goto LABEL_33;
    v20 = *(_QWORD *)(v31 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A9239D2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9900);
  v3 = sub_1A93F8C34();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_25;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v15 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v15 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v15 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v15 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v15 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1A923A0A4);
              }
              if (v9 >= v15)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_23;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(_QWORD *)(v2 + 48) + 16 * v7;
        v12 = *(unsigned __int8 *)(v11 + 8);
        v13 = *(unsigned __int8 *)(v11 + 9);
        sub_1A93F92DC();
        sub_1A93F92F4();
        if (v12 != 1)
          sub_1A93F930C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_23:
  result = swift_release_n();
  v1 = v0;
LABEL_25:
  *v1 = v3;
  return result;
}

uint64_t sub_1A923A0B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98F0);
  v3 = sub_1A93F8C34();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1A923A3D4);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1A93F92DC();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_1A923A3E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7E40);
  result = sub_1A93F8C34();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_1A93F92DC();
    sub_1A93F92E8();
    result = sub_1A93F9324();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
    *(_QWORD *)v12 = v19;
    *(_BYTE *)(v12 + 8) = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A923A6A0(uint64_t a1)
{
  return sub_1A90A387C(a1, &qword_1EEAB98C0);
}

uint64_t sub_1A923A6AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98E8);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1A93F92DC();
    sub_1A93F7FBC();
    swift_bridgeObjectRelease();
    result = sub_1A93F9324();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A923A948()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98B0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_40:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v31)
      goto LABEL_38;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_38;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_38;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v20 = *(void **)v18;
    v19 = *(void **)(v18 + 8);
    v21 = *(unsigned __int8 *)(v18 + 16);
    sub_1A93F92DC();
    if (v21)
    {
      sub_1A93F92E8();
      if (v21 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
      }
      else
      {
        v22 = v20;
        sub_1A93F8A48();
        sub_1A9158B44(v20, v19, 2);
      }
    }
    else
    {
      sub_1A93F92E8();
      sub_1A93F930C();
    }
    result = sub_1A93F9324();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v19;
    *(_BYTE *)(v12 + 16) = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_38:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_40;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_38;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A923AC7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB98E0);
  v3 = sub_1A93F8C34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A93F92DC();
    sub_1A93F9444();
    result = sub_1A93F9324();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation23PendingPlaybackMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  char v14;
  char v15;
  _BOOL8 result;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v8 = *(double *)(a1 + 32);
  v7 = *(double *)(a1 + 40);
  v9 = *(double *)(a1 + 48);
  v10 = *(_QWORD *)(a2 + 24);
  v12 = *(double *)(a2 + 32);
  v11 = *(double *)(a2 + 40);
  v13 = *(double *)(a2 + 48);
  if ((v4 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v14 = *(_BYTE *)(a2 + 8);
    else
      v14 = 1;
    if ((v14 & 1) != 0)
      return 0;
  }
  if (!v6)
  {
    if (!v10)
    {
LABEL_17:
      if (v8 != v12 || v7 != v11)
        return 0;
      return v9 == v13;
    }
    return 0;
  }
  if (!v10)
    return 0;
  if (v5 == *(_QWORD *)(a2 + 16) && v6 == v10)
    goto LABEL_17;
  v15 = sub_1A93F90C0();
  result = 0;
  if ((v15 & 1) != 0 && v8 == v12 && v7 == v11)
    return v9 == v13;
  return result;
}

uint64_t method lookup function for PendingPlaybackStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PendingPlaybackStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t initializeWithCopy for PendingPlaybackMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingPlaybackMetadata(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PendingPlaybackMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t storeEnumTagSinglePayload for PendingPlaybackMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_1A923B198(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ACF98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A923B1D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A1F40;
  if (!qword_1ED2A1F40)
  {
    v1 = sub_1A93F73E0();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A1F40);
  }
  return result;
}

uint64_t FeedUpdateRequest.isImplicitActionRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1E0C80A78](updated);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_BYTE *)(v1 + *(int *)(v5 + 36));
  sub_1A90913C0(v1, (uint64_t)v4);
  if ((v6 & 1) != 0)
    v7 = 0;
  else
    v7 = v4[*(int *)(updated + 44)];
  sub_1A9091230((uint64_t)v4);
  return v7;
}

uint64_t FeedUpdateRequest.feedUrlString.getter()
{
  type metadata accessor for FeedUpdateRequest();
  return sub_1A93F7170();
}

uint64_t FeedUpdateRequest.failRequest(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = sub_1A93F7D58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for FeedUpdateRequest();
  v12 = (uint64_t *)(v1 + *(int *)(result + 68));
  v13 = *v12;
  if (*v12)
  {
    v21 = v4;
    v14 = v12[1];
    sub_1A9066C6C();
    swift_retain();
    v15 = sub_1A93F8868();
    v20 = v7;
    v16 = (void *)v15;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v13;
    v17[3] = v14;
    v17[4] = a1;
    aBlock[4] = sub_1A923C0B0;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_32;
    v18 = _Block_copy(aBlock);
    sub_1A90858C0(v13);
    v19 = a1;
    swift_release();
    sub_1A93F7D88();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v10, v6, v18);
    _Block_release(v18);

    sub_1A9085818(v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
  return result;
}

BOOL FeedUpdateRequest.isRetryable.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 52)) & 1) == 0;
}

uint64_t FeedUpdateRequest.copyWithoutCompletion()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *updated;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  _QWORD *v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  updated = (int *)type metadata accessor for FeedUpdateRequest();
  v4 = updated[5];
  v5 = v1 + v4;
  v6 = a1 + v4;
  v7 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  sub_1A906A3F0(v1 + updated[6], a1 + updated[6]);
  v8 = (uint64_t *)(v1 + updated[8]);
  v9 = v8[1];
  v33 = *v8;
  v32 = *(_BYTE *)(v1 + updated[10]);
  v28 = *(_BYTE *)(v1 + updated[11]);
  v29 = *(_BYTE *)(v1 + updated[9]);
  v30 = *(_QWORD *)(v1 + updated[7]);
  v31 = *(_QWORD *)(v1 + updated[12]);
  v10 = updated[14];
  v27 = *(_BYTE *)(v1 + updated[13]);
  v11 = *(_QWORD *)(v1 + v10);
  v12 = *(_QWORD *)(v1 + v10 + 8);
  v13 = updated[16];
  v14 = (uint64_t *)(v1 + updated[15]);
  v16 = *v14;
  v15 = v14[1];
  v18 = *(_QWORD *)(v1 + v13);
  v17 = *(_QWORD *)(v1 + v13 + 8);
  v19 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABD80);
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRetain();
  sub_1A90858C0(v11);
  sub_1A90858C0(v16);
  sub_1A90858C0(v18);
  result = sub_1A93F73D4();
  *(_QWORD *)(a1 + updated[7]) = v30;
  v22 = (_QWORD *)(a1 + updated[8]);
  *v22 = v33;
  v22[1] = v9;
  *(_BYTE *)(a1 + updated[9]) = v29;
  *(_BYTE *)(a1 + updated[10]) = v32;
  *(_BYTE *)(a1 + updated[11]) = v28;
  *(_QWORD *)(a1 + updated[12]) = v31;
  *(_BYTE *)(a1 + updated[13]) = v27;
  v23 = (uint64_t *)(a1 + updated[14]);
  *v23 = v11;
  v23[1] = v12;
  v24 = (uint64_t *)(a1 + updated[15]);
  *v24 = v16;
  v24[1] = v15;
  v25 = (uint64_t *)(a1 + updated[16]);
  *v25 = v18;
  v25[1] = v17;
  v26 = (_QWORD *)(a1 + updated[17]);
  *v26 = 0;
  v26[1] = 0;
  return result;
}

Swift::Void __swiftcall FeedUpdateRequest.endQueueing()()
{
  sub_1A923BA0C((void (*)(os_unfair_lock_s *, uint64_t))sub_1A923BD30);
}

uint64_t FeedUpdateRequest.requestIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A93F73E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeedUpdateRequest.feedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 20);
  v4 = sub_1A93F726C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedUpdateRequest.cloudSyncFeedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 24);
  return sub_1A906A3F0(v3, a1);
}

uint64_t FeedUpdateRequest.podcastStoreId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 28));
}

uint64_t FeedUpdateRequest.triggerBy.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedUpdateRequest.userInitiated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 36));
}

uint64_t FeedUpdateRequest.forceBootstrap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 40));
}

uint64_t FeedUpdateRequest.useBackgroundFetch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 44));
}

uint64_t FeedUpdateRequest.source.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 48));
}

uint64_t FeedUpdateRequest.isSubscribing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 52));
}

uint64_t FeedUpdateRequest.feedDownloadedHook.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 56));
  sub_1A90858C0(v1);
  return v1;
}

uint64_t FeedUpdateRequest.preProcessFeedHook.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  sub_1A90858C0(v1);
  return v1;
}

uint64_t FeedUpdateRequest.postProcessFeedHook.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  sub_1A90858C0(v1);
  return v1;
}

uint64_t FeedUpdateRequest.completion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedUpdateRequest() + 68));
  sub_1A90858C0(v1);
  return v1;
}

void sub_1A923B9AC(void *a1, char a2, void (*a3)(BOOL, void *))
{
  void *v5;
  id v6;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v6 = a1;
  }
  else
  {
    v5 = 0;
  }
  a3((a2 & 1) == 0, v5);

}

Swift::Void __swiftcall FeedUpdateRequest.beginQueueing()()
{
  sub_1A923BA0C((void (*)(os_unfair_lock_s *, uint64_t))sub_1A923BA6C);
}

void sub_1A923BA0C(void (*a1)(os_unfair_lock_s *, uint64_t))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 72));
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  a1(v4, v1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1A923BA6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void (*v14)(char *, char *, uint64_t);
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_signpost_id_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  swift_release();
  v29 = sub_1A93F73A4();
  v11 = v10;
  if (qword_1ED2A8670 != -1)
    swift_once();
  v12 = sub_1A93F762C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A8658);
  swift_bridgeObjectRetain();
  sub_1A93F75F0();
  v13 = sub_1A93F7620();
  v28 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v24 = v4;
    v25 = v14;
    v14(v6, v9, v3);
    v27 = v1;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v26 = a1;
    v17 = v16;
    v31 = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v30 = sub_1A906436C(v29, v11, &v31);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    v18 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v13, (os_signpost_type_t)v28, v18, "QueueFeedUpdateRequest", "[identifier=%{name=identifier}s] BEGIN", v15, 0xCu);
    swift_arrayDestroy();
    v19 = v17;
    a1 = v26;
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);

    v20 = v24;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
    v25(v6, v9, v3);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v20 = v4;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  }
  sub_1A93F765C();
  swift_allocObject();
  v21 = sub_1A93F7650();
  result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v3);
  *a1 = v21;
  return result;
}

void sub_1A923BD30(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  os_log_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  const char *v26;
  os_log_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_1A93F7638();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F75FC();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v33 = a1;
  if (*a1)
  {
    v30 = v10;
    v31 = v1;
    v32 = v9;
    v29 = sub_1A93F73A4();
    v14 = v13;
    if (qword_1ED2A8670 != -1)
      swift_once();
    v15 = sub_1A93F762C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A8658);
    swift_bridgeObjectRetain();
    v16 = sub_1A93F7620();
    sub_1A93F7644();
    v28 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      v27 = v16;
      swift_retain();
      sub_1A93F7668();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x1E0DF2190])
      {
        v17 = 0;
        v18 = 0;
        v26 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v26 = "[identifier=%{name=identifier}s] END";
        v18 = 2;
        v17 = 1;
      }
      v19 = v30;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, v12, v7);
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v35 = v21;
      *(_BYTE *)v20 = v18;
      *(_BYTE *)(v20 + 1) = v17;
      *(_WORD *)(v20 + 2) = 2080;
      swift_bridgeObjectRetain();
      v34 = sub_1A906436C(v29, v14, &v35);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      v22 = sub_1A93F75E4();
      v23 = v27;
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v27, (os_signpost_type_t)v28, v22, "QueueFeedUpdateRequest", v26, (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v21, -1, -1);
      MEMORY[0x1AF41411C](v20, -1, -1);

      v24 = *(void (**)(char *, uint64_t))(v32 + 8);
      v24(v12, v7);
      swift_release();
      v24(v19, v7);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v7);
      swift_release();
    }
  }
  *v33 = 0;
}

uint64_t sub_1A923C084()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A923C0B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
}

uint64_t sub_1A923C0DC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A923C100(void *a1, char a2)
{
  uint64_t v2;

  sub_1A923B9AC(a1, a2 & 1, *(void (**)(BOOL, void *))(v2 + 16));
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedUpdateRequest(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A93F73E0();
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1A93F726C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *v20 = *(_QWORD *)v21;
    v20[1] = v22;
    v23 = a3[10];
    *((_BYTE *)a1 + a3[9]) = a2[a3[9]];
    *((_BYTE *)a1 + v23) = a2[v23];
    v24 = a3[12];
    *((_BYTE *)a1 + a3[11]) = a2[a3[11]];
    *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)&a2[v24];
    v25 = a3[14];
    *((_BYTE *)a1 + a3[13]) = a2[a3[13]];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = &a2[v25];
    v28 = *(_QWORD *)&a2[v25];
    swift_bridgeObjectRetain();
    if (v28)
    {
      v29 = *((_QWORD *)v27 + 1);
      *v26 = v28;
      v26[1] = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    v30 = a3[15];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = &a2[v30];
    if (*(_QWORD *)v32)
    {
      v33 = *((_QWORD *)v32 + 1);
      *v31 = *(_QWORD *)v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    v34 = a3[16];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = &a2[v34];
    if (*(_QWORD *)v36)
    {
      v37 = *((_QWORD *)v36 + 1);
      *v35 = *(_QWORD *)v36;
      v35[1] = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
    }
    v38 = a3[17];
    v39 = (_QWORD *)((char *)a1 + v38);
    v40 = &a2[v38];
    if (*(_QWORD *)v40)
    {
      v41 = *((_QWORD *)v40 + 1);
      *v39 = *(_QWORD *)v40;
      v39[1] = v41;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)&a2[a3[18]];
  }
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v23 = a3[14];
  v24 = (_QWORD *)(a1 + v23);
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a1 + v23);
  v27 = *(_QWORD *)(a2 + v23);
  if (v26)
  {
    if (v27)
    {
      v28 = *(_QWORD *)(v25 + 8);
      *v24 = v27;
      v24[1] = v28;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = *(_QWORD *)(v25 + 8);
    *v24 = v27;
    v24[1] = v29;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_14:
  v30 = a3[15];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  v34 = *(_QWORD *)(a2 + v30);
  if (v33)
  {
    if (v34)
    {
      v35 = *(_QWORD *)(v32 + 8);
      *v31 = v34;
      v31[1] = v35;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = *(_QWORD *)(v32 + 8);
    *v31 = v34;
    v31[1] = v36;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)v31 = *(_OWORD *)v32;
LABEL_21:
  v37 = a3[16];
  v38 = (_QWORD *)(a1 + v37);
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a1 + v37);
  v41 = *(_QWORD *)(a2 + v37);
  if (v40)
  {
    if (v41)
    {
      v42 = *(_QWORD *)(v39 + 8);
      *v38 = v41;
      v38[1] = v42;
      swift_retain();
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v41)
  {
    v43 = *(_QWORD *)(v39 + 8);
    *v38 = v41;
    v38[1] = v43;
    swift_retain();
    goto LABEL_28;
  }
  *(_OWORD *)v38 = *(_OWORD *)v39;
LABEL_28:
  v44 = a3[17];
  v45 = (_QWORD *)(a1 + v44);
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a1 + v44);
  v48 = *(_QWORD *)(a2 + v44);
  if (!v47)
  {
    if (v48)
    {
      v50 = *(_QWORD *)(v46 + 8);
      *v45 = v48;
      v45[1] = v50;
      swift_retain();
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_35;
  }
  if (!v48)
  {
    swift_release();
    goto LABEL_34;
  }
  v49 = *(_QWORD *)(v46 + 8);
  *v45 = v48;
  v45[1] = v49;
  swift_retain();
  swift_release();
LABEL_35:
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FeedUpdateRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1A93F73E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v25 = a3[15];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  if (*v27)
  {
    v29 = v27[1];
    *v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = a3[16];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  if (*v32)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  v35 = a3[17];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  if (*v37)
  {
    v39 = v37[1];
    *v36 = v38;
    v36[1] = v39;
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedUpdateRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A923C88C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1A93F73E0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[18]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedUpdateRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A923C968(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1A93F73E0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[18]) = (a2 - 1);
  return result;
}

uint64_t sub_1A923CA34()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockPurchaseTask()
{
  return objc_opt_self();
}

uint64_t sub_1A923CA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MockPurchaseTask();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

id sub_1A923CAAC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a1 = v4;
  return v4;
}

void sub_1A923CAF0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  v3 = *v1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;

}

uint64_t (*sub_1A923CB38())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A923CB78(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A923CBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A923CBBC(a5, a7, a8, a9);
}

uint64_t sub_1A923CBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v23 = a3;
  v5 = sub_1A93F7D58();
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DE8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - v16;
  sub_1A9066C6C();
  v18 = (void *)sub_1A93F8868();
  sub_1A93F7DDC();
  MEMORY[0x1AF411B48](v14, 3.0);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v23;
  *(_QWORD *)(v20 + 24) = a4;
  aBlock[4] = sub_1A923CE44;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_33;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF41252C](v17, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

uint64_t sub_1A923CE20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A923CE44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

id sub_1A923CF48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s19TaskMetricsDelegateCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s19TaskMetricsDelegateCMa()
{
  return objc_opt_self();
}

void sub_1A923D004(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  void *v18;
  _QWORD v19[2];

  v2 = v1;
  v4 = sub_1A93F6E58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEAB6D68 != -1)
    swift_once();
  v8 = sub_1A93F7698();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EEABA690);
  v9 = a1;
  v10 = sub_1A93F7674();
  v11 = sub_1A93F87B4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v19[0] = v2;
    v13 = v12;
    *(_DWORD *)v12 = 134217984;
    v14 = objc_msgSend(v9, sel_taskInterval);
    sub_1A93F6E40();

    sub_1A93F6E4C();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v19[1] = v16;
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v10, v11, "MAPI request duration: %fs", v13, 0xCu);
    v17 = v13;
    v2 = v19[0];
    MEMORY[0x1AF41411C](v17, -1, -1);

  }
  else
  {

  }
  v18 = *(void **)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation20PodcastsMediaLibrary19TaskMetricsDelegate_strongRef);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation20PodcastsMediaLibrary19TaskMetricsDelegate_strongRef) = 0;

}

uint64_t sub_1A923D1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a3 + a2 - 8);
  v7 = a1 + *(int *)(type metadata accessor for PerformanceLoadable(0, v6, a3, a4) + 40);
  v10 = type metadata accessor for Loadable(0, v6, v8, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a5, v7, v10);
}

uint64_t sub_1A923D258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = type metadata accessor for PerformanceLoadable(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  return sub_1A90535E8(a1, v5, v6, v7);
}

uint64_t sub_1A923D294()
{
  return 8;
}

_QWORD *sub_1A923D2A0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A923D2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  unsigned int v17;
  _BOOL8 v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  unsigned int v34;
  _BOOL8 v35;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1A93F75FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80);
  v14 = *(_QWORD *)(v11 + 64);
  v15 = v14;
  if (v12 <= 1)
  {
    if (v14 <= 3)
    {
      v17 = (~(-1 << (8 * v14)) - v12 + 2) >> (8 * v14);
      if (v17 > 0xFFFE)
      {
        v16 = 4;
      }
      else
      {
        v18 = v17 != 0;
        v19 = v17 >= 0xFF;
        v16 = 2;
        if (!v19)
          v16 = v18;
      }
    }
    else
    {
      v16 = 1;
    }
    v15 = v16 + v14;
  }
  v20 = v15 + ((v9 + ((v8 + 48) & ~v8) + v13) & ~v13);
  if ((v13 | v8) > 7 || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0 || v20 > 0x18)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v24 = v23 + (((v13 | v8) & 0xF8 ^ 0x1F8) & ((v13 | v8) + 16));
    swift_retain();
  }
  else
  {
    v37 = *(_DWORD *)(v11 + 84);
    v38 = v10;
    v39 = a1;
    v25 = ~v13;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v26 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v26;
    v27 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v27[1] = v28[1];
    v29 = ((unint64_t)v27 + v8 + 16) & ~v8;
    v30 = ((unint64_t)v28 + v8 + 16) & ~v8;
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v32 = v26;
    swift_bridgeObjectRetain();
    v31(v29, v30, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))((v30 + v9 + v13) & ~v13, 2, v38))
    {
      v24 = v39;
      if (v37 <= 1)
      {
        if (v14 <= 3)
        {
          v34 = (~(-1 << (8 * v14)) - v37 + 2) >> (8 * v14);
          if (v34 > 0xFFFE)
          {
            v33 = 4;
          }
          else
          {
            v35 = v34 != 0;
            v19 = v34 >= 0xFF;
            v33 = 2;
            if (!v19)
              v33 = v35;
          }
        }
        else
        {
          v33 = 1;
        }
        v14 += v33;
      }
      memcpy((void *)((v29 + v9 + v13) & v25), (const void *)((v30 + v9 + v13) & v25), v14);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v29 + v9 + v13) & v25, (v30 + v9 + v13) & v25, v38);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))((v29 + v9 + v13) & v25, 0, 2, v38);
      return v39;
    }
  }
  return v24;
}

uint64_t sub_1A923D550(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v3 = a1 & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  v4 = sub_1A93F75FC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 2, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v9 + 8))(v10, v8);
  return result;
}

uint64_t sub_1A923D60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  unsigned int v21;
  size_t v22;
  uint64_t v23;
  unsigned int v24;
  _BOOL8 v25;
  BOOL v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v5;
  v6 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v14 = v5;
  swift_bridgeObjectRetain();
  v13(v11, v12, v8);
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v9 + 64) + v17;
  v19 = (void *)((v18 + v11) & ~v17);
  v20 = (const void *)((v18 + v12) & ~v17);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v20, 2, v15))
  {
    v21 = *(_DWORD *)(v16 + 84);
    v22 = *(_QWORD *)(v16 + 64);
    if (v21 <= 1)
    {
      if (v22 <= 3)
      {
        v24 = (~(-1 << (8 * v22)) - v21 + 2) >> (8 * v22);
        if (v24 > 0xFFFE)
        {
          v23 = 4;
        }
        else
        {
          v25 = v24 != 0;
          v26 = v24 >= 0xFF;
          v23 = 2;
          if (!v26)
            v23 = v25;
        }
      }
      else
      {
        v23 = 1;
      }
      v22 += v23;
    }
    memcpy(v19, v20, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v19, v20, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 2, v15);
  }
  return a1;
}

uint64_t sub_1A923D7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  unsigned int v26;
  size_t v27;
  uint64_t v28;
  unsigned int v29;
  _BOOL8 v30;
  BOOL v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = *(void **)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v8 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v7;
  v9 = v7;

  v10 = (_QWORD *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v6 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = sub_1A93F75FC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = ((unint64_t)v10 + v14 + 16) & ~v14;
  v16 = ((unint64_t)v11 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v15, v16, v12);
  v17 = *(_QWORD *)(v13 + 64);
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20;
  v22 = (void *)((v21 + v15) & ~v20);
  v23 = (void *)((v21 + v16) & ~v20);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v16) = v24(v22, 2, v18);
  v25 = v24(v23, 2, v18);
  if ((_DWORD)v16)
  {
    if (v25)
    {
      v26 = *(_DWORD *)(v19 + 84);
      v27 = *(_QWORD *)(v19 + 64);
      if (v26 <= 1)
      {
        if (v27 > 3)
        {
LABEL_5:
          v28 = 1;
LABEL_16:
          v27 += v28;
          goto LABEL_17;
        }
LABEL_9:
        v29 = (~(-1 << (8 * v27)) - v26 + 2) >> (8 * v27);
        if (v29 > 0xFFFE)
        {
          v28 = 4;
        }
        else
        {
          v30 = v29 != 0;
          v31 = v29 >= 0xFF;
          v28 = 2;
          if (!v31)
            v28 = v30;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v22, v23, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 2, v18);
  }
  else
  {
    if (v25)
    {
      (*(void (**)(void *, uint64_t))(v19 + 8))(v22, v18);
      v26 = *(_DWORD *)(v19 + 84);
      v27 = *(_QWORD *)(v19 + 64);
      if (v26 <= 1)
      {
        if (v27 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(v22, v23, v27);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v22, v23, v18);
  }
  return a1;
}

uint64_t sub_1A923D9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  unsigned int v19;
  size_t v20;
  uint64_t v21;
  unsigned int v22;
  _BOOL8 v23;
  BOOL v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v5 = (_OWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_1A93F75FC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)((v16 + v10) & ~v15);
  v18 = (const void *)((v16 + v11) & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v18, 2, v13))
  {
    v19 = *(_DWORD *)(v14 + 84);
    v20 = *(_QWORD *)(v14 + 64);
    if (v19 <= 1)
    {
      if (v20 <= 3)
      {
        v22 = (~(-1 << (8 * v20)) - v19 + 2) >> (8 * v20);
        if (v22 > 0xFFFE)
        {
          v21 = 4;
        }
        else
        {
          v23 = v22 != 0;
          v24 = v22 >= 0xFF;
          v21 = 2;
          if (!v24)
            v21 = v23;
        }
      }
      else
      {
        v21 = 1;
      }
      v20 += v21;
    }
    memcpy(v17, v18, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v17, v18, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 2, v13);
  }
  return a1;
}

uint64_t sub_1A923DB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  unsigned int v24;
  size_t v25;
  uint64_t v26;
  unsigned int v27;
  _BOOL8 v28;
  BOOL v29;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);

  v8 = (_QWORD *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v6 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v10 = sub_1A93F75FC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v13, v14, v10);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 + v18;
  v20 = (void *)((v19 + v13) & ~v18);
  v21 = (void *)((v19 + v14) & ~v18);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v14) = v22(v20, 2, v16);
  v23 = v22(v21, 2, v16);
  if ((_DWORD)v14)
  {
    if (v23)
    {
      v24 = *(_DWORD *)(v17 + 84);
      v25 = *(_QWORD *)(v17 + 64);
      if (v24 <= 1)
      {
        if (v25 > 3)
        {
LABEL_5:
          v26 = 1;
LABEL_16:
          v25 += v26;
          goto LABEL_17;
        }
LABEL_9:
        v27 = (~(-1 << (8 * v25)) - v24 + 2) >> (8 * v25);
        if (v27 > 0xFFFE)
        {
          v26 = 4;
        }
        else
        {
          v28 = v27 != 0;
          v29 = v27 >= 0xFF;
          v26 = 2;
          if (!v29)
            v26 = v28;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v20, v21, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 2, v16);
  }
  else
  {
    if (v23)
    {
      (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v16);
      v24 = *(_DWORD *)(v17 + 84);
      v25 = *(_QWORD *)(v17 + 64);
      if (v24 <= 1)
      {
        if (v25 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(v20, v21, v25);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v20, v21, v16);
  }
  return a1;
}

uint64_t sub_1A923DD50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _BOOL8 v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  unsigned int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;

  v6 = sub_1A93F75FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 2;
  if (v10 <= 1)
    v11 = 0;
  if (v8 <= v11)
    v12 = v11;
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v9 + 64);
  if (v10 <= 1)
  {
    if (v14 <= 3)
    {
      v16 = (~(-1 << (8 * v14)) - v10 + 2) >> (8 * v14);
      if (v16 > 0xFFFE)
      {
        v15 = 4;
      }
      else
      {
        v17 = v16 != 0;
        v18 = v16 >= 0xFF;
        v15 = 2;
        if (!v18)
          v15 = v17;
      }
    }
    else
    {
      v15 = 1;
    }
    v14 += v15;
  }
  if (!a2)
    return 0;
  v19 = *(unsigned __int8 *)(v7 + 80);
  v20 = *(_QWORD *)(v7 + 64);
  v21 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v13)
    goto LABEL_38;
  v22 = v14 + ((v20 + ((v19 + 48) & ~v19) + v21) & ~v21);
  v23 = 8 * v22;
  if (v22 <= 3)
  {
    v26 = ((a2 - v13 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v26))
    {
      v24 = *(_DWORD *)(a1 + v22);
      if (!v24)
        goto LABEL_38;
      goto LABEL_29;
    }
    if (v26 > 0xFF)
    {
      v24 = *(unsigned __int16 *)(a1 + v22);
      if (!*(_WORD *)(a1 + v22))
        goto LABEL_38;
      goto LABEL_29;
    }
    if (v26 < 2)
    {
LABEL_38:
      v29 = a1 & 0xFFFFFFFFFFFFFFF8;
      if ((v12 & 0x80000000) != 0)
      {
        v31 = (((v29 + 39) & 0xFFFFFFFFFFFFFFF8) + v19 + 16) & ~v19;
        if (v8 == v13)
        {
          return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v7 + 48))(v31, *(unsigned int *)(v7 + 84), v6);
        }
        else
        {
          v32 = (*(uint64_t (**)(unint64_t))(v9 + 48))((v31 + v20 + v21) & ~v21);
          if (v32 >= 3)
            return v32 - 2;
          else
            return 0;
        }
      }
      else
      {
        v30 = *(_QWORD *)(v29 + 24);
        if (v30 >= 0xFFFFFFFF)
          LODWORD(v30) = -1;
        return (v30 + 1);
      }
    }
  }
  v24 = *(unsigned __int8 *)(a1 + v22);
  if (!*(_BYTE *)(a1 + v22))
    goto LABEL_38;
LABEL_29:
  v27 = (v24 - 1) << v23;
  if (v22 > 3)
    v27 = 0;
  if ((_DWORD)v22)
  {
    if (v22 <= 3)
      v28 = v22;
    else
      v28 = 4;
    __asm { BR              X12 }
  }
  return v13 + v27 + 1;
}

void sub_1A923DFAC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _BOOL8 v17;
  BOOL v18;
  size_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;

  v8 = *(_QWORD *)(sub_1A93F75FC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 2;
  if (v10 <= 1)
    v11 = 0;
  if (*(_DWORD *)(v8 + 84) <= v11)
    v12 = v11;
  else
    v12 = *(_DWORD *)(v8 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v9 + 64);
  if (v10 <= 1)
  {
    if (v14 <= 3)
    {
      v16 = (~(-1 << (8 * v14)) - v10 + 2) >> (8 * v14);
      if (v16 > 0xFFFE)
      {
        v15 = 4;
      }
      else
      {
        v17 = v16 != 0;
        v18 = v16 >= 0xFF;
        v15 = 2;
        if (!v18)
          v15 = v17;
      }
    }
    else
    {
      v15 = 1;
    }
    v14 += v15;
  }
  v19 = v14
      + ((*(_QWORD *)(v8 + 64)
        + ((*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  if (a3 <= v13)
  {
    v20 = 0u;
  }
  else if (v19 <= 3)
  {
    v22 = ((a3 - v13 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v22))
    {
      v20 = 4u;
    }
    else if (v22 >= 0x100)
    {
      v20 = 2;
    }
    else
    {
      v20 = v22 > 1;
    }
  }
  else
  {
    v20 = 1u;
  }
  if (v13 < a2)
  {
    v21 = ~v13 + a2;
    if (v19 < 4)
    {
      if ((_DWORD)v19)
      {
        v23 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if ((_DWORD)v19 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if ((_DWORD)v19 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_1A923E280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (os_unfair_lock_s *)(v2 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  v4 = *(unsigned __int8 *)(v2 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  if (*(_BYTE *)(v2 + 16) == 1)
    *(_BYTE *)(v2 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  v5 = *(void (**)(uint64_t, uint64_t))(v1 + 24);
  if (v5)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
    v6 = *(unsigned __int8 *)(v2 + 16);
    os_unfair_lock_unlock(v3);
    v5(v4, v6);
    sub_1A9085818((uint64_t)v5);
  }
}

void sub_1A923E33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (os_unfair_lock_s *)(v2 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  v4 = *(unsigned __int8 *)(v2 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  if (!*(_BYTE *)(v2 + 16))
    *(_BYTE *)(v2 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  v5 = *(void (**)(uint64_t, uint64_t))(v1 + 24);
  if (v5)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
    v6 = *(unsigned __int8 *)(v2 + 16);
    os_unfair_lock_unlock(v3);
    v5(v4, v6);
    sub_1A9085818((uint64_t)v5);
  }
}

void sub_1A923E3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (os_unfair_lock_s *)(v2 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  v4 = *(unsigned __int8 *)(v2 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  if (*(unsigned __int8 *)(v2 + 16) <= 1u)
    *(_BYTE *)(v2 + 16) = 2;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  v5 = *(void (**)(uint64_t, uint64_t))(v1 + 24);
  if (v5)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
    v6 = *(unsigned __int8 *)(v2 + 16);
    os_unfair_lock_unlock(v3);
    v5(v4, v6);
    sub_1A9085818((uint64_t)v5);
  }
}

uint64_t sub_1A923E4B8(void *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBA90);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBA98);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAA0);
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAA8);
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAB0);
  swift_allocObject();
  v11 = a1;
  v36 = sub_1A93F7A94();
  sub_1A9072534(0, &qword_1EEABBAB8);
  sub_1A9066D74(&qword_1EEABBAC0, &qword_1EEABBAB0, MEMORY[0x1E0C96108]);
  sub_1A93F7B30();
  swift_release();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = a2[1];
  *(_OWORD *)(v12 + 24) = *a2;
  *(_OWORD *)(v12 + 40) = v13;
  *(_OWORD *)(v12 + 56) = a2[2];
  v14 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAC8);
  sub_1A9066D74(&qword_1EEABBAD0, &qword_1EEABBA90, MEMORY[0x1E0C95708]);
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  sub_1A9066D74(&qword_1EEABBAD8, &qword_1EEABBA98, MEMORY[0x1E0C95B48]);
  v15 = v27;
  v16 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v15);
  v36 = v16;
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1A9240DC0;
  *(_QWORD *)(v18 + 24) = v17;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAF0);
  sub_1A9066D74(&qword_1EEABBAF8, &qword_1EEABBAE0, MEMORY[0x1E0C95D90]);
  v19 = MEMORY[0x1E0C957C0];
  sub_1A9066D74(&qword_1EEABBB00, &qword_1EEABBAF0, MEMORY[0x1E0C957C0]);
  v20 = v30;
  sub_1A93F7C5C();
  swift_release();
  swift_release();
  sub_1A9066D74(&qword_1EEABBB08, &qword_1EEABBAA0, MEMORY[0x1E0C95B78]);
  swift_retain_n();
  v21 = v32;
  v22 = v31;
  sub_1A93F7B3C();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v21);
  sub_1A9066D74(&qword_1EEABBB10, &qword_1EEABBAA8, v19);
  v23 = v33;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v23);
  return v24;
}

uint64_t sub_1A923E9A4(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;
  id v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBB18);
  swift_allocObject();
  v10 = sub_1A93F798C();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = v10;
  sub_1A9066D74(&qword_1EEABBB20, &qword_1EEABBB18, MEMORY[0x1E0C95F48]);
  swift_retain();
  v7 = a1;
  v8 = a2;
  swift_retain();
  sub_1A93F7B3C();
  swift_release();
  return swift_release();
}

uint64_t sub_1A923EAC4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A923EB3C(a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A923EB3C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v7 = sub_1A93F7D58();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v23 = *(_QWORD *)(v10 - 8);
  v24 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v3 + 16);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v16 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v13 + 24) = sub_1A9240F9C;
  *(_QWORD *)(v13 + 32) = v15;
  v17 = a1;
  v18 = a2;
  swift_retain();
  sub_1A9085818(v16);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v3;
  aBlock[4] = sub_1A9240FD4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_34;
  v20 = _Block_copy(aBlock);
  v21 = v17;
  swift_retain();
  sub_1A93F7D88();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v9, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

void sub_1A923EDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = (os_unfair_lock_s *)(v3 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  v5 = *(unsigned __int8 *)(v3 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  *(_BYTE *)(v3 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  v6 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
  if (v6)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
    v7 = *(unsigned __int8 *)(v3 + 16);
    os_unfair_lock_unlock(v4);
    v6(v5, v7);
    sub_1A9085818((uint64_t)v6);
  }
}

void sub_1A923EE5C(uint64_t a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (os_unfair_lock_s *)(v2 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  v4 = *(unsigned __int8 *)(v2 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  *(_BYTE *)(v2 + 16) = 2;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 24);
  if (v5)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
    v6 = *(unsigned __int8 *)(v2 + 16);
    os_unfair_lock_unlock(v3);
    v5(v4, v6);
    sub_1A9085818((uint64_t)v5);
  }
}

uint64_t sub_1A923EF10(uint64_t result, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  if (result != 1 && a2 == 1)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      sub_1A923EF9C(a4, a5, a6);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1A923EF9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_1A93F7D58();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v4 + 24);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v4;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_1A924101C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_25_4;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  v18 = a2;
  swift_retain();
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return swift_release();
}

void sub_1A923F1B0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  objc_msgSend(a1, sel_startReading);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = (os_unfair_lock_s *)(v4 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 20));
  v6 = *(unsigned __int8 *)(v4 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 20));
  *(_BYTE *)(v4 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 20));
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 24);
  if (v7)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 20));
    v8 = *(unsigned __int8 *)(v4 + 16);
    os_unfair_lock_unlock(v5);
    v7(v6, v8);
    sub_1A9085818((uint64_t)v7);
  }
}

void sub_1A923F274(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  int v14;
  opaqueCMSampleBuffer *v15;
  opaqueCMSampleBuffer *v16;
  void *v17;
  void *v18;
  _OWORD *v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  _OWORD *v36;
  id v37;
  int v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  void *v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  _BYTE v65[32];
  uint64_t v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v62 = a4;
  v60 = a3;
  v64 = a2;
  v5 = sub_1A93F87D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v61 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v61 + 16);
  v10 = (os_unfair_lock_s *)(v9 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 20));
  v53 = &v65[8];
  v58 = (void *)*MEMORY[0x1E0C9AE00];
  v57 = xmmword_1A9405520;
  v56 = v5;
  v55 = v6;
  v59 = v8;
  v11 = v58;
  while (1)
  {
    v14 = *(unsigned __int8 *)(v9 + 16);
    os_unfair_lock_unlock(v10);
    if (v14 != 1)
      break;
    if (objc_msgSend(v64, sel_status) != (id)1)
      break;
    v15 = (opaqueCMSampleBuffer *)objc_msgSend(v60, sel_copyNextSampleBuffer);
    if (!v15)
      break;
    v16 = v15;
    v17 = (void *)MEMORY[0x1AF4135A0]();
    if (qword_1EEAB6EC8 != -1)
      swift_once();
    v18 = (void *)qword_1EEABB920;
    if (!qword_1EEABB920)
      goto LABEL_2;
    v63 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBB30);
    v19 = (_OWORD *)swift_allocObject();
    v19[1] = v57;
    v20 = v5;
    v21 = v18;
    sub_1A93F87CC();
    v68 = v19;
    sub_1A9066CA8(&qword_1EEABBB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF218], MEMORY[0x1E0DEF228]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBB40);
    sub_1A9066D74(&qword_1EEABBB48, &qword_1EEABBB40, MEMORY[0x1E0DEAF38]);
    v22 = v59;
    v23 = sub_1A93F8B5C();
    MEMORY[0x1E0C80A78](v23);
    *(&v53 - 2) = v21;
    v24 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBB50);
    sub_1A93F87C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v20);

    v25 = *(void **)v65;
    if (!*(_QWORD *)v65)
    {

      v5 = v56;
      v6 = v55;
      v17 = v63;
LABEL_2:
      objc_msgSend(v64, sel_cancelReading, v53);
      sub_1A9241028();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v13 = 0;
      *(_BYTE *)(v13 + 8) = 2;
      *(_QWORD *)v65 = v12;
      sub_1A93F7968();

      goto LABEL_3;
    }
    objc_msgSend(*(id *)v65, sel_setFrameLength_, objc_msgSend(*(id *)v65, sel_frameCapacity));
    CMSampleBufferGetPresentationTimeStamp((CMTime *)v65, v16);
    v26 = *(_QWORD *)v65;
    v27 = *(_QWORD *)&v65[16];
    v28 = *(_QWORD *)&v65[8];
    CMSampleBufferGetDuration((CMTime *)v65, v16);
    v29 = *(_QWORD *)v65;
    v30 = *(_QWORD *)&v65[16];
    v31 = *(_QWORD *)&v65[8];

    *(_QWORD *)&v77 = v26;
    *((_QWORD *)&v77 + 1) = v28;
    *(_QWORD *)&v78 = v27;
    *((_QWORD *)&v78 + 1) = v29;
    *(_QWORD *)&v79 = v31;
    *((_QWORD *)&v79 + 1) = v30;
    v32 = v64;
    sub_1A93F873C();
    objc_msgSend(v32, sel_timeRange);
    v72 = *(_QWORD *)v65;
    v74 = *(_OWORD *)&v65[16];
    v73 = *(_QWORD *)&v65[8];
    v75 = v66;
    v76 = v67;
    sub_1A93F873C();
    sub_1A93F8748();
    v33 = v70;
    v34 = v54;
    *(_OWORD *)(v54 + 32) = v69;
    *(_OWORD *)(v34 + 48) = v33;
    *(_OWORD *)(v34 + 64) = v71;
    *(_BYTE *)(v34 + 80) = 0;
    *(_QWORD *)v65 = v25;
    v35 = v78;
    v36 = v53;
    *v53 = v77;
    v36[1] = v35;
    v36[2] = v79;
    v37 = v25;
    sub_1A93F7974();

    v5 = v56;
    v6 = v55;
    v17 = v63;
LABEL_3:
    objc_autoreleasePoolPop(v17);

    v9 = *(_QWORD *)(v61 + 16);
    v10 = (os_unfair_lock_s *)(v9 + 20);
    os_unfair_lock_lock((os_unfair_lock_t)(v9 + 20));
  }
  os_unfair_lock_lock(v10);
  v38 = *(unsigned __int8 *)(v9 + 16);
  os_unfair_lock_unlock(v10);
  if (v38 == 2)
    objc_msgSend(v64, sel_cancelReading);
  if (objc_msgSend(v64, sel_status, v53) == (id)2)
  {
    os_unfair_lock_lock(v10);
    v39 = *(unsigned __int8 *)(v9 + 16);
    os_unfair_lock_unlock(v10);
    os_unfair_lock_lock(v10);
    *(_BYTE *)(v9 + 16) = 3;
    os_unfair_lock_unlock(v10);
    v40 = *(void (**)(uint64_t, uint64_t))(v61 + 24);
    if (v40)
    {
      swift_retain();
      os_unfair_lock_lock(v10);
      v41 = *(unsigned __int8 *)(v9 + 16);
      os_unfair_lock_unlock(v10);
      v40(v39, v41);
      sub_1A9085818((uint64_t)v40);
    }
    *(_QWORD *)v65 = 0;
    sub_1A93F7968();
  }
  else
  {
    if (objc_msgSend(v64, sel_status) == (id)3)
    {
      v42 = objc_msgSend(v64, sel_error);
      if (v42)
      {
        *(_QWORD *)v65 = v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
        sub_1A9072534(0, &qword_1ED2ABD18);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v43 = v68;
          v44 = objc_msgSend(v68, sel_code);

          if (v44 == (id)-11847)
          {
            v45 = objc_msgSend(v64, sel_asset);
            sub_1A923FA90(v45, v62);

            return;
          }
        }
      }
      v50 = objc_msgSend(v64, sel_error);
      sub_1A9241028();
      v51 = swift_allocError();
      *(_QWORD *)v52 = v50;
      *(_BYTE *)(v52 + 8) = 1;
      *(_QWORD *)v65 = v51;
      sub_1A93F7968();
      v49 = (void *)v51;
    }
    else
    {
      os_unfair_lock_lock(v10);
      v46 = *(unsigned __int8 *)(v9 + 16);
      os_unfair_lock_unlock(v10);
      if (!v46)
        return;
      sub_1A9241028();
      v47 = swift_allocError();
      *(_QWORD *)v48 = 1;
      *(_BYTE *)(v48 + 8) = 2;
      *(_QWORD *)v65 = v47;
      sub_1A93F7968();
      v49 = (void *)v47;
    }

  }
}

uint64_t sub_1A923FA90(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  int v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v66 = a2;
  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBA90);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBA98);
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEAB6D48 != -1)
    swift_once();
  v11 = sub_1A93F7698();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EEABA660);
  v12 = sub_1A93F7674();
  v13 = sub_1A93F87B4();
  v14 = os_log_type_enabled(v12, v13);
  v65 = v5;
  if (v14)
  {
    v15 = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v68 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = sub_1A93F9474();
    v67 = sub_1A906436C(v18, v19, &v68);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v12, v13, "[%s]: Reader was invalidated. Attempting to rebuild the asset reader.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v17, -1, -1);
    v20 = v16;
    a1 = v15;
    MEMORY[0x1AF41411C](v20, -1, -1);
  }

  v21 = v3[2];
  v22 = *(_QWORD *)(v21 + 16);
  v23 = (os_unfair_lock_s *)(v22 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 20));
  v24 = *(unsigned __int8 *)(v22 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 20));
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 20));
  *(_BYTE *)(v22 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 20));
  v25 = *(void (**)(uint64_t, uint64_t))(v21 + 24);
  if (v25)
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 20));
    v26 = *(unsigned __int8 *)(v22 + 16);
    os_unfair_lock_unlock(v23);
    v25(v24, v26);
    sub_1A9085818((uint64_t)v25);
  }
  if ((v3[10] & 1) != 0)
  {
    v27 = (uint64_t *)MEMORY[0x1E0CA2E50];
    v28 = *(_DWORD *)(MEMORY[0x1E0CA2E50] + 8);
    v56 = *(_DWORD *)(MEMORY[0x1E0CA2E50] + 12);
    v57 = v28;
    v29 = (uint64_t *)(MEMORY[0x1E0CA2E50] + 24);
    v30 = (uint64_t *)(MEMORY[0x1E0CA2E50] + 40);
    v31 = (uint64_t *)(MEMORY[0x1E0CA2E50] + 16);
    v32 = *(_DWORD *)(MEMORY[0x1E0CA2E50] + 32);
    v58 = *(_DWORD *)(MEMORY[0x1E0CA2E50] + 36);
    v59 = v32;
  }
  else
  {
    v27 = v3 + 4;
    v30 = v3 + 9;
    v33 = *((_DWORD *)v3 + 16);
    v58 = *((_DWORD *)v3 + 17);
    v59 = v33;
    v29 = v3 + 7;
    v31 = v3 + 6;
    v34 = *((_DWORD *)v3 + 10);
    v56 = *((_DWORD *)v3 + 11);
    v57 = v34;
  }
  v55 = *v30;
  v54 = *v29;
  v35 = *v31;
  v36 = *v27;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAB0);
  swift_allocObject();
  v37 = a1;
  v68 = sub_1A93F7A94();
  sub_1A9072534(0, &qword_1EEABBAB8);
  sub_1A9066D74(&qword_1EEABBAC0, &qword_1EEABBAB0, MEMORY[0x1E0C96108]);
  sub_1A93F7B30();
  swift_release();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = v36;
  v39 = v56;
  *(_DWORD *)(v38 + 32) = v57;
  *(_DWORD *)(v38 + 36) = v39;
  v40 = v54;
  *(_QWORD *)(v38 + 40) = v35;
  *(_QWORD *)(v38 + 48) = v40;
  LODWORD(v40) = v58;
  *(_DWORD *)(v38 + 56) = v59;
  *(_DWORD *)(v38 + 60) = v40;
  *(_QWORD *)(v38 + 64) = v55;
  v41 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAC8);
  sub_1A9066D74(&qword_1EEABBAD0, &qword_1EEABBA90, MEMORY[0x1E0C95708]);
  v42 = v60;
  v43 = v62;
  sub_1A93F7C20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v8, v43);
  sub_1A9066D74(&qword_1EEABBAD8, &qword_1EEABBA98, MEMORY[0x1E0C95B48]);
  v44 = v64;
  v45 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v44);
  v68 = v45;
  v46 = swift_allocObject();
  v47 = v65;
  *(_QWORD *)(v46 + 16) = v65;
  v48 = swift_allocObject();
  swift_weakInit();
  v49 = (_QWORD *)swift_allocObject();
  v49[2] = v48;
  v49[3] = v66;
  v49[4] = v47;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_1A9241108;
  *(_QWORD *)(v50 + 24) = v49;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBAE0);
  sub_1A9066D74(&qword_1EEABBAF8, &qword_1EEABBAE0, MEMORY[0x1E0C95D90]);
  v51 = sub_1A93F7BA8();
  swift_release();
  swift_release();
  swift_release();
  v3[11] = v51;
  return swift_release();
}

void sub_1A9240070(void **a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSObject *oslog;
  uint64_t v14;
  uint64_t v15;

  v1 = *a1;
  if (*a1)
  {
    v2 = v1;
    if (qword_1EEAB6D48 != -1)
      swift_once();
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EEABA660);
    v4 = v1;
    v5 = v1;
    oslog = sub_1A93F7674();
    v6 = sub_1A93F879C();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v15 = v9;
      *(_DWORD *)v7 = 136315394;
      v10 = sub_1A93F9474();
      sub_1A906436C(v10, v11, &v15);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      v12 = v1;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A93F8AA8();
      *v8 = v14;

      _os_log_impl(&dword_1A904E000, oslog, v6, "[%s]: Failed to rebuild the asset reader with error: %@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v9, -1, -1);
      MEMORY[0x1AF41411C](v7, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1A92402CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  if (qword_1EEAB6D48 != -1)
    swift_once();
  v7 = sub_1A93F7698();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EEABA660);
  v8 = a1;
  v9 = sub_1A93F7674();
  v10 = sub_1A93F87B4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136315650;
    v13 = sub_1A93F9474();
    sub_1A906436C(v13, v14, &v16);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    objc_msgSend(v8, sel_timeRange);
    sub_1A93F8A24();
    sub_1A93F8AA8();

    *(_WORD *)(v11 + 22) = 2048;
    objc_msgSend(v8, sel_timeRange);
    sub_1A93F8A24();
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v9, v10, "[%s]: Resuming asset reader from (start: %f, duration: %f).", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v12, -1, -1);
    MEMORY[0x1AF41411C](v11, -1, -1);

  }
  else
  {

  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A923EB3C(v8, a2, a4);
    return swift_release();
  }
  return result;
}

void sub_1A9240558(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = *MEMORY[0x1E0C8A7A0];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1A909CFCC;
  *(_QWORD *)(v8 + 24) = v6;
  v10[4] = sub_1A9241160;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A9240730;
  v10[3] = &block_descriptor_58_0;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_loadTracksWithMediaType_completionHandler_, v7, v9);
  _Block_release(v9);
}

void sub_1A9240654(unint64_t a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      a3((void *)a1, 0);
      return;
    }
  }
  sub_1A9241028();
  v7 = (void *)swift_allocError();
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = 0;
  v9 = a2;
  a3(v7, 1);

}

uint64_t sub_1A9240730(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1A9072534(0, &qword_1EEABBB58);
    v4 = sub_1A93F8310();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1A92407BC(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  if (qword_1EEAB6EC8 != -1)
    swift_once();
  if (qword_1EEABB920)
  {
    v2 = (id)qword_1EEABB920;
    swift_bridgeObjectRetain();
    v3 = objc_msgSend(v2, sel_settings);
    sub_1A93F7EFC();

    v4 = objc_allocWithZone(MEMORY[0x1E0C8AFE8]);
    sub_1A9072534(0, &qword_1EEABBB58);
    v5 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v4, sel_initWithAudioTracks_audioSettings_, v5, v6);

    objc_msgSend(v7, sel_setAlwaysCopiesSampleData_, 0);
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
}

void sub_1A9240938(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  __int128 v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v6 = *(void **)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v21 = *(_QWORD *)(a3 + 24);
  v22 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 32);
  v20 = *(_QWORD *)(a3 + 40);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  sub_1A93F8040();
  v24 = v11;
  v12 = a2;
  sub_1A93F8C1C();
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 72) = 1;
  sub_1A91129D8(inited);
  v13 = objc_allocWithZone(MEMORY[0x1E0C8AFD0]);
  v14 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  v23 = 0;
  v15 = objc_msgSend(v13, sel_initWithAsset_options_error_, v12, v14, &v23);

  if (v15)
  {
    v16 = v23;

    v17 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 16);
    v29 = *MEMORY[0x1E0CA2E50];
    v30 = v17;
    v31 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 32);
    if ((sub_1A93F8730() & 1) != 0)
    {
      v23 = v6;
      v24 = v7;
      v25 = v22;
      v26 = v21;
      v27 = v8;
      v28 = v20;
      objc_msgSend(v15, sel_setTimeRange_, &v23);
    }
    objc_msgSend(v15, sel_addOutput_, v9);
    *a4 = v15;
    a4[1] = v9;
    v18 = v9;
  }
  else
  {
    v19 = v23;
    sub_1A93F7128();

    swift_willThrow();
  }
}

uint64_t sub_1A9240B7C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetReader()
{
  return objc_opt_self();
}

uint64_t sub_1A9240BD0()
{
  uint64_t v0;

  swift_release();
  sub_1A9085818(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetReader.StateController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for AssetReader.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9240C68 + 4 * byte_1A94143A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9240C9C + 4 * byte_1A94143A0[v4]))();
}

uint64_t sub_1A9240C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9240CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9240CACLL);
  return result;
}

uint64_t sub_1A9240CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9240CC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A9240CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9240CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetReader.State()
{
  return &type metadata for AssetReader.State;
}

unint64_t sub_1A9240CEC()
{
  unint64_t result;

  result = qword_1EEABBA88;
  if (!qword_1EEABBA88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414458, &type metadata for AssetReader.State);
    atomic_store(result, (unint64_t *)&qword_1EEABBA88);
  }
  return result;
}

uint64_t sub_1A9240D30()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A9240D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A9240558(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1A9240D5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A9240D80(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1A9240938(a1, *(void **)(v2 + 16), v2 + 24, a2);
}

uint64_t sub_1A9240D9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9240DC0(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1A923E9A4(a1, a2, v2);
}

uint64_t sub_1A9240DC8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_1A9240DF0(uint64_t a1)
{
  uint64_t v1;

  sub_1A923EDAC(a1, v1);
}

void sub_1A9240DF8()
{
  uint64_t v0;

  sub_1A923EE5C(v0);
}

id sub_1A9240E00()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initStandardFormatWithSampleRate_channels_, 1, 16000.0);
  qword_1EEABB920 = (uint64_t)result;
  return result;
}

void sub_1A9240E40(void *a1@<X1>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v5 = a2;
  v6 = sub_1A93F7E48();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v8 = objc_allocWithZone(MEMORY[0x1E0C89AC0]);
  v12[4] = sub_1A9241084;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A9240F4C;
  v12[3] = &block_descriptor_31_1;
  v9 = _Block_copy(v12);
  v10 = a1;
  swift_release();
  v11 = objc_msgSend(v8, sel_initWithPCMFormat_bufferListNoCopy_deallocator_, v5, v6, v9);

  _Block_release(v9);
  *a3 = v11;
}

uint64_t sub_1A9240F4C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1A9240F8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A923EAC4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A9240F9C(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1A923EF10(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A9240FA8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A9240FD4()
{
  uint64_t v0;

  sub_1A923F1B0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_11Tm_0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1A924101C()
{
  uint64_t v0;

  sub_1A923F274(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1A9241028()
{
  unint64_t result;

  result = qword_1EEABBB28;
  if (!qword_1EEABBB28)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414488, &type metadata for AssetReader.Error);
    atomic_store(result, (unint64_t *)&qword_1EEABBB28);
  }
  return result;
}

void sub_1A924106C(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1A9240E40(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1A9241084()
{
  type metadata accessor for CMBlockBuffer(0);
  return sub_1A93F7E54();
}

uint64_t sub_1A92410C4()
{
  return swift_deallocObject();
}

void sub_1A92410D4(void **a1)
{
  sub_1A9240070(a1);
}

uint64_t sub_1A92410DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9241108(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A92402CC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A9241114()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9241138(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_1A9241160(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A9240654(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A92411AC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1A92411AC(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for AssetReader.Error(uint64_t a1)
{
  sub_1A92411D0(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1A92411D0(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t assignWithCopy for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A92411AC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A92411D0(v5, v6);
  return a1;
}

uint64_t assignWithTake for AssetReader.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A92411D0(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AssetReader.Error()
{
  return &type metadata for AssetReader.Error;
}

void sub_1A92412A8(void **a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A9240D80(a1, a2);
}

uint64_t static ArtworkURLScheme.resource.getter()
{
  return 0x656372756F736572;
}

uint64_t static ArtworkURLScheme.monogram.getter()
{
  return 0x6D6172676F6E6F6DLL;
}

uint64_t static ArtworkURLScheme.systemGlyph.getter()
{
  return 0x6870796C67;
}

id ArtworkURLScheme.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ArtworkURLScheme.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkURLScheme();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for ArtworkURLScheme()
{
  return objc_opt_self();
}

id ArtworkURLScheme.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkURLScheme();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9241454(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1A93F86B8();
  if (!v18)
    return sub_1A93F8370();
  v19 = v18;
  v25 = v15;
  v39 = sub_1A93F7EC0();
  v32 = sub_1A93F8DC0();
  sub_1A93F8D78();
  v36 = v17;
  result = sub_1A93F86AC();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1A93F8700();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1A93F8DA8();
      sub_1A93F86D0();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t Dictionary.init<A>(probablyUniqueKeysWithValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v12 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v12 + 16))(&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v15, v13);
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v16 = sub_1A93F7F68();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, a4);
  return v16;
}

uint64_t sub_1A9241810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 24) - 8) + 16))(a2, a1);
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char *TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[10];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  v20 = a8;
  v21 = a1;
  v22 = a2;
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a6;
  v14[5] = a7;
  v14[6] = a8;
  v14[7] = sub_1A924196C;
  v14[8] = &v15;
  v8 = sub_1A93F7F5C();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v10 = MEMORY[0x1AF414014](MEMORY[0x1E0DEA0E0], v8);
  v23 = sub_1A9241454((void (*)(char *, char *))sub_1A92419BC, (uint64_t)v14, v8, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v11);
  v12 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v12);
  return sub_1A93F7F2C();
}

uint64_t sub_1A924196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(_QWORD *)(v4 + 24);
  (*(void (**)(uint64_t))(v4 + 56))(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a4, v7);
}

uint64_t sub_1A92419BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t TupleTypeMetadata2;

  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t Dictionary.compactMapKeys<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1A93F7F5C();
  swift_getTupleTypeMetadata2();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEA0D0], v0);
  sub_1A93F81D8();
  v1 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
  return sub_1A93F7F2C();
}

uint64_t sub_1A9241B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, double)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = a2;
  v24 = a7;
  v25 = a8;
  v14 = sub_1A93F8A90();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v22 - v17;
  a3(a1, v16);
  v27 = a4;
  v28 = a5;
  v29 = a6;
  v30 = v24;
  v31 = a9;
  v32 = v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1A92D5DDC((void (*)(char *, char *))sub_1A9241D1C, (uint64_t)v26, MEMORY[0x1E0DEDCE8], TupleTypeMetadata2, v20, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1A9241C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A9241B6C(a1, a2, *(void (**)(uint64_t, double))(v3 + 56), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a3, *(_QWORD *)(v3 + 48));
}

uint64_t sub_1A9241CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 56);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1A9241D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[7];
  v8 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v7, v5);
}

uint64_t sub_1A9241DB4(uint64_t a1, void **a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
    {
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1A9212DB8(v8, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v10 = v9;
      v11 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1AF412004](v11);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1A9241ED8(unint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  int *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;

  v3 = v2;
  v30 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v27 = (uint64_t)&v25 - v11;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v12 = sub_1A93F8E5C();
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      v25 = v3;
      v28 = a1 & 0xC000000000000001;
      v13 = MEMORY[0x1E0DEE9D8];
      v14 = 4;
      v26 = a1;
      while (1)
      {
        v3 = v14 - 4;
        if (v28)
        {
          v15 = (id)MEMORY[0x1AF4129DC](v14 - 4, a1);
          v16 = v14 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_18;
        }
        else
        {
          v15 = *(id *)(a1 + 8 * v14);
          v16 = v14 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v17 = (char *)v15;
        v18 = v30;
        v19 = v30;
        sub_1A927FF3C(v17, v18, (uint64_t)v7);
        v20 = v29;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v29);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v20) == 1)
        {
          sub_1A9242934((uint64_t)v7);
        }
        else
        {
          v21 = v27;
          sub_1A912AB38((uint64_t)v7, v27);
          sub_1A912AB38(v21, v31);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_1A9117A2C(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
          v23 = *(_QWORD *)(v13 + 16);
          v22 = *(_QWORD *)(v13 + 24);
          if (v23 >= v22 >> 1)
            v13 = sub_1A9117A2C(v22 > 1, v23 + 1, 1, v13);
          *(_QWORD *)(v13 + 16) = v23 + 1;
          sub_1A912AB38(v31, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v23);
          a1 = v26;
        }
        ++v14;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

_OWORD *sub_1A924218C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  id v22[5];

  v22[4] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1A93F8088();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F807C();
  v4 = sub_1A93F804C();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
    return (_OWORD *)MEMORY[0x1E0DEE9D8];
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A93F729C();
  v22[0] = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, v22);

  if (!v9)
  {
    v17 = v22[0];
    sub_1A93F7128();

    swift_willThrow();
    sub_1A9069F9C(v4, v6);
    return v17;
  }
  v10 = v22[0];
  sub_1A93F8B44();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1A9069F9C(v4, v6);
    return (_OWORD *)MEMORY[0x1E0DEE9D8];
  }
  v11 = v21;
  type metadata accessor for MediaRequestResponseParser();
  v12 = static MediaRequestResponseParser.parsePodcastEpisodeResponse(_:)(v11);
  swift_bridgeObjectRelease();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_6;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_6:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1AF4129DC](0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v13 = *(id *)(v12 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7958);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (_OWORD *)swift_allocObject();
  v17[1] = xmmword_1A9405520;
  v18 = v14;
  sub_1A927FF3C(v18, 0, (uint64_t)v17 + v16);

  sub_1A9069F9C(v4, v6);
  return v17;
}

void *sub_1A9242480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  int *v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  void *v22[5];

  v22[4] = *(void **)MEMORY[0x1E0C80C00];
  v0 = sub_1A93F8088();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F807C();
  v4 = sub_1A93F804C();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
    return (void *)MEMORY[0x1E0DEE9D8];
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A93F729C();
  v22[0] = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, v22);

  if (!v9)
  {
    v18 = v22[0];
    sub_1A93F7128();

    swift_willThrow();
    sub_1A9069F9C(v4, v6);
    return v18;
  }
  v10 = v22[0];
  sub_1A93F8B44();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_1A9069F9C(v4, v6);
    return (void *)MEMORY[0x1E0DEE9D8];
  }
  v11 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(v21);
  if (!v11)
    goto LABEL_16;
  v22[0] = 0;
  v12 = sub_1A9241DB4(v11, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_16;
LABEL_7:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (char *)MEMORY[0x1AF4129DC](0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v13 = (char *)*(id *)(v12 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = &v14[OBJC_IVAR___MTServerPodcast_episodes];
  swift_beginAccess();
  if (!*(_QWORD *)v15)
  {

    goto LABEL_17;
  }
  v16 = v14;
  v17 = swift_bridgeObjectRetain();
  v18 = (void *)sub_1A9241ED8(v17, v16);

  sub_1A9069F9C(v4, v6);
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_1A9242794(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];

  v1 = a1[9];
  v14 = a1[8];
  v15[0] = v1;
  *(_OWORD *)((char *)v15 + 10) = *(_OWORD *)((char *)a1 + 154);
  v2 = a1[5];
  v10 = a1[4];
  v11 = v2;
  v3 = a1[7];
  v12 = a1[6];
  v13 = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v8 = a1[2];
  v9 = v5;
  if (*((_QWORD *)&v5 + 1))
    __asm { BR              X10 }
  sub_1A912D5B8((uint64_t)v7);
  return 0;
}

void sub_1A924289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  swift_bridgeObjectRetain();
  sub_1A912C880(a13, a14, a15, a16, 4u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A93F8E14();
  __break(1u);
}

uint64_t sub_1A9242934(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AAF68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t NSManagedObjectContext.channels<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1A93F8868();
  v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1A9242D70, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1A9242A74()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9242A98(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int64_t v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __CFString *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v6 = a1 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1AF41420C](v6);
  if (!v7)
    return a2(MEMORY[0x1E0DEE9D8]);
  v8 = (void *)v7;
  v9 = *(_QWORD *)(a4 + 16);
  if (v9)
  {
    v29 = (void *)v7;
    v30 = MEMORY[0x1E0DEE9D8];
    v10 = CFSTR("MTChannel");
    sub_1A908182C(0, v9, 0);
    v11 = v30;
    v12 = a4 + 32;
    sub_1A915997C();
    do
    {
      v12 += 8;
      v13 = sub_1A93F8B38();
      v15 = v14;
      v17 = *(_QWORD *)(v30 + 16);
      v16 = *(_QWORD *)(v30 + 24);
      if (v17 >= v16 >> 1)
        sub_1A908182C(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v30 + 16) = v17 + 1;
      v18 = v30 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      --v9;
    }
    while (v9);
    v8 = v29;
  }
  else
  {
    v20 = CFSTR("MTChannel");
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v21 = (void *)objc_opt_self();
  sub_1A9159F94(v11);
  swift_bridgeObjectRelease();
  v22 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_predicateForChannelStoreIds_, v22);

  v24 = MEMORY[0x1E0DEE9D8];
  v25 = (void *)sub_1A93F82F8();
  v26 = objc_msgSend(v8, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, CFSTR("MTChannel"), v23, v25, 1);

  if (v26)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v27 = sub_1A93F8310();

    v28 = sub_1A9261460(v27);
    swift_bridgeObjectRelease();
    if (v28)
      v24 = v28;
  }
  a2(v24);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9242D3C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9242D70()
{
  uint64_t v0;

  return sub_1A9242A98(*(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:didReplace:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:beganEvaluationOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:finishedEvaluationWithError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorObserver.processor(_:encounteredError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t AnalyticsUserIdentifier.clientId.getter()
{
  return sub_1A9242E28(&OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId);
}

id sub_1A9242DC4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t AnalyticsUserIdentifier.userId.getter()
{
  return sub_1A9242E28(&OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId);
}

uint64_t sub_1A9242E28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnalyticsUserIdentifier.userAllowsPersonalization.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization);
}

uint64_t AnalyticsUserIdentifier.userUnder13YearsOld.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld);
}

uint64_t AnalyticsUserIdentifier.userIsManagedAccount.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount);
}

id AnalyticsUserIdentifier.__allocating_init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  objc_class *v7;
  _BYTE *v15;
  _QWORD *v16;
  _QWORD *v17;
  objc_super v19;

  v15 = objc_allocWithZone(v7);
  v16 = &v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  *v16 = a1;
  v16[1] = a2;
  v17 = &v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  *v17 = a3;
  v17[1] = a4;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization] = a5;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld] = a6;
  v15[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount] = a7;
  v19.receiver = v15;
  v19.super_class = v7;
  return objc_msgSendSuper2(&v19, sel_init);
}

id AnalyticsUserIdentifier.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AnalyticsUserIdentifier.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AnalyticsUserIdentifier.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A924301C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9066C6C();
  sub_1A93F7D88();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066DB4((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A93F888C();
  qword_1ED2A56C0 = result;
  return result;
}

unint64_t static AnalyticsIdentifierManager.kMTResetIdentifierKey.getter()
{
  return 0xD000000000000018;
}

void sub_1A9243304(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1A9243354(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1A92433B4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A92433F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A9243450()
{
  return sub_1A908CAE8((uint64_t)sub_1A924361C, (uint64_t)&block_descriptor_4_0);
}

void sub_1A9243464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = (char *)v2;
    sub_1A93F87B4();
    if (qword_1ED2A4300 != -1)
      swift_once();
    swift_beginAccess();
    v4 = (id)qword_1ED2A42F0;
    sub_1A93F75A8();

    v5 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_promiseLock];
    MEMORY[0x1E0C80A78](v6);
    swift_retain();
    os_unfair_lock_lock(v5 + 4);
    sub_1A914C8AC(v7, (uint64_t (*)(void))sub_1A9243FFC);
    os_unfair_lock_unlock(v5 + 4);
    swift_release();
    v8 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
    v9 = (void *)sub_1A93F8010();
    objc_msgSend(v8, sel_setBool_forKey_, 0, v9);

    sub_1A908CD08();
  }
}

void sub_1A924361C()
{
  uint64_t v0;

  sub_1A9243464(v0);
}

id sub_1A9243624(uint64_t a1)
{
  id *v2;
  id v3;
  id v4;

  v2 = (id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  if (objc_msgSend(*v2, sel_isFinished))
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDBB8]), sel_init);
    v4 = *v2;
    *v2 = v3;

  }
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_store), sel_reset);
}

uint64_t static AnalyticsIdentifierManager.hashDSIDWithSalt(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[12];

  v16[11] = *MEMORY[0x1E0C80C00];
  v4 = sub_1A93F7E90();
  v16[2] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A93F7E84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F8088();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1A93F80DC() >= 1)
  {
    v16[0] = v6;
    v16[1] = v8;
    v16[6] = a1;
    v16[7] = a2;
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    sub_1A93F807C();
    sub_1A93F804C();
    v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v14 >> 60 != 15)
    {
      sub_1A9066CA8(&qword_1ED2ABB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      sub_1A93F7E78();
      __asm { BR              X10 }
    }
  }
  return 0;
}

id AnalyticsIdentifierManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsIdentifierManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_BYTE *sub_1A9243C28@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1A9243E44(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1A9243F04((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1A9243F7C((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A9243C9C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A93F6F78();
  if (!result || (result = sub_1A93F6F90(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A93F6F84();
      sub_1A93F7E90();
      sub_1A9066CA8(&qword_1ED2ABB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return sub_1A93F7E60();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1A9243D60@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation26AnalyticsIdentifierManager_identifierPromise);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for AnalyticsUserIdentifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalyticsUserIdentifier.__allocating_init(clientId:userId:userAllowsPersonalization:userUnder13YearsOld:userIsManagedAccount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for AnalyticsIdentifierManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.identifierPromise.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.updateIdentifiers()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AnalyticsIdentifierManager.resetIdentifiers()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1A9243E44(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1A9243F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A93F6F9C();
  swift_allocObject();
  result = sub_1A93F6F6C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A93F7290();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1A9243F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A93F6F9C();
  swift_allocObject();
  result = sub_1A93F6F6C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

id sub_1A9243FFC()
{
  uint64_t v0;

  return sub_1A9243624(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A9244014(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A9234380(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A924419C(v5);
  *a1 = v2;
  return result;
}

id PodcastUpdateAverageCalculator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PodcastUpdateAverageCalculator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastUpdateAverageCalculator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PodcastUpdateAverageCalculator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastUpdateAverageCalculator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A924419C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1A924482C((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_1A9234330((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A93F837C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A9233E0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_1A9233E0C((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_1A924482C((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A924482C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A9234064((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9244A98(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(result + 16))
  {
    v2 = result;
    swift_bridgeObjectRetain();
    sub_1A9244014(&v2);
    v1 = *(_QWORD *)(v2 + 16);
    if ((v1 & 1) != 0)
    {
      if (v1 >> 1 < v1)
        return swift_release();
    }
    else
    {
      if (v1 >= 2)
        return swift_release();
      __break(1u);
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  return result;
}

id sub_1A9244B44(void *a1, void *a2)
{
  id result;
  void *v5;
  void *v6;
  __CFString *v7;
  id v8;
  id v9;
  unint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  id v34;

  result = objc_msgSend(a1, sel_uuid);
  if (!result)
    return result;
  v5 = result;
  v34 = a1;
  v6 = (void *)objc_opt_self();
  v7 = CFSTR("MTEpisode");
  v8 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v5);

  v9 = objc_msgSend(v6, sel_sortDescriptorsForPubDateAscending_, 0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v10 = sub_1A93F8310();

  sub_1A911ECB8(v10);
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v7, v8, v11, 0, 10);

  if (!v12
    || (sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0),
        v13 = sub_1A93F8310(),
        v12,
        v14 = sub_1A926140C(v13),
        swift_bridgeObjectRelease(),
        !v14))
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v15 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRetain();
      v31 = sub_1A93F8E5C();
      result = (id)swift_bridgeObjectRelease();
      v16 = v31 - 1;
      if (!__OFSUB__(v31, 1))
        goto LABEL_8;
      goto LABEL_27;
    }
LABEL_28:
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_29:
    swift_bridgeObjectRelease_n();
    sub_1A9244A98((uint64_t)v19);
    v33 = v32;
    swift_bridgeObjectRelease();
    return objc_msgSend(v34, sel_setUpdateAvg_, v33);
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  if (!v15)
    goto LABEL_28;
  v16 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_8:
  if (v15 >= 1)
  {
    v17 = 0;
    v18 = v14 & 0xC000000000000001;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v18)
        v20 = (id)MEMORY[0x1AF4129DC](v17, v14);
      else
        v20 = *(id *)(v14 + 8 * v17 + 32);
      v21 = v20;
      v22 = v17 + 1;
      if (v17 < v16)
      {
        objc_msgSend(v20, sel_pubDate);
        v24 = v23;
        if (v18)
          v25 = (id)MEMORY[0x1AF4129DC](v17 + 1, v14);
        else
          v25 = *(id *)(v14 + 8 * v17 + 40);
        v26 = v25;
        objc_msgSend(v25, sel_pubDate);
        v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_1A90A118C(0, v19[2] + 1, 1, v19);
        v30 = v19[2];
        v29 = v19[3];
        if (v30 >= v29 >> 1)
          v19 = sub_1A90A118C((_QWORD *)(v29 > 1), v30 + 1, 1, v19);
        v19[2] = v30 + 1;
        *(double *)&v19[v30 + 4] = vabdd_f64(v24, v28);
      }

      v17 = v22;
    }
    while (v15 != v22);
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PodcastUpdateAverageCalculator()
{
  return objc_opt_self();
}

uint64_t method lookup function for PodcastUpdateAverageCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastUpdateAverageCalculator.unsafeSetUpdateAverage(podcast:on:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t Publisher.pf_combineLatest(_:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  sub_1A9245620(a1, a1);
  v5 = *(_QWORD *)(a1 - 8);
  swift_allocObject();
  sub_1A93F8334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v2, a1);
  sub_1A93F83D0();
  v7 = sub_1A93F8358();
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t Publishers.PFCombineLatestMany.publishers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1A9245000(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD v11[3];

  v3 = sub_1A93F9354();
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7948);
  MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, _OWORD *, double))(v8 + 16))((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A9405520;
  *(_QWORD *)(v9 + 32) = 0xD000000000000012;
  *(_QWORD *)(v9 + 40) = 0x80000001A944A2C0;
  *(_QWORD *)(v9 + 72) = sub_1A93F76D4();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 48));
  v10 = a1[2];
  v11[0] = a1[1];
  v11[1] = v10;
  v11[2] = a1[3];
  _s19PFCombineLatestManyV5InnerCMa();
}

uint64_t sub_1A9245154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x1AF414014](&unk_1A94147E0, a1);
  sub_1A93F76B0();
  v3 = sub_1A93F9348();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1A9117824(v1);
  return sub_1A93F9378();
}

void sub_1A92451E4(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
  strcpy((char *)a1, "CombineLatest");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1A9245218()
{
  return 0x4C656E69626D6F43;
}

uint64_t sub_1A9245244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 72);
  v5 = sub_1A93F76D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1A9245284()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[3];
  _QWORD *v9;

  v1 = (_OWORD *)*v0;
  v2 = sub_1A93F9354();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7948);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0;
  v6 = sub_1A93F9348();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = v1[6];
  v8[0] = v1[5];
  v8[1] = v7;
  v8[2] = v1[7];
  _s19PFCombineLatestManyV5InnerCMa();
}

uint64_t sub_1A9245354()
{
  uint64_t v0;

  sub_1A9117824(v0);
  swift_retain();
  return sub_1A93F9378();
}

void sub_1A92453A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  _QWORD v18[3];
  __int128 v19;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = sub_1A93F8A90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - v5;
  v7 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v0 + *(_QWORD *)(v1 + 184)) + 16);
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(*v0 + 152);
  if ((*((_BYTE *)v0 + v8) & 1) != 0)
  {
    os_unfair_lock_unlock(v7);
  }
  else
  {
    v9 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 144));
    swift_beginAccess();
    v10 = *v9;
    *((_BYTE *)v0 + v8) = 1;
    memset(v18, 0, sizeof(v18));
    v19 = xmmword_1A9411140;
    v11 = *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 176));
    swift_bridgeObjectRetain();
    *v9 = sub_1A90C1450((uint64_t)v18, v11);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v6, 1, 1, v2);
    v12 = sub_1A90C13A0((uint64_t)v6, v11, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v13 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 136));
    swift_beginAccess();
    *v13 = v12;
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v7);
    v14 = *(_QWORD *)(v10 + 16);
    if (v14)
    {
      v15 = v10 + 32;
      do
      {
        sub_1A905E4E4(v15, (uint64_t)&v16);
        if (v17 <= 1)
        {
          sub_1A905E684((uint64_t)&v16);
        }
        else
        {
          sub_1A905D4AC(&v16, (uint64_t)v18);
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_1A93F78B4();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
        }
        v15 += 40;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1A92455C0()
{
  sub_1A9245284();
}

void sub_1A92455E0(uint64_t a1@<X8>)
{
  sub_1A92451E4(a1);
}

void sub_1A9245600()
{
  sub_1A92453A0();
}

uint64_t sub_1A9245620(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  else
    return sub_1A93F906C();
}

uint64_t *sub_1A924566C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 72);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A93F76D4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v3;
}

_QWORD *sub_1A9245708(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 72);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A93F76D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_1A9245784(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 72);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1A93F76D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1A92457E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = *(int *)(a3 + 72);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A93F76D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A924584C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F76D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 72), a2, v8);
  }
}

uint64_t sub_1A92458C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A93F76D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 72), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A924593C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t ServerPodcast.feedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD **)(v1 + 104);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2[3])
  {
    v3 = v2[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = v2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t ServerPodcast.category.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 208);
  if (!v2 || !*(_QWORD *)(v2 + 16))
    return 0;
  v3 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.globalImageURL.getter()
{
  return 0;
}

BOOL ServerPodcast.hasEpisodes.getter()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  v2 = *v1;
  if (!v2)
    return 0;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 != 0;
}

uint64_t _s18PodcastsFoundation13ServerPodcastC6authorSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.updatedFeedURL.getter()
{
  return 0;
}

uint64_t ServerPodcast.resolvedFeedURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 88);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.isExplicit.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v1)
  {
    if (!*(_QWORD *)(v1 + 184)
      || (swift_bridgeObjectRetain(), v2 = sub_1A93F8ED4(), swift_bridgeObjectRelease(), v2 != 1))
    {
      LOBYTE(v2) = sub_1A93F90C0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

BOOL ServerPodcast.isNotSubscribable.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(unsigned __int8 *)(v1 + 48);
  return (v2 & 1) == 0 && v2 != 2;
}

uint64_t ServerPodcast.shareURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.showType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 136);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.webpageURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 192);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcast.podcastStoreId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcast.displayType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  char v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(void **)(v1 + 64);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  PodcastAttributes.DisplayType.init(rawValue:)(v4);
  return *(_QWORD *)&aFree_4[8 * v6];
}

uint64_t ServerPodcast.offers.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 224);
  if (!v2)
    return 0;
  v13 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; v3 = sub_1A93F8E5C())
  {
    v4 = 4;
    while (1)
    {
      v5 = v4 - 4;
      if ((v2 & 0xC000000000000001) == 0)
        break;
      v6 = MEMORY[0x1AF4129DC](v4 - 4, v2);
      v7 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_18;
LABEL_13:
      v12 = v6;
      sub_1A92464A4(&v12);
      v8 = swift_release();
      if (v11)
      {
        MEMORY[0x1AF412004](v8);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
      }
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        v9 = v13;
        goto LABEL_21;
      }
    }
    v6 = *(_QWORD *)(v2 + 8 * v4);
    swift_retain();
    v7 = v4 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_13;
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1A92464A4(uint64_t *a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;

  v1 = *a1;
  v2 = objc_msgSend(objc_allocWithZone((Class)IMPodcastOffer), sel_init);
  swift_bridgeObjectRetain();
  v3 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v2, sel_setKind_, v4);

  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(void **)(v1 + 24);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  PriceType.init(rawValue:)(v7);
  __asm { BR              X10 }
}

void sub_1A92465B8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v2 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setPriceType_, v2);

  *v0 = v1;
}

uint64_t ServerPodcast.uberBackgroundImageURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 48);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberBackgroundJoeColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 64);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextPrimaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 80);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextSecondaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 96);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextTertiaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t ServerPodcast.uberArtworkTextQuaternaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 152);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v3 + 128);
  swift_bridgeObjectRetain();
  return v4;
}

id sub_1A9246B18(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t ServerPodcast.imageURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 112);
    if (v5)
    {
      if (!*(_QWORD *)(v5 + 56) || (*(_BYTE *)(v5 + 24) & 1) != 0 || (*(_BYTE *)(v5 + 40) & 1) != 0)
      {
        v6 = sub_1A93F726C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 16);
        v10 = *(_QWORD *)(v5 + 32);
        type metadata accessor for ArtworkFormatter();
        swift_retain();
        static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v3, (double)v9, (double)v10);
        swift_release();
        v11 = sub_1A93F726C();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) != 1)
        {
          v7 = sub_1A93F7170();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
          return v7;
        }
      }
      sub_1A914149C((uint64_t)v3);
    }
  }
  return 0;
}

uint64_t ServerPodcast.artworkTemplateURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkPrimaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextPrimaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextSecondaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 96);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextTertiaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 112);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.artworkTextQuaternaryColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 112);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 128);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerPodcast.channelItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1A93F8E5C();
    v4 = result;
    if (!result)
      goto LABEL_9;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1AF4129DC](0, v3);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 32);
LABEL_8:
    v4 = (uint64_t)v6;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t ServerPodcast.showSpecificUpsellCopy.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 232);
  swift_bridgeObjectRetain();
  return v2;
}

id ServerPodcast.categories.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v1 || !*(_QWORD *)(v1 + 24))
    return 0;
  v2 = swift_bridgeObjectRetain();
  sub_1A911ECCC(v2);
  swift_bridgeObjectRelease();
  v3 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v4 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithArray_, v4);

  return v5;
}

unint64_t sub_1A9247410()
{
  unint64_t result;

  result = qword_1ED2A4178;
  if (!qword_1ED2A4178)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2A4178);
  }
  return result;
}

uint64_t *sub_1A924744C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v7 = a2 + 1;
    v8 = a2[2];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      v10 = *v7;
      sub_1A90D8068(*v7, a2[2]);
      v4[1] = v10;
      v4[2] = v8;
    }
    v11 = a2[4];
    v4[3] = a2[3];
    v4[4] = v11;
    v12 = *(int *)(a3 + 28);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A93F738C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = *(int *)(a3 + 32);
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A92475AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 60 != 15)
    sub_1A905F180(*(_QWORD *)(a1 + 8), v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9247648(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  v6 = a2 + 1;
  v7 = a2[2];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1A90D8068(*v6, a2[2]);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v7;
  }
  v9 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v9;
  v10 = *(int *)(a3 + 28);
  v11 = (void *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = sub_1A93F738C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = *(int *)(a3 + 32);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1A924777C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  *a1 = *a2;
  v6 = a1 + 1;
  v7 = a2 + 1;
  v8 = a2[2];
  if (a1[2] >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      v9 = *v7;
      sub_1A90D8068(*v7, a2[2]);
      a1[1] = v9;
      a1[2] = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_1A924795C((uint64_t)(a1 + 1));
LABEL_6:
    *v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  v10 = *v7;
  sub_1A90D8068(*v7, a2[2]);
  v11 = a1[1];
  v12 = a1[2];
  a1[1] = v10;
  a1[2] = v8;
  sub_1A905F180(v11, v12);
LABEL_8:
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1A93F738C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_13;
  }
  if (v20)
  {
LABEL_13:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_14:
  v22 = *(int *)(a3 + 32);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A924795C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t sub_1A9247990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A93F738C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_1A9247A78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a1 + 1;
  v7 = a2 + 1;
  v8 = a1[2];
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = a2[2];
  if (v9 >> 60 == 15)
  {
    sub_1A924795C((uint64_t)(a1 + 1));
LABEL_4:
    *v6 = *v7;
    goto LABEL_6;
  }
  v10 = a1[1];
  a1[1] = *(_QWORD *)v7;
  a1[2] = v9;
  sub_1A905F180(v10, v8);
LABEL_6:
  v11 = a2[4];
  a1[3] = a2[3];
  a1[4] = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1A93F738C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_12:
  v21 = *(int *)(a3 + 32);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9247C08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9247C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t sub_1A9247CA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9247CAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FairPlayMigrationData(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABBC28);
}

void sub_1A9247D38()
{
  unint64_t v0;

  sub_1A90D8014();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1A9247DC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    v8 = a2[2];
    v9 = a2[3];
    v10 = v7;
    sub_1A90D8068(v8, v9);
    v4[2] = v8;
    v4[3] = v9;
    v11 = a3[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1A93F726C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[8];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_1A93F738C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[9];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A9247EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A905F180(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A9247F44(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[2];
  v8 = a2[3];
  v9 = v6;
  sub_1A90D8068(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1A93F738C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1A924800C(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = a2[2];
  v10 = a2[3];
  sub_1A90D8068(v9, v10);
  v11 = a1[2];
  v12 = a1[3];
  a1[2] = v9;
  a1[3] = v10;
  sub_1A905F180(v11, v12);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1A93F726C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1A93F738C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9248100(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

_QWORD *sub_1A92481AC(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = (void *)a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;

  v8 = a1[2];
  v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1A905F180(v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1A93F738C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9248278()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9248284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A93F726C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_1A93F738C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1A9248324()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9248330(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1A93F726C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_1A93F738C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for FairPlayMigrationData.ValidatedData(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABBCC8);
}

uint64_t sub_1A92483E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A93F726C();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F738C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of FeedIngesterProviderProtocol.createNewIngester(with:from:updaterJobUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t ArtworkFormat.fileExtension.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92484C8 + 4 * byte_1A9414A80[a1]))(6778480, 0xE300000000000000);
}

uint64_t sub_1A92484C8(uint64_t a1)
{
  return a1 + 506;
}

uint64_t sub_1A92484D0()
{
  return 1734701162;
}

uint64_t sub_1A92484E0()
{
  return 1667851624;
}

uint64_t static ArtworkFormat.preferredFormat.getter()
{
  if (qword_1ED2AD2E8 != -1)
    swift_once();
  return byte_1ED2AD2D8;
}

uint64_t ArtworkFormat.cgIdentifier.getter(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1A93F759C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 - 1 >= 2)
  {
    if (a1)
      sub_1A93F756C();
    else
      sub_1A93F7554();
  }
  else
  {
    sub_1A93F7578();
  }
  sub_1A93F753C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = sub_1A93F8010();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static ArtworkFormat.defaultFormat.getter()
{
  return 2;
}

void sub_1A9248610()
{
  CFArrayRef v0;
  void *v1;
  unsigned int v2;
  char v3;

  v0 = CGImageDestinationCopyTypeIdentifiers();
  sub_1A93F8040();
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = -[__CFArray containsObject:](v0, sel_containsObject_, v1);

  if (v2)
    v3 = 3;
  else
    v3 = 0;
  byte_1ED2AD2D8 = v3;
}

id static ArtworkFormat.heicEncodingSupported()()
{
  CFArrayRef v0;
  void *v1;
  id v2;

  v0 = CGImageDestinationCopyTypeIdentifiers();
  sub_1A93F8040();
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = -[__CFArray containsObject:](v0, sel_containsObject_, v1);

  return v2;
}

BOOL static ArtworkFormat.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ArtworkFormat.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t sub_1A9248734()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A924875C + 4 * byte_1A9414A84[*v0]))(6778480, 0xE300000000000000);
}

uint64_t sub_1A924875C(uint64_t a1)
{
  return a1 + 506;
}

uint64_t sub_1A9248764()
{
  return 1734701162;
}

uint64_t sub_1A9248774()
{
  return 1667851624;
}

uint64_t sub_1A9248784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9248E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92487A8()
{
  sub_1A9248CBC();
  return sub_1A93F945C();
}

uint64_t sub_1A92487D0()
{
  sub_1A9248CBC();
  return sub_1A93F9468();
}

uint64_t sub_1A92487F8()
{
  sub_1A9248D00();
  return sub_1A93F945C();
}

uint64_t sub_1A9248820()
{
  sub_1A9248D00();
  return sub_1A93F9468();
}

uint64_t sub_1A9248848()
{
  sub_1A9248D44();
  return sub_1A93F945C();
}

uint64_t sub_1A9248870()
{
  sub_1A9248D44();
  return sub_1A93F9468();
}

uint64_t sub_1A9248898()
{
  sub_1A9248D88();
  return sub_1A93F945C();
}

uint64_t sub_1A92488C0()
{
  sub_1A9248D88();
  return sub_1A93F9468();
}

uint64_t sub_1A92488E8()
{
  sub_1A9248DCC();
  return sub_1A93F945C();
}

uint64_t sub_1A9248910()
{
  sub_1A9248DCC();
  return sub_1A93F9468();
}

void ArtworkFormat.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBD10);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x1E0C80A78](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBD18);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x1E0C80A78](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBD20);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBD28);
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBD30);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9248CBC();
  sub_1A93F93D8();
  __asm { BR              X10 }
}

uint64_t sub_1A9248AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_1A9248DCC();
  sub_1A93F8FAC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

uint64_t ArtworkFormat.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t ArtworkFormat.init(from:)(_QWORD *a1)
{
  return sub_1A9248F84(a1);
}

uint64_t sub_1A9248C7C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A9248F84(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1A9248CA4(_QWORD *a1)
{
  unsigned __int8 *v1;

  ArtworkFormat.encode(to:)(a1, *v1);
}

unint64_t sub_1A9248CBC()
{
  unint64_t result;

  result = qword_1EEABBD38;
  if (!qword_1EEABBD38)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414F00, &type metadata for ArtworkFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD38);
  }
  return result;
}

unint64_t sub_1A9248D00()
{
  unint64_t result;

  result = qword_1EEABBD40;
  if (!qword_1EEABBD40)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414EB0, &type metadata for ArtworkFormat.HeicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD40);
  }
  return result;
}

unint64_t sub_1A9248D44()
{
  unint64_t result;

  result = qword_1EEABBD48;
  if (!qword_1EEABBD48)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414E60, &type metadata for ArtworkFormat.JpegCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD48);
  }
  return result;
}

unint64_t sub_1A9248D88()
{
  unint64_t result;

  result = qword_1EEABBD50;
  if (!qword_1EEABBD50)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414E10, &type metadata for ArtworkFormat.JpgCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD50);
  }
  return result;
}

unint64_t sub_1A9248DCC()
{
  unint64_t result;

  result = qword_1EEABBD58;
  if (!qword_1EEABBD58)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414DC0, &type metadata for ArtworkFormat.PngCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD58);
  }
  return result;
}

uint64_t sub_1A9248E10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6778480 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778986 && a2 == 0xE300000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1734701162 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1667851624 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A9248F84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBDC0);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x1E0C80A78](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBDC8);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x1E0C80A78](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBDD0);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x1E0C80A78](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBDD8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBDE0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A9248CBC();
  v17 = v25;
  sub_1A93F93C0();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_1A93F8F94();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_1A93F8D00();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v21 = &type metadata for ArtworkFormat;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v12;
}

void sub_1A92492A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_1A9248D88();
  sub_1A93F8EEC();
  if (!v0)
    JUMPOUT(0x1A924937CLL);
  JUMPOUT(0x1A924925CLL);
}

void sub_1A92492EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_1A9248D44();
  sub_1A93F8EEC();
  if (!v0)
    JUMPOUT(0x1A924932CLL);
  JUMPOUT(0x1A924925CLL);
}

void sub_1A9249338()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_1A9248D00();
  sub_1A93F8EEC();
  if (!v0)
    JUMPOUT(0x1A924937CLL);
  JUMPOUT(0x1A924925CLL);
}

unint64_t sub_1A92493AC()
{
  unint64_t result;

  result = qword_1EEABBD60;
  if (!qword_1EEABBD60)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkFormat, &type metadata for ArtworkFormat);
    atomic_store(result, (unint64_t *)&qword_1EEABBD60);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkFormat()
{
  return &type metadata for ArtworkFormat;
}

uint64_t _s18PodcastsFoundation13ArtworkFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9249454 + 4 * byte_1A9414A95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9249488 + 4 * byte_1A9414A90[v4]))();
}

uint64_t sub_1A9249488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9249490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9249498);
  return result;
}

uint64_t sub_1A92494A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92494ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A92494B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92494B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkFormat.CodingKeys()
{
  return &type metadata for ArtworkFormat.CodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.PngCodingKeys()
{
  return &type metadata for ArtworkFormat.PngCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.JpgCodingKeys()
{
  return &type metadata for ArtworkFormat.JpgCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.JpegCodingKeys()
{
  return &type metadata for ArtworkFormat.JpegCodingKeys;
}

ValueMetadata *type metadata accessor for ArtworkFormat.HeicCodingKeys()
{
  return &type metadata for ArtworkFormat.HeicCodingKeys;
}

unint64_t sub_1A9249518()
{
  unint64_t result;

  result = qword_1EEABBD68;
  if (!qword_1EEABBD68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414D98, &type metadata for ArtworkFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD68);
  }
  return result;
}

unint64_t sub_1A9249560()
{
  unint64_t result;

  result = qword_1EEABBD70;
  if (!qword_1EEABBD70)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414CB8, &type metadata for ArtworkFormat.PngCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD70);
  }
  return result;
}

unint64_t sub_1A92495A8()
{
  unint64_t result;

  result = qword_1EEABBD78;
  if (!qword_1EEABBD78)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414CE0, &type metadata for ArtworkFormat.PngCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD78);
  }
  return result;
}

unint64_t sub_1A92495F0()
{
  unint64_t result;

  result = qword_1EEABBD80;
  if (!qword_1EEABBD80)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414C68, &type metadata for ArtworkFormat.JpgCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD80);
  }
  return result;
}

unint64_t sub_1A9249638()
{
  unint64_t result;

  result = qword_1EEABBD88;
  if (!qword_1EEABBD88)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414C90, &type metadata for ArtworkFormat.JpgCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD88);
  }
  return result;
}

unint64_t sub_1A9249680()
{
  unint64_t result;

  result = qword_1EEABBD90;
  if (!qword_1EEABBD90)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414C18, &type metadata for ArtworkFormat.JpegCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD90);
  }
  return result;
}

unint64_t sub_1A92496C8()
{
  unint64_t result;

  result = qword_1EEABBD98;
  if (!qword_1EEABBD98)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414C40, &type metadata for ArtworkFormat.JpegCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBD98);
  }
  return result;
}

unint64_t sub_1A9249710()
{
  unint64_t result;

  result = qword_1EEABBDA0;
  if (!qword_1EEABBDA0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414BC8, &type metadata for ArtworkFormat.HeicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBDA0);
  }
  return result;
}

unint64_t sub_1A9249758()
{
  unint64_t result;

  result = qword_1EEABBDA8;
  if (!qword_1EEABBDA8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414BF0, &type metadata for ArtworkFormat.HeicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBDA8);
  }
  return result;
}

unint64_t sub_1A92497A0()
{
  unint64_t result;

  result = qword_1EEABBDB0;
  if (!qword_1EEABBDB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414D08, &type metadata for ArtworkFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBDB0);
  }
  return result;
}

unint64_t sub_1A92497E8()
{
  unint64_t result;

  result = qword_1EEABBDB8;
  if (!qword_1EEABBDB8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9414D30, &type metadata for ArtworkFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBDB8);
  }
  return result;
}

uint64_t HexColor.red.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HexColor.red.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.green.getter(unsigned int a1)
{
  return a1 >> 8;
}

uint64_t HexColor.green.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*HexColor.green.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.blue.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HexColor.blue.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*HexColor.blue.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.alpha.getter(unsigned int a1)
{
  return HIBYTE(a1);
}

uint64_t HexColor.alpha.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*HexColor.alpha.modify())()
{
  return nullsub_1;
}

uint64_t HexColor.init(red:green:blue:alpha:)(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, int a4)
{
  return (a3 << 16) | (a4 << 24) | (a2 << 8) | a1;
}

BOOL sub_1A92498C4(int *a1, int *a2)
{
  return sub_1A92F8240(*a1, *a2);
}

uint64_t sub_1A92498D0()
{
  return sub_1A92B2B0C();
}

uint64_t sub_1A92498D8()
{
  return sub_1A93F9300();
}

uint64_t sub_1A9249904()
{
  return sub_1A931BCC0();
}

uint64_t HexColor.rawValue.getter(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1A9249918@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1A9249944(_DWORD *a1@<X8>)
{
  unsigned int *v1;

  *a1 = bswap32(*v1);
}

unint64_t HexColor.ParseError.description.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F810C();
  return 0xD00000000000001BLL;
}

uint64_t HexColor.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_1A924A79C(a1, a2);
}

uint64_t sub_1A92499F4()
{
  uint64_t v0;

  v0 = sub_1A93F6E34();
  __swift_allocate_value_buffer(v0, qword_1ED2AD2F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2AD2F0);
  return sub_1A93F6E04();
}

uint64_t sub_1A9249A54(uint64_t result)
{
  char v1;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_1A93F80F4();
      if ((v1 & 1) == 0)
        return sub_1A93F80B8();
    }
    __break(1u);
  }
  return result;
}

uint64_t HexColor.description.getter(unsigned int a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405520;
  if (HIBYTE(a1) == 255)
  {
    v3 = MEMORY[0x1E0DEE168];
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEE0F8];
    *(_QWORD *)(v2 + 64) = v3;
    v4 = bswap32(a1) >> 8;
  }
  else
  {
    v4 = bswap32(a1);
    v5 = MEMORY[0x1E0DEE168];
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEE0F8];
    *(_QWORD *)(v2 + 64) = v5;
  }
  *(_DWORD *)(v2 + 32) = v4;
  return sub_1A93F8070();
}

uint64_t sub_1A9249B6C()
{
  unsigned int *v0;

  return HexColor.description.getter(*v0);
}

uint64_t HexColor.debugDescription.getter()
{
  _QWORD v1[2];

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "HexColor(red: ");
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return v1[0];
}

uint64_t sub_1A9249D1C()
{
  return HexColor.debugDescription.getter();
}

uint64_t HexColor.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v2 = sub_1A93F90CC();
  v4 = sub_1A924A79C(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1A9249DF8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t result;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v5 = sub_1A93F90CC();
  v7 = sub_1A924A79C(v5, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v7;
  return result;
}

uint64_t HexColor.encode(to:)(_QWORD *a1, unsigned int a2)
{
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  HexColor.description.getter(a2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1A93F912C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1A9249F7C(_QWORD *a1)
{
  unsigned int *v1;
  unsigned int v2;
  _BYTE v4[24];
  uint64_t v5;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  HexColor.description.getter(v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1A93F912C();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t HexColor.init(integerLiteral:)(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1A924A034@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

CGColorSpaceRef sub_1A924A05C()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateDeviceRGB();
  qword_1EEABBDE8 = (uint64_t)result;
  return result;
}

uint64_t HexColor.init(cgColor:)(CGColor *a1)
{
  unint64_t v1;

  sub_1A924AB40(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t sub_1A924A0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1A93F8190();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A92DAA14();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A93F8D48();
  }
LABEL_7:
  v11 = sub_1A924A184(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1A924A184(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation8HexColorV8rawValueACs6UInt32V_tcfC_0(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_1A924A40C(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 1;
  v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v10 = sub_1A93F8C64();
      v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = a1;
        v16[1] = v17;
        v10 = *((unsigned __int8 *)v16 + i);
        if (*((char *)v16 + i) < 0)
          __asm { BR              X9 }
      }
      else
      {
        v9 = v15;
        if ((a1 & 0x1000000000000000) == 0)
          v9 = sub_1A93F8D48();
        v10 = *(unsigned __int8 *)(v9 + i);
        if (*(char *)(v9 + i) < 0)
          __asm { BR              X10 }
      }
      v12 = 1;
    }
    v13 = (v3 == 0) & a3(v10);
    if ((_DWORD)v13 != 1)
      break;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A924A610(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v14[16];
  uint64_t v15;
  unint64_t v16;

  v4 = sub_1A93F6E34();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  if ((sub_1A93F816C() & 1) != 0)
  {
    v7 = sub_1A93F80DC();
    sub_1A9249A54(v7);
    a1 = v15;
    a2 = v16;
  }
  v8 = qword_1ED2AD220;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED2AD2F0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v9, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v11 + v10, &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  v12 = sub_1A924A40C(a1, a2, (unsigned int (*)(uint64_t))sub_1A924AFB0);
  swift_release();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return v15;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A924A79C(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t *v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int8 v17;
  unsigned int v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 *v22;
  int v23;
  unsigned __int8 v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  _QWORD v30[2];
  char v31;

  v2 = a2;
  v4 = sub_1A924A610(a1, a2);
  if (!v5)
  {
    sub_1A924AF0C();
    swift_allocError();
    *v14 = a1;
LABEL_60:
    v14[1] = v2;
    return swift_willThrow();
  }
  v6 = v4;
  v7 = v5;
  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  v9 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v10 = HIBYTE(v7) & 0xF;
  else
    v10 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v10)
    goto LABEL_59;
  if ((v7 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1A924A0A0(v6, v7, 16);
    swift_bridgeObjectRelease();
    if ((v13 & 0x100000000) == 0)
      goto LABEL_50;
    goto LABEL_59;
  }
  if ((v7 & 0x2000000000000000) != 0)
  {
    v30[0] = v6;
    v30[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    if (v6 == 43)
    {
      if (v8)
      {
        if (--v8)
        {
          LODWORD(v13) = 0;
          v19 = (unsigned __int8 *)v30 + 1;
          while (1)
          {
            v20 = *v19;
            v21 = v20 - 48;
            if ((v20 - 48) >= 0xA)
            {
              if ((v20 - 65) < 6)
              {
                v21 = v20 - 55;
              }
              else
              {
                if ((v20 - 97) > 5)
                  break;
                v21 = v20 - 87;
              }
            }
            if (v13 >> 28)
              break;
            LODWORD(v13) = 16 * v13 + v21;
            ++v19;
            if (!--v8)
              goto LABEL_49;
          }
LABEL_48:
          LODWORD(v13) = 0;
          LOBYTE(v8) = 1;
LABEL_49:
          if ((v8 & 1) == 0)
            goto LABEL_50;
        }
LABEL_59:
        sub_1A924AF0C();
        swift_allocError();
        *v14 = v6;
        v2 = v7;
        goto LABEL_60;
      }
    }
    else
    {
      if (v6 != 45)
      {
        if (v8)
        {
          LODWORD(v13) = 0;
          v22 = (unsigned __int8 *)v30;
          while (1)
          {
            v23 = *v22;
            v24 = v23 - 48;
            if ((v23 - 48) >= 0xA)
            {
              if ((v23 - 65) < 6)
              {
                v24 = v23 - 55;
              }
              else
              {
                if ((v23 - 97) > 5)
                  goto LABEL_48;
                v24 = v23 - 87;
              }
            }
            if (v13 >> 28)
              goto LABEL_48;
            LODWORD(v13) = 16 * v13 + v24;
            ++v22;
            if (!--v8)
              goto LABEL_49;
          }
        }
        goto LABEL_59;
      }
      if (v8)
      {
        if (--v8)
        {
          LODWORD(v13) = 0;
          v15 = (unsigned __int8 *)v30 + 1;
          while (1)
          {
            v16 = *v15;
            v17 = v16 - 48;
            if ((v16 - 48) >= 0xA)
            {
              if ((v16 - 65) < 6)
              {
                v17 = v16 - 55;
              }
              else
              {
                if ((v16 - 97) > 5)
                  goto LABEL_48;
                v17 = v16 - 87;
              }
            }
            if (v13 >> 28)
              goto LABEL_48;
            v18 = 16 * v13;
            LODWORD(v13) = 16 * v13 - v17;
            if (v18 < v17)
              goto LABEL_48;
            ++v15;
            if (!--v8)
              goto LABEL_49;
          }
        }
        goto LABEL_59;
      }
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1A924AB28);
  }
  if ((v6 & 0x1000000000000000) != 0)
    v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v11 = (unsigned __int8 *)sub_1A93F8D48();
  v12 = sub_1A924A184(v11, v9, 16);
  v31 = BYTE4(v12) & 1;
  if ((BYTE4(v12) & 1) != 0)
    goto LABEL_59;
  LODWORD(v13) = (_DWORD)v12;
LABEL_50:
  switch(sub_1A93F80DC())
  {
    case 3:
      swift_bridgeObjectRelease();
      v25 = (v13 >> 8) & 0xF | (16 * ((v13 >> 8) & 0xF));
      LOBYTE(v26) = (v13 >> 4) | (16 * (v13 >> 4));
      v27 = 255;
      LOBYTE(v28) = v13 & 0xF | (16 * (v13 & 0xF));
      break;
    case 4:
      swift_bridgeObjectRelease();
      LOWORD(v25) = ((unsigned __int16)v13 >> 12) | (16 * ((unsigned __int16)v13 >> 12));
      v26 = (v13 >> 8) & 0xF | (16 * ((v13 >> 8) & 0xF));
      LOBYTE(v28) = (v13 >> 4) | (16 * (v13 >> 4));
      v27 = v13 & 0xF | (16 * (v13 & 0xF));
      break;
    case 6:
      swift_bridgeObjectRelease();
      v25 = WORD1(v13);
      v26 = v13 >> 8;
      v27 = 255;
      LOBYTE(v28) = v13;
      break;
    case 8:
      swift_bridgeObjectRelease();
      v25 = bswap32(v13);
      v26 = v25 >> 8;
      v28 = HIWORD(v25);
      v27 = HIBYTE(v25);
      break;
    default:
      goto LABEL_59;
  }
  return (v28 << 16) | (v27 << 24) | (v26 << 8) | v25;
}

void sub_1A924AB40(CGColor *a1)
{
  CGColorSpace *v2;
  CGColorSpace *v3;
  void *v4;
  id v5;
  CGColorSpace *v6;
  char v7;
  CGColorRef CopyByMatchingToColorSpace;
  CGColor *v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  double v13;
  double v14;
  double Alpha;
  double v16;
  double v17;
  double v18;
  double v19;

  v2 = CGColorGetColorSpace(a1);
  v3 = v2;
  if (qword_1EEAB6ED8 == -1)
  {
    if (!v2)
      goto LABEL_6;
  }
  else
  {
    swift_once();
    if (!v3)
      goto LABEL_6;
  }
  v4 = (void *)qword_1EEABBDE8;
  type metadata accessor for CGColorSpace(0);
  sub_1A924AEC4();
  v5 = v4;
  v6 = v3;
  v7 = sub_1A93F750C();

  if ((v7 & 1) != 0)
  {
    CopyByMatchingToColorSpace = a1;
    goto LABEL_7;
  }
LABEL_6:
  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace((CGColorSpaceRef)qword_1EEABBDE8, kCGRenderingIntentDefault, a1, 0);
  if (!CopyByMatchingToColorSpace)
  {
LABEL_25:

    return;
  }
LABEL_7:
  v9 = CopyByMatchingToColorSpace;
  v10 = sub_1A93F8718();

  if (!v10)
  {

    goto LABEL_25;
  }
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v11 == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 < 3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v13 = *(double *)(v10 + 32);
  v12 = *(double *)(v10 + 40);
  v14 = *(double *)(v10 + 48);
  swift_bridgeObjectRelease();
  Alpha = CGColorGetAlpha(a1);

  v16 = v13 * 255.0;
  if (v13 * 255.0 <= -1.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= 256.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v17 = v12 * 255.0;
  if (v12 * 255.0 <= -1.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v17 >= 256.0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v18 = v14 * 255.0;
  if (v14 * 255.0 <= -1.0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 >= 256.0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((*(_QWORD *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_35;
  if ((*(_QWORD *)&v17 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_35;
  if ((*(_QWORD *)&v18 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_35;
  v19 = Alpha * 255.0;
  if ((COERCE_UNSIGNED_INT64(Alpha * 255.0) & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_35;
  if (v19 <= -1.0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= 256.0)
LABEL_37:
    __break(1u);
}

unint64_t sub_1A924AE00()
{
  unint64_t result;

  result = qword_1EEABBDF0;
  if (!qword_1EEABBDF0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for HexColor, &type metadata for HexColor);
    atomic_store(result, (unint64_t *)&qword_1EEABBDF0);
  }
  return result;
}

uint64_t sub_1A924AE44()
{
  return MEMORY[0x1E0DEE160];
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HexColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HexColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HexColor()
{
  return &type metadata for HexColor;
}

ValueMetadata *type metadata accessor for HexColor.ParseError()
{
  return &type metadata for HexColor.ParseError;
}

unint64_t sub_1A924AEC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEABBDF8;
  if (!qword_1EEABBDF8)
  {
    type metadata accessor for CGColorSpace(255);
    result = MEMORY[0x1AF414014](&unk_1A9405430, v1);
    atomic_store(result, (unint64_t *)&qword_1EEABBDF8);
  }
  return result;
}

unint64_t sub_1A924AF0C()
{
  unint64_t result;

  result = qword_1EEABBE00;
  if (!qword_1EEABBE00)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for HexColor.ParseError, &type metadata for HexColor.ParseError);
    atomic_store(result, (unint64_t *)&qword_1EEABBE00);
  }
  return result;
}

uint64_t sub_1A924AF50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A93F6E34();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A924AFB0()
{
  sub_1A93F6E34();
  return sub_1A93F6E1C() & 1;
}

uint64_t sub_1A924AFF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA360);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1A93F6EAC();
  MEMORY[0x1E0C80A78](v3);
  v16[3] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v16[1] = (char *)v16 - v6;
  v7 = *(_QWORD *)(a1 + 64);
  v18 = (_QWORD *)(a1 + 64);
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v19 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v16[2] = "okmarkState";
  if (v10)
  {
    v11 = __clz(__rbit64(v10));
    goto LABEL_20;
  }
  if (v19 > 1)
  {
    v12 = v18[1];
    v13 = 1;
    if (v12)
      goto LABEL_19;
    v13 = 2;
    if (v19 <= 2)
      goto LABEL_21;
    v12 = v18[2];
    if (v12)
      goto LABEL_19;
    v13 = 3;
    if (v19 <= 3)
      goto LABEL_21;
    v12 = v18[3];
    if (v12)
      goto LABEL_19;
    v13 = 4;
    if (v19 <= 4)
      goto LABEL_21;
    v12 = v18[4];
    if (v12)
    {
LABEL_19:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_20:
      __asm { BR              X8 }
    }
    v14 = 5;
    if (v19 > 5)
    {
      v12 = v18[5];
      if (v12)
      {
        v13 = 5;
        goto LABEL_19;
      }
      while (1)
      {
        v13 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          JUMPOUT(0x1A924B55CLL);
        }
        if (v13 >= v19)
          break;
        v12 = v18[v13];
        ++v14;
        if (v12)
          goto LABEL_19;
      }
    }
  }
LABEL_21:
  swift_release();
  return v17;
}

PodcastsFoundation::URLTrackIdentifier_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URLTrackIdentifier.init(string:)(Swift::String string)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _OWORD *v18;
  _OWORD *v19;
  void *v20;
  PodcastsFoundation::URLTrackIdentifier::Command v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  _QWORD v47[3];
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  PodcastsFoundation::URLTrackIdentifier_optional result;

  v3 = v1;
  v4 = sub_1A93F6EAC();
  v60 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C38);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F6F60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6F30();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1A93F6EE8();
    if (!v13)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      goto LABEL_12;
    }
    v59 = v4;
    v14 = sub_1A93F6F18();
    if (!v15)
      goto LABEL_10;
    if (v14 == 0x7374736163646F70 && v15 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        sub_1A924CC8C();
        swift_allocError();
        *v18 = xmmword_1A9407FB0;
LABEL_16:
        swift_willThrow();
        v20 = (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        goto LABEL_43;
      }
    }
    sub_1A924C7FC();
    v22 = v61;
    if (v61 == 5)
    {
      sub_1A924CC8C();
      swift_allocError();
      *v23 = 0;
      v23[1] = 0;
      goto LABEL_16;
    }
    v24 = sub_1A93F6EC4();
    if (v24)
    {
      v47[2] = v2;
      v57 = *(_QWORD *)(v24 + 16);
      v51 = v3;
      v52 = v9;
      v49 = v10;
      v50 = v12;
      v48 = v22;
      if (v57)
      {
        v56 = v24 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        v25 = *(_QWORD *)(v60 + 72);
        v54 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
        v55 = v25;
        v47[1] = v24;
        swift_bridgeObjectRetain();
        v58 = MEMORY[0x1E0DEE9D8];
        v53 = "okmarkState";
        v54(v62, v56, v59);
        sub_1A93F6E94();
        JUMPOUT(0x1A924B95CLL);
      }
      v27 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v26 = (_QWORD *)sub_1A91131B0(MEMORY[0x1E0DEE9D8]);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v58 = swift_bridgeObjectRetain();
        v29 = (uint64_t *)(v58 + 48);
        while (1)
        {
          v31 = *((unsigned __int8 *)v29 - 16);
          v33 = *(v29 - 1);
          v32 = *v29;
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v61 = v26;
          v36 = sub_1A912E634(v31);
          v37 = v26[2];
          v38 = (v35 & 1) == 0;
          v39 = v37 + v38;
          if (__OFADD__(v37, v38))
          {
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            sub_1A93F9258();
            __break(1u);
            JUMPOUT(0x1A924BE18);
          }
          v40 = v35;
          if (v26[3] >= v39)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v26 = v61;
              if ((v35 & 1) == 0)
                goto LABEL_32;
            }
            else
            {
              sub_1A9308DD0();
              v26 = v61;
              if ((v40 & 1) == 0)
                goto LABEL_32;
            }
          }
          else
          {
            sub_1A9301028(v39, isUniquelyReferenced_nonNull_native);
            v41 = sub_1A912E634(v31);
            if ((v40 & 1) != (v42 & 1))
              goto LABEL_41;
            v36 = v41;
            v26 = v61;
            if ((v40 & 1) == 0)
            {
LABEL_32:
              v26[(v36 >> 6) + 8] |= 1 << v36;
              *(_BYTE *)(v26[6] + v36) = v31;
              v43 = (_QWORD *)(v26[7] + 16 * v36);
              *v43 = v33;
              v43[1] = v32;
              v44 = v26[2];
              v45 = __OFADD__(v44, 1);
              v46 = v44 + 1;
              if (v45)
                goto LABEL_40;
              v26[2] = v46;
              goto LABEL_24;
            }
          }
          v30 = (_QWORD *)(v26[7] + 16 * v36);
          swift_bridgeObjectRelease();
          *v30 = v33;
          v30[1] = v32;
LABEL_24:
          v29 += 3;
          swift_bridgeObjectRelease();
          if (!--v28)
          {
            swift_bridgeObjectRelease();
            v3 = v51;
            v9 = v52;
            v10 = v49;
            v12 = v50;
            LOBYTE(v22) = v48;
            break;
          }
        }
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v20 = (void *)swift_bridgeObjectRelease();
    }
    else
    {
      v26 = (_QWORD *)sub_1A91131B0(MEMORY[0x1E0DEE9D8]);
      v20 = (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    *(_QWORD *)v3 = v26;
    *(_BYTE *)(v3 + 8) = v22;
    goto LABEL_43;
  }
  sub_1A905FD54((uint64_t)v8, &qword_1ED2A5C38);
LABEL_12:
  sub_1A924CC8C();
  swift_allocError();
  *v19 = xmmword_1A9407FB0;
  v20 = (void *)swift_willThrow();
LABEL_43:
  result.value.arguments._rawValue = v20;
  result.value.command = v21;
  return result;
}

Swift::String_optional __swiftcall URLTrackIdentifier.valueForArgument(_:)(PodcastsFoundation::URLTrackIdentifier::ArgumentKey a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1A912E634(*(unsigned __int8 *)a1), (v4 & 1) != 0))
  {
    v5 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    v6 = *v5;
    v7 = (void *)v5[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = v6;
  v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

PodcastsFoundation::URLTrackIdentifier __swiftcall URLTrackIdentifier.init(command:arguments:)(PodcastsFoundation::URLTrackIdentifier::Command command, Swift::OpaquePointer arguments)
{
  uint64_t v2;
  char v3;
  PodcastsFoundation::URLTrackIdentifier result;

  v3 = *(_BYTE *)command;
  *(Swift::OpaquePointer *)v2 = arguments;
  *(_BYTE *)(v2 + 8) = v3;
  result.command = (PodcastsFoundation::URLTrackIdentifier::Command)arguments._rawValue;
  LOBYTE(result.arguments._rawValue) = command;
  return result;
}

uint64_t URLTrackIdentifier.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1A93F6F60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6F54();
  sub_1A93F6F24();
  sub_1A93F6EF4();
  v4 = swift_bridgeObjectRetain();
  sub_1A924AFF4(v4);
  swift_bridgeObjectRelease();
  sub_1A93F6ED0();
  v5 = sub_1A93F6F3C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

PodcastsFoundation::URLTrackIdentifier::Command_optional __swiftcall URLTrackIdentifier.Command.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::URLTrackIdentifier::Command_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static URLTrackIdentifier.Command.allCases.getter()
{
  return &unk_1E54D7270;
}

uint64_t URLTrackIdentifier.Command.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A924C060 + 4 * byte_1A9415180[*v0]))(0x63646F5079616C70, 0xEC00000073747361);
}

uint64_t sub_1A924C070()
{
  return 0x7461745379616C70;
}

uint64_t sub_1A924C090()
{
  return 0x6269726373627573;
}

uint64_t sub_1A924C0AC()
{
  return 0x6D65744979616C70;
}

void sub_1A924C0C4(char *a1)
{
  sub_1A92F922C(*a1);
}

void sub_1A924C0D0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A924C128()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A924C1BC()
{
  __asm { BR              X10 }
}

uint64_t sub_1A924C200()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A924C278()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A924C2CC()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::URLTrackIdentifier::Command_optional sub_1A924C360(Swift::String *a1)
{
  return URLTrackIdentifier.Command.init(rawValue:)(*a1);
}

uint64_t sub_1A924C36C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A924C3A4 + 4 * byte_1A9415194[*v0]))();
}

void sub_1A924C3A4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEB00000000747361;
}

void sub_1A924C3B8(_QWORD *a1@<X8>)
{
  *a1 = 0x7461745379616C70;
  a1[1] = 0xEB000000006E6F69;
}

void sub_1A924C3DC(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xE900000000000065;
}

void sub_1A924C3FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6D65744979616C70;
  a1[1] = 0xE800000000000000;
}

void sub_1A924C418(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7298;
}

PodcastsFoundation::URLTrackIdentifier::ArgumentKey_optional __swiftcall URLTrackIdentifier.ArgumentKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::URLTrackIdentifier::ArgumentKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F91F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 17;
  if (v3 < 0x11)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static URLTrackIdentifier.ArgumentKey.allCases.getter()
{
  return &unk_1E54D7018;
}

uint64_t URLTrackIdentifier.ArgumentKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A924C4C0 + 4 * byte_1A9415199[*v0]))(1684632949, 0xE400000000000000);
}

uint64_t sub_1A924C4C0()
{
  return 0x5565646F73697065;
}

uint64_t sub_1A924C5A8()
{
  return 0x5465646F73697065;
}

uint64_t sub_1A924C5DC()
{
  return 0x72556D6165727473;
}

uint64_t sub_1A924C5F8()
{
  return 0x6461656879616C70;
}

uint64_t sub_1A924C610()
{
  return 0x7361655279616C70;
}

uint64_t sub_1A924C62C()
{
  return 0x747865746E6F63;
}

uint64_t sub_1A924C644()
{
  return 0x53747865746E6F63;
}

uint64_t sub_1A924C668()
{
  return 0x7265756575716E65;
}

uint64_t sub_1A924C688(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F93C8(*a1, *a2);
}

PodcastsFoundation::URLTrackIdentifier::ArgumentKey_optional sub_1A924C694(Swift::String *a1)
{
  return URLTrackIdentifier.ArgumentKey.init(rawValue:)(*a1);
}

uint64_t sub_1A924C6A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = URLTrackIdentifier.ArgumentKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A924C6C4()
{
  sub_1A93F92DC();
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A924C728()
{
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A924C778()
{
  sub_1A93F92DC();
  URLTrackIdentifier.ArgumentKey.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A924C7D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7018;
}

uint64_t URLTrackIdentifier.arguments.getter()
{
  return swift_bridgeObjectRetain();
}

void URLTrackIdentifier.command.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

void sub_1A924C7FC()
{
  __asm { BR              X11; loc_1A924C8D0 }
}

unint64_t sub_1A924CC8C()
{
  unint64_t result;

  result = qword_1EEABBE08;
  if (!qword_1EEABBE08)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for URLTrackIdentifier.URLTrackIdentifierError, &type metadata for URLTrackIdentifier.URLTrackIdentifierError);
    atomic_store(result, (unint64_t *)&qword_1EEABBE08);
  }
  return result;
}

unint64_t sub_1A924CCD4()
{
  unint64_t result;

  result = qword_1EEABBE10;
  if (!qword_1EEABBE10)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for URLTrackIdentifier.Command, &type metadata for URLTrackIdentifier.Command);
    atomic_store(result, (unint64_t *)&qword_1EEABBE10);
  }
  return result;
}

uint64_t sub_1A924CD18()
{
  return sub_1A924CDA8(&qword_1EEABBE18, &qword_1EEABBE20);
}

unint64_t sub_1A924CD40()
{
  unint64_t result;

  result = qword_1EEABBE28;
  if (!qword_1EEABBE28)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for URLTrackIdentifier.ArgumentKey, &type metadata for URLTrackIdentifier.ArgumentKey);
    atomic_store(result, (unint64_t *)&qword_1EEABBE28);
  }
  return result;
}

uint64_t sub_1A924CD84()
{
  return sub_1A924CDA8(&qword_1EEABBE30, &qword_1EEABBE38);
}

uint64_t sub_1A924CDA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for URLTrackIdentifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier()
{
  return &type metadata for URLTrackIdentifier;
}

unint64_t destroy for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18PodcastsFoundation18URLTrackIdentifierV23URLTrackIdentifierErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for URLTrackIdentifier.URLTrackIdentifierError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLTrackIdentifier.URLTrackIdentifierError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for URLTrackIdentifier.URLTrackIdentifierError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.URLTrackIdentifierError()
{
  return &type metadata for URLTrackIdentifier.URLTrackIdentifierError;
}

uint64_t storeEnumTagSinglePayload for URLTrackIdentifier.Command(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A924D120 + 4 * byte_1A94151C8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A924D154 + 4 * byte_1A94151C3[v4]))();
}

uint64_t sub_1A924D154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924D15C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A924D164);
  return result;
}

uint64_t sub_1A924D170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A924D178);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A924D17C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924D184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.Command()
{
  return &type metadata for URLTrackIdentifier.Command;
}

uint64_t storeEnumTagSinglePayload for URLTrackIdentifier.ArgumentKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1A924D1EC + 4 * byte_1A94151D2[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1A924D220 + 4 * byte_1A94151CD[v4]))();
}

uint64_t sub_1A924D220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924D228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A924D230);
  return result;
}

uint64_t sub_1A924D23C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A924D244);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1A924D248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924D250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URLTrackIdentifier.ArgumentKey()
{
  return &type metadata for URLTrackIdentifier.ArgumentKey;
}

uint64_t sub_1A924D270(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v1, 0);
    v2 = v14;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      v5 = v4[3];
      v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1A908182C(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1A908182C(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t CombinedTrace.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_1A924D270(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A90819B0();
  v1 = sub_1A93F7FE0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CombinedTrace.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedTrace.init(children:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A924D430(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 16 * v2 + 16;
  v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v8 = v1[2];
    if (v4 >= v8)
      break;
    if (v6 >= v8)
      goto LABEL_13;
    v10 = v1[v3 + 4];
    v9 = v1[v3 + 5];
    v12 = *(_QWORD *)((char *)v1 + v7);
    v11 = *(_QWORD *)((char *)v1 + v7 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1A9398DB0(v1);
    v13 = &v1[v3];
    result = swift_bridgeObjectRelease();
    v13[4] = v12;
    v13[5] = v11;
    if (v6 >= v1[2])
      goto LABEL_14;
    v14 = (_QWORD *)((char *)v1 + v7);
    result = swift_bridgeObjectRelease();
    *v14 = v10;
    v14[1] = v9;
    v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 2;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for CombinedTrace()
{
  return &type metadata for CombinedTrace;
}

ValueMetadata *type metadata accessor for CombinedTrace.Interval()
{
  return &type metadata for CombinedTrace.Interval;
}

uint64_t sub_1A924D574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92174D4(a1, (uint64_t)v9);
  v10 = sub_1A93F84CC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A921751C((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_1A93F840C();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A93F84C0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t Collection<>.concurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1A924D718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 48);
  swift_getTupleTypeMetadata2();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v7;
  *(_QWORD *)(v3 + 40) = v1;
  *(_OWORD *)(v3 + 48) = v4;
  sub_1A93F83D0();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_1A924D814;
  return sub_1A93F8EE0();
}

uint64_t sub_1A924D814()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A924D880()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A924D88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  v8[13] = *(_QWORD *)(a8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[15] = v10;
  v8[16] = *(_QWORD *)(v10 + 64);
  v8[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  v8[18] = swift_task_alloc();
  v8[19] = swift_getTupleTypeMetadata2();
  sub_1A93F8A90();
  v8[20] = swift_task_alloc();
  v8[21] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v11 = sub_1A93F8574();
  v8[22] = v11;
  v8[23] = *(_QWORD *)(v11 - 8);
  v8[24] = swift_task_alloc();
  v8[25] = swift_getTupleTypeMetadata2();
  v12 = sub_1A93F8A90();
  v8[26] = v12;
  v8[27] = *(_QWORD *)(v12 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = sub_1A93F8E50();
  v8[31] = swift_task_alloc();
  v13 = sub_1A93F8E44();
  v8[32] = v13;
  v8[33] = *(_QWORD *)(v13 - 8);
  v8[34] = swift_task_alloc();
  v14 = sub_1A93F8A90();
  v8[35] = v14;
  v8[36] = *(_QWORD *)(v14 - 8);
  v8[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A924DAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  v30 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 88) - 8);
  *(_QWORD *)(v0 + 304) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56);
  *(_QWORD *)(v0 + 312) = v5;
  v5(v1, 1, 1);
  v6 = sub_1A93F86B8();
  v7 = sub_1A90C13A0(v1, v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 16) = v7;
  sub_1A93F81E4();
  sub_1A93F8E2C();
  while (1)
  {
    v9 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    sub_1A93F8E38();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v8, v9, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v8, 1, v11) == 1)
      break;
    v12 = *(uint64_t **)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 144);
    v14 = *(char **)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 72);
    v28 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 64);
    v17 = (char *)v12 + *(int *)(v30 + 48);
    v18 = *v12;
    v19 = sub_1A93F84CC();
    v27 = *(_OWORD *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
    v20 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v20(v14, v17, v15);
    v21 = (*(unsigned __int8 *)(v25 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
    *(_OWORD *)(v22 + 32) = v27;
    *(_QWORD *)(v22 + 48) = v28;
    *(_QWORD *)(v22 + 56) = v18;
    *(_QWORD *)(v22 + 64) = v29;
    *(_QWORD *)(v22 + 72) = v16;
    v20((char *)(v22 + v21), v14, v15);
    sub_1A93F8580();
    swift_retain();
    sub_1A924D574(v13, (uint64_t)&unk_1EEABBE78, v22);
    sub_1A921751C(v13);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  sub_1A93F8544();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v23;
  *v23 = v0;
  v23[1] = sub_1A924DDA4;
  return sub_1A93F8568();
}

uint64_t sub_1A924DDA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 328) = 0;
  return swift_task_switch();
}

uint64_t sub_1A924DE10()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(unint64_t **)(v0 + 160);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(uint64_t **)(v0 + 40);
    v21 = *(_OWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 16);
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v3;
    *(_OWORD *)(v5 + 24) = v21;
    v6 = sub_1A93F83D0();
    swift_bridgeObjectRetain();
    MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v6);
    v7 = sub_1A93F81D8();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v4 = v7;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 312);
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *v1;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v0 + 304) + 32))(v11, (char *)v1 + *(int *)(v2 + 48), v13);
    v9(v11, 0, 1, v13);
    v15 = sub_1A93F83D0();
    sub_1A93F8364();
    v16 = *(_QWORD *)(v0 + 16);
    sub_1A90C151C(v14, v16);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 40))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v14, v11, v12);
    nullsub_1(v15, v17, v18, v19);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v20;
    *v20 = v0;
    v20[1] = sub_1A924E0AC;
    return sub_1A93F8568();
  }
}

uint64_t sub_1A924E0AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 328) = 0;
  return swift_task_switch();
}

uint64_t sub_1A924E118()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A924E1E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_1A921755C;
  return sub_1A924D88C(a1, a2, v9, v11, v10, v6, v7, v8);
}

uint64_t sub_1A924E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  v7[2] = a1;
  v7[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A924E29C()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  *v5 = v0;
  v5[1] = sub_1A924E334;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_1A924E334()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Collection<>.concurrentMap(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A924E39C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = v0[4];
  v2 = v0[5];
  v4 = v0[2];
  v3 = v0[3];
  v5 = (_QWORD *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  v6 = swift_task_alloc();
  v0[8] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)v6 = v0;
  *(_QWORD *)(v6 + 8) = sub_1A924E478;
  v8 = v0[4];
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v0 + 5);
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 48) = AssociatedTypeWitness;
  *(_QWORD *)(v6 + 24) = &unk_1EEABBE68;
  *(_QWORD *)(v6 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_1A924E478(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A924E500()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A924E534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1A924E554()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = v0[3];
  v2 = (int *)v0[4];
  v3 = v0[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[8] = AssociatedTypeWitness;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v0[9] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, AssociatedTypeWitness);
  v8 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  v6 = (_QWORD *)swift_task_alloc();
  v0[10] = v6;
  *v6 = v0;
  v6[1] = sub_1A924E600;
  return v8(v0[2]);
}

uint64_t sub_1A924E600()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A924E66C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A924E6A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A924E6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v6 = swift_task_alloc();
  v8 = *(_OWORD *)(v2 + 16);
  v7 = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1A9164CD4;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1A924E740()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1A924E7D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = v1 + ((v5 + 80) & ~v5);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_1A921755C;
  *(_QWORD *)(v8 + 48) = v7;
  *(_QWORD *)(v8 + 56) = v4;
  *(_OWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v6;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

uint64_t sub_1A924E8CC()
{
  return 0x7374736163646F50;
}

uint64_t BugReport.Domain.rawValue.getter()
{
  return 0x7374736163646F50;
}

void BugReport.system.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___PFBugReport_system);
}

uint64_t sub_1A924E960()
{
  return PodcastsSystem.rawValue.getter();
}

void BugReport.errorKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___PFBugReport_errorKind);
}

uint64_t sub_1A924E9E4()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A924EA24
                                                                     + 4
                                                                     * asc_1A9415590[*(unsigned __int8 *)(v0 + OBJC_IVAR___PFBugReport_errorKind)]))(0xD000000000000012, 0x80000001A9442630);
}

uint64_t BugReport.ErrorKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A924EAF4 + 4 * byte_1A941559A[*v0]))(0xD000000000000012, 0x80000001A9442630);
}

uint64_t BugReport.forceSubmissionAttempt.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PFBugReport_forceSubmissionAttempt);
}

id BugReport.__allocating_init(domain:system:errorKind:forceSubmissionAttempt:)(uint64_t a1, _BYTE *a2, char *a3, char a4)
{
  objc_class *v4;
  _BYTE *v8;
  char v9;
  objc_super v11;

  v8 = objc_allocWithZone(v4);
  v9 = *a3;
  v8[OBJC_IVAR___PFBugReport_system] = *a2;
  v8[OBJC_IVAR___PFBugReport_errorKind] = v9;
  v8[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = a4;
  v11.receiver = v8;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)(uint64_t a1, _BYTE *a2, char *a3, char a4)
{
  _BYTE *v4;
  char v5;
  objc_super v7;

  v5 = *a3;
  v4[OBJC_IVAR___PFBugReport_system] = *a2;
  v4[OBJC_IVAR___PFBugReport_errorKind] = v5;
  v4[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for BugReport();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for BugReport()
{
  return objc_opt_self();
}

void sub_1A924ECF8()
{
  PodcastsSystem.rawValue.getter();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  __asm { BR              X10 }
}

uint64_t sub_1A924EDA8()
{
  uint64_t v1;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return v1;
}

id BugReport.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BugReport.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BugReport.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BugReport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BugReport.Domain.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A924EF64()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A924EFB4()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A924EFCC()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A924F018@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A924F068(_QWORD *a1@<X8>)
{
  *a1 = 0x7374736163646F50;
  a1[1] = 0xE800000000000000;
}

PodcastsFoundation::BugReport::ErrorKind_optional __swiftcall BugReport.ErrorKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::BugReport::ErrorKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t sub_1A924F0E0()
{
  unint64_t result;

  result = qword_1EEABBE98;
  if (!qword_1EEABBE98)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for BugReport.Domain, &type metadata for BugReport.Domain);
    atomic_store(result, (unint64_t *)&qword_1EEABBE98);
  }
  return result;
}

void sub_1A924F124(char *a1)
{
  sub_1A92F8040(*a1);
}

unint64_t sub_1A924F134()
{
  unint64_t result;

  result = qword_1EEABBEA0;
  if (!qword_1EEABBEA0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for BugReport.ErrorKind, &type metadata for BugReport.ErrorKind);
    atomic_store(result, (unint64_t *)&qword_1EEABBEA0);
  }
  return result;
}

uint64_t sub_1A924F178()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A92270D0((uint64_t)v3, v1);
  return sub_1A93F9324();
}

void sub_1A924F1BC(uint64_t a1)
{
  char *v1;

  sub_1A92270D0(a1, *v1);
}

uint64_t sub_1A924F1C4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A93F92DC();
  sub_1A92270D0((uint64_t)v3, v1);
  return sub_1A93F9324();
}

PodcastsFoundation::BugReport::ErrorKind_optional sub_1A924F204(Swift::String *a1)
{
  return BugReport.ErrorKind.init(rawValue:)(*a1);
}

uint64_t sub_1A924F210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BugReport.ErrorKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for BugReport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BugReport.domainString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BugReport.systemString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BugReport.errorKindString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BugReport.__allocating_init(domain:system:errorKind:forceSubmissionAttempt:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BugReport.signature.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t storeEnumTagSinglePayload for BugReport.Domain(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A924F2F8 + 4 * byte_1A94155AE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A924F318 + 4 * byte_1A94155B3[v4]))();
}

_BYTE *sub_1A924F2F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A924F318(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A924F320(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A924F328(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A924F330(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A924F338(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BugReport.Domain()
{
  return &type metadata for BugReport.Domain;
}

uint64_t storeEnumTagSinglePayload for BugReport.ErrorKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A924F3A0 + 4 * byte_1A94155BD[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A924F3D4 + 4 * byte_1A94155B8[v4]))();
}

uint64_t sub_1A924F3D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924F3DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A924F3E4);
  return result;
}

uint64_t sub_1A924F3F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A924F3F8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A924F3FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A924F404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BugReport.ErrorKind()
{
  return &type metadata for BugReport.ErrorKind;
}

uint64_t NanoPodcastsArtworkToken.key.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_key);
  swift_bridgeObjectRetain();
  return v1;
}

CGColorRef sub_1A924F4D4()
{
  uint64_t v0;
  uint64_t v1;
  CGColor *v2;
  CGColorRef GenericRGB;
  uint64_t v4;
  unsigned int v5;
  void *v6;
  CGColor *v7;

  v1 = OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor;
  v2 = *(CGColor **)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  GenericRGB = v2;
  if (v2 == (CGColor *)1)
  {
    GenericRGB = *(CGColorRef *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString + 8);
    if (GenericRGB)
    {
      v4 = *(_QWORD *)(v0 + OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString);
      swift_bridgeObjectRetain();
      v5 = sub_1A924A79C(v4, (unint64_t)GenericRGB);
      GenericRGB = CGColorCreateGenericRGB((double)v5 / 255.0, (double)BYTE1(v5) / 255.0, (double)BYTE2(v5) / 255.0, (double)HIBYTE(v5) / 255.0);
    }
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = GenericRGB;
    v7 = GenericRGB;
    sub_1A924F5C4(v6);
  }
  sub_1A924F5D4(v2);
  return GenericRGB;
}

void sub_1A924F5C4(id a1)
{
  if (a1 != (id)1)

}

id sub_1A924F5D4(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1A924F614(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(_QWORD *)(v1 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = a1;
  sub_1A924F5C4(v2);
}

void (*sub_1A924F62C(CGColorRef *a1))(uint64_t a1, char a2)
{
  CGColor *v1;

  a1[1] = v1;
  *a1 = sub_1A924F4D4();
  return sub_1A924F660;
}

void sub_1A924F660(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v3 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(_QWORD *)(v3 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v5 = v2;
    sub_1A924F5C4(v4);

  }
  else
  {
    sub_1A924F5C4(v4);
  }
}

id NanoPodcastsArtworkToken.__allocating_init(key:backgroundColorString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor] = 1;
  v10 = &v9[OBJC_IVAR___NMTPodcastsArtworkToken_key];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id NanoPodcastsArtworkToken.init(key:backgroundColorString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  *(_QWORD *)&v4[OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor] = 1;
  v5 = &v4[OBJC_IVAR___NMTPodcastsArtworkToken_key];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v4[OBJC_IVAR___NMTPodcastsArtworkToken_backgroundColorString];
  *(_QWORD *)v6 = a3;
  *((_QWORD *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for NanoPodcastsArtworkToken();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t NanoPodcastsArtworkToken.ErrorState.init(rawValue:)()
{
  return 0;
}

unint64_t static NanoPodcastsArtworkToken.ErrorState._nsErrorDomain.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_1A924F87C()
{
  sub_1A93F92DC();
  sub_1A93F7FB0();
  return sub_1A93F9324();
}

uint64_t sub_1A924F8DC()
{
  sub_1A924FD60();
  return sub_1A93F7020();
}

uint64_t sub_1A924F914()
{
  sub_1A924FD60();
  return sub_1A93F7038();
}

uint64_t sub_1A924F93C()
{
  sub_1A924FD60();
  return sub_1A93F702C();
}

unint64_t sub_1A924F964()
{
  return 0xD000000000000036;
}

uint64_t sub_1A924F980()
{
  sub_1A924FD60();
  return sub_1A93F7014();
}

id NanoPodcastsArtworkToken.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NanoPodcastsArtworkToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NanoPodcastsArtworkToken.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NanoPodcastsArtworkToken();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NanoPodcastsArtworkToken()
{
  return objc_opt_self();
}

unint64_t sub_1A924FADC()
{
  unint64_t result;

  result = qword_1EEABBEC0;
  if (!qword_1EEABBEC0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBEC0);
  }
  return result;
}

unint64_t sub_1A924FB24()
{
  unint64_t result;

  result = qword_1EEABBEC8;
  if (!qword_1EEABBEC8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBEC8);
  }
  return result;
}

unint64_t sub_1A924FB6C()
{
  unint64_t result;

  result = qword_1EEABBED0;
  if (!qword_1EEABBED0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBED0);
  }
  return result;
}

unint64_t sub_1A924FBB4()
{
  unint64_t result;

  result = qword_1EEABBED8;
  if (!qword_1EEABBED8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBED8);
  }
  return result;
}

unint64_t sub_1A924FBFC()
{
  unint64_t result;

  result = qword_1EEABBEE0;
  if (!qword_1EEABBEE0)
  {
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEBBE0], MEMORY[0x1E0DEBB98]);
    atomic_store(result, (unint64_t *)&qword_1EEABBEE0);
  }
  return result;
}

unint64_t sub_1A924FC44()
{
  unint64_t result;

  result = qword_1EEABBEE8;
  if (!qword_1EEABBEE8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBEE8);
  }
  return result;
}

CGColorRef sub_1A924FC88@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result;

  result = sub_1A924F4D4();
  *a1 = result;
  return result;
}

void sub_1A924FCB0(void **a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *(void **)(*a2 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor);
  *(_QWORD *)(*a2 + OBJC_IVAR___NMTPodcastsArtworkToken____lazy_storage___backgroundColor) = *a1;
  v4 = v2;
  sub_1A924F5C4(v3);
}

uint64_t method lookup function for NanoPodcastsArtworkToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.backgroundColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NanoPodcastsArtworkToken.__allocating_init(key:backgroundColorString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for NanoPodcastsArtworkToken.ErrorState()
{
  return &type metadata for NanoPodcastsArtworkToken.ErrorState;
}

unint64_t sub_1A924FD60()
{
  unint64_t result;

  result = qword_1EEABBF18;
  if (!qword_1EEABBF18)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for NanoPodcastsArtworkToken.ErrorState, &type metadata for NanoPodcastsArtworkToken.ErrorState);
    atomic_store(result, (unint64_t *)&qword_1EEABBF18);
  }
  return result;
}

uint64_t NSUserDefaults.observerStream(key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  objc_class *v33;
  char *v34;
  char *v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  void *v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  objc_super v54;

  v45 = a2;
  v46 = a1;
  v52 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC18);
  v47 = *(char **)(v3 - 8);
  v48 = (char *)v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC68);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v45 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC38);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  v53 = v20;
  (*((void (**)(char *, _QWORD, char *))v47 + 13))(v5, *MEMORY[0x1E0DF07B8], v48);
  v47 = v8;
  sub_1A93F8508();
  v48 = v20;
  v23 = (uint64_t)v20;
  v24 = (uint64_t)v17;
  v25 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92501DC(v23, v24);
  sub_1A92501DC(v24, (uint64_t)v14);
  v26 = *(unsigned __int8 *)(v10 + 80);
  v27 = v45;
  v28 = (v26 + 16) & ~v26;
  v29 = swift_allocObject();
  v30 = (uint64_t)v14;
  v31 = v46;
  sub_1A92503AC(v30, v29 + v28);
  v32 = (_QWORD *)(v29 + ((v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v32 = v31;
  v32[1] = v27;
  v33 = (objc_class *)type metadata accessor for DefaultsObserver();
  v34 = (char *)objc_allocWithZone(v33);
  v35 = &v34[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_key];
  *(_QWORD *)v35 = v31;
  *((_QWORD *)v35 + 1) = v27;
  v36 = &v34[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_notify];
  *(_QWORD *)v36 = sub_1A92503F4;
  *((_QWORD *)v36 + 1) = v29;
  v54.receiver = v34;
  v54.super_class = v33;
  swift_bridgeObjectRetain_n();
  v37 = objc_msgSendSuper2(&v54, sel_init);
  sub_1A92501DC(v24, (uint64_t)v25);
  v38 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v25, 1, v21) == 1)
  {
    sub_1A905FD54((uint64_t)v25, &qword_1ED2ABC40);
    v39 = v49;
  }
  else
  {
    v40 = swift_allocObject();
    v39 = v49;
    swift_unknownObjectWeakInit();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v40;
    v41[3] = v37;
    v41[4] = v31;
    v41[5] = v27;
    swift_bridgeObjectRetain();
    v42 = v37;
    sub_1A93F84D8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v21);
  }
  v43 = (void *)sub_1A93F8010();
  objc_msgSend(v39, sel_addObserver_forKeyPath_options_context_, v37, v43, 11, 0);

  sub_1A905FD54(v24, &qword_1ED2ABC40);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v52, v47, v51);
  return sub_1A905FD54((uint64_t)v48, &qword_1ED2ABC40);
}

uint64_t sub_1A9250160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1A905FD54(a2, &qword_1ED2ABC40);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC38);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1A92501D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9250160(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A92501DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9250224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF50);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A92501DC(a1, (uint64_t)v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC38);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_1A905FD54((uint64_t)v8, &qword_1ED2ABC40);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  else
  {
    v17[0] = a2;
    v17[1] = a3;
    swift_bridgeObjectRetain();
    sub_1A93F84E4();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF58);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  return sub_1A905FD54((uint64_t)v11, &qword_1EEABBF50);
}

uint64_t sub_1A92503AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DefaultsObserver()
{
  return objc_opt_self();
}

void sub_1A9250418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1AF41420C](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)sub_1A93F8010();
    objc_msgSend(v6, sel_removeObserver_forKeyPath_, a3, v7);

  }
}

uint64_t NSUserDefaults.observe(keys:performing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1A92504C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(id *)(v0 + 48);
  v5 = sub_1A9250AF4(v2, v4);
  *(_QWORD *)(v0 + 56) = v5;

  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v1;
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  v7[2] = v5;
  v7[3] = &unk_1EEABBF40;
  v7[4] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v8;
  *v8 = v0;
  v8[1] = sub_1A92505C0;
  return sub_1A93F8EE0();
}

uint64_t sub_1A92505C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A925062C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1A925066C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A92506B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v4 = a1[1];
  v3[5] = *a1;
  v3[6] = v4;
  return swift_task_switch();
}

uint64_t sub_1A92506D8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, _QWORD);
  uint64_t v12;

  if (qword_1ED2A3F28 != -1)
    swift_once();
  v1 = sub_1A93F7698();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A3F08);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A93F7674();
  v3 = sub_1A93F8784();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 48);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 40);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1A906436C(v6, v5, &v12);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v2, v3, "Updating tip recommendation in response to default key change: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v8, -1, -1);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v9;
  *v9 = v0;
  v9[1] = sub_1A92508C0;
  return v11(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A92508C0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A9250AC0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1A9250AE8(uint64_t a1)
{
  uint64_t v1;

  sub_1A9250418(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A9250AF4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  objc_class *v39;
  char *v40;
  char *v41;
  char *v42;
  id v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  _QWORD v59[2];
  unsigned int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  int64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  objc_super v79;
  uint64_t v80;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC18);
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40);
  v67 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v67 + 64);
  MEMORY[0x1E0C80A78](v7);
  v77 = (uint64_t)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v66 = (uint64_t)v59 - v10;
  MEMORY[0x1E0C80A78](v11);
  v76 = (uint64_t)v59 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v59 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC68);
  v71 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v75 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v59 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    v59[1] = v2;
    v80 = MEMORY[0x1E0DEE9D8];
    sub_1A929E6F8(0, v21, 0);
    v61 = v8 + 7;
    v62 = v20;
    v78 = v80;
    v23 = (_QWORD *)(a1 + 40);
    v60 = *MEMORY[0x1E0DF07B8];
    v64 = v15;
    v65 = a2;
    v63 = v16;
    do
    {
      v74 = v21;
      v24 = v23;
      v25 = *(v23 - 1);
      v72 = v24;
      v26 = *v24;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC38);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v15, 1, 1, v27);
      v30 = MEMORY[0x1E0C80A78](v29);
      v59[-2] = v15;
      (*(void (**)(char *, _QWORD, uint64_t, double))(v69 + 104))(v68, v60, v70, v30);
      swift_bridgeObjectRetain();
      sub_1A93F8508();
      v31 = (uint64_t)v15;
      v32 = v76;
      sub_1A92501DC(v31, v76);
      v33 = v66;
      sub_1A92501DC(v32, v66);
      v34 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      v35 = (v61 + v34) & 0xFFFFFFFFFFFFFFF8;
      v36 = swift_allocObject();
      sub_1A92503AC(v33, v36 + v34);
      v37 = (_QWORD *)(v36 + v35);
      v38 = v77;
      *v37 = v25;
      v37[1] = v26;
      v39 = (objc_class *)type metadata accessor for DefaultsObserver();
      v40 = (char *)objc_allocWithZone(v39);
      v41 = &v40[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_key];
      v73 = v25;
      *(_QWORD *)v41 = v25;
      *((_QWORD *)v41 + 1) = v26;
      v42 = &v40[OBJC_IVAR____TtC18PodcastsFoundationP33_4984B522253F5D3980999CC4D4B1655C16DefaultsObserver_notify];
      *(_QWORD *)v42 = sub_1A92503F4;
      *((_QWORD *)v42 + 1) = v36;
      v79.receiver = v40;
      v79.super_class = v39;
      swift_bridgeObjectRetain_n();
      v43 = objc_msgSendSuper2(&v79, sel_init);
      sub_1A92501DC(v32, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v38, 1, v27) == 1)
      {
        sub_1A905FD54(v77, &qword_1ED2ABC40);
        v44 = v65;
      }
      else
      {
        v45 = swift_allocObject();
        v44 = v65;
        swift_unknownObjectWeakInit();
        v46 = (_QWORD *)swift_allocObject();
        v46[2] = v45;
        v46[3] = v43;
        v46[4] = v73;
        v46[5] = v26;
        swift_bridgeObjectRetain();
        v47 = v43;
        v48 = v77;
        sub_1A93F84D8();
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v48, v27);
      }
      v49 = (void *)sub_1A93F8010();
      objc_msgSend(v44, sel_addObserver_forKeyPath_options_context_, v43, v49, 11, 0);

      sub_1A905FD54(v76, &qword_1ED2ABC40);
      v50 = v71;
      v51 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      v53 = v62;
      v52 = v63;
      v51(v62, v75, v63);
      v15 = v64;
      sub_1A905FD54((uint64_t)v64, &qword_1ED2ABC40);
      swift_bridgeObjectRelease();
      v54 = v78;
      v80 = v78;
      v56 = *(_QWORD *)(v78 + 16);
      v55 = *(_QWORD *)(v78 + 24);
      v57 = v72;
      if (v56 >= v55 >> 1)
      {
        sub_1A929E6F8(v55 > 1, v56 + 1, 1);
        v50 = v71;
        v54 = v80;
      }
      v23 = v57 + 2;
      *(_QWORD *)(v54 + 16) = v56 + 1;
      v58 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      v78 = v54;
      v51((char *)(v54 + v58 + *(_QWORD *)(v50 + 72) * v56), v53, v52);
      v21 = v74 - 1;
    }
    while (v74 != 1);
    return v78;
  }
  return result;
}

uint64_t sub_1A925102C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9251050(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1A921755C;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = a1[1];
  *(_QWORD *)(v4 + 40) = *a1;
  *(_QWORD *)(v4 + 48) = v6;
  return swift_task_switch();
}

uint64_t sub_1A92510BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1A9164CD4;
  return sub_1A93E0B90(a1, a2, v6, v7, v8);
}

unint64_t sub_1A9251138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEAB75E8;
  if (!qword_1EEAB75E8)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x1AF414014](&unk_1A94054A0, v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB75E8);
  }
  return result;
}

uint64_t sub_1A9251184()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1A9250224(v0 + v2, *v3, v3[1]);
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A925120C()
{
  sub_1A93F8328();
}

uint64_t sub_1A925123C(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1A908182C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1A92514DC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A92343D0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A9253390(v5);
  *a1 = v2;
  return result;
}

uint64_t DownloadStateReport.collectionTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A93F738C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DownloadStateReport.shows.getter()
{
  type metadata accessor for DownloadStateReport();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadStateReport()
{
  uint64_t result;

  result = qword_1EEABC0A8;
  if (!qword_1EEABC0A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A92515D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x73776F6873;
  else
    return 0x697463656C6C6F63;
}

uint64_t sub_1A925161C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A925550C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9251640()
{
  sub_1A925181C();
  return sub_1A93F945C();
}

uint64_t sub_1A9251668()
{
  sub_1A925181C();
  return sub_1A93F9468();
}

uint64_t DownloadStateReport.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A925181C();
  sub_1A93F93D8();
  v12 = 0;
  sub_1A93F738C();
  sub_1A911FB30(&qword_1EEABBF70, MEMORY[0x1E0CB0890]);
  sub_1A93F9030();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for DownloadStateReport() + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF78);
    sub_1A9167718(&qword_1EEABBF80, &qword_1EEABBF78, (uint64_t (*)(void))sub_1A9251860, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A925181C()
{
  unint64_t result;

  result = qword_1EEABBF68;
  if (!qword_1EEABBF68)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415FC0, &type metadata for DownloadStateReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBF68);
  }
  return result;
}

unint64_t sub_1A9251860()
{
  unint64_t result;

  result = qword_1EEABBF88;
  if (!qword_1EEABBF88)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowDownloadReport, &type metadata for ShowDownloadReport);
    atomic_store(result, (unint64_t *)&qword_1EEABBF88);
  }
  return result;
}

uint64_t DownloadStateReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v19 = a2;
  v23 = sub_1A93F738C();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF90);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DownloadStateReport();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A925181C();
  v21 = v7;
  v11 = v24;
  sub_1A93F93C0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v18 = a1;
  v24 = v5;
  v12 = (uint64_t)v10;
  v27 = 0;
  sub_1A911FB30(&qword_1ED2AA110, MEMORY[0x1E0CB08C0]);
  v14 = v20;
  v13 = v21;
  v15 = v22;
  v16 = v23;
  sub_1A93F8F7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v14, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBF78);
  v26 = 1;
  sub_1A9167718(&qword_1EEABBF98, &qword_1EEABBF78, (uint64_t (*)(void))sub_1A9251B48, MEMORY[0x1E0DEAF40]);
  sub_1A93F8F7C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v15);
  *(_QWORD *)(v12 + *(int *)(v8 + 20)) = v25;
  sub_1A9251B8C(v12, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  return sub_1A91D2478(v12);
}

unint64_t sub_1A9251B48()
{
  unint64_t result;

  result = qword_1EEABBFA0;
  if (!qword_1EEABBFA0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShowDownloadReport, &type metadata for ShowDownloadReport);
    atomic_store(result, (unint64_t *)&qword_1EEABBFA0);
  }
  return result;
}

uint64_t sub_1A9251B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9251BD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DownloadStateReport.init(from:)(a1, a2);
}

uint64_t sub_1A9251BE4(_QWORD *a1)
{
  return DownloadStateReport.encode(to:)(a1);
}

uint64_t ShowDownloadReport.showID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShowDownloadReport.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShowDownloadReport.episodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShowDownloadReport.autoDownloadExplaination.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1A9251C40(v2);
}

uint64_t sub_1A9251C40(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t ShowDownloadReport.autoRemovalExplaination.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  return sub_1A9251C40(v2);
}

void *ShowDownloadReport.asTable()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _OWORD *v11;
  void *v13;

  v1 = *(_QWORD **)(v0 + 24);
  if (!v1[2])
    return (void *)MEMORY[0x1E0DEE9D8];
  v2 = v1[6];
  v3 = v1[8];
  v5 = v1[9];
  v4 = v1[10];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A9251C40(v3);
  sub_1A9251C40(v5);
  sub_1A9251C40(v4);
  v6 = (void *)sub_1A90BF390(v2);
  swift_bridgeObjectRelease();
  v13 = v6;
  sub_1A92514DC((uint64_t *)&v13);
  swift_bridgeObjectRelease();
  v7 = (uint64_t)v13;
  swift_retain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1A9253F10(v8, v7);
  swift_bridgeObjectRelease();
  swift_release();
  v13 = &unk_1E54D72F8;
  sub_1A913669C(v7);
  v10 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79C8);
  v11 = (_OWORD *)swift_allocObject();
  v11[1] = xmmword_1A9405520;
  *((_QWORD *)v11 + 4) = v10;
  v13 = v11;
  sub_1A9136B6C(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9254100(v3);
  sub_1A9254100(v5);
  sub_1A9254100(v4);
  return v13;
}

uint64_t EpisodeDownloadReport.DownloadState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9251E28 + 4 * byte_1A941598E[*v0]))(0x64616F6C6E776F64, 0xEA00000000006465);
}

unint64_t sub_1A9251E28()
{
  return 0xD000000000000010;
}

uint64_t sub_1A9251F9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9251FCC + 4 * byte_1A941599C[a1]))(0x4449776F6873, 0xE600000000000000);
}

uint64_t sub_1A9251FCC()
{
  return 0x69747265706F7270;
}

uint64_t sub_1A9251FE8()
{
  return 0x7365646F73697065;
}

unint64_t sub_1A9252000()
{
  return 0xD000000000000018;
}

unint64_t sub_1A9252020()
{
  return 0xD000000000000017;
}

uint64_t sub_1A925203C()
{
  unsigned __int8 *v0;

  return sub_1A9251F9C(*v0);
}

uint64_t sub_1A9252044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9255618(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9252068()
{
  sub_1A9254118();
  return sub_1A93F945C();
}

uint64_t sub_1A9252090()
{
  sub_1A9254118();
  return sub_1A93F9468();
}

uint64_t ShowDownloadReport.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v16 = v1[3];
  v17 = v7;
  v8 = v1[4];
  v14 = v1[5];
  v15 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9254118();
  sub_1A93F93D8();
  LOBYTE(v20) = 0;
  v9 = v18;
  sub_1A93F9000();
  if (!v9)
  {
    v11 = v15;
    v10 = v16;
    v12 = v14;
    v20 = v17;
    v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFB8);
    sub_1A92541A0(&qword_1EEABBFC0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1A93F9030();
    v20 = v10;
    v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFC8);
    sub_1A9167718(&qword_1EEABBFD0, &qword_1EEABBFC8, (uint64_t (*)(void))sub_1A925415C, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
    v20 = v11;
    v19 = 3;
    sub_1A9156124();
    sub_1A93F8FE8();
    v20 = v12;
    v19 = 4;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ShowDownloadReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9254118();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v25) = 0;
  v9 = sub_1A93F8F4C();
  v11 = v10;
  v23 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFB8);
  v24 = 1;
  sub_1A92541A0(&qword_1EEABBFE8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v12 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFC8);
  v24 = 2;
  sub_1A9167718(&qword_1EEABBFF0, &qword_1EEABBFC8, (uint64_t (*)(void))sub_1A9254200, MEMORY[0x1E0DEAF40]);
  v22 = v12;
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v13 = v25;
  v24 = 3;
  v14 = sub_1A91562A0();
  v21 = v13;
  swift_bridgeObjectRetain();
  v20[1] = v14;
  sub_1A93F8F34();
  v24 = 4;
  v20[0] = v25;
  sub_1A9251C40(v25);
  sub_1A93F8F34();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v25;
  swift_bridgeObjectRetain();
  v17 = v22;
  swift_bridgeObjectRetain();
  v18 = v21;
  swift_bridgeObjectRetain();
  v19 = v20[0];
  sub_1A9251C40(v20[0]);
  sub_1A9251C40(v16);
  sub_1A9254100(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v19;
  a2[5] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9254100(v19);
  return sub_1A9254100(v16);
}

uint64_t sub_1A9252768@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShowDownloadReport.init(from:)(a1, a2);
}

uint64_t sub_1A925277C(_QWORD *a1)
{
  return ShowDownloadReport.encode(to:)(a1);
}

uint64_t EpisodeDownloadReport.episodeID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeDownloadReport.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeDownloadReport.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeDownloadReport.autoDownloadExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1A9251C40(v2);
}

uint64_t EpisodeDownloadReport.autoRemovalExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  return sub_1A9251C40(v2);
}

uint64_t EpisodeDownloadReport.cacheDeleteExplanation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1A9251C40(v2);
}

PodcastsFoundation::EpisodeDownloadReport::DownloadState_optional __swiftcall EpisodeDownloadReport.DownloadState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::EpisodeDownloadReport::DownloadState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 14;
  if (v3 < 0xE)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static EpisodeDownloadReport.DownloadState.allCases.getter()
{
  return &unk_1E54D7328;
}

uint64_t sub_1A9252854(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A925288C + 4 * byte_1A94159A1[a1]))(0x4965646F73697065, 0xE900000000000044);
}

uint64_t sub_1A925288C()
{
  return 0x69747265706F7270;
}

uint64_t sub_1A92528A8()
{
  return 0x736574617473;
}

unint64_t sub_1A92528BC()
{
  return 0xD000000000000017;
}

unint64_t sub_1A92528DC()
{
  return 0xD000000000000016;
}

uint64_t sub_1A9252904(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92F9178(*a1, *a2);
}

uint64_t sub_1A9252910()
{
  sub_1A93F92DC();
  EpisodeDownloadReport.DownloadState.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9252974()
{
  EpisodeDownloadReport.DownloadState.rawValue.getter();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92529C4()
{
  sub_1A93F92DC();
  EpisodeDownloadReport.DownloadState.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::EpisodeDownloadReport::DownloadState_optional sub_1A9252A24(Swift::String *a1)
{
  return EpisodeDownloadReport.DownloadState.init(rawValue:)(*a1);
}

uint64_t sub_1A9252A30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EpisodeDownloadReport.DownloadState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A9252A54(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E54D7328;
}

uint64_t sub_1A9252A64()
{
  sub_1A9255AA4();
  return sub_1A93F82BC();
}

uint64_t sub_1A9252AC0()
{
  sub_1A9255AA4();
  return sub_1A93F828C();
}

uint64_t sub_1A9252B0C()
{
  unsigned __int8 *v0;

  return sub_1A9252854(*v0);
}

uint64_t sub_1A9252B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A9255830(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9252B38()
{
  sub_1A9254244();
  return sub_1A93F945C();
}

uint64_t sub_1A9252B60()
{
  sub_1A9254244();
  return sub_1A93F9468();
}

uint64_t EpisodeDownloadReport.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC000);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v19 = v1[3];
  v20 = v7;
  v8 = v1[4];
  v17 = v1[5];
  v18 = v8;
  v16 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9254244();
  sub_1A93F93D8();
  LOBYTE(v23) = 0;
  v9 = v21;
  sub_1A93F9000();
  if (!v9)
  {
    v11 = v18;
    v10 = v19;
    v12 = v16;
    v13 = v17;
    v23 = v20;
    v22 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFB8);
    sub_1A92541A0(&qword_1EEABBFC0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1A93F9030();
    v23 = v10;
    v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC010);
    sub_1A9167718(&qword_1EEABC018, &qword_1EEABC010, (uint64_t (*)(void))sub_1A9254288, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
    v23 = v11;
    v22 = 3;
    sub_1A9156124();
    sub_1A93F8FE8();
    v23 = v13;
    v22 = 4;
    sub_1A93F8FE8();
    v23 = v12;
    v22 = 5;
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EpisodeDownloadReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC028);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9254244();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v30) = 0;
  v9 = sub_1A93F8F4C();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABBFB8);
  v29 = 1;
  sub_1A92541A0(&qword_1EEABBFE8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v27 = v9;
  v28 = a2;
  v12 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC010);
  v29 = 2;
  sub_1A9167718(&qword_1EEABC030, &qword_1EEABC010, (uint64_t (*)(void))sub_1A92542CC, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A93F8F7C();
  v26 = v12;
  v13 = v30;
  v29 = 3;
  sub_1A91562A0();
  swift_bridgeObjectRetain();
  v25 = 0;
  sub_1A93F8F34();
  v23 = v13;
  v29 = 4;
  v14 = v30;
  sub_1A9251C40(v30);
  sub_1A93F8F34();
  v24 = v14;
  v29 = 5;
  v22 = v30;
  sub_1A9251C40(v30);
  sub_1A93F8F34();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v30;
  swift_bridgeObjectRetain();
  v17 = v26;
  swift_bridgeObjectRetain();
  v18 = v23;
  swift_bridgeObjectRetain();
  v19 = v24;
  sub_1A9251C40(v24);
  v20 = v22;
  sub_1A9251C40(v22);
  sub_1A9251C40(v16);
  sub_1A9254100(v20);
  sub_1A9254100(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v28;
  *v28 = v27;
  v21[1] = v11;
  v21[2] = v17;
  v21[3] = v18;
  v21[4] = v19;
  v21[5] = v20;
  v21[6] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9254100(v19);
  sub_1A9254100(v20);
  return sub_1A9254100(v16);
}

uint64_t sub_1A9253344@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return EpisodeDownloadReport.init(from:)(a1, a2);
}

uint64_t sub_1A9253358(_QWORD *a1)
{
  return EpisodeDownloadReport.encode(to:)(a1);
}

uint64_t sub_1A925336C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1A925337C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_1A9253390(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1A93F9054();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1A9253A78(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1A9253B44((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A9234330((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A93F837C();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1A93F90C0();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1A93F90C0()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A9233E0C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1A9233E0C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1A9253B44((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A93F90C0() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

uint64_t sub_1A9253A78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1A93F90C0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9253B44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1A93F90C0() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1A93F90C0() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1A92341CC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A9253DDC(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v2, 0);
  v3 = v19;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = (uint64_t *)(a1 + 40);
  while (*(_QWORD *)(v6 + 16))
  {
    v8 = *(v7 - 1);
    v9 = *v7;
    swift_bridgeObjectRetain_n();
    v10 = sub_1A9094640(v8, v9);
    if ((v11 & 1) == 0)
      goto LABEL_10;
    v12 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v10);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    v16 = *(_QWORD *)(v19 + 16);
    v15 = *(_QWORD *)(v19 + 24);
    if (v16 >= v15 >> 1)
      sub_1A908182C(v15 > 1, v16 + 1, 1);
    *(_QWORD *)(v19 + 16) = v16 + 1;
    v17 = v19 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v14;
    *(_QWORD *)(v17 + 40) = v13;
    v7 += 2;
    if (!--v2)
      return v3;
  }
  __break(1u);
LABEL_10:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A9253F10(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1A929E724(0, v2, 0);
    v3 = v19;
    v5 = a1 + 32;
    do
    {
      v6 = *(_OWORD *)(v5 + 16);
      v17[0] = *(_OWORD *)v5;
      v17[1] = v6;
      v17[2] = *(_OWORD *)(v5 + 32);
      v18 = *(_QWORD *)(v5 + 48);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1A9405520;
      sub_1A9255AE8(v17);
      v8 = swift_bridgeObjectRetain();
      sub_1A925123C(v8);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
      sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
      v9 = sub_1A93F7FE0();
      v11 = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v11;
      sub_1A9255AE8(v17);
      v12 = sub_1A9253DDC(a2, (uint64_t)v17);
      sub_1A9255B54(v17);
      sub_1A913669C(v12);
      sub_1A9255B54(v17);
      v19 = v3;
      v14 = *(_QWORD *)(v3 + 16);
      v13 = *(_QWORD *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A929E724(v13 > 1, v14 + 1, 1);
        v3 = v19;
      }
      *(_QWORD *)(v3 + 16) = v14 + 1;
      *(_QWORD *)(v3 + 8 * v14 + 32) = v7;
      v5 += 56;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A9254100(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1A9254118()
{
  unint64_t result;

  result = qword_1EEABBFB0;
  if (!qword_1EEABBFB0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415F70, &type metadata for ShowDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABBFB0);
  }
  return result;
}

unint64_t sub_1A925415C()
{
  unint64_t result;

  result = qword_1EEABBFD8;
  if (!qword_1EEABBFD8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport, &type metadata for EpisodeDownloadReport);
    atomic_store(result, (unint64_t *)&qword_1EEABBFD8);
  }
  return result;
}

uint64_t sub_1A92541A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABBFB8);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1AF414014](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9254200()
{
  unint64_t result;

  result = qword_1EEABBFF8;
  if (!qword_1EEABBFF8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport, &type metadata for EpisodeDownloadReport);
    atomic_store(result, (unint64_t *)&qword_1EEABBFF8);
  }
  return result;
}

unint64_t sub_1A9254244()
{
  unint64_t result;

  result = qword_1EEABC008;
  if (!qword_1EEABC008)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415F20, &type metadata for EpisodeDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC008);
  }
  return result;
}

unint64_t sub_1A9254288()
{
  unint64_t result;

  result = qword_1EEABC020;
  if (!qword_1EEABC020)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport.DownloadState, &type metadata for EpisodeDownloadReport.DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EEABC020);
  }
  return result;
}

unint64_t sub_1A92542CC()
{
  unint64_t result;

  result = qword_1EEABC038;
  if (!qword_1EEABC038)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport.DownloadState, &type metadata for EpisodeDownloadReport.DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EEABC038);
  }
  return result;
}

unint64_t sub_1A9254314()
{
  unint64_t result;

  result = qword_1EEABC040;
  if (!qword_1EEABC040)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport.DownloadState, &type metadata for EpisodeDownloadReport.DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EEABC040);
  }
  return result;
}

uint64_t sub_1A9254358()
{
  return sub_1A9066D74(&qword_1EEABC048, &qword_1EEABC010, MEMORY[0x1E0DEAF50]);
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadStateReport(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F738C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DownloadStateReport(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DownloadStateReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A93F738C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadStateReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92545EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A93F738C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadStateReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A9254674(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A93F738C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1A92546EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ShowDownloadReport(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 32) & 0xF000000000000007) != 0)
    result = swift_release();
  if ((~*(_QWORD *)(a1 + 40) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for ShowDownloadReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
    swift_retain();
  a1[4] = v6;
  v7 = a2[5];
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  a1[5] = v7;
  return a1;
}

_QWORD *assignWithCopy for ShowDownloadReport(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2[4];
  v6 = v5 & 0xF000000000000007;
  if ((~a1[4] & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1A92549A8((uint64_t)(a1 + 4));
    v5 = a2[4];
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = a1 + 5;
  v8 = a2[5];
  v9 = v8 & 0xF000000000000007;
  if ((~a1[5] & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *v7 = v8;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1A92549A8((uint64_t)(a1 + 5));
    v8 = a2[5];
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *v7 = v8;
    return a1;
  }
  *v7 = v8;
  swift_retain();
  return a1;
}

uint64_t sub_1A92549A8(uint64_t a1)
{
  _s14EvaluationTreeOwxx();
  return a1;
}

_QWORD *assignWithTake for ShowDownloadReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v5 = a1 + 4;
  v6 = a2[4];
  if ((~a1[4] & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1A92549A8((uint64_t)(a1 + 4));
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  v7 = a1 + 5;
  v8 = a2[5];
  if ((~a1[5] & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *v7 = v8;
      swift_release();
      return a1;
    }
    sub_1A92549A8((uint64_t)(a1 + 5));
  }
  *v7 = v8;
  return a1;
}

ValueMetadata *type metadata accessor for ShowDownloadReport()
{
  return &type metadata for ShowDownloadReport;
}

uint64_t destroy for EpisodeDownloadReport(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((~a1[4] & 0xF000000000000007) != 0)
    result = swift_release();
  if ((~a1[5] & 0xF000000000000007) != 0)
    result = swift_release();
  if ((~a1[6] & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for EpisodeDownloadReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
    swift_retain();
  a1[4] = v6;
  v7 = a2[5];
  if ((~v7 & 0xF000000000000007) != 0)
    swift_retain();
  a1[5] = v7;
  v8 = a2[6];
  if ((~v8 & 0xF000000000000007) != 0)
    swift_retain();
  a1[6] = v8;
  return a1;
}

_QWORD *assignWithCopy for EpisodeDownloadReport(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2[4];
  v6 = v5 & 0xF000000000000007;
  if ((~a1[4] & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1A92549A8((uint64_t)(a1 + 4));
    v5 = a2[4];
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = a1 + 5;
  v8 = a2[5];
  v9 = v8 & 0xF000000000000007;
  if ((~a1[5] & 0xF000000000000007) == 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *v7 = v8;
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
    sub_1A92549A8((uint64_t)(a1 + 5));
    v8 = a2[5];
LABEL_13:
    *v7 = v8;
    goto LABEL_15;
  }
  *v7 = v8;
  swift_retain();
  swift_release();
LABEL_15:
  v10 = a1 + 6;
  v11 = a2[6];
  v12 = v11 & 0xF000000000000007;
  if ((~a1[6] & 0xF000000000000007) != 0)
  {
    if (v12 != 0xF000000000000007)
    {
      *v10 = v11;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1A92549A8((uint64_t)(a1 + 6));
    v11 = a2[6];
    goto LABEL_20;
  }
  if (v12 == 0xF000000000000007)
  {
LABEL_20:
    *v10 = v11;
    return a1;
  }
  *v10 = v11;
  swift_retain();
  return a1;
}

_QWORD *assignWithTake for EpisodeDownloadReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v5 = a1 + 4;
  v6 = a2[4];
  if ((~a1[4] & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1A92549A8((uint64_t)(a1 + 4));
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  v7 = a1 + 5;
  v8 = a2[5];
  if ((~a1[5] & 0xF000000000000007) == 0)
  {
LABEL_9:
    *v7 = v8;
    goto LABEL_11;
  }
  if ((~v8 & 0xF000000000000007) == 0)
  {
    sub_1A92549A8((uint64_t)(a1 + 5));
    goto LABEL_9;
  }
  *v7 = v8;
  swift_release();
LABEL_11:
  v9 = a1 + 6;
  v10 = a2[6];
  if ((~a1[6] & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      *v9 = v10;
      swift_release();
      return a1;
    }
    sub_1A92549A8((uint64_t)(a1 + 6));
  }
  *v9 = v10;
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport()
{
  return &type metadata for EpisodeDownloadReport;
}

uint64_t getEnumTagSinglePayload for EpisodeDownloadReport.DownloadState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadReport.DownloadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1A9254FA0 + 4 * byte_1A94159AC[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1A9254FD4 + 4 * byte_1A94159A7[v4]))();
}

uint64_t sub_1A9254FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9254FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9254FE4);
  return result;
}

uint64_t sub_1A9254FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9254FF8);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1A9254FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9255004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport.DownloadState()
{
  return &type metadata for EpisodeDownloadReport.DownloadState;
}

uint64_t storeEnumTagSinglePayload for EpisodeDownloadReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A925506C + 4 * byte_1A94159B6[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A92550A0 + 4 * byte_1A94159B1[v4]))();
}

uint64_t sub_1A92550A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92550A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92550B0);
  return result;
}

uint64_t sub_1A92550BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92550C4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A92550C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92550D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDownloadReport.CodingKeys()
{
  return &type metadata for EpisodeDownloadReport.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ShowDownloadReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A9255138 + 4 * byte_1A94159C0[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A925516C + 4 * byte_1A94159BB[v4]))();
}

uint64_t sub_1A925516C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9255174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A925517CLL);
  return result;
}

uint64_t sub_1A9255188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9255190);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A9255194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A925519C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShowDownloadReport.CodingKeys()
{
  return &type metadata for ShowDownloadReport.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DownloadStateReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9255204 + 4 * byte_1A94159CA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9255238 + 4 * byte_1A94159C5[v4]))();
}

uint64_t sub_1A9255238(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9255240(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9255248);
  return result;
}

uint64_t sub_1A9255254(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A925525CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9255260(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9255268(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateReport.CodingKeys()
{
  return &type metadata for DownloadStateReport.CodingKeys;
}

unint64_t sub_1A9255288()
{
  unint64_t result;

  result = qword_1EEABC0E0;
  if (!qword_1EEABC0E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415D88, &type metadata for DownloadStateReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC0E0);
  }
  return result;
}

unint64_t sub_1A92552D0()
{
  unint64_t result;

  result = qword_1EEABC0E8;
  if (!qword_1EEABC0E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415E40, &type metadata for ShowDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC0E8);
  }
  return result;
}

unint64_t sub_1A9255318()
{
  unint64_t result;

  result = qword_1EEABC0F0;
  if (!qword_1EEABC0F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415EF8, &type metadata for EpisodeDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC0F0);
  }
  return result;
}

unint64_t sub_1A9255360()
{
  unint64_t result;

  result = qword_1EEABC0F8;
  if (!qword_1EEABC0F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415E68, &type metadata for EpisodeDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC0F8);
  }
  return result;
}

unint64_t sub_1A92553A8()
{
  unint64_t result;

  result = qword_1EEABC100;
  if (!qword_1EEABC100)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415E90, &type metadata for EpisodeDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC100);
  }
  return result;
}

unint64_t sub_1A92553F0()
{
  unint64_t result;

  result = qword_1EEABC108;
  if (!qword_1EEABC108)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415DB0, &type metadata for ShowDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC108);
  }
  return result;
}

unint64_t sub_1A9255438()
{
  unint64_t result;

  result = qword_1EEABC110;
  if (!qword_1EEABC110)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415DD8, &type metadata for ShowDownloadReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC110);
  }
  return result;
}

unint64_t sub_1A9255480()
{
  unint64_t result;

  result = qword_1EEABC118;
  if (!qword_1EEABC118)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415CF8, &type metadata for DownloadStateReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC118);
  }
  return result;
}

unint64_t sub_1A92554C8()
{
  unint64_t result;

  result = qword_1EEABC120;
  if (!qword_1EEABC120)
  {
    result = MEMORY[0x1AF414014](&unk_1A9415D20, &type metadata for DownloadStateReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC120);
  }
  return result;
}

uint64_t sub_1A925550C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEE00656D69546E6FLL;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73776F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9255618(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449776F6873 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A944A810 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A944A830)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A9255830(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4965646F73697065 && a2 == 0xE900000000000044;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A944A850 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A944A870 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A944A890)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1A9255AA4()
{
  unint64_t result;

  result = qword_1EEABC128;
  if (!qword_1EEABC128)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeDownloadReport.DownloadState, &type metadata for EpisodeDownloadReport.DownloadState);
    atomic_store(result, (unint64_t *)&qword_1EEABC128);
  }
  return result;
}

_QWORD *sub_1A9255AE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A9251C40(v2);
  sub_1A9251C40(v3);
  sub_1A9251C40(v4);
  return a1;
}

_QWORD *sub_1A9255B54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A9254100(v2);
  sub_1A9254100(v3);
  sub_1A9254100(v4);
  return a1;
}

void sub_1A9255BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A91C675C();
    sub_1A92581E8();
    sub_1A93F8670();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v12 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1A93F8BE0())
      goto LABEL_31;
    sub_1A91C675C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v10 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_31;
LABEL_10:
    v11 = objc_msgSend(v10, sel_subscribed);

    if (v11)
      goto LABEL_31;
  }
  if (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v3 << 6);
LABEL_9:
    v10 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v10)
      goto LABEL_31;
    goto LABEL_10;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16)
      goto LABEL_31;
    v14 = *(_QWORD *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      v3 = v12 + 2;
      if (v12 + 2 >= v16)
        goto LABEL_31;
      v14 = *(_QWORD *)(v17 + 8 * v3);
      if (!v14)
      {
        v3 = v12 + 3;
        if (v12 + 3 >= v16)
          goto LABEL_31;
        v14 = *(_QWORD *)(v17 + 8 * v3);
        if (!v14)
        {
          v3 = v12 + 4;
          if (v12 + 4 >= v16)
            goto LABEL_31;
          v14 = *(_QWORD *)(v17 + 8 * v3);
          if (!v14)
          {
            v3 = v12 + 5;
            if (v12 + 5 >= v16)
              goto LABEL_31;
            v14 = *(_QWORD *)(v17 + 8 * v3);
            if (!v14)
            {
              v15 = v12 + 6;
              while (v16 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_1A9120240();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v4 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1A9255E80(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  id v29;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    sub_1A91C675C();
    sub_1A92581E8();
    sub_1A93F8670();
    v5 = v24;
    v23 = v25;
    v7 = v26;
    v8 = v27;
    v9 = v28;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a3 + 32);
    v23 = a3 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1A93F8BE0())
  {
    sub_1A91C675C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v29;
    swift_unknownObjectRelease();
    v15 = v8;
    v16 = v9;
    while (v14)
    {
      v29 = v14;
      v20 = a1(&v29);

      if (v4 || (v20 & 1) != 0)
        break;
      v8 = v15;
      v9 = v16;
      if (v5 < 0)
        goto LABEL_8;
LABEL_11:
      if (v9)
      {
        v16 = (v9 - 1) & v9;
        v17 = __clz(__rbit64(v9)) | (v8 << 6);
        v15 = v8;
      }
      else
      {
        v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v22)
          break;
        v18 = *(_QWORD *)(v23 + 8 * v15);
        if (!v18)
        {
          v19 = v8 + 2;
          if (v8 + 2 >= v22)
            break;
          v18 = *(_QWORD *)(v23 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v8 + 3;
          if (v8 + 3 >= v22)
            break;
          v18 = *(_QWORD *)(v23 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v8 + 4;
          if (v8 + 4 >= v22)
            break;
          v18 = *(_QWORD *)(v23 + 8 * v19);
          if (v18)
          {
LABEL_22:
            v15 = v19;
          }
          else
          {
            v15 = v8 + 5;
            if (v8 + 5 >= v22)
              break;
            v18 = *(_QWORD *)(v23 + 8 * v15);
            if (!v18)
            {
              v21 = v8 + 6;
              while (v22 != v21)
              {
                v18 = *(_QWORD *)(v23 + 8 * v21++);
                if (v18)
                {
                  v15 = v21 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v16 = (v18 - 1) & v18;
        v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    }
  }
  sub_1A9120240();
}

void InterestStore.favoriteInterest(forAdamID:)(uint64_t a1)
{
  sub_1A925620C(a1, (uint64_t)&unk_1E54E8D48, (uint64_t)sub_1A918CCBC, (uint64_t)&block_descriptor_36);
}

uint64_t sub_1A9256194()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void InterestStore.unfavoriteInterest(forAdamID:)(uint64_t a1)
{
  sub_1A925620C(a1, (uint64_t)&unk_1E54E8D98, (uint64_t)sub_1A918CCC4, (uint64_t)&block_descriptor_10_1);
}

void InterestStore.suggestLess(forAdamID:)(uint64_t a1)
{
  sub_1A925620C(a1, (uint64_t)&unk_1E54E8DE8, (uint64_t)sub_1A922A214, (uint64_t)&block_descriptor_17_1);
}

void InterestStore.undoSuggestLess(forAdamID:)(uint64_t a1)
{
  sub_1A925620C(a1, (uint64_t)&unk_1E54E8E38, (uint64_t)sub_1A922A21C, (uint64_t)&block_descriptor_24_1);
}

void sub_1A925620C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = *(void **)(v4 + 16);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A908A91C;
  v12[3] = a4;
  v11 = _Block_copy(v12);
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v11);
  _Block_release(v11);
}

Swift::Void __swiftcall InterestStore.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(Swift::OpaquePointer entitledChannels)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  const char *v43;
  uint64_t v44;
  os_log_type_t v45;
  _QWORD v46[2];
  unint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  __int128 v50;
  unint64_t rawValue;
  id v52;
  uint64_t v53;

  rawValue = (unint64_t)entitledChannels._rawValue;
  v1 = sub_1A93F747C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v50 = sub_1A93F7494();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F738C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v46 - v16;
  sub_1A93F7470();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CB1130], v1);
  sub_1A93F7374();
  sub_1A93F7464();
  v49 = *(void (**)(char *, uint64_t))(v12 + 8);
  v49(v14, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A90AC3A4((uint64_t)v10);
    if (qword_1ED2A58F8 != -1)
      goto LABEL_30;
    goto LABEL_3;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  v22 = v17;
  v46[0] = v11;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1A93F8E5C();
    if (v23)
      goto LABEL_8;
LABEL_32:
    swift_bridgeObjectRelease();
    v49(v22, v46[0]);
    return;
  }
  v23 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23)
    goto LABEL_32;
LABEL_8:
  v25 = rawValue & 0xC000000000000001;
  v46[1] = &v53;
  v26 = 4;
  *(_QWORD *)&v24 = 134217984;
  v50 = v24;
  v47 = rawValue & 0xC000000000000001;
  v48 = v22;
  while (1)
  {
    v28 = v25
        ? MEMORY[0x1AF4129DC](v26 - 4, rawValue)
        : *(id *)(rawValue + 8 * v26);
    v27 = v28;
    v29 = v26 - 3;
    if (__OFADD__(v26 - 4, 1))
      break;
    v30 = -[NSObject podcasts](v28, sel_podcasts);
    if (!v30)
      goto LABEL_20;
    v31 = v30;
    sub_1A91C675C();
    sub_1A92581E8();
    v32 = sub_1A93F85F8();

    sub_1A9255BC0(v32);
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v37 = sub_1A93F7698();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED2A58D8);
      v38 = v27;
      v27 = sub_1A93F7674();
      v39 = sub_1A93F87B4();
      if (os_log_type_enabled(v27, v39))
      {
        v40 = swift_slowAlloc();
        *(_DWORD *)v40 = v50;
        *(_QWORD *)(v40 + 4) = -[NSObject storeId](v38, sel_storeId);

        v41 = v27;
        v42 = v39;
        v43 = "Existing channel %lld does not have at least one followed show. Not favoriting.";
LABEL_24:
        _os_log_impl(&dword_1A904E000, v41, v42, v43, (uint8_t *)v40, 0xCu);
        MEMORY[0x1AF41411C](v40, -1, -1);

        goto LABEL_10;
      }
      goto LABEL_9;
    }
    MEMORY[0x1E0C80A78](v33);
    v46[-2] = v22;
    sub_1A9255E80(sub_1A9258230, (uint64_t)&v46[-4], v32);
    v35 = v34;
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
    {
      v36 = (uint64_t)-[NSObject storeId](v27, sel_storeId);
      sub_1A92569C0(v36 & ~(v36 >> 63));
      goto LABEL_10;
    }
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v44 = sub_1A93F7698();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED2A58D8);
    v38 = v27;
    v27 = sub_1A93F7674();
    v45 = sub_1A93F87B4();
    if (os_log_type_enabled(v27, v45))
    {
      v40 = swift_slowAlloc();
      *(_DWORD *)v40 = v50;
      v52 = -[NSObject storeId](v38, sel_storeId);
      v25 = v47;
      v22 = v48;
      sub_1A93F8AA8();

      v41 = v27;
      v42 = v45;
      v43 = "Existing channel %lld does not have at least one played episodes in the last 90 days.";
      goto LABEL_24;
    }
LABEL_9:

    v27 = v38;
LABEL_10:

    ++v26;
    if (v29 == v23)
      goto LABEL_32;
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_3:
  v18 = sub_1A93F7698();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A58D8);
  v19 = sub_1A93F7674();
  v20 = sub_1A93F879C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1A904E000, v19, v20, "Unable to favorite existing entitled channels because could not get a date value for 90 days in the past.", v21, 2u);
    MEMORY[0x1AF41411C](v21, -1, -1);
  }

}

uint64_t InterestStore.__allocating_init(ctx:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t InterestStore.init(ctx:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t InterestStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t InterestStore.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A9256964(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A92569C0(a2);
    return swift_release();
  }
  return result;
}

void sub_1A92569C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  NSObject *v8;
  double v9;
  void *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A9256E0C(a1);
  if (v7)
  {
    v8 = v7;
    sub_1A925704C(v7);
    sub_1A9257AF0(v8, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
    -[NSObject interestValue](v8, sel_interestValue);
    if (v9 == 0.0)
    {
      -[NSObject setInterestValue:](v8, sel_setInterestValue_, 1.0);
      sub_1A93F7374();
      v10 = (void *)sub_1A93F7314();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      -[NSObject setLastUpdatedDate:](v8, sel_setLastUpdatedDate_, v10);

      objc_msgSend(*(id *)(v1 + 16), sel_saveInCurrentBlock);
LABEL_12:

      return;
    }
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v17 = sub_1A93F7698();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A58D8);
    v25 = v8;
    v8 = sub_1A93F7674();
    v18 = sub_1A93F879C();
    if (os_log_type_enabled(v8, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v26 = a1;
      v27 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_1A915997C();
      v21 = sub_1A93F8B38();
      v26 = sub_1A906436C(v21, v22, &v27);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2048;
      -[NSObject interestValue](v25, sel_interestValue);
      v26 = v23;
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v8, v18, "Cannot favorite interest: %s because the interestValue is not neutral. InterestValue: %f", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v20, -1, -1);
      MEMORY[0x1AF41411C](v19, -1, -1);

      goto LABEL_12;
    }

  }
  else
  {
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A58D8);
    v25 = sub_1A93F7674();
    v12 = sub_1A93F879C();
    if (os_log_type_enabled(v25, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v26 = a1;
      v27 = v14;
      *(_DWORD *)v13 = 136315138;
      sub_1A915997C();
      v15 = sub_1A93F8B38();
      v26 = sub_1A906436C(v15, v16, &v27);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v25, v12, "Could not find or create interest for adamID: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v14, -1, -1);
      MEMORY[0x1AF41411C](v13, -1, -1);

      return;
    }
  }

}

void *sub_1A9256E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v3 = *(_QWORD *)(v1 + 16);
  NSManagedObjectContext.unsafeInterest(forAdamID:)(a1);
  v5 = v4;
  if (!v4)
  {
    v6 = (void *)objc_opt_self();
    v7 = (void *)sub_1A93F8010();
    v8 = objc_msgSend(v6, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v7, v3);

    type metadata accessor for MTInterest();
    v9 = (void *)swift_dynamicCastClass();
    if (v9)
    {
      v5 = v9;
      objc_msgSend(v9, sel_setAdamID_, a1);
      objc_msgSend(v5, sel_setInterestValue_, 0.0);
    }
    else
    {

      if (qword_1ED2A58F8 != -1)
        swift_once();
      v10 = sub_1A93F7698();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A58D8);
      v11 = sub_1A93F7674();
      v12 = sub_1A93F879C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v18 = v14;
        *(_DWORD *)v13 = 136315138;
        sub_1A915997C();
        v15 = sub_1A93F8B38();
        sub_1A906436C(v15, v16, &v18);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v11, v12, "Cannot create MTInterest for adamID: %s. Unable to favorite interest.", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v14, -1, -1);
        MEMORY[0x1AF41411C](v13, -1, -1);
      }

      return 0;
    }
  }
  return v5;
}

void sub_1A925704C(void *a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  NSManagedObjectContext.unsafeCategory(forAdamID:)((uint64_t)objc_msgSend(a1, sel_adamID));
  if (v2)
  {
    v7 = v2;
    objc_msgSend(a1, sel_setCategory_);
    objc_msgSend(v7, sel_setInterest_, a1);
  }
  else
  {
    if (qword_1ED2A58F8 != -1)
      swift_once();
    v3 = sub_1A93F7698();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED2A58D8);
    v7 = a1;
    v4 = sub_1A93F7674();
    v5 = sub_1A93F87B4();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      objc_msgSend(v7, sel_adamID);
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v4, v5, "Could not find category for interest: %llu. Not configuring relationship to category.", v6, 0xCu);
      MEMORY[0x1AF41411C](v6, -1, -1);

      return;
    }

  }
}

void sub_1A92571E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_1A9256E0C(a2);
    if (v9)
    {
      v10 = v9;
      sub_1A925704C(v9);
      sub_1A9257AF0(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      objc_msgSend(v10, sel_interestValue);
      if (v11 == 1.0)
      {
        objc_msgSend(v10, sel_setInterestValue_, 0.0);
        sub_1A93F7374();
        v12 = (void *)sub_1A93F7314();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v10, sel_setLastUpdatedDate_, v12);

        objc_msgSend(*(id *)(v8 + 16), sel_saveInCurrentBlock);
        swift_release();
      }
      else
      {
        if (qword_1ED2A58F8 != -1)
          swift_once();
        v20 = sub_1A93F7698();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A58D8);
        v10 = v10;
        v21 = sub_1A93F7674();
        v22 = sub_1A93F879C();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v29 = a2;
          v30 = v24;
          *(_DWORD *)v23 = 136315394;
          sub_1A915997C();
          v25 = sub_1A93F8B38();
          v29 = sub_1A906436C(v25, v26, &v30);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v10, sel_interestValue);
          v29 = v27;
          sub_1A93F8AA8();

          _os_log_impl(&dword_1A904E000, v21, v22, "Cannot un-favorite interest: %s because the interestValue is not favorited. InterestValue: %f", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v24, -1, -1);
          MEMORY[0x1AF41411C](v23, -1, -1);

          swift_release();
          return;
        }

        swift_release();
      }

    }
    else
    {
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v13 = sub_1A93F7698();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A58D8);
      v14 = sub_1A93F7674();
      v15 = sub_1A93F879C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v29 = a2;
        v30 = v17;
        *(_DWORD *)v16 = 136315138;
        sub_1A915997C();
        v18 = sub_1A93F8B38();
        v29 = sub_1A906436C(v18, v19, &v30);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v14, v15, "Could not find or create interest for adamID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v17, -1, -1);
        MEMORY[0x1AF41411C](v16, -1, -1);
      }

      swift_release();
    }
  }
}

void sub_1A9257648(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_1A9256E0C(a2);
    if (v9)
    {
      v10 = v9;
      sub_1A925704C(v9);
      sub_1A9257AF0(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      sub_1A9257AF0(v10, (SEL *)&selRef_podcastForStoreId_, (SEL *)&selRef_setPodcast_, "Could not find podcast for interest: %llu. Not configuring relationship to podcast.");
      objc_msgSend(v10, sel_interestValue);
      if (v11 == 0.0)
      {
        objc_msgSend(v10, sel_setInterestValue_, -1.0);
        sub_1A93F7374();
        v12 = (void *)sub_1A93F7314();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v10, sel_setLastUpdatedDate_, v12);

        objc_msgSend(*(id *)(v8 + 16), sel_saveInCurrentBlock);
        swift_release();
      }
      else
      {
        if (qword_1ED2A58F8 != -1)
          swift_once();
        v20 = sub_1A93F7698();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A58D8);
        v10 = v10;
        v21 = sub_1A93F7674();
        v22 = sub_1A93F879C();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v29 = a2;
          v30 = v24;
          *(_DWORD *)v23 = 136315394;
          sub_1A915997C();
          v25 = sub_1A93F8B38();
          v29 = sub_1A906436C(v25, v26, &v30);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v10, sel_interestValue);
          v29 = v27;
          sub_1A93F8AA8();

          _os_log_impl(&dword_1A904E000, v21, v22, "Cannot Suggest Less for interest: %s because the interestValue is not neutral. InterestValue: %f", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v24, -1, -1);
          MEMORY[0x1AF41411C](v23, -1, -1);

          swift_release();
          return;
        }

        swift_release();
      }

    }
    else
    {
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v13 = sub_1A93F7698();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A58D8);
      v14 = sub_1A93F7674();
      v15 = sub_1A93F879C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v29 = a2;
        v30 = v17;
        *(_DWORD *)v16 = 136315138;
        sub_1A915997C();
        v18 = sub_1A93F8B38();
        v29 = sub_1A906436C(v18, v19, &v30);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v14, v15, "Could not find or create interest for adamID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v17, -1, -1);
        MEMORY[0x1AF41411C](v16, -1, -1);
      }

      swift_release();
    }
  }
}

uint64_t sub_1A9257ACC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A9257AF0(void *a1, SEL *a2, SEL *a3, const char *a4)
{
  uint64_t v4;
  void *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;

  v9 = *(void **)(v4 + 16);
  v10 = (unint64_t)objc_msgSend(a1, sel_adamID);
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  v11 = objc_msgSend(v9, *a2, v10);
  if (v11)
  {
    v16 = v11;
    objc_msgSend(a1, *a3);
    objc_msgSend(v16, sel_setInterest_, a1);
    goto LABEL_8;
  }
  if (qword_1ED2A58F8 != -1)
    goto LABEL_10;
LABEL_5:
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A58D8);
  v16 = a1;
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    objc_msgSend(v16, sel_adamID);
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v13, v14, a4, v15, 0xCu);
    MEMORY[0x1AF41411C](v15, -1, -1);

    return;
  }

LABEL_8:
}

void sub_1A9257CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_1A9256E0C(a2);
    if (v9)
    {
      v10 = v9;
      sub_1A925704C(v9);
      sub_1A9257AF0(v10, (SEL *)&selRef_channelForStoreId_, (SEL *)&selRef_setChannel_, "Could not find channel for interest: %llu. Not configuring relationship to channel.");
      sub_1A9257AF0(v10, (SEL *)&selRef_podcastForStoreId_, (SEL *)&selRef_setPodcast_, "Could not find podcast for interest: %llu. Not configuring relationship to podcast.");
      objc_msgSend(v10, sel_interestValue);
      if (v11 == -1.0)
      {
        objc_msgSend(v10, sel_setInterestValue_, 0.0);
        sub_1A93F7374();
        v12 = (void *)sub_1A93F7314();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v10, sel_setLastUpdatedDate_, v12);

        objc_msgSend(*(id *)(v8 + 16), sel_saveInCurrentBlock);
        swift_release();
      }
      else
      {
        if (qword_1ED2A58F8 != -1)
          swift_once();
        v20 = sub_1A93F7698();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED2A58D8);
        v10 = v10;
        v21 = sub_1A93F7674();
        v22 = sub_1A93F879C();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v29 = a2;
          v30 = v24;
          *(_DWORD *)v23 = 136315394;
          sub_1A915997C();
          v25 = sub_1A93F8B38();
          v29 = sub_1A906436C(v25, v26, &v30);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          objc_msgSend(v10, sel_interestValue);
          v29 = v27;
          sub_1A93F8AA8();

          _os_log_impl(&dword_1A904E000, v21, v22, "Cannot Undo Suggest Less for interest: %s because the interestValue is not suggestLess. InterestValue: %f", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v24, -1, -1);
          MEMORY[0x1AF41411C](v23, -1, -1);

          swift_release();
          return;
        }

        swift_release();
      }

    }
    else
    {
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v13 = sub_1A93F7698();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A58D8);
      v14 = sub_1A93F7674();
      v15 = sub_1A93F879C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v29 = a2;
        v30 = v17;
        *(_DWORD *)v16 = 136315138;
        sub_1A915997C();
        v18 = sub_1A93F8B38();
        v29 = sub_1A906436C(v18, v19, &v30);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v14, v15, "Could not find or create interest for adamID: %s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v17, -1, -1);
        MEMORY[0x1AF41411C](v16, -1, -1);
      }

      swift_release();
    }
  }
}

uint64_t sub_1A9258138(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v2 = sub_1A93F738C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*a1, sel_lastDatePlayed, v4);
  sub_1A93F72CC();
  v7 = sub_1A93F7320();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 & 1;
}

unint64_t sub_1A92581E8()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EEAB98A8;
  if (!qword_1EEAB98A8)
  {
    v1 = sub_1A91C675C();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEAB98A8);
  }
  return result;
}

uint64_t sub_1A9258230(id *a1)
{
  return sub_1A9258138(a1) & 1;
}

uint64_t type metadata accessor for InterestStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterestStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterestStore.__allocating_init(ctx:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A9258294(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A908182C(0, v1, 0);
  v2 = v33;
  result = sub_1A925D25C(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v26 = v3 + 80;
  v27 = v1;
  v28 = v5;
  v29 = v3 + 64;
  v30 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v31 = v7;
    v12 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
    swift_bridgeObjectRetain();
    v32 = v2;
    v13 = v12;
    swift_bridgeObjectRetain();
    v14 = objc_msgSend(v13, sel_description);
    v15 = sub_1A93F8040();
    v17 = v16;

    sub_1A93F810C();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    v2 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    result = swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v32 + 16);
    v18 = *(_QWORD *)(v32 + 24);
    if (v19 >= v18 >> 1)
    {
      result = sub_1A908182C(v18 > 1, v19 + 1, 1);
      v2 = v32;
    }
    *(_QWORD *)(v2 + 16) = v19 + 1;
    v20 = v2 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v15;
    *(_QWORD *)(v20 + 40) = v17;
    v3 = v30;
    v9 = 1 << *(_BYTE *)(v30 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v29;
    v21 = *(_QWORD *)(v29 + 8 * v11);
    if ((v21 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v28;
    if (*(_DWORD *)(v30 + 36) != v28)
      goto LABEL_27;
    v22 = v21 & (-2 << (v6 & 0x3F));
    if (v22)
    {
      v9 = __clz(__rbit64(v22)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v27;
    }
    else
    {
      v23 = v11 + 1;
      v24 = (unint64_t)(v9 + 63) >> 6;
      v10 = v27;
      if (v11 + 1 < v24)
      {
        v25 = *(_QWORD *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          v9 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v11)
          {
            v25 = *(_QWORD *)(v26 + 8 * v11++);
            if (v25)
            {
              v23 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v31 + 1;
    v6 = v9;
    if (v31 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1A9258558(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v1, 0);
    v4 = sub_1A925D25C(v2);
    v5 = 0;
    v6 = v2 + 64;
    v19 = v2 + 80;
    v20 = v1;
    v21 = v3;
    v22 = v2 + 64;
    v23 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(v2 + 36) != v3)
        goto LABEL_24;
      v24 = v5;
      v10 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v4);
      swift_bridgeObjectRetain();
      v25 = v10;
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      sub_1A93F810C();
      swift_bridgeObjectRetain();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v12 = *(_QWORD *)(v26 + 16);
      v11 = *(_QWORD *)(v26 + 24);
      if (v12 >= v11 >> 1)
        sub_1A908182C(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v26 + 16) = v12 + 1;
      v13 = v26 + 16 * v12;
      *(_QWORD *)(v13 + 32) = 91;
      *(_QWORD *)(v13 + 40) = 0xE100000000000000;
      v2 = v23;
      v7 = 1 << *(_BYTE *)(v23 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = v22;
      v14 = *(_QWORD *)(v22 + 8 * v9);
      if ((v14 & (1 << v4)) == 0)
        goto LABEL_26;
      v3 = v21;
      if (*(_DWORD *)(v23 + 36) != v21)
        goto LABEL_27;
      v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        v7 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v20;
      }
      else
      {
        v16 = v9 + 1;
        v17 = (unint64_t)(v7 + 63) >> 6;
        v8 = v20;
        if (v9 + 1 < v17)
        {
          v18 = *(_QWORD *)(v22 + 8 * v16);
          if (v18)
          {
LABEL_20:
            v7 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v9)
            {
              v18 = *(_QWORD *)(v19 + 8 * v9++);
              if (v18)
              {
                v16 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      v5 = v24 + 1;
      v4 = v7;
      if (v24 + 1 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1A9258820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = v1;
  *(_QWORD *)(v2 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1A9258838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[8] = v2;
  *(_QWORD *)(v2 + 16) = v0 + 6;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94A8);
  *v3 = v0;
  v3[1] = sub_1A92588EC;
  return sub_1A93F9204();
}

uint64_t sub_1A92588EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9258958()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A925898C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  void *v10;
  _QWORD v11[4];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v11[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1A93F888C();
  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  v9 = (void **)&v8[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  v10 = *v9;
  *v9 = (void *)v7;

  qword_1EEABC130 = (uint64_t)v8;
}

uint64_t sub_1A9258BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A93F888C();
  qword_1ED2AB290 = result;
  return result;
}

uint64_t sub_1A9258D84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_1A93F89C4();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v4 = sub_1A93F73E0();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A9258E28()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;

  v1 = (_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 40);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!sub_1A93F8E5C())
    goto LABEL_13;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1AF4129DC](0, *v1);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    v4 = *(id *)(*v1 + 32);
  }
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v4, sel_managedObjectContext);
  *(_QWORD *)(v0 + 120) = v5;

  if (!v5)
  {
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9E8]);
  }
  sub_1A93F73D4();
  if (qword_1ED2A8718 != -1)
LABEL_17:
    swift_once();
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = sub_1A93F7698();
  *(_QWORD *)(v0 + 128) = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A8700);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(_QWORD *)(v0 + 136) = v11;
  v11(v7, v6, v8);
  v12 = sub_1A93F7674();
  v13 = sub_1A93F87B4();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_QWORD *)(v0 + 88);
  if (v14)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v18 = 136315138;
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v19 = sub_1A93F9060();
    *(_QWORD *)(v0 + 32) = sub_1A906436C(v19, v20, &v25);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v21(v15, v16);
    _os_log_impl(&dword_1A904E000, v12, v13, "[BatchFeedRequest] (%s) Starting", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    MEMORY[0x1AF41411C](v18, -1, -1);
  }
  else
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v21(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  }

  *(_QWORD *)(v0 + 144) = v21;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v22;
  *v22 = v0;
  v22[1] = sub_1A9259168;
  return sub_1A925D5C4(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1A9259168(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 168) = a1;
  return swift_task_switch();
}

uint64_t sub_1A92591DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0[21];
  v2 = v0[14];
  v3 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  v4 = (_QWORD *)swift_task_alloc();
  v0[22] = v4;
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_1A9259298;
  return sub_1A93F8EE0();
}

uint64_t sub_1A9259298()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A9259318()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9259390()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  _QWORD *v9;

  v1 = (void *)v0[15];
  v3 = v0[8];
  v2 = v0[9];
  v4 = v0[7];
  v5 = v0[5];
  v6 = v0[2];
  v0[25] = v6;
  v7 = (_QWORD *)swift_allocObject();
  v0[26] = v7;
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v1;
  v9 = (_QWORD *)swift_task_alloc();
  v0[27] = v9;
  *v9 = v0;
  v9[1] = sub_1A9259480;
  return sub_1A93F89E8();
}

uint64_t sub_1A9259480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1A92594FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  uint64_t v16;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
  v1 = sub_1A93F7674();
  v2 = sub_1A93F87B4();
  if (os_log_type_enabled(v1, v2))
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
    v15 = *(void **)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v16 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v7 = sub_1A93F9060();
    *(_QWORD *)(v0 + 24) = sub_1A906436C(v7, v8, &v16);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v14(v3, v4);
    _os_log_impl(&dword_1A904E000, v1, v2, "[BatchFeedRequest] (%s) Finished", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v6, -1, -1);
    MEMORY[0x1AF41411C](v5, -1, -1);

  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 80);

    v9(v10, v11);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
  v12 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_1A9259704()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_1A93F73E0();
  v5[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 + 64);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABC08);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A925981C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v26 = *(_QWORD *)(v0 + 120);
    v3 = (uint64_t *)(v1 + 32);
    v25 = *(_QWORD *)(v0 + 128) + 7;
    v4 = sub_1A93F84CC();
    v24 = *(_QWORD *)(v4 - 8);
    v23 = *(void (**)(void))(v24 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v27 = v2;
      v28 = *(_QWORD *)(v0 + 152);
      v6 = *(_QWORD *)(v0 + 136);
      v7 = *(_QWORD *)(v0 + 112);
      v29 = *(_QWORD *)(v0 + 104);
      v30 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 96);
      v9 = *v3;
      v23();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v6, v8, v7);
      v10 = (*(unsigned __int8 *)(v26 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v11 = (char *)swift_allocObject();
      *((_QWORD *)v11 + 2) = 0;
      *((_QWORD *)v11 + 3) = 0;
      *((_QWORD *)v11 + 4) = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v11[v10], v6, v7);
      *(_QWORD *)&v11[(v25 + v10) & 0xFFFFFFFFFFFFFFF8] = v29;
      sub_1A92174D4(v28, v30);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v30, 1, v4);
      swift_bridgeObjectRetain();
      v12 = *(_QWORD *)(v0 + 144);
      if ((_DWORD)v7 == 1)
      {
        sub_1A921751C(*(_QWORD *)(v0 + 144));
      }
      else
      {
        sub_1A93F84C0();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v4);
      }
      if (*((_QWORD *)v11 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v13 = sub_1A93F840C();
        v15 = v14;
        swift_unknownObjectRelease();
      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      v16 = **(_QWORD **)(v0 + 80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
      v17 = v15 | v13;
      if (v15 | v13)
      {
        v17 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v13;
        *(_QWORD *)(v0 + 40) = v15;
      }
      v5 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v17;
      *(_QWORD *)(v0 + 64) = v16;
      swift_task_create();
      swift_release();
      sub_1A921751C(v5);
      ++v3;
      v2 = v27 - 1;
    }
    while (v27 != 1);
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v0 + 96);
  v19 = **(_QWORD **)(v0 + 80);
  v20 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v20;
  *(_QWORD *)(v20 + 16) = v18;
  v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EEABC298 + dword_1EEABC298);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v21;
  *v21 = v0;
  v21[1] = sub_1A9259B10;
  return v31(MEMORY[0x1E0DEE9E8], (uint64_t)&unk_1EEABC290, v20, v19);
}

uint64_t sub_1A9259B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 176) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  **(_QWORD **)(v4 + 72) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1A9259BC8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A9259C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a1;
  v6[7] = a4;
  v7 = sub_1A93F73E0();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A9259C84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22[2];

  sub_1A9258558(v0[7]);
  v0[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
  v2 = sub_1A93F7FE0();
  v4 = v3;
  swift_bridgeObjectRelease();
  if (qword_1ED2A8718 != -1)
    swift_once();
  v6 = v0[11];
  v5 = v0[12];
  v7 = v0[10];
  v8 = v0[8];
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A8700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  swift_bridgeObjectRetain();
  v10 = sub_1A93F7674();
  v11 = sub_1A93F87B4();
  v12 = os_log_type_enabled(v10, v11);
  v14 = v0[11];
  v13 = v0[12];
  v15 = v0[10];
  if (v12)
  {
    v16 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)v16 = 136315394;
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1A93F9060();
    v0[4] = sub_1A906436C(v17, v18, v22);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[5] = sub_1A906436C(v2, v4, v22);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v10, v11, "[BatchFeedRequest] (%s) Sync tokens for batch - %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v21, -1, -1);
    MEMORY[0x1AF41411C](v16, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(v0[12], v0[10]);
    swift_bridgeObjectRelease_n();
  }

  v19 = (_QWORD *)swift_task_alloc();
  v0[13] = v19;
  *v19 = v0;
  v19[1] = sub_1A9259F6C;
  return sub_1A925C39C(v0[7]);
}

uint64_t sub_1A9259F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_1A9259FF0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 48) = *(_QWORD *)(v0 + 112);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925A030(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[4] = a1;
  v3[5] = a3;
  v5 = sub_1A93F73E0();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a2;
  v3[8] = v6;
  v3[9] = v7;
  return swift_task_switch();
}

uint64_t sub_1A925A098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  if (qword_1ED2A8718 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = sub_1A93F7698();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A8700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  v6 = sub_1A93F7674();
  v7 = sub_1A93F87B4();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  if (v8)
  {
    v12 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v12 = 136315394;
    sub_1A9066CA8(&qword_1ED2A5C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1A93F9060();
    *(_QWORD *)(v0 + 16) = sub_1A906436C(v13, v14, &v21);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    v15 = sub_1A93F8604();
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = sub_1A906436C(v15, v17, &v21);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v6, v7, "[BatchFeedRequest] (%s) Adding out of date uuids for batch - %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v20, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    swift_bridgeObjectRelease_n();
  }

  v18 = swift_bridgeObjectRetain();
  sub_1A92CD4E4(v18);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC2A0);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v4[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1A925A3A0()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  sub_1A93F8544();
  *(_QWORD *)(v0 + 96) = sub_1A9066D74(&qword_1EEABC2A8, &qword_1EEABC2A0, MEMORY[0x1E0DF09A0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1A925A474;
  return sub_1A93F8454();
}

uint64_t sub_1A925A474()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[15] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1A925A500()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 112) = v1;
  if (v1)
  {
    v2 = *(int **)(v0 + 48);
    *(_QWORD *)(v0 + 24) = v1;
    v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v2 + *v2);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_1A925A600;
    return v6(v0 + 16, v0 + 24);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
}

uint64_t sub_1A925A5CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925A600()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1A925A6A8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_1A925A704;
  return sub_1A93F8454();
}

uint64_t sub_1A925A704()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[15] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1A925A790()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A925A7C4(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id result;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v14 = a3;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return objc_msgSend(v14, sel_saveInCurrentBlock);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_1A93F8E5C();
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1AF4129DC](i, a1);
      else
        v7 = *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_uuid, v14);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1A93F8040();
        v13 = v12;

        LOBYTE(v10) = sub_1A92EFAA4(v11, v13, a2);
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          objc_msgSend((id)objc_opt_self(), sel_timeIntervalSinceReferenceDate);
          objc_msgSend(v8, sel_setLastFetchedDate_);
        }
      }

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A925AA58(int a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[2] = _Block_copy(aBlock);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  v3 = sub_1A93F8310();
  v2[3] = v3;
  swift_getObjCClassMetadata();
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1A925AAEC;
  return sub_1A9258D84(v3);
}

uint64_t sub_1A925AAEC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v5 = sub_1A93F711C();

    v6 = 0;
    v7 = (void *)v5;
  }
  else
  {
    v6 = sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v5 = 0;
    v7 = (void *)v6;
  }
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1A925ABC4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = v1;
  *(_BYTE *)(v2 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_1A925ABE0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  char v6;

  if (qword_1ED2A8718 != -1)
    swift_once();
  v1 = sub_1A93F7698();
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED2A8700);
  v2 = sub_1A93F7674();
  v3 = sub_1A93F87B4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A904E000, v2, v3, "[BatchFeedRequest] [Full Fetch] Starting", v4, 2u);
    MEMORY[0x1AF41411C](v4, -1, -1);
  }

  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_1A925AD00;
  v6 = *(_BYTE *)(v0 + 144);
  *(_QWORD *)(v5 + 1352) = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v5 + 1424) = v6;
  return swift_task_switch();
}

uint64_t sub_1A925AD00(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_BYTE *)(v4 + 145) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1A925AD80()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t inited;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  if ((*(_BYTE *)(v0 + 145) & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v1;
    *v1 = v0;
    v1[1] = sub_1A925AF70;
    return sub_1A925DD7C(*(_BYTE *)(v0 + 144));
  }
  else
  {
    v3 = sub_1A93F7674();
    v4 = sub_1A93F879C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A904E000, v3, v4, "[BatchFeedRequest] [Full Fetch] Not enough store shows in library", v5, 2u);
      MEMORY[0x1AF41411C](v5, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = sub_1A93F8040();
    *(_QWORD *)(inited + 40) = v7;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD000000000000039;
    *(_QWORD *)(inited + 56) = 0x80000001A944A8E0;
    sub_1A908A4A8(inited);
    v8 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v9 = (void *)sub_1A93F8010();
    v10 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_initWithDomain_code_userInfo_, v9, 0, v10);

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A925AF70(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v5 = *v1;
  *(_QWORD *)(v5 + 128) = a1;
  swift_task_dealloc();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 136) = v3;
  *v3 = v5;
  v3[1] = sub_1A925AFE0;
  return sub_1A9258D84(a1);
}

uint64_t sub_1A925AFE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  v5 = swift_bridgeObjectRelease();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1A925B164(char a1, void *aBlock)
{
  uint64_t v2;
  uint64_t ObjCClassMetadata;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = _Block_copy(aBlock);
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1A925B1E4;
  *(_QWORD *)(v5 + 96) = ObjCClassMetadata;
  *(_BYTE *)(v5 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_1A925B1E4()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v5 = sub_1A93F711C();

    v6 = 0;
    v7 = (void *)v5;
  }
  else
  {
    v6 = sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v5 = 0;
    v7 = (void *)v6;
  }
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 16);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1A925B2AC(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 1352) = v1;
  *(_BYTE *)(v2 + 1424) = a1;
  return swift_task_switch();
}

uint64_t sub_1A925B2C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(_BYTE *)(v0 + 1424);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 1360) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  swift_retain();
  swift_asyncLet_begin();
  v4 = sub_1A925DB60(v2);
  *(_QWORD *)(v0 + 1368) = v4;
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_privateQueueContext);
  *(_QWORD *)(v0 + 1376) = v6;

  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 1384) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v4;
  v8 = v6;
  v9 = v4;
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1A925B41C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[174] = v0;
  if (v0)
    return swift_asyncLet_finish();
  v1[175] = v1[167];
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1A925B458()
{
  uint64_t v0;
  _QWORD *v1;

  v1[176] = v0;
  if (!v0)
    v1[177] = v1[168];
  return swift_asyncLet_finish();
}

uint64_t sub_1A925B48C()
{
  return swift_task_switch();
}

uint64_t sub_1A925B4A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1368);

  return swift_asyncLet_finish();
}

uint64_t sub_1A925B4FC()
{
  return swift_task_switch();
}

uint64_t sub_1A925B510()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 1400) >= *(_QWORD *)(v0 + 1416));
}

uint64_t sub_1A925B564()
{
  return swift_task_switch();
}

uint64_t sub_1A925B578()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1368);

  return swift_asyncLet_finish();
}

uint64_t sub_1A925B5D4()
{
  return swift_task_switch();
}

uint64_t sub_1A925B5E8()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A925B630()
{
  return swift_task_switch();
}

uint64_t sub_1A925B644()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1368);

  return swift_asyncLet_finish();
}

uint64_t sub_1A925B6A0()
{
  return swift_task_switch();
}

uint64_t sub_1A925B6B4()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A925B6FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_1A925B714()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_batchFeedFetchShowCountMinimum);
  v0[18] = v2;

  if (qword_1ED2AA368 != -1)
    swift_once();
  v3 = qword_1ED2AB290;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A925B824;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1A91C2DF8;
  v5[3] = &block_descriptor_37;
  v5[4] = v4;
  objc_msgSend(v2, sel_asyncValueOnQueue_withCompletion_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1A925B824()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A925B884()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  id v4;

  v2 = *(_QWORD **)(v0 + 136);
  v1 = *(void **)(v0 + 144);
  v3 = *(void **)(v0 + 120);
  v4 = objc_msgSend(v3, sel_integerValue);

  *v2 = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925B8E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925B920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1A93F89C4();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A925B984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;

  v2 = v0[6];
  v1 = v0[7];
  v4 = (void *)v0[4];
  v3 = v0[5];
  v5 = (void *)v0[3];
  v6 = swift_allocObject();
  v0[8] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v7 = v5;
  v8 = v4;
  v9 = (_QWORD *)swift_task_alloc();
  v0[9] = v9;
  *v9 = v0;
  v9[1] = sub_1A925BA50;
  return sub_1A93F89E8();
}

uint64_t sub_1A925BA50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 48);
  v2 = *(_QWORD *)(*v1 + 56);
  v4 = *(_QWORD *)(*v1 + 40);
  v5 = *v1;
  *(_QWORD *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1A925BAFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925BB30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  result = sub_1A93F89D0();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A925BB94@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t result;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4260);
  result = sub_1A93F89DC();
  if (v1)
  {

    result = MEMORY[0x1E0DEE9D8];
  }
  *a1 = result;
  return result;
}

uint64_t sub_1A925BC0C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  void *v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  id v41;
  uint64_t *v42;
  _QWORD *v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;

  v5 = v3;
  v6 = a1;
  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v57 = a3;
    if (v8)
      goto LABEL_3;
LABEL_38:
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_39:
    swift_bridgeObjectRelease();
    if (!v5[2])
    {
      result = swift_bridgeObjectRelease();
LABEL_45:
      *v57 = v4;
      return result;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
LABEL_41:
      v50 = v4[2];
      v49 = v4[3];
      if (v50 >= v49 >> 1)
      {
        result = (uint64_t)sub_1A9119324((_QWORD *)(v49 > 1), v50 + 1, 1, v4);
        v4 = (_QWORD *)result;
      }
      v4[2] = v50 + 1;
      v4[v50 + 4] = v5;
      goto LABEL_45;
    }
LABEL_48:
    result = (uint64_t)sub_1A9119324(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A93F8E5C();
  v57 = a3;
  if (!v8)
    goto LABEL_38;
LABEL_3:
  v9 = objc_opt_self();
  if (v8 < 1)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v10 = (void *)v9;
  v11 = 0;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v12 = v6 & 0xC000000000000001;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v59 = v6;
  while (1)
  {
    if (v12)
      v13 = (id)MEMORY[0x1AF4129DC](v11, v6);
    else
      v13 = *(id *)(v6 + 8 * v11 + 32);
    v14 = v13;
    if ((objc_msgSend(v10, sel_isEmpty_, objc_msgSend(v13, sel_storeCollectionId, v51, v52)) & 1) != 0)
      goto LABEL_7;
    v15 = v8;
    v16 = v10;
    v17 = (unint64_t)objc_msgSend(v14, sel_storeCollectionId);
    if ((v17 & 0x8000000000000000) == 0)
    {
      if (v17)
      {
        if (v17 != 1000000000000)
        {
          v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v17);
          if (v18)
            break;
        }
      }
    }
LABEL_6:
    v10 = v16;
    v8 = v15;
    v6 = v59;
LABEL_7:
    ++v11;

    if (v8 == v11)
      goto LABEL_39;
  }
  v19 = v18;
  v58 = v4;
  v20 = objc_msgSend(v14, sel_uuid);
  if (!v20)
  {
LABEL_5:

    goto LABEL_6;
  }
  v4 = v20;
  v53 = sub_1A93F8040();
  v22 = v21;

  v23 = objc_msgSend(v14, sel_nextSyncToken);
  v54 = v22;
  if (v23)
  {
    v4 = v23;
    v24 = sub_1A93F8040();
    v51 = v25;
    v52 = v24;

  }
  else
  {
    v51 = 0;
    v52 = 0;
  }
  v26 = v19;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55 = (uint64_t)v26;
  v29 = sub_1A912E744((uint64_t)v26);
  v30 = v5[2];
  v31 = (v28 & 1) == 0;
  v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
    __break(1u);
    goto LABEL_47;
  }
  v33 = v28;
  if (v5[3] >= v32)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1A93096CC();
    v34 = (void *)v55;
    if ((v33 & 1) == 0)
      goto LABEL_24;
LABEL_29:
    v42 = (uint64_t *)(v5[7] + 32 * v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v42 = v52;
    v42[1] = v51;
    v42[2] = v53;
    v42[3] = v54;
LABEL_30:

    swift_bridgeObjectRelease();
    v4 = v58;
    if (v5[2] >= a2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1A9119324(0, v58[2] + 1, 1, v58);
      v43 = v4;
      v44 = v4[2];
      v45 = v43;
      v46 = v43[3];
      if (v44 >= v46 >> 1)
        v45 = sub_1A9119324((_QWORD *)(v46 > 1), v44 + 1, 1, v45);
      v45[2] = v44 + 1;
      v47 = &v45[v44];
      v4 = v45;
      v47[4] = v5;
      v19 = v34;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    }
    else
    {
      v19 = v14;
      v14 = v34;
    }
    goto LABEL_5;
  }
  sub_1A93026E4(v32, isUniquelyReferenced_nonNull_native);
  v34 = (void *)v55;
  v35 = sub_1A912E744(v55);
  if ((v33 & 1) != (v36 & 1))
    goto LABEL_50;
  v29 = v35;
  if ((v33 & 1) != 0)
    goto LABEL_29;
LABEL_24:
  v5[(v29 >> 6) + 8] |= 1 << v29;
  *(_QWORD *)(v5[6] + 8 * v29) = v34;
  v37 = (uint64_t *)(v5[7] + 32 * v29);
  *v37 = v52;
  v37[1] = v51;
  v37[2] = v53;
  v37[3] = v54;
  v38 = v5[2];
  v39 = __OFADD__(v38, 1);
  v40 = v38 + 1;
  if (!v39)
  {
    v5[2] = v40;
    v41 = v34;
    goto LABEL_30;
  }
  __break(1u);
LABEL_50:
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A925C0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30[24];
  ValueMetadata *v31;
  unint64_t v32;
  char v33;
  char v34;
  char v35;
  __int128 v36[2];
  uint64_t v37;
  char v38;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v36[0] = sub_1A9258294(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD3E0, &qword_1ED2AD3D8, MEMORY[0x1E0DEAF20]);
  v6 = sub_1A93F7FE0();
  v8 = v7;
  swift_bridgeObjectRelease();
  v37 = 0;
  memset(v36, 0, sizeof(v36));
  v38 = 4;
  v35 = 1;
  v34 = 1;
  v33 = 4;
  v31 = &type metadata for Podcasts;
  v32 = sub_1A90A4238();
  v30[0] = 20;
  v9 = sub_1A93F7500();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  v10 = MEMORY[0x1E0DEE9D8];
  if ((v9 & 1) != 0)
    v11 = &unk_1E54D7398;
  else
    v11 = (void *)MEMORY[0x1E0DEE9D8];
  v30[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7740);
  inited = swift_initStackObject();
  v29 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v29;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v8;
  *(_QWORD *)(inited + 40) = v13;
  v14 = sub_1A9112998(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC1E8);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v29;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v15 + 40) = &unk_1E54D73C0;
  v16 = sub_1A9113630(v15);
  v17 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  v18 = sub_1A9112728(v10);
  v19 = sub_1A9112728(v10);
  sub_1A911273C(v10);
  v21 = v20;
  v22 = sub_1A9112844(v10);
  *((_QWORD *)&v26 + 1) = v16;
  *(_QWORD *)&v26 = v14;
  *(_QWORD *)&v25 = sub_1A9112844(v10);
  *((_QWORD *)&v25 + 1) = v10;
  *(_QWORD *)&v24 = &unk_1E54D7358;
  *((_QWORD *)&v24 + 1) = v22;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v36, &v35, &v34, &v33, v18, v19, v21, v10, v28, v24, v25, (uint64_t)v11, v10, v30, 0, 1, v26, 0, 1,
           0,
           (uint64_t)v5,
           0,
           0,
           0,
           0,
           0,
           v10,
           0,
           0,
           2);
}

uint64_t sub_1A925C39C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for MediaRequest.Params();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A925C3F4()
{
  uint64_t *v0;
  void *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  sub_1A925C0B4(v0[17], v0[19]);
  if (qword_1EEAB6EE0 != -1)
    swift_once();
  v1 = (void *)qword_1EEABC130;
  v0[20] = qword_1EEABC130;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EEABC1D8 + dword_1EEABC1D8);
  v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1A925C4A8;
  return v4(v0[19]);
}

uint64_t sub_1A925C4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;

  v6 = *(_QWORD **)v5;
  v7 = *(void **)(*(_QWORD *)v5 + 160);
  v6[22] = a3;
  v6[23] = a4;
  v6[24] = v4;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1A925C514()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  id v13;
  void *v14;
  void *v15;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v1 = v0 + 120;
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A90D8068(v4, v3);
  sub_1A93F6D98();
  sub_1A925E694();
  sub_1A93F6D8C();
  v5 = v2;
  sub_1A905F180(v4, v3);
  swift_release();
  if (v2)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = sub_1A93F8040();
    *(_QWORD *)(inited + 40) = v9;
    swift_getErrorValue();
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(inited + 72) = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v10, v11);
    sub_1A908A4A8(inited);
    v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v14 = (void *)sub_1A93F8010();
    v15 = (void *)sub_1A93F7ED8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 0, v15);

    swift_willThrow();
    sub_1A905F180(v7, v6);
    sub_1A9114C30(*(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    v18 = MEMORY[0x1E0DEE9D8];
    if (v17)
    {
      v19 = (_BYTE *)(*(_QWORD *)v1 + 40);
      v20 = MEMORY[0x1E0DEE9D8];
      do
      {
        if ((*v19 & 1) == 0)
        {
          v24 = *((id *)v19 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1A929E750(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v22 = *(_QWORD *)(v20 + 16);
          v21 = *(_QWORD *)(v20 + 24);
          if (v22 >= v21 >> 1)
            sub_1A929E750(v21 > 1, v22 + 1, 1);
          *(_QWORD *)(v20 + 16) = v22 + 1;
          v23 = v20 + 16 * v22;
          *(_QWORD *)(v23 + 32) = v24;
          *(_BYTE *)(v23 + 40) = 0;
        }
        v19 += 16;
        --v17;
      }
      while (v17);
    }
    else
    {
      v20 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v20 + 16);
    if (v25)
    {
      swift_retain();
      v26 = 32;
      do
      {
        v27 = *(id *)(v20 + v26);
        MEMORY[0x1AF412004]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A93F834C();
        sub_1A93F8394();
        sub_1A93F8328();
        v26 += 16;
        --v25;
      }
      while (v25);
      swift_release();
    }
    v29 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 136);
    swift_release();
    swift_bridgeObjectRetain();
    v32 = sub_1A925D404(v18, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = sub_1A9159F94((uint64_t)v32);
    swift_bridgeObjectRelease();
    sub_1A905F180(v29, v28);
    sub_1A9114C30(v30);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v33);
  }
}

uint64_t sub_1A925C90C()
{
  uint64_t v0;

  swift_willThrow();
  sub_1A9114C30(*(_QWORD *)(v0 + 152));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id BatchFeedRequestController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BatchFeedRequestController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchFeedRequestController();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BatchFeedRequestController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchFeedRequestController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A925CA1C()
{
  return sub_1A925CD90();
}

uint64_t sub_1A925CA2C()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A925CA3C()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A925CA4C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

void sub_1A925CA58(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A925CA6C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A925CA78()
{
  sub_1A925E1F0();
  return sub_1A93F945C();
}

uint64_t sub_1A925CAA0()
{
  sub_1A925E1F0();
  return sub_1A93F9468();
}

_QWORD *sub_1A925CAC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A925E0C4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A925CAF0(char *a1, char *a2)
{
  return sub_1A92F8EF8(*a1, *a2);
}

uint64_t sub_1A925CAFC()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A925CB68()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A925CBB0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A925CC18@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A925CC74(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 1635018093;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A925CCA0()
{
  _BYTE *v0;

  if (*v0)
    return 1635018093;
  else
    return 25705;
}

uint64_t sub_1A925CCC8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1A925CD28()
{
  sub_1A925E5C8();
  return sub_1A93F945C();
}

uint64_t sub_1A925CD50()
{
  sub_1A925E5C8();
  return sub_1A93F9468();
}

uint64_t sub_1A925CD78()
{
  return sub_1A925CD90();
}

uint64_t sub_1A925CD90()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A925CDDC()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A925CDF4()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A925CE0C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  return sub_1A93F9324();
}

uint64_t sub_1A925CE54@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

uint64_t sub_1A925CE60@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A925CEAC(_QWORD *a1@<X8>)
{
  *a1 = 0x6465636E79537369;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A925CEC8()
{
  return 0x6465636E79537369;
}

uint64_t sub_1A925CEE0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CEEC(a1);
}

uint64_t sub_1A925CEEC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A925CF3C()
{
  sub_1A925E650();
  return sub_1A93F945C();
}

uint64_t sub_1A925CF64()
{
  sub_1A925E650();
  return sub_1A93F9468();
}

void (**sub_1A925CF8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);
  char v5;

  result = sub_1A925E2DC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_1A925CFBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1A921755C;
  return v6();
}

uint64_t sub_1A925D010(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1A921755C;
  return v7();
}

uint64_t sub_1A925D064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A93F84CC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A93F84C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A921751C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A93F840C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A925D1A8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A925D20C;
  return v6(a1);
}

uint64_t sub_1A925D20C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A925D25C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A925D2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1A9198668;
  *(_QWORD *)(v11 + 24) = v10;
  swift_retain();
  sub_1A9195C30(a3, 0, (uint64_t)sub_1A9197880, v11);
  swift_release();
  return swift_release();
}

_QWORD *sub_1A925D404(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v22;
  unint64_t v23;

  v3 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = v3 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v7 = 4;
      v22 = v3 & 0xC000000000000001;
      v23 = v3;
      while (1)
      {
        v8 = v7 - 4;
        if (v5)
        {
          v9 = (id)MEMORY[0x1AF4129DC](v7 - 4, v3);
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
            goto LABEL_19;
        }
        else
        {
          v9 = *(id *)(v3 + 8 * v7);
          v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_QWORD *)(a2 + 16))
        {
          v11 = v9;
          v12 = sub_1A912E744((uint64_t)v11);
          if ((v13 & 1) != 0)
          {
            v14 = v4;
            v15 = *(_QWORD *)(a2 + 56) + 32 * v12;
            v16 = *(_QWORD *)(v15 + 16);
            v17 = *(_QWORD *)(v15 + 24);
            swift_bridgeObjectRetain();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v6 = sub_1A907ECFC(0, v6[2] + 1, 1, v6);
            v19 = v6[2];
            v18 = v6[3];
            if (v19 >= v18 >> 1)
              v6 = sub_1A907ECFC((_QWORD *)(v18 > 1), v19 + 1, 1, v6);
            v6[2] = v19 + 1;
            v20 = &v6[2 * v19];
            v20[4] = v16;
            v20[5] = v17;
            v4 = v14;
            v3 = v23;
            v5 = v22;
          }
          else
          {

          }
        }
        else
        {

        }
        ++v7;
        if (v10 == v4)
          goto LABEL_22;
      }
    }
  }
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A925D5C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[18] = a1;
  v2 = sub_1A93F89C4();
  v1[19] = v2;
  v1[20] = *(_QWORD *)(v2 - 8);
  v1[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A925D624()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 144);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1A93F8E5C())
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1AF4129DC](0, *(_QWORD *)(v0 + 144));
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_14;
    }
    v4 = *(id *)(*(_QWORD *)(v0 + 144) + 32);
  }
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v4, sel_managedObjectContext);
  *(_QWORD *)(v0 + 176) = v5;

  if (v5)
  {
    v1 = v0 + 120;
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v2 = (unint64_t)objc_msgSend(v6, sel_batchFeedFetchShowBatchSize);
    *(_QWORD *)(v0 + 184) = v2;

    if (qword_1ED2AA368 == -1)
    {
LABEL_8:
      v7 = qword_1ED2AB290;
      *(_QWORD *)(v0 + 56) = v1;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1A925D81C;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_1A91C2DF8;
      v9[3] = &block_descriptor_96;
      v9[4] = v8;
      objc_msgSend((id)v2, sel_asyncValueOnQueue_withCompletion_, v7, v9);
      return swift_continuation_await();
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
LABEL_11:
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1A925D81C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A925D87C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = (void *)v0[23];
  v3 = v0[20];
  v2 = v0[21];
  v5 = v0[18];
  v4 = v0[19];
  v6 = (void *)v0[15];
  v7 = objc_msgSend(v6, sel_integerValue);

  v8 = swift_allocObject();
  v0[25] = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[26] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC2B0);
  *v9 = v0;
  v9[1] = sub_1A925D97C;
  return sub_1A93F89E8();
}

uint64_t sub_1A925D97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1A925D9F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A925DA3C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A925DA94(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1A921755C;
  return sub_1A925977C(a1, a2, v6, v7, v8);
}

uint64_t sub_1A925DB10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1A925DB44()
{
  uint64_t v0;

  return sub_1A925A7C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

id sub_1A925DB60(char a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  sub_1A93F8040();
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_predicateForAreMediaAPI_, 1);
  v7 = objc_msgSend(v5, sel_predicateForNotHiddenPodcasts);
  v8 = objc_msgSend(v6, sel_AND_, v7);

  if ((a1 & 1) == 0)
  {
    v9 = v8;
    v10 = objc_msgSend(v5, sel_predicateForNotImplicitlyFollowedPodcasts);
    v8 = objc_msgSend(v9, sel_AND_, v10);

  }
  objc_msgSend(v4, sel_setPredicate_, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A94055A0;
  v12 = sub_1A93F8040();
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  v15 = sub_1A93F8040();
  *(_QWORD *)(v11 + 88) = v13;
  *(_QWORD *)(v11 + 64) = v15;
  *(_QWORD *)(v11 + 72) = v16;
  v17 = sub_1A93F8040();
  *(_QWORD *)(v11 + 120) = v13;
  *(_QWORD *)(v11 + 96) = v17;
  *(_QWORD *)(v11 + 104) = v18;
  v19 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setPropertiesToFetch_, v19);

  return v4;
}

uint64_t sub_1A925DD7C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 80) = a1;
  v2 = sub_1A93F89C4();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A925DDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = sub_1A925DB60(*(_BYTE *)(v0 + 80));
  *(_QWORD *)(v0 + 48) = v4;
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_privateQueueContext);
  *(_QWORD *)(v0 + 56) = v6;

  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v6;
  v8 = v4;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC250);
  *v9 = v0;
  v9[1] = sub_1A925DF14;
  return sub_1A93F89E8();
}

uint64_t sub_1A925DF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1A925DF90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 56);

  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t type metadata accessor for BatchFeedRequestController()
{
  return objc_opt_self();
}

uint64_t method lookup function for BatchFeedRequestController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static BatchFeedRequestController.fetchOutOfDateShowUUIDs(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 80) + *(_QWORD *)(v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A925F198;
  return v6(a1);
}

uint64_t dispatch thunk of static BatchFeedRequestController.fetchOutOfDateShowUUIDs(includeImplicit:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 88) + *(_QWORD *)(v1 + 88));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A91E9424;
  return v6(a1);
}

_QWORD *sub_1A925E0C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC188);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A925E1F0();
  sub_1A93F93C0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC198);
    sub_1A925E234();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1A925E1F0()
{
  unint64_t result;

  result = qword_1EEABC190;
  if (!qword_1EEABC190)
  {
    result = MEMORY[0x1AF414014](&unk_1A941659C, &type metadata for BatchFeedRequestReponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC190);
  }
  return result;
}

unint64_t sub_1A925E234()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EEABC1A0;
  if (!qword_1EEABC1A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABC198);
    v2 = sub_1A925E298();
    result = MEMORY[0x1AF414014](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEABC1A0);
  }
  return result;
}

unint64_t sub_1A925E298()
{
  unint64_t result;

  result = qword_1EEABC1A8;
  if (!qword_1EEABC1A8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94160C8, &type metadata for BatchFeedRequestReponse.ShowData);
    atomic_store(result, (unint64_t *)&qword_1EEABC1A8);
  }
  return result;
}

void (**sub_1A925E2DC(_QWORD *a1))(char *, uint64_t)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(char *, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (**v12)(char *, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  id v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char v26;
  char v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC1B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC1B8);
  v7 = *(void (***)(char *, uint64_t))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1A925E5C8();
  v11 = v25;
  sub_1A93F93C0();
  if (!v11)
  {
    v25 = v5;
    v22 = v3;
    v23 = v2;
    v12 = v7;
    v27 = 0;
    v13 = sub_1A93F8F4C();
    v15 = sub_1A931883C(v13, v14);
    swift_bridgeObjectRelease();
    if (v15)
      v16 = v15 == 1000000000000;
    else
      v16 = 1;
    if (!v16)
    {
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v15);
      if (v18)
      {
        v19 = v18;
        v26 = 1;
        sub_1A925E650();
        v7 = v19;
        v20 = v25;
        sub_1A93F8EEC();
        v21 = v23;
        sub_1A93F8F58();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
        v12[1](v9, v6);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);

        return v7;
      }
    }
    sub_1A925E60C();
    swift_allocError();
    swift_willThrow();
    v7[1](v9, v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v7;
}

unint64_t sub_1A925E5C8()
{
  unint64_t result;

  result = qword_1EEABC1C0;
  if (!qword_1EEABC1C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941654C, &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC1C0);
  }
  return result;
}

unint64_t sub_1A925E60C()
{
  unint64_t result;

  result = qword_1EEABC1C8;
  if (!qword_1EEABC1C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941650C, &type metadata for BatchFeedRequestReponse.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1EEABC1C8);
  }
  return result;
}

unint64_t sub_1A925E650()
{
  unint64_t result;

  result = qword_1EEABC1D0;
  if (!qword_1EEABC1D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94164BC, &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC1D0);
  }
  return result;
}

unint64_t sub_1A925E694()
{
  unint64_t result;

  result = qword_1EEABC1E0;
  if (!qword_1EEABC1E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A94160F0, &type metadata for BatchFeedRequestReponse);
    atomic_store(result, (unint64_t *)&qword_1EEABC1E0);
  }
  return result;
}

uint64_t sub_1A925E6D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A925D2E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A925E6E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A925E744()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A925E768()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1A925E78C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A9164CD4;
  return ((uint64_t (*)(char, void *))((char *)&dword_1EEABC1F0 + dword_1EEABC1F0))(v2, v3);
}

uint64_t sub_1A925E7FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1A921755C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EEABC200 + dword_1EEABC200))(v2, v3, v4);
}

uint64_t sub_1A925E878(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A921755C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EEABC210 + dword_1EEABC210))(a1, v4, v5, v6);
}

uint64_t sub_1A925E8FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A921755C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EEABC220 + dword_1EEABC220))(a1, v4);
}

uint64_t sub_1A925E96C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1A925E998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A921755C;
  return ((uint64_t (*)(int, void *))((char *)&dword_1EEABC230 + dword_1EEABC230))(v2, v3);
}

uint64_t sub_1A925EA0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A925EA38@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A925BB94(a1);
}

uint64_t sub_1A925EA50()
{
  return swift_deallocObject();
}

uint64_t sub_1A925EA60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A921755C;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_1A925EAC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1A921755C;
  return sub_1A925B920(a1, v5, v4);
}

uint64_t sub_1A925EB24@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A925BB30(a1);
}

uint64_t sub_1A925EB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A925EBC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(sub_1A93F73E0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1A9164CD4;
  return sub_1A9259C20(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1A925EC70(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1A921755C;
  return sub_1A925A030(a1, a2, v6);
}

uint64_t sub_1A925ECD4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A925ECF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A925BC0C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.DecodingError()
{
  return &type metadata for BatchFeedRequestReponse.DecodingError;
}

uint64_t storeEnumTagSinglePayload for BatchFeedRequestReponse.ShowData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A925ED70 + 4 * byte_1A9416065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A925EDA4 + 4 * byte_1A9416060[v4]))();
}

uint64_t sub_1A925EDA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A925EDAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A925EDB4);
  return result;
}

uint64_t sub_1A925EDC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A925EDC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A925EDCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A925EDD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData.CodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData.MetadataCodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys;
}

uint64_t _s18PodcastsFoundation23BatchFeedRequestReponseV13DecodingErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A925EE40 + 4 * byte_1A941606A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A925EE60 + 4 * byte_1A941606F[v4]))();
}

_BYTE *sub_1A925EE40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A925EE60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A925EE68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A925EE70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A925EE78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A925EE80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.CodingKeys()
{
  return &type metadata for BatchFeedRequestReponse.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse()
{
  return &type metadata for BatchFeedRequestReponse;
}

ValueMetadata *type metadata accessor for BatchFeedRequestReponse.ShowData()
{
  return &type metadata for BatchFeedRequestReponse.ShowData;
}

unint64_t sub_1A925EEC0()
{
  unint64_t result;

  result = qword_1EEABC2B8;
  if (!qword_1EEABC2B8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941624C, &type metadata for BatchFeedRequestReponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2B8);
  }
  return result;
}

unint64_t sub_1A925EF08()
{
  unint64_t result;

  result = qword_1EEABC2C0;
  if (!qword_1EEABC2C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941633C, &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2C0);
  }
  return result;
}

unint64_t sub_1A925EF50()
{
  unint64_t result;

  result = qword_1EEABC2C8;
  if (!qword_1EEABC2C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941642C, &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2C8);
  }
  return result;
}

unint64_t sub_1A925EF98()
{
  unint64_t result;

  result = qword_1EEABC2D0;
  if (!qword_1EEABC2D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416494, &type metadata for BatchFeedRequestReponse.DecodingError);
    atomic_store(result, (unint64_t *)&qword_1EEABC2D0);
  }
  return result;
}

unint64_t sub_1A925EFE0()
{
  unint64_t result;

  result = qword_1EEABC2D8;
  if (!qword_1EEABC2D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416274, &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2D8);
  }
  return result;
}

unint64_t sub_1A925F028()
{
  unint64_t result;

  result = qword_1EEABC2E0;
  if (!qword_1EEABC2E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941629C, &type metadata for BatchFeedRequestReponse.ShowData.MetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2E0);
  }
  return result;
}

unint64_t sub_1A925F070()
{
  unint64_t result;

  result = qword_1EEABC2E8;
  if (!qword_1EEABC2E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416364, &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2E8);
  }
  return result;
}

unint64_t sub_1A925F0B8()
{
  unint64_t result;

  result = qword_1EEABC2F0;
  if (!qword_1EEABC2F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A941638C, &type metadata for BatchFeedRequestReponse.ShowData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2F0);
  }
  return result;
}

unint64_t sub_1A925F100()
{
  unint64_t result;

  result = qword_1EEABC2F8;
  if (!qword_1EEABC2F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416184, &type metadata for BatchFeedRequestReponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC2F8);
  }
  return result;
}

unint64_t sub_1A925F148()
{
  unint64_t result;

  result = qword_1EEABC300;
  if (!qword_1EEABC300)
  {
    result = MEMORY[0x1AF414014](&unk_1A94161AC, &type metadata for BatchFeedRequestReponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC300);
  }
  return result;
}

_QWORD *InterestStateController.__allocating_init(dataSource:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)swift_allocObject();
  v5 = sub_1A9115920(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BB0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = v5;
  v4[4] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(_BYTE *)(v7 + 16) = 0;
  v4[5] = v7;
  v4[2] = a1;
  v4[3] = a2;
  return v4;
}

_QWORD *InterestStateController.init(dataSource:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1A9115920(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BB0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = v5;
  v2[4] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(_BYTE *)(v7 + 16) = 0;
  v2[5] = v7;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

void sub_1A925F2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v7;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  v3 = *(_BYTE *)(v2 + 16);
  *(_BYTE *)(v2 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 24);
    v7 = swift_unknownObjectRetain();
    v6(v7, &protocol witness table for InterestStateController, ObjectType, v4);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  }
}

uint64_t InterestStateController.stateMachine(for:)(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  sub_1A925F2C0();
  v3 = *(os_unfair_lock_s **)(v1 + 32);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1A925F3BC(v4, a1, v1, &v7);
  os_unfair_lock_unlock(v5);
  return v7;
}

uint64_t sub_1A925F3BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v8 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v9 = sub_1A9093570(a2), (v10 & 1) != 0))
  {
    *a4 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    return swift_retain();
  }
  else
  {
    v12 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a2, ObjectType, v12);
    if (v14 == 4)
      v15 = 3;
    else
      v15 = v14;
    type metadata accessor for InterestStateMachine();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
    if (qword_1EEAB6F18 != -1)
      swift_once();
    v17 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v16 + 40) = qword_1EEAED350;
    *(_QWORD *)(v16 + 48) = v17;
    *(_QWORD *)(v16 + 24) = a2;
    *(_BYTE *)(v16 + 32) = v15;
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *a1;
    *a1 = 0x8000000000000000;
    sub_1A930EAAC(v16, a2, isUniquelyReferenced_nonNull_native);
    *a1 = v19;
    result = swift_bridgeObjectRelease();
    *a4 = v16;
  }
  return result;
}

uint64_t sub_1A925F524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  char v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24[4];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, ObjectType, v4);
  if (result != 4)
  {
    v7 = result;
    sub_1A925F2C0();
    v8 = *(os_unfair_lock_s **)(v1 + 32);
    v9 = (uint64_t *)&v8[4];
    v10 = v8 + 6;
    os_unfair_lock_lock(v8 + 6);
    sub_1A925F3BC(v9, a1, v2, v24);
    os_unfair_lock_unlock(v10);
    v11 = v24[0];
    swift_beginAccess();
    objc_msgSend(*(id *)(v11 + 16), sel_lock);
    sub_1A9260454(v11, v7, &v23);
    objc_msgSend(*(id *)(v11 + 16), sel_unlock);
    if ((v23 & 1) != 0)
    {
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v12 = sub_1A93F7698();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A58D8);
      v13 = sub_1A93F7674();
      v14 = sub_1A93F87B4();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v15 = 136315394;
        sub_1A915997C();
        v16 = sub_1A93F8B38();
        sub_1A906436C(v16, v17, &v23);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        __asm { BR              X10 }
      }
    }
    else
    {
      if (qword_1ED2A58F8 != -1)
        swift_once();
      v18 = sub_1A93F7698();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED2A58D8);
      v13 = sub_1A93F7674();
      v19 = sub_1A93F879C();
      if (os_log_type_enabled(v13, v19))
      {
        v20 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v20 = 136315394;
        sub_1A915997C();
        v21 = sub_1A93F8B38();
        sub_1A906436C(v21, v22, &v23);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        __asm { BR              X10 }
      }
    }

    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall InterestStateController.refreshStates(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v4;

  v1 = *((_QWORD *)a1._rawValue + 2);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v1; ++i)
    {
      v4 = *((_QWORD *)a1._rawValue + i + 4);
      sub_1A925F524(v4);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t InterestStateController.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InterestStateController.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of InterestStateDataSourceDelegate.refreshStates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for InterestStateController()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterestStateController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterestStateController.__allocating_init(dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of InMemorySizable.inMemorySize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t MetricsPageID.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsPageID.init(_:)()
{
  sub_1A915997C();
  return sub_1A93F8B38();
}

uint64_t MetricsPageID.adamID.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1A931883C(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static MetricsPageID.unique()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1A93F73E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v4 = sub_1A93F80A0();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t MetricsPageID.debugDescription.getter()
{
  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  return 0xD000000000000019;
}

unint64_t sub_1A925FD18()
{
  return MetricsPageID.debugDescription.getter();
}

uint64_t MetricsPageID.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t MetricsPageID.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_1A93F90CC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageID.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1A93F912C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageID.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsPageID.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsPageID.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsPageID.focus.getter()
{
  return 0x7375636F66;
}

uint64_t static MetricsPageID.hints.getter()
{
  return 0x73746E6968;
}

uint64_t static MetricsPageID.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsPageID.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsPageID.listenNow.getter()
{
  return 0x6F4E6E657473696CLL;
}

unint64_t static MetricsPageID.multipleSubscriptionsFound.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t static MetricsPageID.recentlyPlayed.getter()
{
  return 0x796C746E65636552;
}

unint64_t static MetricsPageID.recentlySearched.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsPageID.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsPageID.saved.getter()
{
  return 0x6465766153;
}

uint64_t static MetricsPageID.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageID.sharedWithYou.getter()
{
  return 0x6957646572616853;
}

uint64_t static MetricsPageID.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageID.station.getter()
{
  return 0x6E6F6974617453;
}

uint64_t static MetricsPageID.stationSettings.getter()
{
  return 0x536E6F6974617453;
}

unint64_t static MetricsPageID.subscriptionFAQs.getter()
{
  return 0xD000000000000010;
}

unint64_t static MetricsPageID.subscriptionsFound.getter()
{
  return 0xD000000000000012;
}

unint64_t static MetricsPageID.subscriptionRequired.getter()
{
  return 0xD000000000000014;
}

uint64_t static MetricsPageID.upNext.getter()
{
  return 0x7478654E7055;
}

uint64_t static MetricsPageID.unknown.getter()
{
  return 0x6E776F6E6B6E55;
}

uint64_t static MetricsPageID.welcomeSheet.getter()
{
  return 0x53656D6F636C6557;
}

unint64_t sub_1A9260138()
{
  unint64_t result;

  result = qword_1EEABC308;
  if (!qword_1EEABC308)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MetricsPageID, &type metadata for MetricsPageID);
    atomic_store(result, (unint64_t *)&qword_1EEABC308);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageID()
{
  return &type metadata for MetricsPageID;
}

uint64_t InterestStateMachine.__allocating_init(identifier:initialState:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  if (qword_1EEAB6F18 != -1)
    swift_once();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 40) = qword_1EEAED350;
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 24) = a1;
  *(_BYTE *)(v4 + 32) = a2;
  swift_bridgeObjectRetain();
  return v4;
}

Swift::Bool __swiftcall InterestStateMachine.transition(to:)(PodcastsFoundation::InterestState to)
{
  uint64_t v1;
  Swift::Bool v4;

  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  sub_1A9260454(v1, to, &v4);
  objc_msgSend(*(id *)(v1 + 16), sel_unlock);
  return v4;
}

uint64_t InterestStateMachine.lock.getter()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t InterestStateMachine.lock.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*InterestStateMachine.lock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t InterestStateMachine.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InterestStateMachine.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  objc_msgSend(*(id *)(v0 + 16), sel_lock);
  v1 = *(unsigned __int8 *)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 16), sel_unlock);
  return v1;
}

uint64_t InterestStateMachine.init(identifier:initialState:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  if (qword_1EEAB6F18 != -1)
    swift_once();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 40) = qword_1EEAED350;
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 24) = a1;
  *(_BYTE *)(v2 + 32) = a2;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1A9260454(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  char v5;

  sub_1A92F84C0(*(_BYTE *)(a1 + 32));
  if ((v5 & 1) == 0)
    __asm { BR              X10 }
  *a3 = 1;
}

uint64_t sub_1A9260740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a4);
  *(_QWORD *)(v6 - 72) = sub_1A906436C(0x6C61727475656ELL, 0xE700000000000000, (uint64_t *)va);
  sub_1A93F8AA8();
  swift_release_n();
  v7 = swift_bridgeObjectRelease();
  *(_WORD *)(v5 + 22) = 2080;
  return ((uint64_t (*)(uint64_t))((char *)sub_1A9260804 + 4 * byte_1A9416868[v4]))(v7);
}

uint64_t sub_1A926076C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a4);
  *(_QWORD *)(v7 - 72) = sub_1A906436C(0x657469726F766166, 0xE900000000000064, (uint64_t *)va);
  sub_1A93F8AA8(v7 - 72, v7 - 64, v6 + 14, v6 + 22);
  swift_release_n(v5, 2);
  v8 = swift_bridgeObjectRelease(0xE900000000000064);
  *(_WORD *)(v6 + 22) = 2080;
  return ((uint64_t (*)(uint64_t))((char *)sub_1A9260804 + 4 * byte_1A9416868[v4]))(v8);
}

void sub_1A9260788()
{
  JUMPOUT(0x1A926079CLL);
}

void sub_1A9260804(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_t log, uint64_t a13)
{
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  *(_QWORD *)(v15 - 72) = sub_1A906436C(0x6C61727475656ELL, 0xE700000000000000, &a13);
  sub_1A93F8AA8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A904E000, log, v13, "Unable to switch state for interest %s from %s to %s.", v14, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1AF41411C](a10, -1, -1);
  MEMORY[0x1AF41411C](v14, -1, -1);

  JUMPOUT(0x1A92608ECLL);
}

uint64_t sub_1A9260914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v13 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9066C6C();
  v9 = (void *)sub_1A93F8868();
  aBlock[4] = sub_1A92613B4;
  v15 = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_38;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CE8((unint64_t *)&qword_1ED2AD6F0, 255, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id InterestStateMachine.addStateTransitionObserver(_:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[24];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  objc_msgSend(*(id *)(v3 + 16), sel_lock);
  swift_unknownObjectWeakInit();
  v14 = a2;
  v15 = a3;
  sub_1A9261218((uint64_t)v13, (uint64_t)v12);
  v6 = (_QWORD *)(v3 + 48);
  swift_beginAccess();
  v7 = *(_QWORD **)(v3 + 48);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 48) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1A9119338(0, v7[2] + 1, 1, (unint64_t)v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1A9119338((_QWORD *)(v9 > 1), v10 + 1, 1, (unint64_t)v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  sub_1A9261254((uint64_t)v12, (uint64_t)&v7[3 * v10 + 4]);
  swift_endAccess();
  sub_1A926128C((uint64_t)v13);
  return objc_msgSend(*(id *)(v3 + 16), sel_unlock);
}

id InterestStateMachine.removeStateTransitionActions(for:)(uint64_t a1)
{
  uint64_t v1;
  id *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id *v17;
  _BYTE v18[24];
  _BYTE v19[24];
  uint64_t v20;

  v3 = (id *)(v1 + 16);
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 16), sel_lock);
  v4 = (_QWORD *)(v1 + 48);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v6 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(v5 + 16);
  result = (id)swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    *v4 = v6;
    swift_bridgeObjectRelease();
    return objc_msgSend(*v3, sel_unlock);
  }
  v17 = (id *)(v1 + 16);
  v9 = 0;
  v10 = v5 + 32;
  v11 = MEMORY[0x1E0DEE9D8];
  while (v9 < *(_QWORD *)(v5 + 16))
  {
    sub_1A9261218(v10, (uint64_t)v19);
    v12 = MEMORY[0x1AF41420C](v19);
    swift_unknownObjectRelease();
    sub_1A9261218((uint64_t)v19, (uint64_t)v18);
    if (v12)
    {
      v13 = MEMORY[0x1AF41420C](v18);
      if (!v13)
      {
        sub_1A926128C((uint64_t)v18);
LABEL_12:
        sub_1A9261254((uint64_t)v19, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1A929E77C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v20;
        v16 = *(_QWORD *)(v20 + 16);
        v15 = *(_QWORD *)(v20 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1A929E77C(v15 > 1, v16 + 1, 1);
          v11 = v20;
        }
        *(_QWORD *)(v11 + 16) = v16 + 1;
        result = (id)sub_1A9261254((uint64_t)v18, v11 + 24 * v16 + 32);
        goto LABEL_5;
      }
      v14 = v13;
      swift_unknownObjectRelease();
      sub_1A926128C((uint64_t)v18);
      if (v14 != a1)
        goto LABEL_12;
    }
    else
    {
      sub_1A926128C((uint64_t)v18);
    }
    result = (id)sub_1A926128C((uint64_t)v19);
LABEL_5:
    ++v9;
    v10 += 24;
    if (v7 == v9)
    {
      v6 = v20;
      v3 = v17;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9260E24(uint64_t a1)
{
  id *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD *);
  uint64_t v26;
  uint64_t v27;
  id *v28;
  _QWORD v29[3];
  _QWORD v30[3];
  uint64_t v31;

  v2 = (id *)(a1 + 16);
  swift_beginAccess();
  objc_msgSend(*(id *)(a1 + 16), sel_lock);
  v3 = (uint64_t *)(a1 + 48);
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 48);
  v5 = MEMORY[0x1E0DEE9D8];
  v31 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(v4 + 16);
  result = swift_bridgeObjectRetain();
  v28 = v2;
  if (v6)
  {
    v8 = 0;
    v9 = v4 + 32;
    while (v8 < *(_QWORD *)(v4 + 16))
    {
      sub_1A9261218(v9, (uint64_t)v30);
      v10 = MEMORY[0x1AF41420C](v30);
      swift_unknownObjectRelease();
      if (v10)
      {
        sub_1A9261254((uint64_t)v30, (uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1A929E77C(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v31;
        v12 = *(_QWORD *)(v31 + 16);
        v11 = *(_QWORD *)(v31 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1A929E77C(v11 > 1, v12 + 1, 1);
          v5 = v31;
        }
        *(_QWORD *)(v5 + 16) = v12 + 1;
        result = sub_1A9261254((uint64_t)v29, v5 + 24 * v12 + 32);
      }
      else
      {
        result = sub_1A926128C((uint64_t)v30);
      }
      ++v8;
      v9 += 24;
      if (v6 == v8)
      {
        v5 = v31;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *v3 = v5;
    swift_bridgeObjectRelease();
    v13 = *v3;
    v14 = *(_QWORD *)(*v3 + 16);
    v15 = MEMORY[0x1E0DEE9D8];
    if (v14)
    {
      v29[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1A929E7A8(0, v14, 0);
      v27 = v13;
      v16 = v13 + 32;
      v15 = v29[0];
      do
      {
        sub_1A9261218(v16, (uint64_t)v30);
        v18 = v30[1];
        v17 = v30[2];
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = v18;
        *(_QWORD *)(v19 + 24) = v17;
        swift_retain();
        sub_1A926128C((uint64_t)v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A929E7A8(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v29[0];
        }
        v21 = *(_QWORD *)(v15 + 16);
        v20 = *(_QWORD *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1A929E7A8(v20 > 1, v21 + 1, 1);
          v15 = v29[0];
        }
        *(_QWORD *)(v15 + 16) = v21 + 1;
        v22 = v15 + 16 * v21;
        *(_QWORD *)(v22 + 32) = sub_1A92613E0;
        *(_QWORD *)(v22 + 40) = v19;
        v16 += 24;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(*v28, sel_unlock, v27);
    v23 = *(_QWORD *)(v15 + 16);
    if (v23)
    {
      v24 = v15 + 40;
      do
      {
        v25 = *(void (**)(_QWORD *))(v24 - 8);
        v30[0] = a1;
        swift_retain();
        v25(v30);
        swift_release();
        v24 += 16;
        --v23;
      }
      while (v23);
    }
    swift_bridgeObjectRelease();
    sub_1A9066CE8(&qword_1EEABC318, v26, (uint64_t (*)(uint64_t))type metadata accessor for InterestStateMachine, (uint64_t)&protocol conformance descriptor for InterestStateMachine);
    sub_1A93F7950();
    sub_1A93F7A10();
    return swift_release();
  }
  return result;
}

uint64_t InterestStateMachine.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InterestStateMachine.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A92611B0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1A92611F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A93F7950();
  *a1 = result;
  return result;
}

uint64_t sub_1A9261218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectWeakCopyInit();
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = v4;
  swift_retain();
  return a2;
}

uint64_t sub_1A9261254(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_1A926128C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for InterestStateMachine()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterestStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterestStateMachine.__allocating_init(identifier:initialState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t assignWithCopy for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectWeakCopyAssign();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StateMachineChangeObserverAction(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *_s18PodcastsFoundation32StateMachineChangeObserverActionVMa_1()
{
  return &_s18PodcastsFoundation32StateMachineChangeObserverActionVN_0;
}

uint64_t sub_1A9261374(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC310);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A92613B4()
{
  uint64_t v0;

  return sub_1A9260E24(v0);
}

uint64_t sub_1A92613BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92613E0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1A9261404(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1A926140C(unint64_t a1)
{
  return sub_1A9261A40(a1);
}

uint64_t sub_1A9261418(unint64_t a1)
{
  return sub_1A9261674(a1);
}

uint64_t sub_1A9261424(unint64_t a1)
{
  return sub_1A926146C(a1, (void (*)(_QWORD))type metadata accessor for ServerPodcastEpisode);
}

uint64_t sub_1A9261430(unint64_t a1)
{
  return sub_1A926146C(a1, (void (*)(_QWORD))type metadata accessor for ServerChannel);
}

uint64_t sub_1A926143C(unint64_t a1)
{
  return sub_1A926146C(a1, (void (*)(_QWORD))type metadata accessor for ServerTranscript);
}

uint64_t sub_1A9261448(unint64_t a1)
{
  return sub_1A926146C(a1, (void (*)(_QWORD))type metadata accessor for ServerPodcast);
}

uint64_t sub_1A9261454(unint64_t a1)
{
  return sub_1A926146C(a1, (void (*)(_QWORD))type metadata accessor for ServerPodcastStation);
}

uint64_t sub_1A9261460(unint64_t a1)
{
  return sub_1A9261A40(a1);
}

uint64_t sub_1A926146C(unint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t j;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = a1;
  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1A93F8D84();
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1AF4129DC](i, v3);
        v6 = i + 1;
        if (__OFADD__(i, 1))
          break;
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v6 == v4)
          return v11;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v8 = j + 1;
        if (__OFADD__(j, 1))
          break;
        a2(0);
        v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v3 = v9;
        swift_unknownObjectRetain();
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v8 == v4)
          return v11;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    sub_1A93F8D84();
    swift_bridgeObjectRetain();
    v4 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1A9261650(unint64_t a1)
{
  return sub_1A9261A40(a1);
}

uint64_t sub_1A926165C(unint64_t a1)
{
  return sub_1A9261674(a1);
}

uint64_t sub_1A9261668(unint64_t a1)
{
  return sub_1A9261674(a1);
}

uint64_t sub_1A9261674(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1A93F8D84();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1AF4129DC](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        objc_opt_self();
        v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    sub_1A93F8D84();
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1A9261858(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1A93F8D84();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1AF4129DC](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        type metadata accessor for MTCategory();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for MTCategory();
        v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    sub_1A93F8D84();
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1A9261A34(unint64_t a1)
{
  return sub_1A9261A40(a1);
}

uint64_t sub_1A9261A40(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1A93F8D84();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1AF4129DC](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    sub_1A93F8D84();
    swift_bridgeObjectRetain();
    v2 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id SearchRequest.__allocating_init(term:contentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SearchRequest.init(term:contentTypes:)(a1, a2, a3);
}

id SearchRequest.init(term:contentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char **v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  char *v10;
  char v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  char *v37;
  objc_super v38;

  v5 = (char **)&v3[OBJC_IVAR___MTSearchRequest_contentTypes];
  *(_QWORD *)&v3[OBJC_IVAR___MTSearchRequest_contentTypes] = MEMORY[0x1E0DEE9D8];
  v6 = &v3[OBJC_IVAR___MTSearchRequest_limit];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v3[OBJC_IVAR___MTSearchRequest_term];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    v37 = v3;
    for (i = 0; i != v8; ++i)
    {
      switch(*(_QWORD *)(a3 + 8 * i + 32))
      {
        case 0:
          swift_beginAccess();
          v12 = *v5;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v12;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v12 = sub_1A911934C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
            *v5 = v12;
          }
          v15 = *((_QWORD *)v12 + 2);
          v14 = *((_QWORD *)v12 + 3);
          if (v15 >= v14 >> 1)
          {
            v12 = sub_1A911934C((char *)(v14 > 1), v15 + 1, 1, v12);
            *v5 = v12;
          }
          *((_QWORD *)v12 + 2) = v15 + 1;
          v12[v15 + 32] = 1;
          goto LABEL_5;
        case 1:
          swift_beginAccess();
          v16 = *v5;
          v17 = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v16;
          if ((v17 & 1) == 0)
          {
            v16 = sub_1A911934C(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
            *v5 = v16;
          }
          v19 = *((_QWORD *)v16 + 2);
          v18 = *((_QWORD *)v16 + 3);
          if (v19 >= v18 >> 1)
          {
            v16 = sub_1A911934C((char *)(v18 > 1), v19 + 1, 1, v16);
            *v5 = v16;
          }
          *((_QWORD *)v16 + 2) = v19 + 1;
          v16[v19 + 32] = 0;
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          v20 = *v5;
          v21 = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v20;
          if ((v21 & 1) == 0)
          {
            v20 = sub_1A911934C(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
            *v5 = v20;
          }
          v23 = *((_QWORD *)v20 + 2);
          v22 = *((_QWORD *)v20 + 3);
          if (v23 >= v22 >> 1)
          {
            v20 = sub_1A911934C((char *)(v22 > 1), v23 + 1, 1, v20);
            *v5 = v20;
          }
          *((_QWORD *)v20 + 2) = v23 + 1;
          v10 = &v20[v23];
          v11 = 3;
          goto LABEL_4;
        case 3:
          swift_beginAccess();
          v24 = *v5;
          v25 = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v24;
          if ((v25 & 1) == 0)
          {
            v24 = sub_1A911934C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
            *v5 = v24;
          }
          v27 = *((_QWORD *)v24 + 2);
          v26 = *((_QWORD *)v24 + 3);
          if (v27 >= v26 >> 1)
          {
            v24 = sub_1A911934C((char *)(v26 > 1), v27 + 1, 1, v24);
            *v5 = v24;
          }
          *((_QWORD *)v24 + 2) = v27 + 1;
          v10 = &v24[v27];
          v11 = 2;
          goto LABEL_4;
        case 4:
          swift_beginAccess();
          v28 = *v5;
          v29 = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v28;
          if ((v29 & 1) == 0)
          {
            v28 = sub_1A911934C(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
            *v5 = v28;
          }
          v31 = *((_QWORD *)v28 + 2);
          v30 = *((_QWORD *)v28 + 3);
          if (v31 >= v30 >> 1)
          {
            v28 = sub_1A911934C((char *)(v30 > 1), v31 + 1, 1, v28);
            *v5 = v28;
          }
          *((_QWORD *)v28 + 2) = v31 + 1;
          v10 = &v28[v31];
          v11 = 4;
          goto LABEL_4;
        case 5:
          swift_beginAccess();
          v32 = *v5;
          v33 = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v32;
          if ((v33 & 1) == 0)
          {
            v32 = sub_1A911934C(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
            *v5 = v32;
          }
          v35 = *((_QWORD *)v32 + 2);
          v34 = *((_QWORD *)v32 + 3);
          if (v35 >= v34 >> 1)
          {
            v32 = sub_1A911934C((char *)(v34 > 1), v35 + 1, 1, v32);
            *v5 = v32;
          }
          *((_QWORD *)v32 + 2) = v35 + 1;
          v10 = &v32[v35];
          v11 = 5;
LABEL_4:
          v10[32] = v11;
LABEL_5:
          swift_endAccess();
          break;
        default:
          continue;
      }
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v38.receiver = v3;
  v38.super_class = (Class)type metadata accessor for SearchRequest();
  return objc_msgSendSuper2(&v38, sel_init);
}

uint64_t type metadata accessor for SearchRequest()
{
  return objc_opt_self();
}

uint64_t sub_1A926214C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR___MTSearchRequest_limit;
  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1A926217C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;

  v42 = a1;
  v43 = a2;
  v3 = sub_1A93F7698();
  v44 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MediaRequest.Params();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v40 = v8;
  v41 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v12 = *(_QWORD *)&v2[OBJC_IVAR___MTSearchRequest_term];
  v13 = *(_QWORD *)&v2[OBJC_IVAR___MTSearchRequest_term + 8];
  v14 = (uint64_t *)&v2[OBJC_IVAR___MTSearchRequest_contentTypes];
  swift_beginAccess();
  v15 = *v14;
  v16 = *(_QWORD *)&v2[OBJC_IVAR___MTSearchRequest_limit];
  v17 = v2[OBJC_IVAR___MTSearchRequest_limit + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = v12;
  MediaRequest.Params.init(searchTerm:contentTypes:limit:)(v12, v13, v15, v16, v17, (uint64_t)v11);
  if (qword_1EEAB6EA0 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v3, (uint64_t)qword_1EEABA8C0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v5, v18, v3);
  v19 = v2;
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  v22 = v3;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc();
    v38 = v7;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v46[0] = v25;
    v37 = v22;
    *(_DWORD *)v24 = 136315138;
    swift_bridgeObjectRetain();
    v45 = sub_1A906436C(v39, v13, v46);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v20, v21, "Searching for term (%s)...", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v25, -1, -1);
    v26 = v24;
    v7 = v38;
    MEMORY[0x1AF41411C](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v3);
  }
  v27 = (uint64_t)&v19[OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController];
  swift_beginAccess();
  sub_1A905DC3C(v27, (uint64_t)v46);
  v28 = v47;
  v29 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  v30 = v41;
  sub_1A9114B88((uint64_t)v11, v41);
  v31 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v32 = swift_allocObject();
  v33 = v43;
  *(_QWORD *)(v32 + 16) = v42;
  *(_QWORD *)(v32 + 24) = v33;
  sub_1A917695C(v30, v32 + v31);
  v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, uint64_t))(v29 + 56);
  swift_retain();
  v34(v11, sub_1A9264324, v32, v28, v29);
  swift_release();
  sub_1A9114C30((uint64_t)v11);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
}

void sub_1A926254C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(_QWORD, _QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  objc_class *v36;
  char *v37;
  id v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _QWORD *v44;
  unint64_t v45;
  objc_class *v46;
  char *v47;
  id v48;
  _QWORD v49[2];
  void (*v50)(_QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  objc_super v54;

  v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F7698();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v49 - v21;
  if (a5)
  {
    v23 = a5;
    if (qword_1EEAB6EA0 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v16, (uint64_t)qword_1EEABA8C0);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, v24, v16);
    v25 = a5;
    v26 = a5;
    v27 = sub_1A93F7674();
    v28 = sub_1A93F879C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v49[1] = a7;
      v30 = (uint8_t *)v29;
      v31 = swift_slowAlloc();
      v50 = a6;
      v32 = v31;
      v52 = v31;
      *(_DWORD *)v30 = 136315138;
      v49[0] = v17;
      swift_getErrorValue();
      v33 = sub_1A93F927C();
      v51 = sub_1A906436C(v33, v34, &v52);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v27, v28, "Search resulted in error: %s", v30, 0xCu);
      swift_arrayDestroy();
      v35 = v32;
      a6 = v50;
      MEMORY[0x1AF41411C](v35, -1, -1);
      MEMORY[0x1AF41411C](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v49[0] + 8))(v22, v16);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    }
    v39 = a5;
    a6(0, a5);

  }
  else if (a3)
  {
    sub_1A9114B88(a8, (uint64_t)v15);
    v36 = (objc_class *)type metadata accessor for SearchResponse();
    v37 = (char *)objc_allocWithZone(v36);
    *(_QWORD *)&v37[OBJC_IVAR___MTSearchResponse_response] = a3;
    sub_1A9114B88((uint64_t)v15, (uint64_t)&v37[OBJC_IVAR___MTSearchResponse_params]);
    *(_QWORD *)&v37[OBJC_IVAR___MTSearchResponse_parsedObjectsCache] = sub_1A9115A1C(MEMORY[0x1E0DEE9D8]);
    v53.receiver = v37;
    v53.super_class = v36;
    swift_bridgeObjectRetain();
    v38 = objc_msgSendSuper2(&v53, sel_init);
    sub_1A9114C30((uint64_t)v15);
    a6(v38, 0);

  }
  else
  {
    if (qword_1EEAB6EA0 != -1)
      swift_once();
    v40 = __swift_project_value_buffer(v16, (uint64_t)qword_1EEABA8C0);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v40, v16);
    v41 = sub_1A93F7674();
    v42 = sub_1A93F87B4();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1A904E000, v41, v42, "Search returned no results", v43, 2u);
      MEMORY[0x1AF41411C](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v45 = sub_1A91129D8(MEMORY[0x1E0DEE9D8]);
    sub_1A9114B88(a8, (uint64_t)v15);
    v46 = (objc_class *)type metadata accessor for SearchResponse();
    v47 = (char *)objc_allocWithZone(v46);
    *(_QWORD *)&v47[OBJC_IVAR___MTSearchResponse_response] = v45;
    sub_1A9114B88((uint64_t)v15, (uint64_t)&v47[OBJC_IVAR___MTSearchResponse_params]);
    *(_QWORD *)&v47[OBJC_IVAR___MTSearchResponse_parsedObjectsCache] = sub_1A9115A1C(v44);
    v54.receiver = v47;
    v54.super_class = v46;
    v48 = objc_msgSendSuper2(&v54, sel_init);
    sub_1A9114C30((uint64_t)v15);
    a6(v48, 0);

  }
}

id SearchRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SearchRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A9262B30()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id SearchRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for SearchRequest);
}

uint64_t sub_1A9262BA8(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v5 = OBJC_IVAR___MTSearchResponse_params;
  v6 = type metadata accessor for MediaRequest.Params();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(v2 + v5 + *(int *)(v6 + 112));
  if (*(_QWORD *)(v7 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_1A9263288(qword_1A9416A18[*(char *)(v7 + a1 + 32)]);
  v2 = result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_10:
    v9 = MEMORY[0x1AF4129DC](a2, v2);
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v9 = *(_QWORD *)(result + 8 * a2 + 32);
    swift_unknownObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9262CC0(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = result;
  v3 = v1 + OBJC_IVAR___MTSearchResponse_params;
  result = type metadata accessor for MediaRequest.Params();
  v4 = *(_QWORD *)(v3 + *(int *)(result + 112));
  if (*(_QWORD *)(v4 + 16) <= v2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v5 = sub_1A9263CC0(qword_1A9416A18[*(char *)(v4 + v2 + 32)]);
  v6 = v5;
  if (v5)
  {
    v7 = _s18PodcastsFoundation26MediaRequestResponseParserC11extractDataySaySDys11AnyHashableVypGGSgAGFZ_0(v5);
    swift_bridgeObjectRelease();
    if (v7)
    {
      v6 = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1A9262DA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___MTSearchResponse_params;
  return *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 112)) + 16);
}

uint64_t sub_1A9262E10(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t *v11;
  objc_super v12;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v3 = v1 + OBJC_IVAR___MTSearchResponse_params;
    result = type metadata accessor for MediaRequest.Params();
    v4 = *(_QWORD *)(v3 + *(int *)(result + 112));
    if (*(_QWORD *)(v4 + 16) > v2)
    {
      v5 = qword_1A9416A18[*(char *)(v4 + v2 + 32)];
      v6 = sub_1A9262F74(v5);
      v8 = v7;
      v9 = (objc_class *)type metadata accessor for SearchSeeAllSection();
      v10 = (char *)objc_allocWithZone(v9);
      *(_QWORD *)&v10[OBJC_IVAR___MTSearchSeeAllSection_contentType] = v5;
      v11 = (uint64_t *)&v10[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
      *v11 = v6;
      v11[1] = v8;
      v12.receiver = v10;
      v12.super_class = v9;
      return (uint64_t)objc_msgSendSuper2(&v12, sel_init);
    }
  }
  __break(1u);
  return result;
}

id SearchSeeAllSection.__allocating_init(contentType:nextPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR___MTSearchSeeAllSection_contentType] = a1;
  v8 = &v7[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1A9262F74(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t PageySSSgSDys11AnyHashableVypGFZ_0;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  unint64_t v32;

  v3 = sub_1A93F7698();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = 0;
  v32 = 0;
  v7 = sub_1A9263CC0(a1);
  if (v7)
  {
    PageySSSgSDys11AnyHashableVypGFZ_0 = _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    v31 = PageySSSgSDys11AnyHashableVypGFZ_0;
    v32 = v10;
  }
  if (qword_1EEAB6EA0 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v3, (uint64_t)qword_1EEABA8C0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
  v13 = v31;
  v12 = v32;
  swift_bridgeObjectRetain_n();
  v14 = v1;
  v15 = sub_1A93F7674();
  v16 = sub_1A93F87B4();
  if (os_log_type_enabled(v15, v16))
  {
    v26 = v13;
    v28 = v4;
    v17 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v30[0] = v27;
    *(_DWORD *)v17 = 136315394;
    v18 = &v14[OBJC_IVAR___MTSearchResponse_params];
    v19 = (uint64_t *)&v18[*(int *)(type metadata accessor for MediaRequest.Params() + 108)];
    if (v19[1])
    {
      v20 = *v19;
      v21 = v19[1];
    }
    else
    {
      v20 = 0;
      v21 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v29 = sub_1A906436C(v20, v21, v30);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    if (v12)
      v22 = v26;
    else
      v22 = 0;
    if (v12)
      v23 = v12;
    else
      v23 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v29 = sub_1A906436C(v22, v23, v30);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v15, v16, "Parsing nextPage for term (%s) returned %s", (uint8_t *)v17, 0x16u);
    v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    MEMORY[0x1AF41411C](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess();
  return v31;
}

uint64_t sub_1A9263288(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[3];
  _BYTE v69[24];
  unint64_t v70;

  v2 = v1;
  v4 = sub_1A93F7698();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)&v1[OBJC_IVAR___MTSearchResponse_parsedObjectsCache];
  swift_beginAccess();
  v9 = *v8;
  if (!*(_QWORD *)(*v8 + 16) || (v10 = sub_1A912E790(a1), (v11 & 1) == 0))
  {
    v14 = MEMORY[0x1E0DEE9D8];
    v70 = MEMORY[0x1E0DEE9D8];
    v15 = sub_1A9263CC0(a1);
    if (v15)
    {
      v16 = v15;
      type metadata accessor for MediaRequestResponseParser();
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(v16);
      if (v17)
        swift_bridgeObjectRelease();
      sub_1A9211DC4(v16, (uint64_t)v69);
      if ((v69[1] & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        LOBYTE(v68[0]) = v69[0];
        sub_1A9211F00(v16, (uint64_t)v68);
        v18 = v19;
        v21 = v20;
        swift_bridgeObjectRelease();

      }
      v70 = v18;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v68[0] = *v8;
      *v8 = 0x8000000000000000;
      sub_1A930EBFC(v18, a1, isUniquelyReferenced_nonNull_native);
      *v8 = v68[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    if (qword_1EEAB6EA0 != -1)
      swift_once();
    v23 = __swift_project_value_buffer(v4, (uint64_t)qword_1EEABA8C0);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
    v24 = v70;
    v25 = v2;
    swift_bridgeObjectRetain_n();
    v26 = v5;
    v27 = (char *)v25;
    v28 = sub_1A93F7674();
    v29 = sub_1A93F87B4();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v65 = v29;
      v66 = v26;
      v30 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v68[0] = v64;
      *(_DWORD *)v30 = 136315650;
      v31 = &v27[OBJC_IVAR___MTSearchResponse_params];
      v32 = (uint64_t *)&v31[*(int *)(type metadata accessor for MediaRequest.Params() + 108)];
      if (v32[1])
      {
        v33 = *v32;
        v34 = v32[1];
      }
      else
      {
        v33 = 0;
        v34 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v67 = sub_1A906436C(v33, v34, v68);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2048;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v35 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v14 = MEMORY[0x1E0DEE9D8];
      v36 = v66;
      swift_bridgeObjectRelease();
      v67 = v35;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2080;
      v37 = 0xE700000000000000;
      v38 = 0x74736163646F70;
      switch(a1)
      {
        case 0:
          goto LABEL_34;
        case 1:
          v37 = 0xEE0065646F736970;
          v38 = 0x4574736163646F70;
          goto LABEL_34;
        case 2:
          v37 = 0xEE006C656E6E6168;
          v38 = 0x4374736163646F70;
          goto LABEL_34;
        case 3:
          v37 = 0xEE006E6F69746174;
          v38 = 0x5374736163646F70;
          goto LABEL_34;
        case 4:
          v37 = 0xEB00000000737470;
          v41 = 0x63736E617274;
          goto LABEL_33;
        case 5:
          v37 = 0xEA00000000007365;
          v41 = 0x6F6765746163;
LABEL_33:
          v38 = v41 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
LABEL_34:
          v67 = sub_1A906436C(v38, v37, v68);
          sub_1A93F8AA8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v28, (os_log_type_t)v65, "Parsing results for term (%s) created %ld %s objects.", (uint8_t *)v30, 0x20u);
          v42 = v64;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v42, -1, -1);
          MEMORY[0x1AF41411C](v30, -1, -1);

          (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
          goto LABEL_35;
        default:
          v67 = a1;
LABEL_104:
          result = sub_1A93F921C();
          __break(1u);
          return result;
      }
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
LABEL_35:
    switch(a1)
    {
      case 0:
        swift_beginAccess();
        v43 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerPodcast);
        swift_bridgeObjectRelease();
        if (v43)
          v44 = v43;
        else
          v44 = v14;
        if (v44 >> 62)
          goto LABEL_99;
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (swift_dynamicCastMetatype())
          goto LABEL_91;
        v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v45)
          goto LABEL_91;
        v46 = (_QWORD *)(v13 + 32);
        while (*v46)
        {
          ++v46;
          if (!--v45)
            goto LABEL_91;
        }
        goto LABEL_98;
      case 1:
        swift_beginAccess();
        v56 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerPodcastEpisode);
        swift_bridgeObjectRelease();
        if (v56)
          v44 = v56;
        else
          v44 = v14;
        if (v44 >> 62)
          goto LABEL_99;
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (swift_dynamicCastMetatype())
          goto LABEL_91;
        v57 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v57)
          goto LABEL_91;
        v58 = (_QWORD *)(v13 + 32);
        while (*v58)
        {
          ++v58;
          if (!--v57)
            goto LABEL_91;
        }
        goto LABEL_98;
      case 2:
        swift_beginAccess();
        v50 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerChannel);
        swift_bridgeObjectRelease();
        if (v50)
          v44 = v50;
        else
          v44 = v14;
        if (v44 >> 62)
          goto LABEL_99;
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (swift_dynamicCastMetatype())
          goto LABEL_91;
        v51 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v51)
          goto LABEL_91;
        v52 = (_QWORD *)(v13 + 32);
        while (*v52)
        {
          ++v52;
          if (!--v51)
            goto LABEL_91;
        }
        goto LABEL_98;
      case 3:
        swift_beginAccess();
        v53 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerPodcastStation);
        swift_bridgeObjectRelease();
        if (v53)
          v44 = v53;
        else
          v44 = v14;
        if (v44 >> 62)
          goto LABEL_99;
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (swift_dynamicCastMetatype())
          goto LABEL_91;
        v54 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v54)
          goto LABEL_91;
        v55 = (_QWORD *)(v13 + 32);
        while (*v55)
        {
          ++v55;
          if (!--v54)
            goto LABEL_91;
        }
        goto LABEL_98;
      case 4:
        swift_beginAccess();
        v47 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerTranscript);
        swift_bridgeObjectRelease();
        if (v47)
          v44 = v47;
        else
          v44 = v14;
        if (v44 >> 62)
          goto LABEL_99;
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (swift_dynamicCastMetatype())
          goto LABEL_91;
        v48 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v48)
          goto LABEL_91;
        v49 = (_QWORD *)(v13 + 32);
        break;
      case 5:
        swift_beginAccess();
        v59 = sub_1A926146C(v70, (void (*)(_QWORD))type metadata accessor for ServerCategory);
        swift_bridgeObjectRelease();
        if (v59)
          v44 = v59;
        else
          v44 = v14;
        if (v44 >> 62)
        {
LABEL_99:
          swift_bridgeObjectRetain();
          v12 = sub_1A93F8E20();
          swift_bridgeObjectRelease_n();
          return v12;
        }
        v13 = v44 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        sub_1A93F91E0();
        if (!swift_dynamicCastMetatype())
        {
          v61 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v61)
          {
            v62 = (_QWORD *)(v13 + 32);
            do
            {
              if (!*v62)
                goto LABEL_98;
              ++v62;
              --v61;
            }
            while (v61);
          }
        }
        goto LABEL_91;
      default:
        v68[0] = a1;
        goto LABEL_104;
    }
    while (*v49)
    {
      ++v49;
      if (!--v48)
      {
LABEL_91:
        swift_bridgeObjectRelease();
        return v44;
      }
    }
    goto LABEL_98;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v63 = sub_1A93F8E20();
    swift_bridgeObjectRelease();
    return v63;
  }
  v13 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n();
  sub_1A93F91E0();
  if (!swift_dynamicCastMetatype())
  {
    v39 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39)
    {
      v40 = (_QWORD *)(v13 + 32);
      while (*v40)
      {
        ++v40;
        if (!--v39)
          goto LABEL_5;
      }
LABEL_98:
      swift_bridgeObjectRelease();
      return v13 | 1;
    }
  }
LABEL_5:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A9263CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  sub_1A93F8C1C();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___MTSearchResponse_response);
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v4 = sub_1A90A597C((uint64_t)v12);
    if ((v5 & 1) != 0)
    {
      sub_1A906443C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v13);
    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_1A90A5908((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_21:
    sub_1A90A593C((uint64_t)&v13);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v6 = 0xD000000000000010;
  switch(a1)
  {
    case 0:
      v6 = 0x7374736163646F70;
      goto LABEL_14;
    case 1:
    case 2:
    case 3:
      goto LABEL_14;
    case 4:
      v7 = 0x63736E617274;
      goto LABEL_13;
    case 5:
      v7 = 0x6F6765746163;
LABEL_13:
      v6 = v7 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
LABEL_14:
      v11 = v6;
      sub_1A93F8C1C();
      if (MEMORY[0x73746C75736582] && (v8 = sub_1A90A597C((uint64_t)v12), (v9 & 1) != 0))
      {
        sub_1A906443C(MEMORY[0x73746C757365AA] + 32 * v8, (uint64_t)&v13);
      }
      else
      {
        v13 = 0u;
        v14 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1A90A5908((uint64_t)v12);
      if (!*((_QWORD *)&v14 + 1))
        goto LABEL_21;
      if ((swift_dynamicCast() & 1) == 0)
        return 0;
      result = v11;
      break;
    default:
      v12[0] = a1;
      result = sub_1A93F921C();
      __break(1u);
      return result;
  }
  return result;
}

void SearchResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SearchResponse.__deallocating_deinit()
{
  return sub_1A913E33C(0, type metadata accessor for SearchResponse);
}

uint64_t SearchSeeAllSection.contentType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___MTSearchSeeAllSection_contentType);
}

uint64_t SearchSeeAllSection.nextPage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTSearchSeeAllSection_nextPage);
  swift_bridgeObjectRetain();
  return v1;
}

id SearchSeeAllSection.init(contentType:nextPage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_super v6;

  *(_QWORD *)&v3[OBJC_IVAR___MTSearchSeeAllSection_contentType] = a1;
  v4 = &v3[OBJC_IVAR___MTSearchSeeAllSection_nextPage];
  *(_QWORD *)v4 = a2;
  *((_QWORD *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for SearchSeeAllSection();
  return objc_msgSendSuper2(&v6, sel_init);
}

void SearchSeeAllSection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SearchSeeAllSection.__deallocating_deinit(uint64_t a1)
{
  return sub_1A913E33C(a1, type metadata accessor for SearchSeeAllSection);
}

uint64_t sub_1A92641BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MediaRequest.Params();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  sub_1A9114BD0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 96);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A9264324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaRequest.Params() - 8) + 80);
  sub_1A926254C(a1, a2, a3, a4, a5, *(void (**)(_QWORD, _QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), v5 + ((v11 + 32) & ~v11));
}

uint64_t type metadata accessor for SearchSeeAllSection()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SearchResponse()
{
  uint64_t result;

  result = qword_1EEABC3A8;
  if (!qword_1EEABC3A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SearchRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchRequest.__allocating_init(term:contentTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SearchRequest.setLimit(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SearchRequest.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1A926443C()
{
  return type metadata accessor for SearchResponse();
}

uint64_t sub_1A9264444()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SearchResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchResponse.item(in:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SearchResponse.numberOfItems(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SearchResponse.numberOfSections()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SearchResponse.section(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SearchResponse.items(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t method lookup function for SearchSeeAllSection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchSeeAllSection.__allocating_init(contentType:nextPage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A926456C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t AssetProcessingStep.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A92645E4(&qword_1ED2ABE88, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t)qword_1ED2ABF70, a1);
}

uint64_t AssetProcessingStep.log.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A92645E4(&qword_1ED2AD108, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)qword_1ED2AD0F0, a1);
}

uint64_t sub_1A92645E4@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static CaseIterable<>.cases(excluding:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1A93F8C88();
  swift_getAssociatedConformanceWitness();
  sub_1A93F8688();
  v1 = sub_1A93F83D0();
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF38], v1);
  return sub_1A93F861C();
}

void sub_1A9264774(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t active;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  char *v17;
  _QWORD v18[4];

  v18[2] = a1;
  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = type metadata accessor for ProducerInner.State(0, v2, v3, v4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v18[3] = v2;
  v18[1] = v4;
  active = type metadata accessor for ProducerInner.ActiveState(0, v2, v3, v4);
  v13 = *(_QWORD *)(active - 8);
  MEMORY[0x1E0C80A78](active);
  v15 = (char *)v18 - v14;
  v16 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v16);
  v17 = (char *)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v17, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    os_unfair_lock_unlock(v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, active);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, active);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v17, v8, v5);
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    sub_1A93F7890();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, active);
  }
}

void sub_1A926496C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t active;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  os_unfair_lock_s *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = sub_1A93F8A90();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - v4;
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 96);
  v9 = type metadata accessor for ProducerInner.State(0, v7, v2, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  active = type metadata accessor for ProducerInner.ActiveState(0, v7, v2, v8);
  v17 = *(_QWORD *)(active - 8);
  MEMORY[0x1E0C80A78](active);
  v19 = (char *)&v28 - v18;
  v20 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v20);
  v21 = (char *)v0 + *(_QWORD *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v21, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    os_unfair_lock_unlock(v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, active);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v12, 1, 1, active);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v21, v12, v9);
    swift_endAccess();
    os_unfair_lock_unlock(v20);
    v23 = v30;
    v22 = v31;
    v24 = v32;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, &v19[*(int *)(active + 44)], v32);
    v25 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v23, 1, v2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, active);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
    }
    else
    {
      v26 = v29;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v2);
      v27 = *(void (**)(char *))&v19[*(int *)(active + 56)];
      swift_retain();
      v27(v26);
      swift_release();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v2);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, active);
    }
  }
}

uint64_t **sub_1A9264C68()
{
  uint64_t **v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  v2 = (char *)v0 + (*v0)[14];
  v3 = type metadata accessor for ProducerInner.State(0, v1[10], v1[11], v1[12]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1A9264CC8()
{
  sub_1A9264C68();
  return swift_deallocClassInstance();
}

void sub_1A9264CE8()
{
  sub_1A926496C();
}

char *sub_1A9264D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t active;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a6;
  v34 = a7;
  v31 = a4;
  v32 = a5;
  v29 = a2;
  v30 = a3;
  v28 = a1;
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(*(_QWORD *)v7 + 88);
  v10 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  v13 = *(_QWORD *)(v8 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v8 + 96);
  v19 = type metadata accessor for ProducerInner.State(0, v13, v9, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v27 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 16) = 0;
  *((_QWORD *)v7 + 2) = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v28, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v12, 1, 1, v9);
  v24 = sub_1A93F78D8();
  sub_1A90A6A6C((uint64_t)v17, (uint64_t)v12, v29, v30, v31, v32, v33, v34, (uint64_t)v22, v24, v13, v9, v18);
  active = type metadata accessor for ProducerInner.ActiveState(0, v13, v9, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 56))(v22, 0, 1, active);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v7[*(_QWORD *)(*(_QWORD *)v7 + 112)], v22, v19);
  return v7;
}

uint64_t dispatch thunk of PFProducer.makeContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PFProducer.setupContext(_:eventHandler:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of PFProducer.invalidateContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *sub_1A9264EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  const void *v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  v11 = *(unsigned int *)(v7 + 84);
  if (v10 <= v11)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = v10;
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  v13 = *(_DWORD *)(v8 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  if (v9)
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = v15 + 7;
  v17 = ((((((((v15 + 7 + (v14 & ~(unint64_t)*(_DWORD *)(v8 + 80))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v18 = v13 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v18 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v17 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v18 | 7) + 16) & ~(unint64_t)(v18 | 7)));
LABEL_37:
    swift_retain();
    return a1;
  }
  v22 = ~v13;
  v36 = v22;
  if ((_DWORD)v11 == v12)
  {
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, v11, v6))
    {
LABEL_32:
      v35 = (const void *)(((unint64_t)a2 + v14) & v36);
      goto LABEL_33;
    }
  }
  else if (v10 == v12)
  {
    v35 = (const void *)(((unint64_t)a2 + v14) & v22);
    if (v9 < 2 || (*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)a2 + v14) & v22) < 2)
    {
LABEL_33:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v24 = (void *)(((unint64_t)a1 + v14) & v36);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v35, 1, v5))
      {
        memcpy(v24, v35, v15);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v24, v35, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v24, 0, 1, v5);
      }
      v25 = (_QWORD *)(((unint64_t)v24 + v16) & 0xFFFFFFFFFFFFFFF8);
      v26 = (_QWORD *)(((unint64_t)v35 + v16) & 0xFFFFFFFFFFFFFFF8);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
      v32 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      *(_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      swift_retain();
      goto LABEL_37;
    }
  }
  else
  {
    v23 = *(_QWORD *)((v16 + (((unint64_t)a2 + v14) & v22)) & 0xFFFFFFFFFFFFF8);
    if (v23 >= 0xFFFFFFFF)
      LODWORD(v23) = -1;
    if ((_DWORD)v23 == -1)
      goto LABEL_32;
  }
  memcpy(a1, a2, v17);
  return a1;
}

void *sub_1A9265184(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  void *v21;
  int v22;
  void *v23;
  unint64_t v24;
  size_t v25;
  unsigned int v26;
  const void *v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const void *v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  size_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t (*v48)(unint64_t, uint64_t, uint64_t);
  int v49;
  int v50;
  size_t v51;
  size_t v52;
  size_t v53;
  size_t v54;
  size_t v55;
  size_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  const void *v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  size_t v72;
  void *__src;

  v4 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (void *)*(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = (_DWORD)v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v5 + 64);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = ~v13;
  v15 = v12 + v13;
  v16 = (v12 + v13) & ~v13;
  v17 = *(_QWORD *)(v7 + 64);
  v72 = v17;
  __src = a2;
  v70 = *(_QWORD *)(a3 + 24);
  if ((_DWORD)v6 == v11)
  {
    v69 = (v12 + v13) & ~v13;
    v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    v19 = *(_DWORD *)(v7 + 84);
    v8 = a2;
    v20 = v18(a1, v6, v4);
    v21 = v8;
    LODWORD(v8) = v19;
    v22 = v18(v21, v6, v4);
    if (!v20)
    {
      v23 = a1;
      if (!v22)
      {
LABEL_31:
        v29 = (const void *)(((unint64_t)__src + v15) & v14);
        goto LABEL_52;
      }
      goto LABEL_55;
    }
    goto LABEL_37;
  }
  v24 = ((unint64_t)a1 + v15) & v14;
  if (v9 != v11)
  {
    v28 = 7;
    if (!(_DWORD)v8)
      v28 = 8;
    if (*(_QWORD *)((v28 + v17 + v24) & 0xFFFFFFFFFFFFF8) < 0xFFFFFFFFuLL)
      goto LABEL_17;
LABEL_23:
    v29 = (const void *)(((unint64_t)a2 + v15) & v14);
    if (v9 == v11)
    {
      if (v8 < 2)
      {
        v23 = a1;
        goto LABEL_52;
      }
      v69 = v16;
      v23 = a1;
      if ((*(unsigned int (**)(unint64_t, void *, uint64_t))(v7 + 48))(((unint64_t)a2 + v15) & v14, v8, v70) < 2)
      {
LABEL_52:
        (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v23, __src, v4);
        v48 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
        v49 = v48(((unint64_t)v23 + v15) & v14, 1, v70);
        v50 = v48((unint64_t)v29, 1, v70);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v23 + v15) & v14, v29, v70);
            (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v23 + v15) & v14, 0, 1, v70);
            v51 = v72;
LABEL_67:
            if ((_DWORD)v8)
              v55 = v51;
            else
              v55 = v51 + 1;
            v56 = v55 + 7;
            v57 = (_QWORD *)((v56 + (((unint64_t)v23 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
            v58 = (_QWORD *)(((unint64_t)v29 + v56) & 0xFFFFFFFFFFFFFFF8);
            v59 = v58[1];
            *v57 = *v58;
            v57[1] = v59;
            swift_retain();
            swift_release();
            v60 = (_QWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
            v61 = (_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
            v62 = v61[1];
            *v60 = *v61;
            v60[1] = v62;
            swift_retain();
            swift_release();
            v63 = (_QWORD *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
            v64 = (_QWORD *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
            v65 = v64[1];
            *v63 = *v64;
            v63[1] = v65;
            swift_retain();
            swift_release();
            *(_QWORD *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFF8);
            return v23;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 24))(((unint64_t)v23 + v15) & v14, v29, v70);
            v51 = v72;
            goto LABEL_67;
          }
          (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v23 + v15) & v14, v70);
        }
        v51 = v72;
        if ((_DWORD)v8)
          v54 = v72;
        else
          v54 = v72 + 1;
        memcpy((void *)(((unint64_t)v23 + v15) & v14), v29, v54);
        goto LABEL_67;
      }
    }
    else
    {
      v69 = v16;
      v30 = 7;
      if (!(_DWORD)v8)
        v30 = 8;
      v31 = *(_QWORD *)(((unint64_t)v29 + v30 + v17) & 0xFFFFFFFFFFFFF8);
      if (v31 >= 0xFFFFFFFF)
        LODWORD(v31) = -1;
      v23 = a1;
      if ((_DWORD)v31 == -1)
        goto LABEL_31;
    }
LABEL_55:
    (*(void (**)(void *, uint64_t))(v5 + 8))(v23, v4);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)v23 + v15) & v14, 1, v70))(*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v23 + v15) & v14, v70);
    v52 = v72;
    if (!(_DWORD)v8)
      v52 = v72 + 1;
    v53 = v52 + 7;
    swift_release();
    swift_release();
    swift_release();
    v36 = ((((((((v53 + v69) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v37 = v23;
    v34 = __src;
LABEL_60:
    memcpy(v37, v34, v36);
    return v23;
  }
  if (v8 < 2)
    goto LABEL_23;
  v25 = *(_QWORD *)(v7 + 64);
  v26 = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v7 + 48))(v24, v8, v3);
  a2 = __src;
  v17 = v25;
  if (v26 < 2)
    goto LABEL_23;
LABEL_17:
  v27 = (const void *)(((unint64_t)a2 + v15) & v14);
  if (v9 == v11)
  {
    if (v8 >= 2)
    {
      v69 = v16;
      v67 = v8;
      v8 = a2;
      v68 = (*(uint64_t (**)(unint64_t, const void *, uint64_t))(v7 + 48))(((unint64_t)a2 + v15) & v14, v67, v70);
      v34 = v8;
      LODWORD(v8) = (_DWORD)v67;
      v23 = a1;
      if (v68 >= 2)
        goto LABEL_38;
    }
    else
    {
      v23 = a1;
    }
    goto LABEL_42;
  }
  v69 = v16;
  v32 = 7;
  if (!(_DWORD)v8)
    v32 = 8;
  v33 = *(_QWORD *)(((unint64_t)v27 + v32 + v17) & 0xFFFFFFFFFFFFF8);
  if (v33 >= 0xFFFFFFFF)
    LODWORD(v33) = -1;
  v22 = v33 + 1;
LABEL_37:
  v23 = a1;
  v34 = __src;
  if (v22)
  {
LABEL_38:
    v35 = 7;
    if (!(_DWORD)v8)
      v35 = 8;
    v36 = ((((((((v35 + v72 + v69) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v37 = v23;
    goto LABEL_60;
  }
  v27 = (const void *)(((unint64_t)__src + v15) & v14);
LABEL_42:
  (*(void (**)(void *))(v5 + 16))(v23);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v27, 1, v70))
  {
    if ((_DWORD)v8)
      v38 = v72;
    else
      v38 = v72 + 1;
    memcpy((void *)(((unint64_t)v23 + v15) & v14), v27, v38);
  }
  else
  {
    (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v23 + v15) & v14, v27, v70);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v23 + v15) & v14, 0, 1, v70);
    if ((_DWORD)v8)
      v38 = v72;
    else
      v38 = v72 + 1;
  }
  v39 = (_QWORD *)((v38 + 7 + (((unint64_t)v23 + v15) & v14)) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v27 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = (_QWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *(_QWORD *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  return v23;
}

void *sub_1A9265760(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  size_t v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  size_t v29;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = v9 - 1;
  if (!(_DWORD)v9)
    v10 = 0;
  if (v10 <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + v12;
  v29 = *(_QWORD *)(v8 + 64);
  if (v7 == v11)
  {
    if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2))
    {
LABEL_23:
      v15 = (const void *)(((unint64_t)a2 + v14) & v13);
LABEL_24:
      v20 = a1;
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v4))
      {
        if ((_DWORD)v9)
          v21 = v29;
        else
          v21 = v29 + 1;
        memcpy((void *)(((unint64_t)a1 + v14) & v13), v15, v21);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 32))(((unint64_t)a1 + v14) & v13, v15, v4);
        (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v14) & v13, 0, 1, v4);
        if ((_DWORD)v9)
          v21 = v29;
        else
          v21 = v29 + 1;
      }
      v22 = (_OWORD *)((v21 + 7 + (((unint64_t)a1 + v14) & v13)) & 0xFFFFFFFFFFFFFFF8);
      v23 = (_OWORD *)(((unint64_t)v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v22 = *v23;
      v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
      v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v25;
      v26 = (_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v27;
      *(_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFF8);
      return v20;
    }
  }
  else
  {
    v15 = (const void *)(((unint64_t)a2 + v14) & v13);
    if (v10 == v11)
    {
      if (v9 < 2
        || (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)a2 + v14) & v13, v9, v4) < 2)
      {
        goto LABEL_24;
      }
    }
    else
    {
      v16 = 7;
      if (!(_DWORD)v9)
        v16 = 8;
      v17 = *(_QWORD *)(((unint64_t)v15 + v16 + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFF8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      if ((_DWORD)v17 == -1)
        goto LABEL_23;
    }
  }
  v18 = v14 & ~v12;
  v19 = 7;
  if (!(_DWORD)v9)
    v19 = 8;
  v20 = a1;
  memcpy(a1, a2, ((((((((v19 + v29 + v18) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v20;
}

uint64_t sub_1A92659A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  BOOL v22;
  uint64_t result;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (a2)
  {
    v12 = *(unsigned __int8 *)(v7 + 80);
    v13 = *(_QWORD *)(v5 + 64) + v12;
    v14 = v11 + 7;
    if (v10 - 1 < a2)
    {
      v15 = a2 - v10 + 2;
      if (((((((((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 8) & 0xFFFFFFF8) != 0)
        v15 = 2;
      if (v15 >= 0x10000)
        v16 = 4;
      else
        v16 = 2;
      if (v15 < 0x100)
        v16 = 1;
      if (v15 >= 2)
        v17 = v16;
      else
        v17 = 0;
      __asm { BR              X6 }
    }
    if (v6 == v10)
    {
      v18 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
      goto LABEL_33;
    }
    v19 = (v13 + a1) & ~v12;
    if (v9 != v10)
    {
      v21 = *(_QWORD *)((v14 + v19) & 0xFFFFFFFFFFFFF8);
      if (v21 >= 0xFFFFFFFF)
        LODWORD(v21) = -1;
      v18 = v21 + 1;
LABEL_33:
      v22 = v18 != 0;
      result = v18 - 1;
      if ((_DWORD)result != 0 && v22)
        return result;
      return 0;
    }
    if (v8 >= 2)
    {
      v20 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
      if (v20 >= 2)
      {
        v18 = v20 - 1;
        goto LABEL_33;
      }
    }
  }
  return 0;
}

void sub_1A9265B4C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = v11 - 1;
  v13 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v13;
  if (v12 < a3)
  {
    v14 = a3 - v11 + 2;
    if (((((((((((*(_DWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))
               + (_DWORD)v13
               + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v12 < a2)
  {
    v16 = a2 - v11;
    if (((((((((((*(_DWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))
               + (_DWORD)v13
               + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      bzero(a1, ((((((((((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ v13+ 7) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_1A9265C8C(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int *v21;
  uint64_t v22;
  unsigned int v23;
  void (*v24)(_DWORD *, uint64_t, uint64_t, uint64_t);
  _DWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  *((_BYTE *)v21 + v22) = 0;
  if (a2)
  {
    if (a2 + 1 > v14)
    {
      if (((((((((v20 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        v23 = a2 - v14;
        bzero(v21, ((((((((v20 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 8);
        *v21 = v23;
      }
      return;
    }
    if (a2 == -1)
      return;
    if ((_DWORD)v13 == v14)
    {
      v24 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v25 = v21;
      v26 = a2 + 1;
      a3 = v13;
      a4 = a5;
LABEL_10:
      v24(v25, v26, a3, a4);
      return;
    }
    v25 = (_DWORD *)(((unint64_t)v21 + v19) & a1);
    if (v17 == v14)
    {
      v26 = a2 + 2;
      v24 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      goto LABEL_10;
    }
    v27 = (_QWORD *)(((unint64_t)v25 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (((a2 + 1) & 0x80000000) != 0)
    {
      v28 = a2 - 0x7FFFFFFF;
      v27[1] = 0;
    }
    else
    {
      v28 = a2;
    }
    *v27 = v28;
  }
}

uint64_t sub_1A9265D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = v6 - 1;
  if (!v6)
    v7 = 0;
  if (v7 <= v4)
    v8 = *(_DWORD *)(v3 + 84);
  else
    v8 = v7;
  if (v8 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  if (v4 == v8)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 48))(a1, *(unsigned int *)(v3 + 84), v2);
  v10 = (*(_QWORD *)(v3 + 64) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (v7 == v8)
  {
    if (v6 >= 2)
    {
      v13 = (*(uint64_t (**)(unint64_t))(v5 + 48))(v10);
      if (v13 >= 2)
        return v13 - 1;
      else
        return 0;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 64);
    if (!v6)
      ++v11;
    v12 = *(_QWORD *)((v11 + v10 + 7) & 0xFFFFFFFFFFFFF8);
    if (v12 >= 0xFFFFFFFF)
      LODWORD(v12) = -1;
    return (v12 + 1);
  }
}

void sub_1A9265E6C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(_DWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v18;

  v3 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + v12;
  v15 = *(_QWORD *)(v8 + 64);
  if (!(_DWORD)v9)
    ++v15;
  if (v11 < a2)
  {
    if ((((((((((v14 & v13) + (_DWORD)v15 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v16 = ~v11 + a2;
      bzero(a1, (((((((((v14 & v13) + (_DWORD)v15 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)+ 23) & 0xFFFFFFF8)+ 8);
      *v3 = v16;
    }
    return;
  }
  if (!(_DWORD)a2)
    return;
  if (v7 == v11)
  {
    v17 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v9 = *(unsigned int *)(v6 + 84);
    v4 = v5;
LABEL_19:
    v17(a1, a2, v9, v4);
    return;
  }
  a1 = (_DWORD *)(((unint64_t)a1 + v14) & v13);
  if (v10 == v11)
  {
    a2 = (a2 + 1);
    v17 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    goto LABEL_19;
  }
  v18 = (_QWORD *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((a2 & 0x80000000) != 0)
  {
    *v18 = a2 ^ 0x80000000;
    v18[1] = 0;
  }
  else
  {
    *v18 = (a2 - 1);
  }
}

uint64_t *sub_1A9265F90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((((v10 + (v9 & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = (const void *)(((unint64_t)a2 + v9) & v15);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v9) & v15), v16, v10);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v4 + v9) & v15, 0, 1, v5);
    }
    v17 = (_QWORD *)(((((unint64_t)v4 + v9) & v15) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)v16 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A9266160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (_QWORD *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A9266324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (_OWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  *(_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A9266454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (_OWORD *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = (uint64_t)v13 + v18 + 7;
  v21 = (v20 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v19 = *(_OWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v22 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 &= 0xFFFFFFFFFFFFF8uLL;
  *v22 = *(_OWORD *)v21;
  swift_release();
  v23 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_OWORD *)((v21 + 23) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  swift_release();
  *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A92665FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 40))();
}

_QWORD *sub_1A9266640(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1A93F8E5C())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4129DC](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_contentAdamId);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1A93F8040();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A907ECFC(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1A907ECFC((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A92667D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1A93F885C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A93F8808();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v6);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A93F7D88();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD3A0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD380);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD390, (uint64_t *)&unk_1ED2AD380, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1A93F888C();
  qword_1ED2A34B0 = result;
  return result;
}

id sub_1A92669A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader;
  v2 = *(void **)(v0 + OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)IMAVSecureKeyLoader), sel_initWithRecipient_useCase_account_urlProtocolDelegate_, 0, 1, 0, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id SecureDownloadRenewalManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SecureDownloadRenewalManager.init()()
{
  void *v0;

  return objc_msgSend(v0, sel_initWithDelegate_, 0);
}

id SecureDownloadRenewalManager.__allocating_init(delegate:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A90723F4(a1);
  swift_unknownObjectRelease();
  return v4;
}

id SecureDownloadRenewalManager.init(delegate:)(uint64_t a1)
{
  id v1;

  v1 = sub_1A90723F4(a1);
  swift_unknownObjectRelease();
  return v1;
}

void sub_1A9266ACC(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD);
  uint64_t v45;
  uint64_t aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void (*v50)();
  _QWORD *v51;

  v43 = a2;
  v44 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_1A93F7D58();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1A93F7DB8();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F7698();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v15 = objc_msgSend(v14, sel_mainOrPrivateContext);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = ObjectType;
  v50 = sub_1A9271450;
  v51 = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v47 = 1107296256;
  v48 = sub_1A908A91C;
  v49 = &block_descriptor_39;
  v18 = _Block_copy(&aBlock);
  v19 = v15;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_performBlockAndWaitWithSave_, v18);
  _Block_release(v18);
  swift_beginAccess();
  v20 = *(_QWORD *)(v16 + 16);
  swift_release();
  if (v20 < 1)
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
    v34 = sub_1A93F7674();
    v35 = sub_1A93F87B4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1A904E000, v34, v35, "Did not locate any orphaned key data", v36, 2u);
      MEMORY[0x1AF41411C](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v44)
      v44(MEMORY[0x1E0DEE9D8]);

  }
  else
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v21, v7);
    v22 = sub_1A93F7674();
    v23 = sub_1A93F87B4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v24 = 134217984;
      aBlock = v20;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v22, v23, "Did locate %ld orphaned key data", v24, 0xCu);
      MEMORY[0x1AF41411C](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    if (qword_1ED2A34C0 != -1)
      swift_once();
    v25 = (_QWORD *)swift_allocObject();
    v26 = v37;
    v27 = v43;
    v28 = (uint64_t)v44;
    v25[2] = v37;
    v25[3] = v28;
    v25[4] = v27;
    v50 = (void (*)())sub_1A9271460;
    v51 = v25;
    aBlock = MEMORY[0x1E0C809B0];
    v47 = 1107296256;
    v48 = sub_1A908A91C;
    v49 = &block_descriptor_9_1;
    v29 = _Block_copy(&aBlock);
    v30 = v26;
    sub_1A90858C0(v28);
    sub_1A93F7D88();
    v45 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    v31 = v40;
    v32 = v42;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v6, v31, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
    swift_release();
  }
}

uint64_t sub_1A9267134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  _QWORD *v32;

  ObjectType = swift_getObjectType();
  v8 = sub_1A93F7D58();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v23 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v15 = objc_msgSend(v14, sel_mainOrPrivateContext);

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v15;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = ObjectType;
  v31 = sub_1A9271498;
  v32 = v16;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1A908A91C;
  v30 = &block_descriptor_15;
  v17 = _Block_copy(&aBlock);
  v18 = v15;
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v18, sel_performBlockAndWaitWithSave_, v17);
  _Block_release(v17);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v3;
  v19[3] = a2;
  v19[4] = a3;
  v31 = sub_1A9271460;
  v32 = v19;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1A908A91C;
  v30 = &block_descriptor_21;
  v20 = _Block_copy(&aBlock);
  sub_1A90858C0(a2);
  v21 = v3;
  sub_1A93F7D88();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v24);
  return swift_release();
}

void sub_1A9267450(uint64_t a1, void *a2, void (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(a1, a2);
  if (v10)
  {
    v16 = v10;
    objc_msgSend(v10, sel_setPendingDeletion_, 1);

  }
  else
  {
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
    v12 = sub_1A93F7674();
    v13 = sub_1A93F879C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v14 = 134217984;
      v17 = a1;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v12, v13, "Did not locate key data for episode adam id %lld", v14, 0xCu);
      MEMORY[0x1AF41411C](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (a3)
      a3(MEMORY[0x1E0DEE9D8]);
  }
}

void sub_1A92676D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t ObjectType;
  id v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[6];

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v10 = objc_msgSend(v9, sel_mainOrPrivateContext);

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v10;
  v11[4] = v4;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = ObjectType;
  v15[4] = sub_1A9271770;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A908A91C;
  v15[3] = &block_descriptor_27;
  v12 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  v13 = v10;
  v14 = v4;
  sub_1A90858C0(a2);
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);

}

uint64_t sub_1A926781C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[6];
  uint64_t v47;

  v41 = a3;
  v42 = a4;
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7D58();
  v45 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F7DB8();
  v43 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v37 = a5;
    v38 = v11;
    v39 = v9;
    v40 = v8;
    swift_bridgeObjectRetain();
    v20 = 0;
    while (1)
    {
      v21 = *(_QWORD *)(a1 + 8 * v20 + 32);
      _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(v21, a2);
      if (!v22)
        break;
      v23 = v22;
      ++v20;
      objc_msgSend(v22, sel_setPendingDeletion_, 1);

      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        a5 = v37;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1ED2A42E8 != -1)
      swift_once();
    v30 = v40;
    v31 = __swift_project_value_buffer(v40, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    v33 = v38;
    v32 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v31, v30);
    v34 = sub_1A93F7674();
    v35 = sub_1A93F879C();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v36 = 134217984;
      v47 = v21;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v34, v35, "Did not locate key data for episode adam id %lld", v36, 0xCu);
      MEMORY[0x1AF41411C](v36, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v30);
  }
  else
  {
LABEL_6:
    objc_msgSend(a2, sel_saveInCurrentBlock, v16);
    if (qword_1ED2A34C0 != -1)
      swift_once();
    v24 = (_QWORD *)swift_allocObject();
    v26 = v41;
    v25 = v42;
    v24[2] = v41;
    v24[3] = v25;
    v24[4] = a5;
    aBlock[4] = sub_1A9271460;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_199;
    v27 = _Block_copy(aBlock);
    v28 = v26;
    sub_1A90858C0(v25);
    sub_1A93F7D88();
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v18, v14, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
    return swift_release();
  }
}

void sub_1A9267CBC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  id v7;
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v8 = objc_msgSend(v7, sel_privateQueueContext);

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = v3;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = ObjectType;
  v13[4] = sub_1A92717BC;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_33;
  v10 = _Block_copy(v13);
  v11 = v8;
  v12 = v3;
  sub_1A90858C0(a1);
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);

}

unint64_t sub_1A9267DEC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  unint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[8];

  v32 = a2;
  v33 = a3;
  v6 = sub_1A93F7D58();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F8040();
  v13 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v14 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  sub_1A9072534(0, &qword_1ED2AC7B8);
  v30 = a1;
  result = sub_1A93F89DC();
  v34 = v10;
  v31 = v15;
  v17 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
    v19 = v35;
    if (v18)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v18 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v19 = v35;
  if (!v18)
    goto LABEL_11;
LABEL_3:
  if (v18 < 1)
  {
    __break(1u);
    return result;
  }
  v35 = a4;
  v29 = v9;
  for (i = 0; i != v18; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x1AF4129DC](i, v17);
    else
      v21 = *(id *)(v17 + 8 * i + 32);
    v22 = v21;
    objc_msgSend(v21, sel_setPendingDeletion_, 1);

  }
  swift_bridgeObjectRelease();
  v9 = v29;
  a4 = v35;
LABEL_12:
  objc_msgSend(v30, sel_saveInCurrentBlock, v28);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v23 = (_QWORD *)swift_allocObject();
  v25 = v32;
  v24 = v33;
  v23[2] = v32;
  v23[3] = v24;
  v23[4] = a4;
  aBlock[4] = sub_1A9271460;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_193;
  v26 = _Block_copy(aBlock);
  v27 = v25;
  sub_1A90858C0(v24);
  sub_1A93F7D88();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v9);
  return swift_release();
}

void sub_1A9268368(void (*a1)(_QWORD), uint64_t a2)
{
  _BYTE *v2;
  uint64_t ObjectType;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  id v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void *v28;
  _QWORD *v29;

  ObjectType = swift_getObjectType();
  v6 = OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock;
  if ((v2[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] & 1) != 0
    || v2[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] == 1)
  {
    if (a1)
      a1(MEMORY[0x1E0DEE9D8]);
    return;
  }
  v22 = ObjectType;
  v2[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 1;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = MEMORY[0x1E0DEE9D8];
  v7 = (_QWORD *)(v23 + 16);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_mainOrPrivateContext);

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v2;
  v10[3] = v9;
  v10[4] = v23 + 16;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1A9273C34;
  *(_QWORD *)(v11 + 24) = v10;
  v28 = sub_1A9055748;
  v29 = (_QWORD *)v11;
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1A9098E00;
  v27 = &block_descriptor_121;
  v12 = _Block_copy(&aBlock);
  v21 = v2;
  v13 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWait_, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v20 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (*v7 >> 62)
    goto LABEL_10;
  if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    v15 = sub_1A92669A8();
    sub_1A9072534(0, (unint64_t *)&unk_1EEABC510);
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v21;
    v17[3] = v23;
    v17[4] = a1;
    v17[5] = a2;
    v17[6] = v22;
    v28 = sub_1A9273C60;
    v29 = v17;
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1A9269570;
    v27 = &block_descriptor_127;
    v18 = _Block_copy(&aBlock);
    v19 = v21;
    swift_retain();
    sub_1A90858C0((uint64_t)a1);
    swift_release();
    objc_msgSend(v15, sel_securelyInvalidateOfflineDataForRequests_completion_, v16, v18);
    _Block_release(v18);
    swift_release();
    swift_release();

    return;
  }
LABEL_11:
  v2[v6] = 0;
  if (a1)
    a1(MEMORY[0x1E0DEE9D8]);
  swift_release();
  swift_release();

}

uint64_t sub_1A92686EC(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint8_t *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  NSObject *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  __int128 v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;

  v5 = sub_1A93F7698();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - v9;
  v11 = sub_1A92717C8(a2);
  if (qword_1ED2A42E8 != -1)
LABEL_27:
    swift_once();
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v52 = v12;
  v56 = v5;
  v51(v10, v12, v5);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  v15 = os_log_type_enabled(v13, v14);
  v16 = v11;
  v17 = v11 >> 62;
  v53 = v16;
  if (v15)
  {
    v18 = a3;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    if (v17)
    {
      swift_bridgeObjectRetain();
      v20 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v57 = (id)v20;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v13, v14, "Removing %ld HLS keys", v19, 0xCu);
    MEMORY[0x1AF41411C](v19, -1, -1);

    a3 = v18;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v50 = *(void (**)(char *, uint64_t))(v6 + 8);
  v50(v10, v56);
  if (v17)
  {
    v11 = v53;
    swift_bridgeObjectRetain();
    v22 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_9;
  }
  else
  {
    v11 = v53;
    v22 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
    {
LABEL_9:
      v23 = v11 & 0xC000000000000001;
      v24 = 4;
      *(_QWORD *)&v21 = 134217984;
      v48 = v21;
      v5 = 0x1F463D000uLL;
      v54 = v22;
      v49 = v11 & 0xC000000000000001;
      do
      {
        v10 = (char *)(v24 - 4);
        if (v23)
        {
          v26 = (id)MEMORY[0x1AF4129DC](v24 - 4, v11);
          v6 = v24 - 3;
          if (__OFADD__(v10, 1))
            goto LABEL_26;
        }
        else
        {
          v26 = *(id *)(v11 + 8 * v24);
          v6 = v24 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v27 = v26;
        v28 = objc_msgSend(v27, *(SEL *)(v5 + 3936));
        v25 = v27;
        if (v28)
        {
          v29 = v28;
          v30 = objc_msgSend(v27, sel_data);
          if (v30)
          {
            v31 = v30;
            v32 = a3;
            v33 = sub_1A93F72B4();
            v35 = v34;

            v36 = objc_msgSend(objc_allocWithZone((Class)MTKeyRequestData), sel_init);
            objc_msgSend(v36, sel_setKeyIdentifier_, v29);

            v37 = (void *)sub_1A93F729C();
            objc_msgSend(v36, sel_setKeyData_, v37);

            v57 = objc_msgSend(v27, sel_storeTrackId);
            sub_1A93F9060();
            v38 = (void *)sub_1A93F8010();
            swift_bridgeObjectRelease();
            objc_msgSend(v36, sel_setContentAdamId_, v38);

            v39 = objc_msgSend(v27, sel_secureInvalidationDsid);
            v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v39);
            objc_msgSend(v36, sel_setSecureInvalidationDsid_, v40);

            sub_1A905F180(v33, v35);
            v51(v55, v52, v56);
            v41 = v27;
            v42 = sub_1A93F7674();
            v43 = sub_1A93F87B4();
            if (os_log_type_enabled(v42, v43))
            {
              v44 = swift_slowAlloc();
              *(_DWORD *)v44 = v48;
              *(_QWORD *)(v44 + 4) = -[NSObject storeTrackId](v41, sel_storeTrackId);

              _os_log_impl(&dword_1A904E000, v42, v43, "Removing HLS key for episode adam id %lld", (uint8_t *)v44, 0xCu);
              MEMORY[0x1AF41411C](v44, -1, -1);
            }
            else
            {

              v42 = v41;
            }

            v50(v55, v56);
            v25 = v36;
            a3 = v32;
            MEMORY[0x1AF412004]();
            v46 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v45 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
            v23 = v49;
            v5 = 0x1E5537000;
            if (v46 >= v45 >> 1)
              sub_1A93F834C();
            sub_1A93F8394();
            sub_1A93F8328();
            v11 = v53;
          }
          else
          {

            v25 = v27;
          }
          v22 = v54;
        }

        ++v24;
      }
      while (v6 != v22);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9268C74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_1A93F7D58();
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v20 = qword_1ED2A34B0;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  v16[5] = a4;
  v16[6] = a5;
  aBlock[4] = sub_1A9273CB4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_133;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A90858C0(a4);
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_1A9268EC0(void *a1, char *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  int64_t v61;
  void (*v62)(NSObject *, uint64_t, uint64_t);
  uint64_t v63;
  int64_t v64;
  uint64_t v65;

  v52 = a5;
  v54 = a4;
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = ((char *)&v52 - v12);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v53 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A9271940((uint64_t)sub_1A9273CF4, (uint64_t)v14);
  swift_release();
  if (qword_1ED2A42E8 != -1)
LABEL_35:
    swift_once();
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v62 = *(void (**)(NSObject *, uint64_t, uint64_t))(v9 + 16);
  v63 = v15;
  v62(v13, v15, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = sub_1A93F7674();
  v17 = sub_1A93F87B4();
  v18 = v8;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    *(_DWORD *)v19 = 134218240;
    swift_beginAccess();
    v20 = *((_QWORD *)a2 + 2);
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v65 = v21;
    sub_1A93F8AA8();
    swift_release();
    *(_WORD *)(v19 + 12) = 2048;
    v65 = *(_QWORD *)(a3 + 16);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v16, v17, "Finished invalidating %ld key data requests with %ld failed requests", (uint8_t *)v19, 0x16u);
    MEMORY[0x1AF41411C](v19, -1, -1);

    v18 = v8;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  v9 = *(_QWORD *)(v9 + 8);
  ((void (*)(NSObject *, uint64_t))v9)(v13, v18);
  v22 = *(_QWORD *)(a3 + 64);
  v60 = a3 + 64;
  v23 = 1 << *(_BYTE *)(a3 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v8 = v24 & v22;
  v61 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  v25 = 0;
  *(_QWORD *)&v26 = 136315394;
  v56 = v26;
  v55 = MEMORY[0x1E0DEE9B8] + 8;
  a2 = v59;
  v57 = v9;
  v58 = a3;
  while (1)
  {
    if (v8)
    {
      v27 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v64 = v25;
      v28 = v27 | (v25 << 6);
      goto LABEL_28;
    }
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v61)
      goto LABEL_30;
    v30 = *(_QWORD *)(v60 + 8 * v29);
    v31 = v25 + 1;
    if (!v30)
    {
      v31 = v25 + 2;
      if (v25 + 2 >= v61)
        goto LABEL_30;
      v30 = *(_QWORD *)(v60 + 8 * v31);
      if (!v30)
      {
        v31 = v25 + 3;
        if (v25 + 3 >= v61)
          goto LABEL_30;
        v30 = *(_QWORD *)(v60 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_27:
    v8 = (v30 - 1) & v30;
    v64 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_28:
    v33 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v28);
    v34 = *v33;
    v35 = v33[1];
    v36 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v28);
    v62(a2, v63, v18);
    v37 = v36;
    v38 = v36;
    swift_bridgeObjectRetain();
    v39 = v36;
    swift_bridgeObjectRetain();
    v13 = sub_1A93F7674();
    v40 = sub_1A93F879C();
    if (os_log_type_enabled(v13, v40))
    {
      v41 = swift_slowAlloc();
      v42 = v18;
      v43 = (_QWORD *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v65 = v44;
      *(_DWORD *)v41 = v56;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v41 + 4) = sub_1A906436C(v34, v35, &v65);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2112;
      v45 = sub_1A93F711C();
      *(_QWORD *)(v41 + 14) = v45;
      *v43 = v45;

      _os_log_impl(&dword_1A904E000, v13, v40, "Failed to invalidate download for episode adam id %s with error %@", (uint8_t *)v41, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      v46 = v43;
      v18 = v42;
      v9 = v57;
      MEMORY[0x1AF41411C](v46, -1, -1);
      swift_arrayDestroy();
      v47 = v44;
      a2 = v59;
      MEMORY[0x1AF41411C](v47, -1, -1);
      v48 = v41;
      a3 = v58;
      MEMORY[0x1AF41411C](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    ((void (*)(char *, uint64_t))v9)(a2, v18);
    v25 = v64;
  }
  v32 = v25 + 4;
  if (v25 + 4 < v61)
  {
    v30 = *(_QWORD *)(v60 + 8 * v32);
    if (!v30)
    {
      while (1)
      {
        v31 = v32 + 1;
        if (__OFADD__(v32, 1))
          goto LABEL_34;
        if (v31 >= v61)
          goto LABEL_30;
        v30 = *(_QWORD *)(v60 + 8 * v31);
        ++v32;
        if (v30)
          goto LABEL_27;
      }
    }
    v31 = v25 + 4;
    goto LABEL_27;
  }
LABEL_30:
  result = swift_release();
  v50 = v54;
  v53[OBJC_IVAR___MTSecureDownloadRenewalManager_removalLock] = 0;
  if (v50)
  {
    swift_bridgeObjectRetain();
    sub_1A90858C0((uint64_t)v50);
    v51 = sub_1A90BF390(a3);
    swift_bridgeObjectRelease();
    v50(v51);
    swift_release();
    return sub_1A9085818((uint64_t)v50);
  }
  return result;
}

uint64_t sub_1A9269508@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_1A92695E0(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9269570(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
  v2 = sub_1A93F7EFC();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92695E0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = sub_1A9266640(a1);
  v4 = sub_1A9159F94((uint64_t)v3);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1A9090A38(v5);
  if (*(_QWORD *)(v6 + 16) <= *(_QWORD *)(v4 + 16) >> 3)
    sub_1A927105C(v6);
  else
    v4 = sub_1A91F3C3C(v6, v4);
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_1A9269778;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = sub_1A92696F8;
  v7[6] = 0;
  v7[7] = sub_1A9269760;
  v7[8] = 0;
  v7[9] = sub_1A9271350;
  v7[10] = 0;
  v7[11] = sub_1A9271360;
  v7[12] = 0;
  *a2 = v4;
  a2[1] = (uint64_t)sub_1A92696F8;
  a2[2] = 0;
  a2[3] = (uint64_t)sub_1A9269760;
  a2[4] = 0;
  a2[5] = (uint64_t)sub_1A9271350;
  a2[6] = 0;
  a2[7] = (uint64_t)sub_1A9273B7C;
  a2[8] = (uint64_t)v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92696F8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  v5 = sub_1A931883C(v3, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

_QWORD *sub_1A9269760@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)a2 = *result;
    *(_BYTE *)(a2 + 8) = 0;
  }
  return result;
}

id sub_1A9269778@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, *a1);
  *a2 = result;
  return result;
}

void sub_1A92697B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = objc_msgSend(v8, sel_loggingContext);

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v9;
  v10[5] = a1;
  v10[6] = a2;
  v13[4] = sub_1A9273D60;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A908A91C;
  v13[3] = &block_descriptor_148;
  v11 = _Block_copy(v13);
  swift_retain();
  v12 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlock_, v11);
  _Block_release(v11);

}

void sub_1A92698E0(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void *a3, void (*a4)(void))
{
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t inited;
  id v22;
  id v23[2];
  uint64_t v24[23];

  v24[22] = *MEMORY[0x1E0C80C00];
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  v8 = (void *)objc_opt_self();
  a1(v24);
  sub_1A915878C(v24);
  v9 = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A90C0B34((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
  v10 = (void *)sub_1A93F85EC();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_predicateForEpisodeStoreTrackIds_, v10);

  v12 = objc_msgSend(v8, sel_predicateForDownloaded_excludeHidden_, 1, 1);
  v13 = objc_msgSend(v11, sel_AND_, v12);

  objc_msgSend(v7, sel_setPredicate_, v13);
  v23[0] = 0;
  v14 = objc_msgSend(a3, sel_countForFetchRequest_error_, v7, v23);
  if (v23[0])
  {
    v15 = v23[0];
    swift_willThrow();
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v16 = sub_1A93F7698();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A3EE0);
    v17 = sub_1A93F7674();
    v18 = sub_1A93F8784();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1A904E000, v17, v18, "Failed to count downloaded episodes for deleted secure keys. Unable to assess misalignment", v19, 2u);
      MEMORY[0x1AF41411C](v19, -1, -1);
    }

  }
  else
  {
    v20 = v14;
    if ((uint64_t)v14 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9760);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A9405520;
      v23[0] = (id)0xD000000000000025;
      v23[1] = (id)0x80000001A944AE10;
      sub_1A93F8C1C();
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v20);
      *(_QWORD *)(inited + 96) = v9;
      *(_QWORD *)(inited + 72) = v22;
      sub_1A91129D8(inited);
      a4();
      swift_bridgeObjectRelease();
    }
  }

}

uint64_t sub_1A9269C2C()
{
  return sub_1A9271AF4(0, 0);
}

uint64_t sub_1A9269C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9271AF4(a2, a3);
}

uint64_t sub_1A9269C84(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v7 = a1;
  sub_1A90858C0(a2);
  sub_1A926A478((uint64_t)sub_1A9273EAC, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1A9269CFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v8 = sub_1A93F7698();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v9 = sub_1A93F7674();
  v10 = sub_1A93F8784();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v11 = 134349314;
    v21 = v19;
    sub_1A93F8AA8();
    *(_WORD *)(v11 + 12) = 2080;
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x1AF412034](v12, MEMORY[0x1E0DEA968]);
    v20 = a3;
    v14 = a4;
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_1A906436C(v13, v16, &v21);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    a4 = v14;
    a3 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v9, v10, "Finished request for missing keys for shows (%{public}ld): %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    MEMORY[0x1AF41411C](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v17 = a2;
  sub_1A90858C0(a3);
  sub_1A9271E90(v17, v17, a1, a3, a4);
  sub_1A9085818(a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9269F48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v9 = sub_1A93F7698();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8784();
  if (os_log_type_enabled(v10, v11))
  {
    v25 = a2;
    v12 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v12 = 134349314;
    v26 = v24;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 12) = 2080;
    v13 = swift_bridgeObjectRetain();
    v14 = a3;
    v15 = a5;
    v16 = MEMORY[0x1AF412034](v13, MEMORY[0x1E0DEA968]);
    v18 = v17;
    swift_bridgeObjectRelease();
    v19 = v16;
    a5 = v15;
    a3 = v14;
    sub_1A906436C(v19, v18, &v26);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v10, v11, "Finished renewal & removal of existing DRM keys (%{public}ld: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v24, -1, -1);
    v20 = v12;
    a2 = v25;
    MEMORY[0x1AF41411C](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a4;
  v21[5] = a5;
  v22 = a2;
  swift_bridgeObjectRetain();
  sub_1A90858C0(a4);
  sub_1A9266ACC(sub_1A9274220, (uint64_t)v21);
  return swift_release();
}

void sub_1A926A1AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8784();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v9 = 134349314;
    v16 = v14;
    sub_1A93F8AA8();
    *(_WORD *)(v9 + 12) = 2080;
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x1AF412034](v10, MEMORY[0x1E0DEA968]);
    v15 = a3;
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_1A906436C(v11, v13, &v16);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    a3 = v15;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v7, v8, "Finished removal of orphan DRM keys. episodes that failed removal: (%{public}ld) %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A926B6B8(a3);
  if (a4)
    a4();
}

void sub_1A926A478(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v2;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a2;
  v11[4] = sub_1A9273B08;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A908A91C;
  v11[3] = &block_descriptor_106;
  v8 = _Block_copy(v11);
  v9 = v2;
  v10 = v6;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v8);
  _Block_release(v8);

}

uint64_t sub_1A926A590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  os_log_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  BOOL v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  void *v39;
  NSObject *v40;
  _QWORD v42[2];
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  os_log_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[6];
  uint64_t v55;

  v52 = a2;
  v53 = a3;
  v51 = sub_1A93F7D58();
  v3 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A927224C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v11 = sub_1A93F89DC();
  v46 = v9;
  v47 = v7;
  v48 = v5;
  v49 = v3;
  v12 = v51;

  v13 = sub_1A926165C(v11);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = (void *)sub_1A92723B8(v13);
    swift_bridgeObjectRelease();
    v15 = sub_1A93F89DC();
    v16 = v50;
    v17 = v15;
    v45 = v6;

    v18 = sub_1A926165C(v17);
    swift_bridgeObjectRelease();
    if (v18)
      v19 = v18;
    else
      v19 = MEMORY[0x1E0DEE9D8];
    v20 = v53;
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
    v20 = v53;
    v45 = v6;
    v16 = v50;
  }
  v21 = v49;
  v22 = v12;
  if (qword_1ED2A3F00 != -1)
    swift_once();
  v23 = sub_1A93F7698();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v24 = sub_1A93F7674();
  v25 = sub_1A93F8784();
  v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
  v27 = v48;
  if (v26)
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    aBlock[0] = v29;
    *(_DWORD *)v28 = 134349314;
    v50 = v24;
    v44 = v25;
    v43 = v29;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v55 = v30;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v42[1] = v28 + 14;
    v31 = swift_bridgeObjectRetain();
    sub_1A915A34C(v31);
    swift_bridgeObjectRelease();
    sub_1A9072534(0, &qword_1ED2A9390);
    sub_1A90C0B34((unint64_t *)&unk_1EEABC4F0, &qword_1ED2A9390, 0x1E0C99D80, MEMORY[0x1E0DEFCF8]);
    v32 = sub_1A93F8604();
    v34 = v33;
    swift_bridgeObjectRelease();
    v55 = sub_1A906436C(v32, v34, aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v35 = v50;
    _os_log_impl(&dword_1A904E000, v50, (os_log_type_t)v44, "Found %{public}ld episodes missing DRM keys: %s", (uint8_t *)v28, 0x16u);
    v36 = v43;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v36, -1, -1);
    MEMORY[0x1AF41411C](v28, -1, -1);

    v20 = v53;
    v21 = v49;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v37 = v46;
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = v19;
  v38[3] = v16;
  v38[4] = v52;
  v38[5] = v20;
  aBlock[4] = (uint64_t)sub_1A92723AC;
  aBlock[5] = (uint64_t)v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_57;
  v39 = _Block_copy(aBlock);
  v40 = v16;
  swift_retain();
  sub_1A93F7D88();
  v55 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v37, v27, v39);
  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v22);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v45);
  return swift_release();
}

uint64_t sub_1A926ACA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C20);
  MEMORY[0x1E0C80A78](v8);
  v10 = (unint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v11 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  v16 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v17 = sub_1A93F8E5C();
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v40 = a4;
  v41 = a2;
  v38 = a1 >> 62;
  v39 = a3;
  if (v17)
  {
    if (v17 < 1)
    {
      __break(1u);
LABEL_29:
      swift_once();
LABEL_23:
      v25 = sub_1A93F7698();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A3EE0);
      swift_bridgeObjectRetain_n();
      v26 = sub_1A93F7674();
      v27 = sub_1A93F879C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v29 = (void *)swift_slowAlloc();
        v46 = v29;
        *(_DWORD *)v28 = 141558275;
        v45 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v28 + 12) = 2081;
        v30 = sub_1A9072534(0, &qword_1ED2A9390);
        v31 = swift_bridgeObjectRetain();
        v32 = MEMORY[0x1AF412034](v31, v30);
        v34 = v33;
        swift_bridgeObjectRelease();
        v45 = sub_1A906436C(v32, v34, (uint64_t *)&v46);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v26, v27, "Invalid data found in episode DB: %{private,mask.hash}s.", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v29, -1, -1);
        MEMORY[0x1AF41411C](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_26;
    }
    v18 = 0;
    v19 = a1 & 0xC000000000000001;
    v16 = MEMORY[0x1E0DEE9D8];
    v42 = a1;
    do
    {
      if (v19)
        v20 = (id)MEMORY[0x1AF4129DC](v18, a1);
      else
        v20 = *(id *)(a1 + 8 * v18 + 32);
      v21 = v20;
      v46 = v20;
      sub_1A926B1A4(&v46, v10);

      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v44) == 1)
      {
        sub_1A905FD54((uint64_t)v10, &qword_1ED2A5C20);
      }
      else
      {
        sub_1A9062F08((uint64_t)v10, (uint64_t)v15, &qword_1ED2A5C18);
        sub_1A9062F08((uint64_t)v15, v43, &qword_1ED2A5C18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_1A9118C24(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
        v23 = *(_QWORD *)(v16 + 16);
        v22 = *(_QWORD *)(v16 + 24);
        if (v23 >= v22 >> 1)
          v16 = sub_1A9118C24(v22 > 1, v23 + 1, 1, v16);
        *(_QWORD *)(v16 + 16) = v23 + 1;
        sub_1A9062F08(v43, v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v23, &qword_1ED2A5C18);
        a1 = v42;
      }
      ++v18;
    }
    while (v17 != v18);
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  if (v38)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v24 != *(_QWORD *)(v16 + 16))
  {
    if (qword_1ED2A3F00 == -1)
      goto LABEL_23;
    goto LABEL_29;
  }
LABEL_26:
  v35 = sub_1A911EEFC(v16);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v39;
  v36[3] = v40;
  v36[4] = v16;
  swift_retain();
  sub_1A926B93C(v35, (uint64_t (*)(double))sub_1A9272878, (uint64_t)v36);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A926B1A4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  *(_QWORD *)&v25 = sub_1A93F8040();
  *((_QWORD *)&v25 + 1) = v11;
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_1A93F9228());
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1A9062F08((uint64_t)&v25, (uint64_t)v27, qword_1ED2AC800);
  if (!v28)
    goto LABEL_13;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v22 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25 = sub_1A93F8040();
  *((_QWORD *)&v25 + 1) = v13;
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_1A93F9228());
  swift_unknownObjectRelease();
  if (v14)
  {
    sub_1A93F8B44();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1A9062F08((uint64_t)&v25, (uint64_t)v27, qword_1ED2AC800);
  if (!v28)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1A905FD54((uint64_t)v27, qword_1ED2AC800);
LABEL_15:
    v16 = v23;
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_14;
  swift_bridgeObjectRelease();
  sub_1A93F7248();
  swift_bridgeObjectRelease();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v16 = v23;
  if (v15 != 1)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v9, v5, v6);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
    v21 = (char *)v16 + *(int *)(v20 + 48);
    *v16 = v22;
    v19(v21, v9, v6);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 0, 1, v20);
  }
  sub_1A905FD54((uint64_t)v5, &qword_1ED2AD3D0);
LABEL_16:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
}

uint64_t sub_1A926B500(void (*a1)(_QWORD, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  void (*v23)(_QWORD, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C18);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a3 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v22[1] = a2;
    v23 = a1;
    v26 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A908182C(0, v11, 0);
    v13 = *(unsigned __int8 *)(v7 + 80);
    v22[0] = a3;
    v14 = a3 + ((v13 + 32) & ~v13);
    v24 = *(_QWORD *)(v7 + 72);
    v12 = v26;
    do
    {
      sub_1A9062170(v14, (uint64_t)v10, &qword_1ED2A5C18);
      v25 = *v10;
      v15 = sub_1A93F9060();
      v17 = v16;
      sub_1A905FD54((uint64_t)v10, &qword_1ED2A5C18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A908182C(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v26;
      }
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A908182C(v18 > 1, v19 + 1, 1);
        v12 = v26;
      }
      *(_QWORD *)(v12 + 16) = v19 + 1;
      v20 = v12 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      v14 += v24;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a1 = v23;
  }
  a1(v12, v8);
  return swift_bridgeObjectRelease();
}

void sub_1A926B6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  void *v6;
  uint64_t (*v7)();
  objc_class *v8;
  _BYTE *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  __CFString *v18;
  id v19;
  _QWORD v20[3];
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;
  char v24;
  objc_super v25;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC4E0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_QWORD *)(inited + 32) = 0xD000000000000014;
    *(_QWORD *)(inited + 40) = 0x80000001A944ADB0;
    *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v3);
    v5 = sub_1A91138A4(inited);
    sub_1A905DC3C(v2 + OBJC_IVAR___MTSecureDownloadRenewalManager_bugReporter, (uint64_t)v20);
    v6 = v21;
    v7 = v22;
    __swift_project_boxed_opaque_existential_1(v20, (uint64_t)v21);
    v8 = (objc_class *)type metadata accessor for BugReport();
    v9 = objc_allocWithZone(v8);
    v9[OBJC_IVAR___PFBugReport_system] = 1;
    v9[OBJC_IVAR___PFBugReport_errorKind] = 3;
    v9[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = 0;
    v25.receiver = v9;
    v25.super_class = v8;
    v10 = objc_msgSendSuper2(&v25, sel_init);
    v24 = 1;
    v11 = sub_1A91751F8(v5);
    (*((void (**)(id, char *, uint64_t, void *, uint64_t (*)()))v7 + 2))(v10, &v24, v11, v6, v7);
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    v12 = *(void **)(v2 + OBJC_IVAR___MTSecureDownloadRenewalManager_analyticsChannel);
    swift_unknownObjectRetain();
    sub_1A91755A8(v5);
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    v22 = sub_1A90D287C;
    v23 = v16;
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 1107296256;
    v20[2] = sub_1A90AC824;
    v21 = &block_descriptor_51;
    v17 = _Block_copy(v20);
    v18 = CFSTR("com.apple.podcasts.DRMKeysRecovered");
    swift_bridgeObjectRetain();
    swift_release();
    v19 = objc_msgSend(v15, sel_initWithName_generator_, v18, v17);

    _Block_release(v17);
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_sendEvent_, v19);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_1A926B93C(uint64_t a1, uint64_t (*a2)(double), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t (*v42)(double);
  void *v43;
  id v44;
  id v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t (*v53)(double);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD aBlock[6];

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v47 - v13);
  v18 = MEMORY[0x1E0C80A78](v15);
  if (!*(_QWORD *)(a1 + 16))
    return a2(v18);
  v19 = (char *)&v47 + *(int *)(v9 + 48) - v17;
  v55 = (uint64_t)&v47 - v17;
  v56 = v19;
  v54 = ObjectType;
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (uint64_t *)((char *)&v47 - v17);
  v50 = a1;
  sub_1A9062170(a1 + ((v20 + 32) & ~v20), (uint64_t)v14, (uint64_t *)&unk_1EEABC500);
  v22 = *(int *)(v9 + 48);
  v53 = a2;
  v23 = (char *)v14 + v22;
  v24 = *v14;
  *v21 = *v14;
  v48 = v4;
  v49 = v24;
  v25 = sub_1A93F726C();
  v51 = a3;
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  v28 = v56;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v56, v23, v25);
  v29 = (char *)v11 + *(int *)(v9 + 48);
  *v11 = v24;
  v30 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v30(v29, v28, v26);
  v31 = v30;
  v32 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
  v33 = (void *)sub_1A93F71A0();
  v34 = objc_msgSend(v32, sel_initWithURL_options_, v33, 0);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  v35 = v48;
  v52 = *(id *)&v48[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader];
  v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v37 = (char *)v11 + *(int *)(v9 + 48);
  *v11 = v49;
  v31(v37, v56, v26);
  v38 = (v20 + 48) & ~v20;
  v39 = (v10 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (_QWORD *)swift_allocObject();
  v42 = v53;
  v41[2] = v36;
  v41[3] = v42;
  v41[4] = v51;
  v41[5] = v34;
  sub_1A9062F08((uint64_t)v11, (uint64_t)v41 + v38, (uint64_t *)&unk_1EEABC500);
  *(_QWORD *)((char *)v41 + v39) = v35;
  *(_QWORD *)((char *)v41 + v40) = v50;
  *(_QWORD *)((char *)v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) = v54;
  aBlock[4] = sub_1A927297C;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A926CB6C;
  aBlock[3] = &block_descriptor_69_0;
  v43 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v44 = v34;
  v45 = v35;
  swift_release();
  objc_msgSend(v52, sel_keyIdentifiersFrom_completion_, v44, v43);
  _Block_release(v43);

  return sub_1A905FD54(v55, (uint64_t *)&unk_1EEABC500);
}

void sub_1A926BC70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(double), uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  void (*v46)(double);
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(double);
  uint64_t ObjectType;
  uint64_t v65;
  _QWORD aBlock[7];

  v7 = v6;
  v65 = a1;
  ObjectType = swift_getObjectType();
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char **)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v53 - v17);
  v22 = MEMORY[0x1E0C80A78](v19);
  if (a4 >> 1 == a3)
  {
    a5(v22);
  }
  else
  {
    v63 = a5;
    if ((uint64_t)(a4 >> 1) <= a3)
    {
      __break(1u);
    }
    else
    {
      v23 = (char *)&v53 + *(int *)(v13 + 48) - v20;
      v24 = *(_QWORD *)(v21 + 72);
      v25 = a3;
      v61 = a3;
      v62 = (uint64_t)&v53 - v20;
      v26 = (uint64_t *)((char *)&v53 - v20);
      v60 = a2;
      v56 = v21;
      sub_1A9062170(a2 + v24 * v25, (uint64_t)v18, (uint64_t *)&unk_1EEABC500);
      v27 = *(int *)(v13 + 48);
      v59 = a4;
      v28 = (char *)v18 + v27;
      v53 = v7;
      v29 = *v18;
      *v26 = *v18;
      v30 = sub_1A93F726C();
      v57 = a6;
      v31 = v30;
      v32 = *(_QWORD *)(v30 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v55 = v23;
      v33(v23, v28, v30);
      v34 = (char *)v15 + *(int *)(v13 + 48);
      *v15 = v29;
      v54 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      v54(v34, v23, v31);
      v35 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
      v36 = (void *)sub_1A93F71A0();
      v37 = objc_msgSend(v35, sel_initWithURL_options_, v36, 0);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      v38 = v53;
      v58 = *(id *)&v53[OBJC_IVAR___MTSecureDownloadRenewalManager_metadataLoader];
      v39 = swift_allocObject();
      v40 = v38;
      swift_unknownObjectWeakInit();
      v41 = (char *)v15 + *(int *)(v13 + 48);
      *v15 = v29;
      v54(v41, v55, v31);
      v42 = (*(unsigned __int8 *)(v56 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v43 = (v14 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
      v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
      v45 = (_QWORD *)swift_allocObject();
      v46 = v63;
      v45[2] = v39;
      v45[3] = v46;
      v45[4] = v57;
      v45[5] = v37;
      sub_1A9062F08((uint64_t)v15, (uint64_t)v45 + v42, (uint64_t *)&unk_1EEABC500);
      *(_QWORD *)((char *)v45 + v43) = v40;
      v47 = (_QWORD *)((char *)v45 + v44);
      v48 = v60;
      *v47 = v65;
      v47[1] = v48;
      v49 = v59;
      v47[2] = v61;
      v47[3] = v49;
      *(_QWORD *)((char *)v45 + ((v44 + 39) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
      aBlock[4] = sub_1A92734B0;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A926CB6C;
      aBlock[3] = &block_descriptor_88;
      v50 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      v51 = v37;
      v52 = v40;
      swift_release();
      objc_msgSend(v58, sel_keyIdentifiersFrom_completion_, v51, v50);
      _Block_release(v50);

      sub_1A905FD54(v62, (uint64_t *)&unk_1EEABC500);
    }
  }
}

uint64_t sub_1A926BFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  int64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v7 = a5 >> 1;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = a4;
  if (a5 >> 1 == a4)
    goto LABEL_6;
  v12 = a4 + 1;
  if (!__OFADD__(a4, 1))
  {
    if (v7 >= v12)
    {
      if (v12 >= a4)
      {
LABEL_6:
        if (v7 >= a4)
        {
          v13 = swift_unknownObjectRetain();
          sub_1A926BC70(v13, a3, v12, a5, a6, a7);
          return swift_unknownObjectRelease();
        }
        goto LABEL_11;
      }
LABEL_10:
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1A926C094(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (**a5)(char *, char *, uint64_t), uint64_t *a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  void *v36;
  char *v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  void (**v45)(void);
  uint64_t v46;
  void *v47;
  id v48;
  void (**v49)(char *, char *, uint64_t);
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(char *, char *, uint64_t);
  void (*v70)(void);
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD aBlock[6];

  v72 = a7;
  v73 = a8;
  v69 = a5;
  v74 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v65 - v18);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v65 - v21);
  swift_beginAccess();
  v23 = (char *)MEMORY[0x1AF41420C](a2 + 16);
  if (v23)
  {
    v70 = a3;
    v71 = v23;
    if (a1 && *(_QWORD *)(a1 + 16))
    {
      v68 = a9;
      swift_bridgeObjectRetain();
      v24 = v71;
      v25 = sub_1A92669A8();
      objc_msgSend(v25, sel_setDelegate_, 0);

      v26 = objc_allocWithZone((Class)IMAVSecureKeyLoader);
      v27 = objc_msgSend(v26, sel_initWithRecipient_useCase_account_urlProtocolDelegate_, v69, 1, 0, 0);
      v28 = *(void **)&v24[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader];
      *(_QWORD *)&v24[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = v27;

      v69 = (void (**)(char *, char *, uint64_t))sub_1A92669A8();
      v67 = sub_1A93F8010();
      swift_bridgeObjectRelease();
      v66 = v13;
      v29 = *(int *)(v13 + 48);
      v30 = (char *)v22 + v29;
      v31 = (char *)a6 + v29;
      v65 = (char *)a6 + v29;
      v32 = *a6;
      *v22 = *a6;
      v33 = sub_1A93F726C();
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v35(v30, v31, v33);
      aBlock[0] = v32;
      sub_1A93F9060();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
      v36 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v37 = v65;
      v38 = (char *)v22 + *(int *)(v66 + 48);
      *v22 = *a6;
      v35(v38, v37, v33);
      v39 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v40 = (v15 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
      v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
      v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject();
      sub_1A9062F08((uint64_t)v22, v43 + v39, (uint64_t *)&unk_1EEABC500);
      v44 = v72;
      *(_QWORD *)(v43 + v40) = v72;
      *(_QWORD *)(v43 + v41) = v73;
      v45 = (void (**)(void))(v43 + v42);
      v46 = v74;
      *v45 = v70;
      v45[1] = (void (*)(void))v46;
      *(_QWORD *)(v43 + ((v42 + 23) & 0xFFFFFFFFFFFFFFF8)) = v68;
      aBlock[4] = sub_1A9272CFC;
      aBlock[5] = v43;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A90BF160;
      aBlock[3] = &block_descriptor_75_0;
      v47 = _Block_copy(aBlock);
      v48 = v44;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      v49 = v69;
      v50 = (void *)v67;
      objc_msgSend(v69, sel_startKeyLoadingProcessWithKeyIdentifier_contentAdamId_isRenewal_completion_, v67, v36, 0, v47);

      _Block_release(v47);
    }
    else
    {
      v51 = v13;
      if (qword_1ED2A3F00 != -1)
        swift_once();
      v52 = sub_1A93F7698();
      __swift_project_value_buffer(v52, (uint64_t)qword_1ED2A3EE0);
      v53 = *(int *)(v13 + 48);
      v54 = (char *)v19 + v53;
      v55 = (char *)a6 + v53;
      *v19 = *a6;
      v56 = sub_1A93F726C();
      v69 = *(void (***)(char *, char *, uint64_t))(v56 - 8);
      v57 = v69[2];
      v57(v54, v55, v56);
      sub_1A9062F08((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1EEABC500);
      v58 = sub_1A93F7674();
      v59 = sub_1A93F879C();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        *(_DWORD *)v60 = 141558275;
        aBlock[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v60 + 12) = 2049;
        v68 = v60 + 14;
        v61 = *(int *)(v51 + 48);
        v62 = (char *)v22 + v61;
        v63 = *v16;
        *v22 = *v16;
        v57((char *)v22 + v61, (char *)v16 + v61, v56);
        ((void (*)(char *, uint64_t))v69[1])(v62, v56);
        sub_1A905FD54((uint64_t)v16, (uint64_t *)&unk_1EEABC500);
        aBlock[0] = v63;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v58, v59, "Unable to load keyIdentifier for adamID: %{private,mask.hash}lld.", (uint8_t *)v60, 0x16u);
        MEMORY[0x1AF41411C](v60, -1, -1);
      }
      else
      {
        sub_1A905FD54((uint64_t)v16, (uint64_t *)&unk_1EEABC500);
      }
      v64 = (uint64_t)v70;

      sub_1A9272A00(v72, v73, v64, v74);
    }
  }
  else
  {
    a3();
  }
}

void sub_1A926C5DC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (**a5)(char *, char *, uint64_t), uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  void *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(void);
  uint64_t v51;
  void *v52;
  id v53;
  void (**v54)(char *, char *, uint64_t);
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (**v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  char *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD aBlock[6];

  v82 = a7;
  v83 = a8;
  v75 = a5;
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v17 = *(_QWORD *)(v84 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v84);
  v19 = (uint64_t *)((char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v71 - v21);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v71 - v24);
  swift_beginAccess();
  v26 = (char *)MEMORY[0x1AF41420C](a2 + 16);
  if (v26)
  {
    v27 = v26;
    v78 = a11;
    v79 = a3;
    v76 = a9;
    v77 = a10;
    v80 = v26;
    v81 = a4;
    if (a1 && *(_QWORD *)(a1 + 16))
    {
      v74 = a12;
      swift_bridgeObjectRetain();
      v28 = sub_1A92669A8();
      objc_msgSend(v28, sel_setDelegate_, 0);

      v29 = objc_allocWithZone((Class)IMAVSecureKeyLoader);
      v30 = objc_msgSend(v29, sel_initWithRecipient_useCase_account_urlProtocolDelegate_, v75, 1, 0, 0);
      v31 = *(void **)&v27[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader];
      *(_QWORD *)&v27[OBJC_IVAR___MTSecureDownloadRenewalManager____lazy_storage___secureKeyLoader] = v30;

      v75 = (void (**)(char *, char *, uint64_t))sub_1A92669A8();
      v73 = sub_1A93F8010();
      swift_bridgeObjectRelease();
      v32 = *(int *)(v84 + 48);
      v33 = (char *)v25 + v32;
      v34 = (char *)a6 + v32;
      v72 = (char *)a6 + v32;
      v35 = *a6;
      *v25 = *a6;
      v36 = sub_1A93F726C();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v38(v33, v34, v36);
      aBlock[0] = v35;
      sub_1A93F9060();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v36);
      v39 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      v40 = (char *)v25 + *(int *)(v84 + 48);
      *v25 = *a6;
      v38(v40, v72, v36);
      v41 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v42 = (v18 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
      v44 = (v43 + 39) & 0xFFFFFFFFFFFFFFF8;
      v45 = swift_allocObject();
      sub_1A9062F08((uint64_t)v25, v45 + v41, (uint64_t *)&unk_1EEABC500);
      v46 = v82;
      *(_QWORD *)(v45 + v42) = v82;
      v47 = (_QWORD *)(v45 + v43);
      v48 = v76;
      *v47 = v83;
      v47[1] = v48;
      v49 = v78;
      v47[2] = v77;
      v47[3] = v49;
      v50 = (void (**)(void))(v45 + v44);
      v51 = v81;
      *v50 = v79;
      v50[1] = (void (*)(void))v51;
      *(_QWORD *)(v45 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8)) = v74;
      aBlock[4] = sub_1A9273610;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A90BF160;
      aBlock[3] = &block_descriptor_94;
      v52 = _Block_copy(aBlock);
      v53 = v46;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      v54 = v75;
      v55 = (void *)v73;
      objc_msgSend(v75, sel_startKeyLoadingProcessWithKeyIdentifier_contentAdamId_isRenewal_completion_, v73, v39, 0, v52);

      _Block_release(v52);
    }
    else
    {
      if (qword_1ED2A3F00 != -1)
        swift_once();
      v56 = sub_1A93F7698();
      __swift_project_value_buffer(v56, (uint64_t)qword_1ED2A3EE0);
      v57 = v84;
      v58 = *(int *)(v84 + 48);
      v59 = (char *)v22 + v58;
      v60 = (char *)a6 + v58;
      *v22 = *a6;
      v61 = sub_1A93F726C();
      v75 = *(void (***)(char *, char *, uint64_t))(v61 - 8);
      v62 = v75[2];
      v62(v59, v60, v61);
      sub_1A9062F08((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1EEABC500);
      v63 = sub_1A93F7674();
      v64 = sub_1A93F879C();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc();
        *(_DWORD *)v65 = 141558275;
        aBlock[0] = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v65 + 12) = 2049;
        v74 = v65 + 14;
        v66 = *(int *)(v57 + 48);
        v67 = (char *)v25 + v66;
        v68 = *v19;
        *v25 = *v19;
        v62((char *)v25 + v66, (char *)v19 + v66, v61);
        ((void (*)(char *, uint64_t))v75[1])(v67, v61);
        sub_1A905FD54((uint64_t)v19, (uint64_t *)&unk_1EEABC500);
        aBlock[0] = v68;
        sub_1A93F8AA8();
        _os_log_impl(&dword_1A904E000, v63, v64, "Unable to load keyIdentifier for adamID: %{private,mask.hash}lld.", (uint8_t *)v65, 0x16u);
        MEMORY[0x1AF41411C](v65, -1, -1);
      }
      else
      {
        sub_1A905FD54((uint64_t)v19, (uint64_t *)&unk_1EEABC500);
      }
      v69 = v81;
      v70 = (uint64_t)v79;

      sub_1A9272D6C(v82, v83, v76, v77, v78, v70, v69);
    }
  }
  else
  {
    a3();
  }
}

uint64_t sub_1A926CB6C(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1A93F8310();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A926CBD0(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  NSObject *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  id v43;

  v5 = sub_1A93F7698();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_1A92740BC(a2);
  if (qword_1ED2A42E8 != -1)
    goto LABEL_21;
  while (1)
  {
    v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v41 = v12;
    v40(v10, v12, v5);
    swift_bridgeObjectRetain_n();
    v13 = sub_1A93F7674();
    v14 = sub_1A93F87B4();
    v15 = os_log_type_enabled(v13, v14);
    v16 = &jpt_1A9096128;
    v17 = v11 >> 62;
    v37 = v11;
    if (v15)
    {
      v11 = swift_slowAlloc();
      *(_DWORD *)v11 = 134217984;
      if (v17)
      {
        swift_bridgeObjectRetain();
        v18 = sub_1A93F8E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v43 = (id)v18;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v13, v14, "Renewing %ld HLS keys", (uint8_t *)v11, 0xCu);
      MEMORY[0x1AF41411C](v11, -1, -1);

      v16 = &jpt_1A9096128;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v39 = *(void (**)(char *, uint64_t))(v6 + 8);
    v39(v10, v5);
    if (v17)
      break;
    v20 = v37;
    v6 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return swift_bridgeObjectRelease();
LABEL_9:
    v38 = v20 & 0xC000000000000001;
    v21 = 4;
    *(_QWORD *)&v19 = *((_QWORD *)v16 + 12);
    v36 = v19;
    while (1)
    {
      v10 = (char *)(v21 - 4);
      v24 = v38 ? (id)MEMORY[0x1AF4129DC](v21 - 4, v20) : *(id *)(v20 + 8 * v21);
      v25 = v24;
      v26 = v21 - 3;
      if (__OFADD__(v10, 1))
        break;
      v27 = objc_msgSend(objc_allocWithZone((Class)MTKeyRequestData), sel_init);
      v28 = objc_msgSend(v25, sel_keyUri);
      objc_msgSend(v27, sel_setKeyIdentifier_, v28);

      v43 = objc_msgSend(v25, sel_storeTrackId);
      sub_1A93F9060();
      v29 = (void *)sub_1A93F8010();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_setContentAdamId_, v29);

      v30 = v27;
      MEMORY[0x1AF412004]();
      if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A93F834C();
      sub_1A93F8394();
      sub_1A93F8328();
      v40(v42, v41, v5);
      v31 = v25;
      v23 = sub_1A93F7674();
      v32 = sub_1A93F87B4();
      v11 = v32;
      if (os_log_type_enabled(v23, v32))
      {
        v33 = swift_slowAlloc();
        *(_DWORD *)v33 = v36;
        *(_QWORD *)(v33 + 4) = -[NSObject storeTrackId](v31, sel_storeTrackId);

        _os_log_impl(&dword_1A904E000, v23, (os_log_type_t)v11, "Renewing HLS key for episode adam id:%lld", (uint8_t *)v33, 0xCu);
        v34 = v33;
        v20 = v37;
        MEMORY[0x1AF41411C](v34, -1, -1);
        v22 = v30;
      }
      else
      {

        v22 = v31;
        v23 = v30;
      }

      v39(v42, v5);
      ++v21;
      if (v26 == v6)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_21:
    swift_once();
  }
  v20 = v37;
  swift_bridgeObjectRetain();
  v6 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v6)
    goto LABEL_9;
  return swift_bridgeObjectRelease();
}

void sub_1A926D074(uint64_t a1, unint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  int v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  int v45;
  void *v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t aBlock[6];

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = sub_1A93F7698();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v44 - v16;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if ((uint64_t)v18 > a1)
    {
LABEL_3:
      if ((a2 & 0xC000000000000001) == 0)
      {
        if (a1 < 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
        {
          v19 = *(id *)(a2 + 8 * a1 + 32);
          goto LABEL_7;
        }
        __break(1u);
        goto LABEL_24;
      }
      v19 = (id)MEMORY[0x1AF4129DC](a1, a2, v15);
LABEL_7:
      v18 = v19;
      v48 = a4;
      v49 = v11;
      v47 = a3;
      if (qword_1ED2A42E8 == -1)
      {
LABEL_8:
        v20 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A42C8);
        swift_beginAccess();
        v21 = v49;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v17, v20, v10);
        v22 = v18;
        v23 = sub_1A93F7674();
        v24 = sub_1A93F87B4();
        if (os_log_type_enabled(v23, (os_log_type_t)v24))
        {
          v45 = v24;
          v46 = v5;
          v25 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          aBlock[0] = v44;
          *(_DWORD *)v25 = 136315138;
          v26 = objc_msgSend(v22, sel_contentAdamId);
          if (v26)
          {
            v27 = v26;
            v28 = sub_1A93F8040();
            v30 = v29;

          }
          else
          {
            v28 = 0;
            v30 = 0xE000000000000000;
          }
          v51 = sub_1A906436C(v28, v30, aBlock);
          sub_1A93F8AA8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v23, (os_log_type_t)v45, "[Key Loading] Starting from Key RenewalManager for episode adam id %s", v25, 0xCu);
          v32 = v44;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v32, -1, -1);
          MEMORY[0x1AF41411C](v25, -1, -1);

          (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v10);
          v31 = v48;
          v5 = v46;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v10);
          v31 = v48;
        }
        v33 = sub_1A92669A8();
        v34 = (_QWORD *)swift_allocObject();
        v34[2] = v22;
        v34[3] = v5;
        v34[4] = a1;
        v34[5] = a2;
        v34[6] = v47;
        v34[7] = v31;
        v34[8] = ObjectType;
        aBlock[4] = (uint64_t)sub_1A9271E10;
        aBlock[5] = (uint64_t)v34;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1A90BF160;
        aBlock[3] = (uint64_t)&block_descriptor_39_0;
        v35 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        v36 = v22;
        v37 = v5;
        swift_retain();
        swift_release();
        objc_msgSend(v33, sel_startKeyLoadingProcessWithKeyRequestData_isRenewal_completion_, v36, 1, v35);
        _Block_release(v35);

        return;
      }
LABEL_24:
      swift_once();
      goto LABEL_8;
    }
  }
  else
  {
    v18 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v18 > a1)
      goto LABEL_3;
  }
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v38 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v38, v10);
  v39 = sub_1A93F7674();
  v40 = sub_1A93F87B4();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = v11;
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_1A904E000, v39, v40, "Renewals ended. Unlocking renewal.", v42, 2u);
    v43 = v42;
    v11 = v41;
    MEMORY[0x1AF41411C](v43, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *((_BYTE *)v5 + OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock) = 0;
  sub_1A9268368(0, 0);
  sub_1A9266640(a2);
  a3();
  swift_bridgeObjectRelease();
}

uint64_t sub_1A926D5A8(void (*a1)(char *, uint64_t), void *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  id v37;
  void (*v38)(char *, uint64_t);
  id v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  void *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  id v65;
  NSObject *v66;
  int v67;
  uint8_t *v68;
  id v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  _QWORD *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  char *v81;
  char *v82;
  void (*v84)(char *, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t aBlock[6];

  v94 = a7;
  v92 = a6;
  v93 = a5;
  v91 = a4;
  v100 = a3;
  v9 = sub_1A93F7D58();
  v99 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v98 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v96 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  MEMORY[0x1E0C80A78](v11);
  v95 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F7698();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v84 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v84 - v20;
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v90 = v22;
  v89 = v23;
  v23(v21, v22, v13);
  v24 = a2;
  v25 = sub_1A93F7674();
  v26 = sub_1A93F87B4();
  if (os_log_type_enabled(v25, v26))
  {
    v86 = v18;
    v87 = v13;
    v84 = a1;
    v88 = v9;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = objc_msgSend(v24, sel_contentAdamId);
    if (v29)
    {
      v30 = v29;
      v31 = sub_1A93F8040();
      v33 = v32;

    }
    else
    {
      v31 = 0;
      v33 = 0xE000000000000000;
    }
    v101 = sub_1A906436C(v31, v33, aBlock);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v25, v26, "[Key Loading] Ending from Key RenewalManager for episode adam id %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v28, -1, -1);
    MEMORY[0x1AF41411C](v27, -1, -1);

    v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v13 = v87;
    v34(v21, v87);
    v35 = v88;
    a1 = v84;
    v18 = v86;
    if (!v84)
      goto LABEL_32;
LABEL_10:
    v89(v18, v90, v13);
    v36 = a1;
    v37 = v24;
    v38 = a1;
    v39 = v37;
    v40 = a1;
    v41 = v18;
    v42 = sub_1A93F7674();
    v43 = sub_1A93F879C();
    v44 = os_log_type_enabled(v42, v43);
    v84 = v34;
    if (v44)
    {
      v86 = v41;
      v87 = v13;
      v45 = a1;
      v88 = v35;
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      aBlock[0] = v47;
      *(_DWORD *)v46 = 136315394;
      v48 = objc_msgSend(v39, sel_contentAdamId);
      if (v48)
      {
        v49 = v48;
        v50 = sub_1A93F8040();
        v52 = v51;

      }
      else
      {
        v50 = 0;
        v52 = 0xE000000000000000;
      }
      v101 = sub_1A906436C(v50, v52, aBlock);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      swift_getErrorValue();
      v53 = sub_1A93F927C();
      v101 = sub_1A906436C(v53, v54, aBlock);
      a1 = v45;
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v42, v43, "Failed to renew %s with error %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v47, -1, -1);
      MEMORY[0x1AF41411C](v46, -1, -1);

      v13 = v87;
      v84(v86, v87);
      v35 = v88;
    }
    else
    {

      v34(v41, v13);
    }
    v55 = a1;
    v56 = (void *)sub_1A93F711C();
    v57 = objc_msgSend(v39, sel_contentAdamId);
    if (!v57)
      goto LABEL_31;
    v58 = v57;
    v59 = objc_msgSend(v56, sel_domain);
    v60 = sub_1A93F8040();
    v62 = v61;

    if (v60 == 0xD000000000000036 && v62 == 0x80000001A9449140)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      if ((v63 & 1) == 0)
      {
LABEL_30:

LABEL_31:
        goto LABEL_32;
      }
    }
    if (objc_msgSend(v56, sel_code, v84) == (id)-1002)
    {
      v64 = v85;
      v89(v85, v90, v13);
      v65 = v39;
      v66 = sub_1A93F7674();
      v67 = sub_1A93F879C();
      if (os_log_type_enabled(v66, (os_log_type_t)v67))
      {
        LODWORD(v90) = v67;
        v88 = v35;
        v68 = (uint8_t *)swift_slowAlloc();
        v89 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        aBlock[0] = (uint64_t)v89;
        *(_DWORD *)v68 = 136315138;
        v69 = objc_msgSend(v65, sel_contentAdamId);
        if (v69)
        {
          v70 = v69;
          v71 = sub_1A93F8040();
          v73 = v72;

        }
        else
        {
          v71 = 0;
          v73 = 0xE000000000000000;
        }
        v101 = sub_1A906436C(v71, v73, aBlock);
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v66, (os_log_type_t)v90, "Removing download and key for episode %s without entitlement.", v68, 0xCu);
        v74 = v89;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v74, -1, -1);
        MEMORY[0x1AF41411C](v68, -1, -1);

        v84(v85, v13);
        v35 = v88;
      }
      else
      {

        v84(v64, v13);
      }
      if (*(_QWORD *)&v100[OBJC_IVAR___MTSecureDownloadRenewalManager_delegate])
      {
        objc_msgSend((id)swift_unknownObjectRetain(), sel_removeDownloadOf_, v58);

        swift_unknownObjectRelease();
        goto LABEL_32;
      }
    }
    goto LABEL_30;
  }

  v34 = *(void (**)(char *, uint64_t))(v14 + 8);
  v34(v21, v13);
  v35 = v9;
  if (a1)
    goto LABEL_10;
LABEL_32:
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v75 = (_QWORD *)swift_allocObject();
  v76 = v100;
  v77 = v91;
  v75[2] = v100;
  v75[3] = v77;
  v78 = v92;
  v75[4] = v93;
  v75[5] = v78;
  v75[6] = v94;
  aBlock[4] = (uint64_t)sub_1A9271E58;
  aBlock[5] = (uint64_t)v75;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_45_0;
  v79 = _Block_copy(aBlock);
  v80 = v76;
  swift_bridgeObjectRetain();
  swift_retain();
  v81 = v95;
  sub_1A93F7D88();
  v101 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v82 = v98;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v81, v82, v79);
  _Block_release(v79);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v82, v35);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v81, v97);
  return swift_release();
}

void sub_1A926E04C(void *a1, uint8_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __CFString *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  __CFString *v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  int64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void (*v79)(char *, uint64_t);
  __int128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint8_t *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint8_t *v97;
  char *v98;
  __int128 v99;
  char *v100;
  char *v101;
  void *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;

  v97 = a2;
  v103 = sub_1A93F7698();
  v3 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v100 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v101 = (char *)&v95 - v6;
  MEMORY[0x1E0C80A78](v7);
  v98 = (char *)&v95 - v8;
  v9 = (void *)objc_opt_self();
  v10 = CFSTR("MTOfflineKeyData");
  v11 = objc_msgSend(v9, sel_truePredicate);
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = (void *)sub_1A93F82F8();
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v14 = swift_allocObject();
  v104 = xmmword_1A9405520;
  *(_OWORD *)(v14 + 16) = xmmword_1A9405520;
  v15 = sub_1A93F8040();
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  v17 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v102 = a1;
  v18 = objc_msgSend(a1, sel_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_, v10, v11, v13, v17, 0);

  if (!v18)
  {
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  v19 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
  v20 = sub_1A93F8310();

  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v96 = v19;
    v22 = v3;
    v107 = v12;
    sub_1A929E7F0(0, v21, 0);
    v23 = 0;
    v24 = v107;
    do
    {
      v25 = *(_QWORD *)(v20 + 8 * v23 + 32);
      v26 = sub_1A93F8040();
      v28 = v27;
      if (*(_QWORD *)(v25 + 16))
      {
        v29 = v26;
        swift_bridgeObjectRetain();
        v30 = sub_1A9094640(v29, v28);
        if ((v31 & 1) != 0)
        {
          sub_1A906443C(*(_QWORD *)(v25 + 56) + 32 * v30, (uint64_t)&v108);
        }
        else
        {
          v108 = 0u;
          v109 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v108 = 0u;
        v109 = 0u;
      }
      swift_bridgeObjectRelease();
      v107 = v24;
      v33 = *(_QWORD *)(v24 + 16);
      v32 = *(_QWORD *)(v24 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1A929E7F0(v32 > 1, v33 + 1, 1);
        v24 = v107;
      }
      ++v23;
      *(_QWORD *)(v24 + 16) = v33 + 1;
      sub_1A9062F08((uint64_t)&v108, v24 + 32 * v33 + 32, qword_1ED2AC800);
    }
    while (v21 != v23);
    swift_bridgeObjectRelease();
    v3 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v34 = objc_msgSend((id)objc_opt_self(), sel_predicateForDownloaded_excludeHidden_, 0, 0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1A9405950;
  v36 = sub_1A93F8040();
  v38 = v37;
  v39 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v35 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v35 + 32) = v36;
  *(_QWORD *)(v35 + 40) = v38;
  *(_QWORD *)(v35 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA190);
  *(_QWORD *)(v35 + 104) = sub_1A9066D74(&qword_1ED2AA198, &qword_1ED2AA190, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v35 + 72) = v24;
  v40 = (void *)sub_1A93F8754();
  v41 = objc_msgSend(v34, sel_AND_, v40);

  v42 = CFSTR("MTEpisode");
  v43 = v41;
  v44 = MEMORY[0x1E0DEE9D8];
  v45 = (void *)sub_1A93F82F8();
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v104;
  v47 = sub_1A93F8040();
  *(_QWORD *)(v46 + 56) = v39;
  *(_QWORD *)(v46 + 32) = v47;
  *(_QWORD *)(v46 + 40) = v48;
  v49 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v102, sel_objectDictionariesInEntity_predicate_sortDescriptors_propertiesToFetch_includeObjectId_, v42, v43, v45, v49, 0);

  if (!v50)
    goto LABEL_51;
  v96 = v43;
  v51 = v97 + 16;
  v52 = sub_1A93F8310();

  v53 = *(_QWORD *)(v52 + 16);
  *(_QWORD *)&v99 = v3;
  if (v53)
  {
    v54 = v51;
    v107 = v44;
    sub_1A929E7F0(0, v53, 0);
    v55 = 0;
    v56 = v107;
    do
    {
      v57 = *(_QWORD *)(v52 + 8 * v55 + 32);
      v58 = sub_1A93F8040();
      v60 = v59;
      if (*(_QWORD *)(v57 + 16))
      {
        v61 = v58;
        swift_bridgeObjectRetain();
        v62 = sub_1A9094640(v61, v60);
        if ((v63 & 1) != 0)
        {
          sub_1A906443C(*(_QWORD *)(v57 + 56) + 32 * v62, (uint64_t)&v108);
        }
        else
        {
          v108 = 0u;
          v109 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v108 = 0u;
        v109 = 0u;
      }
      swift_bridgeObjectRelease();
      v107 = v56;
      v65 = *(_QWORD *)(v56 + 16);
      v64 = *(_QWORD *)(v56 + 24);
      if (v65 >= v64 >> 1)
      {
        sub_1A929E7F0(v64 > 1, v65 + 1, 1);
        v56 = v107;
      }
      ++v55;
      *(_QWORD *)(v56 + 16) = v65 + 1;
      sub_1A9062F08((uint64_t)&v108, v56 + 32 * v65 + 32, qword_1ED2AC800);
    }
    while (v53 != v55);
    swift_bridgeObjectRelease();
    v51 = v54;
    v3 = v99;
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = MEMORY[0x1E0DEE9D8];
  }
  v66 = *(_QWORD *)(v56 + 16);
  swift_beginAccess();
  *v51 = v66;
  v67 = v103;
  v68 = v98;
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v69 = __swift_project_value_buffer(v67, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v105 = v69;
  *(_QWORD *)&v104 = v70;
  v70(v68, v69, v67);
  swift_bridgeObjectRetain_n();
  v71 = sub_1A93F7674();
  v72 = sub_1A93F87B4();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc();
    *(_QWORD *)&v108 = swift_slowAlloc();
    v74 = v108;
    *(_DWORD *)v73 = 136315138;
    v67 = v103;
    v97 = v73 + 4;
    swift_bridgeObjectRetain();
    v75 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
    v76 = MEMORY[0x1AF412034](v56, v75);
    v78 = v77;
    swift_bridgeObjectRelease();
    v106 = sub_1A906436C(v76, v78, (uint64_t *)&v108);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v71, v72, "Found orphaned keys for storeTrackIds: %s", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v74, -1, -1);
    MEMORY[0x1AF41411C](v73, -1, -1);

    v79 = *(void (**)(char *, uint64_t))(v99 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v79 = *(void (**)(char *, uint64_t))(v3 + 8);
  }
  v79(v68, v67);
  v81 = v101;
  v82 = *(_QWORD *)(v56 + 16);
  if (v82)
  {
    v83 = v56 + 32;
    *(_QWORD *)&v80 = 134217984;
    v99 = v80;
    while (1)
    {
      sub_1A9062170(v83, (uint64_t)&v108, qword_1ED2AC800);
      if (!*((_QWORD *)&v109 + 1))
        break;
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_43;
      v84 = v106;
      _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(v106, v102);
      if (v85)
      {
        v86 = v85;
        objc_msgSend(v85, sel_setPendingDeletion_, 1);

      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t))v104)(v100, v105, v67);
        v91 = sub_1A93F7674();
        v92 = sub_1A93F87B4();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = swift_slowAlloc();
          *(_DWORD *)v93 = v99;
          *(_QWORD *)(v93 + 4) = v84;
          _os_log_impl(&dword_1A904E000, v91, v92, "Did not locate orphaned key data for storeTrackId %lld", (uint8_t *)v93, 0xCu);
          v94 = v93;
          v67 = v103;
          MEMORY[0x1AF41411C](v94, -1, -1);
        }

        v79(v100, v67);
      }
      v81 = v101;
LABEL_37:
      v83 += 32;
      if (!--v82)
        goto LABEL_49;
    }
    sub_1A905FD54((uint64_t)&v108, qword_1ED2AC800);
LABEL_43:
    ((void (*)(char *, uint64_t, uint64_t))v104)(v81, v105, v67);
    v87 = sub_1A93F7674();
    v88 = sub_1A93F879C();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v89 = 0;
      _os_log_impl(&dword_1A904E000, v87, v88, "Found orphaned key with invalid storeTrackId type", v89, 2u);
      v90 = v89;
      v67 = v103;
      MEMORY[0x1AF41411C](v90, -1, -1);
    }

    v79(v81, v67);
    goto LABEL_37;
  }
LABEL_49:

  swift_bridgeObjectRelease();
}

id SecureDownloadRenewalManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureDownloadRenewalManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A926EB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1A93F73E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1A93F7FA4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1A9066CA8((unint64_t *)&unk_1EEABC520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = sub_1A93F8004();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A9237C3C();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1A926FC04(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

double sub_1A926EDA4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  double result;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  _BYTE v47[40];
  _BYTE v48[16];
  uint64_t v49;
  _BYTE v50[16];
  uint64_t v51;
  _BYTE v52[8];
  uint64_t v53;
  unint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  _BYTE v57[8];
  unint64_t v58;

  v3 = v2;
  v6 = *v2;
  sub_1A93F92DC();
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = *((unsigned __int8 *)a1 + 24);
  swift_bridgeObjectRetain();
  v42 = v8;
  v43 = v7;
  sub_1A93F7FBC();
  v40 = v10;
  sub_1A93F92F4();
  if (v10 != 1)
    sub_1A93F930C();
  sub_1A9094604((uint64_t)(a1 + 4), (uint64_t)v47);
  sub_1A9094604((uint64_t)v47, (uint64_t)v57);
  v37 = v3;
  v38 = a2;
  v39 = v9;
  if (v58 > 2)
  {
    sub_1A93F92E8();
    sub_1A93F92F4();
    sub_1A93F7FBC();
    sub_1A93F92F4();
    sub_1A93F930C();
  }
  else
  {
    sub_1A93F92E8();
  }
  v11 = sub_1A93F9324();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  v14 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v38 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(v38 + 32) = 0u;
    *(_OWORD *)(v38 + 48) = 0u;
    *(_OWORD *)v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    return result;
  }
  v41 = ~v12;
  v15 = *(_QWORD *)(v6 + 48);
  while (1)
  {
    v16 = v15 + 72 * v13;
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_BYTE *)(v16 + 24);
    v19 = *(_QWORD *)(v16 + 32);
    v20 = *(_QWORD *)(v16 + 40);
    v21 = *(_QWORD *)(v16 + 48);
    v22 = *(_QWORD *)(v16 + 56);
    v23 = *(_QWORD *)(v16 + 64);
    v24 = *(_QWORD *)v16 == v43 && *(_QWORD *)(v16 + 8) == v42;
    if (!v24 && (sub_1A93F90C0() & 1) == 0)
      goto LABEL_9;
    if ((v18 & 1) != 0)
    {
      if (!v40)
        goto LABEL_9;
    }
    else
    {
      v25 = v40;
      if (v17 != v39)
        v25 = 1;
      if ((v25 & 1) != 0)
        goto LABEL_9;
    }
    if (!v21)
    {
      sub_1A9094604((uint64_t)v47, (uint64_t)v48);
      if (!v49)
        goto LABEL_37;
      goto LABEL_9;
    }
    if (v21 != 1)
      break;
    sub_1A9094604((uint64_t)v47, (uint64_t)v50);
    if (v51 == 1)
      goto LABEL_37;
LABEL_9:
    v13 = (v13 + 1) & v41;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_40;
  }
  if (v21 == 2)
  {
    sub_1A9094604((uint64_t)v47, (uint64_t)v45);
    if (v46 == 2)
      goto LABEL_37;
    goto LABEL_9;
  }
  sub_1A9094604((uint64_t)v47, (uint64_t)v52);
  if (v54 < 3 || ((v19 & 1) == 0) == v52[0])
    goto LABEL_9;
  v26 = v55;
  v27 = v56;
  v28 = v20 == v53 && v21 == v54;
  if (!v28 && (sub_1A93F90C0() & 1) == 0 || ((v22 ^ v26) & 1) != 0 || v23 != v27)
    goto LABEL_9;
LABEL_37:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30 = *v37;
  v44 = *v37;
  *v37 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A9237E60();
    v30 = v44;
  }
  v31 = *(_QWORD *)(v30 + 48) + 72 * v13;
  v32 = *(_QWORD *)(v31 + 16);
  v33 = *(_BYTE *)(v31 + 24);
  v34 = *(_QWORD *)(v31 + 64);
  *(_OWORD *)v38 = *(_OWORD *)v31;
  *(_QWORD *)(v38 + 16) = v32;
  *(_BYTE *)(v38 + 24) = v33;
  v35 = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v38 + 48) = v35;
  *(_QWORD *)(v38 + 64) = v34;
  sub_1A926FE80(v13);
  *v37 = v44;
  swift_bridgeObjectRelease();
  return result;
}

void sub_1A926F140(uint64_t a1, __int16 a2)
{
  char v2;
  uint64_t v3;

  v2 = a2;
  v3 = HIBYTE(a2);
  sub_1A93F92DC();
  sub_1A93F92F4();
  if ((v2 & 1) == 0)
    sub_1A93F930C();
  __asm { BR              X9 }
}

uint64_t sub_1A926F1EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;

  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  v3 = sub_1A93F9324();
  v4 = -1 << *(_BYTE *)(v0 + 32);
  for (i = v3 & ~v4; ((*(_QWORD *)(v0 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & ~v4)
  {
    v6 = *(_QWORD *)(v0 + 48) + 16 * i;
    if ((*(_BYTE *)(v6 + 8) & 1) != 0)
    {
      if ((v1 & 1) != 0)
        goto LABEL_9;
    }
    else if ((v1 & 1) == 0 && *(_QWORD *)v6 == v2)
    {
LABEL_9:
      __asm { BR              X9 }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A926F4E0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1A93F8BEC();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1A926FA6C();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1A93F8A30();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1A93F8A3C();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1A93F8A3C();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A92385FC();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1A92703F4(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A926F6B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_1A93F92D0();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A9237AA8();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1A9270594(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A926F7BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1A93F92DC();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  v6 = sub_1A93F9324();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1A93F90C0() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1A93F90C0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A9238084();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1A9270718(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A926F948(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *v1;
  sub_1A93F92DC();
  sub_1A93F930C();
  v4 = sub_1A93F9324();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v7 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v7 + 8 * v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v7 + 8 * v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v13 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A9237768();
    v10 = v13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_1A92708DC(v6);
  *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1A926FA6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1A93F8BBC();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1A9328FF0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1A93F8A30();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1A93F8A3C();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1A92703F4(v7);
      if ((sub_1A93F8A3C() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1A93F8A3C();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1A926FC04(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = sub_1A93F73E0();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v24 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_1A93F8B68();
    v26 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v27 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
      do
      {
        v14 = v13 * v9;
        v25(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        sub_1A9066CA8((unint64_t *)&qword_1ED2A1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v15 = sub_1A93F7FA4();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        v19 = v13 * a1;
        if (v13 * a1 < v14 || *(_QWORD *)(v6 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v26 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v26 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v24;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
}

unint64_t sub_1A926FE80(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v26 = (v8 + 1) & v7;
      v27 = v7;
      v24 = v3;
      v25 = v4;
      do
      {
        v28 = v2;
        v9 = *(_QWORD *)(v3 + 48) + 72 * v6;
        v10 = *(unsigned __int8 *)(v9 + 24);
        v11 = *(_QWORD *)(v9 + 32);
        v12 = *(_QWORD *)(v9 + 40);
        v13 = *(_QWORD *)(v9 + 48);
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        v29 = v11;
        sub_1A9094654(v11, v12, v13);
        sub_1A93F7FBC();
        sub_1A93F92F4();
        if (v10 != 1)
          sub_1A93F930C();
        v3 = v24;
        v4 = v25;
        v14 = v12;
        if (v13)
        {
          v15 = v27;
          v2 = v28;
          if (v13 == 1 || v13 == 2)
          {
            sub_1A93F92E8();
          }
          else
          {
            sub_1A93F92E8();
            sub_1A93F92F4();
            sub_1A93F7FBC();
            sub_1A93F92F4();
            sub_1A93F930C();
          }
        }
        else
        {
          sub_1A93F92E8();
          v15 = v27;
          v2 = v28;
        }
        v16 = sub_1A93F9324();
        swift_bridgeObjectRelease();
        sub_1A9094668(v29, v14, v13);
        v17 = v16 & v15;
        if (v2 >= (uint64_t)v26)
        {
          if (v17 < v26)
            goto LABEL_5;
        }
        else if (v17 >= v26)
        {
          goto LABEL_20;
        }
        if (v2 >= (uint64_t)v17)
        {
LABEL_20:
          v18 = *(_QWORD *)(v24 + 48);
          v19 = (char *)(v18 + 72 * v2);
          v20 = (char *)(v18 + 72 * v6);
          if (v2 != v6 || (v2 = v6, v19 >= v20 + 72))
          {
            memmove(v19, v20, 0x48uLL);
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v15;
      }
      while (((*(_QWORD *)(v25 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A927016C(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(_QWORD *)(v3 + 48) + 16 * v5;
      v7 = *(unsigned __int8 *)(v6 + 8);
      v8 = *(unsigned __int8 *)(v6 + 9);
      sub_1A93F92DC();
      sub_1A93F92F4();
      if (v7 != 1)
        sub_1A93F930C();
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1A92703E4);
  }
  *(_QWORD *)(v3 + 16) = v11;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1A92703F4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1A93F8A30();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A9270594(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_1A93F92D0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A9270718(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1A93F92DC();
        swift_bridgeObjectRetain();
        sub_1A93F7FBC();
        v10 = sub_1A93F9324();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1A92708DC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A93F8B68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1A93F92DC();
        sub_1A93F930C();
        v10 = sub_1A93F9324() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1A9270A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_1A926F140(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10), *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 * v10 + 8) | (*(unsigned __int8 *)(*(_QWORD *)(a1 + 48)+ 16 * v10+ 9) << 8));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void sub_1A9270C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1A93F8BBC())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1A93F8B8C();
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
      sub_1A90C0B34((unint64_t *)&unk_1ED2A41C0, (unint64_t *)&qword_1ED2A41B8, 0x1E0C97B90, MEMORY[0x1E0DEFCF8]);
      sub_1A93F8670();
      a1 = v20;
      v18 = v21;
      v3 = v22;
      v4 = v23;
      v5 = v24;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v5)
      {
        v10 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v4 << 6);
        v12 = v4;
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9)
          goto LABEL_36;
        v15 = *(_QWORD *)(v18 + 8 * v14);
        v12 = v4 + 1;
        if (!v15)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v9)
            goto LABEL_36;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v9)
              goto LABEL_36;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v9)
                goto LABEL_36;
              v15 = *(_QWORD *)(v18 + 8 * v12);
              if (!v15)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v9)
                  goto LABEL_36;
                v15 = *(_QWORD *)(v18 + 8 * v12);
                if (!v15)
                {
                  v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    v15 = *(_QWORD *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1A9120240();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_36;
      while (1)
      {
        v17 = (void *)sub_1A926F4E0(v13);

        v4 = v12;
        v5 = v10;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_1A93F8BE0())
        {
          sub_1A9072534(0, (unint64_t *)&qword_1ED2A41B8);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v13 = v19;
          swift_unknownObjectRelease();
          v12 = v4;
          v10 = v5;
          if (v19)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
}

uint64_t sub_1A9270EFC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_1A926F6B4(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A927105C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A926F7BC(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A92711F0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_1A926F948(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

BOOL sub_1A9271350(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 8) & 1) == 0;
}

uint64_t sub_1A9271360@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 8) & 1) != 0)
    __break(1u);
  else
    *a2 = *(_QWORD *)result;
  return result;
}

uint64_t sub_1A9271378(uint64_t a1, uint64_t *a2, void (*a3)(double), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a2;
  v7 = *(_QWORD *)(*a2 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500) - 8)
                          + 80);
  v9 = v6 + ((v8 + 32) & ~v8);
  v10 = swift_bridgeObjectRetain();
  sub_1A926BC70(v10, v9, v7 != 0, (2 * v7) | 1, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9271414()
{
  return swift_deallocObject();
}

uint64_t sub_1A9271424()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A9271450()
{
  uint64_t v0;

  sub_1A926E04C(*(void **)(v0 + 16), *(uint8_t **)(v0 + 24));
}

uint64_t sub_1A9271464()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9271498()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9267450);
}

void _s18PodcastsFoundation28SecureDownloadRenewalManagerC16inContextKeyData3for3ctxSo09MTOfflineiJ0CSgs5Int64V_So015NSManagedObjectH0CtFZ_0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __CFString *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, a1);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A9405950;
  v5 = sub_1A93F8040();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 96) = sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  *(_QWORD *)(v4 + 104) = sub_1A90C0B34((unint64_t *)&qword_1ED2A4240, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, MEMORY[0x1E0DEFD08]);
  *(_QWORD *)(v4 + 72) = v3;
  v8 = CFSTR("MTOfflineKeyData");
  v9 = v3;
  v10 = (void *)sub_1A93F8754();
  v11 = (void *)sub_1A93F82F8();
  v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, v8, v10, v11);

  if (!v12)
    goto LABEL_11;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v13 = sub_1A93F8310();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_4;
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)MEMORY[0x1AF4129DC](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  swift_bridgeObjectRelease();

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())

}

uint64_t sub_1A927172C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9271770()
{
  uint64_t v0;

  return sub_1A926781C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A9271780()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92717BC()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9267DEC);
}

uint64_t sub_1A92717C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __CFString *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;

  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A9405520;
  v3 = sub_1A93F8040();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A90A92DC();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = CFSTR("MTOfflineKeyData");
  v7 = (void *)sub_1A93F8754();
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = (void *)sub_1A93F82F8();
  v10 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v6, v7, v9);

  if (v10)
  {
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v11 = sub_1A93F8310();

    v12 = sub_1A9261650(v11);
    swift_bridgeObjectRelease();
    if (v12)
      return v12;
  }
  return v8;
}

void sub_1A9271940(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  _BYTE *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];
  objc_super v11;

  if (os_feature_enabled_download_consistency_checks())
  {
    if (qword_1ED2A7888 == -1)
    {
      if ((_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0() & 1) != 0)
        return;
    }
    else
    {
      swift_once();
      if ((_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0() & 1) != 0)
        return;
    }
    v4 = (objc_class *)type metadata accessor for BugReport();
    v5 = objc_allocWithZone(v4);
    v5[OBJC_IVAR___PFBugReport_system] = 1;
    v5[OBJC_IVAR___PFBugReport_errorKind] = 2;
    v5[OBJC_IVAR___PFBugReport_forceSubmissionAttempt] = 0;
    v11.receiver = v5;
    v11.super_class = v4;
    v6 = objc_msgSendSuper2(&v11, sel_init);
    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    v10[4] = sub_1A9273D24;
    v10[5] = v8;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1A93F2160;
    v10[3] = &block_descriptor_142;
    v9 = _Block_copy(v10);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_submitBugReport_userInfo_withMaximumSubmissionCadence_, v6, v9, 3600.0);
    _Block_release(v9);
    swift_release();

  }
}

uint64_t sub_1A9271AF4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v17[0] = qword_1ED2A34B0;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1A9273E9C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_168;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  sub_1A90858C0(a1);
  sub_1A93F7D88();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t method lookup function for SecureDownloadRenewalManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.__allocating_init(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletionOfOrphanedKeys(completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletion(of:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.requestSecureDeletionOfAllKeys(completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.updateDRMKeysForDownloads()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SecureDownloadRenewalManager.updateDRMKeysForDownloads(urlProtocolDelegate:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t sub_1A9271DD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9271E10(void (*a1)(char *, uint64_t))
{
  uint64_t v1;

  return sub_1A926D5A8(a1, *(void **)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1A9271E24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9271E58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[3];
  result = v1 + 1;
  if (!__OFADD__(v1, 1))
    return sub_1A926D074(result, v0[4], v0[5], v0[6]);
  __break(1u);
  return result;
}

uint64_t sub_1A9271E90(_BYTE *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  id v15;
  void *v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  unint64_t v29;
  _QWORD aBlock[6];
  unint64_t v32;

  v10 = sub_1A93F7698();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  if (a1[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] == 1)
  {
    v15 = a2;
    swift_bridgeObjectRetain();
    sub_1A90858C0(a4);
    sub_1A9269F48(MEMORY[0x1E0DEE9D8], v15, a3, a4, a5);
    return swift_release();
  }
  a1[OBJC_IVAR___MTSecureDownloadRenewalManager_renewalLock] = 1;
  v32 = MEMORY[0x1E0DEE9D8];
  v17 = (void *)objc_opt_self();
  v18 = a2;
  swift_bridgeObjectRetain();
  sub_1A90858C0(a4);
  v19 = objc_msgSend(v17, sel_sharedInstance);
  v20 = objc_msgSend(v19, sel_mainOrPrivateContext);

  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = v20;
  v21[4] = &v32;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1A9273ED4;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1A91D7850;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_184;
  v23 = _Block_copy(aBlock);
  a1;
  v24 = v20;
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_performBlockAndWait_, v23);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (qword_1ED2A42E8 != -1)
LABEL_9:
    swift_once();
  v25 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
  v26 = sub_1A93F7674();
  v27 = sub_1A93F87B4();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1A904E000, v26, v27, "Renewals started.", v28, 2u);
    MEMORY[0x1AF41411C](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v32;
  swift_bridgeObjectRetain();
  sub_1A926D074(0, v29, (void (*)(void))sub_1A9273EC8, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1A927224C()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  sub_1A93F8040();
  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A9405950;
  v4 = sub_1A93F8040();
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v6;
  v7 = sub_1A93F8040();
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 64) = v7;
  *(_QWORD *)(v3 + 72) = v8;
  v9 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPropertiesToFetch_, v9);

  return v2;
}

uint64_t sub_1A9272378()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92723AC()
{
  uint64_t v0;

  return sub_1A926ACA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A92723B8(unint64_t a1)
{
  void *v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  _OWORD v30[2];
  id v31[4];
  uint64_t v32;
  char v33;
  uint64_t v34;

  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain_n();
  v3 = objc_msgSend(v2, sel_predicateForDRMKeyRequired);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  sub_1A90C0B34((unint64_t *)&qword_1ED2A9590, (unint64_t *)&qword_1ED2A4230, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
  swift_bridgeObjectRetain();
  result = sub_1A93F8628();
  v34 = result;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8E5C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    v14 = MEMORY[0x1E0DEA968];
    v15 = (void *)sub_1A93F85EC();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v2, sel_predicateForEpisodeStoreTrackIds_, v15);

    sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
    v17 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
    objc_msgSend(v17, sel_setResultType_, 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1A94055A0;
    v19 = sub_1A93F8040();
    *(_QWORD *)(v18 + 56) = v14;
    *(_QWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 40) = v20;
    v21 = sub_1A93F8040();
    *(_QWORD *)(v18 + 88) = v14;
    *(_QWORD *)(v18 + 64) = v21;
    *(_QWORD *)(v18 + 72) = v22;
    v23 = sub_1A93F8040();
    *(_QWORD *)(v18 + 120) = v14;
    *(_QWORD *)(v18 + 96) = v23;
    *(_QWORD *)(v18 + 104) = v24;
    v25 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setPropertiesToFetch_, v25);

    v26 = objc_msgSend(v16, "NOT");
    v27 = objc_msgSend(v3, sel_AND_, v26);

    objc_msgSend(v17, sel_setPredicate_, v27);
    swift_bridgeObjectRelease_n();

    return (uint64_t)v17;
  }
  if (v5 >= 1)
  {
    v28 = v2;
    v29 = v3;
    v6 = 0;
    v7 = a1 & 0xC000000000000001;
    v8 = a1;
    do
    {
      if (v7)
        v9 = (id)MEMORY[0x1AF4129DC](v6, a1);
      else
        v9 = *(id *)(a1 + 8 * v6 + 32);
      v10 = v9;
      *(_QWORD *)&v30[0] = sub_1A93F8040();
      *((_QWORD *)&v30[0] + 1) = v11;
      swift_bridgeObjectRetain();
      v12 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_1A93F9228());
      swift_unknownObjectRelease();
      if (v12)
      {
        sub_1A93F8B44();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v30, 0, sizeof(v30));
      }
      sub_1A9062F08((uint64_t)v30, (uint64_t)v31, qword_1ED2AC800);
      if (v31[3])
      {
        v13 = swift_dynamicCast();
        if ((v13 & 1) == 0)
          v32 = 0;
        v33 = v13 ^ 1;

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A905FD54((uint64_t)v31, qword_1ED2AC800);
        v32 = 0;
        v33 = 1;

      }
      a1 = v8;
      if ((v33 & 1) == 0)
      {
        sub_1A9327448(v31, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v32));

      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    v2 = v28;
    v3 = v29;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A927284C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9272878()
{
  uint64_t v0;

  return sub_1A926B500(*(void (**)(_QWORD, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A9272884()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92728A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  v5 = v0 + *(int *)(v1 + 48) + v3;
  v6 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A927297C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A926C094(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (***)(char *, char *, uint64_t))(v1 + 40), (uint64_t *)(v1 + v4), *(void **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A9272A00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v8 = sub_1A93F7D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v20[0] = qword_1ED2A34B0;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1A92733CC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_81_0;
  v17 = _Block_copy(aBlock);
  v18 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A93F7D88();
  v20[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A9272C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + *(int *)(v1 + 48) + v3;
  v6 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9272CFC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A9272FB8(a1, (_QWORD *)(v1 + v4), *(void **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A9272D6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v14 = sub_1A93F7D58();
  v27 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DB8();
  v25 = *(_QWORD *)(v17 - 8);
  v26 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A34C0 != -1)
    swift_once();
  v24[1] = qword_1ED2A34B0;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = a5;
  v20[7] = a6;
  v20[8] = a7;
  aBlock[4] = sub_1A9273AC0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_100;
  v21 = _Block_copy(aBlock);
  v22 = a1;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1A93F7D88();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v19, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v26);
  return swift_release();
}

uint64_t sub_1A9272FB8(void *a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v45[-v14];
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)&v45[-v17];
  MEMORY[0x1E0C80A78](v19);
  v22 = &v45[-v21];
  if (a1)
  {
    v50 = v20;
    v51 = a3;
    v52 = a4;
    v53 = a5;
    v54 = a6;
    v23 = a1;
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v24 = sub_1A93F7698();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED2A3EE0);
    v25 = *(int *)(v12 + 48);
    v26 = (char *)v22 + v25;
    v27 = (char *)a2 + v25;
    *v22 = *a2;
    v28 = sub_1A93F726C();
    v49 = *(_QWORD *)(v28 - 8);
    v48 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v48(v26, v27, v28);
    sub_1A9062170((uint64_t)v22, (uint64_t)v18, (uint64_t *)&unk_1EEABC500);
    sub_1A9062F08((uint64_t)v22, (uint64_t)v15, (uint64_t *)&unk_1EEABC500);
    v29 = a1;
    v30 = a1;
    v31 = sub_1A93F7674();
    v32 = sub_1A93F879C();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v46 = v33;
      v35 = v34;
      v36 = swift_slowAlloc();
      v47 = v36;
      *(_DWORD *)v35 = 141558531;
      v55 = 1752392040;
      v56 = v36;
      sub_1A93F8AA8();
      *(_WORD *)(v35 + 12) = 2049;
      v37 = *(int *)(v12 + 48);
      v38 = v50;
      v39 = (char *)v50 + v37;
      v40 = *v18;
      *v50 = *v18;
      v48((char *)v38 + v37, (char *)v18 + v37, v28);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v28);
      sub_1A905FD54((uint64_t)v18, (uint64_t *)&unk_1EEABC500);
      v55 = v40;
      sub_1A93F8AA8();
      sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1EEABC500);
      *(_WORD *)(v35 + 22) = 2082;
      swift_getErrorValue();
      v41 = sub_1A93F927C();
      v55 = sub_1A906436C(v41, v42, &v56);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v31, (os_log_type_t)v46, "Unable to load key for adamID: %{private,mask.hash}lld, with error: %{public}s.", (uint8_t *)v35, 0x20u);
      v43 = v47;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v43, -1, -1);
      MEMORY[0x1AF41411C](v35, -1, -1);

    }
    else
    {
      sub_1A905FD54((uint64_t)v18, (uint64_t *)&unk_1EEABC500);

      sub_1A905FD54((uint64_t)v15, (uint64_t *)&unk_1EEABC500);
    }
    a5 = v53;
    a6 = v54;
    a3 = v51;
    a4 = v52;
  }
  return sub_1A9272A00(a3, a4, a5, a6);
}

uint64_t sub_1A9273398()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92733CC()
{
  uint64_t v0;

  return sub_1A9271378(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), *(void (**)(double))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A92733DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  v5 = v0 + *(int *)(v1 + 48) + v3;
  v6 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1A92734B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1A926C5DC(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (***)(char *, char *, uint64_t))(v1 + 40), (uint64_t *)(v1 + v4), *(void **)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + v6 + 16), *(_QWORD *)(v1 + v6 + 24), *(_QWORD *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A9273544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + *(int *)(v1 + 48) + v3;
  v6 = sub_1A93F726C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9273610(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A9273698(a1, (_QWORD *)(v1 + v4), *(void **)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + v6 + 16), *(_QWORD *)(v1 + v6 + 24), *(_QWORD *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A9273698(void *a1, _QWORD *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE v47[4];
  int v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a3;
  v58 = a4;
  v59 = a9;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABC500);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v47[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)&v47[-v20];
  MEMORY[0x1E0C80A78](v22);
  v25 = &v47[-v24];
  if (a1)
  {
    v52 = v23;
    v53 = a5;
    v54 = a6;
    v55 = a7;
    v56 = a8;
    v26 = a1;
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v27 = sub_1A93F7698();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED2A3EE0);
    v28 = *(int *)(v15 + 48);
    v29 = (char *)v25 + v28;
    v30 = (char *)a2 + v28;
    *v25 = *a2;
    v31 = sub_1A93F726C();
    v51 = *(_QWORD *)(v31 - 8);
    v50 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v50(v29, v30, v31);
    sub_1A9062170((uint64_t)v25, (uint64_t)v21, (uint64_t *)&unk_1EEABC500);
    sub_1A9062F08((uint64_t)v25, (uint64_t)v18, (uint64_t *)&unk_1EEABC500);
    v32 = a1;
    v33 = a1;
    v34 = sub_1A93F7674();
    v35 = sub_1A93F879C();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v49 = v38;
      *(_DWORD *)v37 = 141558531;
      v60 = 1752392040;
      v61 = v38;
      sub_1A93F8AA8();
      *(_WORD *)(v37 + 12) = 2049;
      v48 = v36;
      v39 = *(int *)(v15 + 48);
      v40 = v52;
      v41 = (char *)v52 + v39;
      v42 = *v21;
      *v52 = *v21;
      v50((char *)v40 + v39, (char *)v21 + v39, v31);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v31);
      sub_1A905FD54((uint64_t)v21, (uint64_t *)&unk_1EEABC500);
      v60 = v42;
      sub_1A93F8AA8();
      sub_1A905FD54((uint64_t)v18, (uint64_t *)&unk_1EEABC500);
      *(_WORD *)(v37 + 22) = 2082;
      swift_getErrorValue();
      v43 = sub_1A93F927C();
      v60 = sub_1A906436C(v43, v44, &v61);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v34, (os_log_type_t)v48, "Unable to load key for adamID: %{private,mask.hash}lld, with error: %{public}s.", (uint8_t *)v37, 0x20u);
      v45 = v49;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v45, -1, -1);
      MEMORY[0x1AF41411C](v37, -1, -1);

    }
    else
    {
      sub_1A905FD54((uint64_t)v21, (uint64_t *)&unk_1EEABC500);

      sub_1A905FD54((uint64_t)v18, (uint64_t *)&unk_1EEABC500);
    }
    a7 = v55;
    a8 = v56;
    a5 = v53;
    a6 = v54;
  }
  return sub_1A9272D6C(v57, v58, a5, a6, a7, a8, v59);
}

uint64_t sub_1A9273A8C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9273AC0()
{
  uint64_t v0;

  return sub_1A926BFDC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1A9273AD4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9273B08()
{
  uint64_t *v0;

  return sub_1A926A590(v0[3], v0[4], v0[5]);
}

uint64_t sub_1A9273B30()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A9273B7C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *(*v4)(uint64_t *__return_ptr, uint64_t *);
  char v5;
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
  v5 = *((_BYTE *)a1 + 8);
  v6 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 88);
  v9 = *a1;
  v10 = v5;
  v6(&v8, &v9);
  result = v4(&v11, &v8);
  *a2 = v11;
  return result;
}

uint64_t sub_1A9273BE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9273C08()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A9273C34()
{
  uint64_t v0;

  return sub_1A92686EC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1A9273C40()
{
  return swift_deallocObject();
}

uint64_t sub_1A9273C50()
{
  return objectdestroy_123Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A9273C60(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9268C74(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A9273C70()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9273CB4()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A9268EC0);
}

uint64_t sub_1A9273CC0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9273CF4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A9269508(a1);
}

uint64_t sub_1A9273D00()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A9273D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A92697B8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A9273D2C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9273D60()
{
  return sub_1A912D1B4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A92698E0);
}

uint64_t sub_1A9273D6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A9273D94()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1A93F82F8();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_1A9273DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1A9094668(a5, a6, a7);
  }
  return result;
}

_QWORD *sub_1A9273E3C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  swift_bridgeObjectRelease();
  sub_1A9094668(v2, v3, v4);
  return a1;
}

uint64_t sub_1A9273E9C()
{
  uint64_t v0;

  return sub_1A9269C84(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A9273EAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9269CFC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A9273EB8()
{
  return objectdestroy_123Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A9273EC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A9269F48(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A9273ED4()
{
  uint64_t v0;

  return sub_1A926CBD0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1A9273EE0()
{
  return swift_deallocObject();
}

id sub_1A9273EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;

  v0 = sub_1A93F738C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F8040();
  sub_1A93F7380();
  v4 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1A93F7314();
  v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForDateKey_isLessThanDate_, v4, v5);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A9405950;
  v8 = sub_1A93F8040();
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1A90A92DC();
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  v13 = sub_1A93F8040();
  *(_QWORD *)(v7 + 96) = v11;
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 72) = v13;
  *(_QWORD *)(v7 + 80) = v14;
  v15 = (void *)sub_1A93F8754();
  v16 = objc_msgSend(v6, sel_AND_, v15);

  return v16;
}

uint64_t sub_1A92740BC(void *a1)
{
  id v2;
  __CFString *v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;

  v2 = sub_1A9273EF0();
  v3 = CFSTR("MTOfflineKeyData");
  v4 = v2;
  v5 = (void *)sub_1A93F82F8();
  v6 = objc_msgSend(a1, sel_objectsInEntity_predicate_sortDescriptors_, v3, v4, v5);

  if (!v6)
  {

LABEL_5:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v7 = sub_1A93F8310();

  v8 = sub_1A9261650(v7);
  swift_bridgeObjectRelease();

  if (!v8)
    goto LABEL_5;
  return v8;
}

uint64_t sub_1A92741BC()
{
  return objectdestroy_123Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_123Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  if (*(_QWORD *)(v1 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_1A9274220(uint64_t a1)
{
  uint64_t v1;

  sub_1A926A1AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1A9274268()
{
  uint64_t v0;

  sub_1A9268368(*(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A9274338@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_18;
  v4 = sub_1A912E634(3);
  if ((v5 & 1) == 0
    || (v6 = (unint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v4), (v7 = v6[1]) == 0)
    || ((v8 = *v6, swift_bridgeObjectRetain(), v9 = sub_1A931883C(v8, v7), swift_bridgeObjectRelease(), v9)
      ? (v10 = v9 == 1000000000000)
      : (v10 = 1),
        v10))
  {
    if (*(_QWORD *)(v3 + 16))
    {
      v11 = sub_1A912E634(8);
      if ((v12 & 1) != 0)
      {
        v13 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v11);
        v18 = v13[1];
        if (v18)
        {
          if (*(_QWORD *)(v3 + 16))
          {
            v9 = *v13;
            swift_bridgeObjectRetain();
            v14 = sub_1A912E634(5);
            if ((v15 & 1) != 0)
            {
              v16 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v14);
              v19 = *v16;
              v20 = v16[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              if (v20)
              {
                v21 = 1;
                goto LABEL_17;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
    }
LABEL_18:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    v21 = -1;
    goto LABEL_19;
  }
  result = swift_bridgeObjectRelease();
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
LABEL_17:
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v18;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v20;
LABEL_19:
  *(_BYTE *)(a2 + 32) = v21;
  return result;
}

PodcastsFoundation::URLTrackIdentifier __swiftcall UniversalEpisodeIdentifier.urlTrackIdentifier()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  void *v9;
  PodcastsFoundation::URLTrackIdentifier::Command v10;
  PodcastsFoundation::URLTrackIdentifier result;

  v2 = v0;
  v3 = *v1;
  if (*((_BYTE *)v1 + 32) == 1)
  {
    v5 = v1[2];
    v4 = v1[3];
    v6 = v1[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405950;
    *(_BYTE *)(inited + 32) = 8;
    *(_QWORD *)(inited + 40) = v3;
    *(_QWORD *)(inited + 48) = v6;
    *(_BYTE *)(inited + 56) = 5;
    *(_QWORD *)(inited + 64) = v5;
    *(_QWORD *)(inited + 72) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 3;
    sub_1A915997C();
    *(_QWORD *)(inited + 40) = sub_1A93F8B38();
    *(_QWORD *)(inited + 48) = v8;
  }
  v9 = (void *)sub_1A91131B0(inited);
  *(_QWORD *)v2 = v9;
  *(_BYTE *)(v2 + 8) = 4;
  result.arguments._rawValue = v9;
  result.command = v10;
  return result;
}

uint64_t sub_1A92745A0(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC578);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC580);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC588);
  v10 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9275330();
  sub_1A93F93D8();
  sub_1A9068BA8(v2, (uint64_t)&v23);
  v13 = v23;
  if ((v24 & 1) != 0)
  {
    LOBYTE(v25) = 1;
    sub_1A9275374();
    sub_1A93F8FAC();
    LOBYTE(v25) = 0;
    v15 = v20;
    v14 = v21;
    sub_1A93F9000();
    if (!v14)
    {
      LOBYTE(v25) = 1;
      sub_1A93F9000();
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  }
  else
  {
    LOBYTE(v25) = 0;
    sub_1A92753B8();
    v17 = v22;
    sub_1A93F8FAC();
    v25 = v13;
    sub_1A9210228();
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
}

uint64_t sub_1A9274820()
{
  sub_1A92753B8();
  return sub_1A93F945C();
}

uint64_t sub_1A9274848()
{
  sub_1A92753B8();
  return sub_1A93F9468();
}

uint64_t sub_1A9274870()
{
  _BYTE *v0;

  if (*v0)
    return 1684632935;
  else
    return 0x44496D616461;
}

uint64_t sub_1A92748A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A92753FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A92748C4()
{
  sub_1A9275330();
  return sub_1A93F945C();
}

uint64_t sub_1A92748EC()
{
  sub_1A9275330();
  return sub_1A93F9468();
}

uint64_t sub_1A9274914()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_1A9274930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A92754D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9274954()
{
  sub_1A9275374();
  return sub_1A93F945C();
}

uint64_t sub_1A927497C()
{
  sub_1A9275374();
  return sub_1A93F9468();
}

uint64_t sub_1A92749A4(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_1A9068BA8(a1, (uint64_t)v4);
  sub_1A9068BA8(a2, (uint64_t)v5);
  return sub_1A9274DCC(v4, v5) & 1;
}

uint64_t sub_1A92749EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_1A9275594(a1, (uint64_t *)v5);
  if (!v2)
    return sub_1A9068BA8(v5, a2);
  return result;
}

uint64_t sub_1A9274A30(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_1A9068BA8(v1, (uint64_t)v4);
  return sub_1A92745A0(a1);
}

uint64_t sub_1A9274A80()
{
  return 25705;
}

uint64_t sub_1A9274A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A9274B08()
{
  sub_1A9274F70();
  return sub_1A93F945C();
}

uint64_t sub_1A9274B30()
{
  sub_1A9274F70();
  return sub_1A93F9468();
}

uint64_t UniversalEpisodeIdentifier.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC538);
  v11 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9274F70();
  sub_1A93F93D8();
  v12 = v10;
  v13 = v7;
  v14 = v6;
  v15 = v8;
  sub_1A9274FB4();
  sub_1A93F9030();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v5, v3);
}

uint64_t UniversalEpisodeIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC550);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9274F70();
  sub_1A93F93C0();
  if (!v2)
  {
    sub_1A9274FF8();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 32) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A9274DA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UniversalEpisodeIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1A9274DB8(_QWORD *a1)
{
  return UniversalEpisodeIdentifier.encode(to:)(a1);
}

uint64_t sub_1A9274DCC(__int128 *a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v11;
  _QWORD v13[4];
  char v14;
  _QWORD v15[4];
  char v16;

  sub_1A9068BA8(a1, (uint64_t)v15);
  v3 = v15[0];
  if ((v16 & 1) == 0)
  {
    sub_1A9068BA8(a2, (uint64_t)v13);
    if ((v14 & 1) == 0)
    {
      v11 = v3 == v13[0];
      return v11 & 1;
    }
    goto LABEL_12;
  }
  v5 = v15[1];
  v4 = v15[2];
  v6 = v15[3];
  sub_1A9068BA8(a2, (uint64_t)v13);
  if (v14 != 1)
  {
LABEL_12:
    v11 = 0;
    return v11 & 1;
  }
  v7 = v13[2];
  v8 = v13[3];
  v9 = v3 == v13[0] && v5 == v13[1];
  if (v9 || (v10 = sub_1A93F90C0(), v11 = 0, (v10 & 1) != 0))
  {
    if (v4 == v7 && v6 == v8)
      v11 = 1;
    else
      v11 = sub_1A93F90C0();
  }
  return v11 & 1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;

  v3 = *a1;
  v4 = *a2;
  v5 = *((_BYTE *)a2 + 32);
  if (*((_BYTE *)a1 + 32) == 1)
  {
    if ((a2[4] & 1) == 0)
      return 0;
    v6 = a1[2];
    v7 = a1[3];
    v8 = a2[2];
    v9 = a2[3];
    v10 = v3 == v4 && a1[1] == a2[1];
    if (!v10 && (sub_1A93F90C0() & 1) == 0)
      return 0;
    v11 = v6 == v8 && v7 == v9;
    if (!v11 && (sub_1A93F90C0() & 1) == 0)
      return 0;
  }
  else
  {
    if (v3 != v4)
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1A9274F70()
{
  unint64_t result;

  result = qword_1EEABC540;
  if (!qword_1EEABC540)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416EB4, &type metadata for UniversalEpisodeIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC540);
  }
  return result;
}

unint64_t sub_1A9274FB4()
{
  unint64_t result;

  result = qword_1EEABC548;
  if (!qword_1EEABC548)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416E8C, &type metadata for UniversalEpisodeIdentifier.Identifier);
    atomic_store(result, (unint64_t *)&qword_1EEABC548);
  }
  return result;
}

unint64_t sub_1A9274FF8()
{
  unint64_t result;

  result = qword_1EEABC558;
  if (!qword_1EEABC558)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416E64, &type metadata for UniversalEpisodeIdentifier.Identifier);
    atomic_store(result, (unint64_t *)&qword_1EEABC558);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier()
{
  return &type metadata for UniversalEpisodeIdentifier;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwxx_0(uint64_t a1)
{
  return sub_1A912C470(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A912AC00(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A912AC00(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A912C470(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A912C470(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RSSFeedUpdater.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RSSFeedUpdater.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A9275220(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A9275228(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.CodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.CodingKeys;
}

unint64_t sub_1A927525C()
{
  unint64_t result;

  result = qword_1EEABC560;
  if (!qword_1EEABC560)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416E14, &type metadata for UniversalEpisodeIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC560);
  }
  return result;
}

unint64_t sub_1A92752A4()
{
  unint64_t result;

  result = qword_1EEABC568;
  if (!qword_1EEABC568)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416D84, &type metadata for UniversalEpisodeIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC568);
  }
  return result;
}

unint64_t sub_1A92752EC()
{
  unint64_t result;

  result = qword_1EEABC570;
  if (!qword_1EEABC570)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416DAC, &type metadata for UniversalEpisodeIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC570);
  }
  return result;
}

unint64_t sub_1A9275330()
{
  unint64_t result;

  result = qword_1EEABC590;
  if (!qword_1EEABC590)
  {
    result = MEMORY[0x1AF414014](&unk_1A94171F8, &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC590);
  }
  return result;
}

unint64_t sub_1A9275374()
{
  unint64_t result;

  result = qword_1EEABC598;
  if (!qword_1EEABC598)
  {
    result = MEMORY[0x1AF414014](&unk_1A94171A8, &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC598);
  }
  return result;
}

unint64_t sub_1A92753B8()
{
  unint64_t result;

  result = qword_1EEABC5A0;
  if (!qword_1EEABC5A0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417158, &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5A0);
  }
  return result;
}

uint64_t sub_1A92753FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D616461 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A92754D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A9275594@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v33 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC5A8);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC5B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC5B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A9275330();
  v13 = v38;
  sub_1A93F93C0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  v32 = v5;
  v14 = v4;
  v16 = v35;
  v15 = v36;
  v38 = v9;
  v17 = sub_1A93F8F94();
  v18 = v17;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v19 = sub_1A93F8D00();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7C28);
    *v21 = &type metadata for UniversalEpisodeIdentifier.Identifier;
    sub_1A93F8EF8();
    sub_1A93F8CE8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v8);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
  v40 = *(unsigned __int8 *)(v17 + 32);
  if ((v40 & 1) != 0)
  {
    v44 = 1;
    sub_1A9275374();
    sub_1A93F8EEC();
    v32 = v18;
    v43 = 0;
    v23 = sub_1A93F8F4C();
    v25 = v24;
    v42 = 1;
    v26 = sub_1A93F8F4C();
    v28 = v27;
    v29 = v26;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v8);
    v30 = v29;
  }
  else
  {
    v41 = 0;
    sub_1A92753B8();
    sub_1A93F8EEC();
    sub_1A92102F4();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v8);
    v25 = 0;
    v30 = 0;
    v28 = 0;
    v23 = v39;
  }
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  v31 = v33;
  *v33 = v23;
  v31[1] = v25;
  v31[2] = v30;
  v31[3] = v28;
  *((_BYTE *)v31 + 32) = v40;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.CodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9275A1C + 4 * byte_1A9416CA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9275A3C + 4 * byte_1A9416CA5[v4]))();
}

_BYTE *sub_1A9275A1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9275A3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9275A44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9275A4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9275A54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9275A5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys;
}

uint64_t _s18PodcastsFoundation26UniversalEpisodeIdentifierV10IdentifierO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9275AC4 + 4 * byte_1A9416CAF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9275AF8 + 4 * byte_1A9416CAA[v4]))();
}

uint64_t sub_1A9275AF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9275B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9275B08);
  return result;
}

uint64_t sub_1A9275B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9275B1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A9275B20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9275B28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys()
{
  return &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys;
}

unint64_t sub_1A9275B48()
{
  unint64_t result;

  result = qword_1EEABC5C0;
  if (!qword_1EEABC5C0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416FC0, &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5C0);
  }
  return result;
}

unint64_t sub_1A9275B90()
{
  unint64_t result;

  result = qword_1EEABC5C8;
  if (!qword_1EEABC5C8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417078, &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5C8);
  }
  return result;
}

unint64_t sub_1A9275BD8()
{
  unint64_t result;

  result = qword_1EEABC5D0;
  if (!qword_1EEABC5D0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417130, &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5D0);
  }
  return result;
}

unint64_t sub_1A9275C20()
{
  unint64_t result;

  result = qword_1EEABC5D8;
  if (!qword_1EEABC5D8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416FE8, &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5D8);
  }
  return result;
}

unint64_t sub_1A9275C68()
{
  unint64_t result;

  result = qword_1EEABC5E0;
  if (!qword_1EEABC5E0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417010, &type metadata for UniversalEpisodeIdentifier.Identifier.AdamIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5E0);
  }
  return result;
}

unint64_t sub_1A9275CB0()
{
  unint64_t result;

  result = qword_1EEABC5E8;
  if (!qword_1EEABC5E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416F30, &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5E8);
  }
  return result;
}

unint64_t sub_1A9275CF8()
{
  unint64_t result;

  result = qword_1EEABC5F0;
  if (!qword_1EEABC5F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9416F58, &type metadata for UniversalEpisodeIdentifier.Identifier.GuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5F0);
  }
  return result;
}

unint64_t sub_1A9275D40()
{
  unint64_t result;

  result = qword_1EEABC5F8;
  if (!qword_1EEABC5F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A94170A0, &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC5F8);
  }
  return result;
}

unint64_t sub_1A9275D88()
{
  unint64_t result;

  result = qword_1EEABC600;
  if (!qword_1EEABC600)
  {
    result = MEMORY[0x1AF414014](&unk_1A94170C8, &type metadata for UniversalEpisodeIdentifier.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC600);
  }
  return result;
}

id FairPlayAsset.__allocating_init(adamID:avAsset:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  char *v6;
  id v7;
  char *v8;
  id v9;
  objc_super v11;

  v3 = v2;
  v6 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v6[OBJC_IVAR___PFFairPlayAsset_adamID] = a1;
  *(_QWORD *)&v6[OBJC_IVAR___PFFairPlayAsset_avAsset] = a2;
  sub_1A914D6B0();
  v7 = a2;
  v8 = v6;
  *(_QWORD *)&v8[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1A92766EC(v7);

  v11.receiver = v8;
  v11.super_class = v3;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

Swift::Bool __swiftcall FairPlayAsset.requiresRenewal()()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  Swift::Bool result;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  Swift::Bool v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];
  unsigned __int8 v43;

  ObjectType = swift_getObjectType();
  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A8890 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A8878);
  v8 = v0;
  v9 = sub_1A93F7674();
  v10 = sub_1A93F8790();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v39 = v7;
    v12 = v11;
    v13 = swift_slowAlloc();
    v37 = v5;
    v14 = v13;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315651;
    v41 = sub_1A906436C(0xD000000000000023, 0x80000001A944AE90, aBlock);
    v38 = v3;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 12) = 2160;
    v41 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v12 + 22) = 2081;
    v15 = FairPlayAsset.description.getter();
    v41 = sub_1A906436C(v15, v16, aBlock);
    v3 = v38;
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v9, v10, "%s Determining renewal status for: %{private,mask.hash}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    v17 = v14;
    v5 = v37;
    MEMORY[0x1AF41411C](v17, -1, -1);
    MEMORY[0x1AF41411C](v12, -1, -1);

  }
  else
  {

  }
  v18 = *(void **)&v8[OBJC_IVAR___PFFairPlayAsset_keyStore];
  if (!v18)
    goto LABEL_12;
  v19 = *(void **)&v8[OBJC_IVAR___PFFairPlayAsset_avAsset];
  swift_unknownObjectRetain();
  v20 = objc_msgSend(v19, sel_URL);
  sub_1A93F7200();

  LOBYTE(v20) = sub_1A93F7140();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v20 & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_12:
    v32 = sub_1A93F7674();
    v33 = sub_1A93F879C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v41 = sub_1A906436C(0xD000000000000023, 0x80000001A944AE90, aBlock);
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v32, v33, "%s Unsupported use-case, or invalid data for renewal check.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      MEMORY[0x1AF41411C](v34, -1, -1);
    }

    return 0;
  }
  v43 = 1;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &v43;
  *(_QWORD *)(v21 + 24) = ObjectType;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1A927705C;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_1A9055750;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A9276E2C;
  aBlock[3] = (uint64_t)&block_descriptor_40;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_enumerateKeyEntriesUsingBlock_, v23);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) == 0)
  {
    v25 = v8;
    v26 = sub_1A93F7674();
    v27 = sub_1A93F8790();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)v28 = 136315907;
      v41 = sub_1A906436C(0xD000000000000023, 0x80000001A944AE90, aBlock);
      sub_1A93F8AA8();
      *(_WORD *)(v28 + 12) = 1026;
      swift_beginAccess();
      LODWORD(v40) = v43;
      sub_1A93F8AA8();
      *(_WORD *)(v28 + 18) = 2160;
      v40 = 1752392040;
      sub_1A93F8AA8();
      *(_WORD *)(v28 + 28) = 2081;
      v30 = FairPlayAsset.description.getter();
      v40 = sub_1A906436C(v30, v31, aBlock);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v26, v27, "%s Renewal required (%{BOOL,public}d) for: %{private,mask.hash}s.", (uint8_t *)v28, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v29, -1, -1);
      MEMORY[0x1AF41411C](v28, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease();
    }
    swift_beginAccess();
    v36 = v43;
    swift_release();
    return v36;
  }
  __break(1u);
  return result;
}

uint64_t FairPlayAsset.description.getter()
{
  uint64_t v0;
  id v1;

  sub_1A93F8C70();
  swift_bridgeObjectRelease();
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___PFFairPlayAsset_avAsset), sel_description);
  sub_1A93F8040();

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0x203A44496D616441;
}

id FairPlayAsset.init(adamID:avAsset:)(uint64_t a1, void *a2)
{
  id v3;

  v3 = sub_1A9276FA0(a1, a2);

  return v3;
}

id sub_1A92766EC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void (*v8)(char *, uint64_t);
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;

  v2 = sub_1A93F726C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_URL, v4);
  sub_1A93F7200();

  LOBYTE(v7) = sub_1A93F7140();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v6, v2);
  if ((v7 & 1) != 0)
  {
    v9 = objc_msgSend(a1, sel_URL);
    sub_1A93F7200();

    sub_1A93F7218();
    v8(v6, v2);
    v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v11 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithPath_, v11);

  }
  else
  {

    return 0;
  }
  return v12;
}

uint64_t FairPlayAsset.isOfflineAsset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___PFFairPlayAsset_avAsset), sel_URL, v3);
  sub_1A93F7200();

  LOBYTE(v6) = sub_1A93F7140();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v6 & 1;
}

uint64_t sub_1A92769F4(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  id v27;
  _BYTE *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F738C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - v14;
  v16 = objc_msgSend(a1, sel_renewalDate, v13);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
  }
  v17 = v16;
  sub_1A93F7368();

  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1A905FD54((uint64_t)v7, (uint64_t *)&unk_1ED2AD360);
  v18(v15, v7, v8);
  sub_1A93F7374();
  v19 = sub_1A93F7320();
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  if ((v19 & 1) == 0)
    return ((uint64_t (*)(char *, uint64_t))v20)(v15, v8);
  if (qword_1ED2A8890 != -1)
    swift_once();
  v21 = sub_1A93F7698();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8878);
  v22 = a1;
  v23 = sub_1A93F7674();
  v24 = sub_1A93F8790();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v43 = v41;
    *(_DWORD *)v26 = 136315651;
    v42 = sub_1A906436C(0xD000000000000023, 0x80000001A944AE90, &v43);
    v39 = &v43;
    sub_1A93F8AA8();
    *(_WORD *)(v26 + 12) = 2160;
    v42 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v26 + 22) = 2081;
    v38 = v26 + 24;
    v27 = objc_msgSend(v22, sel_dictionaryRepresentation);
    v40 = v25;
    v28 = a3;
    v29 = v27;
    sub_1A93F7EFC();
    v37 = v23;

    a3 = v28;
    v30 = sub_1A93F7F08();
    v32 = v31;
    swift_bridgeObjectRelease();
    v42 = sub_1A906436C(v30, v32, &v43);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    v33 = v37;
    _os_log_impl(&dword_1A904E000, v37, (os_log_type_t)v40, "%s Key renewal not required %{private,mask.hash}s", (uint8_t *)v26, 0x20u);
    v34 = v41;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v34, -1, -1);
    MEMORY[0x1AF41411C](v26, -1, -1);

  }
  else
  {

  }
  result = ((uint64_t (*)(char *, uint64_t))v20)(v15, v8);
  *a3 = 0;
  return result;
}

uint64_t sub_1A9276E0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1A9276E2C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id FairPlayAsset.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FairPlayAsset.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FairPlayAsset.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9276F54(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1A9276F78@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

id sub_1A9276FA0(uint64_t a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  id v6;
  char *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR___PFFairPlayAsset_adamID] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___PFFairPlayAsset_avAsset] = a2;
  sub_1A914D6B0();
  v6 = a2;
  v7 = v2;
  *(_QWORD *)&v7[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1A92766EC(v6);

  v9.receiver = v7;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1A927704C()
{
  return swift_deallocObject();
}

uint64_t sub_1A927705C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A92769F4(a1, a2, *(_BYTE **)(v2 + 16));
}

uint64_t sub_1A9277064()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for FairPlayAsset()
{
  return objc_opt_self();
}

uint64_t method lookup function for FairPlayAsset()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlayAsset.__allocating_init(adamID:avAsset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_1A92770A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  os_log_type_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_class *v29;
  char *v30;
  id v31;
  char *v32;
  id v33;
  objc_super v35;
  uint64_t v36;
  uint64_t v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_assetURL, v7);
  if (!v10)
  {
    if (qword_1ED2A8890 != -1)
      swift_once();
    v21 = sub_1A93F7698();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED2A8878);
    v22 = a1;
    v16 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (!os_log_type_enabled(v16, v23))
    {

      return 0;
    }
    v24 = swift_slowAlloc();
    *(_DWORD *)v24 = 141558275;
    v37 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v24 + 12) = 2049;
    v37 = (uint64_t)objc_msgSend(v22, sel_storeTrackId);
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v16, v23, "Missing assetURL for episode: %{private,mask.hash}lld", (uint8_t *)v24, 0x16u);
    v20 = v24;
LABEL_11:
    MEMORY[0x1AF41411C](v20, -1, -1);

    return 0;
  }
  v11 = v10;
  v12 = sub_1A93F8040();
  v14 = v13;

  sub_1A93F7248();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A905FD54((uint64_t)v4, &qword_1ED2AD3D0);
    if (qword_1ED2A8890 != -1)
      swift_once();
    v15 = sub_1A93F7698();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A8878);
    swift_bridgeObjectRetain();
    v16 = sub_1A93F7674();
    v17 = sub_1A93F879C();
    if (!os_log_type_enabled(v16, v17))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v18 = 141558275;
    v36 = 1752392040;
    v37 = v19;
    sub_1A93F8AA8();
    *(_WORD *)(v18 + 12) = 2081;
    swift_bridgeObjectRetain();
    v36 = sub_1A906436C(v12, v14, &v37);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v16, v17, "Malformed assetURL: %{private,mask.hash}s.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v19, -1, -1);
    v20 = v18;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  v25 = objc_msgSend(a1, sel_storeTrackId);
  v26 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
  v27 = (void *)sub_1A93F71A0();
  v28 = objc_msgSend(v26, sel_initWithURL_options_, v27, 0);

  v29 = (objc_class *)type metadata accessor for FairPlayAsset();
  v30 = (char *)objc_allocWithZone(v29);
  *(_QWORD *)&v30[OBJC_IVAR___PFFairPlayAsset_adamID] = v25;
  *(_QWORD *)&v30[OBJC_IVAR___PFFairPlayAsset_avAsset] = v28;
  sub_1A914D6B0();
  v31 = v28;
  v32 = v30;
  *(_QWORD *)&v32[OBJC_IVAR___PFFairPlayAsset_keyStore] = sub_1A92766EC(v31);

  v35.receiver = v32;
  v35.super_class = v29;
  v33 = objc_msgSendSuper2(&v35, sel_init);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v33;
}

uint64_t DefaultPodcastStateDataSource.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t sub_1A92775A0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1AF41420C](v0 + 16);
}

uint64_t (*sub_1A92775E4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1AF41420C](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1A9277650;
}

uint64_t DefaultPodcastStateDataSource.deinit()
{
  uint64_t v0;

  sub_1A914CAE4(v0 + 16);
  return v0;
}

uint64_t DefaultPodcastStateDataSource.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A914CAE4(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1A9277694(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1A9277704@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1A927775C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for DefaultPodcastStateDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DefaultPodcastStateDataSource.state(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

id ContentKeyResponse.__allocating_init(request:keyData:renewalDate:error:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  char *v11;
  void **v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  objc_super v23;

  v6 = v5;
  v11 = (char *)objc_allocWithZone(v6);
  v12 = (void **)&v11[OBJC_IVAR___MTContentKeyResponse_error];
  *(_QWORD *)&v11[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  v13 = (uint64_t *)&v11[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v11[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
  *(_QWORD *)&v11[OBJC_IVAR___MTContentKeyResponse_request] = a1;
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  *v13 = a2;
  v13[1] = a3;
  v16 = a1;
  v17 = v11;
  sub_1A906A3DC(a2, a3);
  sub_1A9069F9C(v15, v14);
  sub_1A90A1CA8(a4, (uint64_t)&v17[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  v18 = *v12;
  *v12 = a5;
  v19 = a5;

  v23.receiver = v17;
  v23.super_class = v6;
  v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1A90AC3A4(a4);

  sub_1A9069F9C(a2, a3);
  return v20;
}

id ContentKeyResponse.__allocating_init(request:error:)(void *a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  id v6;
  void *v7;
  id v8;

  v3 = v2;
  v6 = objc_allocWithZone(v3);
  if (a2)
    v7 = (void *)sub_1A93F711C();
  else
    v7 = 0;
  v8 = objc_msgSend(v6, sel_initWithRequest_keyData_renewalDate_error_, a1, 0, 0, v7);

  return v8;
}

unint64_t ContentKeyRequest.RequestType.init(rawValue:)(unint64_t a1)
{
  return sub_1A922DE14(a1);
}

uint64_t ContentKeyRequest.keyIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentKeyRequest.adamId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___MTContentKeyRequest_adamId);
  swift_bridgeObjectRetain();
  return v1;
}

void *ContentKeyRequest.secureInvalidationDsid.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid);
  v2 = v1;
  return v1;
}

uint64_t sub_1A9277AE4()
{
  return sub_1A92782FC(&OBJC_IVAR___MTContentKeyRequest_requestData);
}

uint64_t sub_1A9277AFC(uint64_t a1, uint64_t a2)
{
  return sub_1A9278400(a1, a2, &OBJC_IVAR___MTContentKeyRequest_requestData);
}

uint64_t (*sub_1A9277B08())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ContentKeyRequest.__allocating_init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  objc_class *v7;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v15 = objc_allocWithZone(v7);
  sub_1A9278A30(a1, a2, a3, a4, a5, a6, a7);
  v17 = v16;

  return v17;
}

uint64_t ContentKeyRequest.init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  uint64_t v8;
  uint64_t v9;

  sub_1A9278A30(a1, a2, a3, a4, a5, a6, a7);
  v9 = v8;

  return v9;
}

uint64_t sub_1A9277CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR___MTContentKeyRequest_keyIdentifier + 8);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR___MTContentKeyRequest_adamId);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR___MTContentKeyRequest_adamId + 8);
  v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
  v9 = *(void **)(v2 + OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid);
  objc_allocWithZone((Class)type metadata accessor for ContentKeyRequest(0));
  v10 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A9278A30(v4, v5, v6, v7, a1, v8, v9);
  v12 = v11;

  *(_QWORD *)(v12 + OBJC_IVAR___MTContentKeyRequest_requestID) = *(_QWORD *)(v2
                                                                           + OBJC_IVAR___MTContentKeyRequest_requestID);
  v13 = (uint64_t *)(v2 + OBJC_IVAR___MTContentKeyRequest_requestData);
  swift_beginAccess();
  v15 = *v13;
  v14 = v13[1];
  v16 = (uint64_t *)(v12 + OBJC_IVAR___MTContentKeyRequest_requestData);
  swift_beginAccess();
  v17 = *v16;
  v18 = v16[1];
  *v16 = v15;
  v16[1] = v14;
  sub_1A906A3DC(v15, v14);
  sub_1A9069F9C(v17, v18);
  return v12;
}

id ContentKeyRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ContentKeyRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContentKeyRequest.__deallocating_deinit()
{
  return sub_1A9278864(type metadata accessor for ContentKeyRequest);
}

void *ContentKeyResponse.request.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___MTContentKeyResponse_request);
  v2 = v1;
  return v1;
}

uint64_t ContentKeyResponse.renewalDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A90A1CA8(v1 + OBJC_IVAR___MTContentKeyResponse_renewalDate, a1);
}

void *sub_1A92780B0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1A9278160(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1A92781B0(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1A9278218())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1A9278268(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess();
  v4 = 0;
  v5 = v3[1];
  if (v5 >> 60 != 15)
  {
    v6 = *v3;
    sub_1A90D8068(v6, v5);
    v4 = (void *)sub_1A93F729C();
    sub_1A9069F9C(v6, v5);
  }
  return v4;
}

uint64_t sub_1A92782F0()
{
  return sub_1A92782FC(&OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1A92782FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  sub_1A906A3DC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return v3;
}

void sub_1A927835C(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void *v5;
  char *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v5 = a3;
  if (a3)
  {
    v7 = a1;
    v8 = v5;
    v5 = (void *)sub_1A93F72B4();
    v10 = v9;

  }
  else
  {
    v11 = a1;
    v10 = 0xF000000000000000;
  }
  v12 = (uint64_t *)&a1[*a4];
  swift_beginAccess();
  v13 = *v12;
  v14 = v12[1];
  *v12 = (uint64_t)v5;
  v12[1] = v10;
  sub_1A9069F9C(v13, v14);

}

uint64_t sub_1A92783F4(uint64_t a1, uint64_t a2)
{
  return sub_1A9278400(a1, a2, &OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1A9278400(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;

  v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  return sub_1A9069F9C(v7, v8);
}

uint64_t sub_1A9278458@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_1A906A3DC(v5, v6);
}

uint64_t sub_1A92784A8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *a1;
  v6 = a1[1];
  v7 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  *v7 = v5;
  v7[1] = v6;
  sub_1A906A3DC(v5, v6);
  return sub_1A9069F9C(v8, v9);
}

uint64_t (*sub_1A927851C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id ContentKeyResponse.init(request:error:)(void *a1, void *a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;

  v3 = v2;
  if (a2)
    v6 = (void *)sub_1A93F711C();
  else
    v6 = 0;
  v7 = objc_msgSend(v3, sel_initWithRequest_keyData_renewalDate_error_, a1, 0, 0, v6);

  return v7;
}

id ContentKeyResponse.init(request:keyData:renewalDate:error:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  id v9;

  v9 = sub_1A92788F8(a1, a2, a3, a4, a5);

  sub_1A9069F9C(a2, a3);
  return v9;
}

void ContentKeyResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContentKeyResponse.__deallocating_deinit()
{
  return sub_1A9278864(type metadata accessor for ContentKeyResponse);
}

id sub_1A9278864(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1A92788F8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  void **v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  objc_super v21;

  v11 = (void **)&v5[OBJC_IVAR___MTContentKeyResponse_error];
  *(_QWORD *)&v5[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  v12 = (uint64_t *)&v5[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v5[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
  *(_QWORD *)&v5[OBJC_IVAR___MTContentKeyResponse_request] = a1;
  swift_beginAccess();
  v13 = *v12;
  v14 = v12[1];
  *v12 = a2;
  v12[1] = a3;
  v15 = a1;
  v16 = v5;
  sub_1A906A3DC(a2, a3);
  sub_1A9069F9C(v13, v14);
  sub_1A90A1CA8(a4, (uint64_t)&v16[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  v17 = *v11;
  *v11 = a5;
  v18 = a5;

  v21.receiver = v16;
  v21.super_class = (Class)type metadata accessor for ContentKeyResponse(0);
  v19 = objc_msgSendSuper2(&v21, sel_init);
  sub_1A90AC3A4(a4);
  return v19;
}

void sub_1A9278A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  _BYTE *v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  _BYTE *v22;
  objc_class *v23;
  uint64_t v24;
  int v25;
  objc_super v26;

  v25 = a6;
  v14 = sub_1A93F738C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)&v7[OBJC_IVAR___MTContentKeyRequest_requestData] = xmmword_1A9411960;
  v18 = &v7[OBJC_IVAR___MTContentKeyRequest_keyIdentifier];
  *v18 = a1;
  v18[1] = a2;
  v19 = &v7[OBJC_IVAR___MTContentKeyRequest_adamId];
  *v19 = a3;
  v19[1] = a4;
  *(_QWORD *)&v7[OBJC_IVAR___MTContentKeyRequest_requestType] = a5;
  v7[OBJC_IVAR___MTContentKeyRequest_offlineRequest] = v25;
  *(_QWORD *)&v7[OBJC_IVAR___MTContentKeyRequest_secureInvalidationDsid] = a7;
  v20 = qword_1EEABC648 + 1;
  if (__OFADD__(qword_1EEABC648, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_1EEABC648;
    *(_QWORD *)&v7[OBJC_IVAR___MTContentKeyRequest_requestID] = v20;
    v21 = a7;
    v22 = v7;
    sub_1A93F7380();
    (*(void (**)(_BYTE *, char *, uint64_t))(v15 + 32))(&v22[OBJC_IVAR___MTContentKeyRequest_requestDate], v17, v14);

    v23 = (objc_class *)type metadata accessor for ContentKeyRequest(0);
    v26.receiver = v22;
    v26.super_class = v23;
    objc_msgSendSuper2(&v26, sel_init);
  }
}

uint64_t type metadata accessor for ContentKeyRequest(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1EEABC6B8);
}

uint64_t type metadata accessor for ContentKeyResponse(uint64_t a1)
{
  return sub_1A9062BFC(a1, (uint64_t *)&unk_1EEABC6F0);
}

unint64_t sub_1A9278BC0()
{
  unint64_t result;

  result = qword_1EEABC680;
  if (!qword_1EEABC680)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ContentKeyRequest.RequestType, &type metadata for ContentKeyRequest.RequestType);
    atomic_store(result, (unint64_t *)&qword_1EEABC680);
  }
  return result;
}

uint64_t sub_1A9278C04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A9278458(a1, &OBJC_IVAR___MTContentKeyRequest_requestData, a2);
}

uint64_t sub_1A9278C20(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A92784A8(a1, a2, a3, a4, &OBJC_IVAR___MTContentKeyRequest_requestData);
}

id sub_1A9278C3C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___MTContentKeyResponse_error);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1A9278C94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A9278458(a1, &OBJC_IVAR___MTContentKeyResponse_keyData, a2);
}

uint64_t sub_1A9278CB0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A92784A8(a1, a2, a3, a4, &OBJC_IVAR___MTContentKeyResponse_keyData);
}

uint64_t sub_1A9278CCC()
{
  return type metadata accessor for ContentKeyRequest(0);
}

uint64_t sub_1A9278CD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContentKeyRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentKeyRequest.requestData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ContentKeyRequest.__allocating_init(keyIdentifier:adamId:requestType:offlineRequest:secureInvalidationDsid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of ContentKeyRequest.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

ValueMetadata *type metadata accessor for ContentKeyRequest.RequestType()
{
  return &type metadata for ContentKeyRequest.RequestType;
}

uint64_t sub_1A9278E0C()
{
  return type metadata accessor for ContentKeyResponse(0);
}

void sub_1A9278E14()
{
  unint64_t v0;

  sub_1A90D8014();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ContentKeyResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentKeyResponse.error.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ContentKeyResponse.error.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ContentKeyResponse.error.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentKeyResponse.keyData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentKeyResponse.__allocating_init(request:keyData:renewalDate:error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t InterestState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9278F94 + 4 * byte_1A94174B0[a1]))(0x4C74736567677573, 0xEB00000000737365);
}

uint64_t sub_1A9278F94()
{
  return 0x6C61727475656ELL;
}

uint64_t sub_1A9278FAC()
{
  return 0x657469726F766166;
}

uint64_t sub_1A9278FC8()
{
  return 0x6E776F6E6B6E75;
}

void sub_1A9278FE4(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A927904C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A92790AC + 4 * byte_1A94174B8[a1]))(0x6C61727475656ELL);
}

uint64_t sub_1A92790AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1A93F90C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A9279158@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s18PodcastsFoundation13InterestStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A9279184()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A92791BC + 4 * byte_1A94174BC[*v0]))();
}

void sub_1A92791BC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61727475656ELL;
  a1[1] = 0xE700000000000000;
}

void sub_1A92791D8(_QWORD *a1@<X8>)
{
  *a1 = 0x657469726F766166;
  a1[1] = 0xE900000000000064;
}

void sub_1A92791F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

void sub_1A9279214()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A9279268()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A92792DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1A9279320()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A9279380()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A92793D0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t _s18PodcastsFoundation13InterestStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A9279490()
{
  unint64_t result;

  result = qword_1EEABC700;
  if (!qword_1EEABC700)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for InterestState, &type metadata for InterestState);
    atomic_store(result, (unint64_t *)&qword_1EEABC700);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InterestState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A9279520 + 4 * byte_1A94174D1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A9279554 + 4 * byte_1A94174CC[v4]))();
}

uint64_t sub_1A9279554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927955C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9279564);
  return result;
}

uint64_t sub_1A9279570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9279578);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A927957C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9279584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterestState()
{
  return &type metadata for InterestState;
}

uint64_t ShazamSignatureRequest.init(remoteUrl:priority:fileName:lifetime:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v10 = *a2;
  v11 = *a5;
  v12 = (int *)type metadata accessor for ShazamSignatureRequest();
  v13 = a6 + v12[9];
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  result = sub_1A908F9F4(a1, a6);
  *(_BYTE *)(a6 + v12[5]) = v10;
  v15 = (_QWORD *)(a6 + v12[6]);
  *v15 = a3;
  v15[1] = a4;
  *(_BYTE *)(a6 + v12[8]) = v11;
  *(_BYTE *)(a6 + v12[7]) = 6;
  return result;
}

uint64_t ShazamSignatureRequest.remoteUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AD3D0);
}

uint64_t ShazamSignatureRequest.priority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t ShazamSignatureRequest.fileFormat.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ShazamSignatureRequest.lifetime.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ShazamSignatureRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ShazamSignatureRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShazamSignatureRequest();
  return sub_1A9062170(v1 + *(int *)(v3 + 36), a1, &qword_1ED2AD0C0);
}

uint64_t ShazamSignatureRequest.trace.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 36);
  return sub_1A9210154(a1, v3);
}

uint64_t (*ShazamSignatureRequest.trace.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ShazamSignatureRequest();
  return nullsub_1;
}

uint64_t _s18PodcastsFoundation22ShazamSignatureRequestV8fileNameSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ShazamSignatureRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

double ShazamSignatureRequest.init(generatedFrom:adamID:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t inited;
  Swift::String_optional v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  double result;
  uint64_t *v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001A944B1C0;
  v5 = URL.md5()();
  *(Swift::String_optional *)(inited + 48) = v5;
  v6 = sub_1A907ECFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v8 = v6[2];
  v7 = v6[3];
  v9 = v8 + 1;
  if (v8 >= v7 >> 1)
    v6 = sub_1A907ECFC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v9;
  v10 = &v6[2 * v8];
  v10[4] = 0xD000000000000010;
  v10[5] = 0x80000001A944B1C0;
  if (v5.value._object)
  {
    v11 = v6[3];
    swift_bridgeObjectRetain();
    if (v9 >= v11 >> 1)
      v6 = sub_1A907ECFC((_QWORD *)(v11 > 1), v8 + 2, 1, v6);
    v6[2] = v8 + 2;
    *(Swift::String_optional *)&v6[2 * v9 + 4] = v5;
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D8);
  sub_1A90819B0();
  v12 = sub_1A93F7FE0();
  v14 = v13;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  v17 = (int *)type metadata accessor for ShazamSignatureRequest();
  v18 = a2 + v17[9];
  *(_QWORD *)(v18 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(a2 + v17[5]) = 2;
  v20 = (uint64_t *)(a2 + v17[6]);
  *v20 = v12;
  v20[1] = v14;
  *(_BYTE *)(a2 + v17[8]) = 1;
  *(_BYTE *)(a2 + v17[7]) = 6;
  return result;
}

uint64_t sub_1A92799D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9279A04 + 4 * byte_1A94175B0[*v0]))(0x725565746F6D6572, 0xE90000000000006CLL);
}

uint64_t sub_1A9279A04()
{
  return 0x797469726F697270;
}

uint64_t sub_1A9279A1C()
{
  return 0x656D614E656C6966;
}

uint64_t sub_1A9279A34()
{
  return 0x6D726F46656C6966;
}

uint64_t sub_1A9279A50()
{
  return 0x656D69746566696CLL;
}

uint64_t sub_1A9279A68()
{
  sub_1A927AD88();
  return sub_1A93F945C();
}

uint64_t sub_1A9279A90()
{
  sub_1A927AD88();
  return sub_1A93F9468();
}

void ShazamSignatureRequest.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(v2, (uint64_t)v10, &qword_1ED2AD3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1A93F92F4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1A93F92F4();
    sub_1A9066CA8(&qword_1EEAB9148, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1A93F7FB0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11 = type metadata accessor for ShazamSignatureRequest();
  sub_1A93F9300();
  swift_bridgeObjectRetain();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  sub_1A9227690(a1, *(_BYTE *)(v2 + *(int *)(v11 + 28)));
}

void *ShazamSignatureRequest.encode(_:)(uint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v5[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v5);
  v2 = v5[0];
  if (v1)
  {
    v3 = (void *)sub_1A93F72B4();

  }
  else
  {
    v3 = v2;
    sub_1A93F7128();

    swift_willThrow();
  }
  return v3;
}

id ShazamSignatureRequest.decode(_:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  id v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  if (qword_1EEAB6D48 != -1)
    swift_once();
  v5 = sub_1A93F7698();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EEABA660);
  v6 = sub_1A93F7674();
  v7 = sub_1A93F8784();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1A904E000, v6, v7, "Attempting signature unarchiving", v8, 2u);
    MEMORY[0x1AF41411C](v8, -1, -1);
  }

  sub_1A9072534(0, &qword_1EEABC708);
  sub_1A9072534(0, &qword_1EEAB82E8);
  v9 = (void *)sub_1A93F87E4();
  if (v2)
  {

  }
  else if (v9)
  {
    v14 = v9;
    v16 = sub_1A93F7674();
    v17 = sub_1A93F8784();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A904E000, v16, v17, "Preferring keyed archiver object.", v18, 2u);
      MEMORY[0x1AF41411C](v18, -1, -1);

    }
    else
    {

    }
    return v14;
  }
  v10 = sub_1A93F7674();
  v11 = sub_1A93F8784();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1A904E000, v10, v11, "failed secure unarchiving, attempting dataRepresentation decoder...", v12, 2u);
    MEMORY[0x1AF41411C](v12, -1, -1);
  }

  v13 = objc_allocWithZone(MEMORY[0x1E0CD7500]);
  sub_1A90D8068(a1, a2);
  v14 = sub_1A927ACCC();
  sub_1A905F180(a1, a2);
  return v14;
}

uint64_t static ShazamSignatureRequest.SignatureError.== infix(_:_:)()
{
  return 1;
}

uint64_t ShazamSignatureRequest.SignatureError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ShazamSignatureRequest.SignatureError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t ShazamSignatureRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int *v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC710);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A927AD88();
  sub_1A93F93D8();
  v11[15] = 0;
  sub_1A93F726C();
  sub_1A9066CA8(&qword_1EEAB7BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1A93F8FE8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ShazamSignatureRequest();
    v11[14] = *(_BYTE *)(v3 + v9[5]);
    v11[13] = 1;
    sub_1A921026C();
    sub_1A93F9030();
    v11[12] = 2;
    sub_1A93F9000();
    v11[11] = *(_BYTE *)(v3 + v9[7]);
    v11[10] = 3;
    sub_1A9228B48();
    sub_1A93F9030();
    v11[9] = *(_BYTE *)(v3 + v9[8]);
    v11[8] = 4;
    sub_1A92102B0();
    sub_1A93F9030();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ShazamSignatureRequest.hashValue.getter()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  ShazamSignatureRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

uint64_t ShazamSignatureRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC720);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v11[*(int *)(v12 + 36)];
  *((_QWORD *)v13 + 4) = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v27 = (uint64_t)v13;
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A927AD88();
  v14 = v8;
  sub_1A93F93C0();
  if (v2)
  {
    v18 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1A905FD54(v18, &qword_1ED2AD0C0);
  }
  else
  {
    v15 = (uint64_t)v11;
    sub_1A93F726C();
    v36 = 0;
    sub_1A9066CA8(&qword_1EEAB7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v17 = (uint64_t)v25;
    v16 = v26;
    sub_1A93F8F34();
    sub_1A908F9F4(v17, v15);
    v34 = 1;
    sub_1A9210338();
    sub_1A93F8F7C();
    *(_BYTE *)(v15 + v9[5]) = v35;
    v33 = 2;
    v19 = sub_1A93F8F4C();
    v20 = (uint64_t *)(v15 + v9[6]);
    *v20 = v19;
    v20[1] = v21;
    v31 = 3;
    sub_1A9228B8C();
    sub_1A93F8F7C();
    *(_BYTE *)(v15 + v9[7]) = v32;
    v29 = 4;
    sub_1A921037C();
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v16);
    *(_BYTE *)(v15 + v9[8]) = v30;
    sub_1A927ADCC(v15, v24);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    return sub_1A927AE10(v15);
  }
}

uint64_t sub_1A927A618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ShazamSignatureRequest.init(from:)(a1, a2);
}

uint64_t sub_1A927A62C(_QWORD *a1)
{
  return ShazamSignatureRequest.encode(to:)(a1);
}

uint64_t sub_1A927A640()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  ShazamSignatureRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

uint64_t sub_1A927A680()
{
  _BYTE v1[72];

  sub_1A93F92DC();
  ShazamSignatureRequest.hash(into:)((uint64_t)v1);
  return sub_1A93F9324();
}

void *sub_1A927A6BC(uint64_t *a1)
{
  return ShazamSignatureRequest.encode(_:)(*a1);
}

id sub_1A927A6D4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = ShazamSignatureRequest.decode(_:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t ShazamSignatureRequest.inMemorySize.getter()
{
  return 1;
}

uint64_t _s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  float v42;
  float v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  char v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v56 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v55 - v6;
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v55 - v8;
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v55 - v10;
  MEMORY[0x1E0C80A78](v11);
  v61 = (uint64_t)&v55 - v12;
  MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v55 - v14;
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB2A8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v55 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v55 - v28;
  v63 = a1;
  sub_1A9062170(a1, (uint64_t)&v55 - v28, &qword_1ED2AD3D0);
  v64 = a2;
  sub_1A9062170(a2, (uint64_t)v26, &qword_1ED2AD3D0);
  v30 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1A9062170((uint64_t)v29, (uint64_t)v20, &qword_1ED2AD3D0);
  sub_1A9062170((uint64_t)v26, v30, &qword_1ED2AD3D0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v31((uint64_t)v20, 1, v15) == 1)
  {
    sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
    if (v31(v30, 1, v15) == 1)
    {
      sub_1A905FD54((uint64_t)v20, &qword_1ED2AD3D0);
      v32 = v63;
      v33 = v60;
      sub_1A927ADCC(v63, v60);
      v34 = v64;
      v35 = v61;
      sub_1A927ADCC(v64, v61);
      v36 = (uint64_t)v62;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1A9062170((uint64_t)v20, (uint64_t)v23, &qword_1ED2AD3D0);
  if (v31(v30, 1, v15) == 1)
  {
    sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
    sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
LABEL_6:
    sub_1A905FD54((uint64_t)v20, &qword_1EEABB2A8);
    v32 = v63;
    v33 = v60;
    sub_1A927ADCC(v63, v60);
    v34 = v64;
    v35 = v61;
    sub_1A927ADCC(v64, v61);
    v36 = (uint64_t)v62;
LABEL_12:
    sub_1A927AE10(v35);
    sub_1A927AE10(v33);
    sub_1A927ADCC(v32, v36);
    v44 = v57;
    sub_1A927ADCC(v34, v57);
    v46 = (uint64_t)v58;
    v45 = (uint64_t)v59;
    goto LABEL_13;
  }
  v37 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v55, v30, v15);
  sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v38 = sub_1A93F8004();
  v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v37, v15);
  sub_1A905FD54((uint64_t)v26, &qword_1ED2AD3D0);
  sub_1A905FD54((uint64_t)v29, &qword_1ED2AD3D0);
  v39(v23, v15);
  sub_1A905FD54((uint64_t)v20, &qword_1ED2AD3D0);
  v32 = v63;
  v33 = v60;
  sub_1A927ADCC(v63, v60);
  v34 = v64;
  v35 = v61;
  sub_1A927ADCC(v64, v61);
  v36 = (uint64_t)v62;
  if ((v38 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v40 = v56;
  v41 = *(int *)(v56 + 20);
  v42 = flt_1A9406340[*(char *)(v33 + v41)];
  v43 = flt_1A9406340[*(char *)(v35 + v41)];
  sub_1A927AE10(v35);
  sub_1A927AE10(v33);
  sub_1A927ADCC(v32, v36);
  v44 = v57;
  sub_1A927ADCC(v34, v57);
  v46 = (uint64_t)v58;
  v45 = (uint64_t)v59;
  if (v42 != v43)
  {
LABEL_13:
    sub_1A927AE10(v36);
    sub_1A927AE10(v44);
    sub_1A927ADCC(v32, v46);
    sub_1A927ADCC(v34, v45);
    v51 = 0;
    goto LABEL_14;
  }
  v47 = *(int *)(v40 + 24);
  v48 = *(_QWORD *)(v36 + v47);
  v49 = *(_QWORD *)(v36 + v47 + 8);
  v50 = (_QWORD *)(v44 + v47);
  if (v48 == *v50 && v49 == v50[1])
  {
    sub_1A927AE10(v36);
    sub_1A927AE10(v44);
    sub_1A927ADCC(v32, v46);
    sub_1A927ADCC(v34, v45);
LABEL_16:
    sub_1A92F8F88(*(_BYTE *)(v46 + *(int *)(v40 + 28)));
    v51 = v54;
    goto LABEL_14;
  }
  v53 = sub_1A93F90C0();
  sub_1A927AE10(v36);
  sub_1A927AE10(v44);
  sub_1A927ADCC(v32, v46);
  sub_1A927ADCC(v34, v45);
  v51 = 0;
  if ((v53 & 1) != 0)
    goto LABEL_16;
LABEL_14:
  sub_1A927AE10(v45);
  sub_1A927AE10(v46);
  return v51 & 1;
}

id sub_1A927ACCC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1A93F729C();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithDataRepresentation_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_1A927AD88()
{
  unint64_t result;

  result = qword_1EEABC718;
  if (!qword_1EEABC718)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417948, &type metadata for ShazamSignatureRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC718);
  }
  return result;
}

uint64_t sub_1A927ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShazamSignatureRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A927AE10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShazamSignatureRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A927AE50()
{
  unint64_t result;

  result = qword_1EEABC728;
  if (!qword_1EEABC728)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ShazamSignatureRequest.SignatureError, &type metadata for ShazamSignatureRequest.SignatureError);
    atomic_store(result, (unint64_t *)&qword_1EEABC728);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ShazamSignatureRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A927AEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A927AF30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureRequest.SignatureError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A927AFF0 + 4 * byte_1A94175B5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A927B010 + 4 * byte_1A94175BA[v4]))();
}

_BYTE *sub_1A927AFF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A927B010(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A927B018(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A927B020(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A927B028(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A927B030(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureRequest.SignatureError()
{
  return &type metadata for ShazamSignatureRequest.SignatureError;
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A927B098 + 4 * byte_1A94175C4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A927B0CC + 4 * byte_1A94175BF[v4]))();
}

uint64_t sub_1A927B0CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927B0D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A927B0DCLL);
  return result;
}

uint64_t sub_1A927B0E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A927B0F0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A927B0F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927B0FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureRequest.CodingKeys()
{
  return &type metadata for ShazamSignatureRequest.CodingKeys;
}

unint64_t sub_1A927B11C()
{
  unint64_t result;

  result = qword_1EEABC740;
  if (!qword_1EEABC740)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417920, &type metadata for ShazamSignatureRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC740);
  }
  return result;
}

unint64_t sub_1A927B164()
{
  unint64_t result;

  result = qword_1EEABC748;
  if (!qword_1EEABC748)
  {
    result = MEMORY[0x1AF414014](&unk_1A9417890, &type metadata for ShazamSignatureRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC748);
  }
  return result;
}

unint64_t sub_1A927B1AC()
{
  unint64_t result;

  result = qword_1EEABC750;
  if (!qword_1EEABC750)
  {
    result = MEMORY[0x1AF414014](&unk_1A94178B8, &type metadata for ShazamSignatureRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC750);
  }
  return result;
}

void static CGImageResizer.convertImage(at:to:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A927BF2C(a1, a2, a3);
}

uint64_t CGImageResizer.resizeOptions(size:displayScale:)(double a1, double a2, double a3)
{
  void *v6;
  double v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _OWORD v12[2];
  double v13[3];
  uint64_t v14;

  sub_1A927BE68();
  v6 = (void *)*MEMORY[0x1E0CBD2A0];
  if (a1 > a2)
    v7 = a1;
  else
    v7 = a2;
  v14 = MEMORY[0x1E0DEF040];
  v13[0] = v7 * a3;
  sub_1A908A5DC(v13, v12);
  v8 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A930DA84(v12, v8, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  type metadata accessor for CFString(0);
  sub_1A9066CA8(&qword_1ED2ABCA8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A9404DC4);
  v10 = sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t CGImageResizer.resizedImage(at:to:displayScale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  const __CFURL *v22;
  CGImageSourceRef v23;
  CGImageSourceRef v24;
  const __CFURL *v25;
  __CFString *v26;
  CGImageDestinationRef v27;
  CGImageDestination *v28;
  id v29;
  CGImage *ThumbnailAtIndex;
  uint64_t v31;
  CGImage *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  id v43;
  uint64_t v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t);
  _QWORD v70[2];
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v73 = a2;
  v9 = sub_1A93F726C();
  v76 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v70 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v70 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v70 - v19;
  v21 = (void *)CGImageResizer.resizeOptions(size:displayScale:)(a3, a4, a5);
  if (qword_1ED2AD2E8 != -1)
    swift_once();
  sub_1A927BB90(byte_1ED2AD2D8, (uint64_t)v20);
  v22 = (const __CFURL *)sub_1A93F71A0();
  v74 = v21;
  v23 = CGImageSourceCreateWithURL(v22, (CFDictionaryRef)v21);

  v75 = v20;
  if (!v23)
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v35 = sub_1A93F7698();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED2AD110);
    v31 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v11, a1, v9);
    v36 = sub_1A93F7674();
    v37 = sub_1A93F879C();
    if (!os_log_type_enabled(v36, v37))
    {

      v53 = *(void (**)(char *, uint64_t))(v31 + 8);
      v53(v11, v9);

      v53(v75, v9);
      goto LABEL_29;
    }
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v78 = v39;
    *(_DWORD *)v38 = 136315138;
    sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v40 = sub_1A93F9060();
    v77 = sub_1A906436C(v40, v41, &v78);
    v31 = v76;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v31 + 8);
    v42(v11, v9);
    _os_log_impl(&dword_1A904E000, v36, v37, "Unable to create CGSource from URL: %s", v38, 0xCu);
    v34 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v39, -1, -1);
    MEMORY[0x1AF41411C](v38, -1, -1);

LABEL_16:
    v42(v75, v9);
LABEL_30:
    v33 = v73;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v33, v34, 1, v9);
  }
  v24 = v23;
  v25 = (const __CFURL *)sub_1A93F71A0();
  v26 = (__CFString *)ArtworkFormat.cgIdentifier.getter(byte_1ED2AD2D8);
  v27 = CGImageDestinationCreateWithURL(v25, v26, 1uLL, 0);

  if (!v27)
  {
    v31 = v76;
    v43 = v74;
    if (qword_1ED2AD130 != -1)
      swift_once();
    v44 = sub_1A93F7698();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED2AD110);
    v45 = v75;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v14, v75, v9);
    v46 = sub_1A93F7674();
    v47 = sub_1A93F879C();
    if (!os_log_type_enabled(v46, v47))
    {

      v67 = *(void (**)(char *, uint64_t))(v31 + 8);
      v67(v14, v9);

      v67(v45, v9);
      goto LABEL_29;
    }
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v78 = v49;
    *(_DWORD *)v48 = 136315138;
    v72 = (uint64_t)(v48 + 4);
    sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v50 = sub_1A93F9060();
    v77 = sub_1A906436C(v50, v51, &v78);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v76 + 8);
    v42(v14, v9);
    _os_log_impl(&dword_1A904E000, v46, v47, "Unable to create destination for temporary URL: %s", v48, 0xCu);
    v34 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v49, -1, -1);
    v52 = v48;
    v31 = v76;
    MEMORY[0x1AF41411C](v52, -1, -1);

    goto LABEL_16;
  }
  v28 = v27;
  v29 = v74;
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v24, 0, (CFDictionaryRef)v74);
  v31 = v76;
  if (!ThumbnailAtIndex)
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v54 = sub_1A93F7698();
    __swift_project_value_buffer(v54, (uint64_t)qword_1ED2AD110);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v17, a1, v9);
    v55 = sub_1A93F7674();
    v56 = sub_1A93F879C();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v78 = v72;
      v71 = v57;
      *(_DWORD *)v57 = 136315138;
      v70[1] = v57 + 4;
      sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v58 = sub_1A93F9060();
      v77 = sub_1A906436C(v58, v59, &v78);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v60 = *(void (**)(char *, uint64_t))(v31 + 8);
      v60(v17, v9);
      v61 = v71;
      _os_log_impl(&dword_1A904E000, v55, v56, "Unable to create thumbnail from artwork at URL: %s", v71, 0xCu);
      v34 = 1;
      v62 = v72;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v62, -1, -1);
      MEMORY[0x1AF41411C](v61, -1, -1);

      v60(v75, v9);
      goto LABEL_30;
    }

    v68 = *(void (**)(char *, uint64_t))(v31 + 8);
    v68(v17, v9);

    v68(v75, v9);
LABEL_29:
    v34 = 1;
    goto LABEL_30;
  }
  v32 = ThumbnailAtIndex;
  CGImageDestinationAddImage(v28, ThumbnailAtIndex, 0);
  if (!CGImageDestinationFinalize(v28))
  {
    if (qword_1ED2AD130 != -1)
      swift_once();
    v63 = sub_1A93F7698();
    __swift_project_value_buffer(v63, (uint64_t)qword_1ED2AD110);
    v64 = sub_1A93F7674();
    v65 = sub_1A93F879C();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_1A904E000, v64, v65, "Encountered unspecified error finalizing resize destination.", v66, 2u);
      MEMORY[0x1AF41411C](v66, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v75, v9);
    goto LABEL_29;
  }

  v33 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v73, v75, v9);
  v34 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v33, v34, 1, v9);
}

void sub_1A927BB90(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[4];

  v14[1] = a2;
  v3 = sub_1A93F73E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v13 = objc_msgSend(v12, sel_temporaryDirectory);

  sub_1A93F7200();
  sub_1A93F73D4();
  sub_1A93F73A4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14[2] = 0x697365722E706D74;
  v14[3] = 0xEB000000002E657ALL;
  __asm { BR              X10 }
}

uint64_t sub_1A927BD30()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F71C4();
  swift_bridgeObjectRelease();
  return v0(v2, v1);
}

BOOL static CGImageResizer.ConversionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CGImageResizer.ConversionError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t CGImageResizer.ConversionError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A927BE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  return CGImageResizer.resizedImage(at:to:displayScale:)(a1, a2, a3, a4, a5);
}

unint64_t sub_1A927BE68()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  void **v3;
  void *v4;
  void **v5;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405760;
  v1 = (void *)*MEMORY[0x1E0CBD238];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD238];
  v2 = MEMORY[0x1E0DEAFA0];
  v3 = (void **)MEMORY[0x1E0CBD178];
  *(_BYTE *)(inited + 40) = 1;
  v4 = *v3;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = v4;
  v5 = (void **)MEMORY[0x1E0CBD190];
  *(_BYTE *)(inited + 80) = 1;
  v6 = *v5;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 112) = v6;
  v7 = (void **)MEMORY[0x1E0CBD2B8];
  *(_BYTE *)(inited + 120) = 1;
  v8 = *v7;
  *(_QWORD *)(inited + 144) = v2;
  *(_QWORD *)(inited + 152) = v8;
  *(_QWORD *)(inited + 184) = v2;
  *(_BYTE *)(inited + 160) = 1;
  v9 = v1;
  v10 = v4;
  v11 = v6;
  v12 = v8;
  return sub_1A9112E70(inited);
}

void sub_1A927BF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const __CFDictionary *v4;
  void *v5;
  void *v6;
  const __CFURL *v7;
  __CFString *v8;
  CGImageDestination *v9;
  _BYTE *v10;
  _BYTE *v11;

  sub_1A927BE68();
  type metadata accessor for CFString(0);
  sub_1A9066CA8(&qword_1ED2ABCA8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1A9404DC4);
  v4 = (const __CFDictionary *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  sub_1A93F7224();
  v5 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v6 = (void *)CGImageSourceCreateWithFile();

  if (!v6)
    goto LABEL_6;
  v7 = (const __CFURL *)sub_1A93F71A0();
  v8 = (__CFString *)ArtworkFormat.cgIdentifier.getter(*(_BYTE *)(a3 + 152));
  v9 = CGImageDestinationCreateWithURL(v7, v8, 1uLL, v4);

  if (!v9)
  {

LABEL_6:
    sub_1A927C1FC();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  CGImageDestinationAddImageFromSource(v9, (CGImageSourceRef)v6, 0, v4);
  if (CGImageDestinationFinalize(v9))
  {

    return;
  }
  sub_1A927C1FC();
  swift_allocError();
  *v11 = 1;
  swift_willThrow();

  v4 = v9;
LABEL_8:

}

unint64_t sub_1A927C0DC()
{
  unint64_t result;

  result = qword_1EEABC758;
  if (!qword_1EEABC758)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CGImageResizer.ConversionError, &type metadata for CGImageResizer.ConversionError);
    atomic_store(result, (unint64_t *)&qword_1EEABC758);
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageResizer()
{
  return &type metadata for CGImageResizer;
}

uint64_t storeEnumTagSinglePayload for CGImageResizer.ConversionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A927C17C + 4 * byte_1A94179A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A927C1B0 + 4 * byte_1A94179A0[v4]))();
}

uint64_t sub_1A927C1B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927C1B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A927C1C0);
  return result;
}

uint64_t sub_1A927C1CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A927C1D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A927C1D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927C1E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CGImageResizer.ConversionError()
{
  return &type metadata for CGImageResizer.ConversionError;
}

unint64_t sub_1A927C1FC()
{
  unint64_t result;

  result = qword_1EEABC760;
  if (!qword_1EEABC760)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for CGImageResizer.ConversionError, &type metadata for CGImageResizer.ConversionError);
    atomic_store(result, (unint64_t *)&qword_1EEABC760);
  }
  return result;
}

BOOL static ArtworkAspectRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArtworkAspectRule.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t ArtworkAspectRule.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A927C2C8()
{
  unint64_t result;

  result = qword_1EEABC768;
  if (!qword_1EEABC768)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ArtworkAspectRule, &type metadata for ArtworkAspectRule);
    atomic_store(result, (unint64_t *)&qword_1EEABC768);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkAspectRule(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A927C358 + 4 * byte_1A9417AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A927C38C + 4 * byte_1A9417AB0[v4]))();
}

uint64_t sub_1A927C38C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927C394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A927C39CLL);
  return result;
}

uint64_t sub_1A927C3A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A927C3B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A927C3B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A927C3BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkAspectRule()
{
  return &type metadata for ArtworkAspectRule;
}

uint64_t sub_1A927C3D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F738C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1A905FD54(a1, (uint64_t *)&unk_1ED2AD360);
    sub_1A9130C04(a2, (uint64_t)v8);
    return sub_1A905FD54((uint64_t)v8, (uint64_t *)&unk_1ED2AD360);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930DFA8((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A927C52C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A66A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreFeedUpdater.Update(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1A905FD54(a1, qword_1ED2A66A0);
    v14 = sub_1A906C424(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A93089EC();
        v18 = v23;
      }
      sub_1A9116174(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      sub_1A91AA544(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_1A905FD54((uint64_t)v8, qword_1ED2A66A0);
  }
  else
  {
    sub_1A9116174(a1, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930E264((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A927C704(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2A65F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StoreFeedUpdater.Retry(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1A905FD54(a1, qword_1ED2A65F8);
    v14 = sub_1A906C424(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A9308A0C();
        v18 = v23;
      }
      sub_1A9116174(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Retry);
      sub_1A91AA6E4(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_1A905FD54((uint64_t)v8, qword_1ED2A65F8);
  }
  else
  {
    sub_1A9116174(a1, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Retry);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930E278((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A927C8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A908A5DC((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930ED34(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A905FD54(a1, qword_1ED2AC800);
    sub_1A9130DB0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1A905FD54((uint64_t)v9, qword_1ED2AC800);
  }
}

uint64_t sub_1A927C9B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F6D80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1A905FD54(a1, &qword_1ED2ABE60);
    v14 = sub_1A906C428(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A930A438();
        v18 = v23;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, v9);
      sub_1A91AB554(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_1A905FD54((uint64_t)v8, &qword_1ED2ABE60);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930F1A8((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A927CB88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB9258);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ThinClientEpisodeStateModel();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1A905FD54(a1, &qword_1EEAB9258);
    v14 = sub_1A9093570(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A930A888();
        v18 = v23;
      }
      sub_1A9116174(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
      sub_1A91AB9C8(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_1A905FD54((uint64_t)v8, &qword_1EEAB9258);
  }
  else
  {
    sub_1A9116174(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ThinClientEpisodeStateModel);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930F588((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A927CD60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A930F6B0(a1, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A912E028(a2);
    v8 = v7;
    v10 = v9;
    result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return result;
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!v12)
    {
      sub_1A930AE64();
      v13 = v15;
    }
    sub_1A91ABBA8(v8, v13);
    *v3 = v13;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A927CE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A930F7E4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = sub_1A9094640(a2, a3);
    v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      v12 = swift_isUniquelyReferenced_nonNull_native();
      v13 = *v3;
      v16 = *v4;
      *v4 = 0x8000000000000000;
      if ((v12 & 1) == 0)
      {
        sub_1A930B004();
        v13 = v16;
      }
      swift_bridgeObjectRelease();
      sub_1A9091124(v9, v13);
      *v4 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  _OWORD v17[2];

  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1A927D890(a1, a2);
    if ((v13 & 1) != 0)
    {
      sub_1A906443C(*(_QWORD *)(a3 + 56) + 32 * v12, (uint64_t)&v15);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v16 + 1))
      {
        sub_1A908A5DC(&v15, v17);
        sub_1A906443C((uint64_t)v17, (uint64_t)&v15);
        (*(void (**)(__int128 *, uint64_t, uint64_t))(a5 + 8))(&v15, a4, a5);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  sub_1A905FD54((uint64_t)&v15, qword_1ED2AC800);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a6, 1, 1, a4);
}

uint64_t sub_1A927D0AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  v7 = *a3;
  v8 = a3[1];
  swift_bridgeObjectRetain();
  j___sSD18PodcastsFoundationSSRszypRs_rlE8addValue_8forFieldyqd__Sg_AA07MetricsF0Vyqd__GtAA0gF13RepresentableRd__lF(a1, v7, v8, v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t Dictionary<>.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  j___sSD18PodcastsFoundationSSRszypRs_rlE8addValue_8forFieldyqd__Sg_AA07MetricsF0Vyqd__GtAA0gF13RepresentableRd__lF(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  v6 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

uint64_t Dictionary<>.addValue<A>(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v20)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v22[4];

  v10 = sub_1A93F8A90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v13, a1, v10, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return Dictionary<>.removeValue<A>(forField:)(a2, a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, a4);
    v20 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16);
    swift_bridgeObjectRetain();
    v20(v22, a4, a5);
    sub_1A927C8DC((uint64_t)v22, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, a4);
  }
}

{
  void (*v9)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v11[4];

  v9 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_bridgeObjectRetain();
  v9(v11, a4, a5);
  return sub_1A927C8DC((uint64_t)v11, a2, a3);
}

void (*Dictionary<>.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t *v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  v12 = sub_1A93F8A90();
  v11[5] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  Dictionary<>.subscript.getter(a2, a3, *v5, a4, a5, (uint64_t)v15);
  return sub_1A927D388;
}

void sub_1A927D388(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[7];
  v4 = (void *)(*a1)[8];
  v5 = (*a1)[5];
  v6 = (*a1)[6];
  v7 = (*a1)[3];
  v8 = (*a1)[1];
  v9 = (*a1)[2];
  v10 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[7], v4, v5);
    swift_bridgeObjectRetain();
    Dictionary<>.addValue<A>(_:forField:)((uint64_t)v3, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    v11 = *(void (**)(void *, uint64_t))(v6 + 8);
    v11(v3, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    Dictionary<>.addValue<A>(_:forField:)((uint64_t)v4, v10, v8, v9, v7);
    swift_bridgeObjectRelease();
    v11 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v11(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Dictionary<>.addingValue<A>(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v13[4];

  swift_bridgeObjectRetain();
  v10 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a6 + 16);
  swift_bridgeObjectRetain();
  v10(v13, a5, a6);
  sub_1A927C8DC((uint64_t)v13, a2, a3);
  return a4;
}

{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a6;
  v11 = sub_1A93F8A90();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v14, a1, v11, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v23 = a4;
    swift_bridgeObjectRetain();
    Dictionary<>.removeValue<A>(forField:)(a2, a3);
    return v23;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, a5);
    v20 = Dictionary<>.addingValue<A>(_:forField:)((uint64_t)v19, a2, a3, a4, a5, v22);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a5);
  }
  return v20;
}

uint64_t Dictionary<>.removeValue<A>(forField:)(uint64_t a1, uint64_t a2)
{
  _OWORD v5[2];

  swift_bridgeObjectRetain();
  sub_1A9130DB0(a1, a2, v5);
  swift_bridgeObjectRelease();
  return sub_1A905FD54((uint64_t)v5, qword_1ED2AC800);
}

uint64_t Dictionary<>.removingValue<A>(forField:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  Dictionary<>.removeValue<A>(forField:)(a1, a2);
  return a3;
}

uint64_t Dictionary<>.init(metricsFieldValue:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
  if (swift_dynamicCast())
    return v1;
  else
    return 0;
}

uint64_t Dictionary<>.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A927D828@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_dynamicCast();
  v3 = v4;
  if (!(_DWORD)result)
    v3 = 0;
  *a1 = v3;
  return result;
}

uint64_t sub_1A927D87C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  a2[3] = a1;
  *a2 = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A927D890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A93F92DC();
  sub_1A93F7FBC();
  v4 = sub_1A93F9324();
  return sub_1A9067790(a1, a2, v4);
}

uint64_t sub_1A927D8F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Dictionary<>.subscript.getter(*a2, a2[1], *a1, *(uint64_t *)((char *)a2 + a3 - 16), *(uint64_t *)((char *)a2 + a3 - 8), a4);
}

uint64_t sub_1A927D910()
{
  return 16;
}

__n128 sub_1A927D91C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t NSManagedObjectContext.performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v5 = v4;
  v22 = a4;
  v23 = sub_1A93F8A90();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v16 + 56))((char *)&v22 - v14, 1, 1, a3, v13);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a3;
  v17[3] = v15;
  v17[4] = a1;
  v17[5] = a2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1A927DDC8;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = sub_1A9055750;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A9098E00;
  aBlock[3] = &block_descriptor_41;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v19);
  _Block_release(v19);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v23;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v23);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, a3);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v22, v11, a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v21);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A927DB40@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x1E0C80A78](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1A93F9390();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t NSManagedObjectContext.performAndPublish<A>(queue:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  _QWORD *v9;
  id v10;
  id v11;

  sub_1A93F7A70();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = v4;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  v10 = v4;
  swift_retain();
  v11 = a1;
  return sub_1A93F7A7C();
}

uint64_t sub_1A927DD04(uint64_t a1, void (*a2)(double), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = sub_1A93F8A90();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  a2(v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v11, 0, 1, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(a1, v11, v7);
}

uint64_t sub_1A927DDB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A927DDC8()
{
  uint64_t v0;

  return sub_1A927DD04(*(_QWORD *)(v0 + 24), *(void (**)(double))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A927DDD4()
{
  return swift_deallocObject();
}

void sub_1A927DDE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a7;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  v17[4] = sub_1A927EB14;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1A908A91C;
  v17[3] = &block_descriptor_39_1;
  v15 = _Block_copy(v17);
  swift_retain();
  v16 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_performBlock_, v15);
  _Block_release(v15);
}

uint64_t sub_1A927DED8(void (*a1)(double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v29 = a4;
  v30 = a5;
  v34 = a3;
  v8 = sub_1A93F7D58();
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a6 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v16);
  v17 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v28 - v20;
  a1(v19);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, a6);
  v22 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = (char *)swift_allocObject();
  v24 = v29;
  v25 = v30;
  *((_QWORD *)v23 + 2) = a6;
  *((_QWORD *)v23 + 3) = v24;
  *((_QWORD *)v23 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v23[v22], v17, a6);
  aBlock[4] = sub_1A927EB90;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_45_1;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_1A93F7D88();
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v21, a6);
  return swift_release();
}

uint64_t sub_1A927E140(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = sub_1A93F9390();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a4 - 8) + 16))((char *)&v13 - v10, a3, a4, v9);
  swift_storeEnumTagMultiPayload();
  a1(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t NSManagedObjectContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A927E224(a1, a2, a3);
}

uint64_t sub_1A927E224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F7A70();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  v8 = v3;
  swift_retain();
  return sub_1A93F7A7C();
}

uint64_t sub_1A927E2CC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A927E300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A927DDE4(a1, a2, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t objectdestroy_5Tm_2()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A927E340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A906E410(a1, a2, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), (uint64_t)&unk_1E54EB168, (uint64_t)sub_1A9097F60, (uint64_t)&block_descriptor_33_0);
}

uint64_t NSManagedObjectContext.fetchListAndPublish<A, B>(entityName:predicate:sortDescriptors:limit:receiveOn:transform:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;

  sub_1A93F7A70();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a9;
  v17[3] = a10;
  v17[4] = v10;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  v17[9] = a5;
  v17[10] = a7;
  v17[11] = a8;
  v17[12] = a6;
  v18 = v10;
  swift_bridgeObjectRetain();
  v19 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  v20 = a6;
  return sub_1A93F7A7C();
}

void sub_1A927E470(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  _QWORD aBlock[6];

  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a12;
  v19[3] = a13;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a7;
  v19[8] = a8;
  v19[9] = a3;
  v19[10] = a9;
  v19[11] = a10;
  v19[12] = a11;
  v19[13] = a1;
  v19[14] = a2;
  aBlock[4] = sub_1A927E9F8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_21_0;
  v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v21 = a6;
  swift_bridgeObjectRetain();
  v22 = a3;
  swift_retain();
  v23 = a11;
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_performBlock_, v20);
  _Block_release(v20);
}

uint64_t sub_1A927E5B8()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A927E604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A927E470(a1, a2, *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(void **)(v2 + 96), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A927E644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[8];

  v38 = a8;
  v39 = a7;
  v36 = a5;
  v37 = a6;
  v35[1] = a4;
  v40 = a10;
  v41 = a11;
  v46 = a9;
  v14 = sub_1A93F7D58();
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A93F7DB8();
  v43 = *(_QWORD *)(v16 - 8);
  v44 = v16;
  MEMORY[0x1E0C80A78](v16);
  v42 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a12 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v35 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4180);
  swift_bridgeObjectRetain();
  v25 = sub_1A9363C80();
  objc_msgSend(v25, sel_setPredicate_, a3);
  sub_1A90AF8C4();
  v26 = (void *)sub_1A93F82F8();
  objc_msgSend(v25, sel_setSortDescriptors_, v26);

  objc_msgSend(v25, sel_setFetchLimit_, v36);
  sub_1A93F89DC();
  v39();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v24, a12);
  v27 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v28 = (char *)swift_allocObject();
  *((_QWORD *)v28 + 2) = a12;
  *((_QWORD *)v28 + 3) = a13;
  v29 = v41;
  *((_QWORD *)v28 + 4) = v40;
  *((_QWORD *)v28 + 5) = v29;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v28[v27], v21, a12);
  aBlock[4] = sub_1A927EAA8;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_27_0;
  v30 = _Block_copy(aBlock);
  swift_retain();
  v31 = v42;
  sub_1A93F7D88();
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1A90A1130();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D28();
  v32 = v45;
  v33 = v48;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v31, v32, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v44);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v24, a12);
  return swift_release();
}

uint64_t sub_1A927E9A4()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A927E9F8()
{
  uint64_t v0;

  return sub_1A927E644(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void (**)(void))(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A927EA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A927EAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1A927E140(*(void (**)(char *))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1A927EACC(_QWORD *a1)
{
  return sub_1A927EBD8(a1);
}

uint64_t sub_1A927EAE0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A927EB14()
{
  uint64_t v0;

  return sub_1A927DED8(*(void (**)(double))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A927EB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A927EB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1A927E140(*(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v2 + 40) & ~v2), v1);
}

uint64_t sub_1A927EBB4(void (*a1)(_BYTE *))
{
  uint64_t v1;

  return sub_1A9097E6C(*(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A927EBD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v1 + 24))(*(_QWORD *)(v1 + 40));
  if (v2)
    *a1 = v2;
  return result;
}

void sub_1A927EC28(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  void *v39;
  char v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  void (*v92)(uint64_t, _QWORD, uint64_t, uint64_t);
  char v93;
  char v94;
  id v95;
  void *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  Swift::String v100;
  char v101;
  id v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  id v108;
  void *v109;
  char v110;
  id v111;
  void *v112;
  int v113;
  id v114;
  void *v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  _QWORD *v142;
  id v143;
  void *v144;
  id v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  void *v152;
  char v153;
  void (*v154)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v155;
  uint64_t v156;
  char v157;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_title, v5);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1A93F8040();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  v13 = objc_msgSend(a1, sel_assetURL);
  if (v13 || (v13 = objc_msgSend(a1, sel_enclosureURL)) != 0)
  {
    v14 = sub_1A93F8040();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v16;
  v17 = objc_msgSend(a1, sel_podcast);
  v18 = v17;
  if (v17)
  {
    v19 = objc_msgSend(v17, sel_feedURL);

    if (v19)
    {
      v18 = (void *)sub_1A93F8040();
      v21 = v20;

      goto LABEL_12;
    }
    v18 = 0;
  }
  v21 = 0;
LABEL_12:
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v21;
  v22 = objc_msgSend(a1, sel_storeTrackId);
  if (v22)
  {
    v23 = (uint64_t)objc_msgSend(a1, sel_storeTrackId);
    v24 = v23 & ~(v23 >> 63);
  }
  else
  {
    v24 = 0;
  }
  *(_QWORD *)(a2 + 48) = v24;
  *(_BYTE *)(a2 + 56) = v22 == 0;
  v25 = objc_msgSend(a1, sel_podcast);
  if (!v25)
    goto LABEL_18;
  v26 = v25;
  if (objc_msgSend((id)objc_opt_self(), sel_isEmpty_, objc_msgSend(v25, sel_storeCollectionId)))
  {

LABEL_18:
    v27 = 0;
    v28 = 1;
    goto LABEL_20;
  }
  v29 = (uint64_t)objc_msgSend(v26, sel_storeCollectionId);

  v28 = 0;
  v27 = v29 & ~(v29 >> 63);
LABEL_20:
  *(_QWORD *)(a2 + 64) = v27;
  *(_BYTE *)(a2 + 72) = v28;
  v30 = objc_msgSend(a1, sel_podcast);
  v31 = v30;
  if (v30)
  {
    v32 = objc_msgSend(v30, sel_title);

    if (v32)
    {
      v31 = (void *)sub_1A93F8040();
      v34 = v33;

      goto LABEL_25;
    }
    v31 = 0;
  }
  v34 = 0;
LABEL_25:
  v35 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v36 = (_QWORD *)(a2 + v35[13]);
  *v36 = v31;
  v36[1] = v34;
  objc_msgSend(a1, sel_duration);
  *(_QWORD *)(a2 + v35[14]) = v37;
  v38 = objc_msgSend(a1, sel_podcast);
  v155 = v7;
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(v38, sel_isSerialShowTypeInFeed);

  }
  else
  {
    v40 = 0;
  }
  *(_BYTE *)(a2 + v35[31]) = v40;
  *(_QWORD *)(a2 + v35[29]) = objc_msgSend(a1, sel_episodeNumber);
  *(_QWORD *)(a2 + v35[30]) = objc_msgSend(a1, sel_seasonNumber);
  v41 = objc_msgSend(a1, sel_podcast);
  if (v41
    && (v42 = v41, v43 = objc_msgSend(v41, sel_imageURL), v42, v43))
  {
    sub_1A93F8040();

    sub_1A93F7248();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = a2 + v35[16];
    v45 = sub_1A93F726C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  }
  v46 = objc_msgSend(a1, sel_podcast);
  if (v46)
  {
    v47 = v46;
    v48 = objc_msgSend(v46, sel_artworkTemplateURL);

    if (v48)
      goto LABEL_36;
  }
  v49 = objc_msgSend(a1, sel_podcast);
  v50 = v49;
  if (v49)
  {
    v48 = objc_msgSend(v49, sel_imageURL);

    if (v48)
    {
LABEL_36:
      v50 = (void *)sub_1A93F8040();
      v52 = v51;

      goto LABEL_40;
    }
    v50 = 0;
  }
  v52 = 0;
LABEL_40:
  v53 = (_QWORD *)(a2 + v35[32]);
  *v53 = v50;
  v53[1] = v52;
  v54 = objc_msgSend(a1, sel_uuid);
  if (v54)
  {
    v55 = v54;
    v56 = sub_1A93F8040();
    v58 = v57;

  }
  else
  {
    v56 = 0;
    v58 = 0;
  }
  *(_QWORD *)(a2 + 80) = v56;
  *(_QWORD *)(a2 + 88) = v58;
  v59 = objc_msgSend(a1, sel_guid);
  if (v59)
  {
    v60 = v59;
    v61 = sub_1A93F8040();
    v63 = v62;

  }
  else
  {
    v61 = 0;
    v63 = 0;
  }
  *(_QWORD *)(a2 + 96) = v61;
  *(_QWORD *)(a2 + 104) = v63;
  v64 = objc_msgSend((id)objc_opt_self(), sel_validatedIdNumberFromStoreId_, objc_msgSend(a1, sel_storeTrackId));
  if (v64)
  {
    v65 = v64;
    v66 = objc_msgSend(v64, sel_stringValue);
    v67 = sub_1A93F8040();
    v69 = v68;

  }
  else
  {
    v67 = 0;
    v69 = 0;
  }
  *(_QWORD *)(a2 + 112) = v67;
  *(_QWORD *)(a2 + 120) = v69;
  objc_msgSend(a1, sel_playhead);
  v71 = a2 + v35[15];
  *(double *)v71 = v70;
  *(_BYTE *)(v71 + 8) = 0;
  *(_BYTE *)(a2 + v35[19]) = 1;
  v72 = objc_msgSend(a1, sel_itemDescriptionWithoutHTML);
  if (v72)
  {
    v73 = v72;
    v74 = sub_1A93F8040();
    v76 = v75;

  }
  else
  {
    v74 = 0;
    v76 = 0;
  }
  v77 = (uint64_t *)(a2 + v35[17]);
  *v77 = v74;
  v77[1] = v76;
  v78 = a2 + v35[20];
  objc_msgSend(a1, sel_pubDate);
  sub_1A93F72CC();
  v79 = sub_1A93F738C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 0, 1, v79);
  v80 = sub_1A93166F8((uint64_t)objc_msgSend(a1, sel_episodeNumber), (uint64_t)objc_msgSend(a1, sel_seasonNumber), v40, v78);
  v81 = (uint64_t *)(a2 + v35[21]);
  *v81 = v80;
  v81[1] = v82;
  v83 = objc_msgSend(a1, sel_podcast);
  if (v83
    && (v84 = v83, v85 = objc_msgSend(v83, sel_channel), v84, v85))
  {
    v86 = objc_msgSend(v85, sel_subscriptionActive);

  }
  else
  {
    v86 = 0;
  }
  *(_BYTE *)(a2 + v35[22]) = v86;
  v87 = objc_msgSend(a1, sel_isExplicit);
  *(_BYTE *)(a2 + v35[23]) = v87;
  *(_BYTE *)(a2 + v35[25]) = objc_msgSend(a1, sel_isEntitled) ^ 1;
  v88 = a2 + v35[12];
  v89 = objc_msgSend(a1, sel_objectID);
  v90 = objc_msgSend(v89, sel_URIRepresentation);

  sub_1A93F7200();
  v91 = sub_1A93F726C();
  v92 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56);
  v92(v88, 0, 1, v91);
  v93 = 0;
  if (v87)
    v93 = objc_msgSend((id)objc_opt_self(), sel_isExplicitContentAllowed) ^ 1;
  *(_BYTE *)(a2 + v35[24]) = v93;
  if ((objc_msgSend(a1, sel_isAudio) & 1) != 0)
  {
    v94 = 0;
  }
  else if (objc_msgSend(a1, sel_isVideo))
  {
    v94 = 1;
  }
  else if (objc_msgSend(a1, sel_isExternalType))
  {
    v94 = 4;
  }
  else
  {
    v94 = 5;
  }
  *(_BYTE *)(a2 + v35[28]) = v94;
  v95 = objc_msgSend(a1, sel_priceType);
  if (v95)
  {
    v96 = v95;
    v97 = sub_1A93F8040();
    v99 = v98;

    v100._countAndFlagsBits = v97;
    v100._object = v99;
    PriceType.init(rawValue:)(v100);
    v101 = v157;
  }
  else
  {
    v101 = 4;
  }
  *(_BYTE *)(a2 + v35[27]) = v101;
  *(_BYTE *)(a2 + v35[26]) = objc_msgSend(a1, sel_isDownloaded);
  *(_QWORD *)(a2 + v35[18]) = 0;
  v102 = objc_msgSend(a1, sel_podcastUuid);
  if (v102)
  {
    v103 = v102;
    v104 = sub_1A93F8040();
    v106 = v105;

  }
  else
  {
    v104 = 0;
    v106 = 0;
  }
  v107 = (uint64_t *)(a2 + v35[37]);
  *v107 = v104;
  v107[1] = v106;
  v108 = objc_msgSend(a1, sel_podcast);
  if (v108)
  {
    v109 = v108;
    v110 = MTPodcast.episodeSortType.getter();

  }
  else
  {
    v110 = 1;
  }
  *(_BYTE *)(a2 + v35[39]) = v110;
  *(_QWORD *)(a2 + v35[33]) = sub_1A9285474();
  v111 = objc_msgSend(a1, sel_podcast);
  if (v111)
  {
    v112 = v111;
    v113 = objc_msgSend(v111, sel_hidesPlayedEpisodes);

    LOBYTE(v111) = MTPodcastHidesPlayedEpisodesResolved(v113);
  }
  *(_BYTE *)(a2 + v35[40]) = (_BYTE)v111;
  v114 = objc_msgSend(a1, sel_transcriptIdentifier);
  v156 = v91;
  if (v114)
  {
    v115 = v114;
    v116 = v86;
    v117 = sub_1A93F8040();
    v119 = v118;

  }
  else
  {
    v116 = v86;
    v117 = 0;
    v119 = 0;
  }
  v120 = (uint64_t *)(a2 + v35[34]);
  *v120 = v117;
  v120[1] = v119;
  v121 = objc_msgSend(a1, sel_podcast);
  v122 = v121;
  if (v121)
  {
    v123 = objc_msgSend(v121, sel_channel);

    if (v123
      && (v124 = objc_msgSend(v123, sel_subscriptionOfferAppType),
          v123,
          v124))
    {
      v154 = v92;
      v125 = sub_1A93F8040();
      v127 = v126;

      if (v125 == 1937204590 && v127 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        LOBYTE(v122) = 1;
      }
      else
      {
        LOBYTE(v122) = sub_1A93F90C0();
        swift_bridgeObjectRelease();
      }
      v92 = v154;
    }
    else
    {
      LOBYTE(v122) = 0;
    }
  }
  *(_BYTE *)(a2 + v35[41]) = v122 & 1;
  v128 = objc_msgSend(a1, sel_podcast);
  v129 = v128;
  if (v128)
  {
    v130 = objc_msgSend(v128, sel_channel);

    if (v130
      && (v131 = objc_msgSend(v130, sel_subscriptionOfferAppType),
          v130,
          v131))
    {
      v132 = sub_1A93F8040();
      v134 = v133;

      if (v132 == 0x636973756DLL && v134 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        LOBYTE(v129) = 1;
      }
      else
      {
        LOBYTE(v129) = sub_1A93F90C0();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      LOBYTE(v129) = 0;
    }
  }
  *(_BYTE *)(a2 + v35[42]) = v129 & 1;
  if (v116)
    v135 = objc_msgSend(a1, sel_entitledTranscriptProvider);
  else
    v135 = objc_msgSend(a1, sel_freeTranscriptProvider);
  v136 = v135;
  if (v136)
  {
    v137 = sub_1A93F8040();
    v139 = v138;

  }
  else
  {
    v137 = 0;
    v139 = 0;
  }
  v140 = v156;
  v141 = (uint64_t *)(a2 + v35[35]);
  *v141 = v137;
  v141[1] = v139;
  v142 = (_QWORD *)(a2 + v35[38]);
  *v142 = 0;
  v142[1] = 0;
  *(_BYTE *)(a2 + v35[43]) = 0;
  v143 = objc_msgSend(a1, sel_podcast);
  if (v143
    && (v144 = v143,
        v145 = objc_msgSend(v143, sel_storeCollectionId),
        v144,
        (uint64_t)objc_msgSend(a1, sel_storeTrackId) >= 1))
  {
    v146 = v92;
    v147 = objc_msgSend((id)objc_opt_self(), sel_productURLForStoreCollectionId_storeTrackId_, v145, objc_msgSend(a1, sel_storeTrackId));
    if (v147)
    {
      v148 = v147;
      v149 = (uint64_t)v155;
      sub_1A93F7200();

      v150 = 0;
    }
    else
    {
      v150 = 1;
      v149 = (uint64_t)v155;
    }
    v146(v149, v150, 1, v140);
    sub_1A9062F08(v149, a2 + v35[36], &qword_1ED2AD3D0);
  }
  else
  {
    v92(a2 + v35[36], 1, 1, v140);
  }
  *(_BYTE *)(a2 + v35[44]) = objc_msgSend(a1, sel_feedDeleted);
  v151 = objc_msgSend(a1, sel_podcast);
  if (v151)
  {
    v152 = v151;
    v153 = sub_1A92857A0();

  }
  else
  {
    v153 = 4;
  }

  *(_BYTE *)(a2 + v35[45]) = v153;
}

uint64_t sub_1A927F9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  char v105;

  v91 = a1;
  v92 = a2;
  v101 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v76 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v56 - v10;
  v78 = (uint64_t)&v56 - v10;
  v12 = *(_QWORD *)v3;
  v99 = *(_QWORD *)(v3 + 8);
  v100 = v12;
  v13 = *(_QWORD *)(v3 + 16);
  v97 = *(_QWORD *)(v3 + 24);
  v98 = v13;
  v14 = *(_QWORD *)(v3 + 32);
  v95 = *(_QWORD *)(v3 + 40);
  v96 = v14;
  v94 = *(_QWORD *)(v3 + 48);
  v93 = *(unsigned __int8 *)(v3 + 56);
  v90 = *(_QWORD *)(v3 + 64);
  v89 = *(unsigned __int8 *)(v3 + 72);
  v15 = *(_QWORD *)(v3 + 80);
  v87 = *(_QWORD *)(v3 + 88);
  v88 = v15;
  v16 = *(_QWORD *)(v3 + 96);
  v85 = *(_QWORD *)(v3 + 104);
  v86 = v16;
  v84 = *(_QWORD *)(v3 + 112);
  v83 = *(_QWORD *)(v3 + 120);
  v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v18 = v17[14];
  v19 = (uint64_t *)(v3 + v17[13]);
  v21 = *v19;
  v20 = v19[1];
  v82 = v21;
  v81 = v20;
  v22 = *(double *)(v3 + v18);
  v23 = v17[16];
  v24 = v3 + v17[15];
  v80 = *(_QWORD *)v24;
  v79 = *(unsigned __int8 *)(v24 + 8);
  sub_1A9062170(v3 + v23, (uint64_t)v11, &qword_1ED2AD3D0);
  v25 = (uint64_t *)(v3 + v17[17]);
  v73 = *(_QWORD *)(v3 + v17[18]);
  v27 = *v25;
  v26 = v25[1];
  v75 = v27;
  v74 = v26;
  v28 = v17[20];
  v71 = *(unsigned __int8 *)(v3 + v17[19]);
  sub_1A9062170(v3 + v28, (uint64_t)v6, (uint64_t *)&unk_1ED2AD360);
  v29 = (uint64_t *)(v3 + v17[21]);
  v67 = *(unsigned __int8 *)(v3 + v17[22]);
  v30 = v17[24];
  v66 = *(unsigned __int8 *)(v3 + v17[23]);
  v65 = *(unsigned __int8 *)(v3 + v30);
  v31 = v17[26];
  v63 = *(unsigned __int8 *)(v3 + v17[25]);
  v32 = *(_BYTE *)(v3 + v31);
  v34 = *v29;
  v33 = v29[1];
  v64 = v34;
  v102 = v33;
  v105 = v32;
  v35 = v17[28];
  v104 = *(_BYTE *)(v3 + v17[27]);
  v103 = *(_BYTE *)(v3 + v35);
  v36 = v17[30];
  v62 = *(_QWORD *)(v3 + v17[29]);
  v60 = *(_QWORD *)(v3 + v36);
  v37 = v17[32];
  v59 = *(unsigned __int8 *)(v3 + v17[31]);
  v38 = *(_QWORD *)(v3 + v37 + 8);
  v58 = *(_QWORD *)(v3 + v37);
  v68 = v38;
  v39 = v17[34];
  v69 = *(_QWORD *)(v3 + v17[33]);
  v40 = v69;
  v41 = *(_QWORD *)(v3 + v39 + 8);
  v57 = *(_QWORD *)(v3 + v39);
  v72 = v41;
  v42 = *(_BYTE *)(v3 + v17[41]);
  v43 = *(_BYTE *)(v3 + v17[42]);
  v44 = (uint64_t *)(v3 + v17[35]);
  v45 = v3 + v17[36];
  v46 = *v44;
  v77 = v44[1];
  v47 = v77;
  v48 = v76;
  sub_1A9062170(v45, v76, &qword_1ED2AD3D0);
  v49 = (uint64_t *)(v3 + v17[37]);
  v50 = v17[44];
  v51 = *(_BYTE *)(v3 + v17[43]);
  v52 = *v49;
  v61 = v49[1];
  *((_QWORD *)&v55 + 1) = v85;
  *(_QWORD *)&v55 = v86;
  *((_QWORD *)&v54 + 1) = v87;
  *(_QWORD *)&v54 = v88;
  PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:)(v100, v99, v98, v97, v96, v95, v94, v93, v101, v22, v90, v89, v54, v55, v84, v83, v82, v81, v80,
    v79,
    v78,
    v75,
    v74,
    v73,
    v71,
    (uint64_t)v70,
    v64,
    v102,
    v67,
    v66,
    v65,
    v63,
    &v105,
    &v104,
    &v103,
    v62,
    v60,
    v59,
    v58,
    v38,
    v40,
    v57,
    v41,
    v42,
    v43,
    v46,
    v47,
    v48,
    v52,
    v61,
    v91,
    v92,
    v51,
    *(_BYTE *)(v3 + v50),
    *(_BYTE *)(v3 + v17[45]));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1A927FF3C(char *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id **v34;
  uint64_t v35;
  int *v36;
  int *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *i;
  char *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  Swift::String v86;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  Swift::String v102;
  char v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *v114;
  Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  unsigned int v121;
  _QWORD *v122;
  int32x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int32x2_t v126;
  _QWORD *v127;
  unint64_t v128;
  unint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  unint64_t *v145;
  void *v146;
  int *v147;
  uint64_t v148;
  void *v149;
  char v150;
  char v151;
  char v152;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (int *)((char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v143 - v12;
  v14 = objc_msgSend(a1, sel_title, v11);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1A93F8040();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  *(_QWORD *)a3 = v16;
  *(_QWORD *)(a3 + 8) = v18;
  v20 = *(_QWORD *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id];
  v19 = *(_QWORD *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id + 8];
  v145 = (unint64_t *)&a1[OBJC_IVAR___MTServerPodcastEpisode_id];
  swift_bridgeObjectRetain();
  v21 = sub_1A931883C(v20, v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 48) = v21;
  *(_BYTE *)(a3 + 56) = 0;
  v22 = (id *)&a1[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  swift_beginAccess();
  if (!*v22)
    goto LABEL_14;
  v23 = *(_QWORD *)((char *)*v22 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_playbackPosition);
  if (!v23)
    goto LABEL_14;
  v24 = *(_QWORD *)(v23 + 16);
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1A93F8E5C())
      goto LABEL_8;
    goto LABEL_13;
  }
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v25)
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    v31 = *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 60);
    *(_QWORD *)(a3 + v31) = 0;
    v30 = 1;
    goto LABEL_15;
  }
LABEL_8:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v26 = MEMORY[0x1AF4129DC](0, v24);
  }
  else
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_72;
    }
    v26 = *(_QWORD *)(v24 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 64);
  swift_retain();
  swift_release();
  v28 = *(double *)(v27 + 16);
  swift_release();
  v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v30 = 0;
  v31 = *(int *)(v29 + 60);
  *(double *)(a3 + v31) = v28 / 1000.0;
LABEL_15:
  *(_BYTE *)(a3 + v31 + 8) = v30;
  v32 = (char *)*v22;
  v144 = v9;
  if (v32
    && (v33 = &v32[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast],
        swift_beginAccess(),
        *(_QWORD *)v33))
  {
    v34 = (id **)(*(_QWORD *)v33 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
    swift_beginAccess();
    v22 = *v34;
    if ((unint64_t)v22 >> 62)
    {
      v81 = a2;
      swift_bridgeObjectRetain();
      if (sub_1A93F8E5C())
      {
LABEL_19:
        if (((unint64_t)v22 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            swift_bridgeObjectRetain();
            if (sub_1A93F8E5C())
              goto LABEL_63;
            goto LABEL_75;
          }
          v37 = (int *)v22[4];
          goto LABEL_22;
        }
LABEL_72:
        v37 = (int *)MEMORY[0x1AF4129DC](0, v22);
LABEL_22:
        v9 = v37;
        swift_bridgeObjectRelease();

        goto LABEL_25;
      }
    }
    else
    {
      v35 = *(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      v36 = a2;
      swift_bridgeObjectRetain();
      if (v35)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = a2;
  }
  v9 = a2;
LABEL_25:
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  v3 = OBJC_IVAR___MTServerPodcastEpisode_attributes;
  v39 = *(_QWORD *)&a1[OBJC_IVAR___MTServerPodcastEpisode_attributes];
  v40 = *(_QWORD *)(v39 + 328);
  *(_QWORD *)(a3 + 96) = *(_QWORD *)(v39 + 320);
  *(_QWORD *)(a3 + 104) = v40;
  swift_bridgeObjectRetain();
  *(_QWORD *)(a3 + 112) = sub_1A9284F98();
  *(_QWORD *)(a3 + 120) = v41;
  v147 = a2;
  if (v9)
  {
    v43 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
    v42 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
    swift_bridgeObjectRetain();
    v44 = sub_1A931883C(v43, v42);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a3 + 64) = v44;
    *(_BYTE *)(a3 + 72) = 0;
    v45 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    if (v45)
    {
      v46 = *(_QWORD *)(v45 + 96);
      if (v46)
      {
        v47 = *(_QWORD *)(v45 + 88);
        swift_bridgeObjectRetain();
        goto LABEL_32;
      }
    }
  }
  else
  {
    *(_QWORD *)(a3 + 64) = 0;
    *(_BYTE *)(a3 + 72) = 1;
  }
  swift_bridgeObjectRelease();
  v47 = 0;
  v46 = 0xE000000000000000;
LABEL_32:
  a2 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v48 = (_QWORD *)(a3 + a2[13]);
  *v48 = v47;
  v48[1] = v46;
  v49 = *(_QWORD *)(*(_QWORD *)&a1[v3] + 112);
  if (v49)
  {
    v50 = *(_QWORD *)(v49 + 16);
    v51 = swift_bridgeObjectRetain();
  }
  else
  {
    v50 = 0;
    v51 = 0;
  }
  v52 = (_QWORD *)(a3 + a2[17]);
  *v52 = v50;
  v52[1] = v51;
  if (v9
    && (v53 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0
    && (v54 = *(_QWORD *)(v53 + 112)) != 0)
  {
    if (!*(_QWORD *)(v54 + 56) || (*(_BYTE *)(v54 + 24) & 1) != 0 || (*(_BYTE *)(v54 + 40) & 1) != 0)
    {
      v55 = sub_1A93F726C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v13, 1, 1, v55);
    }
    else
    {
      v149 = *(void **)(v54 + 48);
      v77 = v3;
      v78 = *(_QWORD *)(v54 + 16);
      v79 = *(_QWORD *)(v54 + 32);
      v148 = type metadata accessor for ArtworkFormatter();
      v80 = (double)v78;
      v3 = v77;
      swift_retain();
      static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v13, v80, (double)v79);
      swift_release();
    }
    sub_1A9062F08((uint64_t)v13, a3 + a2[16], &qword_1ED2AD3D0);
  }
  else
  {
    v56 = sub_1A93F726C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v13, 1, 1, v56);
    sub_1A9062F08((uint64_t)v13, a3 + a2[16], &qword_1ED2AD3D0);
    if (!v9)
    {
LABEL_47:
      v59 = 0;
      v60 = 0;
      goto LABEL_48;
    }
  }
  v57 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v57)
    goto LABEL_47;
  v58 = *(_QWORD *)(v57 + 112);
  if (!v58)
    goto LABEL_47;
  v59 = *(_QWORD *)(v58 + 48);
  v60 = swift_bridgeObjectRetain();
LABEL_48:
  v61 = (_QWORD *)(a3 + a2[32]);
  *v61 = v59;
  v61[1] = v60;
  *(_QWORD *)(a3 + a2[18]) = *(_QWORD *)(*(_QWORD *)&a1[v3] + 136);
  if (v9 && (v62 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0)
    v63 = (*(_BYTE *)(v62 + 48) == 2) | *(_BYTE *)(v62 + 48);
  else
    v63 = 1;
  *(_BYTE *)(a3 + a2[19]) = v63 & 1;
  v64 = a3 + a2[20];
  swift_retain();
  swift_retain();
  PodcastEpisodeAttributes.releaseDateResolved.getter(v64);
  swift_release();
  if (v9)
  {
    v65 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
    if (v65)
    {
      v66 = *(void **)(v65 + 144);
      swift_retain();
      if (v66)
        v66 = (void *)sub_1A93F8010();
      v67 = objc_msgSend((id)objc_opt_self(), sel_showTypeFromString_, v66);
      swift_release();

      LOBYTE(v65) = v67 == (id)2;
    }
  }
  else
  {
    LOBYTE(v65) = 0;
  }
  *(_BYTE *)(a3 + a2[31]) = v65;
  *(_QWORD *)(a3 + a2[29]) = objc_msgSend(a1, sel_episodeNumber);
  *(_QWORD *)(a3 + a2[30]) = objc_msgSend(a1, sel_seasonNumber);
  v68 = sub_1A93166F8((uint64_t)objc_msgSend(a1, sel_episodeNumber), (uint64_t)objc_msgSend(a1, sel_seasonNumber), v65, v64);
  v69 = (uint64_t *)(a3 + a2[21]);
  *v69 = v68;
  v69[1] = v70;
  if (!v9)
    goto LABEL_76;
  v71 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (!v71)
    goto LABEL_76;
  v72 = *(_QWORD *)(v71 + 16);
  if (!v72)
    goto LABEL_76;
  v22 = *(id **)(v72 + 16);
  if ((unint64_t)v22 >> 62)
    goto LABEL_74;
  v73 = *(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v73)
  {
LABEL_75:
    swift_bridgeObjectRelease();
LABEL_76:
    v76 = 0;
    v75 = 0;
    goto LABEL_77;
  }
LABEL_63:
  if (((unint64_t)v22 & 0xC000000000000001) != 0)
    goto LABEL_121;
  if (!*(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_123;
  }
  for (i = (char *)v22[4]; ; i = (char *)MEMORY[0x1AF4129DC](0, v22))
  {
    v75 = i;
    swift_bridgeObjectRelease();
    v76 = *(_BYTE *)(*(_QWORD *)&v75[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 74) & 1;
LABEL_77:
    *(_BYTE *)(a3 + a2[22]) = v76;
    v22 = *(id **)(*(_QWORD *)&a1[v3] + 72);
    LODWORD(v148) = v76;
    if (!v22)
      goto LABEL_86;
    if ((unint64_t)v22 >> 62)
      break;
    v82 = *(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v82)
      goto LABEL_85;
LABEL_80:
    if (((unint64_t)v22 & 0xC000000000000001) != 0)
    {
      v83 = MEMORY[0x1AF4129DC](0, v22);
LABEL_83:
      swift_bridgeObjectRelease();
      v84 = *(_QWORD *)(v83 + 16);
      v85 = *(void **)(v83 + 24);
      swift_bridgeObjectRetain();
      v86._countAndFlagsBits = v84;
      v86._object = v85;
      PriceType.init(rawValue:)(v86);
      swift_release();
      __asm { BR              X11 }
    }
    if (*(_QWORD *)(((unint64_t)v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v83 = (uint64_t)v22[4];
      swift_retain();
      goto LABEL_83;
    }
    __break(1u);
LABEL_121:
    ;
  }
  swift_bridgeObjectRetain();
  if (sub_1A93F8E5C())
    goto LABEL_80;
LABEL_85:
  swift_bridgeObjectRelease();
LABEL_86:
  v87 = 0;
  *(_BYTE *)(a3 + a2[25]) = 0;
  if (v75)
    v87 = (Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)*(unsigned __int8 *)(*(_QWORD *)&v75[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 74);
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v87, (Swift::Bool)&v152);
  v89 = v88;
  v91 = v90;
  v92 = v152;
  objc_msgSend(a1, sel_duration);
  *(_QWORD *)(a3 + a2[14]) = v93;
  *(_QWORD *)(a3 + 16) = v89;
  *(_QWORD *)(a3 + 24) = v91;
  if (v9
    && (v94 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes)) != 0
    && (v95 = *(_QWORD *)(v94 + 80)) != 0)
  {
    v96 = *(_QWORD *)(v94 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = *(_QWORD *)&a1[v3];
    v96 = *(_QWORD *)(v97 + 56);
    v95 = *(_QWORD *)(v97 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v149 = v75;
  *(_QWORD *)(a3 + 32) = v96;
  *(_QWORD *)(a3 + 40) = v95;
  *(_BYTE *)(a3 + a2[27]) = v92;
  *(_BYTE *)(a3 + a2[26]) = 0;
  v98 = *(_QWORD *)&a1[v3];
  v99 = *(void **)(v98 + 280);
  v146 = 0;
  v100 = v3;
  if (v99)
  {
    v101 = *(_QWORD *)(v98 + 272);
    swift_bridgeObjectRetain();
    v102._countAndFlagsBits = v101;
    v102._object = v99;
    PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v102);
    v103 = v152;
    if (v152 == 5)
      v103 = 0;
  }
  else
  {
    v103 = 0;
  }
  *(_BYTE *)(a3 + a2[28]) = v103;
  *(_BYTE *)(a3 + a2[23]) = objc_msgSend(a1, sel_isExplicit);
  *(_BYTE *)(a3 + a2[24]) = objc_msgSend(a1, sel_isRestricted);
  v104 = (_QWORD *)(a3 + a2[37]);
  *v104 = 0;
  v104[1] = 0;
  *(_BYTE *)(a3 + a2[39]) = 1;
  *(_BYTE *)(a3 + a2[40]) = 0;
  v105 = a3 + a2[12];
  v106 = sub_1A93F726C();
  v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56);
  v107(v105, 1, 1, v106);
  v108 = v9;
  v109 = sub_1A9285080((uint64_t)v9);

  *(_QWORD *)(a3 + a2[33]) = v109;
  v110 = *(_QWORD *)&a1[v100];
  swift_beginAccess();
  v111 = *(_QWORD *)(v110 + 264);
  if (v111)
  {
    v112 = *(_QWORD *)(v110 + 256);
    if (v112 == 1937204590 && v111 == 0xE400000000000000)
    {
      *(_BYTE *)(a3 + a2[41]) = 1;
      goto LABEL_106;
    }
    *(_BYTE *)(a3 + a2[41]) = sub_1A93F90C0() & 1;
    if (v112 == 0x636973756DLL && v111 == 0xE500000000000000)
      v113 = 1;
    else
LABEL_106:
      v113 = sub_1A93F90C0();
  }
  else
  {
    v113 = 0;
    *(_BYTE *)(a3 + a2[41]) = 0;
  }
  v114 = (Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)a2[42];
  *((_BYTE *)&v114->priceType + a3) = v113 & 1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v114, (Swift::Bool)&v150);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v115, (PodcastsFoundation::PriceType)&v151);
  v117 = v116;
  v119 = v118;
  swift_bridgeObjectRelease();
  v120 = v151;
  v121 = v151 == 2;
  v122 = (_QWORD *)(a3 + a2[34]);
  *v122 = v117;
  v122[1] = v119;
  v123 = vdup_n_s32((v120 & 1) == 0);
  v124.i64[0] = v123.u32[0];
  v124.i64[1] = v123.u32[1];
  v125 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v124, 0x3FuLL)), (int8x16_t)xmmword_1A9417BB0, (int8x16_t)xmmword_1A9417BA0);
  v126 = vdup_n_s32(v121);
  v124.i64[0] = v126.u32[0];
  v124.i64[1] = v126.u32[1];
  *(int8x16_t *)(a3 + a2[35]) = vandq_s8(v125, (int8x16_t)vcgezq_s64(vshlq_n_s64(v124, 0x3FuLL)));
  v127 = (_QWORD *)(a3 + a2[38]);
  *v127 = 0;
  v127[1] = 0;
  *(_BYTE *)(a3 + a2[43]) = 0;
  if (v9)
  {
    v128 = *(_QWORD *)&v108[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
    v129 = *(_QWORD *)&v108[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8];
    swift_bridgeObjectRetain();
    v130 = v146;
    v131 = sub_1A931883C(v128, v129);
    v132 = v149;
    if (v130)
    {

      swift_bridgeObjectRelease();
      goto LABEL_112;
    }
    v133 = v131;
    swift_bridgeObjectRelease();
    v134 = *v145;
    v135 = v145[1];
    swift_bridgeObjectRetain();
    v136 = sub_1A931883C(v134, v135);
    swift_bridgeObjectRelease();
    v137 = (void *)objc_opt_self();
    if (((v136 | v133) & 0x8000000000000000) == 0)
    {
      v138 = objc_msgSend(v137, sel_productURLForStoreCollectionId_storeTrackId_, v133, v136);
      v139 = v149;
      if (v138)
      {
        v140 = v138;
        v141 = (uint64_t)v144;
        sub_1A93F7200();

        v142 = 0;
      }
      else
      {
        v142 = 1;
        v141 = (uint64_t)v144;
      }

      v107(v141, v142, 1, v106);
      sub_1A9062F08(v141, a3 + a2[36], &qword_1ED2AD3D0);
      goto LABEL_113;
    }
LABEL_123:
    __break(1u);
    JUMPOUT(0x1A9280D70);
  }

  v132 = v149;
LABEL_112:

  v107(a3 + a2[36], 1, 1, v106);
LABEL_113:

  *(_BYTE *)(a3 + a2[44]) = 0;
  *(_BYTE *)(a3 + a2[45]) = 3;
}

uint64_t sub_1A9280D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v37 = MEMORY[0x1E0DEE9E0];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v15 = *(_QWORD *)(v3 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v15 = *(_QWORD *)(v3 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v15 = *(_QWORD *)(v3 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_24:
    v6 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_6:
    v12 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11 + 8);
    if (v13 >> 60 == 15)
      goto LABEL_7;
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v19 = v18[1];
    v36 = *v18;
    v20 = *(_QWORD *)(v2 + 16);
    v35 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    if (*(_QWORD *)(v2 + 24) <= v20)
    {
      v22 = v20 + 1;
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
      sub_1A906A3DC(v12, v13);
      sub_1A906A3DC(v23, v13);
      swift_bridgeObjectRetain();
      sub_1A92FE38C(v22, 1);
      v2 = v37;
    }
    else
    {
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v11);
      sub_1A906A3DC(v12, v13);
      sub_1A906A3DC(v21, v13);
      swift_bridgeObjectRetain();
    }
    sub_1A93F92DC();
    sub_1A93F7FBC();
    result = sub_1A93F9324();
    v24 = v2 + 64;
    v25 = -1 << *(_BYTE *)(v2 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v2 + 64 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      v12 = v35;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v24 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_38;
        }
      }
      goto LABEL_41;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v2 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    v12 = v35;
LABEL_38:
    *(_QWORD *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = 16 * v28;
    v34 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v33);
    *v34 = v36;
    v34[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v2 + 56) + v33) = v12;
    ++*(_QWORD *)(v2 + 16);
LABEL_7:
    result = sub_1A9069F9C(v12, v13);
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1A9120240();
    return v2;
  }
  v15 = *(_QWORD *)(v3 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t URLTrackIdentifier.init(id:playbackContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t inited;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = a2;
  v9 = sub_1A91132C8(inited);
  v10 = *(void **)(a3 + 40);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v11, sel_ams_DSID);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, sel_stringValue);

      v15 = sub_1A93F8040();
      v17 = v16;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A930E7C8(v15, v17, 16, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  v19 = sub_1A9174C98(v9);
  swift_bridgeObjectRelease();
  result = sub_1A9064714(a3, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  *(_QWORD *)a4 = v19;
  *(_BYTE *)(a4 + 8) = 4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.assetURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.storeTrackId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastStoreId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t PodcastsMediaLibrary.MediaItem.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.guid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.externalContentID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.managedObjectIdentifierURI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9285EC4(type metadata accessor for PodcastsMediaLibrary.MediaItem, a1);
}

uint64_t PodcastsMediaLibrary.MediaItem.author.getter()
{
  return sub_1A9285F10(type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

double PodcastsMediaLibrary.MediaItem.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 56));
}

uint64_t PodcastsMediaLibrary.MediaItem.playhead.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 60));
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 64), a1, &qword_1ED2AD3D0);
}

uint64_t PodcastsMediaLibrary.MediaItem.itemDescription.getter()
{
  return sub_1A9285FF4(type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t PodcastsMediaLibrary.MediaItem.serverArtwork.getter()
{
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return swift_retain();
}

uint64_t PodcastsMediaLibrary.MediaItem.isSubscribable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 76));
}

uint64_t PodcastsMediaLibrary.MediaItem.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 80), a1, (uint64_t *)&unk_1ED2AD360);
}

uint64_t PodcastsMediaLibrary.MediaItem.album.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.isSubscriptionActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 88));
}

uint64_t PodcastsMediaLibrary.MediaItem.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 92));
}

uint64_t PodcastsMediaLibrary.MediaItem.isRestricted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 96));
}

uint64_t PodcastsMediaLibrary.MediaItem.subscriptionRequired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 100));
}

uint64_t PodcastsMediaLibrary.MediaItem.itemType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 104));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.priceType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 108));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.mediaKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 112));
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.ItemType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.ItemType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C6E776F64;
  else
    return 0x6D6165727473;
}

uint64_t sub_1A9281600(char *a1, char *a2)
{
  return sub_1A92FA9F4(*a1, *a2);
}

uint64_t sub_1A928160C()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9281688()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92816E0()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A9281758@<X0>(char *a1@<X8>)
{
  return PodcastsMediaLibrary.MediaItem.ItemType.init(rawValue:)(a1);
}

void sub_1A9281764(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6D6165727473;
  if (*v1)
    v2 = 0x64616F6C6E776F64;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A92817A0()
{
  sub_1A928E4D4();
  return sub_1A93F82BC();
}

uint64_t sub_1A92817FC()
{
  sub_1A928E4D4();
  return sub_1A93F828C();
}

uint64_t PodcastsMediaLibrary.MediaItem.episodeNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 116));
}

uint64_t PodcastsMediaLibrary.MediaItem.seasonNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 120));
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastIsSerial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 124));
}

uint64_t PodcastsMediaLibrary.MediaItem.showArtworkTemplateURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 128));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.newsSubscriptionInformation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  result = 0;
  if (*(_BYTE *)(v0 + *(int *)(v1 + 164)) == 1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v1 + 88)))
      return 0x2B7377656ELL;
    else
      return 1701736302;
  }
  return result;
}

char *PodcastsMediaLibrary.MediaItem.musicSubscriptionInformation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *result;

  v1 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  result = 0;
  if (*(_BYTE *)(v0 + *(int *)(v1 + 168)) == 1)
  {
    type metadata accessor for MusicSubscriptionInfoLoader();
    return static MusicSubscriptionInfoLoader.loadIfNeeded()();
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkResponseDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 72)))
    return 0;
  swift_retain();
  v1 = sub_1A9281A2C();
  swift_release();
  return v1;
}

uint64_t sub_1A9281A2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11[5];

  v11[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  sub_1A9066CA8(&qword_1ED2A1FF8, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
  v1 = sub_1A93F6DD4();
  v3 = v2;
  result = swift_release();
  if (!v0)
  {
    v5 = (void *)objc_opt_self();
    v6 = (void *)sub_1A93F729C();
    v11[0] = 0;
    v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v11);

    if (v7)
    {
      v8 = v11[0];
      sub_1A93F8B44();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1A905F180(v1, v3);
        return v10;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB35C8]), sel_init);
    }
    else
    {
      v9 = v11[0];
      sub_1A93F7128();

    }
    swift_willThrow();
    return sub_1A905F180(v1, v3);
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.artworkInfo.getter()
{
  type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.MediaItem.transcriptIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 136));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.transcriptSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 140));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 144), a1, &qword_1ED2AD3D0);
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 148));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.restorationContentItemID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 152));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItem.isShallow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 172));
}

uint64_t PodcastsMediaLibrary.MediaItem.feedDeleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 176));
}

uint64_t PodcastsMediaLibrary.MediaItem.podcastSubscriptionState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 180));
}

uint64_t PodcastsMediaLibrary.MediaItem.init(title:assetURL:feedURL:storeTrackId:podcastStoreId:uuid:guid:externalContentID:author:duration:playhead:artworkURL:itemDescription:serverArtwork:isSubscribable:releaseDate:album:isSubscriptionActive:isExplicit:isRestricted:subscriptionRequired:itemType:priceType:mediaKind:episodeNumber:seasonNumber:podcastIsSerial:showArtworkTemplateURL:artworkInfo:transcriptIdentifier:isAppleNewsEpisode:isAppleMusicEpisode:transcriptSource:shareURL:podcastUUID:restorationContentItemID:isShallow:feedDeleted:podcastSubscriptionState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, __int128 a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,char a30,char a31,char a32,char *a33,char *a34,char *a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,char a54,char a55)
{
  int *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  _QWORD *v69;
  char v70;
  char v71;
  char v72;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a11;
  *(_BYTE *)(a9 + 72) = a12 & 1;
  *(_QWORD *)(a9 + 112) = a15;
  *(_QWORD *)(a9 + 120) = a16;
  v70 = *a33;
  v71 = *a34;
  v72 = *a35;
  *(_OWORD *)(a9 + 80) = a13;
  *(_OWORD *)(a9 + 96) = a14;
  v57 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v58 = (_QWORD *)(a9 + v57[13]);
  *v58 = a17;
  v58[1] = a18;
  *(double *)(a9 + v57[14]) = a10;
  v59 = a9 + v57[15];
  *(_QWORD *)v59 = a19;
  *(_BYTE *)(v59 + 8) = a20 & 1;
  sub_1A9062F08(a21, a9 + v57[16], &qword_1ED2AD3D0);
  v60 = (_QWORD *)(a9 + v57[17]);
  *v60 = a22;
  v60[1] = a23;
  *(_QWORD *)(a9 + v57[18]) = a24;
  *(_BYTE *)(a9 + v57[19]) = a25;
  sub_1A9062F08(a26, a9 + v57[20], (uint64_t *)&unk_1ED2AD360);
  v61 = (_QWORD *)(a9 + v57[21]);
  *v61 = a27;
  v61[1] = a28;
  *(_BYTE *)(a9 + v57[22]) = a29;
  *(_BYTE *)(a9 + v57[23]) = a30;
  *(_BYTE *)(a9 + v57[24]) = a31;
  *(_BYTE *)(a9 + v57[25]) = a32;
  *(_BYTE *)(a9 + v57[26]) = v70;
  *(_BYTE *)(a9 + v57[27]) = v71;
  *(_BYTE *)(a9 + v57[28]) = v72;
  *(_QWORD *)(a9 + v57[29]) = a36;
  *(_QWORD *)(a9 + v57[30]) = a37;
  *(_BYTE *)(a9 + v57[31]) = a38;
  v62 = (_QWORD *)(a9 + v57[32]);
  *v62 = a39;
  v62[1] = a40;
  v63 = (_QWORD *)(a9 + v57[37]);
  *v63 = a49;
  v63[1] = a50;
  *(_BYTE *)(a9 + v57[39]) = 1;
  *(_QWORD *)(a9 + v57[33]) = a41;
  *(_BYTE *)(a9 + v57[40]) = 0;
  v64 = (_QWORD *)(a9 + v57[34]);
  *v64 = a42;
  v64[1] = a43;
  *(_BYTE *)(a9 + v57[41]) = a44;
  *(_BYTE *)(a9 + v57[42]) = a45;
  v65 = (_QWORD *)(a9 + v57[35]);
  *v65 = a46;
  v65[1] = a47;
  v66 = a9 + v57[12];
  v67 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 1, 1, v67);
  result = sub_1A9062F08(a48, a9 + v57[36], &qword_1ED2AD3D0);
  v69 = (_QWORD *)(a9 + v57[38]);
  *v69 = a51;
  v69[1] = a52;
  *(_BYTE *)(a9 + v57[43]) = a53;
  *(_BYTE *)(a9 + v57[44]) = a54;
  *(_BYTE *)(a9 + v57[45]) = a55;
  return result;
}

Swift::Bool __swiftcall PodcastsMediaLibrary.MediaItem.isTransferable(deviceCanUseGuidIdentifiers:)(Swift::Bool deviceCanUseGuidIdentifiers)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + *(int *)(v6 + 176)) & 1) == 0)
  {
    if ((*(_BYTE *)(v1 + 56) & 1) == 0)
    {
      v7 = *(_QWORD *)(v1 + 48);
      if (v7 != 1000000000000 && v7 != 0)
        return 1;
    }
    if (deviceCanUseGuidIdentifiers)
    {
      v9 = *(_QWORD *)(v1 + 104);
      sub_1A9064630(v1, (uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      if (v9)
      {
        v10 = *((_QWORD *)v5 + 5);
        sub_1A9064714((uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
        if (v10)
          return 1;
      }
      else
      {
        sub_1A9064714((uint64_t)v5, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      }
    }
  }
  return 0;
}

uint64_t sub_1A9282244(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v31 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v7 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v33 = v3;
    v8 = v7 | (v3 << 6);
LABEL_25:
    v13 = result;
    v14 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v8);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(result + 56) + 32 * v8);
    v19 = *v17;
    v18 = v17[1];
    v21 = v17[2];
    v20 = v17[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1A9094640(v15, v16);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0
      || ((v25 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 32 * v22), v26 = v25[2], v27 = v25[3], *v25 == v19)
        ? (v28 = v25[1] == v18)
        : (v28 = 0),
          !v28 && (sub_1A93F90C0() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v26 == v21 && v27 == v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v13;
      v3 = v33;
    }
    else
    {
      v30 = sub_1A93F90C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v13;
      v3 = v33;
      if ((v30 & 1) == 0)
        return 0;
    }
  }
  v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v9 >= v32)
    return 1;
  v10 = *(_QWORD *)(v31 + 8 * v9);
  v11 = v3 + 1;
  if (v10)
    goto LABEL_24;
  v11 = v3 + 2;
  if (v3 + 2 >= v32)
    return 1;
  v10 = *(_QWORD *)(v31 + 8 * v11);
  if (v10)
    goto LABEL_24;
  v11 = v3 + 3;
  if (v3 + 3 >= v32)
    return 1;
  v10 = *(_QWORD *)(v31 + 8 * v11);
  if (v10)
    goto LABEL_24;
  v11 = v3 + 4;
  if (v3 + 4 >= v32)
    return 1;
  v10 = *(_QWORD *)(v31 + 8 * v11);
  if (v10)
  {
LABEL_24:
    v6 = (v10 - 1) & v10;
    v33 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_25;
  }
  v12 = v3 + 5;
  if (v3 + 5 >= v32)
    return 1;
  v10 = *(_QWORD *)(v31 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v32)
      return 1;
    v10 = *(_QWORD *)(v31 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_24;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A92824E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int64_t v21;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 64);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v21 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
LABEL_22:
      v10 = 16 * v6;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v10);
      v12 = *v11;
      v13 = v11[1];
      v14 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v10);
      v16 = *v14;
      v15 = v14[1];
      swift_bridgeObjectRetain();
      sub_1A90D8068(v16, v15);
      v17 = sub_1A9094640(v12, v13);
      v19 = v18;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        __asm { BR              X8 }
      sub_1A905F180(v16, v15);
      return 0;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_21;
      v8 = 2;
      if (v21 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_21;
      v8 = 3;
      if (v21 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
        goto LABEL_21;
      v8 = 4;
      if (v21 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 96);
      if (v7)
      {
LABEL_21:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_22;
      }
      v9 = 5;
      if (v21 > 5)
      {
        v7 = *(_QWORD *)(a1 + 104);
        if (v7)
        {
          v8 = 5;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1A9282EF8);
          }
          if (v8 >= v21)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_21;
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1A9282FAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9282FDC + 4 * word_1A9417BC0[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A9282FDC()
{
  return 0x4C52557465737361;
}

uint64_t sub_1A9282FF4()
{
  return 0x4C525564656566;
}

uint64_t sub_1A928300C()
{
  return 0x61725465726F7473;
}

uint64_t sub_1A928302C()
{
  return 0x5374736163646F70;
}

uint64_t sub_1A9283050()
{
  return 1684632949;
}

uint64_t sub_1A9283064()
{
  return 1684632935;
}

unint64_t sub_1A9283074()
{
  return 0xD000000000000011;
}

uint64_t sub_1A9283430()
{
  unsigned __int8 *v0;

  return sub_1A9282FAC(*v0);
}

uint64_t sub_1A9283438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A928CD4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A928345C(_BYTE *a1@<X8>)
{
  *a1 = 42;
}

uint64_t sub_1A9283468()
{
  sub_1A9289074();
  return sub_1A93F945C();
}

uint64_t sub_1A9283490()
{
  sub_1A9289074();
  return sub_1A93F9468();
}

uint64_t PodcastsMediaLibrary.MediaItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  int *v11;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC778);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9289074();
  sub_1A93F93D8();
  LOBYTE(v14) = 0;
  sub_1A93F8FB8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1A93F8FB8();
    LOBYTE(v14) = 2;
    sub_1A93F8FB8();
    v9 = *(_BYTE *)(v3 + 56);
    v14 = *(_QWORD *)(v3 + 48);
    v15 = v9;
    v16 = 3;
    sub_1A9210228();
    sub_1A93F8FE8();
    v10 = *(_BYTE *)(v3 + 72);
    v14 = *(_QWORD *)(v3 + 64);
    v15 = v10;
    v16 = 4;
    sub_1A93F8FE8();
    LOBYTE(v14) = 5;
    sub_1A93F8FB8();
    LOBYTE(v14) = 6;
    sub_1A93F8FB8();
    LOBYTE(v14) = 7;
    sub_1A93F8FB8();
    v11 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    LOBYTE(v14) = 8;
    sub_1A93F726C();
    sub_1A9066CA8(&qword_1EEAB7BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1A93F8FE8();
    LOBYTE(v14) = 9;
    sub_1A93F8FB8();
    LOBYTE(v14) = 10;
    sub_1A93F9018();
    LOBYTE(v14) = 11;
    sub_1A93F8FD0();
    LOBYTE(v14) = 12;
    sub_1A93F8FE8();
    LOBYTE(v14) = 13;
    sub_1A93F8FB8();
    v14 = *(_QWORD *)(v3 + v11[18]);
    v16 = 14;
    type metadata accessor for ServerArtwork();
    sub_1A9066CA8(&qword_1ED2A1FF8, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
    sub_1A93F8FE8();
    LOBYTE(v14) = 15;
    sub_1A93F900C();
    v13[1] = v3 + v11[20];
    LOBYTE(v14) = 16;
    sub_1A93F738C();
    sub_1A9066CA8(&qword_1EEABBF70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A93F8FE8();
    LOBYTE(v14) = 17;
    sub_1A93F8FB8();
    LOBYTE(v14) = 18;
    sub_1A93F900C();
    LOBYTE(v14) = 19;
    sub_1A93F900C();
    LOBYTE(v14) = 20;
    sub_1A93F900C();
    LOBYTE(v14) = 21;
    sub_1A93F900C();
    LOBYTE(v14) = *(_BYTE *)(v3 + v11[26]);
    v16 = 22;
    sub_1A92890B8();
    sub_1A93F8FE8();
    LOBYTE(v14) = *(_BYTE *)(v3 + v11[27]);
    v16 = 23;
    sub_1A92890FC();
    sub_1A93F8FE8();
    LOBYTE(v14) = *(_BYTE *)(v3 + v11[28]);
    v16 = 24;
    sub_1A9289140();
    sub_1A93F8FE8();
    LOBYTE(v14) = 25;
    sub_1A93F903C();
    LOBYTE(v14) = 26;
    sub_1A93F903C();
    LOBYTE(v14) = 27;
    sub_1A93F900C();
    LOBYTE(v14) = 28;
    sub_1A93F8FB8();
    v14 = *(_QWORD *)(v3 + v11[33]);
    v16 = 29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC7A0);
    sub_1A92892D8(&qword_1EEABC7A8, (uint64_t (*)(void))sub_1A9122C50, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1A93F9030();
    LOBYTE(v14) = 30;
    sub_1A93F8FB8();
    LOBYTE(v14) = 31;
    sub_1A93F8FB8();
    LOBYTE(v14) = 32;
    sub_1A93F8FE8();
    LOBYTE(v14) = 33;
    sub_1A93F8FB8();
    LOBYTE(v14) = 34;
    sub_1A93F8FB8();
    LOBYTE(v14) = *(_BYTE *)(v3 + v11[39]);
    v16 = 35;
    sub_1A9289184();
    sub_1A93F9030();
    LOBYTE(v14) = 36;
    sub_1A93F900C();
    LOBYTE(v14) = 37;
    sub_1A93F900C();
    LOBYTE(v14) = 38;
    sub_1A93F900C();
    LOBYTE(v14) = 39;
    sub_1A93F900C();
    LOBYTE(v14) = 40;
    sub_1A93F900C();
    LOBYTE(v14) = *(_BYTE *)(v3 + v11[45]);
    v16 = 41;
    sub_1A92891C8();
    sub_1A93F8FE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastsMediaLibrary.MediaItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  int *v72;
  uint64_t *v73;
  uint64_t v74;
  char v75;
  char v76;

  v67 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v66 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - v13;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC7C0);
  v15 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1E0C80A78](v72);
  v73 = (uint64_t *)((char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = a1[3];
  v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1A9289074();
  v68 = v17;
  v20 = v70;
  sub_1A93F93C0();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
  v21 = (uint64_t)v14;
  v22 = (uint64_t)v5;
  v23 = (uint64_t)v8;
  LOBYTE(v74) = 0;
  v24 = sub_1A93F8F04();
  v25 = v73;
  *v73 = v24;
  v25[1] = v26;
  LOBYTE(v74) = 1;
  v25[2] = sub_1A93F8F04();
  v25[3] = v27;
  LOBYTE(v74) = 2;
  v25[4] = sub_1A93F8F04();
  v25[5] = v28;
  v76 = 3;
  sub_1A92102F4();
  sub_1A93F8F34();
  v29 = v75;
  v25[6] = v74;
  *((_BYTE *)v25 + 56) = v29;
  v76 = 4;
  sub_1A93F8F34();
  v30 = v75;
  v25[8] = v74;
  *((_BYTE *)v25 + 72) = v30;
  LOBYTE(v74) = 5;
  v25[10] = sub_1A93F8F04();
  v25[11] = v31;
  LOBYTE(v74) = 6;
  v25[12] = sub_1A93F8F04();
  v25[13] = v32;
  LOBYTE(v74) = 7;
  v33 = sub_1A93F8F04();
  v34 = v73;
  v73[14] = v33;
  v34[15] = v35;
  sub_1A93F726C();
  LOBYTE(v74) = 8;
  v70 = sub_1A9066CA8(&qword_1EEAB7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1A93F8F34();
  sub_1A9062F08(v21, (uint64_t)v73 + v72[12], &qword_1ED2AD3D0);
  LOBYTE(v74) = 9;
  v36 = sub_1A93F8F04();
  v37 = (uint64_t *)((char *)v73 + v72[13]);
  *v37 = v36;
  v37[1] = v38;
  LOBYTE(v74) = 10;
  sub_1A93F8F64();
  *(uint64_t *)((char *)v73 + v72[14]) = v39;
  LOBYTE(v74) = 11;
  v40 = sub_1A93F8F1C();
  v41 = (char *)v73 + v72[15];
  *(_QWORD *)v41 = v40;
  v41[8] = v42 & 1;
  LOBYTE(v74) = 12;
  sub_1A93F8F34();
  sub_1A9062F08((uint64_t)v11, (uint64_t)v73 + v72[16], &qword_1ED2AD3D0);
  LOBYTE(v74) = 13;
  v43 = sub_1A93F8F04();
  v44 = (uint64_t *)((char *)v73 + v72[17]);
  *v44 = v43;
  v44[1] = v45;
  type metadata accessor for ServerArtwork();
  v76 = 14;
  sub_1A9066CA8(&qword_1ED2A2000, (uint64_t (*)(uint64_t))type metadata accessor for ServerArtwork, (uint64_t)&protocol conformance descriptor for ServerArtwork);
  sub_1A93F8F34();
  *(uint64_t *)((char *)v73 + v72[18]) = v74;
  LOBYTE(v74) = 15;
  *((_BYTE *)v73 + v72[19]) = sub_1A93F8F58() & 1;
  sub_1A93F738C();
  LOBYTE(v74) = 16;
  sub_1A9066CA8(&qword_1ED2AA110, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1A93F8F34();
  sub_1A9062F08(v22, (uint64_t)v73 + v72[20], (uint64_t *)&unk_1ED2AD360);
  LOBYTE(v74) = 17;
  v46 = sub_1A93F8F04();
  v47 = (uint64_t *)((char *)v73 + v72[21]);
  *v47 = v46;
  v47[1] = v48;
  LOBYTE(v74) = 18;
  *((_BYTE *)v73 + v72[22]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 19;
  *((_BYTE *)v73 + v72[23]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 20;
  *((_BYTE *)v73 + v72[24]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 21;
  *((_BYTE *)v73 + v72[25]) = sub_1A93F8F58() & 1;
  v76 = 22;
  sub_1A928920C();
  sub_1A93F8F34();
  *((_BYTE *)v73 + v72[26]) = v74;
  v76 = 23;
  sub_1A9289250();
  sub_1A93F8F34();
  *((_BYTE *)v73 + v72[27]) = v74;
  v76 = 24;
  sub_1A9289294();
  sub_1A93F8F34();
  *((_BYTE *)v73 + v72[28]) = v74;
  LOBYTE(v74) = 25;
  *(uint64_t *)((char *)v73 + v72[29]) = sub_1A93F8F88();
  LOBYTE(v74) = 26;
  *(uint64_t *)((char *)v73 + v72[30]) = sub_1A93F8F88();
  LOBYTE(v74) = 27;
  *((_BYTE *)v73 + v72[31]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 28;
  v49 = sub_1A93F8F04();
  v50 = (uint64_t *)((char *)v73 + v72[32]);
  *v50 = v49;
  v50[1] = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC7A0);
  v76 = 29;
  sub_1A92892D8(&qword_1EEABC7D8, (uint64_t (*)(void))sub_1A91231B0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1A93F8F7C();
  *(uint64_t *)((char *)v73 + v72[33]) = v74;
  LOBYTE(v74) = 30;
  v52 = sub_1A93F8F04();
  v53 = (uint64_t *)((char *)v73 + v72[34]);
  *v53 = v52;
  v53[1] = v54;
  LOBYTE(v74) = 31;
  v55 = sub_1A93F8F04();
  v56 = (uint64_t *)((char *)v73 + v72[35]);
  *v56 = v55;
  v56[1] = v57;
  LOBYTE(v74) = 32;
  sub_1A93F8F34();
  sub_1A9062F08(v23, (uint64_t)v73 + v72[36], &qword_1ED2AD3D0);
  LOBYTE(v74) = 33;
  v58 = sub_1A93F8F04();
  v59 = (uint64_t *)((char *)v73 + v72[37]);
  *v59 = v58;
  v59[1] = v60;
  LOBYTE(v74) = 34;
  v61 = sub_1A93F8F04();
  v62 = (uint64_t *)((char *)v73 + v72[38]);
  *v62 = v61;
  v62[1] = v63;
  v76 = 35;
  sub_1A928934C();
  sub_1A93F8F7C();
  *((_BYTE *)v73 + v72[39]) = v74;
  LOBYTE(v74) = 36;
  *((_BYTE *)v73 + v72[40]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 37;
  *((_BYTE *)v73 + v72[41]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 38;
  *((_BYTE *)v73 + v72[42]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 39;
  *((_BYTE *)v73 + v72[43]) = sub_1A93F8F58() & 1;
  LOBYTE(v74) = 40;
  *((_BYTE *)v73 + v72[44]) = sub_1A93F8F58() & 1;
  v76 = 41;
  sub_1A9289390();
  sub_1A93F8F34();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v69);
  v64 = (uint64_t)v73;
  *((_BYTE *)v73 + v72[45]) = v74;
  sub_1A9064630(v64, v67, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
  return sub_1A9064714(v64, type metadata accessor for PodcastsMediaLibrary.MediaItem);
}

uint64_t sub_1A9284F6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PodcastsMediaLibrary.MediaItem.init(from:)(a1, a2);
}

uint64_t sub_1A9284F80(_QWORD *a1)
{
  return PodcastsMediaLibrary.MediaItem.encode(to:)(a1);
}

uint64_t sub_1A9284F98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  void *v8;
  id v9;

  v1 = v0 + OBJC_IVAR___MTServerPodcastEpisode_id;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  v2 = *(_QWORD *)(v1 + 8);
  swift_bridgeObjectRetain();
  v5 = sub_1A931883C(v3, v2);
  result = swift_bridgeObjectRelease();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_validatedIdNumberFromStoreId_, v5);
    if (!v7)
      return 0;
    v8 = v7;
    v9 = objc_msgSend(v7, sel_stringValue);
    v4 = sub_1A93F8040();

    return v4;
  }
  return result;
}

uint64_t sub_1A9285080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC920);
  inited = swift_initStackObject();
  v5 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001A944B200;
  if (!a1)
  {
    *(_OWORD *)(inited + 48) = xmmword_1A9411960;
    v10 = (uint64_t *)(inited + 80);
    *(_QWORD *)(inited + 64) = 0xD000000000000019;
    *(_QWORD *)(inited + 72) = 0x80000001A944B3C0;
    goto LABEL_14;
  }
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v6)
    goto LABEL_7;
  v7 = *(_QWORD *)(v6 + 112);
  if (!v7)
  {
LABEL_8:
    v27 = 0xF000000000000000;
    goto LABEL_9;
  }
  v8 = swift_retain();
  v9 = sub_1A939A108(v8);
  swift_release();
  if (!v9)
  {
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  type metadata accessor for PlayerArtwork();
  sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
  v7 = sub_1A93F6DD4();
  v27 = v26;

  swift_release();
LABEL_9:
  v5[6] = v7;
  v5[7] = v27;
  v5[8] = 0xD000000000000019;
  v5[9] = 0x80000001A944B3C0;
  v10 = v5 + 10;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + 152);
    if (v12)
    {
      if (*(_QWORD *)(v12 + 16))
      {
        v13 = swift_retain();
        v14 = sub_1A939A108(v13);
        swift_release();
        if (v14)
        {
          sub_1A93F6DEC();
          swift_allocObject();
          sub_1A93F6DE0();
          type metadata accessor for PlayerArtwork();
          sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
          v28 = sub_1A93F6DD4();
          v30 = v29;

          swift_release();
          *v10 = v28;
          goto LABEL_15;
        }
      }
    }
  }
LABEL_14:
  *v10 = 0;
  v30 = 0xF000000000000000;
LABEL_15:
  v5[11] = v30;
  v5[12] = 0xD00000000000001CLL;
  v5[13] = 0x80000001A944B1E0;
  v15 = *(_QWORD **)(v2 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  v16 = v15[16];
  if (v16)
  {
    v17 = v15[15] == 0x65646F73697065 && v16 == 0xE700000000000000;
    if (!v17 && (sub_1A93F90C0() & 1) == 0)
      goto LABEL_24;
  }
  v18 = v15[17];
  if (!v18)
  {
LABEL_25:
    v25 = 0xF000000000000000;
    goto LABEL_26;
  }
  v19 = swift_retain();
  v20 = sub_1A939A108(v19);
  swift_release();
  if (!v20)
  {
LABEL_24:
    v18 = 0;
    goto LABEL_25;
  }
  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  type metadata accessor for PlayerArtwork();
  sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
  v18 = sub_1A93F6DD4();
  v25 = v24;

  swift_release();
LABEL_26:
  v5[14] = v18;
  v5[15] = v25;
  v21 = sub_1A9112B18((uint64_t)v5);
  v22 = sub_1A9280D84(v21);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1A9285474()
{
  void *v0;
  void *v1;
  uint64_t inited;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC920);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001A944B200;
  v3 = objc_msgSend(v0, sel_podcast);
  if (v3)
  {
    v4 = MTPodcast.artwork.getter();

    if (v4)
    {
      sub_1A93F6DEC();
      swift_allocObject();
      sub_1A93F6DE0();
      v19 = v4;
      type metadata accessor for PlayerArtwork();
      sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
      v3 = (id)sub_1A93F6DD4();
      v16 = v15;

      swift_release();
      goto LABEL_6;
    }
    v3 = 0;
  }
  v16 = 0xF000000000000000;
LABEL_6:
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v16;
  *(_QWORD *)(inited + 64) = 0xD000000000000019;
  *(_QWORD *)(inited + 72) = 0x80000001A944B3C0;
  v5 = objc_msgSend(v1, sel_podcast, v19);
  if (v5)
  {
    v6 = MTPodcast.uberArtwork.getter();

    if (v6)
    {
      sub_1A93F6DEC();
      swift_allocObject();
      sub_1A93F6DE0();
      type metadata accessor for PlayerArtwork();
      sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
      v5 = (id)sub_1A93F6DD4();
      v18 = v17;

      swift_release();
      goto LABEL_11;
    }
    v5 = 0;
  }
  v18 = 0xF000000000000000;
LABEL_11:
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 88) = v18;
  *(_QWORD *)(inited + 96) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 104) = 0x80000001A944B1E0;
  v7 = MTEpisode.artwork.getter();
  if (v7)
  {
    v8 = v7;
    sub_1A93F6DEC();
    swift_allocObject();
    sub_1A93F6DE0();
    type metadata accessor for PlayerArtwork();
    sub_1A9066CA8(qword_1ED2A9D58, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
    v9 = sub_1A93F6DD4();
    v11 = v10;

    swift_release();
  }
  else
  {
    v9 = 0;
    v11 = 0xF000000000000000;
  }
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 120) = v11;
  v12 = sub_1A9112B18(inited);
  v13 = sub_1A9280D84(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A92857A0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = objc_msgSend(v1, sel_uuid);
  if (!v2)
    goto LABEL_7;
  v3 = v2;
  sub_1A93F8040();

  v4 = MTPodcast.identifier.getter();
  if (v6 == 0xFF)
  {
    swift_bridgeObjectRelease();
LABEL_7:

    return 4;
  }
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(v1, sel_hidden);
  v11 = objc_msgSend(v1, sel_subscribed);
  v12 = objc_msgSend(v1, sel_isImplicitlyFollowed);

  if (v11)
  {
    if (((v12 | v10) & 1) == 0)
    {
      sub_1A909F1A0(v7, v8, v9);
      swift_bridgeObjectRelease();
      return 0;
    }
    goto LABEL_11;
  }
  if ((v12 & 1) != 0)
  {
    if ((v10 & 1) != 0)
    {
LABEL_11:
      sub_1A928E490();
      v14 = (void *)swift_allocError();
      *v15 = v11;
      v15[1] = v12;
      v15[2] = v10;
      swift_willThrow();
      sub_1A909F1A0(v7, v8, v9);
      swift_bridgeObjectRelease();
      if (qword_1EEAB6D68 != -1)
        swift_once();
      v16 = sub_1A93F7698();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EEABA690);
      v17 = v1;
      v18 = v14;
      v19 = v17;
      v20 = v14;
      v21 = sub_1A93F7674();
      v22 = sub_1A93F879C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        *(_DWORD *)v23 = 141558531;
        v29 = v28;
        sub_1A93F8AA8();
        *(_WORD *)(v23 + 12) = 2113;
        v25 = v19;
        sub_1A93F8AA8();
        *v24 = v19;

        *(_WORD *)(v23 + 22) = 2082;
        swift_getErrorValue();
        v26 = sub_1A93F927C();
        sub_1A906436C(v26, v27, &v29);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v21, v22, "Unable to retrieve subscription state for %{private,mask.hash}@ with error %{public}s.", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v24, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v28, -1, -1);
        MEMORY[0x1AF41411C](v23, -1, -1);

      }
      else
      {

      }
      return 4;
    }
    sub_1A909F1A0(v7, v8, v9);
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    sub_1A909F1A0(v7, v8, v9);
    swift_bridgeObjectRelease();
    if (v10)
      return 3;
    else
      return 1;
  }
}

uint64_t URLTrackIdentifier.init(mediaItem:playbackContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t inited;
  uint64_t v22;

  if ((*(_BYTE *)(a1 + 56) & 1) != 0
    || ((v6 = *(_QWORD *)(a1 + 48)) != 0 ? (v7 = v6 == 1000000000000) : (v7 = 1), v7))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405950;
    *(_BYTE *)(inited + 32) = 5;
    v8 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(inited + 40) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(inited + 48) = v8;
    *(_BYTE *)(inited + 56) = 8;
    v9 = *(_QWORD *)(a1 + 104);
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(inited + 72) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A9405520;
    *(_BYTE *)(inited + 32) = 3;
    sub_1A915997C();
    *(_QWORD *)(inited + 40) = sub_1A93F8B38();
    *(_QWORD *)(inited + 48) = v22;
  }
  v10 = sub_1A91131B0(inited);
  v11 = *(void **)(a2 + 40);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v12, sel_ams_DSID);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, sel_stringValue);

      v16 = sub_1A93F8040();
      v18 = v17;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A930E530(v16, v18, 16, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  sub_1A9064714(a2, (uint64_t (*)(_QWORD))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  result = sub_1A9064714(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *(_QWORD *)a3 = v10;
  *(_BYTE *)(a3 + 8) = 4;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.storeTrackId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.podcastStoreId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.podcastUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.managedObjectIdentifierURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  return sub_1A9062170(v1 + *(int *)(v3 + 32), a1, &qword_1ED2AD3D0);
}

double PodcastsMediaLibrary.MediaItemSnapshot.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 36));
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.author.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.artworkURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9285EC4(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, a1);
}

uint64_t sub_1A9285EC4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_1A9062170(v2 + *(int *)(v4 + 48), a2, &qword_1ED2AD3D0);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.album.getter()
{
  return sub_1A9285F10(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1A9285F10(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 56));
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.contentItemID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.assetURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0) + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.showArtworkTemplateURL.getter()
{
  return sub_1A9285FF4(type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1A9285FF4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 68));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A9286038(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A9286074 + 4 * byte_1A9417C14[a1]))(0x61725465726F7473, 0xEC00000064496B63);
}

uint64_t sub_1A9286074()
{
  return 0x5374736163646F70;
}

uint64_t sub_1A9286098()
{
  return 1684632949;
}

uint64_t sub_1A92860A8()
{
  return 0x5574736163646F70;
}

unint64_t sub_1A92860C8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1A92860E8()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1A9286100()
{
  return 0x656C746974;
}

uint64_t sub_1A9286114()
{
  return 0x726F68747561;
}

uint64_t sub_1A9286128()
{
  return 0x556B726F77747261;
}

uint64_t sub_1A9286144()
{
  return 0x6D75626C61;
}

uint64_t sub_1A9286158()
{
  return 0x63696C7078457369;
}

uint64_t sub_1A9286174()
{
  return 0x49746E65746E6F63;
}

uint64_t sub_1A9286198()
{
  return 0x4C52557465737361;
}

unint64_t sub_1A92861B0()
{
  return 0xD000000000000016;
}

uint64_t sub_1A92861CC()
{
  unsigned __int8 *v0;

  return sub_1A9286038(*v0);
}

uint64_t sub_1A92861D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A928DE90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A92861F8(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1A9286204()
{
  sub_1A9289C30();
  return sub_1A93F945C();
}

uint64_t sub_1A928622C()
{
  sub_1A9289C30();
  return sub_1A93F9468();
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC7F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9289C30();
  sub_1A93F93D8();
  v9 = *((_BYTE *)v3 + 8);
  v12 = *v3;
  v13 = v9;
  v14 = 0;
  sub_1A9210228();
  sub_1A93F8FE8();
  if (!v2)
  {
    v10 = *((_BYTE *)v3 + 24);
    v12 = v3[2];
    v13 = v10;
    v14 = 1;
    sub_1A93F8FE8();
    LOBYTE(v12) = 2;
    sub_1A93F8FB8();
    LOBYTE(v12) = 3;
    sub_1A93F8FB8();
    type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    LOBYTE(v12) = 4;
    sub_1A93F726C();
    sub_1A9066CA8(&qword_1EEAB7BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1A93F8FE8();
    LOBYTE(v12) = 5;
    sub_1A93F9018();
    LOBYTE(v12) = 6;
    sub_1A93F8FB8();
    LOBYTE(v12) = 7;
    sub_1A93F8FB8();
    LOBYTE(v12) = 8;
    sub_1A93F8FE8();
    LOBYTE(v12) = 9;
    sub_1A93F8FB8();
    LOBYTE(v12) = 10;
    sub_1A93F900C();
    LOBYTE(v12) = 11;
    sub_1A93F9000();
    LOBYTE(v12) = 12;
    sub_1A93F8FB8();
    LOBYTE(v12) = 13;
    sub_1A93F8FB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  char v53;
  char v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - v9;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC800);
  v11 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  MEMORY[0x1E0C80A78](v51);
  v49 = a1;
  v50 = (uint64_t *)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9289C30();
  sub_1A93F93C0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  v46 = v7;
  v47 = v11;
  v45 = a2;
  v54 = 0;
  sub_1A92102F4();
  sub_1A93F8F34();
  v15 = v53;
  v16 = v50;
  *v50 = v52;
  *((_BYTE *)v16 + 8) = v15;
  v54 = 1;
  sub_1A93F8F34();
  v17 = v53;
  v16[2] = v52;
  *((_BYTE *)v16 + 24) = v17;
  LOBYTE(v52) = 2;
  v16[4] = sub_1A93F8F04();
  v16[5] = v18;
  LOBYTE(v52) = 3;
  v16[6] = sub_1A93F8F04();
  v16[7] = v19;
  sub_1A93F726C();
  LOBYTE(v52) = 4;
  sub_1A9066CA8(&qword_1EEAB7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1A93F8F34();
  v20 = v51;
  sub_1A9062F08((uint64_t)v10, (uint64_t)v16 + v51[8], &qword_1ED2AD3D0);
  LOBYTE(v52) = 5;
  sub_1A93F8F64();
  *(_QWORD *)((char *)v16 + v20[9]) = v21;
  LOBYTE(v52) = 6;
  v22 = sub_1A93F8F04();
  v23 = (_QWORD *)((char *)v16 + v20[10]);
  *v23 = v22;
  v23[1] = v24;
  LOBYTE(v52) = 7;
  v25 = sub_1A93F8F04();
  v26 = (_QWORD *)((char *)v16 + v20[11]);
  *v26 = v25;
  v26[1] = v27;
  LOBYTE(v52) = 8;
  v28 = (uint64_t)v46;
  sub_1A93F8F34();
  sub_1A9062F08(v28, (uint64_t)v16 + v51[12], &qword_1ED2AD3D0);
  LOBYTE(v52) = 9;
  v29 = sub_1A93F8F04();
  v30 = (_QWORD *)((char *)v50 + v51[13]);
  *v30 = v29;
  v30[1] = v31;
  LOBYTE(v52) = 10;
  *((_BYTE *)v50 + v51[14]) = sub_1A93F8F58() & 1;
  LOBYTE(v52) = 11;
  v32 = sub_1A93F8F4C();
  v33 = (_QWORD *)((char *)v50 + v51[15]);
  *v33 = v32;
  v33[1] = v34;
  LOBYTE(v52) = 12;
  v35 = sub_1A93F8F04();
  v36 = (_QWORD *)((char *)v50 + v51[16]);
  *v36 = v35;
  v36[1] = v37;
  LOBYTE(v52) = 13;
  v38 = sub_1A93F8F04();
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v48);
  v41 = (uint64_t)v50;
  v42 = (_QWORD *)((char *)v50 + v51[17]);
  *v42 = v38;
  v42[1] = v40;
  sub_1A9064630(v41, v45, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  return sub_1A9064714(v41, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot);
}

uint64_t sub_1A9286DC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PodcastsMediaLibrary.MediaItemSnapshot.init(from:)(a1, a2);
}

uint64_t sub_1A9286DD4(_QWORD *a1)
{
  return PodcastsMediaLibrary.MediaItemSnapshot.encode(to:)(a1);
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(mediaItem:contentItemID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;

  v7 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a4 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a4 + 8) = v7;
  v8 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a4 + 16) = *(_QWORD *)(a1 + 64);
  *(_BYTE *)(a4 + 24) = v8;
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a4 + 32) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a4 + 40) = v9;
  v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v11 = a1 + v10[12];
  v12 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  sub_1A9062170(v11, a4 + v12[8], &qword_1ED2AD3D0);
  v13 = *(_QWORD *)(a1 + 8);
  v14 = (_QWORD *)(a4 + v12[10]);
  *v14 = *(_QWORD *)a1;
  v14[1] = v13;
  v15 = (uint64_t *)(a1 + v10[13]);
  v16 = *v15;
  v17 = v15[1];
  v18 = (_QWORD *)(a4 + v12[11]);
  *v18 = v16;
  v18[1] = v17;
  v19 = (uint64_t *)(a1 + v10[21]);
  v20 = *v19;
  v21 = v19[1];
  v22 = (_QWORD *)(a4 + v12[13]);
  *v22 = v20;
  v22[1] = v21;
  sub_1A9062170(a1 + v10[16], a4 + v12[12], &qword_1ED2AD3D0);
  v23 = (_QWORD *)(a4 + v12[15]);
  *v23 = a2;
  v23[1] = a3;
  *(_BYTE *)(a4 + v12[14]) = *(_BYTE *)(a1 + v10[23]);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = (_QWORD *)(a4 + v12[16]);
  *v25 = *(_QWORD *)(a1 + 16);
  v25[1] = v24;
  *(_QWORD *)(a4 + v12[9]) = *(_QWORD *)(a1 + v10[14]);
  v26 = (uint64_t *)(a1 + v10[32]);
  v27 = *v26;
  v28 = v26[1];
  v29 = (_QWORD *)(a4 + v12[17]);
  *v29 = v27;
  v29[1] = v28;
  v30 = (uint64_t *)(a1 + v10[37]);
  v32 = *v30;
  v31 = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1A9064714(a1, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *(_QWORD *)(a4 + 48) = v32;
  *(_QWORD *)(a4 + 56) = v31;
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.init(dictionary:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1A93F7ED8();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v9);

  v3 = v9[0];
  if (v2)
  {
    v4 = sub_1A93F72B4();
    v6 = v5;

    sub_1A93F6DA4();
    swift_allocObject();
    sub_1A93F6D98();
    type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    sub_1A9066CA8(&qword_1EEABC808, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, (uint64_t)&protocol conformance descriptor for PodcastsMediaLibrary.MediaItemSnapshot);
    sub_1A93F6D8C();
    sub_1A905F180(v4, v6);
    return swift_release();
  }
  else
  {
    v8 = v3;
    sub_1A93F7128();

    return swift_willThrow();
  }
}

uint64_t PodcastsMediaLibrary.MediaItemSnapshot.asDictionary()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  id v12[5];

  v12[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A93F6DEC();
  swift_allocObject();
  sub_1A93F6DE0();
  type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
  sub_1A9066CA8(&qword_1EEABC810, type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot, (uint64_t)&protocol conformance descriptor for PodcastsMediaLibrary.MediaItemSnapshot);
  v1 = sub_1A93F6DD4();
  v3 = v2;
  result = swift_release();
  if (!v0)
  {
    v5 = (void *)objc_opt_self();
    v6 = (void *)sub_1A93F729C();
    v12[0] = 0;
    v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v12);

    if (v7)
    {
      v8 = v12[0];
      sub_1A93F8B44();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1A905F180(v1, v3);
        return v11;
      }
      sub_1A916552C();
      swift_allocError();
      *v10 = 6;
    }
    else
    {
      v9 = v12[0];
      sub_1A93F7128();

    }
    swift_willThrow();
    return sub_1A905F180(v1, v3);
  }
  return result;
}

uint64_t PodcastsMediaLibrary.MediaItem.episodeArtworkTemplate.getter()
{
  return sub_1A9287344(0xD00000000000001CLL, 0x80000001A944B1E0);
}

uint64_t sub_1A9287344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  char *v13;

  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 132));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_1A9094640(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v6);
  v9 = *v8;
  v10 = v8[1];
  sub_1A90D8068(*v8, v10);
  swift_bridgeObjectRelease();
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A90D8068(v9, v10);
  sub_1A93F6D98();
  type metadata accessor for PlayerArtwork();
  sub_1A9066CA8(&qword_1EEABC818, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
  sub_1A93F6D8C();
  sub_1A905F180(v9, v10);
  sub_1A905F180(v9, v10);
  swift_release();
  v12 = *(_QWORD *)&v13[OBJC_IVAR___IMPlayerArtwork_template];
  swift_bridgeObjectRetain();

  return v12;
}

uint64_t PodcastsMediaLibrary.MediaItem.showArtworkTemplate.getter()
{
  return sub_1A9287344(0xD000000000000019, 0x80000001A944B200);
}

uint64_t PodcastsMediaLibrary.MediaItem.preferredArtworkTemplate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;

  v1 = v0;
  v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + *(int *)(v5 + 132));
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1A9094640(0xD00000000000001CLL, 0x80000001A944B1E0), (v8 & 1) != 0))
  {
    v9 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v7);
    v10 = *v9;
    v11 = v9[1];
    sub_1A90D8068(*v9, v11);
    sub_1A9064630(v1, (uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if (v11 >> 60 != 15)
      goto LABEL_9;
  }
  else
  {
    sub_1A9064630(v1, (uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  }
  v12 = *(_QWORD *)&v4[*(int *)(v2 + 132)];
  if (!*(_QWORD *)(v12 + 16) || (v13 = sub_1A9094640(0xD000000000000019, 0x80000001A944B200), (v14 & 1) == 0))
  {
    sub_1A9064714((uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
    v17 = *(_QWORD *)(v1 + *(int *)(v2 + 128));
    swift_bridgeObjectRetain();
    return v17;
  }
  v15 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v13);
  v10 = *v15;
  v11 = v15[1];
  sub_1A90D8068(*v15, v11);
LABEL_9:
  sub_1A9064714((uint64_t)v4, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  sub_1A93F6DA4();
  swift_allocObject();
  sub_1A90D8068(v10, v11);
  sub_1A93F6D98();
  type metadata accessor for PlayerArtwork();
  sub_1A9066CA8(&qword_1EEABC818, (uint64_t (*)(uint64_t))type metadata accessor for PlayerArtwork, (uint64_t)&protocol conformance descriptor for PlayerArtwork);
  sub_1A93F6D8C();
  sub_1A9069F9C(v10, v11);
  sub_1A9069F9C(v10, v11);
  swift_release();
  v16 = v20;
  v17 = *(_QWORD *)&v20[OBJC_IVAR___IMPlayerArtwork_template];
  swift_bridgeObjectRetain();

  return v17;
}

unint64_t PodcastsMediaLibrary.MediaItem.preferredArtworkResponseDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  _BYTE v14[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1A93F726C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) + 72)))
  {
    swift_retain();
    v9 = sub_1A9281A2C();
    swift_release();
  }
  else
  {
    PodcastsMediaLibrary.MediaItem.preferredArtworkTemplate.getter();
    if (v8)
    {
      sub_1A93F7248();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A94055A0;
        *(_QWORD *)(inited + 32) = 0x6874646977;
        *(_QWORD *)(inited + 40) = 0xE500000000000000;
        v11 = MEMORY[0x1E0DEF040];
        *(_QWORD *)(inited + 48) = 0x4082C00000000000;
        *(_QWORD *)(inited + 72) = v11;
        *(_QWORD *)(inited + 80) = 0x746867696568;
        *(_QWORD *)(inited + 88) = 0xE600000000000000;
        *(_QWORD *)(inited + 96) = 0x4082C00000000000;
        *(_QWORD *)(inited + 120) = v11;
        *(_QWORD *)(inited + 128) = 7107189;
        *(_QWORD *)(inited + 136) = 0xE300000000000000;
        *(_QWORD *)(inited + 168) = v4;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
        (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v7, v4);
        v9 = sub_1A908A4A8(inited);
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
        return v9;
      }
      sub_1A905FD54((uint64_t)v3, &qword_1ED2AD3D0);
    }
    return 0;
  }
  return v9;
}

uint64_t _s18PodcastsFoundation0A12MediaLibraryC0C4ItemV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t *v133;
  _BYTE *v134;
  _BYTE *v135;
  _BYTE *v136;
  void (*v137)(_BYTE *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  int *v148;
  uint64_t v149;
  double *v150;
  char v151;
  double *v152;
  int v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  _BYTE *v157;
  uint64_t v158;
  unsigned int (*v159)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  char v165;
  void (*v166)(_BYTE *, uint64_t);
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int *v180;
  _BYTE *v181;
  _BYTE *v182;
  _BYTE *v183;
  uint64_t v184;
  unsigned int (*v185)(uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  _BYTE *v189;
  char v190;
  void (*v191)(_BYTE *, uint64_t);
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  uint64_t v201;
  int v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  uint64_t v211;
  int v212;
  int v213;
  uint64_t v214;
  int v215;
  int v216;
  char v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  char v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  char v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  char v246;
  int *v247;
  _BYTE *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE *v252;
  uint64_t v253;
  char v254;
  void (*v255)(_BYTE *, uint64_t);
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  char v264;
  uint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  char v273;
  uint64_t v274;
  unsigned __int8 v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  int v285;
  _BYTE v286[12];
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unsigned int (*v291)(uint64_t, uint64_t, uint64_t);
  uint64_t v292;
  int *v293;
  uint64_t v294;
  _BYTE *v295;
  _BYTE *v296;
  _BYTE *v297;
  uint64_t v298;
  _BYTE *v299;
  uint64_t v300;
  _BYTE *v301;
  _BYTE *v302;
  _BYTE *v303;
  uint64_t v304;
  _BYTE *v305;
  _BYTE *v306;
  uint64_t v307;
  uint64_t v308;

  v304 = sub_1A93F738C();
  v300 = *(_QWORD *)(v304 - 8);
  MEMORY[0x1E0C80A78](v304);
  v297 = &v286[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C70);
  MEMORY[0x1E0C80A78](v298);
  v303 = &v286[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v6);
  v299 = &v286[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v301 = &v286[-v9];
  MEMORY[0x1E0C80A78](v10);
  v302 = &v286[-v11];
  v12 = sub_1A93F726C();
  v13 = *(_QWORD *)(v12 - 8);
  v307 = v12;
  v308 = v13;
  MEMORY[0x1E0C80A78](v12);
  v306 = &v286[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB2A8);
  MEMORY[0x1E0C80A78](v15);
  v296 = &v286[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v305 = &v286[-v18];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v286[-v20];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = &v286[-v24];
  MEMORY[0x1E0C80A78](v26);
  v28 = &v286[-v27];
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  v33 = &v286[-v32];
  MEMORY[0x1E0C80A78](v34);
  v36 = &v286[-v35];
  MEMORY[0x1E0C80A78](v37);
  v39 = &v286[-v38];
  MEMORY[0x1E0C80A78](v40);
  v45 = (int *)&v286[-v41];
  v46 = *(_QWORD *)(a1 + 8);
  v47 = *(_QWORD *)(a2 + 8);
  if (!v46)
  {
    v295 = (_BYTE *)v15;
    if (v47)
      return 0;
    goto LABEL_8;
  }
  if (!v47)
    return 0;
  v295 = (_BYTE *)v15;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v46 == v47)
    goto LABEL_8;
  v48 = v25;
  v49 = v28;
  v50 = v42;
  v293 = (int *)&v286[-v41];
  v294 = a2;
  v51 = v21;
  v52 = v33;
  v53 = v43;
  v54 = v39;
  v55 = v36;
  v56 = v44;
  v57 = sub_1A93F90C0();
  v44 = v56;
  v36 = v55;
  v39 = v54;
  v43 = v53;
  v33 = v52;
  v21 = v51;
  v45 = v293;
  a2 = v294;
  v42 = v50;
  v28 = v49;
  v25 = v48;
  v58 = v57;
  result = 0;
  if ((v58 & 1) != 0)
  {
LABEL_8:
    v60 = *(_QWORD *)(a1 + 24);
    v61 = *(_QWORD *)(a2 + 24);
    if (v60)
    {
      if (!v61)
        return 0;
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v60 != v61)
      {
        v62 = v25;
        v63 = v28;
        v64 = v42;
        v293 = v45;
        v294 = a2;
        v65 = v21;
        v66 = v33;
        v67 = v43;
        v68 = v39;
        v69 = v36;
        v70 = v44;
        v71 = sub_1A93F90C0();
        v44 = v70;
        v36 = v69;
        v39 = v68;
        v43 = v67;
        v33 = v66;
        v21 = v65;
        v45 = v293;
        a2 = v294;
        v42 = v64;
        v28 = v63;
        v25 = v62;
        v72 = v71;
        result = 0;
        if ((v72 & 1) == 0)
          return result;
      }
    }
    else if (v61)
    {
      return 0;
    }
    v73 = *(_QWORD *)(a1 + 40);
    v74 = *(_QWORD *)(a2 + 40);
    if (v73)
    {
      if (!v74)
        return 0;
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v73 != v74)
      {
        v75 = v25;
        v76 = v28;
        v77 = v42;
        v293 = v45;
        v294 = a2;
        v78 = v21;
        v79 = v33;
        v80 = v43;
        v81 = v39;
        v82 = v36;
        v83 = v44;
        v84 = sub_1A93F90C0();
        v44 = v83;
        v36 = v82;
        v39 = v81;
        v43 = v80;
        v33 = v79;
        v21 = v78;
        v45 = v293;
        a2 = v294;
        v42 = v77;
        v28 = v76;
        v25 = v75;
        v85 = v84;
        result = 0;
        if ((v85 & 1) == 0)
          return result;
      }
    }
    else if (v74)
    {
      return 0;
    }
    v86 = *(_BYTE *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 56))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
        v86 = 1;
      if ((v86 & 1) != 0)
        return 0;
    }
    v87 = *(_BYTE *)(a2 + 72);
    if ((*(_BYTE *)(a1 + 72) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 72))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
        v87 = 1;
      if ((v87 & 1) != 0)
        return 0;
    }
    v88 = *(_QWORD *)(a1 + 88);
    v89 = *(_QWORD *)(a2 + 88);
    if (v88)
    {
      if (!v89)
        return 0;
      if (*(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80) || v88 != v89)
      {
        v90 = v25;
        v91 = v28;
        v92 = v42;
        v293 = v45;
        v294 = a2;
        v93 = v21;
        v94 = v33;
        v95 = v43;
        v96 = v39;
        v97 = v36;
        v98 = v44;
        v99 = sub_1A93F90C0();
        v44 = v98;
        v36 = v97;
        v39 = v96;
        v43 = v95;
        v33 = v94;
        v21 = v93;
        v45 = v293;
        a2 = v294;
        v42 = v92;
        v28 = v91;
        v25 = v90;
        v100 = v99;
        result = 0;
        if ((v100 & 1) == 0)
          return result;
      }
    }
    else if (v89)
    {
      return 0;
    }
    v101 = *(_QWORD *)(a1 + 104);
    v102 = *(_QWORD *)(a2 + 104);
    if (v101)
    {
      if (!v102)
        return 0;
      if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96) || v101 != v102)
      {
        v103 = v25;
        v104 = v28;
        v105 = v42;
        v293 = v45;
        v294 = a2;
        v106 = v21;
        v107 = v33;
        v108 = v43;
        v109 = v39;
        v110 = v36;
        v111 = v44;
        v112 = sub_1A93F90C0();
        v44 = v111;
        v36 = v110;
        v39 = v109;
        v43 = v108;
        v33 = v107;
        v21 = v106;
        v45 = v293;
        a2 = v294;
        v42 = v105;
        v28 = v104;
        v25 = v103;
        v113 = v112;
        result = 0;
        if ((v113 & 1) == 0)
          return result;
      }
    }
    else if (v102)
    {
      return 0;
    }
    v114 = *(_QWORD *)(a1 + 120);
    v115 = *(_QWORD *)(a2 + 120);
    if (v114)
    {
      if (!v115)
        return 0;
      if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a2 + 112) || v114 != v115)
      {
        v116 = v25;
        v117 = v28;
        v118 = v42;
        v293 = v45;
        v294 = a2;
        v119 = v21;
        v120 = v33;
        v121 = v43;
        v122 = v39;
        v123 = v36;
        v124 = v44;
        v125 = sub_1A93F90C0();
        v44 = v124;
        v36 = v123;
        v39 = v122;
        v43 = v121;
        v33 = v120;
        v21 = v119;
        v45 = v293;
        a2 = v294;
        v42 = v118;
        v28 = v117;
        v25 = v116;
        v126 = v125;
        result = 0;
        if ((v126 & 1) == 0)
          return result;
      }
    }
    else if (v115)
    {
      return 0;
    }
    v289 = v43;
    v290 = v44;
    v288 = v42;
    v127 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    v128 = *(int *)(v127 + 48);
    v292 = a1;
    sub_1A9062170(a1 + v128, (uint64_t)v45, &qword_1ED2AD3D0);
    v293 = (int *)v127;
    v294 = a2;
    sub_1A9062170(a2 + *(int *)(v127 + 48), (uint64_t)v39, &qword_1ED2AD3D0);
    v129 = (uint64_t)&v21[*((int *)v295 + 12)];
    sub_1A9062170((uint64_t)v45, (uint64_t)v21, &qword_1ED2AD3D0);
    v130 = v129;
    sub_1A9062170((uint64_t)v39, v129, &qword_1ED2AD3D0);
    v131 = v307;
    v132 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v308 + 48);
    if (v132((uint64_t)v21, 1, v307) == 1)
    {
      v291 = v132;
      sub_1A905FD54((uint64_t)v39, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v45, &qword_1ED2AD3D0);
      if (v291(v130, 1, v131) == 1)
      {
        sub_1A905FD54((uint64_t)v21, &qword_1ED2AD3D0);
        goto LABEL_65;
      }
    }
    else
    {
      sub_1A9062170((uint64_t)v21, (uint64_t)v36, &qword_1ED2AD3D0);
      if (v132(v130, 1, v131) != 1)
      {
        v291 = v132;
        v135 = v306;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v308 + 32))(v306, v130, v131);
        sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v136 = v135;
        v287 = sub_1A93F8004();
        v137 = *(void (**)(_BYTE *, uint64_t))(v308 + 8);
        v137(v136, v131);
        sub_1A905FD54((uint64_t)v39, &qword_1ED2AD3D0);
        sub_1A905FD54((uint64_t)v45, &qword_1ED2AD3D0);
        v137(v36, v131);
        sub_1A905FD54((uint64_t)v21, &qword_1ED2AD3D0);
        if ((v287 & 1) == 0)
          return 0;
LABEL_65:
        v138 = v292;
        v139 = v293[13];
        v140 = (_QWORD *)(v292 + v139);
        v141 = *(_QWORD *)(v292 + v139 + 8);
        v142 = v294;
        v143 = (_QWORD *)(v294 + v139);
        v144 = v143[1];
        if (v141)
        {
          if (!v144)
            return 0;
          v145 = (uint64_t)v295;
          if (*v140 != *v143 || v141 != v144)
          {
            v146 = sub_1A93F90C0();
            v138 = v292;
            v147 = v146;
            result = 0;
            if ((v147 & 1) == 0)
              return result;
          }
        }
        else
        {
          v145 = (uint64_t)v295;
          if (v144)
            return 0;
        }
        v148 = v293;
        if (*(double *)(v138 + v293[14]) != *(double *)(v142 + v293[14]))
          return 0;
        v149 = v293[15];
        v150 = (double *)(v138 + v149);
        v151 = *(_BYTE *)(v138 + v149 + 8);
        v152 = (double *)(v142 + v149);
        v153 = *(unsigned __int8 *)(v142 + v149 + 8);
        if ((v151 & 1) != 0)
        {
          if (!v153)
            return 0;
        }
        else
        {
          if (*v150 != *v152)
            LOBYTE(v153) = 1;
          if ((v153 & 1) != 0)
            return 0;
        }
        v295 = v28;
        sub_1A9062170(v138 + v293[16], (uint64_t)v33, &qword_1ED2AD3D0);
        v154 = v290;
        sub_1A9062170(v294 + v148[16], v290, &qword_1ED2AD3D0);
        v155 = v305;
        v156 = (uint64_t)&v305[*(int *)(v145 + 48)];
        sub_1A9062170((uint64_t)v33, (uint64_t)v305, &qword_1ED2AD3D0);
        sub_1A9062170(v154, v156, &qword_1ED2AD3D0);
        v157 = v155;
        v158 = v307;
        v159 = v291;
        if (v291((uint64_t)v157, 1, v307) == 1)
        {
          sub_1A905FD54(v290, &qword_1ED2AD3D0);
          sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
          v160 = v159;
          if (v159(v156, 1, v158) == 1)
          {
            sub_1A905FD54((uint64_t)v305, &qword_1ED2AD3D0);
            goto LABEL_86;
          }
        }
        else
        {
          sub_1A9062170((uint64_t)v305, v289, &qword_1ED2AD3D0);
          v160 = v159;
          if (v159(v156, 1, v158) != 1)
          {
            v162 = v307;
            v161 = v308;
            v163 = v306;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v308 + 32))(v306, v156, v307);
            sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
            v164 = v289;
            v165 = sub_1A93F8004();
            v166 = *(void (**)(_BYTE *, uint64_t))(v161 + 8);
            v166(v163, v162);
            sub_1A905FD54(v290, &qword_1ED2AD3D0);
            sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
            v166((_BYTE *)v164, v162);
            sub_1A905FD54((uint64_t)v305, &qword_1ED2AD3D0);
            if ((v165 & 1) == 0)
              return 0;
LABEL_86:
            v167 = v293[17];
            v168 = (_QWORD *)(v292 + v167);
            v169 = *(_QWORD *)(v292 + v167 + 8);
            v170 = (_QWORD *)(v294 + v167);
            v171 = v170[1];
            if (v169)
            {
              if (!v171)
                return 0;
              v172 = *v168 == *v170;
              v173 = v294;
              v174 = v292;
              if (!v172 || v169 != v171)
              {
                v175 = sub_1A93F90C0();
                v174 = v292;
                v176 = v175;
                result = 0;
                if ((v176 & 1) == 0)
                  return result;
              }
            }
            else
            {
              v173 = v294;
              v174 = v292;
              if (v171)
                return 0;
            }
            v177 = v293[18];
            v178 = *(_QWORD *)(v174 + v177);
            v179 = *(_QWORD *)(v173 + v177);
            if (v178)
            {
              if (!v179 || (_s18PodcastsFoundation13ServerArtworkC2eeoiySbAC_ACtFZ_0(v178, v179) & 1) == 0)
                return 0;
            }
            else if (v179)
            {
              return 0;
            }
            if (*(unsigned __int8 *)(v292 + v293[19]) != *(unsigned __int8 *)(v294 + v293[19]))
              return 0;
            v180 = v293;
            v181 = v302;
            sub_1A9062170(v292 + v293[20], (uint64_t)v302, (uint64_t *)&unk_1ED2AD360);
            v182 = v301;
            sub_1A9062170(v294 + v180[20], (uint64_t)v301, (uint64_t *)&unk_1ED2AD360);
            v183 = v303;
            v184 = (uint64_t)&v303[*(int *)(v298 + 48)];
            sub_1A9062170((uint64_t)v181, (uint64_t)v303, (uint64_t *)&unk_1ED2AD360);
            sub_1A9062170((uint64_t)v182, v184, (uint64_t *)&unk_1ED2AD360);
            v185 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v300 + 48);
            if (v185((uint64_t)v183, 1, v304) == 1)
            {
              sub_1A905FD54((uint64_t)v301, (uint64_t *)&unk_1ED2AD360);
              sub_1A905FD54((uint64_t)v302, (uint64_t *)&unk_1ED2AD360);
              if (v185(v184, 1, v304) == 1)
              {
                sub_1A905FD54((uint64_t)v303, (uint64_t *)&unk_1ED2AD360);
LABEL_107:
                v192 = v293[21];
                v193 = (_QWORD *)(v292 + v192);
                v194 = *(_QWORD *)(v292 + v192 + 8);
                v195 = (_QWORD *)(v294 + v192);
                v196 = v195[1];
                if (v194)
                {
                  if (!v196)
                    return 0;
                  v172 = *v193 == *v195;
                  v197 = v294;
                  v198 = v292;
                  if (!v172 || v194 != v196)
                  {
                    v199 = sub_1A93F90C0();
                    v198 = v292;
                    v200 = v199;
                    result = 0;
                    if ((v200 & 1) == 0)
                      return result;
                  }
                }
                else
                {
                  v197 = v294;
                  v198 = v292;
                  if (v196)
                    return 0;
                }
                if (*(unsigned __int8 *)(v198 + v293[22]) != *(unsigned __int8 *)(v197 + v293[22])
                  || *(unsigned __int8 *)(v292 + v293[23]) != *(unsigned __int8 *)(v294 + v293[23])
                  || *(unsigned __int8 *)(v292 + v293[24]) != *(unsigned __int8 *)(v294 + v293[24])
                  || *(unsigned __int8 *)(v292 + v293[25]) != *(unsigned __int8 *)(v294 + v293[25]))
                {
                  return 0;
                }
                v201 = v293[26];
                v202 = *(unsigned __int8 *)(v292 + v201);
                v203 = *(unsigned __int8 *)(v294 + v201);
                if (v202 == 2)
                {
                  v204 = v294;
                  v205 = v292;
                  if (v203 != 2)
                    return 0;
                }
                else
                {
                  if (v203 == 2)
                    return 0;
                  if ((v202 & 1) != 0)
                    v206 = 0x64616F6C6E776F64;
                  else
                    v206 = 0x6D6165727473;
                  if ((v202 & 1) != 0)
                    v207 = 0xE800000000000000;
                  else
                    v207 = 0xE600000000000000;
                  if ((v203 & 1) != 0)
                    v208 = 0x64616F6C6E776F64;
                  else
                    v208 = 0x6D6165727473;
                  if ((v203 & 1) != 0)
                    v209 = 0xE800000000000000;
                  else
                    v209 = 0xE600000000000000;
                  if (v206 == v208 && v207 == v209)
                  {
                    swift_bridgeObjectRelease_n();
                    v204 = v294;
                    v205 = v292;
                  }
                  else
                  {
                    v210 = sub_1A93F90C0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    result = 0;
                    v204 = v294;
                    v205 = v292;
                    if ((v210 & 1) == 0)
                      return result;
                  }
                }
                v211 = v293[27];
                v212 = *(unsigned __int8 *)(v205 + v211);
                v213 = *(unsigned __int8 *)(v204 + v211);
                if (v212 == 4)
                {
                  if (v213 != 4)
                    return 0;
                }
                else if (v213 == 4 || (sub_1A92F7FDC(v212, v213) & 1) == 0)
                {
                  return 0;
                }
                v214 = v293[28];
                v215 = *(unsigned __int8 *)(v292 + v214);
                v216 = *(unsigned __int8 *)(v294 + v214);
                if (v215 == 5)
                {
                  if (v216 != 5)
                    return 0;
                }
                else
                {
                  if (v216 == 5)
                    return 0;
                  sub_1A92F8880(v215);
                  if ((v217 & 1) == 0)
                    return 0;
                }
                if (*(_QWORD *)(v292 + v293[29]) != *(_QWORD *)(v294 + v293[29])
                  || *(_QWORD *)(v292 + v293[30]) != *(_QWORD *)(v294 + v293[30])
                  || *(unsigned __int8 *)(v292 + v293[31]) != *(unsigned __int8 *)(v294 + v293[31]))
                {
                  return 0;
                }
                v218 = v293[32];
                v219 = (_QWORD *)(v292 + v218);
                v220 = *(_QWORD *)(v292 + v218 + 8);
                v221 = (_QWORD *)(v294 + v218);
                v222 = v221[1];
                if (v220)
                {
                  if (!v222)
                    return 0;
                  v172 = *v219 == *v221;
                  v223 = v294;
                  v224 = v292;
                  if (!v172 || v220 != v222)
                  {
                    v225 = sub_1A93F90C0();
                    v224 = v292;
                    v226 = v225;
                    result = 0;
                    if ((v226 & 1) == 0)
                      return result;
                  }
                }
                else
                {
                  v223 = v294;
                  v224 = v292;
                  if (v222)
                    return 0;
                }
                if ((sub_1A92824E0(*(_QWORD *)(v224 + v293[33]), *(_QWORD *)(v223 + v293[33])) & 1) == 0)
                  return 0;
                v227 = v293[34];
                v228 = (_QWORD *)(v292 + v227);
                v229 = *(_QWORD *)(v292 + v227 + 8);
                v230 = (_QWORD *)(v294 + v227);
                v231 = v230[1];
                if (v229)
                {
                  if (!v231)
                    return 0;
                  v232 = v294;
                  v233 = v292;
                  if (*v228 != *v230 || v229 != v231)
                  {
                    v234 = sub_1A93F90C0();
                    v233 = v292;
                    v235 = v234;
                    result = 0;
                    if ((v235 & 1) == 0)
                      return result;
                  }
                }
                else
                {
                  v232 = v294;
                  v233 = v292;
                  if (v231)
                    return 0;
                }
                v236 = v293[35];
                v237 = (_QWORD *)(v233 + v236);
                v238 = *(_QWORD *)(v233 + v236 + 8);
                v239 = (_QWORD *)(v232 + v236);
                v240 = v239[1];
                if (v238)
                {
                  if (!v240)
                    return 0;
                  v172 = *v237 == *v239;
                  v241 = v294;
                  v242 = (uint64_t)v295;
                  v243 = v292;
                  v244 = (uint64_t)v25;
                  if (!v172 || v238 != v240)
                  {
                    v245 = sub_1A93F90C0();
                    v243 = v292;
                    v246 = v245;
                    result = 0;
                    if ((v246 & 1) == 0)
                      return result;
                  }
                }
                else
                {
                  v241 = v294;
                  v242 = (uint64_t)v295;
                  v243 = v292;
                  v244 = (uint64_t)v25;
                  if (v240)
                    return 0;
                }
                v247 = v293;
                sub_1A9062170(v243 + v293[36], v242, &qword_1ED2AD3D0);
                sub_1A9062170(v241 + v247[36], v244, &qword_1ED2AD3D0);
                v248 = v296;
                v249 = (uint64_t)&v296[*(int *)(v145 + 48)];
                sub_1A9062170(v242, (uint64_t)v296, &qword_1ED2AD3D0);
                sub_1A9062170(v244, v249, &qword_1ED2AD3D0);
                if (v160((uint64_t)v248, 1, v307) == 1)
                {
                  sub_1A905FD54((uint64_t)v25, &qword_1ED2AD3D0);
                  sub_1A905FD54((uint64_t)v295, &qword_1ED2AD3D0);
                  if (v160(v249, 1, v307) == 1)
                  {
                    sub_1A905FD54((uint64_t)v296, &qword_1ED2AD3D0);
LABEL_183:
                    v256 = v293[37];
                    v257 = (_QWORD *)(v292 + v256);
                    v258 = *(_QWORD *)(v292 + v256 + 8);
                    v259 = (_QWORD *)(v294 + v256);
                    v260 = v259[1];
                    if (v258)
                    {
                      if (!v260)
                        return 0;
                      v261 = v294;
                      v262 = v292;
                      if (*v257 != *v259 || v258 != v260)
                      {
                        v263 = sub_1A93F90C0();
                        v262 = v292;
                        v264 = v263;
                        result = 0;
                        if ((v264 & 1) == 0)
                          return result;
                      }
                    }
                    else
                    {
                      v261 = v294;
                      v262 = v292;
                      if (v260)
                        return 0;
                    }
                    v265 = v293[38];
                    v266 = (_QWORD *)(v262 + v265);
                    v267 = *(_QWORD *)(v262 + v265 + 8);
                    v268 = (_QWORD *)(v261 + v265);
                    v269 = v268[1];
                    if (v267)
                    {
                      if (!v269)
                        return 0;
                      v172 = *v266 == *v268;
                      v270 = v294;
                      v271 = v292;
                      if (!v172 || v267 != v269)
                      {
                        v272 = sub_1A93F90C0();
                        v271 = v292;
                        v273 = v272;
                        result = 0;
                        if ((v273 & 1) == 0)
                          return result;
                      }
                    }
                    else
                    {
                      v270 = v294;
                      v271 = v292;
                      if (v269)
                        return 0;
                    }
                    v274 = v293[39];
                    v275 = *(_BYTE *)(v270 + v274);
                    v276 = EpisodeSortType.rawValue.getter(*(_BYTE *)(v271 + v274));
                    v278 = v277;
                    if (v276 == EpisodeSortType.rawValue.getter(v275) && v278 == v279)
                    {
                      swift_bridgeObjectRelease_n();
                      v280 = v294;
                      v281 = v292;
                    }
                    else
                    {
                      v282 = sub_1A93F90C0();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      result = 0;
                      v280 = v294;
                      v281 = v292;
                      if ((v282 & 1) == 0)
                        return result;
                    }
                    if (*(unsigned __int8 *)(v281 + v293[40]) == *(unsigned __int8 *)(v280 + v293[40])
                      && *(unsigned __int8 *)(v292 + v293[41]) == *(unsigned __int8 *)(v294 + v293[41])
                      && *(unsigned __int8 *)(v292 + v293[42]) == *(unsigned __int8 *)(v294 + v293[42])
                      && *(unsigned __int8 *)(v292 + v293[43]) == *(unsigned __int8 *)(v294 + v293[43])
                      && *(unsigned __int8 *)(v292 + v293[44]) == *(unsigned __int8 *)(v294 + v293[44]))
                    {
                      v283 = v293[45];
                      v284 = *(unsigned __int8 *)(v292 + v283);
                      v285 = *(unsigned __int8 *)(v294 + v283);
                      if ((_DWORD)v284 == 4)
                      {
                        if (v285 == 4)
                          return 1;
                      }
                      else if (v285 != 4)
                      {
                        __asm { BR              X11 }
                      }
                    }
                    return 0;
                  }
                }
                else
                {
                  sub_1A9062170((uint64_t)v296, v288, &qword_1ED2AD3D0);
                  if (v160(v249, 1, v307) != 1)
                  {
                    v251 = v307;
                    v250 = v308;
                    v252 = v306;
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v308 + 32))(v306, v249, v307);
                    sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
                    v253 = v288;
                    v254 = sub_1A93F8004();
                    v255 = *(void (**)(_BYTE *, uint64_t))(v250 + 8);
                    v255(v252, v251);
                    sub_1A905FD54((uint64_t)v25, &qword_1ED2AD3D0);
                    sub_1A905FD54((uint64_t)v295, &qword_1ED2AD3D0);
                    v255((_BYTE *)v253, v251);
                    sub_1A905FD54((uint64_t)v296, &qword_1ED2AD3D0);
                    if ((v254 & 1) == 0)
                      return 0;
                    goto LABEL_183;
                  }
                  sub_1A905FD54((uint64_t)v25, &qword_1ED2AD3D0);
                  sub_1A905FD54((uint64_t)v295, &qword_1ED2AD3D0);
                  (*(void (**)(uint64_t, uint64_t))(v308 + 8))(v288, v307);
                }
                v133 = &qword_1EEABB2A8;
                v134 = v296;
LABEL_61:
                sub_1A905FD54((uint64_t)v134, v133);
                return 0;
              }
            }
            else
            {
              sub_1A9062170((uint64_t)v303, (uint64_t)v299, (uint64_t *)&unk_1ED2AD360);
              if (v185(v184, 1, v304) != 1)
              {
                v186 = v300;
                v187 = v297;
                v188 = v304;
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v300 + 32))(v297, v184, v304);
                sub_1A9066CA8((unint64_t *)&unk_1EEABB6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
                v189 = v299;
                v190 = sub_1A93F8004();
                v191 = *(void (**)(_BYTE *, uint64_t))(v186 + 8);
                v191(v187, v188);
                sub_1A905FD54((uint64_t)v301, (uint64_t *)&unk_1ED2AD360);
                sub_1A905FD54((uint64_t)v302, (uint64_t *)&unk_1ED2AD360);
                v191(v189, v188);
                sub_1A905FD54((uint64_t)v303, (uint64_t *)&unk_1ED2AD360);
                if ((v190 & 1) == 0)
                  return 0;
                goto LABEL_107;
              }
              sub_1A905FD54((uint64_t)v301, (uint64_t *)&unk_1ED2AD360);
              sub_1A905FD54((uint64_t)v302, (uint64_t *)&unk_1ED2AD360);
              (*(void (**)(_BYTE *, uint64_t))(v300 + 8))(v299, v304);
            }
            v133 = &qword_1ED2A5C70;
            v134 = v303;
            goto LABEL_61;
          }
          sub_1A905FD54(v290, &qword_1ED2AD3D0);
          sub_1A905FD54((uint64_t)v33, &qword_1ED2AD3D0);
          (*(void (**)(uint64_t, uint64_t))(v308 + 8))(v289, v307);
        }
        v133 = &qword_1EEABB2A8;
        v134 = v305;
        goto LABEL_61;
      }
      sub_1A905FD54((uint64_t)v39, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v45, &qword_1ED2AD3D0);
      (*(void (**)(_BYTE *, uint64_t))(v308 + 8))(v36, v131);
    }
    v133 = &qword_1EEABB2A8;
    v134 = v21;
    goto LABEL_61;
  }
  return result;
}

unint64_t sub_1A9289074()
{
  unint64_t result;

  result = qword_1EEABC780;
  if (!qword_1EEABC780)
  {
    result = MEMORY[0x1AF414014](&unk_1A941827C, &_s9MediaItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC780);
  }
  return result;
}

unint64_t sub_1A92890B8()
{
  unint64_t result;

  result = qword_1EEABC788;
  if (!qword_1EEABC788)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem.ItemType, &type metadata for PodcastsMediaLibrary.MediaItem.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EEABC788);
  }
  return result;
}

unint64_t sub_1A92890FC()
{
  unint64_t result;

  result = qword_1EEABC790;
  if (!qword_1EEABC790)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1EEABC790);
  }
  return result;
}

unint64_t sub_1A9289140()
{
  unint64_t result;

  result = qword_1EEABC798;
  if (!qword_1EEABC798)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.MediaKind, &type metadata for PodcastEpisodeAttributes.MediaKind);
    atomic_store(result, (unint64_t *)&qword_1EEABC798);
  }
  return result;
}

unint64_t sub_1A9289184()
{
  unint64_t result;

  result = qword_1EEABC7B0;
  if (!qword_1EEABC7B0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeSortType, &type metadata for EpisodeSortType);
    atomic_store(result, (unint64_t *)&qword_1EEABC7B0);
  }
  return result;
}

unint64_t sub_1A92891C8()
{
  unint64_t result;

  result = qword_1EEABC7B8;
  if (!qword_1EEABC7B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel.SanitizedState, &type metadata for PodcastStateModel.SanitizedState);
    atomic_store(result, (unint64_t *)&qword_1EEABC7B8);
  }
  return result;
}

unint64_t sub_1A928920C()
{
  unint64_t result;

  result = qword_1EEABC7C8;
  if (!qword_1EEABC7C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem.ItemType, &type metadata for PodcastsMediaLibrary.MediaItem.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EEABC7C8);
  }
  return result;
}

unint64_t sub_1A9289250()
{
  unint64_t result;

  result = qword_1ED2A5868;
  if (!qword_1ED2A5868)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PriceType, &type metadata for PriceType);
    atomic_store(result, (unint64_t *)&qword_1ED2A5868);
  }
  return result;
}

unint64_t sub_1A9289294()
{
  unint64_t result;

  result = qword_1EEABC7D0;
  if (!qword_1EEABC7D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastEpisodeAttributes.MediaKind, &type metadata for PodcastEpisodeAttributes.MediaKind);
    atomic_store(result, (unint64_t *)&qword_1EEABC7D0);
  }
  return result;
}

uint64_t sub_1A92892D8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABC7A0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1AF414014](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A928934C()
{
  unint64_t result;

  result = qword_1EEABC7E0;
  if (!qword_1EEABC7E0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for EpisodeSortType, &type metadata for EpisodeSortType);
    atomic_store(result, (unint64_t *)&qword_1EEABC7E0);
  }
  return result;
}

unint64_t sub_1A9289390()
{
  unint64_t result;

  result = qword_1EEABC7E8;
  if (!qword_1EEABC7E8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel.SanitizedState, &type metadata for PodcastStateModel.SanitizedState);
    atomic_store(result, (unint64_t *)&qword_1EEABC7E8);
  }
  return result;
}

uint64_t type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(uint64_t a1)
{
  return sub_1A9062BFC(a1, qword_1EEABC880);
}

BOOL _s18PodcastsFoundation0A12MediaLibraryC0C12ItemSnapshotV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BOOL8 result;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;

  v4 = sub_1A93F726C();
  v96 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v95 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABB2A8);
  MEMORY[0x1E0C80A78](v6);
  v94 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v89 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v89 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v89 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v89 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v89 - v22;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v89 - v26;
  v28 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v28 = 1;
    if ((v28 & 1) != 0)
      return 0;
  }
  v29 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v29 = 1;
    if ((v29 & 1) != 0)
      return 0;
  }
  v30 = *(_QWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a2 + 40);
  if (!v30)
  {
    v92 = v25;
    v93 = v4;
    if (v31)
      return 0;
    goto LABEL_20;
  }
  if (!v31)
    return 0;
  v92 = v25;
  v93 = v4;
  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v30 == v31
    || (v32 = sub_1A93F90C0(), result = 0, (v32 & 1) != 0))
  {
LABEL_20:
    v34 = *(_QWORD *)(a1 + 56);
    v35 = *(_QWORD *)(a2 + 56);
    if (v34)
    {
      if (!v35)
        return 0;
      if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v34 != v35)
      {
        v36 = sub_1A93F90C0();
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v35)
    {
      return 0;
    }
    v37 = type metadata accessor for PodcastsMediaLibrary.MediaItemSnapshot(0);
    sub_1A9062170(a1 + *(int *)(v37 + 32), (uint64_t)v27, &qword_1ED2AD3D0);
    v90 = (int *)v37;
    sub_1A9062170(a2 + *(int *)(v37 + 32), (uint64_t)v23, &qword_1ED2AD3D0);
    v38 = (uint64_t)&v10[*(int *)(v6 + 48)];
    sub_1A9062170((uint64_t)v27, (uint64_t)v10, &qword_1ED2AD3D0);
    v91 = v38;
    sub_1A9062170((uint64_t)v23, v38, &qword_1ED2AD3D0);
    v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    if (v39((uint64_t)v10, 1, v93) == 1)
    {
      sub_1A905FD54((uint64_t)v23, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v27, &qword_1ED2AD3D0);
      v40 = v93;
      if (v39(v91, 1, v93) != 1)
        goto LABEL_32;
      v89 = v39;
      sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
    }
    else
    {
      sub_1A9062170((uint64_t)v10, (uint64_t)v20, &qword_1ED2AD3D0);
      v89 = v39;
      if (v39(v91, 1, v93) == 1)
      {
        sub_1A905FD54((uint64_t)v23, &qword_1ED2AD3D0);
        sub_1A905FD54((uint64_t)v27, &qword_1ED2AD3D0);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v93);
        goto LABEL_32;
      }
      v41 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v91, v93);
      sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v42 = sub_1A93F8004();
      v43 = v41;
      v93 = v41;
      LODWORD(v91) = v42;
      v44 = *(void (**)(char *, uint64_t))(v96 + 8);
      v44(v95, v43);
      v45 = (uint64_t)v23;
      v40 = v93;
      sub_1A905FD54(v45, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v27, &qword_1ED2AD3D0);
      v44(v20, v40);
      sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
      if ((v91 & 1) == 0)
        return 0;
    }
    v46 = v90;
    if (*(double *)(a1 + v90[9]) != *(double *)(a2 + v90[9]))
      return 0;
    v47 = v90[10];
    v48 = (_QWORD *)(a1 + v47);
    v49 = *(_QWORD *)(a1 + v47 + 8);
    v50 = (_QWORD *)(a2 + v47);
    v51 = v50[1];
    if (v49)
    {
      if (!v51)
        return 0;
      if (*v48 != *v50 || v49 != v51)
      {
        v52 = sub_1A93F90C0();
        result = 0;
        if ((v52 & 1) == 0)
          return result;
      }
    }
    else if (v51)
    {
      return 0;
    }
    v53 = v46[11];
    v54 = (_QWORD *)(a1 + v53);
    v55 = *(_QWORD *)(a1 + v53 + 8);
    v56 = (_QWORD *)(a2 + v53);
    v57 = v56[1];
    if (v55)
    {
      if (!v57)
        return 0;
      if (*v54 != *v56 || v55 != v57)
      {
        v58 = sub_1A93F90C0();
        result = 0;
        if ((v58 & 1) == 0)
          return result;
      }
    }
    else if (v57)
    {
      return 0;
    }
    sub_1A9062170(a1 + v46[12], (uint64_t)v17, &qword_1ED2AD3D0);
    sub_1A9062170(a2 + v46[12], (uint64_t)v14, &qword_1ED2AD3D0);
    v10 = v94;
    v59 = (uint64_t)&v94[*(int *)(v6 + 48)];
    sub_1A9062170((uint64_t)v17, (uint64_t)v94, &qword_1ED2AD3D0);
    sub_1A9062170((uint64_t)v14, v59, &qword_1ED2AD3D0);
    v60 = v89;
    if (v89((uint64_t)v10, 1, v40) == 1)
    {
      sub_1A905FD54((uint64_t)v14, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v17, &qword_1ED2AD3D0);
      if (v60(v59, 1, v40) == 1)
      {
        sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
LABEL_57:
        v67 = v46[13];
        v68 = (_QWORD *)(a1 + v67);
        v69 = *(_QWORD *)(a1 + v67 + 8);
        v70 = (_QWORD *)(a2 + v67);
        v71 = v70[1];
        if (v69)
        {
          if (!v71)
            return 0;
          if (*v68 != *v70 || v69 != v71)
          {
            v72 = sub_1A93F90C0();
            result = 0;
            if ((v72 & 1) == 0)
              return result;
          }
        }
        else if (v71)
        {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + v46[14]) == *(unsigned __int8 *)(a2 + v46[14]))
        {
          v73 = v46[15];
          v74 = *(_QWORD *)(a1 + v73);
          v75 = *(_QWORD *)(a1 + v73 + 8);
          v76 = (_QWORD *)(a2 + v73);
          if (v74 != *v76 || v75 != v76[1])
          {
            v77 = sub_1A93F90C0();
            result = 0;
            if ((v77 & 1) == 0)
              return result;
          }
          v78 = v46[16];
          v79 = (_QWORD *)(a1 + v78);
          v80 = *(_QWORD *)(a1 + v78 + 8);
          v81 = (_QWORD *)(a2 + v78);
          v82 = v81[1];
          if (v80)
          {
            if (!v82)
              return 0;
            if (*v79 != *v81 || v80 != v82)
            {
              v83 = sub_1A93F90C0();
              result = 0;
              if ((v83 & 1) == 0)
                return result;
            }
          }
          else if (v82)
          {
            return 0;
          }
          v84 = v46[17];
          v85 = (_QWORD *)(a1 + v84);
          v86 = *(_QWORD *)(a1 + v84 + 8);
          v87 = (_QWORD *)(a2 + v84);
          v88 = v87[1];
          if (v86)
            return v88 && (*v85 == *v87 && v86 == v88 || (sub_1A93F90C0() & 1) != 0);
          if (!v88)
            return 1;
        }
        return 0;
      }
    }
    else
    {
      v61 = v92;
      sub_1A9062170((uint64_t)v10, v92, &qword_1ED2AD3D0);
      v62 = v40;
      if (v60(v59, 1, v40) != 1)
      {
        v64 = v95;
        v63 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v59, v62);
        sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v65 = sub_1A93F8004();
        v66 = *(void (**)(char *, uint64_t))(v63 + 8);
        v66(v64, v62);
        sub_1A905FD54((uint64_t)v14, &qword_1ED2AD3D0);
        sub_1A905FD54((uint64_t)v17, &qword_1ED2AD3D0);
        v66((char *)v61, v62);
        v46 = v90;
        sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
        if ((v65 & 1) == 0)
          return 0;
        goto LABEL_57;
      }
      sub_1A905FD54((uint64_t)v14, &qword_1ED2AD3D0);
      sub_1A905FD54((uint64_t)v17, &qword_1ED2AD3D0);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v61, v40);
    }
LABEL_32:
    sub_1A905FD54((uint64_t)v10, &qword_1EEABB2A8);
    return 0;
  }
  return result;
}

unint64_t sub_1A9289C30()
{
  unint64_t result;

  result = qword_1EEABC7F8;
  if (!qword_1EEABC7F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941822C, &_s17MediaItemSnapshotV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC7F8);
  }
  return result;
}

unint64_t sub_1A9289C78()
{
  unint64_t result;

  result = qword_1EEABC820;
  if (!qword_1EEABC820)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem.ItemType, &type metadata for PodcastsMediaLibrary.MediaItem.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EEABC820);
  }
  return result;
}

_QWORD *_s9MediaItemVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v81;
  void *__dst;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v10 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    v11 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v11;
    v12 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v12;
    v13 = a2[15];
    v14 = a3[12];
    v81 = (char *)a2 + v14;
    __dst = (void *)(a1 + v14);
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v13;
    v15 = sub_1A93F726C();
    v84 = *(_QWORD *)(v15 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v85 = v16;
    if (v16(v81, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v81, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v18 = v84;
    }
    else
    {
      v18 = v84;
      (*(void (**)(void *, char *, uint64_t))(v84 + 16))(__dst, v81, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v15);
    }
    v20 = a3[13];
    v21 = a3[14];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *(_QWORD *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    v25 = a3[15];
    v26 = a3[16];
    v27 = (char *)v4 + v25;
    v28 = (uint64_t)a2 + v25;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = *(_BYTE *)(v28 + 8);
    v29 = (char *)v4 + v26;
    v30 = (char *)a2 + v26;
    swift_bridgeObjectRetain();
    v83 = v15;
    if (v85(v30, 1, v15))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v29, v30, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v15);
    }
    v32 = a3[17];
    v33 = a3[18];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    *(_QWORD *)((char *)v4 + v33) = *(uint64_t *)((char *)a2 + v33);
    v37 = a3[20];
    *((_BYTE *)v4 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_1A93F738C();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v42(v39, 1, v40))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v44 = a3[21];
    v45 = a3[22];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *((_BYTE *)v4 + v45) = *((_BYTE *)a2 + v45);
    v49 = a3[24];
    *((_BYTE *)v4 + a3[23]) = *((_BYTE *)a2 + a3[23]);
    *((_BYTE *)v4 + v49) = *((_BYTE *)a2 + v49);
    v50 = a3[26];
    *((_BYTE *)v4 + a3[25]) = *((_BYTE *)a2 + a3[25]);
    *((_BYTE *)v4 + v50) = *((_BYTE *)a2 + v50);
    v51 = a3[28];
    *((_BYTE *)v4 + a3[27]) = *((_BYTE *)a2 + a3[27]);
    *((_BYTE *)v4 + v51) = *((_BYTE *)a2 + v51);
    v52 = a3[30];
    *(_QWORD *)((char *)v4 + a3[29]) = *(uint64_t *)((char *)a2 + a3[29]);
    *(_QWORD *)((char *)v4 + v52) = *(uint64_t *)((char *)a2 + v52);
    v53 = a3[32];
    *((_BYTE *)v4 + a3[31]) = *((_BYTE *)a2 + a3[31]);
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[34];
    *(_QWORD *)((char *)v4 + a3[33]) = *(uint64_t *)((char *)a2 + a3[33]);
    v58 = (_QWORD *)((char *)v4 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = a3[35];
    v62 = a3[36];
    v63 = (_QWORD *)((char *)v4 + v61);
    v64 = (uint64_t *)((char *)a2 + v61);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = (char *)v4 + v62;
    v67 = (char *)a2 + v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v85(v67, 1, v83))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v66, v67, v83);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v66, 0, 1, v83);
    }
    v69 = a3[37];
    v70 = a3[38];
    v71 = (_QWORD *)((char *)v4 + v69);
    v72 = (uint64_t *)((char *)a2 + v69);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = (_QWORD *)((char *)v4 + v70);
    v75 = (uint64_t *)((char *)a2 + v70);
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    v77 = a3[40];
    *((_BYTE *)v4 + a3[39]) = *((_BYTE *)a2 + a3[39]);
    *((_BYTE *)v4 + v77) = *((_BYTE *)a2 + v77);
    v78 = a3[42];
    *((_BYTE *)v4 + a3[41]) = *((_BYTE *)a2 + a3[41]);
    *((_BYTE *)v4 + v78) = *((_BYTE *)a2 + v78);
    v79 = a3[44];
    *((_BYTE *)v4 + a3[43]) = *((_BYTE *)a2 + a3[43]);
    *((_BYTE *)v4 + v79) = *((_BYTE *)a2 + v79);
    *((_BYTE *)v4 + a3[45]) = *((_BYTE *)a2 + a3[45]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s9MediaItemVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[12];
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[16];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_release();
  v9 = a1 + a2[20];
  v10 = sub_1A93F738C();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[36];
  if (!v7(v12, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9MediaItemVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(const void *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  const void *v79;
  void *__dst;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(const void *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  v12 = *(_QWORD *)(a2 + 120);
  v13 = a3[12];
  v79 = (const void *)(a2 + v13);
  __dst = (void *)(a1 + v13);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  v14 = sub_1A93F726C();
  v82 = *(_QWORD *)(v14 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v83 = v15;
  if (v15(v79, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    v17 = v82;
  }
  else
  {
    v17 = v82;
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(__dst, v79, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v14);
  }
  v18 = a3[13];
  v19 = a3[14];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v23 = a3[15];
  v24 = a3[16];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = (void *)(a1 + v24);
  v28 = (const void *)(a2 + v24);
  swift_bridgeObjectRetain();
  v81 = v14;
  if (v83(v28, 1, v14))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v27, v28, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v14);
  }
  v30 = a3[17];
  v31 = a3[18];
  v32 = (_QWORD *)(a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  v35 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = sub_1A93F738C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40(v37, 1, v38))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v42 = a3[21];
  v43 = a3[22];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (_QWORD *)(a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v47 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  v50 = a3[30];
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  v51 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[34];
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = a3[35];
  v60 = a3[36];
  v61 = (_QWORD *)(a1 + v59);
  v62 = (_QWORD *)(a2 + v59);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = (void *)(a1 + v60);
  v65 = (const void *)(a2 + v60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v83(v65, 1, v81))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v64, v65, v81);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v64, 0, 1, v81);
  }
  v67 = a3[37];
  v68 = a3[38];
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  v72 = (_QWORD *)(a1 + v68);
  v73 = (_QWORD *)(a2 + v68);
  v74 = v73[1];
  *v72 = *v73;
  v72[1] = v74;
  v75 = a3[40];
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + v75) = *(_BYTE *)(a2 + v75);
  v76 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v76) = *(_BYTE *)(a2 + v76);
  v77 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_BYTE *)(a1 + v77) = *(_BYTE *)(a2 + v77);
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9MediaItemVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  uint64_t v68;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[12];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = a3[13];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v20 = a3[15];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v23;
  v24 = a3[16];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v13((void *)(a1 + v24), 1, v11);
  v28 = v13(v26, 1, v11);
  v67 = v13;
  v68 = v12;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v25, v11);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v25, v26, v11);
LABEL_13:
  v30 = a3[17];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v33 = a3[20];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  v36 = sub_1A93F738C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
LABEL_18:
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_19:
  v42 = a3[21];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  v45 = a3[32];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[34];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[35];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = a3[36];
  v55 = (void *)(a1 + v54);
  v56 = (void *)(a2 + v54);
  v57 = v67((void *)(a1 + v54), 1, v11);
  v58 = v67(v56, 1, v11);
  if (!v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v55, v56, v11);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v68 + 8))(v55, v11);
    goto LABEL_24;
  }
  if (v58)
  {
LABEL_24:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v55, v56, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v55, 0, 1, v11);
LABEL_25:
  v60 = a3[37];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = a3[38];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + a3[42]) = *(_BYTE *)(a2 + a3[42]);
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_BYTE *)(a1 + a3[44]) = *(_BYTE *)(a2 + a3[44]);
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  return a1;
}

uint64_t _s9MediaItemVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  v8 = a3[12];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[15];
  v17 = a3[16];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = (void *)(a1 + v17);
  v21 = (const void *)(a2 + v17);
  if (v13((const void *)(a2 + v17), 1, v11))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_1A93F738C();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[30];
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  v35 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  v36 = a3[34];
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  v37 = a3[36];
  *(_OWORD *)(a1 + a3[35]) = *(_OWORD *)(a2 + a3[35]);
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  if (v13((const void *)(a2 + v37), 1, v11))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v38, v39, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v38, 0, 1, v11);
  }
  v41 = a3[38];
  *(_OWORD *)(a1 + a3[37]) = *(_OWORD *)(a2 + a3[37]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  v42 = a3[40];
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  return a1;
}

uint64_t _s9MediaItemVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v94)(void *, uint64_t, uint64_t);
  uint64_t v95;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[12];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1A93F726C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = a3[13];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[16];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = v17((void *)(a1 + v29), 1, v15);
  v33 = v17(v31, 1, v15);
  v94 = v17;
  v95 = v16;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v30, v31, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v30, v15);
LABEL_12:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v30, v31, v15);
LABEL_13:
  v35 = a3[17];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_release();
  v40 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = sub_1A93F738C();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_18:
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_19:
  v49 = a3[21];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  v57 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  v58 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  *(_BYTE *)(a1 + v58) = *(_BYTE *)(a2 + v58);
  v59 = a3[32];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)(a2 + v59);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  swift_bridgeObjectRelease();
  v64 = a3[34];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (uint64_t *)(a2 + v64);
  v68 = *v66;
  v67 = v66[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  v69 = a3[35];
  v70 = (_QWORD *)(a1 + v69);
  v71 = (uint64_t *)(a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  v74 = a3[36];
  v75 = (void *)(a1 + v74);
  v76 = (void *)(a2 + v74);
  v77 = v94((void *)(a1 + v74), 1, v15);
  v78 = v94(v76, 1, v15);
  if (!v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v95 + 40))(v75, v76, v15);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v95 + 8))(v75, v15);
    goto LABEL_24;
  }
  if (v78)
  {
LABEL_24:
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v95 + 32))(v75, v76, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v75, 0, 1, v15);
LABEL_25:
  v80 = a3[37];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (uint64_t *)(a2 + v80);
  v84 = *v82;
  v83 = v82[1];
  *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  v85 = a3[38];
  v86 = (_QWORD *)(a1 + v85);
  v87 = (uint64_t *)(a2 + v85);
  v89 = *v87;
  v88 = v87[1];
  *v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  v90 = a3[40];
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + v90) = *(_BYTE *)(a2 + v90);
  v91 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v91) = *(_BYTE *)(a2 + v91);
  v92 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_BYTE *)(a1 + v92) = *(_BYTE *)(a2 + v92);
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  return a1;
}

uint64_t _s9MediaItemVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A928B840(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[20];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[33]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t _s9MediaItemVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A928B8F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[20];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[33]) = (a2 - 1);
  return result;
}

uint64_t _s9MediaItemV8ItemTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A928B9EC + 4 * byte_1A9417C2F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A928BA20 + 4 * byte_1A9417C2A[v4]))();
}

uint64_t sub_1A928BA20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928BA28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A928BA30);
  return result;
}

uint64_t sub_1A928BA3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A928BA44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A928BA48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928BA50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.MediaItem.ItemType()
{
  return &type metadata for PodcastsMediaLibrary.MediaItem.ItemType;
}

_QWORD *_s17MediaItemSnapshotVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    v9 = a3[8];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v12 = sub_1A93F726C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[11];
    v22 = a3[12];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)v4 + v22;
    v27 = (char *)a2 + v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v27, 1, v12))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
    }
    v29 = a3[13];
    v30 = a3[14];
    v31 = (_QWORD *)((char *)v4 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v34 = *v32;
    v33 = v32[1];
    LOBYTE(v32) = *((_BYTE *)a2 + v30);
    *v31 = v34;
    v31[1] = v33;
    *((_BYTE *)v4 + v30) = (_BYTE)v32;
    v35 = a3[15];
    v36 = a3[16];
    v37 = (_QWORD *)((char *)v4 + v35);
    v38 = (uint64_t *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = (_QWORD *)((char *)v4 + v36);
    v41 = (uint64_t *)((char *)a2 + v36);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = a3[17];
    v44 = (_QWORD *)((char *)v4 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s17MediaItemSnapshotVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 48);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17MediaItemSnapshotVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[11];
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (void *)(a1 + v20);
  v25 = (const void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v25, 1, v11))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v24, v25, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[13];
  v28 = a3[14];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (uint64_t *)(a2 + v27);
  v32 = *v30;
  v31 = v30[1];
  LOBYTE(v30) = *(_BYTE *)(a2 + v28);
  *v29 = v32;
  v29[1] = v31;
  *(_BYTE *)(a1 + v28) = (_BYTE)v30;
  v33 = a3[15];
  v34 = a3[16];
  v35 = (_QWORD *)(a1 + v33);
  v36 = (_QWORD *)(a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = (_QWORD *)(a1 + v34);
  v39 = (_QWORD *)(a2 + v34);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = a3[17];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwca(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[12];
  v24 = (void *)(a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = v13((void *)(a1 + v23), 1, v11);
  v27 = v13(v25, 1, v11);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v24, v25, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
LABEL_13:
  v29 = a3[13];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v32 = a3[15];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[16];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[17];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v10 = sub_1A93F726C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v16, v17, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  v19 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t _s17MediaItemSnapshotVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A93F726C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[12];
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = v13((void *)(a1 + v27), 1, v11);
  v31 = v13(v29, 1, v11);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v28, v29, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v28, v11);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v28, v29, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
LABEL_13:
  v33 = a3[13];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v43 = a3[16];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[17];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17MediaItemSnapshotVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A928C7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 32), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 60) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s17MediaItemSnapshotVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A928C834(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 32), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 60) + 8) = (a2 - 1);
  return result;
}

void sub_1A928C8B8()
{
  unint64_t v0;

  sub_1A90C44E8(319, (unint64_t *)&qword_1ED2AD6E8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s17MediaItemSnapshotV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1A928C9C0 + 4 * byte_1A9417C39[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1A928C9F4 + 4 * byte_1A9417C34[v4]))();
}

uint64_t sub_1A928C9F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928C9FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A928CA04);
  return result;
}

uint64_t sub_1A928CA10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A928CA18);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1A928CA1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928CA24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17MediaItemSnapshotV10CodingKeysOMa()
{
  return &_s17MediaItemSnapshotV10CodingKeysON;
}

uint64_t _s9MediaItemV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD7)
    goto LABEL_17;
  if (a2 + 41 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 41) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 41;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 41;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 41;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2A;
  v8 = v6 - 42;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9MediaItemV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 41 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 41) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD6)
    return ((uint64_t (*)(void))((char *)&loc_1A928CB1C + 4 * byte_1A9417C43[v4]))();
  *a1 = a2 + 41;
  return ((uint64_t (*)(void))((char *)sub_1A928CB50 + 4 * byte_1A9417C3E[v4]))();
}

uint64_t sub_1A928CB50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928CB58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A928CB60);
  return result;
}

uint64_t sub_1A928CB6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A928CB74);
  *(_BYTE *)result = a2 + 41;
  return result;
}

uint64_t sub_1A928CB78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A928CB80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9MediaItemV10CodingKeysOMa()
{
  return &_s9MediaItemV10CodingKeysON;
}

unint64_t sub_1A928CBA0()
{
  unint64_t result;

  result = qword_1EEABC8E8;
  if (!qword_1EEABC8E8)
  {
    result = MEMORY[0x1AF414014](&unk_1A941814C, &_s9MediaItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC8E8);
  }
  return result;
}

unint64_t sub_1A928CBE8()
{
  unint64_t result;

  result = qword_1EEABC8F0;
  if (!qword_1EEABC8F0)
  {
    result = MEMORY[0x1AF414014](&unk_1A9418204, &_s17MediaItemSnapshotV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC8F0);
  }
  return result;
}

unint64_t sub_1A928CC30()
{
  unint64_t result;

  result = qword_1EEABC8F8;
  if (!qword_1EEABC8F8)
  {
    result = MEMORY[0x1AF414014](&unk_1A9418174, &_s17MediaItemSnapshotV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC8F8);
  }
  return result;
}

unint64_t sub_1A928CC78()
{
  unint64_t result;

  result = qword_1EEABC900;
  if (!qword_1EEABC900)
  {
    result = MEMORY[0x1AF414014](&unk_1A941819C, &_s17MediaItemSnapshotV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC900);
  }
  return result;
}

unint64_t sub_1A928CCC0()
{
  unint64_t result;

  result = qword_1EEABC908;
  if (!qword_1EEABC908)
  {
    result = MEMORY[0x1AF414014](&unk_1A94180BC, &_s9MediaItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC908);
  }
  return result;
}

unint64_t sub_1A928CD08()
{
  unint64_t result;

  result = qword_1EEABC910;
  if (!qword_1EEABC910)
  {
    result = MEMORY[0x1AF414014](&unk_1A94180E4, &_s9MediaItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEABC910);
  }
  return result;
}

uint64_t sub_1A928CD4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52557465737361 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C525564656566 && a2 == 0xE700000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61725465726F7473 && a2 == 0xEC00000064496B63 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5374736163646F70 && a2 == 0xEE00644965726F74 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A944B220 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A944B240 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6461656879616C70 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x556B726F77747261 && a2 == 0xEA00000000004C52 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x637365446D657469 && a2 == 0xEF6E6F6974706972 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7241726576726573 && a2 == 0xED00006B726F7774 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEE00656C62616269 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEB00000000657461 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6D75626C61 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A944B260 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6972747365527369 && a2 == 0xEC00000064657463 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A944B280 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x657079546D657469 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x7079546563697270 && a2 == 0xE900000000000065 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6E694B616964656DLL && a2 == 0xE900000000000064 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x4E65646F73697065 && a2 == 0xED00007265626D75 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x754E6E6F73616573 && a2 == 0xEC0000007265626DLL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x4974736163646F70 && a2 == 0xEF6C616972655373 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A944B2A0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x496B726F77747261 && a2 == 0xEB000000006F666ELL || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A944B2C0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A944B2E0 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x4C52556572616873 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000444955 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A944B300 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A944B320 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A944B340 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A944B360 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A944B380 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x6F6C6C6168537369 && a2 == 0xE900000000000077 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x656C654464656566 && a2 == 0xEB00000000646574 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A944B3A0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 41;
    else
      return 42;
  }
}

uint64_t sub_1A928DE90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61725465726F7473 && a2 == 0xEC00000064496B63;
  if (v2 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374736163646F70 && a2 == 0xEE00644965726F74 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5574736163646F70 && a2 == 0xEB00000000444955 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A944B240 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x556B726F77747261 && a2 == 0xEA00000000004C52 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D75626C61 && a2 == 0xE500000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xED000044496D6574 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4C52557465737361 && a2 == 0xE800000000000000 || (sub_1A93F90C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A944B2A0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1A93F90C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

unint64_t sub_1A928E490()
{
  unint64_t result;

  result = qword_1EEABC918;
  if (!qword_1EEABC918)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastStateModel.StateError, &type metadata for PodcastStateModel.StateError);
    atomic_store(result, (unint64_t *)&qword_1EEABC918);
  }
  return result;
}

unint64_t sub_1A928E4D4()
{
  unint64_t result;

  result = qword_1EEABC928;
  if (!qword_1EEABC928)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PodcastsMediaLibrary.MediaItem.ItemType, &type metadata for PodcastsMediaLibrary.MediaItem.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EEABC928);
  }
  return result;
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.dismiss(success:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.displayAlert(title:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of OAuthHUDViewHandlerProtocol.spinnerIsActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

_QWORD *sub_1A928E53C(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1A93F8E5C())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4129DC](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_uuid);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1A93F8040();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A907ECFC(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1A907ECFC((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static EpisodeLevelCalculator.maximumLevelsToCompute.getter()
{
  return 10;
}

uint64_t static EpisodeLevelCalculator.uncalculatedLevel.getter()
{
  return 1000000;
}

void sub_1A928E6F0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1A928F28C(0, a1, a2, a3);
}

void sub_1A928E70C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1A928F28C(1, a1, a2, a3);
}

uint64_t sub_1A928E728(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v8 = sub_1A93F8040();
  v10 = v9;
  v11 = a4;
  v12 = a1;
  sub_1A928F28C(a5, v8, v10, v11);

  return swift_bridgeObjectRelease();
}

id EpisodeLevelCalculator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EpisodeLevelCalculator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeLevelCalculator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EpisodeLevelCalculator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeLevelCalculator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A928E81C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __CFString *v13;
  id v14;
  id v15;
  unint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;

  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1A93F8010();
  v6 = objc_msgSend(v4, sel_predicateForAllEpisodesOnPodcastUuid_, v5);

  v7 = objc_msgSend(v4, sel_predicateForVisuallyPlayed_, 1);
  v8 = objc_msgSend(v4, sel_predicateForPlayedDateSetByListening);
  v9 = objc_msgSend(v7, sel_AND_, v8);

  v10 = objc_msgSend(v4, sel_predicateForHasEpisodeNumber);
  v11 = objc_msgSend(v6, sel_AND_, v9);
  v12 = objc_msgSend(v11, sel_AND_, v10);

  v13 = CFSTR("MTEpisode");
  v14 = v12;
  v15 = objc_msgSend(v4, sel_sortDescriptorsForLastDatePlayedAscending_, 0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
  v16 = sub_1A93F8310();

  sub_1A911ECB8(v16);
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1A93F82F8();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(a3, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v13, v14, v17, 0, 1);

  if (!v18)
    goto LABEL_11;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
  v19 = sub_1A93F8310();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_4;
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v20 = (id)MEMORY[0x1AF4129DC](0, v19);
  }
  else
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v20 = *(id *)(v19 + 32);
  }
  v21 = v20;

  swift_bridgeObjectRelease();
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())

}

id sub_1A928EB2C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;

  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1A93F8010();
  v10 = objc_msgSend(v8, sel_predicateForAllEpisodesOnPodcastUuid_, v9);

  v11 = objc_msgSend(v8, sel_predicateForHasEpisodeNumber);
  v12 = objc_msgSend(v10, sel_AND_, v11);

  v13 = objc_msgSend(v8, sel_predicateForEpisodeType_, 0);
  v14 = objc_msgSend(v12, sel_AND_, v13);

  v15 = v14;
  sub_1A928E81C(a2, a3, a4);
  v17 = v16;
  if (v16)
  {
    v18 = v16;
    if ((uint64_t)objc_msgSend(v18, sel_seasonNumber) >= 1 && (uint64_t)objc_msgSend(v18, sel_episodeNumber) >= 1)
    {
      v19 = objc_msgSend(v8, sel_predicateForSeasonNumber_, objc_msgSend(v18, sel_seasonNumber));
      v20 = objc_msgSend(v15, sel_AND_, v19);

      v17 = v20;
      v21 = objc_msgSend(v8, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, objc_msgSend(v18, sel_episodeNumber));
      v15 = objc_msgSend(v17, sel_AND_, v21);

      goto LABEL_9;
    }

  }
  v22 = (uint64_t)objc_msgSend(a1, sel_latestSeasonNumber);
  if (v22 < 1)
  {

  }
  else
  {
    v23 = objc_msgSend(v8, sel_predicateForSeasonNumber_, v22);
    v24 = objc_msgSend(v15, sel_AND_, v23);

    v15 = v24;
  }
LABEL_9:

  return v15;
}

void sub_1A928EDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;

  v6 = (void *)objc_opt_self();
  v7 = MEMORY[0x1E0DEA968];
  v8 = (void *)sub_1A93F85EC();
  v9 = objc_msgSend(v6, sel_predicateForEpisodeUuids_, v8);

  v10 = objc_msgSend(v9, "NOT");
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3C0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405950;
  v12 = sub_1A93F8040();
  v14 = v13;
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AC4A0);
  *(_QWORD *)(v11 + 56) = v7;
  v15 = sub_1A90A92DC();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  v16 = MEMORY[0x1E0DEDCD8];
  *(_QWORD *)(v11 + 96) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 64) = v15;
  *(_QWORD *)(v11 + 72) = 1000000;
  v17 = sub_1A93F8754();
  v18 = (void *)sub_1A93F8010();
  v19 = objc_msgSend(v6, sel_predicateForAllEpisodesOnPodcastUuid_, v18);

  v37 = v10;
  v20 = objc_msgSend(v19, sel_AND_, v10);

  v36 = (void *)v17;
  v38 = objc_msgSend(v20, sel_AND_, v17);

  sub_1A93F8040();
  v21 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v22 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithEntityName_, v22);

  objc_msgSend(v23, sel_setPredicate_, v38);
  objc_msgSend(v23, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v23, sel_setFetchBatchSize_, 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9430);
  v35 = v23;
  v39 = a5;
  v24 = sub_1A93F89DC();
  v34 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (!v25)
      goto LABEL_16;
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_saveInCurrentBlock);

      return;
    }
  }
  if (v25 < 1)
    goto LABEL_18;
  v26 = 0;
  v27 = 0;
  while (1)
  {
    if ((v34 & 0xC000000000000001) != 0)
      MEMORY[0x1AF4129DC](v26, v34);
    else
      swift_unknownObjectRetain();
    objc_opt_self();
    v28 = swift_dynamicCastObjCClass();
    if (!v28)
      goto LABEL_6;
    v29 = (void *)v28;
    v30 = (void *)MEMORY[0x1AF4135A0](v28);
    v31 = (void *)sub_1A93F92C4();
    sub_1A93F8040();
    v32 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setValue_forKey_, v31, v32, v35);

    if (__OFADD__(v27++, 1))
      break;
    if (__ROR8__(0x8F5C28F5C28F5C29 * v27 + 0x51EB851EB851EB8, 3) <= 0x147AE147AE147AEuLL)
      objc_msgSend(v39, sel_saveInCurrentBlock);
    objc_autoreleasePoolPop(v30);
LABEL_6:
    ++v26;
    swift_unknownObjectRelease();
    if (v25 == v26)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_1A928F28C(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v8;
  id v9;
  int v10;
  id v11;
  BOOL v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  __CFString *v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  unsigned int v39;
  id v40;

  v8 = (void *)sub_1A93F8010();
  v9 = objc_msgSend(a4, sel_podcastForUuid_, v8);

  if (v9)
  {
    v10 = a1 & 1;
    v11 = v9;
    v39 = v10;
    if (objc_msgSend(v11, sel_isSerialShowTypeInFeed))
      v12 = v10 == 0;
    else
      v12 = 1;
    if (v12)
    {
      v13 = (void *)objc_opt_self();
      v14 = (void *)sub_1A93F8010();
      v15 = objc_msgSend(v13, sel_predicateForAllEpisodesOnPodcastUuid_, v14);

      v16 = objc_msgSend(v13, sel_sortDescriptorsForCalculatingEpisodeLevel);
    }
    else
    {
      v15 = sub_1A928EB2C(v11, a2, a3, a4);
      v16 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForEpisodeNumberAscending_, 1);
    }
    v17 = v16;
    sub_1A9072534(0, (unint64_t *)&qword_1ED2A4190);
    v18 = sub_1A93F8310();

    v19 = CFSTR("MTEpisode");
    v40 = v15;
    sub_1A911ECB8(v18);
    swift_bridgeObjectRelease();
    v20 = (void *)sub_1A93F82F8();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(a4, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_limit_, v19, v40, v20, 0, 10);

    if (!v21)
    {
LABEL_31:
      __break(1u);
      return;
    }
    sub_1A9072534(0, (unint64_t *)&qword_1ED2AC7B0);
    v22 = sub_1A93F8310();

    if (v22 >> 62)
    {
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
      swift_bridgeObjectRetain();
      v33 = sub_1A93F8E20();
      swift_bridgeObjectRelease_n();
      v22 = v33;
    }
    else
    {
      v23 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      sub_1A93F91E0();
      sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
      if (swift_dynamicCastMetatype() || (v31 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
      {
LABEL_12:
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = v23 + 32;
        while (1)
        {
          objc_opt_self();
          if (!swift_dynamicCastObjCClass())
            break;
          v32 += 8;
          if (!--v31)
            goto LABEL_12;
        }
        swift_bridgeObjectRelease();
        v22 = v23 | 1;
      }
    }
    v37 = a2;
    v38 = a4;
    v36 = v11;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1A93F8E5C();
      if (v24)
        goto LABEL_15;
    }
    else
    {
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v24)
      {
LABEL_15:
        if (v24 >= 1)
        {
          v25 = 0;
          do
          {
            if ((v22 & 0xC000000000000001) != 0)
              v26 = (id)MEMORY[0x1AF4129DC](v25, v22);
            else
              v26 = *(id *)(v22 + 8 * v25 + 32);
            v27 = v26;
            v28 = v25 + 1;
            v29 = (void *)sub_1A93F92C4();
            sub_1A93F8040();
            v30 = (void *)sub_1A93F8010();
            swift_bridgeObjectRelease();
            objc_msgSend(v27, sel_setValue_forKey_, v29, v30);

            v25 = v28;
          }
          while (v24 != v28);
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_31;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    v34 = sub_1A928E53C(v22);
    swift_bridgeObjectRelease();
    v35 = sub_1A9159F94((uint64_t)v34);
    swift_bridgeObjectRelease();
    sub_1A928EDC4(v39, v37, a3, v35, v38);
    swift_bridgeObjectRelease();

  }
}

uint64_t method lookup function for EpisodeLevelCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeLevelCalculator.unsafeUpdateEpisodeLevels(showUUID:on:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of EpisodeLevelCalculator.unsafeUpdateEpisodeShowTypeSpecificLevels(showUUID:on:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t AutoDownloadRetentionPolicyHistory.transitions.getter()
{
  return swift_retain();
}

uint64_t AutoDownloadRetentionPolicyHistory.init(transitions:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC930);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = a1;
  *a2 = result;
  return result;
}

uint64_t AutoDownloadRetentionPolicyHistory.recordTransition(from:to:transitionTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v3;
  v12 = (char *)v9 + *(int *)(v11 + 48);
  v13 = sub_1A93F738C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a3, v13);
  *v9 = a1;
  v9[1] = a2;
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1A928F894((unint64_t *)(v10 + 16), (uint64_t)v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  return sub_1A928F9A4((uint64_t)v9);
}

uint64_t sub_1A928F894(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9290F90(a2, (uint64_t)v7);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1A9119358(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
  v10 = *(_QWORD *)(v8 + 16);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    v8 = sub_1A9119358(v9 > 1, v10 + 1, 1, v8);
  *(_QWORD *)(v8 + 16) = v10 + 1;
  result = sub_1A9290FD8((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v10);
  *a1 = v8;
  return result;
}

uint64_t sub_1A928F9A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static AutoDownloadRetentionPolicyHistory.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x697469736E617274 && a2 == 0xEB00000000736E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void AutoDownloadRetentionPolicyHistory.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t AutoDownloadRetentionPolicyHistory.CodingKeys.stringValue.getter()
{
  return 0x697469736E617274;
}

uint64_t sub_1A928FB34()
{
  return 0x697469736E617274;
}

uint64_t sub_1A928FB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x697469736E617274 && a2 == 0xEB00000000736E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A93F90C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A928FC00()
{
  sub_1A928FDB8();
  return sub_1A93F945C();
}

uint64_t sub_1A928FC28()
{
  sub_1A928FDB8();
  return sub_1A93F9468();
}

uint64_t AutoDownloadRetentionPolicyHistory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC938);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A928FDB8();
  sub_1A93F93C0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC948);
    sub_1A9290CC4(&qword_1EEABC950, &qword_1EEABC958, (uint64_t)&protocol conformance descriptor for SettingTransition<A>, MEMORY[0x1E0DEAF40]);
    sub_1A93F8F7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC930);
    v10 = swift_allocObject();
    *(_DWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 16) = v9;
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1A928FDB8()
{
  unint64_t result;

  result = qword_1EEABC940;
  if (!qword_1EEABC940)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory.CodingKeys, &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC940);
  }
  return result;
}

void AutoDownloadRetentionPolicyHistory.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC960);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  if (v2)
  {
    __break(1u);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A928FDB8();
    sub_1A93F93D8();
    v10[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC948);
    sub_1A9290CC4(&qword_1EEABC968, &qword_1EEABC970, (uint64_t)&protocol conformance descriptor for SettingTransition<A>, MEMORY[0x1E0DEAF10]);
    sub_1A93F9030();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A928FF58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AutoDownloadRetentionPolicyHistory.init(from:)(a1, a2);
}

void sub_1A928FF6C(_QWORD *a1)
{
  AutoDownloadRetentionPolicyHistory.encode(to:)(a1);
}

void NSUserDefaults.recordRetentionPolicyChange(from:to:transitionTime:)(uint64_t a1, objc_class *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = ((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((objc_class *)a1 == a2)
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v9 = sub_1A93F7698();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A3F08);
    v25 = sub_1A93F7674();
    v10 = sub_1A93F8784();
    if (os_log_type_enabled(v25, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v27 = v12;
      *(_DWORD *)v11 = 136315394;
      v26 = a1;
      type metadata accessor for MTPodcastEpisodeLimit(0);
      v13 = sub_1A93F8094();
      v26 = sub_1A906436C(v13, v14, &v27);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v26 = a1;
      v15 = sub_1A93F8094();
      v26 = sub_1A906436C(v15, v16, &v27);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A904E000, v25, v10, "Skipping updating retention policy history for equivilent change: %s -> %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v12, -1, -1);
      MEMORY[0x1AF41411C](v11, -1, -1);
    }

  }
  else
  {
    v17 = sub_1A93F8040();
    sub_1A92902D8(v17, v18, &v27);
    swift_bridgeObjectRelease();
    v19 = v27;
    if (!v27)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABC930);
      v19 = swift_allocObject();
      *(_DWORD *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 16) = MEMORY[0x1E0DEE9D8];
    }
    v20 = (char *)v8 + *(int *)(v6 + 48);
    v21 = sub_1A93F738C();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a3, v21);
    v8->isa = (Class)a1;
    v8[1].isa = a2;
    MEMORY[0x1E0C80A78](v22);
    *(&v25 - 2) = v8;
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
    sub_1A928F894((unint64_t *)(v19 + 16), (uint64_t)*(&v25 - 2));
    os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
    sub_1A928F9A4((uint64_t)v8);
    v23 = sub_1A93F8040();
    sub_1A9290778(v19, v23, v24);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1A92902D8(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v7 = (void *)sub_1A93F8010();
  v8 = objc_msgSend(v3, sel_dataForKey_, v7);

  if (v8)
  {
    v9 = sub_1A93F72B4();
    v11 = v10;

    sub_1A93F7098();
    swift_allocObject();
    sub_1A93F708C();
    sub_1A9290F4C();
    sub_1A93F7080();
    swift_release();
    sub_1A905F180(v9, v11);
  }
  else
  {
    if (qword_1ED2A3F00 != -1)
      swift_once();
    v12 = sub_1A93F7698();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3EE0);
    swift_bridgeObjectRetain_n();
    v13 = sub_1A93F7674();
    v14 = sub_1A93F8790();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A906436C(a1, a2, &v17);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A904E000, v13, v14, "No user defaults value for key '%s'", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v16, -1, -1);
      MEMORY[0x1AF41411C](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *a3 = 0;
  }
}

uint64_t sub_1A9290778(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[3];

  v4 = v3;
  v19[2] = a1;
  sub_1A93F70C8();
  swift_allocObject();
  sub_1A93F70BC();
  sub_1A9290F08();
  v7 = sub_1A93F70B0();
  v9 = v8;
  v10 = (void *)sub_1A93F729C();
  v11 = (void *)sub_1A93F8010();
  objc_msgSend(v4, sel_setValue_forKey_, v10, v11);

  if (qword_1ED2A3F00 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3EE0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A93F7674();
  v14 = sub_1A93F8790();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = a2;
    v17 = swift_slowAlloc();
    v19[0] = v17;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A906436C(v16, a3, v19);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v13, v14, "Stored value for key '%s'", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v17, -1, -1);
    MEMORY[0x1AF41411C](v15, -1, -1);
    sub_1A905F180(v7, v9);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A905F180(v7, v9);

  }
  return swift_release();
}

uint64_t NSUserDefaults.transitionGlobalDownloadRetentionPolicy(to:)(objc_class *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v11;

  v3 = sub_1A93F738C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, sel_episodeLimitForKey_, CFSTR("MTPodcastEpisodeLimitDefaultKey"), v5);
  v9 = (void *)sub_1A93F92C4();
  objc_msgSend(v1, sel_setObject_forKey_, v9, CFSTR("MTPodcastEpisodeLimitDefaultKey"));

  sub_1A93F7374();
  NSUserDefaults.recordRetentionPolicyChange(from:to:transitionTime:)((uint64_t)v8, a1, (uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1A9290CC4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABC948);
    v10 = sub_1A9290D40(a2, a3);
    result = MEMORY[0x1AF414014](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9290D40(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEAB79A0);
    result = MEMORY[0x1AF414014](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A9290D88()
{
  unint64_t result;

  result = qword_1EEABC978;
  if (!qword_1EEABC978)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory.CodingKeys, &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC978);
  }
  return result;
}

unint64_t sub_1A9290DD0()
{
  unint64_t result;

  result = qword_1EEABC980;
  if (!qword_1EEABC980)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory.CodingKeys, &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC980);
  }
  return result;
}

unint64_t sub_1A9290E18()
{
  unint64_t result;

  result = qword_1EEABC988;
  if (!qword_1EEABC988)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory.CodingKeys, &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEABC988);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadRetentionPolicyHistory()
{
  return &type metadata for AutoDownloadRetentionPolicyHistory;
}

uint64_t storeEnumTagSinglePayload for AutoDownloadRetentionPolicyHistory.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9290EAC + 4 * byte_1A9418360[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9290ECC + 4 * byte_1A9418365[v4]))();
}

_BYTE *sub_1A9290EAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9290ECC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9290ED4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9290EDC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9290EE4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9290EEC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadRetentionPolicyHistory.CodingKeys()
{
  return &type metadata for AutoDownloadRetentionPolicyHistory.CodingKeys;
}

unint64_t sub_1A9290F08()
{
  unint64_t result;

  result = qword_1EEABC990;
  if (!qword_1EEABC990)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory, &type metadata for AutoDownloadRetentionPolicyHistory);
    atomic_store(result, (unint64_t *)&qword_1EEABC990);
  }
  return result;
}

unint64_t sub_1A9290F4C()
{
  unint64_t result;

  result = qword_1EEABC998;
  if (!qword_1EEABC998)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AutoDownloadRetentionPolicyHistory, &type metadata for AutoDownloadRetentionPolicyHistory);
    atomic_store(result, (unint64_t *)&qword_1EEABC998);
  }
  return result;
}

uint64_t sub_1A9290F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9290FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB79A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedManagerBagConfiguration.deltaSyncHostURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A9062170(v1, a1, &qword_1ED2AD3D0);
}

uint64_t FeedManagerBagConfiguration.deltaPullToFreshOnShowPageShouldBootstrap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 20));
}

uint64_t FeedManagerBagConfiguration.deltaShouldEndUpdateOnDetectingLoop.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 24));
}

uint64_t FeedManagerBagConfiguration.backoffIntervals.getter()
{
  type metadata accessor for FeedManagerBagConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t static FeedManagerBagConfiguration.getConfiguration(completion:)(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1A90C80E8;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_1A906FDC0;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1A906FD4C;
  v9[3] = &block_descriptor_42;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_createSnapshotWithCompletion_, v7);
  _Block_release(v7);

  return swift_release();
}

uint64_t sub_1A92911C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedManagerBagConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A93F726C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *assignWithCopy for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for FeedManagerBagConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1A93F726C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v12] = a2[v12];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A929160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A929168C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1A9291718(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92FA8D4(*a1, *a2);
}

uint64_t sub_1A9291724()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92917C8()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9291848()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92918E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A9291E5C();
  *a1 = result;
  return result;
}

void sub_1A9291914(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xEC00000079726172;
  v5 = 0x62694C6C61636F6CLL;
  if (v2 != 1)
  {
    v5 = 0x7265666E69;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x495041616964656DLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1A9291978()
{
  qword_1EEABC9B8 = (uint64_t)&type metadata for MediaAPIProviderFactory;
  unk_1EEABC9C0 = &off_1E54F8380;
  qword_1EEABC9F0 = (uint64_t)&_s25HomePodRequestTransformerVN;
  unk_1EEABC9F8 = &off_1E54E2ED0;
  qword_1EEABC9C8 = 5;
  byte_1EEABC9D0 = 1;
}

uint64_t static PodcastsMediaLibrary.Configuration.homepod.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9291A68(&qword_1EEAB6EF0, (uint64_t)&unk_1EEABC9A0, a1);
}

uint64_t sub_1A92919D8(uint64_t a1, uint64_t a2)
{
  _s13ConfigurationVwcp(a2, a1);
  return a2;
}

void sub_1A9291A0C()
{
  qword_1EEABCA18 = (uint64_t)&type metadata for DefaultProviderFactory;
  unk_1EEABCA20 = &off_1E54F83A0;
  qword_1EEABCA50 = (uint64_t)&_s25DefaultRequestTransformerVN;
  unk_1EEABCA58 = &off_1E54E2EE0;
  qword_1EEABCA28 = 40;
  byte_1EEABCA30 = 0;
}

uint64_t static PodcastsMediaLibrary.Configuration.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9291A68(&qword_1EEAB6EF8, (uint64_t)&unk_1EEABCA00, a1);
}

uint64_t sub_1A9291A68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1A92919D8(a2, a3);
}

uint64_t static PodcastsMediaLibrary.Configuration.platform.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnHomepod))
  {
    if (qword_1EEAB6EF0 != -1)
      swift_once();
    v2 = &unk_1EEABC9A0;
  }
  else
  {
    if (qword_1EEAB6EF8 != -1)
      swift_once();
    v2 = &unk_1EEABCA00;
  }
  return sub_1A92919D8((uint64_t)v2, a1);
}

uint64_t _s13ConfigurationVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 56);
}

uint64_t _s13ConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
  return a1;
}

uint64_t _s13ConfigurationVwca(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Configuration()
{
  return &type metadata for PodcastsMediaLibrary.Configuration;
}

uint64_t _s6SourceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A9291D94 + 4 * byte_1A94185AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A9291DC8 + 4 * byte_1A94185A8[v4]))();
}

uint64_t sub_1A9291DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9291DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9291DD8);
  return result;
}

uint64_t sub_1A9291DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A9291DECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A9291DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9291DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6SourceOMa()
{
  return &_s6SourceON;
}

unint64_t sub_1A9291E18()
{
  unint64_t result;

  result = qword_1EEABCA60;
  if (!qword_1EEABCA60)
  {
    result = MEMORY[0x1AF414014](&unk_1A9418640, &_s6SourceON);
    atomic_store(result, (unint64_t *)&qword_1EEABCA60);
  }
  return result;
}

uint64_t sub_1A9291E5C()
{
  unint64_t v0;

  v0 = sub_1A93F8ED4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t EpisodeStateRepository.__allocating_init(episodeStatePersistentHistoryTracker:)(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = swift_allocObject();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v4 = objc_msgSend(v3, sel_storeContext);

  *(_QWORD *)(v2 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4088);
  swift_allocObject();
  v5 = sub_1A93F798C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 24) = v5;
  *(_BYTE *)(v2 + 48) = -1;
  v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  v7 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = a1;
  return v2;
}

uint64_t EpisodeStateRepository.init(episodeStatePersistentHistoryTracker:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_storeContext);

  *(_QWORD *)(v2 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4088);
  swift_allocObject();
  v6 = sub_1A93F798C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 24) = v6;
  *(_BYTE *)(v2 + 48) = -1;
  v7 = v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID;
  v8 = sub_1A93F75FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository_episodeStatePersistentHistoryTracker) = a1;
  return v2;
}

uint64_t EpisodeStateRepository.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1A90BB110(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_1A906659C(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID);
  swift_release();
  return v0;
}

uint64_t EpisodeStateRepository.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1A90BB110(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_1A906659C(v0 + OBJC_IVAR____TtC18PodcastsFoundation22EpisodeStateRepository____lazy_storage___signpostID);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A9292118()
{
  return swift_deallocObject();
}

uint64_t sub_1A9292128()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A929214C()
{
  uint64_t v0;

  swift_release();
  sub_1A9086E08(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_1A9292184()
{
  return swift_deallocObject();
}

uint64_t sub_1A9292194()
{
  return type metadata accessor for EpisodeStateRepository();
}

uint64_t method lookup function for EpisodeStateRepository()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeStateRepository.__allocating_init(episodeStatePersistentHistoryTracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

BOOL sub_1A92921B0(uint64_t a1, uint64_t a2)
{
  return sub_1A935C468(a1, a2);
}

void sub_1A92921B8(uint64_t *a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  objc_class *v25;
  char *v26;
  void **v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  objc_class *v40;
  char *v41;
  void **v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  __int128 v55;
  objc_super v56;
  objc_super v57;
  uint64_t v58;

  v54 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)&v49 - v8;
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[3];
  v49 = a1[2];
  v58 = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
    goto LABEL_16;
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    while (1)
    {
      v50 = v11;
      v51 = v10;
      v10 = 0;
      *(_QWORD *)&v55 = v9;
      while ((a2 & 0xC000000000000001) != 0)
      {
        v13 = (char *)MEMORY[0x1AF4129DC](v10, a2);
LABEL_9:
        v11 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_15;
        if (*(_QWORD *)&v13[OBJC_IVAR___MTContentKeyRequest_requestID] == v9)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v9 = v55;
        }
        else
        {

        }
        ++v10;
        if (v11 == v12)
        {
          v14 = v58;
          v11 = v50;
          v10 = v51;
          goto LABEL_18;
        }
      }
      if (v10 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_1A93F8E5C();
      if (!v12)
        goto LABEL_17;
    }
    v13 = (char *)*(id *)(a2 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_17:
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v14 + 16))
      goto LABEL_21;
LABEL_30:
    swift_release();
    v16 = 0;
    if (v10)
      goto LABEL_25;
    goto LABEL_31;
  }
  if (!sub_1A93F8E5C())
    goto LABEL_30;
LABEL_21:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x1AF4129DC](0, v14);
LABEL_24:
    v16 = v15;
    swift_release();
    if (v10)
    {
LABEL_25:
      v17 = sub_1A93F738C();
      v18 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v52, 1, 1, v17);
      v19 = sub_1A920E458(v10);
      if ((v20 & 1) != 0)
        v21 = -1;
      else
        v21 = v19;
      v22 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v23 = (void *)sub_1A93F8010();
      v24 = objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, v21, 0, v49);

      v25 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
      v26 = (char *)objc_allocWithZone(v25);
      v27 = (void **)&v26[OBJC_IVAR___MTContentKeyResponse_error];
      *(_QWORD *)&v26[OBJC_IVAR___MTContentKeyResponse_error] = 0;
      v28 = (uint64_t *)&v26[OBJC_IVAR___MTContentKeyResponse_keyData];
      v55 = xmmword_1A9411960;
      *(_OWORD *)&v26[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
      *(_QWORD *)&v26[OBJC_IVAR___MTContentKeyResponse_request] = v16;
      swift_beginAccess();
      v29 = *v28;
      v30 = v28[1];
      *(_OWORD *)v28 = v55;
      v31 = v16;
      v32 = v26;
      sub_1A9069F9C(v29, v30);
      sub_1A90A1CA8(v18, (uint64_t)&v32[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
      swift_beginAccess();
      v33 = *v27;
      *v27 = v24;
      v34 = v24;

      v57.receiver = v32;
      v57.super_class = v25;
      v35 = objc_msgSendSuper2(&v57, sel_init);
      sub_1A90AC3A4(v18);

LABEL_35:
      *v54 = v35;
      return;
    }
LABEL_31:
    if (v11)
    {
      v36 = sub_1A93F7284();
      v38 = v37;
    }
    else
    {
      v36 = 0;
      v38 = 0xF000000000000000;
    }
    v39 = sub_1A93F738C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v53, 1, 1, v39);
    v40 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
    v41 = (char *)objc_allocWithZone(v40);
    v42 = (void **)&v41[OBJC_IVAR___MTContentKeyResponse_error];
    *(_QWORD *)&v41[OBJC_IVAR___MTContentKeyResponse_error] = 0;
    v43 = (uint64_t *)&v41[OBJC_IVAR___MTContentKeyResponse_keyData];
    *(_OWORD *)&v41[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
    *(_QWORD *)&v41[OBJC_IVAR___MTContentKeyResponse_request] = v16;
    swift_beginAccess();
    v44 = *v43;
    v45 = v43[1];
    *v43 = v36;
    v43[1] = v38;
    v24 = v16;
    v46 = v41;
    sub_1A906A3DC(v36, v38);
    sub_1A9069F9C(v44, v45);
    v47 = v53;
    sub_1A90A1CA8(v53, (uint64_t)&v46[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
    swift_beginAccess();
    v48 = *v42;
    *v42 = 0;

    v56.receiver = v46;
    v56.super_class = v40;
    v35 = objc_msgSendSuper2(&v56, sel_init, v49);
    sub_1A90AC3A4(v47);
    sub_1A9069F9C(v36, v38);
    goto LABEL_35;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = *(id *)(v14 + 32);
    goto LABEL_24;
  }
  __break(1u);
}

void sub_1A9292720(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint8_t *v18;
  uint8_t *v19;
  void *v20;
  _BYTE *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  _QWORD v26[6];

  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = sub_1A93F7674();
  v13 = sub_1A93F879C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = a2;
    v16 = v10;
    v17 = a3;
    v18 = v14;
    *(_DWORD *)v14 = 134217984;
    v26[5] = v15;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v12, v13, "[Decoding Key Response] Request Type %ld. Missing license responses", v18, 0xCu);
    v19 = v18;
    a3 = v17;
    v10 = v16;
    MEMORY[0x1AF41411C](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1A920EFE4();
  v20 = (void *)swift_allocError();
  *v21 = 1;
  v22 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
  v23 = v10;
  v24 = (void *)sub_1A93F711C();
  v25 = objc_msgSend(v22, sel_initWithRequest_keyData_renewalDate_error_, v23, 0, 0, v24);

  *a3 = v25;
}

void sub_1A929294C(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  objc_class *v43;
  char *v44;
  void **v45;
  uint64_t *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  char *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  objc_class *v68;
  char *v69;
  void **v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  id v77;
  char *v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  objc_super v100;
  objc_super v101;
  uint64_t v102;
  uint64_t v103;

  v5 = v4;
  v86 = a3;
  v90 = a4;
  v92 = sub_1A93F7698();
  v8 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v93 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v85 = (char *)&v80 - v11;
  v89 = sub_1A93F738C();
  v12 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v81 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD360);
  MEMORY[0x1E0C80A78](v14);
  v88 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v87 = (uint64_t)&v80 - v17;
  MEMORY[0x1E0C80A78](v18);
  v94 = (uint64_t)&v80 - v19;
  v20 = *a1;
  v96 = a1[1];
  v84 = *((unsigned __int8 *)a1 + 24);
  v21 = a1[5];
  v82 = a1[4];
  v103 = MEMORY[0x1E0DEE9D8];
  v97 = v21;
  if (a2 >> 62)
    goto LABEL_33;
  v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_3:
  v91 = v5;
  v95 = v8;
  if (v22)
  {
    v83 = v12;
    v12 = 0;
    v5 = a2 & 0xC000000000000001;
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
    v99 = a2 & 0xFFFFFFFFFFFFFF8;
    *(_QWORD *)&v98 = a2 & 0xC000000000000001;
    while (1)
    {
      if (v5)
      {
        v23 = (char *)MEMORY[0x1AF4129DC](v12, a2);
      }
      else
      {
        if (v12 >= *(_QWORD *)(v8 + 16))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v22 = sub_1A93F8E5C();
          goto LABEL_3;
        }
        v23 = (char *)*(id *)(a2 + 8 * v12 + 32);
      }
      v24 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_32;
      if (*(_QWORD *)&v23[OBJC_IVAR___MTContentKeyRequest_requestID] == v20)
      {
        sub_1A93F8D60();
        sub_1A93F8D90();
        sub_1A93F8D9C();
        sub_1A93F8D6C();
        v5 = v98;
        v8 = v99;
      }
      else
      {

      }
      ++v12;
      if (v24 == v22)
      {
        v25 = v103;
        v8 = v95;
        v12 = v83;
        goto LABEL_16;
      }
    }
  }
  v25 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v92;
  if ((v25 & 0x8000000000000000) == 0 && (v25 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v25 + 16))
      goto LABEL_19;
LABEL_35:
    swift_release();
    v28 = 0;
    v29 = v97;
    if (v96)
      goto LABEL_23;
    goto LABEL_36;
  }
  if (!sub_1A93F8E5C())
    goto LABEL_35;
LABEL_19:
  if ((v25 & 0xC000000000000001) != 0)
  {
    v27 = (id)MEMORY[0x1AF4129DC](0, v25);
  }
  else
  {
    if (!*(_QWORD *)(v25 + 16))
    {
      __break(1u);
      goto LABEL_51;
    }
    v27 = *(id *)(v25 + 32);
  }
  v28 = v27;
  swift_release();
  v29 = v97;
  if (v96)
  {
LABEL_23:
    v99 = (uint64_t)v28;
    if (qword_1ED2A42E8 == -1)
    {
LABEL_24:
      v30 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED2A42C8);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v93, v30, v26);
      swift_bridgeObjectRetain();
      v31 = sub_1A93F7674();
      v32 = sub_1A93F879C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        *(_DWORD *)v33 = 134218240;
        v102 = v86;
        sub_1A93F8AA8();
        *(_WORD *)(v33 + 12) = 2048;
        v34 = v96;
        v102 = v96;
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v31, v32, "[Decoding Key Response] Request Type %ld. Response Status %ld", (uint8_t *)v33, 0x16u);
        MEMORY[0x1AF41411C](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
        v34 = v96;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v93, v26);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v36 = (uint64_t)v88;
      v35(v88, 1, 1, v89);
      v37 = sub_1A920E458(v34);
      if ((v38 & 1) != 0)
        v39 = -1;
      else
        v39 = v37;
      v40 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v41 = (void *)sub_1A93F8010();
      v42 = objc_msgSend(v40, sel_initWithDomain_code_userInfo_, v41, v39, 0);

      v43 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
      v44 = (char *)objc_allocWithZone(v43);
      v45 = (void **)&v44[OBJC_IVAR___MTContentKeyResponse_error];
      *(_QWORD *)&v44[OBJC_IVAR___MTContentKeyResponse_error] = 0;
      v46 = (uint64_t *)&v44[OBJC_IVAR___MTContentKeyResponse_keyData];
      v98 = xmmword_1A9411960;
      *(_OWORD *)&v44[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
      v47 = (void *)v99;
      *(_QWORD *)&v44[OBJC_IVAR___MTContentKeyResponse_request] = v99;
      swift_beginAccess();
      v48 = *v46;
      v49 = v46[1];
      *(_OWORD *)v46 = v98;
      v50 = v47;
      v51 = v44;
      sub_1A9069F9C(v48, v49);
      sub_1A90A1CA8(v36, (uint64_t)&v51[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
      swift_beginAccess();
      v52 = *v45;
      *v45 = v42;
      v53 = v42;

      v101.receiver = v51;
      v101.super_class = v43;
      v54 = objc_msgSendSuper2(&v101, sel_init);
      sub_1A90AC3A4(v36);

      goto LABEL_48;
    }
LABEL_51:
    swift_once();
    goto LABEL_24;
  }
LABEL_36:
  if (v29)
  {
    v99 = sub_1A93F7284();
    *(_QWORD *)&v98 = v55;
  }
  else
  {
    v99 = 0;
    *(_QWORD *)&v98 = 0xF000000000000000;
  }
  v56 = v89;
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v57(v94, 1, 1, v89);
  v58 = v84;
  if (!v28)
    v58 = 1;
  if ((v58 & 1) == 0)
  {
    v59 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v81, (uint64_t)v28 + OBJC_IVAR___MTContentKeyRequest_requestDate, v56);
    v60 = v87;
    sub_1A93F7338();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v59, v56);
    v61 = v94;
    sub_1A90AC3A4(v94);
    v57(v60, 0, 1, v56);
    sub_1A90A13C8(v60, v61);
  }
  if (qword_1ED2A42E8 != -1)
    swift_once();
  v62 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED2A42C8);
  swift_beginAccess();
  v63 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v85, v62, v26);
  v64 = sub_1A93F7674();
  v65 = sub_1A93F87B4();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v66 = 134217984;
    v26 = v92;
    v102 = v86;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v64, v65, "[Decoding Key Response] Request Type %ld. Got key data.", v66, 0xCu);
    MEMORY[0x1AF41411C](v66, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v95 + 8))(v63, v26);
  v67 = v87;
  sub_1A90A1CA8(v94, v87);
  v68 = (objc_class *)type metadata accessor for ContentKeyResponse(0);
  v69 = (char *)objc_allocWithZone(v68);
  v70 = (void **)&v69[OBJC_IVAR___MTContentKeyResponse_error];
  *(_QWORD *)&v69[OBJC_IVAR___MTContentKeyResponse_error] = 0;
  v71 = (uint64_t *)&v69[OBJC_IVAR___MTContentKeyResponse_keyData];
  *(_OWORD *)&v69[OBJC_IVAR___MTContentKeyResponse_keyData] = xmmword_1A9411960;
  *(_QWORD *)&v69[OBJC_IVAR___MTContentKeyResponse_request] = v28;
  swift_beginAccess();
  v72 = *v71;
  v73 = v71[1];
  v74 = v99;
  v75 = v28;
  v76 = v98;
  *v71 = v99;
  v71[1] = v76;
  v77 = v75;
  v78 = v69;
  sub_1A906A3DC(v74, v76);
  sub_1A9069F9C(v72, v73);
  sub_1A90A1CA8(v67, (uint64_t)&v78[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
  swift_beginAccess();
  v79 = *v70;
  *v70 = 0;

  v100.receiver = v78;
  v100.super_class = v68;
  v54 = objc_msgSendSuper2(&v100, sel_init);
  sub_1A90AC3A4(v67);
  sub_1A9069F9C(v74, v76);

  sub_1A90AC3A4(v94);
LABEL_48:
  *v90 = v54;
}

uint64_t type metadata accessor for StandardKeyRequestDecoder()
{
  return objc_opt_self();
}

uint64_t sub_1A9293348(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v7 = (uint64_t *)(a1 + 56);
    while (1)
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      v10 = *(_OWORD *)(v7 - 3);
      v11 = v8;
      v12 = v9;
      swift_bridgeObjectRetain();
      sub_1A92921B8((uint64_t *)&v10, a2, &v13);
      swift_bridgeObjectRelease();
      if (v2)
        break;
      v7 += 4;
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (!--v4)
        return v14;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9293448(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  char *i;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    for (i = (char *)(a1 + 89); ; i += 64)
    {
      v10 = *(_QWORD *)(i - 41);
      v11 = *(i - 33);
      v12 = *(_QWORD *)(i - 25);
      v13 = *(i - 1);
      v14 = *i;
      v15 = *(_OWORD *)(i - 57);
      v16 = v10;
      v17 = v11;
      v18 = v12;
      v19 = *(_OWORD *)(i - 17);
      v20 = v13;
      v21 = v14;
      swift_bridgeObjectRetain();
      sub_1A929294C((uint64_t *)&v15, a2, a3, &v22);
      swift_bridgeObjectRelease();
      if (v3)
        break;
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (!--v5)
        return v23;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1A929357C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *i;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  _BYTE *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  if (!sub_1A93F8E5C())
    goto LABEL_38;
LABEL_3:
  v41 = v7;
  v12 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_41;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    swift_once();
    v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A42C8);
    swift_beginAccess();
    MEMORY[0x10](v9, v18, v6);
    v19 = a3;
    v20 = a3;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F879C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v43[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_getErrorValue();
      v25 = sub_1A93F927C();
      v42 = sub_1A906436C(v25, v26, v43);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v21, v22, "[Decoding Key Response] Decode Error %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v24, -1, -1);
      MEMORY[0x1AF41411C](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v40);
    }
    else
    {

      MEMORY[8](v9, v6);
    }
    return a2;
  }
  for (i = (char *)*(id *)(a1 + 32); ; i = (char *)MEMORY[0x1AF4129DC](0, a1))
  {
    v14 = i;
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)&v14[OBJC_IVAR___MTContentKeyRequest_requestType];

    sub_1A93F6DA4();
    swift_allocObject();
    sub_1A93F6D98();
    sub_1A9293CF8();
    sub_1A93F6D8C();
    swift_release();
    v16 = v45;
    v17 = v46;
    if (v15 == 3)
      break;
    if (v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      a2 = sub_1A9293448(v16, a1, v15);
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1A93F8E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    a2 = MEMORY[0x1E0DEE9D8];
    if (!v28)
      return a2;
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    if (v28 < 0)
      goto LABEL_44;
    v36 = 0;
    while (v28 != v36)
    {
      if (v12)
        v37 = (id)MEMORY[0x1AF4129DC](v36, a1);
      else
        v37 = *(id *)(a1 + 8 * v36 + 32);
      v38 = v37;
      v42 = (uint64_t)v37;
      sub_1A9292720((void **)&v42, v15, v43);

      ++v36;
      sub_1A93F8D60();
      v10 = *(_QWORD *)(v44 + 16);
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (v28 == v36)
        return v44;
    }
    __break(1u);
LABEL_41:
    ;
  }
  if (v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    a2 = sub_1A9293348(v17, a1);
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a2;
  }
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  a2 = MEMORY[0x1E0DEE9D8];
  if (!v27)
    return a2;
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1A93F8D84();
  if ((v27 & 0x8000000000000000) == 0)
  {
    v29 = 0;
    do
    {
      if (v12)
        v30 = (id)MEMORY[0x1AF4129DC](v29, a1);
      else
        v30 = *(id *)(a1 + 8 * v29 + 32);
      v31 = v30;
      ++v29;
      sub_1A920EFE4();
      v32 = (void *)swift_allocError();
      *v33 = 1;
      v34 = objc_allocWithZone((Class)type metadata accessor for ContentKeyResponse(0));
      v35 = (void *)sub_1A93F711C();
      objc_msgSend(v34, sel_initWithRequest_keyData_renewalDate_error_, v31, 0, 0, v35);

      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
    }
    while (v27 != v29);
    return v44;
  }
  __break(1u);
LABEL_44:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1A9293CF8()
{
  unint64_t result;

  result = qword_1EEABCB00;
  if (!qword_1EEABCB00)
  {
    result = MEMORY[0x1AF414014](&unk_1A94092F4, &type metadata for ContentKeyRequestResponse);
    atomic_store(result, (unint64_t *)&qword_1EEABCB00);
  }
  return result;
}

void OSAllocatedUnfairLock.current.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = a1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a1 + 16);
  v6 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(_QWORD *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v5, a2);
  os_unfair_lock_unlock(v6);
}

uint64_t Array.safelyRemoveFirst()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF50], a1);
  if ((sub_1A93F86E8() & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  MEMORY[0x1AF414014](MEMORY[0x1E0DEAF58], a1);
  sub_1A93F870C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 0, 1);
}

uint64_t dispatch thunk of TranscriptProvider.prefetch(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TranscriptProvider.transcript(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TranscriptProvider.invalidate(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))() & 1;
}

uint64_t sub_1A9293E98@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[2];
  void (*v20)(char *);

  v7 = v4;
  v19[1] = a2;
  v20 = a1;
  v9 = sub_1A93F726C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9062170(v7, (uint64_t)v15, &qword_1ED2AD3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    v16 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    v20(v12);
    if (v5)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v18 = a3(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a4, 0, 1, v18);
    }
  }
}

uint64_t TimeBombedTranscriptProvider.ttmlPersistentCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.signaturePersistentCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.ttmlVolatileCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 168);
  *(_QWORD *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.signatureVolatileCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 192);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 232);
  *(_QWORD *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.ttmlSource.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 264);
  *a1 = *(_QWORD *)(v1 + 256);
  a1[1] = v2;
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.shazamSignatureSource.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 280);
  *a1 = *(_QWORD *)(v1 + 272);
  a1[1] = v2;
  return swift_retain();
}

uint64_t TimeBombedTranscriptProvider.timeBombedURLsProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A905DC3C(v1 + 288, a1);
}

id TimeBombedTranscriptProvider.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

uint64_t TimeBombedTranscriptProvider.prefetch(request:)(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v3 = *(os_unfair_lock_s **)(v1 + 352);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1A9294298(v4, v1, a1, &v7);
  os_unfair_lock_unlock(v5);
  return v7;
}

uint64_t sub_1A9294298@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  void (*v30)(uint64_t, uint64_t);
  uint64_t result;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  char *v40;
  _QWORD v41[46];
  id v42;

  v39 = a4;
  v38 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA098);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F73E0();
  v13 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v37 = v13;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v40 = (char *)&v32 - v16;
  sub_1A93F73D4();
  v41[0] = TimeBombedTranscriptProvider.transcript(for:)(a3);
  if (qword_1ED2A93F0 != -1)
    swift_once();
  v17 = (void *)qword_1ED2A93E0;
  v42 = (id)qword_1ED2A93E0;
  v18 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  v19 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA0A0);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEABA0A8, &qword_1EEABA0A0, MEMORY[0x1E0C95D90]);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v8, &qword_1ED2A1C88);

  swift_release();
  sub_1A9294EF8(a2, (uint64_t)v41);
  v20 = v36;
  v21 = v37;
  v32 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v22 = (uint64_t)v33;
  v32(v33, v40, v36);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 376) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = swift_allocObject();
  memcpy((void *)(v24 + 16), v41, 0x168uLL);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v24 + v23, v22, v20);
  sub_1A9066D74(&qword_1EEABA0B0, &qword_1EEABA098, MEMORY[0x1E0C95CB8]);
  v25 = v35;
  v26 = sub_1A93F7BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v25);
  v27 = v40;
  v32((char *)v22, v40, v20);
  swift_retain();
  v28 = v38;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41[0] = *v28;
  *v28 = 0x8000000000000000;
  sub_1A930E66C(v26, v22, isUniquelyReferenced_nonNull_native);
  *v28 = v41[0];
  swift_bridgeObjectRelease();
  v30 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v30(v22, v20);
  result = ((uint64_t (*)(char *, uint64_t))v30)(v27, v20);
  *v39 = v26;
  return result;
}

uint64_t TimeBombedTranscriptProvider.transcript(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[4];
  uint64_t v30;
  _OWORD v31[23];

  v2 = v1;
  v24 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB08);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB10);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A91314A4(a1, (uint64_t)v31);
  v11 = swift_allocObject();
  v12 = v31[3];
  *(_OWORD *)(v11 + 48) = v31[2];
  *(_OWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 80) = *(_QWORD *)&v31[4];
  v13 = v31[1];
  *(_OWORD *)(v11 + 16) = v31[0];
  *(_OWORD *)(v11 + 32) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB18);
  swift_allocObject();
  *(_QWORD *)&v31[0] = sub_1A93F7A94();
  *(_QWORD *)&v29[0] = *(_QWORD *)(v2 + 328);
  v14 = *(void **)&v29[0];
  v15 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEABCB20, &qword_1EEABCB18, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v16 = v14;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v6, &qword_1ED2A1C88);

  swift_release();
  sub_1A9294EF8(v2, (uint64_t)v31);
  sub_1A91314A4(v24, (uint64_t)v29);
  v17 = swift_allocObject();
  memcpy((void *)(v17 + 16), v31, 0x168uLL);
  v18 = v29[3];
  *(_OWORD *)(v17 + 408) = v29[2];
  *(_OWORD *)(v17 + 424) = v18;
  *(_QWORD *)(v17 + 440) = v30;
  v19 = v29[1];
  *(_OWORD *)(v17 + 376) = v29[0];
  *(_OWORD *)(v17 + 392) = v19;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA0A0);
  sub_1A9066D74(&qword_1EEABCB28, &qword_1EEABCB08, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74(&qword_1EEABA0A8, &qword_1EEABA0A0, MEMORY[0x1E0C95D90]);
  v20 = v25;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v20);
  sub_1A9066D74(&qword_1EEABCB30, &qword_1EEABCB10, MEMORY[0x1E0C95B78]);
  v21 = v26;
  v22 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v21);
  return v22;
}

void sub_1A92949B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;

  v4 = *(os_unfair_lock_s **)(a2 + 352);
  v5 = (uint64_t *)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1A91DFBD0(v5, a3);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_1A9294A04(void (*a1)(_BYTE *), uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE v39[12];
  int v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_BYTE *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v46 = a2;
  v47 = a1;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCD8);
  MEMORY[0x1E0C80A78](v45);
  v44 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = (int *)type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v43 = &v39[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (int *)type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v13);
  v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v42 = &v39[-v17];
  v18 = sub_1A93F726C();
  v41 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v41(v12, 1, 1, v18);
  sub_1A9062170((uint64_t)v12, (uint64_t)v15, &qword_1ED2AD3D0);
  v40 = *((unsigned __int8 *)a3 + 24);
  v19 = a3[2];
  v49 = a3[1];
  v50 = v19;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  v48 = *a3;
  sub_1A915997C();
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v20 = v49;
  v21 = v50;
  v22 = *((_BYTE *)a3 + 25);
  v23 = (uint64_t)&v15[v13[9]];
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_QWORD *)(v23 + 32) = 0;
  v15[v13[5]] = v40;
  v24 = &v15[v13[6]];
  *v24 = v20;
  v24[1] = v21;
  v15[v13[8]] = v22;
  v15[v13[7]] = 6;
  sub_1A921019C((uint64_t)(a3 + 4), v23);
  v25 = (uint64_t)v15;
  v26 = v42;
  sub_1A9116174(v25, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A905FD54((uint64_t)v12, &qword_1ED2AD3D0);
  v41(v12, 1, 1, v18);
  sub_1A9062170((uint64_t)v12, (uint64_t)v7, &qword_1ED2AD3D0);
  v27 = *((_BYTE *)a3 + 24);
  v28 = a3[2];
  v49 = a3[1];
  v50 = v28;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  v48 = *a3;
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v29 = v49;
  v30 = v50;
  v31 = (uint64_t)&v7[v5[9]];
  *(_OWORD *)v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  *(_QWORD *)(v31 + 32) = 0;
  v7[v5[5]] = v27;
  v32 = *((_BYTE *)a3 + 25);
  v33 = &v7[v5[6]];
  *v33 = v29;
  v33[1] = v30;
  v7[v5[8]] = v32;
  v7[v5[7]] = 7;
  sub_1A921019C((uint64_t)(a3 + 4), v31);
  v34 = v43;
  sub_1A9116174((uint64_t)v7, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A905FD54((uint64_t)v12, &qword_1ED2AD3D0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB40);
  v36 = (uint64_t)&v44[*(int *)(v35 + 48)];
  v37 = v44;
  sub_1A9064630((uint64_t)v34, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9064630((uint64_t)v26, v36, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  swift_storeEnumTagMultiPayload();
  v47(v37);
  sub_1A905FD54((uint64_t)v37, &qword_1EEABCCD8);
  sub_1A9064714((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  return sub_1A9064714((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1A9294E08(void (*a1)(_BYTE *), uint64_t a2)
{
  uint64_t v2;

  return sub_1A9294A04(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_1A9294E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(int *)(v9 + 48);
  v11 = (uint64_t)&v8[v10];
  v12 = a1 + v10;
  sub_1A9064630(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A9064630(v12, v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v13 = sub_1A9295024(a2, (uint64_t)v8, v11);
  sub_1A9064714(v11, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  result = sub_1A9064714((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  *a3 = v13;
  return result;
}

uint64_t sub_1A9294EF8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TimeBombedTranscriptProvider(a2, a1);
  return a2;
}

uint64_t sub_1A9294F2C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 432))
    __swift_destroy_boxed_opaque_existential_0(v0 + 408);
  return swift_deallocObject();
}

uint64_t sub_1A9295018@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9294E10(a1, v2 + 376, a2);
}

uint64_t sub_1A9295024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(_BYTE *__return_ptr, char *);
  void (*v18)(_BYTE *, char *);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  int *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(_BYTE *, char *);
  char *v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _OWORD v66[3];
  __int128 v67;
  unint64_t v68;
  _BYTE v69[18];
  _BYTE v70[16];
  _BYTE v71[32];
  __int128 v72;
  __int128 v73;
  _BYTE v74[26];

  v4 = v3;
  v63 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB48);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB50);
  v57 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v48 - v10;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB58);
  MEMORY[0x1E0C80A78](v59);
  v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v60 = (uint64_t)&v48 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB40);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9064630(a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v62 = &v16[*(int *)(v14 + 48)];
  sub_1A9064630(a3, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v17 = (void (*)(_BYTE *__return_ptr, char *))v4[16];
  v18 = (void (*)(_BYTE *, char *))v4[18];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v71, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v19 = *((_QWORD *)&v72 + 1);
  if (*((_QWORD *)&v72 + 1))
  {
    v20 = v73;
    v22 = *(_QWORD *)&v71[24];
    v21 = v72;
    v65 = *(_QWORD *)&v71[16];
    v64 = *(_OWORD *)v71;
  }
  else
  {
    v49 = v18;
    v65 = *v4;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v50 = v16;
    ((void (*)(_BYTE *__return_ptr, char *))v65)(v71, v16);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v23 = *(_QWORD *)&v71[24];
    v19 = *((_QWORD *)&v72 + 1);
    v20 = v73;
    v65 = *(_QWORD *)&v71[16];
    v64 = *(_OWORD *)v71;
    if (*((_QWORD *)&v72 + 1))
    {
      v71[16] &= 1u;
      v51 = v72;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v16 = v50;
      v49(v71, v50);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v21 = v51;
    }
    else
    {
      v16 = v50;
      v21 = v72;
    }
    v22 = v23;
  }
  v24 = sub_1A9295DB0((uint64_t)v62);
  v25 = v24;
  if (v19 && v24)
  {
    *(_QWORD *)v71 = v24;
    *(_OWORD *)&v71[8] = v64;
    *(_QWORD *)&v71[24] = v65 & 1;
    *(_QWORD *)&v72 = v22;
    *((_QWORD *)&v72 + 1) = v21;
    *(_QWORD *)&v73 = v19;
    *((_QWORD *)&v73 + 1) = v20;
    v74[0] = 2;
    sub_1A9298E34(v64, *((uint64_t *)&v64 + 1), v65, v22, v21, v19);
    v62 = v25;
    v26 = v52;
    sub_1A93F7A58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v27 = v58;
    v28 = v54;
    sub_1A93F7A34();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v28);
    v54 = v20;
    v29 = v63 + 32;
    v51 = v21;
    v30 = v27;
    v63 = v22;
    v31 = v57;
    v32 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v33 = v56;
    v34 = v61;
    v32(v56, v27, v61);
    sub_1A9062170(v29, (uint64_t)v71, &qword_1ED2AD0C0);
    v35 = v55;
    v32(v55, v33, v34);
    v36 = (int *)v59;
    sub_1A9062170((uint64_t)v71, (uint64_t)&v35[*(int *)(v59 + 36)], &qword_1ED2AD0C0);
    v37 = &v35[v36[10]];
    *(_QWORD *)v37 = "LocallyFulfillTranscriptRequest";
    *((_QWORD *)v37 + 1) = 31;
    v37[16] = 2;
    v35[v36[12]] = 1;
    sub_1A905FD54((uint64_t)v71, &qword_1ED2AD0C0);
    v38 = *(void (**)(char *, uint64_t))(v31 + 8);
    v38(v33, v34);
    v39 = &v35[v36[11]];
    *(_QWORD *)v39 = 0;
    *((_QWORD *)v39 + 1) = 0xE000000000000000;
    v35[v36[13]] = 0;
    v40 = &qword_1EEABCB58;
    v41 = (uint64_t)v35;
    v42 = v60;
    sub_1A9062F08(v41, v60, &qword_1EEABCB58);
    v38(v30, v34);
    sub_1A9066D74(&qword_1EEABCB70, &qword_1EEABCB58, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v43 = sub_1A93F7B24();

    sub_1A9298DF4(v64, *((uint64_t *)&v64 + 1), v65, v63, v51, v19);
    v44 = (_BYTE *)v42;
  }
  else
  {
    *(_OWORD *)v71 = v64;
    *(_QWORD *)&v71[16] = v65;
    *(_QWORD *)&v71[24] = v22;
    *(_QWORD *)&v72 = v21;
    *((_QWORD *)&v72 + 1) = v19;
    *(_QWORD *)&v73 = v20;
    v45 = v63;
    v46 = sub_1A9295F44(v63, (uint64_t *)v71, v24);
    sub_1A9062170(v45 + 32, (uint64_t)v70, &qword_1ED2AD0C0);
    *(_QWORD *)&v66[0] = v46;
    sub_1A9062170((uint64_t)v70, (uint64_t)v66 + 8, &qword_1ED2AD0C0);
    *(_QWORD *)&v67 = "RemotelyFulfillTranscriptRequest";
    *((_QWORD *)&v67 + 1) = 32;
    LOBYTE(v68) = 2;
    v69[16] = 1;
    sub_1A905FD54((uint64_t)v70, &qword_1ED2AD0C0);
    *(_QWORD *)v69 = 0;
    *(_QWORD *)&v69[8] = 0xE000000000000000;
    v69[17] = 0;
    v72 = v66[2];
    v73 = v67;
    *(_OWORD *)v71 = v66[0];
    *(_OWORD *)&v71[16] = v66[1];
    *(_OWORD *)v74 = v68;
    *(_OWORD *)&v74[10] = *(_OWORD *)&v69[2];
    v40 = &qword_1EEABCB60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB60);
    sub_1A9066D74(&qword_1EEABCB68, &qword_1EEABCB60, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v43 = sub_1A93F7B24();

    sub_1A9298DF4(v64, *((uint64_t *)&v64 + 1), v65, v22, v21, v19);
    v44 = v71;
  }
  sub_1A905FD54((uint64_t)v44, v40);
  sub_1A905FD54((uint64_t)v16, &qword_1EEABCB40);
  return v43;
}

uint64_t TimeBombedTranscriptProvider.invalidate(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t (*v35)(_BYTE *);
  _BYTE *v36;
  uint64_t (*v37)(_BYTE *);
  void (*v38)(_BYTE *);
  uint64_t v39;
  _BYTE *v40;
  void (*v41)(_BYTE *);
  _BYTE v43[4];
  int v44;
  unint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _QWORD *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  int v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(_BYTE *);
  uint64_t v57;

  v48 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v48);
  v49 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v5 = &v43[-v4];
  MEMORY[0x1E0C80A78](v6);
  v53 = &v43[-v7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (int *)type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v52 = &v43[-v15];
  v16 = sub_1A93F726C();
  v46 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v51 = 1;
  v46(v10, 1, 1, v16);
  sub_1A9062170((uint64_t)v10, (uint64_t)v13, &qword_1ED2AD3D0);
  v44 = *(unsigned __int8 *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 16);
  v54 = *(_QWORD *)(a1 + 8);
  v55 = v17;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  v57 = *(_QWORD *)a1;
  v45 = sub_1A915997C();
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v18 = v54;
  v19 = v55;
  v20 = *(_BYTE *)(a1 + 25);
  v21 = (uint64_t)&v13[v11[9]];
  *(_OWORD *)v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  *(_QWORD *)(v21 + 32) = 0;
  v13[v11[5]] = v44;
  v22 = &v13[v11[6]];
  *v22 = v18;
  v22[1] = v19;
  v13[v11[8]] = v20;
  v13[v11[7]] = 7;
  sub_1A921019C(a1 + 32, v21);
  sub_1A9116174((uint64_t)v13, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
  v23 = v16;
  v24 = v47;
  v46(v10, 1, 1, v23);
  sub_1A9062170((uint64_t)v10, (uint64_t)v5, &qword_1ED2AD3D0);
  LOBYTE(v13) = *(_BYTE *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 16);
  v54 = *(_QWORD *)(a1 + 8);
  v55 = v25;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  v57 = *(_QWORD *)a1;
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v26 = v54;
  v27 = v55;
  v28 = (int *)v48;
  v29 = (uint64_t)&v5[*(int *)(v48 + 36)];
  *(_OWORD *)v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_QWORD *)(v29 + 32) = 0;
  v5[v28[5]] = (_BYTE)v13;
  v30 = *(_BYTE *)(a1 + 25);
  v31 = &v5[v28[6]];
  *v31 = v26;
  v31[1] = v27;
  v5[v28[8]] = v30;
  v5[v28[7]] = 6;
  sub_1A921019C(a1 + 32, v29);
  v32 = (uint64_t)v5;
  v34 = v52;
  v33 = v53;
  sub_1A9116174(v32, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A905FD54((uint64_t)v10, &qword_1ED2AD3D0);
  v35 = (uint64_t (*)(_BYTE *))v24[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  LOBYTE(a1) = v35(v34);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1A9294EF8((uint64_t)v24, (uint64_t)&v54);
  v36 = v49;
  sub_1A9064630((uint64_t)v33, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  if ((a1 & 1) == 0)
  {
    v37 = v56;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v51 = v37(v36);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1A9064714((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9295D84((uint64_t)&v54);
  v38 = (void (*)(_BYTE *))v24[6];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = v50;
  v38(v34);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v39)
  {
    v40 = v34;
    v41 = (void (*)(_BYTE *))v24[14];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v41(v53);
    v34 = v40;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1A9064714((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  sub_1A9064714((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  return v51 & 1;
}

uint64_t sub_1A9295D84(uint64_t a1)
{
  destroy for TimeBombedTranscriptProvider(a1);
  return a1;
}

id sub_1A9295DB0(uint64_t a1)
{
  _QWORD *v1;
  void (*v3)(void **__return_ptr, uint64_t);
  void (*v4)(void **, uint64_t);
  void *v5;
  id v6;
  void (*v8)(void **__return_ptr, uint64_t);
  void *v9;

  v3 = (void (*)(void **__return_ptr, uint64_t))v1[24];
  v4 = (void (*)(void **, uint64_t))v1[26];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v3(&v9, a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = v9;
  if (!v9)
  {
    v8 = (void (*)(void **__return_ptr, uint64_t))v1[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v8(&v9, a1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v5 = v9;
    if (!v9)
      return 0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v4(&v9, a1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  v6 = sub_1A9297FD8(v5);

  return v6;
}

uint64_t sub_1A9295F44(uint64_t a1, uint64_t *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  char *v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  void (*v146)(uint64_t, uint64_t);
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[45];
  _QWORD v154[45];
  _OWORD v155[4];
  uint64_t v156;
  char v157;

  v4 = (uint64_t)v3;
  v135 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB78);
  v113 = *(_QWORD *)(v7 - 8);
  v114 = v7;
  MEMORY[0x1E0C80A78](v7);
  v112 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB80);
  v110 = *(_QWORD *)(v9 - 8);
  v111 = v9;
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB88);
  v116 = *(_QWORD *)(v11 - 8);
  v117 = v11;
  MEMORY[0x1E0C80A78](v11);
  v115 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB90);
  v119 = *(_QWORD *)(v13 - 8);
  v120 = v13;
  MEMORY[0x1E0C80A78](v13);
  v118 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB98);
  v121 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v131 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBA0);
  v123 = *(_QWORD *)(v16 - 8);
  v124 = v16;
  MEMORY[0x1E0C80A78](v16);
  v122 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB48);
  v137 = *(_QWORD *)(v18 - 8);
  v138 = v18;
  MEMORY[0x1E0C80A78](v18);
  v136 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCB50);
  v140 = *(_QWORD *)(v20 - 8);
  v141 = v20;
  MEMORY[0x1E0C80A78](v20);
  v139 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBA8);
  v129 = *(_QWORD *)(v22 - 8);
  v130 = v22;
  MEMORY[0x1E0C80A78](v22);
  v128 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBB0);
  v132 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v142 = (uint64_t)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBB8);
  v133 = *(_QWORD *)(v25 - 8);
  v134 = v25;
  MEMORY[0x1E0C80A78](v25);
  v150 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBC0);
  v27 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v108 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v108 - v34;
  v151 = *a2;
  v36 = a2[2];
  v148 = a2[1];
  v149 = v36;
  v37 = a2[3];
  v147 = a2[4];
  v144 = a2[5];
  v126 = a2[6];
  v127 = v37;
  v39 = v3[39];
  v38 = v3[40];
  __swift_project_boxed_opaque_existential_1(v3 + 36, v39);
  v154[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 8))(a1, v39, v38);
  sub_1A91314A4(a1, (uint64_t)v155);
  v40 = swift_allocObject();
  v41 = v155[3];
  *(_OWORD *)(v40 + 48) = v155[2];
  *(_OWORD *)(v40 + 64) = v41;
  *(_QWORD *)(v40 + 80) = v156;
  v42 = v155[1];
  *(_OWORD *)(v40 + 16) = v155[0];
  *(_OWORD *)(v40 + 32) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBD0);
  sub_1A9066D74(&qword_1EEABCBD8, &qword_1EEABCBC8, MEMORY[0x1E0C95D90]);
  v43 = v27;
  sub_1A93F7B84();
  v44 = v32;
  v45 = (uint64_t)v29;
  v46 = v152;
  swift_release();
  swift_release();
  v47 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v47(v44, v35, v46);
  sub_1A9294EF8(v4, (uint64_t)v155);
  v48 = v29;
  v145 = v35;
  v49 = v46;
  v47(v48, v35, v46);
  sub_1A9294EF8(v4, (uint64_t)v154);
  if (v144)
  {
    v50 = v144;
    v135 = (id)(v149 & 1);
    v157 = v149 & 1;
    v51 = v127;
    v52 = v147;
    sub_1A90D8068(v127, v147);
    swift_bridgeObjectRetain();
    v53 = v43;
    v54 = v126;
    swift_bridgeObjectRetain();
    sub_1A9295D84((uint64_t)v155);
    v55 = *(void (**)(char *, uint64_t))(v53 + 8);
    v56 = v44;
    v57 = v49;
    v55(v56, v49);
    v58 = v142;
    sub_1A92975B0((uint64_t)v154, v142);
    sub_1A9295D84((uint64_t)v154);
    v146 = (void (*)(uint64_t, uint64_t))v55;
    v55((char *)v45, v57);
    v59 = swift_allocObject();
    v60 = v148;
    *(_QWORD *)(v59 + 16) = v151;
    *(_QWORD *)(v59 + 24) = v60;
    *(_BYTE *)(v59 + 32) = v157;
    *(_QWORD *)(v59 + 40) = v51;
    *(_QWORD *)(v59 + 48) = v52;
    *(_QWORD *)(v59 + 56) = v50;
    *(_QWORD *)(v59 + 64) = v54;
    sub_1A90D8068(v51, v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v143;
    sub_1A93F771C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v58, v61);
    v153[0] = v151;
    v153[1] = v60;
    v153[2] = v135;
    v153[3] = v51;
    v153[4] = v52;
    v153[5] = v50;
    v153[6] = v54;
    v153[7] = 0;
    LOBYTE(v153[8]) = 1;
    sub_1A90D8068(v51, v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = v136;
    sub_1A93F7A58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v63 = v138;
    v64 = v139;
    sub_1A93F7A34();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v62, v63);
    sub_1A9066D74(&qword_1EEABCC30, &qword_1EEABCB50, MEMORY[0x1E0C964C8]);
    sub_1A9066D74(&qword_1EEABCC20, &qword_1EEABCBB8, MEMORY[0x1E0C95708]);
    v65 = v128;
    v66 = v150;
    v67 = v141;
    v68 = v134;
    sub_1A93F7BC0();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v64, v67);
    sub_1A9066D74(&qword_1EEABCC40, &qword_1EEABCBA8, MEMORY[0x1E0C95A60]);
    v69 = v130;
    v70 = sub_1A93F7B24();
    sub_1A9298DF4(v151, v148, v149, v51, v147, v50);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v65, v69);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v66, v68);
  }
  else
  {
    v151 = v45;
    v72 = v44;
    v73 = v118;
    v74 = v131;
    if (v135)
    {
      v150 = (char *)v135;
      sub_1A9295D84((uint64_t)v154);
      v146 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v146(v151, v46);
      type metadata accessor for TTMLRequest();
      sub_1A9066D74(&qword_1EEABCBE0, &qword_1EEABCBC0, MEMORY[0x1E0C95950]);
      sub_1A93F7B30();
      sub_1A9294EF8((uint64_t)v155, (uint64_t)v153);
      v75 = swift_allocObject();
      memcpy((void *)(v75 + 16), v153, 0x168uLL);
      sub_1A93F78E4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBE8);
      sub_1A9066D74(&qword_1EEABCBF0, &qword_1EEABCB90, MEMORY[0x1E0C95708]);
      sub_1A9066D74(&qword_1EEABCBF8, &qword_1EEABCBE8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
      v76 = v74;
      v77 = v120;
      sub_1A93F7C5C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v77);
      sub_1A9295D84((uint64_t)v155);
      v78 = v152;
      v146((uint64_t)v72, v152);
      v79 = swift_allocObject();
      v80 = v150;
      *(_QWORD *)(v79 + 16) = v150;
      sub_1A9066D74(&qword_1EEABCC00, &qword_1EEABCB98, MEMORY[0x1E0C95B78]);
      v81 = v80;
      v82 = v122;
      v83 = v125;
      sub_1A93F7B84();
      swift_release();
      (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v83);
      v153[0] = v135;
      memset(&v153[1], 0, 57);
      v84 = v81;
      v85 = v136;
      sub_1A93F7A58();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v86 = v138;
      v87 = v139;
      sub_1A93F7A34();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v85, v86);
      sub_1A9066D74(&qword_1EEABCC30, &qword_1EEABCB50, MEMORY[0x1E0C964C8]);
      sub_1A9066D74(&qword_1EEABCC18, &qword_1EEABCBA0, MEMORY[0x1E0C95950]);
      v88 = v115;
      v89 = v141;
      v90 = v124;
      sub_1A93F7BC0();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v87, v89);
      sub_1A9066D74(&qword_1EEABCC38, &qword_1EEABCB88, MEMORY[0x1E0C95A60]);
      v91 = v117;
      v70 = sub_1A93F7B24();

      (*(void (**)(char *, uint64_t))(v116 + 8))(v88, v91);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v82, v90);
      v71 = v78;
      goto LABEL_6;
    }
    type metadata accessor for TTMLRequest();
    sub_1A9066D74(&qword_1EEABCBE0, &qword_1EEABCBC0, MEMORY[0x1E0C95950]);
    sub_1A93F7B30();
    sub_1A9294EF8((uint64_t)v155, (uint64_t)v153);
    v93 = swift_allocObject();
    memcpy((void *)(v93 + 16), v153, 0x168uLL);
    sub_1A93F78E4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBE8);
    sub_1A9066D74(&qword_1EEABCBF0, &qword_1EEABCB90, MEMORY[0x1E0C95708]);
    sub_1A9066D74(&qword_1EEABCBF8, &qword_1EEABCBE8, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v94 = v120;
    sub_1A93F7C5C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v94);
    sub_1A9295D84((uint64_t)v155);
    v95 = *(void (**)(char *, uint64_t))(v27 + 8);
    v96 = v152;
    v95(v72, v152);
    v97 = v151;
    sub_1A92975B0((uint64_t)v154, v142);
    sub_1A9295D84((uint64_t)v154);
    v146 = (void (*)(uint64_t, uint64_t))v95;
    v95((char *)v97, v96);
    sub_1A9066D74(&qword_1EEABCC00, &qword_1EEABCB98, MEMORY[0x1E0C95B78]);
    sub_1A9066D74(&qword_1EEABCC08, &qword_1EEABCBB0, MEMORY[0x1E0C95708]);
    v98 = v109;
    sub_1A93F7B60();
    sub_1A9066D74(&qword_1EEABCC10, &qword_1EEABCB80, MEMORY[0x1E0C95950]);
    v99 = v111;
    v100 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v98, v99);
    v101 = v122;
    sub_1A93F7B84();
    v102 = v150;
    sub_1A93F771C();
    v153[0] = v100;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABA0A0);
    sub_1A9066D74(&qword_1EEABA0A8, &qword_1EEABA0A0, MEMORY[0x1E0C95D90]);
    sub_1A9066D74(&qword_1EEABCC18, &qword_1EEABCBA0, MEMORY[0x1E0C95950]);
    sub_1A9066D74(&qword_1EEABCC20, &qword_1EEABCBB8, MEMORY[0x1E0C95708]);
    v103 = v112;
    v104 = v101;
    v105 = v124;
    v106 = v134;
    sub_1A93F7BD8();
    sub_1A9066D74(&qword_1EEABCC28, &qword_1EEABCB78, MEMORY[0x1E0C95AE0]);
    v107 = v114;
    v70 = sub_1A93F7B24();
    swift_release();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v103, v107);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v102, v106);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v104, v105);
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v142, v143);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v131, v125);
  }
  v71 = v152;
LABEL_6:
  v146((uint64_t)v145, v71);
  return v70;
}

uint64_t sub_1A9296E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBD0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v11 = *(int *)(v10 + 48);
  v12 = (char *)&v16 + v11 - v8;
  v13 = a1 + v11;
  sub_1A9062170(a1, (uint64_t)&v16 - v8, &qword_1EEABCC70);
  sub_1A9062170(v13, (uint64_t)v12, &qword_1EEABCC78);
  v14 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_1A9062F08((uint64_t)v9, (uint64_t)v6, &qword_1EEABCC70);
  sub_1A9062F08((uint64_t)v12, v14, &qword_1EEABCC78);
  sub_1A9062170(v14, a2, &qword_1EEABCC78);
  return sub_1A905FD54((uint64_t)v6, &qword_1EEABCBD0);
}

uint64_t sub_1A9296F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[48];

  v77 = a2;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBE8);
  MEMORY[0x1E0C80A78](v76);
  v75 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC48);
  MEMORY[0x1E0C80A78](v5);
  v73 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v74 = (uint64_t)&v60 - v8;
  v9 = type metadata accessor for TTMLRequest();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v70 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC50);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC58);
  MEMORY[0x1E0C80A78](v65);
  *(_QWORD *)&v66 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - v16;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC60);
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v69 = (uint64_t)&v60 - v20;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC68);
  MEMORY[0x1E0C80A78](v67);
  v68 = (uint64_t)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v2[32];
  v23 = v2[33];
  sub_1A9064630(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v24 = &v13[*(int *)(v11 + 52)];
  *(_QWORD *)v24 = v22;
  *((_QWORD *)v24 + 1) = v23;
  v62 = v23;
  v71 = v9;
  v72 = a1;
  if (*(_BYTE *)(a1 + *(int *)(v9 + 32)))
  {
    v25 = v2 + 1;
    v26 = v2 + 2;
    v27 = v2 + 3;
    v28 = v2 + 4;
    v29 = v2 + 5;
    v30 = v2 + 6;
    v31 = v2 + 7;
    v32 = v2;
  }
  else
  {
    v32 = v2 + 16;
    v25 = v2 + 17;
    v26 = v2 + 18;
    v27 = v2 + 19;
    v28 = v2 + 20;
    v29 = v2 + 21;
    v30 = v2 + 22;
    v31 = v2 + 23;
  }
  v33 = *v31;
  v61 = *v30;
  v34 = *v29;
  v60 = *v28;
  v35 = *v27;
  v36 = *v26;
  v37 = *v25;
  v38 = *v32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A9062170((uint64_t)v13, (uint64_t)v17, &qword_1EEABCC50);
  v39 = (int *)v65;
  sub_1A9064630((uint64_t)v13, (uint64_t)&v17[*(int *)(v65 + 80)], (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v40 = &v17[v39[19]];
  *(_QWORD *)v40 = v38;
  *((_QWORD *)v40 + 1) = v37;
  *((_QWORD *)v40 + 2) = v36;
  *((_QWORD *)v40 + 3) = v35;
  *((_QWORD *)v40 + 4) = v60;
  *((_QWORD *)v40 + 5) = v34;
  *((_QWORD *)v40 + 6) = v61;
  *((_QWORD *)v40 + 7) = v33;
  v17[v39[21]] = 1;
  swift_retain();
  sub_1A905FD54((uint64_t)v13, &qword_1EEABCC50);
  v41 = v2[42];
  v42 = v66;
  sub_1A9062170((uint64_t)v17, v66, &qword_1EEABCC58);
  v43 = v63;
  v44 = (uint64_t)v64;
  *(_QWORD *)&v64[*(int *)(v63 + 48)] = v41;
  sub_1A9062170(v42, v44 + *(int *)(v43 + 44), &qword_1EEABCC58);
  v45 = v70;
  sub_1A9064630(v42 + v39[20], v70, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  swift_retain();
  sub_1A905FD54(v42, &qword_1EEABCC58);
  sub_1A9116174(v45, v44, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v46 = v69;
  sub_1A9062F08(v44, v69, &qword_1EEABCC60);
  sub_1A905FD54((uint64_t)v17, &qword_1EEABCC58);
  v47 = v2[16];
  v48 = v2[23];
  v49 = v68;
  sub_1A9062170(v46, v68, &qword_1EEABCC60);
  v50 = v67;
  sub_1A9064630(v46, v49 + *(int *)(v67 + 80), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest);
  v51 = v49 + *(int *)(v50 + 76);
  *(_QWORD *)v51 = v47;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)(v2 + 17);
  v66 = *(_OWORD *)(v2 + 19);
  *(_OWORD *)(v51 + 24) = v66;
  v70 = *(_OWORD *)(v2 + 21);
  *(_OWORD *)(v51 + 40) = v70;
  *(_QWORD *)(v51 + 56) = v48;
  *(_BYTE *)(v49 + *(int *)(v50 + 84)) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A905FD54(v46, &qword_1EEABCC60);
  v52 = v74;
  sub_1A933D8D4(v74);
  sub_1A905FD54(v49, &qword_1EEABCC68);
  v53 = v72 + *(int *)(v71 + 36);
  v54 = v73;
  sub_1A9062170(v52, v73, &qword_1EEABCC48);
  sub_1A9062170(v53, (uint64_t)v78, &qword_1ED2AD0C0);
  v55 = v75;
  sub_1A9062170(v54, v75, &qword_1EEABCC48);
  v56 = (int *)v76;
  sub_1A9062170((uint64_t)v78, v55 + *(int *)(v76 + 36), &qword_1ED2AD0C0);
  v57 = v55 + v56[10];
  *(_QWORD *)v57 = "FetchTTMLFile";
  *(_QWORD *)(v57 + 8) = 13;
  *(_BYTE *)(v57 + 16) = 2;
  *(_BYTE *)(v55 + v56[12]) = 1;
  sub_1A905FD54((uint64_t)v78, &qword_1ED2AD0C0);
  sub_1A905FD54(v54, &qword_1EEABCC48);
  v58 = (_QWORD *)(v55 + v56[11]);
  *v58 = 0;
  v58[1] = 0xE000000000000000;
  *(_BYTE *)(v55 + v56[13]) = 0;
  sub_1A9062F08(v55, v77, &qword_1EEABCBE8);
  return sub_1A905FD54(v52, &qword_1EEABCC48);
}

uint64_t sub_1A92975B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[368];

  v16 = a1;
  v20 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC80);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC88);
  v7 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  v19 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBC0);
  type metadata accessor for ShazamSignatureRequest();
  sub_1A9066D74(&qword_1EEABCBE0, &qword_1EEABCBC0, MEMORY[0x1E0C95950]);
  sub_1A93F7B30();
  sub_1A9294EF8(a1, (uint64_t)v21);
  v10 = swift_allocObject();
  memcpy((void *)(v10 + 16), v21, 0x168uLL);
  sub_1A93F78E4();
  sub_1A9072534(0, &qword_1EEAB82E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC90);
  sub_1A9066D74(&qword_1EEABCC98, &qword_1EEABCC80, MEMORY[0x1E0C95708]);
  sub_1A9066D74(&qword_1EEABCCA0, &qword_1EEABCC90, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  sub_1A9294EF8(v16, (uint64_t)v21);
  v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), v21, 0x168uLL);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1A9299054;
  *(_QWORD *)(v12 + 24) = v11;
  sub_1A9072534(0, &qword_1EEAB9FB8);
  sub_1A9066D74(&qword_1EEABCCA8, &qword_1EEABCC88, MEMORY[0x1E0C95B78]);
  v13 = v18;
  sub_1A93F7B30();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v13);
}

uint64_t sub_1A929789C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBD0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v11 = *(int *)(v10 + 48);
  v12 = (char *)&v16 + v11 - v8;
  v13 = a1 + v11;
  sub_1A9062170(a1, (uint64_t)&v16 - v8, &qword_1EEABCC70);
  sub_1A9062170(v13, (uint64_t)v12, &qword_1EEABCC78);
  v14 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_1A9062F08((uint64_t)v9, (uint64_t)v6, &qword_1EEABCC70);
  sub_1A9062F08((uint64_t)v12, v14, &qword_1EEABCC78);
  sub_1A9062170((uint64_t)v6, a2, &qword_1EEABCC70);
  return sub_1A905FD54((uint64_t)v6, &qword_1EEABCBD0);
}

uint64_t sub_1A92979BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[48];

  v78 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCC90);
  MEMORY[0x1E0C80A78](v77);
  v76 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCB0);
  MEMORY[0x1E0C80A78](v5);
  v74 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t)&v61 - v8;
  v9 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v71 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCB8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCC0);
  MEMORY[0x1E0C80A78](v66);
  *(_QWORD *)&v67 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v61 - v16;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCC8);
  MEMORY[0x1E0C80A78](v64);
  v65 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v70 = (uint64_t)&v61 - v20;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCCD0);
  MEMORY[0x1E0C80A78](v68);
  v69 = (uint64_t)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v2[34];
  v23 = v2[35];
  sub_1A9064630(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v24 = &v13[*(int *)(v11 + 52)];
  *(_QWORD *)v24 = v22;
  *((_QWORD *)v24 + 1) = v23;
  v63 = v23;
  v72 = v9;
  v73 = a1;
  if (*(_BYTE *)(a1 + *(int *)(v9 + 32)))
  {
    v25 = v2 + 8;
    v26 = v2 + 9;
    v27 = v2 + 10;
    v28 = v2 + 11;
    v29 = v2 + 12;
    v30 = v2 + 13;
    v31 = v2 + 14;
    v32 = v2 + 15;
  }
  else
  {
    v25 = v2 + 24;
    v26 = v2 + 25;
    v27 = v2 + 26;
    v28 = v2 + 27;
    v29 = v2 + 28;
    v30 = v2 + 29;
    v31 = v2 + 30;
    v32 = v2 + 31;
  }
  v33 = *v32;
  v62 = *v31;
  v34 = *v30;
  v61 = *v29;
  v35 = *v28;
  v36 = *v27;
  v37 = *v26;
  v38 = *v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A9062170((uint64_t)v13, (uint64_t)v17, &qword_1EEABCCB8);
  v39 = (uint64_t)v17;
  v40 = (int *)v66;
  sub_1A9064630((uint64_t)v13, v39 + *(int *)(v66 + 80), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v41 = (_QWORD *)(v39 + v40[19]);
  *v41 = v38;
  v41[1] = v37;
  v41[2] = v36;
  v41[3] = v35;
  v41[4] = v61;
  v41[5] = v34;
  v41[6] = v62;
  v41[7] = v33;
  *(_BYTE *)(v39 + v40[21]) = 1;
  swift_retain();
  sub_1A905FD54((uint64_t)v13, &qword_1EEABCCB8);
  v42 = v2[43];
  v43 = v67;
  sub_1A9062170(v39, v67, &qword_1EEABCCC0);
  v44 = v64;
  v45 = (uint64_t)v65;
  *(_QWORD *)&v65[*(int *)(v64 + 48)] = v42;
  sub_1A9062170(v43, v45 + *(int *)(v44 + 44), &qword_1EEABCCC0);
  v46 = v71;
  sub_1A9064630(v43 + v40[20], v71, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  swift_retain();
  sub_1A905FD54(v43, &qword_1EEABCCC0);
  sub_1A9116174(v46, v45, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v47 = v70;
  sub_1A9062F08(v45, v70, &qword_1EEABCCC8);
  sub_1A905FD54(v39, &qword_1EEABCCC0);
  v48 = v2[24];
  v49 = v2[31];
  v50 = v69;
  sub_1A9062170(v47, v69, &qword_1EEABCCC8);
  v51 = v68;
  sub_1A9064630(v47, v50 + *(int *)(v68 + 80), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest);
  v52 = v50 + *(int *)(v51 + 76);
  *(_QWORD *)v52 = v48;
  *(_OWORD *)(v52 + 8) = *(_OWORD *)(v2 + 25);
  v67 = *(_OWORD *)(v2 + 27);
  *(_OWORD *)(v52 + 24) = v67;
  v71 = *(_OWORD *)(v2 + 29);
  *(_OWORD *)(v52 + 40) = v71;
  *(_QWORD *)(v52 + 56) = v49;
  *(_BYTE *)(v50 + *(int *)(v51 + 84)) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A905FD54(v47, &qword_1EEABCCC8);
  v53 = v75;
  sub_1A933E23C(v75);
  sub_1A905FD54(v50, &qword_1EEABCCD0);
  v54 = v73 + *(int *)(v72 + 36);
  v55 = v74;
  sub_1A9062170(v53, v74, &qword_1EEABCCB0);
  sub_1A9062170(v54, (uint64_t)v79, &qword_1ED2AD0C0);
  v56 = v76;
  sub_1A9062170(v55, v76, &qword_1EEABCCB0);
  v57 = (int *)v77;
  sub_1A9062170((uint64_t)v79, v56 + *(int *)(v77 + 36), &qword_1ED2AD0C0);
  v58 = v56 + v57[10];
  *(_QWORD *)v58 = "FetchShazamSignature";
  *(_QWORD *)(v58 + 8) = 20;
  *(_BYTE *)(v58 + 16) = 2;
  *(_BYTE *)(v56 + v57[12]) = 1;
  sub_1A905FD54((uint64_t)v79, &qword_1ED2AD0C0);
  sub_1A905FD54(v55, &qword_1EEABCCB0);
  v59 = (_QWORD *)(v56 + v57[11]);
  *v59 = 0;
  v59[1] = 0xE000000000000000;
  *(_BYTE *)(v56 + v57[13]) = 0;
  sub_1A9062F08(v56, v78, &qword_1EEABCC90);
  return sub_1A905FD54(v53, &qword_1EEABCCB0);
}

id sub_1A9297FD8(void *a1)
{
  uint64_t inited;
  id v3;
  id v4;
  unint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9770);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405960;
  *(_QWORD *)(inited + 32) = a1;
  v6 = inited;
  sub_1A93F8328();
  v3 = a1;
  v4 = sub_1A913EAD0(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A929821C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  void *v5;
  __int128 v6;
  id v7;

  v4 = *(_BYTE *)(a2 + 16) & 1;
  v5 = *a1;
  *(_QWORD *)a3 = *a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_QWORD *)(a3 + 24) = v4;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a3 + 48) = v6;
  *(_BYTE *)(a3 + 64) = 2;
  v7 = v5;
  return sub_1A9298F10(a2);
}

uint64_t sub_1A9298270@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a3 = a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = v4;
  *(_QWORD *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v6;
  *(_QWORD *)(a3 + 56) = v7;
  *(_BYTE *)(a3 + 64) = 2;
  v8 = a2;
  sub_1A90D8068(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92982D8@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *a2;
  *(_QWORD *)a3 = *a2;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = v4;
  *(_QWORD *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v6;
  *(_QWORD *)(a3 + 56) = v7;
  *(_BYTE *)(a3 + 64) = 2;
  v9 = v8;
  sub_1A90D8068(v4, v5);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_1A9298344@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *(_QWORD *)a2 = v2;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 49) = 0u;
  return v2;
}

uint64_t sub_1A9298364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v15[-v10];
  v12 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCBD0) + 48);
  sub_1A9062170(a1, (uint64_t)v11, &qword_1ED2AD3D0);
  v18 = a2;
  sub_1A9293E98((void (*)(char *))sub_1A9299098, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, a3);
  sub_1A905FD54((uint64_t)v11, &qword_1ED2AD3D0);
  v13 = type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1A9062170(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1ED2AD3D0);
  v16 = a2;
  sub_1A9293E98((void (*)(char *))sub_1A92990C0, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, v12);
  return sub_1A905FD54((uint64_t)v8, &qword_1ED2AD3D0);
}

uint64_t sub_1A92984AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a4;
  v25 = a5;
  v8 = (int *)a3(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v23[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1A93F726C();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1A9062170((uint64_t)v13, (uint64_t)v10, &qword_1ED2AD3D0);
  LOBYTE(v15) = *((_BYTE *)a2 + 24);
  v16 = a2[2];
  v26 = a2[1];
  v27 = v16;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  v28 = *a2;
  sub_1A915997C();
  sub_1A93F8B38();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v17 = v26;
  v18 = v27;
  v19 = (uint64_t)&v10[v8[9]];
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_QWORD *)(v19 + 32) = 0;
  v10[v8[5]] = v15;
  v20 = *((_BYTE *)a2 + 25);
  v21 = &v10[v8[6]];
  *v21 = v17;
  v21[1] = v18;
  v10[v8[8]] = v20;
  v10[v8[7]] = v24;
  sub_1A921019C((uint64_t)(a2 + 4), v19);
  sub_1A9116174((uint64_t)v10, v25, a3);
  return sub_1A905FD54((uint64_t)v13, &qword_1ED2AD3D0);
}

uint64_t sub_1A929867C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 352);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1A9298DDC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1A92986E0(uint64_t a1)
{
  return TimeBombedTranscriptProvider.invalidate(for:)(a1) & 1;
}

uint64_t static TranscriptProviderError.== infix(_:_:)()
{
  return 1;
}

uint64_t TranscriptProviderError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t TranscriptProviderError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A9298768()
{
  unint64_t result;

  result = qword_1EEABCB38;
  if (!qword_1EEABCB38)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TranscriptProviderError, &type metadata for TranscriptProviderError);
    atomic_store(result, (unint64_t *)&qword_1EEABCB38);
  }
  return result;
}

uint64_t destroy for TimeBombedTranscriptProvider(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 288);

  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *assignWithCopy for TimeBombedTranscriptProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_retain();
  swift_release();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_retain();
  swift_release();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_retain();
  swift_release();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_retain();
  swift_release();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_retain();
  swift_release();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_retain();
  swift_release();
  v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_retain();
  swift_release();
  v21 = a2[35];
  a1[34] = a2[34];
  a1[35] = v21;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 36, a2 + 36);
  v22 = (void *)a2[41];
  v23 = (void *)a1[41];
  a1[41] = v22;
  v24 = v22;

  a1[42] = a2[42];
  swift_retain();
  swift_release();
  a1[43] = a2[43];
  swift_retain();
  swift_release();
  a1[44] = a2[44];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy360_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t assignWithTake for TimeBombedTranscriptProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_release();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_release();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_release();
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 288);
  v4 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v4;
  v5 = *(_QWORD *)(a2 + 328);
  v6 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v5;

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_release();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_release();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeBombedTranscriptProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 360))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeBombedTranscriptProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 360) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 360) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranscriptProviderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A9298D80 + 4 * byte_1A9418770[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A9298DA0 + 4 * byte_1A9418775[v4]))();
}

_BYTE *sub_1A9298D80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A9298DA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9298DA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9298DB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A9298DB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A9298DC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProviderError()
{
  return &type metadata for TranscriptProviderError;
}

uint64_t sub_1A9298DDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A9294298(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A9298DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1A905F180(a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A9298E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1A90D8068(a4, a5);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A9298E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9298364(a1, v2 + 16, a2);
}

uint64_t sub_1A9298E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A9296F98(a1, a2);
}

uint64_t sub_1A9298EA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A9298ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A9298270(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1A9298ED4()
{
  uint64_t v0;

  sub_1A905F180(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A9298F08@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A929821C(a1, v2 + 16, a2);
}

uint64_t sub_1A9298F10(uint64_t a1)
{
  sub_1A90D8068(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A9298F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92979BC(a1, a2);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_1A9299054(void *a1)
{
  return sub_1A9297FD8(a1);
}

uint64_t sub_1A9299074()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A9299098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A92984AC(a1, *(uint64_t **)(v2 + 16), (uint64_t (*)(_QWORD))type metadata accessor for ShazamSignatureRequest, 6, a2);
}

uint64_t sub_1A92990C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A92984AC(a1, *(uint64_t **)(v2 + 16), (uint64_t (*)(_QWORD))type metadata accessor for TTMLRequest, 7, a2);
}

uint64_t sub_1A92990E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F73E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 376) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1A929920C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F73E0() - 8) + 80);
  sub_1A92949B0(a1, v1 + 16, v1 + ((v3 + 376) & ~v3));
}

id FairPlayKeyResponseData.__allocating_init(renewalDate:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___PFFairPlayKeyResponseData_renewalDate];
  v5 = sub_1A93F738C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

id FairPlayKeyResponseData.init(renewalDate:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR___PFFairPlayKeyResponseData_renewalDate];
  v4 = sub_1A93F738C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FairPlayKeyResponseData();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for FairPlayKeyResponseData()
{
  uint64_t result;

  result = qword_1EEABCD08;
  if (!qword_1EEABCD08)
    return swift_getSingletonMetadata();
  return result;
}

id FairPlayKeyResponseData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FairPlayKeyResponseData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FairPlayKeyResponseData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FairPlayKeyResponseData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A92994A8()
{
  return type metadata accessor for FairPlayKeyResponseData();
}

uint64_t sub_1A92994B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A93F738C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FairPlayKeyResponseData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlayKeyResponseData.__allocating_init(renewalDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t EpisodeStatePersistentHistoryTracker.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  EpisodeStatePersistentHistoryTracker.init()();
  return v0;
}

Swift::Void __swiftcall EpisodeStatePersistentHistoryTracker.startTrackingChanges()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 24);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1A909B9FC;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_1A9055748;
  v4[5] = v2;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 1107296256;
  v4[2] = sub_1A9098E00;
  v4[3] = &block_descriptor_44;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

id *EpisodeStatePersistentHistoryTracker.deinit()
{
  id *v0;

  swift_release();

  return v0;
}

uint64_t EpisodeStatePersistentHistoryTracker.__deallocating_deinit()
{
  id *v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A92996DC()
{
  return swift_deallocObject();
}

uint64_t method lookup function for EpisodeStatePersistentHistoryTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EpisodeStatePersistentHistoryTracker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1A9299700(uint64_t *a1, id *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  _QWORD *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(uint64_t *, _QWORD);
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  id v62;
  uint64_t *v63;
  unint64_t v64;
  uint8_t *v65;
  _QWORD *v66;
  uint8_t *v67;
  uint64_t v68[4];
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;

  v3 = v2;
  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)*a2;
  v12 = objc_msgSend(*a2, sel_updatedProperties, v8);
  if (!v12)
  {
    if (qword_1ED2A42A8 == -1)
    {
LABEL_7:
      v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A4290);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
      v18 = (id)v11;
      v19 = sub_1A93F7674();
      v20 = sub_1A93F879C();
      if (os_log_type_enabled(v19, v20))
      {
        v64 = v3;
        v21 = (uint8_t *)swift_slowAlloc();
        v66 = (_QWORD *)swift_slowAlloc();
        v67 = v21;
        *(_DWORD *)v21 = 138412290;
        v65 = v21 + 4;
        v69 = (uint64_t)v18;
        v22 = v18;
        sub_1A93F8AA8();
        v23 = v66;
        *v66 = v18;

        v24 = v20;
        v25 = v67;
        _os_log_impl(&dword_1A904E000, v19, v24, "Skipping update change with no updated properties %@", v67, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v23, -1, -1);
        MEMORY[0x1AF41411C](v25, -1, -1);
      }
      else
      {

        v19 = v18;
      }

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
LABEL_35:
    swift_once();
    goto LABEL_7;
  }
  v13 = v12;
  v62 = (id)v11;
  v63 = a1;
  v64 = v2;
  v3 = 0x1E0C97C10uLL;
  sub_1A9072534(0, &qword_1ED2A41E0);
  sub_1A90C0B34(&qword_1ED2A41E8, &qword_1ED2A41E0, 0x1E0C97C10, MEMORY[0x1E0DEFCF8]);
  v6 = sub_1A93F85F8();

  v67 = (uint8_t *)(v6 & 0xC000000000000001);
  if ((v6 & 0xC000000000000001) != 0)
  {
    v11 = sub_1A93F8BBC();
    if (v11)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    v49 = sub_1A9159F94(v26);
    swift_bridgeObjectRelease();
    v50 = v62;
    v51 = objc_msgSend(v62, sel_changedObjectID);
    v52 = v51;
    v53 = v63;
    v54 = *v63;
    if (*(_QWORD *)(*v63 + 16) && (v55 = sub_1A912E44C((uint64_t)v51), (v56 & 1) != 0))
    {
      v57 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v55);
      swift_bridgeObjectRetain();
    }
    else
    {
      v57 = MEMORY[0x1E0DEE9E8];
    }

    v58 = objc_msgSend(v50, sel_changedObjectID);
    v59 = sub_1A91EE3FC(v57, v49);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v68[0] = *v53;
    *v53 = 0x8000000000000000;
    sub_1A930F040(v59, v58, isUniquelyReferenced_nonNull_native);
    *v53 = v68[0];

    return swift_bridgeObjectRelease();
  }
  v11 = *(_QWORD *)(v6 + 16);
  if (!v11)
    goto LABEL_10;
LABEL_4:
  v72 = MEMORY[0x1E0DEE9D8];
  v10 = (char *)&v72;
  sub_1A908182C(0, v11 & ~(v11 >> 63), 0);
  if (v67)
  {
    v14 = sub_1A93F8B80();
    v16 = 1;
  }
  else
  {
    v14 = sub_1A929B064(v6);
    v16 = v28 & 1;
  }
  v69 = v14;
  v70 = v15;
  v71 = v16;
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  v29 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 < 0)
    v29 = v6;
  v65 = (uint8_t *)v29;
  v66 = (_QWORD *)v6;
  while (1)
  {
    while (1)
    {
      v35 = v69;
      v36 = v70;
      v37 = v71;
      sub_1A929AE00(v69, v70, v71, v6, &qword_1ED2A41E0);
      v39 = v38;
      v40 = objc_msgSend(v38, sel_name);
      v41 = sub_1A93F8040();
      v43 = v42;

      v44 = v72;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A908182C(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = v72;
      }
      v46 = *(_QWORD *)(v44 + 16);
      v45 = *(_QWORD *)(v44 + 24);
      if (v46 >= v45 >> 1)
      {
        result = sub_1A908182C(v45 > 1, v46 + 1, 1);
        v44 = v72;
      }
      *(_QWORD *)(v44 + 16) = v46 + 1;
      v47 = v44 + 16 * v46;
      *(_QWORD *)(v47 + 32) = v41;
      *(_QWORD *)(v47 + 40) = v43;
      if (v67)
        break;
      v6 = (uint64_t)v66;
      v30 = sub_1A93C16BC(v35, v36, v37, v66);
      v32 = v31;
      v34 = v33;
      sub_1A91344E0(v35, v36, v37);
      v69 = v30;
      v70 = v32;
      v71 = v34 & 1;
      if (!--v11)
        goto LABEL_28;
    }
    v6 = (uint64_t)v66;
    if ((v37 & 1) == 0)
      break;
    if (sub_1A93F8B98())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4168);
    v48 = (void (*)(uint64_t *, _QWORD))sub_1A93F8640();
    sub_1A93F8BF8();
    v48(v68, 0);
    if (!--v11)
    {
LABEL_28:
      sub_1A91344E0(v69, v70, v71);
      swift_bridgeObjectRelease();
      v26 = v72;
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9299CE0@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v5 = sub_1A93F7698();
  v50 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = objc_msgSend(*a1, sel_tombstone, v6);
  if (!v10)
  {
    v48 = 0u;
    v49 = 0u;
    v15 = v50;
LABEL_14:
    sub_1A905FD54((uint64_t)&v48, qword_1ED2AC800);
    goto LABEL_25;
  }
  v11 = v10;
  v12 = sub_1A93F7EFC();

  v45 = sub_1A93F8040();
  v46 = v13;
  sub_1A93F8C1C();
  if (*(_QWORD *)(v12 + 16))
  {
    v14 = sub_1A90A597C((uint64_t)v47);
    v15 = v50;
    if ((v16 & 1) != 0)
    {
      sub_1A906443C(*(_QWORD *)(v12 + 56) + 32 * v14, (uint64_t)&v48);
    }
    else
    {
      v48 = 0u;
      v49 = 0u;
    }
  }
  else
  {
    v48 = 0u;
    v49 = 0u;
    v15 = v50;
  }
  swift_bridgeObjectRelease();
  sub_1A90A5908((uint64_t)v47);
  if (!*((_QWORD *)&v49 + 1))
    goto LABEL_14;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v17 = v5;
    v18 = (uint64_t *)v47[0];
    v19 = v47[1];
    v20 = objc_msgSend(v9, sel_tombstone);
    if (v20)
    {
      v21 = v20;
      v43 = v18;
      v22 = sub_1A93F7EFC();

      v45 = sub_1A93F8040();
      v46 = v23;
      sub_1A93F8C1C();
      if (*(_QWORD *)(v22 + 16))
      {
        v24 = sub_1A90A597C((uint64_t)v47);
        v5 = v17;
        if ((v25 & 1) != 0)
        {
          sub_1A906443C(*(_QWORD *)(v22 + 56) + 32 * v24, (uint64_t)&v48);
        }
        else
        {
          v48 = 0u;
          v49 = 0u;
        }
      }
      else
      {
        v48 = 0u;
        v49 = 0u;
        v5 = v17;
      }
      swift_bridgeObjectRelease();
      sub_1A90A5908((uint64_t)v47);
      if (*((_QWORD *)&v49 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v26 = v47[0];
          if ((objc_msgSend((id)objc_opt_self(), sel_isEmpty_, v47[0]) & 1) != 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
            result = swift_allocObject();
            *(_OWORD *)(result + 16) = xmmword_1A9405520;
            *(_QWORD *)(result + 32) = v43;
            *(_QWORD *)(result + 40) = v19;
            *(_BYTE *)(result + 48) = 1;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4460);
            result = swift_allocObject();
            *(_OWORD *)(result + 16) = xmmword_1A9405950;
            *(_QWORD *)(result + 32) = v43;
            *(_QWORD *)(result + 40) = v19;
            *(_BYTE *)(result + 48) = 1;
            *(_QWORD *)(result + 56) = v26 & ~(v26 >> 63);
            *(_QWORD *)(result + 64) = 0;
            *(_BYTE *)(result + 72) = 0;
          }
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      v48 = 0u;
      v49 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A905FD54((uint64_t)&v48, qword_1ED2AC800);
LABEL_24:
    v15 = v50;
  }
LABEL_25:
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v28, v5);
  v29 = v9;
  v30 = sub_1A93F7674();
  v31 = v5;
  v32 = sub_1A93F879C();
  if (os_log_type_enabled(v30, v32))
  {
    v42 = v31;
    v43 = a2;
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    *(_QWORD *)&v48 = v34;
    *(_DWORD *)v33 = 136315138;
    v35 = objc_msgSend(v29, sel_tombstone);
    v44 = v2;
    v41 = v8;
    if (v35)
    {
      v36 = v35;
      v37 = sub_1A93F7EFC();

    }
    else
    {
      v37 = 0;
    }
    v45 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD28);
    v38 = sub_1A93F8094();
    v45 = sub_1A906436C(v38, v39, (uint64_t *)&v48);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v30, v32, "Tombstones from episode deletion must have a uuid and a valid adamId. Make sure the corresponding attributes in MTEpisode CoreData schema have \"Preserve After Deletion\" check enabled. Offending tombstone: %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v34, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v42);
    result = MEMORY[0x1E0DEE9D8];
    a2 = v43;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v31);
    result = MEMORY[0x1E0DEE9D8];
  }
LABEL_33:
  *a2 = result;
  return result;
}

id sub_1A929A268@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id result;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  int v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  NSObject *v41;
  NSObject *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  NSObject *v50;
  id v51[11];
  unsigned __int16 v52;
  unsigned __int8 v53;
  uint64_t v54;

  v4 = v3;
  v54 = *MEMORY[0x1E0C80C00];
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v51[0] = 0;
  v14 = objc_msgSend(a2, sel_existingObjectWithID_error_, v13, v51, v10);
  v15 = v51[0];
  if (v14)
  {
    v16 = v14;
    objc_opt_self();
    v17 = (void *)swift_dynamicCastObjCClass();
    v18 = v15;
    if (v17)
    {
      v19 = MTEpisode.allEpisodeStateIdentifiers.getter();
      sub_1A909F660(v17, v19, (uint64_t)v51);
      result = v51[0];
      v21 = v51[1];
      v23 = v51[2];
      v22 = v51[3];
      v25 = v51[4];
      v24 = v51[5];
      v27 = v51[6];
      v26 = v51[7];
      v29 = v51[8];
      v28 = v51[9];
      v30 = v52 | (v53 << 16);
      v31 = v51[10];
      if (v51[0])
        *(id *)a3 = v51[0];
      else
        *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = v21;
      *(_QWORD *)(a3 + 16) = v23;
      *(_QWORD *)(a3 + 24) = v22;
      *(_QWORD *)(a3 + 32) = v25;
      *(_QWORD *)(a3 + 40) = v24;
      *(_QWORD *)(a3 + 48) = v27;
      *(_QWORD *)(a3 + 56) = v26;
      *(_QWORD *)(a3 + 64) = v29;
      *(_QWORD *)(a3 + 72) = v28;
      *(_QWORD *)(a3 + 80) = v31;
      *(_WORD *)(a3 + 88) = v30;
      *(_BYTE *)(a3 + 90) = BYTE2(v30);
      return result;
    }

  }
  else
  {
    v32 = v12;
    v33 = v51[0];
    v34 = (void *)sub_1A93F7128();

    v12 = v32;
    swift_willThrow();

    v4 = 0;
  }
  if (qword_1ED2A42A8 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A4290);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v35, v8);
  v36 = v13;
  v49 = v12;
  v37 = sub_1A93F7674();
  v38 = sub_1A93F879C();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v48 = v4;
    v40 = (uint8_t *)v39;
    v45 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v40 = 138412290;
    v47 = v8;
    v50 = v36;
    v41 = v36;
    v46 = v9;
    v42 = v41;
    v8 = v47;
    sub_1A93F8AA8();
    v43 = v45;
    *v45 = v36;

    v9 = v46;
    _os_log_impl(&dword_1A904E000, v37, v38, "Cannot fetch inserted MTEpisode entity for %@. This might be an episode that has been inserted and then deleted in an upcoming change.", v40, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v43, -1, -1);
    MEMORY[0x1AF41411C](v40, -1, -1);
  }
  else
  {

    v37 = v36;
  }

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v49, v8);
  *(_OWORD *)(a3 + 75) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_1A929A5D0@<D0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  __int16 v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  id v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  int v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  unint64_t v65;
  os_log_type_t v66;
  os_log_t v67;
  uint64_t v68;
  os_log_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  os_log_t v74;
  os_log_t v75;
  uint64_t v76;
  _BYTE v78[4];
  int v79;
  id v80;
  os_log_t v81;
  uint64_t v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int16 v92;
  char v93;
  uint64_t v94;
  uint64_t v95[3];

  v95[1] = *MEMORY[0x1E0C80C00];
  v8 = sub_1A93F7698();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v78[-v14];
  v16 = *a1;
  v86 = 0;
  v17 = objc_msgSend(a2, sel_existingObjectWithID_error_, v16, &v86, v13);
  v18 = v86;
  if (!v17)
  {
    v32 = v86;
    v33 = (void *)sub_1A93F7128();

    swift_willThrow();
LABEL_7:
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v15, v34, v8);
    v35 = v16;
    swift_bridgeObjectRetain_n();
    v36 = v35;
    v37 = sub_1A93F7674();
    v38 = sub_1A93F879C();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      LODWORD(v80) = v38;
      v81 = v37;
      v84 = v9;
      v85 = v8;
      v39 = swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      v83 = (os_log_t)swift_slowAlloc();
      v94 = (uint64_t)v36;
      v95[0] = (uint64_t)v83;
      *(_DWORD *)v39 = 138412546;
      v41 = v36;
      sub_1A93F8AA8();
      v82 = (uint64_t)v40;
      *v40 = v36;

      *(_WORD *)(v39 + 12) = 2080;
      if (*(_QWORD *)(a3 + 16))
      {
        v42 = v41;
        v43 = sub_1A912E44C((uint64_t)v42);
        if ((v44 & 1) != 0)
        {
          v45 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v43);
          swift_bridgeObjectRetain();
        }
        else
        {
          v45 = 0;
        }
        v62 = v84;
        v63 = v80;

      }
      else
      {
        v45 = 0;
        v62 = v84;
        v63 = v80;
      }
      v94 = v45;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD20);
      v64 = sub_1A93F8094();
      v94 = sub_1A906436C(v64, v65, v95);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v66 = v63;
      v67 = v81;
      _os_log_impl(&dword_1A904E000, v81, v66, "Cannot fetch updated MTEpisode entity for %@; properties reported as updates: %s. This might be an episode that "
        "has been updated and then deleted in an upcoming change.",
        (uint8_t *)v39,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      v68 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v68, -1, -1);
      v69 = v83;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v69, -1, -1);
      MEMORY[0x1AF41411C](v39, -1, -1);

      v46 = *(void (**)(_BYTE *, uint64_t))(v62 + 8);
      v47 = v15;
      goto LABEL_25;
    }

    swift_bridgeObjectRelease_n();
    v46 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
    v47 = v15;
LABEL_14:
    v48 = v8;
LABEL_26:
    v46(v47, v48);
    *(_QWORD *)&v27 = 0;
    *(_OWORD *)(a4 + 75) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return *(double *)&v27;
  }
  v19 = v17;
  objc_opt_self();
  v20 = (void *)swift_dynamicCastObjCClass();
  v21 = v18;
  if (!v20)
  {

    goto LABEL_7;
  }
  v22 = v19;
  v23 = MTEpisode.allEpisodeStateIdentifiers.getter();
  sub_1A909F660(v20, v23, (uint64_t)&v86);
  v24 = v86;
  if (!v86)
  {
    if (qword_1ED2A42A8 != -1)
      swift_once();
    v49 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED2A4290);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v49, v8);
    v50 = v16;
    swift_bridgeObjectRetain_n();
    v51 = v50;
    v52 = sub_1A93F7674();
    v53 = sub_1A93F879C();
    if (os_log_type_enabled(v52, (os_log_type_t)v53))
    {
      v79 = v53;
      v80 = v22;
      v83 = v52;
      v84 = v9;
      v85 = v8;
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      v94 = (uint64_t)v51;
      v95[0] = v82;
      *(_DWORD *)v54 = 138412546;
      v56 = a3;
      v57 = v51;
      sub_1A93F8AA8();
      v81 = v55;
      v55->isa = (Class)v51;

      *(_WORD *)(v54 + 12) = 2080;
      if (*(_QWORD *)(v56 + 16))
      {
        v58 = v57;
        v59 = sub_1A912E44C((uint64_t)v58);
        if ((v60 & 1) != 0)
        {
          v61 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v59);
          swift_bridgeObjectRetain();
        }
        else
        {
          v61 = 0;
        }
        v70 = v84;
        v71 = v80;

      }
      else
      {
        v61 = 0;
        v70 = v84;
        v71 = v80;
      }
      v94 = v61;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD20);
      v72 = sub_1A93F8094();
      v94 = sub_1A906436C(v72, v73, v95);
      sub_1A93F8AA8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v74 = v83;
      _os_log_impl(&dword_1A904E000, v83, (os_log_type_t)v79, "The MTEpisode entity for %@ does not have any ID at all. We can do nothing with it. This was originally reported as a crash in rdar://79831648. Now we handle this weird condition by skipping this update. These are the reported updated properties: %s.", (uint8_t *)v54, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      v75 = v81;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v75, -1, -1);
      v76 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v76, -1, -1);
      MEMORY[0x1AF41411C](v54, -1, -1);

      v46 = *(void (**)(_BYTE *, uint64_t))(v70 + 8);
      v47 = v11;
LABEL_25:
      v48 = v85;
      goto LABEL_26;
    }

    swift_bridgeObjectRelease_n();
    v46 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
    v47 = v11;
    goto LABEL_14;
  }
  v25 = v92;
  v26 = v93;

  v27 = v87;
  v28 = v88;
  v29 = v89;
  v30 = v90;
  v31 = v91;
  *(_QWORD *)a4 = v24;
  *(_OWORD *)(a4 + 8) = v27;
  *(_OWORD *)(a4 + 24) = v28;
  *(_OWORD *)(a4 + 40) = v29;
  *(_OWORD *)(a4 + 56) = v30;
  *(_OWORD *)(a4 + 72) = v31;
  *(_BYTE *)(a4 + 90) = v26;
  *(_WORD *)(a4 + 88) = v25;
  return *(double *)&v27;
}

uint64_t sub_1A929AD6C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A929AD90()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A929ADDC()
{
  return swift_deallocObject();
}

void sub_1A929ADEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1A929AE00(a1, a2, a3, a4, (unint64_t *)&qword_1ED2AC7B0);
}

void sub_1A929AE00(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1A93F8BA4() == *(_DWORD *)(a4 + 36))
      {
        sub_1A93F8BB0();
        sub_1A9072534(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1A93F8A30();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1A93F8A3C();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1A93F8A3C();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1AF4128EC](a1, a2, v8);
  sub_1A9072534(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1A929B064(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

double sub_1A929B0EC@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(_QWORD *__return_ptr, uint64_t *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64x2_t v12;
  int16x8_t v13;
  __int128 v14;
  double result;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int16 v23;
  char v24;
  uint64_t v25;

  v5 = *a2;
  v25 = *a1;
  a3(v16, &v25);
  if (v16[0])
  {
    v6 = v23;
    v7 = v24;
    v8 = v22;
    v9 = v19;
    v10 = v18;
    v11 = v16[1];
    *(_QWORD *)a4 = v16[0];
    *(_BYTE *)(a4 + 8) = v11 & 1;
    v12 = (uint64x2_t)vdupq_n_s64(v11);
    v13 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1A9406780), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1A9406770));
    *(int8x8_t *)v13.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v13), (int8x8_t)0x1000100010001);
    *(_DWORD *)(a4 + 9) = vmovn_s16(v13).u32[0];
    *(_BYTE *)(a4 + 13) = BYTE5(v11) & 1;
    *(_OWORD *)(a4 + 16) = v17;
    *(_QWORD *)(a4 + 32) = v10;
    *(_BYTE *)(a4 + 40) = v9 & 1;
    v14 = v21;
    *(_OWORD *)(a4 + 48) = v20;
    *(_OWORD *)(a4 + 64) = v14;
    *(_QWORD *)(a4 + 80) = v8;
    *(_BYTE *)(a4 + 90) = v7;
    *(_WORD *)(a4 + 88) = v6;
    *(_QWORD *)(a4 + 96) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_QWORD *)(a4 + 96) = 0;
    result = 0.0;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

void sub_1A929B1F8(uint64_t a1, void (*a2)(_QWORD *__return_ptr, id *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64x2_t v24;
  int16x8_t v25;
  _QWORD *v26;
  unint64_t v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v37[2];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v12 = 8 * i;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v12);
    v46 = *(id *)(*(_QWORD *)(a1 + 48) + v12);
    v36 = v13;
    v14 = v46;
    swift_bridgeObjectRetain();
    a2(v37, &v46, &v36);
    swift_bridgeObjectRelease();

    v15 = v37[0];
    if (v37[0])
    {
      v27 = v37[1];
      v28 = v38;
      v19 = v39;
      v31 = v42;
      v32 = v41;
      v29 = v40;
      v30 = v43;
      v33 = v45;
      v34 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_1A9119578(0, v35[2] + 1, 1, v35);
      v21 = v35[2];
      v20 = v35[3];
      v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        v26 = sub_1A9119578((_QWORD *)(v20 > 1), v21 + 1, 1, v35);
        v22 = v21 + 1;
        v35 = v26;
      }
      v35[2] = v22;
      v23 = &v35[13 * v21];
      v23[4] = v15;
      *((_BYTE *)v23 + 40) = v27 & 1;
      v24 = (uint64x2_t)vdupq_n_s64(v27);
      v25 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v24, (uint64x2_t)xmmword_1A9406780), (int32x4_t)vshlq_u64(v24, (uint64x2_t)xmmword_1A9406770));
      *(int8x8_t *)v25.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v25), (int8x8_t)0x1000100010001);
      *(_DWORD *)((char *)v23 + 41) = vmovn_s16(v25).u32[0];
      *((_BYTE *)v23 + 45) = BYTE5(v27) & 1;
      *((_OWORD *)v23 + 3) = v28;
      v23[8] = v19;
      *((_BYTE *)v23 + 72) = v29 & 1;
      *((_OWORD *)v23 + 5) = v32;
      *((_OWORD *)v23 + 6) = v31;
      v23[14] = v30;
      *((_BYTE *)v23 + 122) = BYTE2(v34);
      *((_WORD *)v23 + 60) = v34;
      v23[16] = v33;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v8)
      goto LABEL_29;
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_29;
      v17 = *(_QWORD *)(v4 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_29;
        v17 = *(_QWORD *)(v4 + 8 * v9);
        if (!v17)
        {
          v9 = v16 + 3;
          if (v16 + 3 >= v8)
            goto LABEL_29;
          v17 = *(_QWORD *)(v4 + 8 * v9);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_29:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v8)
      goto LABEL_29;
    v17 = *(_QWORD *)(v4 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

double sub_1A929B510@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A929A5D0(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

double sub_1A929B518@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A929B0EC(a1, a2, *(void (**)(_QWORD *__return_ptr, uint64_t *))(v3 + 16), a3);
}

uint64_t assignWithCopy for EpisodesTransaction(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EpisodesTransaction(uint64_t a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t dispatch thunk of Lockable.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL static PlayChapterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PlayChapterError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t PlayChapterError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

unint64_t sub_1A929B688()
{
  unint64_t result;

  result = qword_1EEABCD30;
  if (!qword_1EEABCD30)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for PlayChapterError, &type metadata for PlayChapterError);
    atomic_store(result, (unint64_t *)&qword_1EEABCD30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlayChapterError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A929B718 + 4 * byte_1A94189D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A929B74C + 4 * asc_1A94189D0[v4]))();
}

uint64_t sub_1A929B74C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A929B754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A929B75CLL);
  return result;
}

uint64_t sub_1A929B768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A929B770);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A929B774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A929B77C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayChapterError()
{
  return &type metadata for PlayChapterError;
}

void sub_1A929B798(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1A929B7B4(a1, a2, a3, a4, a5, (uint64_t)&unk_1E54EC130, (uint64_t)sub_1A929C808, (uint64_t)&block_descriptor_45);
}

void sub_1A929B7B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a3;
  v18[4] = a7;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1A908A91C;
  v18[3] = a8;
  v16 = _Block_copy(v18);
  swift_retain();
  swift_retain();
  v17 = a3;
  swift_release();
  objc_msgSend(v17, sel_performBlock_, v16);
  _Block_release(v16);
}

void sub_1A929B898(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1A929B7B4(a1, a2, a3, a4, a5, (uint64_t)&unk_1E54EC180, (uint64_t)sub_1A929C808, (uint64_t)&block_descriptor_15_0);
}

void sub_1A929B8B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1A929B7B4(a1, a2, a3, a4, a5, (uint64_t)&unk_1E54EC1D0, (uint64_t)sub_1A929C808, (uint64_t)&block_descriptor_21_1);
}

void sub_1A929B8D0(void (*a1)(_QWORD *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  unsigned __int8 v11;
  char v12;

  a3(v10, a5);
  v6 = (void *)v10[0];
  v7 = v10[1];
  v8 = v10[2];
  v9 = v11;
  v12 = 0;
  a1(v10);
  sub_1A929C848(v6, v7, v8, v9, 0);
}

void sub_1A929B980(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void *v6;
  void *v7;
  char v8;

  a3(&v7, a5);
  v6 = v7;
  v8 = 0;
  a1(&v7);
  sub_1A909CFC0(v6, 0);
}

id AssetRemovalProcessorDataSource.managedObjectContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id AssetRemovalProcessorDataSource.receiverQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t AssetRemovalProcessorDataSource.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A929BA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;
  return sub_1A90C1390(v2);
}

uint64_t (*sub_1A929BA48(uint64_t *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1A90C4D58();
  return sub_1A929BA7C;
}

uint64_t sub_1A929BA7C(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = *a1;
  if ((a2 & 1) == 0)
    return sub_1A90C1390(v3);
  swift_bridgeObjectRetain();
  sub_1A90C1390(v3);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A929BAC8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double AssetRemovalProcessorDataSource.__allocating_init(managedObjectContext:receiverQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  v4 = swift_allocObject();
  strcpy((char *)(v4 + 32), "AssetRemoval");
  *(_BYTE *)(v4 + 45) = 0;
  *(_WORD *)(v4 + 46) = -5120;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v4 + 48) = xmmword_1A9411140;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  return result;
}

id sub_1A929BB6C()
{
  return objc_msgSend((id)objc_opt_self(), sel_predicateForPodcastToAutoRemove);
}

uint64_t sub_1A929BB98(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v3 = v2;
  v6 = *v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F20);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8968);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)v3[2];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = v6;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v14;
  v16[3] = sub_1A929BF94;
  v16[4] = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A91F0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v17 = v14;
  v18 = sub_1A93F7A94();
  v30 = (id)v3[3];
  v19 = v30;
  v31 = v18;
  v20 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  sub_1A9066C6C();
  sub_1A9066D74(&qword_1ED2A91E8, (uint64_t *)&unk_1ED2A91F0, MEMORY[0x1E0C96108]);
  sub_1A905FD90();
  v21 = v19;
  sub_1A93F7C80();
  sub_1A90C0C1C((uint64_t)v9);

  swift_release();
  swift_getKeyPath();
  sub_1A9066D74(&qword_1ED2A8F18, &qword_1ED2A8F20, MEMORY[0x1E0C95CB8]);
  v22 = v26;
  sub_1A93F7B78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v22);
  sub_1A9066D74(&qword_1ED2A8960, &qword_1ED2A8968, MEMORY[0x1E0C95748]);
  v23 = v27;
  v24 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v23);
  return v24;
}

void sub_1A929BE78(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  id v9;
  id v10;
  unsigned __int8 v11;
  _QWORD *v12;

  v8 = (void *)sub_1A93F8010();
  v9 = objc_msgSend(a1, sel_podcastForUuid_, v8);

  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v9, sel_episodeLimitResolvedValue);
    v11 = objc_msgSend(v9, sel_deletePlayedEpisodesResolvedValue);

    *(_QWORD *)a4 = a2;
    *(_QWORD *)(a4 + 8) = a3;
    *(_QWORD *)(a4 + 16) = v10;
    *(_BYTE *)(a4 + 24) = v11;
  }
  else
  {
    sub_1A9191378();
    swift_allocError();
    *v12 = a2;
    v12[1] = a3;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

uint64_t sub_1A929BF70()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A929BF94(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1A929BE78(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A929BFB0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A929BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A929B7B4(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t)&unk_1E54EC220, (uint64_t)sub_1A929C838, (uint64_t)&block_descriptor_27_1);
}

id sub_1A929C010(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED2A3F28 != -1)
    swift_once();
  v6 = sub_1A93F7698();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A3F08);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A93F7674();
  v8 = sub_1A93F8784();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v15 = v14;
    swift_bridgeObjectRetain();
    sub_1A93F8C70();
    sub_1A93F810C();
    swift_bridgeObjectRetain();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    type metadata accessor for MTPodcastEpisodeLimit(0);
    sub_1A93F8DE4();
    sub_1A93F810C();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A906436C(0, 0xE000000000000000, &v15);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v7, v8, "Creating autoremoval predicate with context: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v14, -1, -1);
    MEMORY[0x1AF41411C](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_1A93F8010();
  v12 = objc_msgSend(v10, sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, v11, a4 & 1, a3);

  return v12;
}

id sub_1A929C340@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1A929C010(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1A929C374()
{
  sub_1A93F8C70();
  sub_1A93F810C();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  sub_1A93F810C();
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1A93F8DE4();
  sub_1A93F810C();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A929C4C4()
{
  return sub_1A929C374();
}

uint64_t AssetRemovalProcessorDataSource.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A90C1390(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssetRemovalProcessorDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A90C1390(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A929C554(uint64_t a1, uint64_t a2)
{
  return sub_1A929BB98(a1, a2);
}

uint64_t sub_1A929C574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A90C4D58();
  *a1 = result;
  return result;
}

uint64_t sub_1A929C59C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 48);
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return sub_1A90C1390(v2);
}

uint64_t sub_1A929C5CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for AssetRemovalProcessorDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedShowKeys.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.observedEpisodeKeys.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.__allocating_init(managedObjectContext:receiverQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.showsPredicate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AssetRemovalProcessorDataSource.predicate(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t initializeWithCopy for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRemovalProcessorDataSource.AssetRemovalContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRemovalProcessorDataSource.AssetRemovalContext()
{
  return &type metadata for AssetRemovalProcessorDataSource.AssetRemovalContext;
}

void sub_1A929C814()
{
  uint64_t v0;

  sub_1A929B980(*(void (**)(void **))(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void **__return_ptr, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_1A929C838()
{
  uint64_t v0;

  sub_1A929B8D0(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_1A929C848(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void AnyCodable.value.getter()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_1A9131514(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

void sub_1A929C8B0()
{
  uint64_t v0;
  char v1;

  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)v0 = v1;
}

void sub_1A929C9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v20;

  *(_QWORD *)(v20 + 24) = MEMORY[0x1E0DEB188];
  *(_DWORD *)v20 = a20;
  JUMPOUT(0x1A929C994);
}

void sub_1A929C9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;

  v20[3] = MEMORY[0x1E0DEB070];
  *v20 = a20;
  JUMPOUT(0x1A929C994);
}

void sub_1A929C9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v20 = a19;
  v21 = *(_QWORD *)(a19 + 16);
  if (v21)
  {
    a17 = MEMORY[0x1E0DEE9D8];
    sub_1A929E39C(0, v21, 0);
    v22 = v20 + 32;
    v23 = a17;
    do
    {
      sub_1A9131514(v22, (uint64_t)&a9);
      AnyCodable.value.getter();
      sub_1A9131550((uint64_t)&a9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A929E39C(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = a17;
      }
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1A929E39C(v24 > 1, v25 + 1, 1);
        v23 = a17;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      sub_1A908A5DC(&a14, (_OWORD *)(v23 + 32 * v25 + 32));
      v22 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  v19[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA428);
  *v19 = v23;
  JUMPOUT(0x1A929C994);
}

uint64_t sub_1A929CB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v17;
  _QWORD v18[4];
  unsigned __int8 v19;
  _OWORD v20[2];
  _BYTE v21[40];
  uint64_t v22;
  _BYTE v23[32];

  sub_1A906443C(a1, (uint64_t)v23);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    *(_BYTE *)a2 = v20[0];
    *(_BYTE *)(a2 + 32) = 0;
  }
  else
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      v4 = *((_QWORD *)&v20[0] + 1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      *(_QWORD *)(a2 + 8) = v4;
      v5 = 1;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      v5 = 12;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      v5 = 13;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      v5 = 2;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_BYTE *)a2 = v20[0];
      v5 = 3;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_WORD *)a2 = v20[0];
      v5 = 4;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      v5 = 5;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      v5 = 6;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      v5 = 7;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_BYTE *)a2 = v20[0];
      v5 = 8;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_WORD *)a2 = v20[0];
      v5 = 9;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_DWORD *)a2 = v20[0];
      v5 = 10;
    }
    else if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      *(_QWORD *)a2 = *(_QWORD *)&v20[0];
      v5 = 11;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA428);
      if (swift_dynamicCast())
      {
        v6 = *(_QWORD *)(v22 + 16);
        if (v6)
        {
          v7 = v22 + 32;
          swift_bridgeObjectRetain();
          v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            sub_1A906443C(v7, (uint64_t)v21);
            sub_1A906443C((uint64_t)v21, (uint64_t)v20);
            sub_1A929CB28(v18, v20);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
            if (v19 == 255)
            {
              sub_1A92A1684((uint64_t)v18);
            }
            else
            {
              sub_1A91AC008((uint64_t)v18, (uint64_t)v20);
              sub_1A91AC008((uint64_t)v20, (uint64_t)v18);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v8 = sub_1A91179F0(0, v8[2] + 1, 1, v8);
              v9 = v8[2];
              v10 = v8[3];
              v11 = v9 + 1;
              if (v9 >= v10 >> 1)
              {
                v17 = v9 + 1;
                v12 = v8;
                v13 = v8[2];
                v14 = sub_1A91179F0((_QWORD *)(v10 > 1), v9 + 1, 1, v12);
                v9 = v13;
                v11 = v17;
                v8 = v14;
              }
              v8[2] = v11;
              sub_1A91AC008((uint64_t)v18, (uint64_t)&v8[5 * v9 + 4]);
            }
            v7 += 32;
            --v6;
          }
          while (v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        __swift_destroy_boxed_opaque_existential_0(a1);
        swift_bridgeObjectRelease();
        *(_QWORD *)a2 = v8;
        v5 = 14;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v15 = sub_1A91A920C(*(_QWORD *)&v20[0]);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(a1);
          *(_QWORD *)a2 = v15;
          v5 = 15;
        }
        else
        {
          sub_1A906443C((uint64_t)v23, (uint64_t)v20);
          __swift_destroy_boxed_opaque_existential_0(a1);
          sub_1A908A5DC(v20, (_OWORD *)a2);
          v5 = 16;
        }
      }
    }
    *(_BYTE *)(a2 + 32) = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
}

uint64_t _s18PodcastsFoundation10AnyCodableO12arrayLiteralACypd_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _BYTE v9[40];
  _BYTE v10[40];
  _BYTE v11[32];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1A906443C(v4, (uint64_t)v11);
      sub_1A906443C((uint64_t)v11, (uint64_t)v10);
      sub_1A929CB28((uint64_t)v10, (uint64_t)v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      if (v9[32] == 255)
      {
        sub_1A92A1684((uint64_t)v9);
      }
      else
      {
        sub_1A91AC008((uint64_t)v9, (uint64_t)v10);
        sub_1A91AC008((uint64_t)v10, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A91179F0(0, v5[2] + 1, 1, v5);
        v7 = v5[2];
        v6 = v5[3];
        if (v7 >= v6 >> 1)
          v5 = sub_1A91179F0((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
        v5[2] = v7 + 1;
        sub_1A91AC008((uint64_t)v9, (uint64_t)&v5[5 * v7 + 4]);
      }
      v4 += 32;
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 32) = 14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A929D1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;

  v7 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92B0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = sub_1A91A920C(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v3;
    v4 = 15;
LABEL_5:
    *(_BYTE *)(a2 + 32) = v4;
    return swift_bridgeObjectRelease();
  }
  if (swift_dynamicCast())
  {
    sub_1A908A5DC(&v6, (_OWORD *)a2);
    swift_bridgeObjectRelease();
    v4 = 16;
    goto LABEL_5;
  }
  result = sub_1A93F90B4();
  __break(1u);
  return result;
}

uint64_t AnyCodable.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  unsigned __int8 v27;
  _OWORD v28[2];
  _BYTE v29[40];
  uint64_t v30;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, a2, v7);
  swift_getDynamicType();
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_BYTE *)a3 = v28[0];
    *(_BYTE *)(a3 + 32) = 0;
    return ((uint64_t (*)(char *, uint64_t))v10)(v9, a2);
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    v11 = *((_QWORD *)&v28[0] + 1);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    *(_QWORD *)(a3 + 8) = v11;
    v12 = 1;
LABEL_47:
    *(_BYTE *)(a3 + 32) = v12;
    return ((uint64_t (*)(char *, uint64_t))v10)(v9, a2);
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    v12 = 12;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    v12 = 13;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    v12 = 2;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_BYTE *)a3 = v28[0];
    v12 = 3;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_WORD *)a3 = v28[0];
    v12 = 4;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    v12 = 5;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    v12 = 6;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    v12 = 7;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_BYTE *)a3 = v28[0];
    v12 = 8;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_WORD *)a3 = v28[0];
    v12 = 9;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_DWORD *)a3 = v28[0];
    v12 = 10;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = *(_QWORD *)&v28[0];
    v12 = 11;
    goto LABEL_47;
  }
  v25 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA428);
  if (swift_dynamicCast())
  {
    v13 = *(_QWORD *)(v30 + 16);
    if (v13)
    {
      v14 = v30 + 32;
      swift_bridgeObjectRetain();
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1A906443C(v14, (uint64_t)v29);
        sub_1A906443C((uint64_t)v29, (uint64_t)v28);
        sub_1A929CB28((uint64_t)v28, (uint64_t)v26);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
        if (v27 == 255)
        {
          sub_1A92A1684((uint64_t)v26);
        }
        else
        {
          sub_1A91AC008((uint64_t)v26, (uint64_t)v28);
          sub_1A91AC008((uint64_t)v28, (uint64_t)v26);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_1A91179F0(0, v15[2] + 1, 1, v15);
          v16 = v15[2];
          v17 = v15[3];
          v18 = v16 + 1;
          if (v16 >= v17 >> 1)
          {
            v24 = v16 + 1;
            v19 = v15;
            v20 = v16;
            v21 = sub_1A91179F0((_QWORD *)(v17 > 1), v16 + 1, 1, v19);
            v16 = v20;
            v18 = v24;
            v15 = v21;
          }
          v15[2] = v18;
          sub_1A91AC008((uint64_t)v26, (uint64_t)&v15[5 * v16 + 4]);
        }
        v14 += 32;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v15;
    v12 = 14;
    goto LABEL_47;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AA120);
  if (swift_dynamicCast())
  {
    v22 = sub_1A91A920C(*(uint64_t *)&v28[0]);
    swift_bridgeObjectRelease();
    v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    *(_QWORD *)a3 = v22;
    v12 = 15;
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    sub_1A908A5DC(v28, v26);
    v10 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v10(a1, a2);
    sub_1A908A5DC(v26, (_OWORD *)a3);
    v12 = 16;
    goto LABEL_47;
  }
  result = sub_1A93F90B4();
  __break(1u);
  return result;
}

uint64_t AnyCodable.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v6[4];
  uint64_t v7;
  char v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93B4();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    LOBYTE(v7) = sub_1A93F90D8() & 1;
    v8 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    sub_1A91AC008((uint64_t)&v7, a2);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void AnyCodable.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v2[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A93F93CC();
  sub_1A9131514(v1, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_1A929DCE0()
{
  uint64_t v1[15];

  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_1A93F9138();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
}

uint64_t sub_1A929E188@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyCodable.init(from:)(a1, a2);
}

void sub_1A929E19C(_QWORD *a1)
{
  AnyCodable.encode(to:)(a1);
}

uint64_t AnyCodable.init(BOOLeanLiteral:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  a2[32] = 0;
  return result;
}

uint64_t AnyCodable.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 32) = 2;
  return result;
}

void AnyCodable.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 32) = 13;
}

uint64_t AnyCodable.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 32) = 1;
  return result;
}

uint64_t AnyCodable.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
    v4 = sub_1A93F8E8C();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v4;
  sub_1A92A172C(a1, 1, &v6);
  swift_bridgeObjectRelease();
  return sub_1A929D1E0(v6, a2);
}

_BYTE *sub_1A929E284@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  a2[32] = 0;
  return result;
}

_QWORD *sub_1A929E294@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 32) = 2;
  return result;
}

double sub_1A929E2A8@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  result = *a1;
  *(double *)a2 = *a1;
  *(_BYTE *)(a2 + 32) = 13;
  return result;
}

uint64_t sub_1A929E2C0()
{
  return sub_1A93F9210();
}

uint64_t sub_1A929E2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9688);
    v4 = sub_1A93F8E8C();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v4;
  sub_1A92A172C(a1, 1, &v6);
  swift_bridgeObjectRelease();
  return sub_1A929D1E0(v6, a2);
}

_QWORD *sub_1A929E36C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *(_QWORD *)a2 = *result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 32) = 1;
  return result;
}

uint64_t sub_1A929E380(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A929E93C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E39C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929EAC4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E3B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0E5C(a1, a2, a3, (_QWORD *)*v3, &qword_1EEAB7958, type metadata accessor for PodcastsMediaLibrary.MediaItem);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E3E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A929EC30(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E400(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A929EDB8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E41C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A929EF5C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E438(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A929F0E4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E454(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F80C(a1, a2, a3, *v3, (uint64_t *)&unk_1ED2A44B0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E478(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F26C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E494(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F3D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E4B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F530(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E4CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F964(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E4E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929FAC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E504(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929FC1C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E520(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929FD78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E53C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A909D224(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2ABDF0, &qword_1ED2AA120);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E568(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0054(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2A9FE0, &qword_1ED2A9ED8);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E594(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929FF08(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E5B0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0054(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2A9FE8, qword_1ED2A9EE0);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E5DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0054(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2AA000, &qword_1ED2A9FB0);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E608(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A929F80C(a1, a2, a3, *v3, &qword_1ED2A44A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E62C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A1380(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2A9EA8, &qword_1ED2A9E60);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E658(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A0528(a1, a2, a3, *v3, &qword_1EEAB7988);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E684(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0384(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E6A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A909D224(a1, a2, a3, (_QWORD *)*v3, &qword_1EEABCE48, &qword_1EEABCE50);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E6CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A909D224(a1, a2, a3, (_QWORD *)*v3, &qword_1EEABCE28, &qword_1EEABCE30);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E6F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0AF8(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2ABDF8, &qword_1ED2ABC68);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E724(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A909D224(a1, a2, a3, (_QWORD *)*v3, &qword_1EEAB79C8, &qword_1ED2AD3D8);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E750(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A0528(a1, a2, a3, *v3, &qword_1EEABCD88);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E77C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A103C(a1, a2, a3, (_QWORD *)*v3, &qword_1EEAB79B0);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E7A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0690(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E7C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0AF8(a1, a2, a3, (_QWORD *)*v3, &qword_1EEABCD80, (uint64_t *)&unk_1EEABC500);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E7F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0818(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E80C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A09A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E828(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0AF8(a1, a2, a3, (_QWORD *)*v3, &qword_1EEABCE08, &qword_1EEAB7818);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E854(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A11DC(a1, a2, a3, *v3, &qword_1ED2A4460);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E880(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A0CD8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E89C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A0E5C(a1, a2, a3, (_QWORD *)*v3, &qword_1EEABCD78, type metadata accessor for FairPlayMigrationData);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E8C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A92A103C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED2A4468);
  *v3 = result;
  return result;
}

uint64_t sub_1A929E8F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A11DC(a1, a2, a3, *v3, &qword_1ED2ABDE8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E920(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A92A1528(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A929E93C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE00);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4170);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929EAC4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A48C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929EC30(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCDB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCDB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929EDB8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCDA0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCDA8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929EF5C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9728);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F0E4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD90);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD98);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F26C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABDE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F3D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F530(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 80 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F698(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE78);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F800(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A929F80C(a1, a2, a3, a4, &qword_1ED2A44A0);
}

uint64_t sub_1A929F80C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929F964(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929FAC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC938);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929FC1C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE68);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    memcpy(v13, v14, v8 << 6);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929FD78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7A28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A929FEE0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A92A1380(a1, a2, a3, a4, &qword_1EEABCDC0, &qword_1EEABCDC8);
}

uint64_t sub_1A929FEF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A92A1380(a1, a2, a3, a4, &qword_1EEABCDD0, &qword_1EEABCDD8);
}

uint64_t sub_1A929FF08(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A4498);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0054(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11)
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A01E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE60);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB94F0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0384(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE38);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE40);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0528(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0690(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE20);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ACB90);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0818(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE18);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED2AC800);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A09A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0AF8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0CD8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A0E5C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A103C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = a4[3];
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = a4[2];
  if (v8 <= v9)
    v10 = a4[2];
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (_QWORD *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 < a4 || v13 >= v14 + 24 * v9)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 24 * v9 || v13 >= v14 + 24 * v9)
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A11DC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A1358(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A92A1380(a1, a2, a3, a4, &qword_1EEABCDE0, &qword_1EEABCDE8);
}

uint64_t sub_1A92A136C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A92A1380(a1, a2, a3, a4, &qword_1EEABCDF0, &qword_1EEABCDF8);
}

uint64_t sub_1A92A1380(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11)
      memmove(v13 + 4, a4 + 4, 24 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A1528(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A93F8E98();
  __break(1u);
  return result;
}

uint64_t sub_1A92A1684(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCD38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A92A16C4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEABCD40);
    v8 = a2();
    result = MEMORY[0x1AF414014](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A92A172C(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  __int128 v31;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v6 = result + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A92A20C8(v6, (uint64_t)v29);
    v26 = v29[0];
    v27 = v29[1];
    v28 = v30;
    sub_1A908A5DC(&v31, v25);
    v8 = *a3;
    v10 = sub_1A90A597C((uint64_t)&v26);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
      break;
    v14 = v9;
    if (*(_QWORD *)(v8 + 24) >= v13)
    {
      if ((a2 & 1) != 0)
      {
        if ((v9 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A93079E0();
        if ((v14 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A92FEFD8(v13, a2 & 1);
      v15 = sub_1A90A597C((uint64_t)&v26);
      if ((v14 & 1) != (v16 & 1))
        goto LABEL_20;
      v10 = v15;
      if ((v14 & 1) != 0)
      {
LABEL_3:
        sub_1A906443C(*(_QWORD *)(*a3 + 56) + 32 * v10, (uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
        sub_1A90A5908((uint64_t)&v26);
        v7 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
        sub_1A908A5DC(v24, v7);
        goto LABEL_4;
      }
    }
    v17 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    v18 = v17[6] + 40 * v10;
    v19 = v26;
    v20 = v27;
    *(_QWORD *)(v18 + 32) = v28;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_1A908A5DC(v25, (_OWORD *)(v17[7] + 32 * v10));
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v17[2] = v23;
LABEL_4:
    v6 += 72;
    a2 = 1;
    if (!--v3)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

uint64_t sub_1A92A191C()
{
  return MEMORY[0x1E0DEAFD0];
}

uint64_t sub_1A92A1928()
{
  return MEMORY[0x1E0DEB488];
}

uint64_t sub_1A92A1934()
{
  return MEMORY[0x1E0DEB0F0];
}

unint64_t sub_1A92A1944()
{
  unint64_t result;

  result = qword_1EEABCD60;
  if (!qword_1EEABCD60)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_1EEABCD60);
  }
  return result;
}

uint64_t sub_1A92A1988()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1A92A1998()
{
  unint64_t result;

  result = qword_1EEABCD68;
  if (!qword_1EEABCD68)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_1EEABCD68);
  }
  return result;
}

uint64_t sub_1A92A19DC()
{
  return MEMORY[0x1E0DED580];
}

unint64_t sub_1A92A19EC()
{
  unint64_t result;

  result = qword_1EEABCD70;
  if (!qword_1EEABCD70)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_1EEABCD70);
  }
  return result;
}

uint64_t sub_1A92A1A30()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1A92A1A3C()
{
  return MEMORY[0x1E0DEA9F8];
}

uint64_t destroy for AnyCodable(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 32);
  while (2)
  {
    if ((v1 - 2) >= 0xC)
    {
      switch(v1)
      {
        case 0:
          return result;
        case 1:
        case 14:
        case 15:
          result = swift_bridgeObjectRelease();
          break;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
          __break(1u);
          break;
        case 16:
          result = __swift_destroy_boxed_opaque_existential_0(result);
          break;
        default:
          v1 = *(_DWORD *)result + 17;
          continue;
      }
    }
    break;
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(a2 + 32);
  while (2)
  {
    switch(v3)
    {
      case 0:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 32) = 0;
        return a1;
      case 1:
        v4 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v4;
        v5 = 1;
        goto LABEL_20;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = 2;
        goto LABEL_22;
      case 3:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = 3;
        goto LABEL_22;
      case 4:
        *(_WORD *)a1 = *(_WORD *)a2;
        v6 = 4;
        goto LABEL_22;
      case 5:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v6 = 5;
        goto LABEL_22;
      case 6:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = 6;
        goto LABEL_22;
      case 7:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = 7;
        goto LABEL_22;
      case 8:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = 8;
        goto LABEL_22;
      case 9:
        *(_WORD *)a1 = *(_WORD *)a2;
        v6 = 9;
        goto LABEL_22;
      case 10:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v6 = 10;
        goto LABEL_22;
      case 11:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = 11;
        goto LABEL_22;
      case 12:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v6 = 12;
        goto LABEL_22;
      case 13:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = 13;
        goto LABEL_22;
      case 14:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v5 = 14;
        goto LABEL_20;
      case 15:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v5 = 15;
LABEL_20:
        *(_BYTE *)(a1 + 32) = v5;
        swift_bridgeObjectRetain();
        break;
      case 16:
        v7 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v7;
        (**(void (***)(uint64_t))(v7 - 8))(a1);
        v6 = 16;
LABEL_22:
        *(_BYTE *)(a1 + 32) = v6;
        break;
      default:
        v3 = *(_DWORD *)a2 + 17;
        continue;
    }
    return a1;
  }
}

uint64_t assignWithCopy for AnyCodable(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = result;
  if (result == a2)
    return v2;
  v4 = *(unsigned __int8 *)(result + 32);
  while (2)
  {
    if ((v4 - 2) < 0xC)
    {
LABEL_5:
      v5 = *(unsigned __int8 *)(a2 + 32);
      while (2)
      {
        switch(v5)
        {
          case 0:
            *(_BYTE *)v2 = *(_BYTE *)a2;
            *(_BYTE *)(v2 + 32) = 0;
            return v2;
          case 1:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            *(_QWORD *)(v2 + 8) = *(_QWORD *)(a2 + 8);
            v8 = 1;
            goto LABEL_20;
          case 2:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v7 = 2;
            goto LABEL_27;
          case 3:
            *(_BYTE *)v2 = *(_BYTE *)a2;
            v7 = 3;
            goto LABEL_27;
          case 4:
            *(_WORD *)v2 = *(_WORD *)a2;
            v7 = 4;
            goto LABEL_27;
          case 5:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v7 = 5;
            goto LABEL_27;
          case 6:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v7 = 6;
            goto LABEL_27;
          case 7:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v7 = 7;
            goto LABEL_27;
          case 8:
            *(_BYTE *)v2 = *(_BYTE *)a2;
            v7 = 8;
            goto LABEL_27;
          case 9:
            *(_WORD *)v2 = *(_WORD *)a2;
            v7 = 9;
            goto LABEL_27;
          case 10:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v7 = 10;
            goto LABEL_27;
          case 11:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v7 = 11;
            goto LABEL_27;
          case 12:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v7 = 12;
            goto LABEL_27;
          case 13:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v7 = 13;
            goto LABEL_27;
          case 14:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v8 = 14;
            goto LABEL_20;
          case 15:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v8 = 15;
LABEL_20:
            *(_BYTE *)(v2 + 32) = v8;
            swift_bridgeObjectRetain();
            break;
          case 16:
            v6 = *(_QWORD *)(a2 + 24);
            *(_QWORD *)(v2 + 24) = v6;
            (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
            v7 = 16;
LABEL_27:
            *(_BYTE *)(v2 + 32) = v7;
            break;
          default:
            v5 = *(_DWORD *)a2 + 17;
            continue;
        }
        return v2;
      }
    }
    switch(v4)
    {
      case 0:
        goto LABEL_5;
      case 1:
      case 14:
      case 15:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
        __break(1u);
        break;
      case 16:
        __swift_destroy_boxed_opaque_existential_0(result);
        goto LABEL_5;
      default:
        v4 = *(_DWORD *)result + 17;
        continue;
    }
    return result;
  }
}

uint64_t assignWithTake for AnyCodable(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v4;
  int v5;
  char v6;
  __int128 v7;

  v2 = result;
  if (result == a2)
    return v2;
  v4 = *(unsigned __int8 *)(result + 32);
  while (2)
  {
    if ((v4 - 2) < 0xC)
    {
LABEL_5:
      v5 = *(unsigned __int8 *)(a2 + 32);
      while (2)
      {
        switch(v5)
        {
          case 0:
            v6 = 0;
            *(_BYTE *)v2 = *(_BYTE *)a2;
            break;
          case 1:
            *(_OWORD *)v2 = *(_OWORD *)a2;
            v6 = 1;
            break;
          case 2:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 2;
            break;
          case 3:
            *(_BYTE *)v2 = *(_BYTE *)a2;
            v6 = 3;
            break;
          case 4:
            *(_WORD *)v2 = *(_WORD *)a2;
            v6 = 4;
            break;
          case 5:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v6 = 5;
            break;
          case 6:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 6;
            break;
          case 7:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 7;
            break;
          case 8:
            *(_BYTE *)v2 = *(_BYTE *)a2;
            v6 = 8;
            break;
          case 9:
            *(_WORD *)v2 = *(_WORD *)a2;
            v6 = 9;
            break;
          case 10:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v6 = 10;
            break;
          case 11:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 11;
            break;
          case 12:
            *(_DWORD *)v2 = *(_DWORD *)a2;
            v6 = 12;
            break;
          case 13:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 13;
            break;
          case 14:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 14;
            break;
          case 15:
            *(_QWORD *)v2 = *(_QWORD *)a2;
            v6 = 15;
            break;
          case 16:
            v7 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)v2 = *(_OWORD *)a2;
            *(_OWORD *)(v2 + 16) = v7;
            v6 = 16;
            break;
          default:
            v5 = *(_DWORD *)a2 + 17;
            continue;
        }
        break;
      }
      *(_BYTE *)(v2 + 32) = v6;
      return v2;
    }
    switch(v4)
    {
      case 0:
        goto LABEL_5;
      case 1:
      case 14:
      case 15:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
        __break(1u);
        break;
      case 16:
        __swift_destroy_boxed_opaque_existential_0(result);
        goto LABEL_5;
      default:
        v4 = *(_DWORD *)result + 17;
        continue;
    }
    return result;
  }
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF0 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 240);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 0x11)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEF)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 240;
    if (a3 >= 0xF0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xF0)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A92A2078(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 0x11)
    return (*(_DWORD *)a1 + 17);
  return result;
}

uint64_t sub_1A92A2094(uint64_t result, unsigned int a2)
{
  if (a2 > 0x10)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 17;
    LOBYTE(a2) = 17;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

uint64_t sub_1A92A20C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A92A2118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v5 = sub_1A906C428(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A930A438();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_1A93F6D80();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v7, v11);
    sub_1A91AB554(v7, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_1A93F6D80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

void AssetBackgroundDelegate.__allocating_init(recordCache:resume:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A90848B0(a1, a2, a3);
}

uint64_t sub_1A92A222C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(v2);
  return a1;
}

uint64_t AssetBackgroundDelegate.start(request:using:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F6D80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE80);
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCE88);
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEABCE90);
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v17);
  sub_1A93F7A58();
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v20 = (void *)qword_1ED2ABF60;
  v38 = (id)qword_1ED2ABF60;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
  sub_1A9066C6C();
  sub_1A9066D74((unint64_t *)&unk_1EEABCEA0, &qword_1EEABCE80, MEMORY[0x1E0C960B0]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v22 = v20;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
  v23 = swift_allocObject();
  v25 = v36;
  v24 = v37;
  *(_QWORD *)(v23 + 16) = v36;
  *(_QWORD *)(v23 + 24) = v24;
  sub_1A9066D74(&qword_1EEABCEB0, &qword_1EEABCE88, MEMORY[0x1E0C95CB8]);
  v26 = v25;
  v27 = v24;
  sub_1A93F7B84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  sub_1A9066D74(&qword_1EEABCEB8, (uint64_t *)&unk_1EEABCE90, MEMORY[0x1E0C95950]);
  v28 = v35;
  v29 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v28);
  return v29;
}

void AssetBackgroundDelegate.activeNotifier(for:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[15];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC000);
  v11[6] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABFC8);
  v11[13] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v11[9] = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[10];
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = v1[15];
  v12 = v1[11];
  v13 = v6;
  v14 = v6;
  v15 = v12;
  v11[14] = v7;
  v16 = v7;
  v17 = v8;
  v11[11] = v9;
  v11[12] = v8;
  v18 = v9;
  v19 = v10;
  v11[10] = v10;
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

uint64_t sub_1A92A26F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[96];

  v9 = sub_1A9066D74(&qword_1ED2ABFC0, v1, MEMORY[0x1E0C95CB8]);
  *(_QWORD *)(v7 - 152) = v3;
  *(_QWORD *)(v7 - 256) = a1;
  *(_QWORD *)(v7 - 272) = v9;
  v10 = sub_1A93F7734();
  *(_QWORD *)(v7 - 224) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)(v7 - 232) = &v37[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2ABFD8);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v14 = MEMORY[0x1AF414014](MEMORY[0x1E0C95708], v10);
  *(_QWORD *)(v7 - 136) = v10;
  *(_QWORD *)(v7 - 128) = v13;
  v15 = MEMORY[0x1E0DEDB38];
  *(_QWORD *)(v7 - 264) = v14;
  *(_QWORD *)(v7 - 120) = v14;
  *(_QWORD *)(v7 - 112) = v15;
  v16 = sub_1A93F7788();
  v17 = sub_1A9066D74(&qword_1ED2ABFD0, &qword_1ED2ABFD8, MEMORY[0x1E0C95D90]);
  v18 = MEMORY[0x1AF414014](MEMORY[0x1E0C95850], v16);
  *(_QWORD *)(v7 - 248) = v12;
  *(_QWORD *)(v7 - 136) = v12;
  *(_QWORD *)(v7 - 128) = v16;
  *(_QWORD *)(v7 - 288) = v17;
  *(_QWORD *)(v7 - 120) = v17;
  *(_QWORD *)(v7 - 112) = v18;
  v19 = sub_1A93F7848();
  *(_QWORD *)(v7 - 280) = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = &v37[-v20];
  *(_QWORD *)(v7 - 136) = v4;
  sub_1A93F7A58();
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v22 = (void *)qword_1ED2ABF60;
  *(_QWORD *)(v7 - 136) = qword_1ED2ABF60;
  v23 = sub_1A93F882C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  sub_1A9066C6C();
  sub_1A9066D74((unint64_t *)&unk_1ED2ABFF0, &qword_1ED2AC000, MEMORY[0x1E0C960B0]);
  sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
  v24 = v22;
  v25 = *(_QWORD *)(v7 - 216);
  sub_1A93F7C80();
  sub_1A905FD54(v6, &qword_1ED2A1C88);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 240) + 8))(v2, v5);
  v26 = swift_allocObject();
  v27 = *(void **)(v7 - 144);
  *(_QWORD *)(v26 + 16) = v27;
  v28 = v27;
  v29 = *(_QWORD *)(v7 - 232);
  v30 = *(_QWORD *)(v7 - 152);
  sub_1A93F7B30();
  swift_release();
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 184) + 8))(v25, v30);
  MEMORY[0x1E0C80A78](v31);
  v32 = *(_QWORD *)(v7 - 168);
  *(_QWORD *)&v37[-48] = *(_QWORD *)(v7 - 160);
  *(_QWORD *)&v37[-40] = v32;
  v33 = *(_QWORD *)(v7 - 192);
  *(_QWORD *)&v37[-32] = *(_QWORD *)(v7 - 176);
  *(_QWORD *)&v37[-24] = v33;
  v34 = *(_QWORD *)(v7 - 208);
  *(_QWORD *)&v37[-16] = *(_QWORD *)(v7 - 200);
  *(_QWORD *)&v37[-8] = v34;
  swift_getKeyPath();
  sub_1A93F78E4();
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 224) + 8))(v29, v10);
  MEMORY[0x1AF414014](MEMORY[0x1E0C95B78], v19);
  v35 = sub_1A93F7B24();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 280) + 8))(v21, v19);
  return v35;
}

id sub_1A92A2AD4()
{
  if (qword_1ED2A93C0 != -1)
    swift_once();
  qword_1ED2ABF60 = qword_1ED2A93B8;
  return (id)qword_1ED2A93B8;
}

uint64_t AssetBackgroundDelegate.resume.getter()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80));
  swift_retain();
  return v1;
}

uint64_t sub_1A92A2B64@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0x88));
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A9055748;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1A90858C0(v4);
}

uint64_t sub_1A92A2C08(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A9055748;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a2) + 0x88));
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1A90858C0(v3);
  return sub_1A9085818(v8);
}

uint64_t AssetBackgroundDelegate.backgroundCompletion.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88));
  swift_beginAccess();
  v2 = *v1;
  sub_1A90858C0(*v1);
  return v2;
}

void AssetBackgroundDelegate.init(recordCache:resume:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A90848F8(a1, a2, a3);
}

uint64_t sub_1A92A2D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(v1);
  return a1;
}

void sub_1A92A2D9C()
{
  swift_beginAccess();
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

uint64_t sub_1A92A2E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  MEMORY[0x1AF411C8C](&v3, v1, MEMORY[0x1E0DEB418], a1, MEMORY[0x1E0DEB428]);
  return swift_endAccess();
}

uint64_t sub_1A92A2E4C()
{
  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  return swift_release();
}

void sub_1A92A2EB4(uint64_t a1@<X0>, _QWORD *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  char v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  os_signpost_id_t v36;
  uint64_t v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  id v47;
  char isUniquelyReferenced_nonNull_native;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  int v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  char *v59;
  id v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];

  v60 = a3;
  v62 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v59 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - v12;
  v14 = sub_1A93F6D80();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  v21 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0xA0);
  v61 = a2;
  v22 = (_QWORD *)((char *)a2 + v21);
  swift_beginAccess();
  v23 = *v22;
  if (*(_QWORD *)(*v22 + 16) && (v24 = sub_1A912E3B4(a1), (v25 & 1) != 0))
  {
    v26 = *(id *)(*(_QWORD *)(v23 + 56) + 8 * v24);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    if (qword_1ED2ABE88 != -1)
      swift_once();
    v58 = v17;
    v27 = sub_1A93F762C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED2ABF70);
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v57(v20, a1, v14);
    sub_1A93F75F0();
    v28 = sub_1A93F7620();
    v55 = sub_1A93F894C();
    v29 = sub_1A93F8A6C();
    v56 = v15;
    if ((v29 & 1) != 0)
    {
      v53 = v9;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v59, v13, v63);
      v30 = swift_slowAlloc();
      v54 = v8;
      v31 = (uint8_t *)v30;
      v51 = swift_slowAlloc();
      v65[0] = v51;
      v52 = v13;
      *(_DWORD *)v31 = 136315138;
      v32 = sub_1A93F6D20();
      v64 = sub_1A906436C(v32, v33, v65);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v15 + 8);
      v34(v20, v14);
      v35 = v59;
      v36 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v28, (os_signpost_type_t)v55, v36, "Start Asset Download", "%s", v31, 0xCu);
      v37 = v51;
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v37, -1, -1);
      v38 = v31;
      v8 = v54;
      MEMORY[0x1AF41411C](v38, -1, -1);

      v39 = *(void (**)(char *, uint64_t))(v53 + 8);
      v40 = v63;
      v39(v52, v63);
      v39(v35, v40);
    }
    else
    {

      v41 = v13;
      v34 = *(void (**)(char *, uint64_t))(v15 + 8);
      v34(v20, v14);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v63);
    }
    v42 = (void *)sub_1A93F6D2C();
    v43 = a1;
    v44 = objc_msgSend(v60, sel_downloadTaskWithRequest_, v42);

    v46 = v57;
    v45 = (uint64_t)v58;
    v57(v58, v43, v14);
    v47 = objc_msgSend(v44, sel_taskIdentifier);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = *v22;
    *v22 = 0x8000000000000000;
    sub_1A930F2CC((uint64_t)v47, v45, isUniquelyReferenced_nonNull_native);
    *v22 = v64;
    swift_bridgeObjectRelease();
    v34((char *)v45, v14);
    swift_endAccess();
    v49 = objc_msgSend(v44, sel_taskIdentifier);
    v46(v8, v43, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v8, 0, 1, v14);
    swift_beginAccess();
    sub_1A927C9B0((uint64_t)v8, (uint64_t)v49);
    swift_endAccess();
    objc_msgSend(v44, sel_resume);
    v26 = objc_msgSend(v44, sel_taskIdentifier);

  }
  *v62 = v26;
}

uint64_t AssetBackgroundDelegate.set(backgroundCompletion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1A93F7D58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v17[0] = qword_1ED2ABF60;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1A92A78BC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_46;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  swift_retain();
  sub_1A93F7D88();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1A92A35EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x88));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a2;
  v5[1] = a3;
  sub_1A9085818(v6);
  return swift_retain();
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:didCreateTask:)(NSURLSession _, NSURLSessionTask didCreateTask)
{
  sub_1A92A78C8(didCreateTask.super.isa);
}

void sub_1A92A3668(int a1, id a2)
{
  objc_msgSend(a2, sel_taskIdentifier);
  swift_beginAccess();
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

void sub_1A92A3714(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t v22;
  uint64_t v23;

  MEMORY[0x1AF411C8C](&a20, &a19, v22, MEMORY[0x1E0DEB418]);
  if (a20)
  {
    swift_endAccess();
    v23 = swift_retain();
    sub_1A92A884C(v23);
    type metadata accessor for AssetBackgroundDelegate.BackgroundDownloadError();
  }
  swift_endAccess();
  objc_msgSend(a11, sel_taskIdentifier);
  sub_1A92A3890();
}

uint64_t sub_1A92A37E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v42[24];

  v38 = objc_msgSend(v36, *(SEL *)(v37 + 48));
  v39 = objc_msgSend(v36, *(SEL *)(v37 + 48));
  sub_1A92A3A9C(v42);
  v42[9] = sub_1A92A3C0C((uint64_t)v39, (uint64_t)v42);
  v42[10] = v40;
  v42[7] = (uint64_t)v38;
  swift_beginAccess();
  sub_1A93F7F5C();
  sub_1A93F7F80();
  return swift_endAccess();
}

void sub_1A92A3890()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1A93F6D80();
  MEMORY[0x1E0C80A78](v1);
  swift_beginAccess();
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

uint64_t sub_1A92A3978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A93F7F5C();
  sub_1A93F7F14();
  swift_endAccess();
  sub_1A92A884C(*(_QWORD *)(v5 - 160));
  swift_beginAccess();
  sub_1A92A2118(v3, v2);
  swift_endAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v0) == 1)
    return sub_1A905FD54(v2, &qword_1ED2ABE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v0);
  swift_beginAccess();
  sub_1A9130EA0(v1);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
}

uint64_t sub_1A92A3A9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  uint64_t v18;

  v2 = sub_1A93F73E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2AD108 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2AD0F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_1A93F8784();
  sub_1A93F73D4();
  v12 = sub_1A93F73A4();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = type metadata accessor for LoggerTrace(0);
  a1[3] = v15;
  a1[4] = (uint64_t)&protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  *boxed_opaque_existential_1 = v12;
  boxed_opaque_existential_1[1] = v14;
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v15 + 20), v9, v6);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v15 + 24)) = v11;
  return result;
}

uint64_t sub_1A92A3C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  __int128 v8;
  _BYTE v9[26];
  _BYTE v10[40];
  _BYTE v11[40];
  _OWORD v12[4];
  _OWORD v13[2];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABFE0);
  swift_allocObject();
  v3 = sub_1A93F798C();
  sub_1A905DC3C(a2, (uint64_t)v11);
  *(_QWORD *)&v12[0] = 0x203A4B534154;
  *((_QWORD *)&v12[0] + 1) = 0xE600000000000000;
  sub_1A93F9060();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v4 = v12[0];
  sub_1A907C394((uint64_t)v11, (uint64_t)v10);
  *(_QWORD *)&v7[0] = v3;
  sub_1A907C394((uint64_t)v10, (uint64_t)v7 + 8);
  *(_QWORD *)&v8 = "NETWORK: Download";
  *((_QWORD *)&v8 + 1) = 17;
  v9[0] = 2;
  v9[24] = 1;
  v12[0] = v4;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v5 = v12[0];
  sub_1A905FD54((uint64_t)v10, &qword_1ED2AD0C0);
  swift_release();
  *(_OWORD *)&v9[8] = v5;
  v9[25] = 0;
  v12[2] = v7[2];
  v12[3] = v8;
  v12[0] = v7[0];
  v12[1] = v7[1];
  v13[0] = *(_OWORD *)v9;
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)&v9[10];
  sub_1A905FD54((uint64_t)v11, &qword_1ED2AD0C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCFC0);
  sub_1A9066D74(&qword_1EEABCFC8, &qword_1EEABCFC0, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  sub_1A93F7B24();
  __swift_destroy_boxed_opaque_existential_0(a2);
  sub_1A905FD54((uint64_t)v12, &qword_1EEABCFC0);
  return v3;
}

void sub_1A92A3DDC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_1A92A78C8(v7);

}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:taskIsWaitingForConnectivity:)(NSURLSession _, NSURLSessionTask taskIsWaitingForConnectivity)
{
  sub_1A92A7C0C(taskIsWaitingForConnectivity.super.isa);
}

void sub_1A92A3E48(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_1A92A7C0C(v7);

}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:downloadTask:didResumeAtOffset:expectedTotalBytes:)(NSURLSession _, NSURLSessionDownloadTask downloadTask, Swift::Int64 didResumeAtOffset, Swift::Int64 expectedTotalBytes)
{
  sub_1A92A7D5C(downloadTask.super.super.isa, didResumeAtOffset, expectedTotalBytes);
}

void sub_1A92A3EB4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  v12 = a1;
  sub_1A92A7D5C(v11, a5, a6);

}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:)(NSURLSession _, NSURLSessionDownloadTask downloadTask, Swift::Int64 didWriteData, Swift::Int64 totalBytesWritten, Swift::Int64 totalBytesExpectedToWrite)
{
  sub_1A92A8118(downloadTask.super.super.isa, totalBytesWritten, totalBytesExpectedToWrite);
}

void sub_1A92A3F40(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = type metadata accessor for DownloadPhase();
  objc_msgSend(a2, sel_taskIdentifier, MEMORY[0x1E0C80A78](v3));
  swift_beginAccess();
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

uint64_t sub_1A92A4014(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x1AF411C8C](v3 - 112, v2, MEMORY[0x1E0DEB418], a1, MEMORY[0x1E0DEB428]);
  v5 = *(_QWORD *)(v3 - 104);
  if (!v5)
    return swift_endAccess();
  swift_endAccess();
  *v1 = v4;
  swift_storeEnumTagMultiPayload();
  sub_1A93F7974();
  sub_1A92A884C(v5);
  return sub_1A92A8810((uint64_t)v1);
}

void sub_1A92A40A8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11;
  id v12;
  id v13;

  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_1A92A8118(v12, a6, a7);

}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSessionDidFinishEvents(forBackgroundURLSession:)(NSURLSession forBackgroundURLSession)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  void *v42;
  void (*v43)();
  uint64_t v44;

  v2 = v1;
  v4 = *v2;
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *MEMORY[0x1E0DEEDD8];
  v7 = sub_1A93F7D58();
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F7DB8();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v12 = sub_1A93F7698();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED2A3F08);
  v13 = forBackgroundURLSession.super.isa;
  v14 = sub_1A93F7674();
  v15 = sub_1A93F8784();
  if (os_log_type_enabled(v14, v15))
  {
    v31 = v6;
    v32 = v4;
    v33 = v7;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v38 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = -[objc_class configuration](v13, sel_configuration);
    v19 = objc_msgSend(v18, sel_identifier);

    if (v19)
    {
      v20 = sub_1A93F8040();
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    aBlock = v20;
    v40 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A92E0);
    v23 = sub_1A93F8094();
    aBlock = sub_1A906436C(v23, v24, &v38);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v14, v15, "Did finish events for background session: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v17, -1, -1);
    MEMORY[0x1AF41411C](v16, -1, -1);

    v4 = v32;
    v7 = v33;
    v6 = v31;
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  }
  else
  {

  }
  v25 = qword_1ED2ABF68;
  v26 = *(id *)((char *)v2 + *(_QWORD *)((*v5 & *v2) + 0xB8));
  if (v25 != -1)
    swift_once();
  v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = *(_OWORD *)((v6 & v4) + 0x50);
  *(_QWORD *)(v28 + 32) = *(_QWORD *)((v6 & v4) + 0x60);
  *(_OWORD *)(v28 + 40) = *(_OWORD *)((v6 & v4) + 0x68);
  *(_QWORD *)(v28 + 56) = *(_QWORD *)((v6 & v4) + 0x78);
  *(_QWORD *)(v28 + 64) = v27;
  v43 = sub_1A92A83AC;
  v44 = v28;
  aBlock = MEMORY[0x1E0C809B0];
  v40 = 1107296256;
  v41 = sub_1A908A91C;
  v42 = &block_descriptor_15_1;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  sub_1A93F7D88();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v30 = v36;
  sub_1A93F8B5C();
  sub_1A93F87FC();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v7);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  swift_release();
  swift_release();
}

void sub_1A92A45A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void (**v4)(void);
  void (*v5)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1AF41420C](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (void (**)(void))((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x88));
    swift_beginAccess();
    v5 = *v4;
    if (*v4)
    {
      sub_1A90858C0((uint64_t)v5);

      v5();
      sub_1A9085818((uint64_t)v5);
    }
    else
    {

    }
  }
}

void sub_1A92A4658(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  AssetBackgroundDelegate.urlSessionDidFinishEvents(forBackgroundURLSession:)((NSURLSession)v4);

}

void AssetBackgroundDelegate.urlSession(_:task:didCompleteWithError:)(void *a1, void *a2, void *a3)
{
  void *v3;
  uint64_t v7;
  void (**v8)(_QWORD, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  __int128 v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (**v58)(_QWORD, uint64_t);
  uint64_t v59;
  uint64_t aBlock[6];
  _OWORD v61[2];
  uint64_t v62;

  v7 = sub_1A93F7D58();
  v8 = *(void (***)(_QWORD, uint64_t))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v54 = v3;
    v55 = v13;
    v56 = v12;
    v58 = v8;
    v16 = a3;
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v17 = sub_1A93F7698();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED2A3F08);
    v18 = a3;
    v19 = a3;
    v20 = a2;
    v21 = sub_1A93F7674();
    v22 = sub_1A93F8784();
    v23 = os_log_type_enabled(v21, v22);
    v24 = &selRef_updatedProperties;
    v57 = v10;
    if (v23)
    {
      v25 = swift_slowAlloc();
      v53 = v7;
      v26 = v25;
      v27 = swift_slowAlloc();
      v52 = a1;
      v28 = v27;
      aBlock[0] = v27;
      *(_DWORD *)v26 = 134218242;
      *(_QWORD *)&v61[0] = objc_msgSend(v20, sel_taskIdentifier);
      sub_1A93F8AA8();

      *(_WORD *)(v26 + 12) = 2080;
      *(_QWORD *)&v61[0] = a3;
      v29 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v30 = sub_1A93F8094();
      *(_QWORD *)&v61[0] = sub_1A906436C(v30, v31, aBlock);
      sub_1A93F8AA8();
      v24 = &selRef_updatedProperties;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v21, v22, "[%ld] Completed with error: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      v32 = v28;
      a1 = v52;
      MEMORY[0x1AF41411C](v32, -1, -1);
      v33 = v26;
      v7 = v53;
      MEMORY[0x1AF41411C](v33, -1, -1);
    }
    else
    {

    }
    v38 = objc_msgSend(a1, sel_configuration);
    v39 = objc_msgSend(v38, sel_identifier);

    if (v39)
    {
      v40 = sub_1A93F8040();
      v42 = v41;

    }
    else
    {
      v40 = 0;
      v42 = 0;
    }
    v43 = objc_msgSend(v20, v24[6]);
    swift_getAssociatedTypeWitness();
    DownloadTaskIdentifier.init(session:identifier:)(v40, v42, (uint64_t)v43, v61);
    if (qword_1ED2ABF68 != -1)
      swift_once();
    v44 = swift_allocObject();
    v45 = v61[1];
    *(_OWORD *)(v44 + 40) = v61[0];
    v46 = v54;
    *(_QWORD *)(v44 + 16) = v54;
    *(_QWORD *)(v44 + 24) = v20;
    *(_QWORD *)(v44 + 32) = a3;
    *(_OWORD *)(v44 + 56) = v45;
    *(_QWORD *)(v44 + 72) = v62;
    aBlock[4] = (uint64_t)sub_1A92A840C;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A908A91C;
    aBlock[3] = (uint64_t)&block_descriptor_21_2;
    v47 = _Block_copy(aBlock);
    v48 = a3;
    v49 = v20;
    v50 = v46;
    sub_1A92A841C((uint64_t)v61);
    sub_1A93F7D88();
    v59 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    v51 = v57;
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v15, v51, v47);
    _Block_release(v47);
    sub_1A92A8460((uint64_t)v61);

    ((void (**)(char *, uint64_t))v58)[1](v51, v7);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
    swift_release();
  }
  else
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v34 = sub_1A93F7698();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED2A3F08);
    v58 = a2;
    v35 = sub_1A93F7674();
    v36 = sub_1A93F8784();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v37 = 134217984;
      aBlock[0] = (uint64_t)objc_msgSend(v58, sel_taskIdentifier);
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v35, v36, "[%ld] Completed without error", v37, 0xCu);
      MEMORY[0x1AF41411C](v37, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1A92A4CE0(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  __int128 v16;
  _QWORD v17[14];
  __int128 v18;
  __int128 v19;
  id v20;

  v17[9] = a4;
  v17[7] = a3;
  v5 = *MEMORY[0x1E0DEEDD8] & *a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v6);
  v17[3] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v17[4] = (char *)v17 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v10);
  v11 = *(_QWORD *)(v5 + 80);
  v12 = *(_QWORD *)(v5 + 88);
  swift_getAssociatedTypeWitness();
  v13 = sub_1A93F8A90();
  v17[5] = *(_QWORD *)(v13 - 8);
  v17[6] = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v17[10] = a2;
  v15 = objc_msgSend(a2, sel_taskIdentifier, v14);
  swift_beginAccess();
  v20 = v15;
  v17[12] = v11;
  v17[13] = v12;
  v16 = *(_OWORD *)(v5 + 112);
  v18 = *(_OWORD *)(v5 + 96);
  v19 = v16;
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

void sub_1A92A4E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  __int128 v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;

  MEMORY[0x1AF411C8C](v9 - 136, v5, MEMORY[0x1E0DEB418], a1, MEMORY[0x1E0DEB428]);
  v10 = *(_QWORD *)(v9 - 128);
  *(_QWORD *)(v9 - 224) = v8;
  if (v10)
  {
    swift_endAccess();
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A3F08);
    v12 = *(void **)(v9 - 208);
    v13 = v12;
    v14 = sub_1A93F7674();
    v15 = sub_1A93F8784();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      *(_QWORD *)(v9 - 192) = -[NSObject taskIdentifier](v13, sel_taskIdentifier);
      v12 = *(void **)(v9 - 208);
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v14, v15, "[%ld] Download completed while still foregrounded, notifying subject", v16, 0xCu);
      MEMORY[0x1AF41411C](v16, -1, -1);
    }
    else
    {

      v14 = v13;
    }

    v32 = *(void **)(v9 - 232);
    *(_QWORD *)(v9 - 192) = v32;
    v33 = v32;
    sub_1A93F7968();
    swift_release();
    swift_release();

    v34 = *(_QWORD *)(v9 - 224);
    v21 = *(_QWORD *)(v9 - 216);
  }
  else
  {
    *(_QWORD *)(v9 - 272) = v2;
    swift_endAccess();
    v17 = *(_QWORD *)(v9 - 216);
    v18 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)(v9 - 192) = *(_OWORD *)v17;
    *(_OWORD *)(v9 - 176) = v18;
    *(_QWORD *)(v9 - 160) = *(_QWORD *)(v17 + 32);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
    *(_QWORD *)(v9 - 232) = v1;
    v19(v9 - 192, v1, v8);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v7, 1, v4);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 248) + 8))(v7, *(_QWORD *)(v9 - 240));
    v21 = v17;
    if (v20 == 1)
    {
      v12 = *(void **)(v9 - 208);
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v22 = sub_1A93F7698();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED2A3F08);
      v23 = v12;
      v24 = sub_1A93F7674();
      v25 = sub_1A93F879C();
      if (os_log_type_enabled(v24, (os_log_type_t)v25))
      {
        *(_QWORD *)(v9 - 280) = v6;
        *(_DWORD *)(v9 - 248) = v25;
        *(_QWORD *)(v9 - 240) = v3;
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)(v9 - 192) = v27;
        *(_DWORD *)v26 = 134218242;
        *(_QWORD *)(v9 - 112) = objc_msgSend(v23, sel_taskIdentifier);
        sub_1A93F8AA8();
        *(_WORD *)(v26 + 12) = 2080;
        v28 = objc_msgSend(v23, sel_originalRequest);
        if (v28)
        {
          v29 = v28;
          v30 = *(_QWORD *)(v9 - 264);
          sub_1A93F6D44();

          v31 = sub_1A93F6D80();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
        }
        else
        {
          v31 = sub_1A93F6D80();
          v30 = *(_QWORD *)(v9 - 264);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
        }
        v40 = *(_QWORD *)(v9 - 256);
        sub_1A92A85A0(v30, v40);
        sub_1A93F6D80();
        v41 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v40, 1, v31) == 1)
        {
          sub_1A905FD54(v40, &qword_1ED2ABE60);
          v42 = sub_1A93F726C();
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(*(_QWORD *)(v9 - 272), 1, 1, v42);
        }
        else
        {
          *(_QWORD *)(v9 - 264) = v27;
          sub_1A93F6D5C();
          v27 = *(_QWORD *)(v9 - 264);
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v31);
        }
        v43 = sub_1A93F8094();
        *(_QWORD *)(v9 - 112) = sub_1A906436C(v43, v44, (uint64_t *)(v9 - 192));
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v24, (os_log_type_t)*(_DWORD *)(v9 - 248), "[%ld] Failed download task with no notification endpoint: %s)", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v27, -1, -1);
        MEMORY[0x1AF41411C](v26, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v12 = *(void **)(v9 - 208);
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v35 = sub_1A93F7698();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED2A3F08);
      v36 = v12;
      v37 = sub_1A93F7674();
      v38 = sub_1A93F8784();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v39 = 134217984;
        *(_QWORD *)(v9 - 192) = objc_msgSend(v36, sel_taskIdentifier);
        v12 = *(void **)(v9 - 208);
        sub_1A93F8AA8();

        _os_log_impl(&dword_1A904E000, v37, v38, "[%ld] Download completed with a background record, skipping due to error", v39, 0xCu);
        MEMORY[0x1AF41411C](v39, -1, -1);

      }
      else
      {

      }
    }
    v1 = *(_QWORD *)(v9 - 232);
    v34 = *(_QWORD *)(v9 - 224);
  }
  v45 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v9 - 192) = *(_OWORD *)v21;
  *(_OWORD *)(v9 - 176) = v45;
  *(_QWORD *)(v9 - 160) = *(_QWORD *)(v21 + 32);
  (*(void (**)(uint64_t, uint64_t))(v34 + 48))(v9 - 192, v1);
  objc_msgSend(v12, sel_taskIdentifier);
  sub_1A92A3890();
}

void sub_1A92A5524(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = a5;
  AssetBackgroundDelegate.urlSession(_:task:didCompleteWithError:)(v8, v9, a5);

}

uint64_t AssetBackgroundDelegate.urlSession(_:downloadTask:didFinishDownloadingTo:)(void *a1, void *a2, char *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void *v58;
  unint64_t v59;
  unint64_t v60;
  void *v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  id v66;
  void *v67;
  void *v68;
  unsigned int v69;
  id v70;
  id v71;
  void *v72;
  unsigned __int8 v73;
  void *v74;
  NSObject *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  id v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  void *v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  void *v110;
  id v111;
  char *v112;
  __int128 v113;
  void *v114;
  id v115;
  id v116;
  id v117;
  char *v118;
  char *v119;
  uint64_t v120;
  _QWORD v122[2];
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  id v130;
  uint64_t v131;
  void *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, char *, uint64_t);
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  _QWORD *v142;
  char *v143;
  char *v144;
  id v145;
  uint64_t v146;
  id aBlock;
  unint64_t v148;
  uint64_t (*v149)(uint64_t);
  void *v150;
  void (*v151)();
  char *v152;
  _OWORD v153[2];
  uint64_t v154;
  uint64_t v155;

  v130 = a1;
  v155 = *MEMORY[0x1E0C80C00];
  v6 = *v3;
  v7 = *MEMORY[0x1E0DEEDD8];
  v138 = sub_1A93F7D58();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1A93F7DB8();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v133 = (char *)v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1A93F73E0();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v124 = (char *)v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v122 - v15;
  v141 = (void (*)(char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v141);
  v129 = (char *)v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A93F726C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v143 = (char *)v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v144 = (char *)v122 - v22;
  v131 = v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v122 - v25;
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v142 = (_QWORD *)(v7 & v6);
  v123 = sub_1A93F7698();
  v27 = __swift_project_value_buffer(v123, (uint64_t)qword_1ED2A3F08);
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
  v127 = a3;
  v139 = v28;
  v28((uint64_t)v26, a3, v18);
  v29 = a2;
  v122[1] = v27;
  v30 = sub_1A93F7674();
  v31 = sub_1A93F8784();
  v32 = os_log_type_enabled(v30, v31);
  v140 = v19;
  v145 = v29;
  if (v32)
  {
    v128 = v18;
    v33 = swift_slowAlloc();
    v122[0] = swift_slowAlloc();
    aBlock = (id)v122[0];
    *(_DWORD *)v33 = 134218498;
    *(_QWORD *)&v153[0] = objc_msgSend(v29, sel_taskIdentifier);
    sub_1A93F8AA8();
    *(_WORD *)(v33 + 12) = 2080;
    v34 = objc_msgSend(v29, sel_originalRequest);
    if (v34)
    {
      v35 = v34;
      sub_1A93F6D44();

      v36 = sub_1A93F6D80();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v13, 0, 1, v36);
    }
    else
    {
      v36 = sub_1A93F6D80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v13, 1, 1, v36);
    }
    v37 = v129;
    sub_1A92A85A0((uint64_t)v13, (uint64_t)v16);
    sub_1A93F6D80();
    v38 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v16, 1, v36) == 1)
    {
      sub_1A905FD54((uint64_t)v16, &qword_1ED2ABE60);
      v39 = v140;
      v40 = v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v37, 1, 1, v128);
    }
    else
    {
      sub_1A93F6D5C();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v36);
      v40 = v128;
      v39 = v140;
    }
    v41 = sub_1A93F8094();
    *(_QWORD *)&v153[0] = sub_1A906436C(v41, v42, (uint64_t *)&aBlock);
    sub_1A93F8AA8();
    v43 = v145;

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2080;
    sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v44 = sub_1A93F9060();
    *(_QWORD *)&v153[0] = sub_1A906436C(v44, v45, (uint64_t *)&aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();
    v141 = *(void (**)(char *, uint64_t))(v39 + 8);
    v141(v26, v40);
    _os_log_impl(&dword_1A904E000, v30, v31, "[%ld] Finished downloading %s: %s", (uint8_t *)v33, 0x20u);
    v46 = v122[0];
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v46, -1, -1);
    MEMORY[0x1AF41411C](v33, -1, -1);

    v18 = v40;
  }
  else
  {

    v141 = *(void (**)(char *, uint64_t))(v19 + 8);
    v141(v26, v18);

  }
  v47 = objc_msgSend(v130, sel_configuration);
  v48 = objc_msgSend(v47, sel_identifier);

  v49 = v144;
  if (v48)
  {
    v50 = sub_1A93F8040();
    v52 = v51;

  }
  else
  {
    v50 = 0;
    v52 = 0;
  }
  v53 = objc_msgSend(v145, sel_taskIdentifier);
  v54 = v142;
  v55 = (char *)v142[11];
  v130 = (id)v142[10];
  swift_getAssociatedTypeWitness();
  v56 = v54[15];
  v129 = (char *)v54[14];
  v128 = v56;
  DownloadTaskIdentifier.init(session:identifier:)(v50, v52, (uint64_t)v53, v153);
  aBlock = 0;
  v148 = 0xE000000000000000;
  v57 = v124;
  sub_1A93F73D4();
  v58 = (void *)sub_1A93F73A4();
  v60 = v59;
  (*(void (**)(char *, uint64_t))(v125 + 8))(v57, v126);
  swift_bridgeObjectRelease();
  aBlock = v58;
  v148 = v60;
  sub_1A93F810C();
  sub_1A93F7194();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  v61 = (void *)objc_opt_self();
  v62 = objc_msgSend(v61, sel_defaultManager);
  v63 = objc_msgSend(v62, sel_temporaryDirectory);

  v64 = v143;
  sub_1A93F7200();

  v65 = v49;
  sub_1A93F71B8();
  swift_bridgeObjectRelease();
  v141(v64, v18);
  sub_1A9066CA8(&qword_1EEAB8218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  if ((sub_1A93F8004() & 1) == 0)
  {
    v66 = objc_msgSend(v61, sel_defaultManager);
    v67 = (void *)sub_1A93F71A0();
    v68 = (void *)sub_1A93F71A0();
    aBlock = 0;
    v69 = objc_msgSend(v66, sel_copyItemAtURL_toURL_error_, v67, v68, &aBlock);

    if (!v69)
    {
      v79 = aBlock;
      v74 = (void *)sub_1A93F7128();

      goto LABEL_25;
    }
    v70 = aBlock;
    v65 = v49;
  }
  v71 = objc_msgSend(v61, sel_defaultManager);
  sub_1A93F7224();
  v72 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v73 = objc_msgSend(v71, sel_fileExistsAtPath_, v72);

  if ((v73 & 1) != 0)
  {
    v74 = 0;
    goto LABEL_34;
  }
  v75 = v145;
  v76 = sub_1A93F7674();
  v77 = sub_1A93F87A8();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v78 = 134217984;
    aBlock = -[NSObject taskIdentifier](v75, sel_taskIdentifier);
    v65 = v49;
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v76, v77, "[%ld] SOMETHING IS CRITICALLY WRONG, Moved file is missing", v78, 0xCu);
    MEMORY[0x1AF41411C](v78, -1, -1);
  }
  else
  {

    v76 = v75;
  }

  type metadata accessor for FileError();
  sub_1A9066CA8((unint64_t *)&qword_1EEABCEC0, (uint64_t (*)(uint64_t))type metadata accessor for FileError, (uint64_t)&protocol conformance descriptor for FileError);
  v74 = (void *)swift_allocError();
  v81 = v80;
  v139(v80, v65, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v140 + 56))(v81, 0, 2, v18);
LABEL_25:
  swift_willThrow();
  if (qword_1ED2AD108 != -1)
    swift_once();
  v127 = v55;
  __swift_project_value_buffer(v123, (uint64_t)qword_1ED2AD0F0);
  v82 = v145;
  v83 = v74;
  v84 = v82;
  v85 = v74;
  v86 = sub_1A93F7674();
  v87 = sub_1A93F879C();
  if (os_log_type_enabled(v86, v87))
  {
    v88 = swift_slowAlloc();
    v89 = (void *)swift_slowAlloc();
    aBlock = v89;
    *(_DWORD *)v88 = 134218242;
    v90 = objc_msgSend(v84, sel_taskIdentifier);

    v146 = (uint64_t)v90;
    sub_1A93F8AA8();

    *(_WORD *)(v88 + 12) = 2080;
    v146 = (uint64_t)v74;
    v91 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v92 = sub_1A93F8094();
    v146 = sub_1A906436C(v92, v93, (uint64_t *)&aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v86, v87, "[%ld] Failed to copy asset from URLSession directory to tmp directory: %s", (uint8_t *)v88, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v89, -1, -1);
    MEMORY[0x1AF41411C](v88, -1, -1);
  }
  else
  {

  }
  v94 = v74;
  v95 = v74;
  v96 = sub_1A93F7674();
  v97 = sub_1A93F879C();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc();
    v99 = (void *)swift_slowAlloc();
    aBlock = v99;
    *(_DWORD *)v98 = 136315138;
    v146 = (uint64_t)v74;
    v100 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    v101 = sub_1A93F8094();
    v146 = sub_1A906436C(v101, v102, (uint64_t *)&aBlock);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A904E000, v96, v97, "%s", v98, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v99, -1, -1);
    MEMORY[0x1AF41411C](v98, -1, -1);
  }
  else
  {

  }
  v65 = v144;
  v55 = v127;
LABEL_34:
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v103 = v143;
  v139((uint64_t)v143, v65, v18);
  v104 = v140;
  v105 = (*(unsigned __int8 *)(v140 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
  v106 = (v131 + v105 + 7) & 0xFFFFFFFFFFFFFFF8;
  v107 = (char *)swift_allocObject();
  *((_QWORD *)v107 + 2) = v130;
  *((_QWORD *)v107 + 3) = v55;
  v108 = v142;
  *((_QWORD *)v107 + 4) = v142[12];
  v109 = v129;
  *((_QWORD *)v107 + 5) = v108[13];
  *((_QWORD *)v107 + 6) = v109;
  v110 = v132;
  *((_QWORD *)v107 + 7) = v128;
  *((_QWORD *)v107 + 8) = v110;
  v111 = v145;
  *((_QWORD *)v107 + 9) = v145;
  *((_QWORD *)v107 + 10) = v74;
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(&v107[v105], v103, v18);
  v112 = &v107[v106];
  v113 = v153[1];
  *(_OWORD *)v112 = v153[0];
  *((_OWORD *)v112 + 1) = v113;
  *((_QWORD *)v112 + 4) = v154;
  v151 = sub_1A92A8558;
  v152 = v107;
  aBlock = (id)MEMORY[0x1E0C809B0];
  v148 = 1107296256;
  v149 = sub_1A908A91C;
  v150 = &block_descriptor_27_2;
  v114 = _Block_copy(&aBlock);
  v115 = v111;
  v116 = v110;
  sub_1A92A841C((uint64_t)v153);
  v117 = v74;
  v118 = v133;
  sub_1A93F7D88();
  v146 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v119 = v136;
  v120 = v138;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v118, v119, v114);
  _Block_release(v114);
  sub_1A92A8460((uint64_t)v153);

  (*(void (**)(char *, uint64_t))(v137 + 8))(v119, v120);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v118, v135);
  v141(v144, v18);
  return swift_release();
}

void sub_1A92A65AC(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v42 = a5;
  v39 = a3;
  v40 = a4;
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *a1);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  MEMORY[0x1E0C80A78](v7);
  v27[3] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v27[4] = (char *)v27 - v10;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v28);
  v27[5] = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2ABFB0);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for DownloadPhase();
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v6[10];
  v17 = v6[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = sub_1A93F8A90();
  v36 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v37 = (char *)v27 - v19;
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v41 = a2;
  v22 = objc_msgSend(a2, sel_taskIdentifier, v21);
  swift_beginAccess();
  v49 = v22;
  v23 = v6[12];
  v25 = v6[14];
  v24 = v6[15];
  v26 = v6[13];
  v43 = v16;
  v44 = v17;
  v45 = v23;
  v46 = v26;
  v47 = v25;
  v48 = v24;
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
}

void sub_1A92A6880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  id v52;
  void *v53;
  unsigned __int8 v54;
  char **v55;
  NSObject *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  NSObject *v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;

  MEMORY[0x1AF411C8C](v11 - 136, v10, MEMORY[0x1E0DEB418], a1, MEMORY[0x1E0DEB428]);
  v12 = *(_QWORD *)(v11 - 128);
  *(_QWORD *)(v11 - 232) = v8;
  *(_QWORD *)(v11 - 224) = v1;
  if (!v12)
  {
    v17 = *(_QWORD *)(v11 - 272);
    *(_QWORD *)(v11 - 376) = v4;
    *(_QWORD *)(v11 - 288) = v6;
    *(_QWORD *)(v11 - 280) = v3;
    *(_QWORD *)(v11 - 248) = v2;
    *(_QWORD *)(v11 - 368) = v9;
    swift_endAccess();
    v18 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v19 = *(_QWORD *)(v11 - 208);
    v20 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)(v11 - 192) = *(_OWORD *)v19;
    *(_OWORD *)(v11 - 176) = v20;
    *(_QWORD *)(v11 - 160) = *(_QWORD *)(v19 + 32);
    v21 = *(_QWORD *)(v11 - 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11 - 192, v1, v8);
    v22 = *(_QWORD *)(v11 - 256);
    v23 = v5;
    v24 = v18;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v7) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v17 + 8))(v21, *(_QWORD *)(v11 - 328));
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v25 = sub_1A93F7698();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED2A3F08);
      v26 = *(id *)(v11 - 216);
      v27 = sub_1A93F7674();
      v28 = sub_1A93F879C();
      v29 = os_log_type_enabled(v27, v28);
      v30 = *(_QWORD *)(v11 - 224);
      if (v29)
      {
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        *(_QWORD *)(v11 - 192) = v32;
        *(_DWORD *)v31 = 134218242;
        *(_QWORD *)(v11 - 112) = objc_msgSend(v26, sel_taskIdentifier);
        sub_1A93F8AA8();
        *(_WORD *)(v31 + 12) = 2080;
        v33 = objc_msgSend(v26, sel_originalRequest);
        if (v33)
        {
          v34 = v33;
          v35 = *(_QWORD *)(v11 - 360);
          sub_1A93F6D44();

          v36 = sub_1A93F6D80();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
        }
        else
        {
          v36 = sub_1A93F6D80();
          v35 = *(_QWORD *)(v11 - 360);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
        }
        v80 = *(_QWORD *)(v11 - 352);
        sub_1A92A85A0(v35, v80);
        sub_1A93F6D80();
        v81 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v80, 1, v36) == 1)
        {
          sub_1A905FD54(v80, &qword_1ED2ABE60);
          v82 = sub_1A93F726C();
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(*(_QWORD *)(v11 - 344), 1, 1, v82);
        }
        else
        {
          *(_QWORD *)(v11 - 240) = v26;
          sub_1A93F6D5C();
          v26 = *(id *)(v11 - 240);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v36);
        }
        v30 = *(_QWORD *)(v11 - 224);
        v83 = sub_1A93F8094();
        *(_QWORD *)(v11 - 112) = sub_1A906436C(v83, v84, (uint64_t *)(v11 - 192));
        sub_1A93F8AA8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v27, v28, "[%ld] Completed download task with no notification endpoint: %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v32, -1, -1);
        MEMORY[0x1AF41411C](v31, -1, -1);

      }
      else
      {

      }
      v51 = *(_QWORD *)(v11 - 232);
      v55 = &selRef_updatedProperties;
      v77 = *(_QWORD *)(v11 - 208);
    }
    else
    {
      v43 = v7;
      v44 = *(void (**)(uint64_t, uint64_t))(v22 + 32);
      v45 = *(_QWORD *)(v11 - 368);
      *(_QWORD *)(v11 - 264) = v43;
      v44(v45, v21);
      if (qword_1ED2A3F28 != -1)
        swift_once();
      v46 = sub_1A93F7698();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED2A3F08);
      v47 = *(id *)(v11 - 216);
      v48 = sub_1A93F7674();
      v49 = sub_1A93F8784();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v50 = 134217984;
        *(_QWORD *)(v11 - 192) = objc_msgSend(v47, (SEL)&protocolRef_MTMAPIRequest);
        v45 = *(_QWORD *)(v11 - 368);
        sub_1A93F8AA8();

        _os_log_impl(&dword_1A904E000, v48, v49, "[%ld] Download completed with a background record", v50, 0xCu);
        MEMORY[0x1AF41411C](v50, -1, -1);
      }
      else
      {

        v48 = v47;
      }
      v60 = *(_QWORD *)(v11 - 312);
      v61 = *(_QWORD *)(v11 - 320);

      dispatch_group_enter(*(dispatch_group_t *)((char *)v23 + *(_QWORD *)((*v24 & *v23) + 0xB8)));
      *(_QWORD *)(v11 - 272) = -[NSObject taskIdentifier](v47, sel_taskIdentifier);
      *(_QWORD *)(v11 - 192) = (*(uint64_t (**)(uint64_t, _QWORD))((char *)v23
                                                                          + *(_QWORD *)((*v24 & *v23) + 0x80)))(v45, *(_QWORD *)(v11 - 240));
      v62 = v23;
      v63 = v24;
      v64 = v47;
      if (qword_1ED2ABF68 != -1)
        swift_once();
      v65 = (void *)qword_1ED2ABF60;
      *(_QWORD *)(v11 - 112) = qword_1ED2ABF60;
      v66 = sub_1A93F882C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v61, 1, 1, v66);
      v67 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8770);
      sub_1A9066C6C();
      sub_1A9066D74(&qword_1EEABCFB0, &qword_1EEAB8770, MEMORY[0x1E0C95D90]);
      sub_1A9066CA8((unint64_t *)&qword_1ED2A1C90, (uint64_t (*)(uint64_t))sub_1A9066C6C, MEMORY[0x1E0DEF7F8]);
      sub_1A93F7C80();
      sub_1A905FD54(v61, &qword_1ED2A1C88);

      swift_release();
      v68 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v69 = (_QWORD *)swift_allocObject();
      v51 = *(_QWORD *)(v11 - 232);
      v30 = *(_QWORD *)(v11 - 224);
      v69[2] = v30;
      v69[3] = v51;
      v70 = *(_QWORD *)(v11 - 280);
      v69[4] = *(_QWORD *)(v11 - 248);
      v69[5] = v70;
      v71 = *(_QWORD *)(v11 - 376);
      v69[6] = *(_QWORD *)(v11 - 288);
      v69[7] = v71;
      v69[8] = v68;
      v69[9] = v64;
      sub_1A9066D74(&qword_1EEABCFB8, (uint64_t *)&unk_1ED2ABFB0, MEMORY[0x1E0C95CB8]);
      v72 = v64;
      v73 = *(_QWORD *)(v11 - 296);
      v74 = sub_1A93F7BA8();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 304) + 8))(v60, v73);
      v75 = (_QWORD *)((char *)v62 + *(_QWORD *)((*v63 & *v62) + 0xB0));
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v11 - 112) = *v75;
      *v75 = 0x8000000000000000;
      sub_1A930F41C(v74, *(_QWORD *)(v11 - 272), isUniquelyReferenced_nonNull_native);
      *v75 = *(_QWORD *)(v11 - 112);
      swift_bridgeObjectRelease();
      swift_endAccess();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v11 - 256) + 8))(*(_QWORD *)(v11 - 368), *(_QWORD *)(v11 - 264));
      v77 = *(_QWORD *)(v11 - 208);
      v55 = &selRef_updatedProperties;
    }
LABEL_36:
    v85 = *(_OWORD *)(v77 + 16);
    *(_OWORD *)(v11 - 192) = *(_OWORD *)v77;
    *(_OWORD *)(v11 - 176) = v85;
    *(_QWORD *)(v11 - 160) = *(_QWORD *)(v77 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v11 - 192, v30, v51);
    objc_msgSend(*(id *)(v11 - 216), v55[6]);
    sub_1A92A3890();
  }
  *(_QWORD *)(v11 - 256) = v5;
  v13 = *(_QWORD *)(v11 - 208);
  swift_endAccess();
  v14 = *(void **)(v11 - 248);
  if (!v14)
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v37 = sub_1A93F7698();
    v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED2A3F08);
    v39 = *(id *)(v11 - 216);
    *(_QWORD *)(v11 - 248) = v38;
    v40 = sub_1A93F7674();
    v41 = sub_1A93F8784();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v42 = 134217984;
      *(_QWORD *)(v11 - 192) = -[NSObject taskIdentifier](v39, sel_taskIdentifier);
      sub_1A93F8AA8();

      _os_log_impl(&dword_1A904E000, v40, v41, "[%ld] Download completed while still foregrounded, notifying subject", v42, 0xCu);
      MEMORY[0x1AF41411C](v42, -1, -1);
    }
    else
    {

      v40 = v39;
    }
    v51 = *(_QWORD *)(v11 - 232);

    v52 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1A93F7224();
    v53 = (void *)sub_1A93F8010();
    swift_bridgeObjectRelease();
    v54 = objc_msgSend(v52, sel_fileExistsAtPath_, v53);

    v55 = &selRef_updatedProperties;
    if ((v54 & 1) == 0)
    {
      v56 = v39;
      v57 = sub_1A93F7674();
      v58 = sub_1A93F87A8();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v59 = 134217984;
        *(_QWORD *)(v11 - 192) = -[NSObject taskIdentifier](v56, sel_taskIdentifier);
        v51 = *(_QWORD *)(v11 - 232);
        v55 = &selRef_updatedProperties;
        sub_1A93F8AA8();

        _os_log_impl(&dword_1A904E000, v57, v58, "[%ld] SOMETHING IS CRITICALLY WRONG, Moved file is missing in worker block", v59, 0xCu);
        MEMORY[0x1AF41411C](v59, -1, -1);
      }
      else
      {

        v57 = v56;
      }

    }
    v78 = sub_1A93F726C();
    v79 = *(_QWORD *)(v11 - 280);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v79, *(_QWORD *)(v11 - 240), v78);
    swift_storeEnumTagMultiPayload();
    sub_1A93F7974();
    sub_1A92A8810(v79);
    *(_QWORD *)(v11 - 192) = 0;
    sub_1A93F7968();
    swift_release();
    swift_release();
    v77 = v13;
    v30 = *(_QWORD *)(v11 - 224);
    goto LABEL_36;
  }
  *(_QWORD *)(v11 - 192) = v14;
  v15 = v14;
  v16 = v14;
  sub_1A93F7968();
  swift_release();
  swift_release();

}

uint64_t sub_1A92A7448(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  NSObject *v7;
  uint64_t result;
  void *v9;
  id v10;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = (_QWORD *)MEMORY[0x1AF41420C](v4);
  if (v5)
  {
    v6 = v5;
    v7 = *(id *)((char *)v5 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + 0xB8));

    dispatch_group_leave(v7);
  }
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](v4);
  if (result)
  {
    v9 = (void *)result;
    v10 = objc_msgSend(a3, sel_taskIdentifier);
    swift_beginAccess();
    sub_1A9130F84((uint64_t)v10);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_1A92A7558(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F7200();
  v11 = a3;
  v12 = a4;
  v13 = a1;
  AssetBackgroundDelegate.urlSession(_:downloadTask:didFinishDownloadingTo:)(v11, v12, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static AssetBackgroundDelegate.BackgroundDownloadError.== infix(_:_:)()
{
  return 1;
}

uint64_t AssetBackgroundDelegate.BackgroundDownloadError.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t AssetBackgroundDelegate.BackgroundDownloadError.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

id AssetBackgroundDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AssetBackgroundDelegate.init()()
{
  sub_1A92A85E8();
}

void sub_1A92A76D4()
{
  sub_1A92A85E8();
}

id AssetBackgroundDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A92A772C(char *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  swift_release();
  sub_1A9085818(*(_QWORD *)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x88)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1)
                                                                                                 + 0x90)]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1A92A7828()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92A7854(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1A92A2EB4(a1, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1A92A785C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92A7880()
{
  sub_1A92A2D9C();
}

uint64_t sub_1A92A7888()
{
  return sub_1A92A2E4C();
}

uint64_t sub_1A92A7890()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92A78BC()
{
  uint64_t v0;

  return sub_1A92A35EC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A92A78C8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1A93F7D58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v11 = sub_1A93F7698();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A3F08);
  v12 = a1;
  v13 = sub_1A93F7674();
  v14 = sub_1A93F8784();
  if (os_log_type_enabled(v13, v14))
  {
    v21 = v10;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    aBlock[0] = objc_msgSend(v12, sel_taskIdentifier);
    v10 = v21;
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v13, v14, "Download task created with identifier: %ld", v15, 0xCu);
    MEMORY[0x1AF41411C](v15, -1, -1);

  }
  else
  {

  }
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  *(_QWORD *)(v16 + 24) = v12;
  aBlock[4] = sub_1A92A88C0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_56;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  v19 = v2;
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v10, v7, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  return swift_release();
}

void sub_1A92A7C0C(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;

  if (qword_1ED2A3F28 != -1)
    swift_once();
  v2 = sub_1A93F7698();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A3F08);
  v6 = a1;
  v3 = sub_1A93F7674();
  v4 = sub_1A93F8784();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    objc_msgSend(v6, sel_taskIdentifier);
    sub_1A93F8AA8();

    _os_log_impl(&dword_1A904E000, v3, v4, "[%ld] Task is waiting for connectivity", v5, 0xCu);
    MEMORY[0x1AF41411C](v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1A92A7D5C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double aBlock[6];

  v4 = v3;
  v8 = sub_1A93F7D58();
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v26 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2A3F28 != -1)
    swift_once();
  v14 = sub_1A93F7698();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED2A3F08);
  v15 = a1;
  v16 = sub_1A93F7674();
  v17 = sub_1A93F8784();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    *(_DWORD *)v18 = 134218752;
    v25 = v10;
    *(_QWORD *)&aBlock[0] = objc_msgSend(v15, sel_taskIdentifier);
    v24 = v13;
    sub_1A93F8AA8();

    *(_WORD *)(v18 + 12) = 2050;
    *(_QWORD *)&aBlock[0] = a2;
    sub_1A93F8AA8();
    *(_WORD *)(v18 + 22) = 2050;
    *(_QWORD *)&aBlock[0] = a3;
    v13 = v24;
    v10 = v25;
    sub_1A93F8AA8();
    *(_WORD *)(v18 + 32) = 2048;
    aBlock[0] = (double)a2 / (double)a3;
    sub_1A93F8AA8();
    _os_log_impl(&dword_1A904E000, v16, v17, "[%ld] Did resume downloading at offset %{public}lld, expected total bytes: %{public}lld: %f%%", (uint8_t *)v18, 0x2Au);
    MEMORY[0x1AF41411C](v18, -1, -1);

  }
  else
  {

  }
  if (qword_1ED2ABF68 != -1)
    swift_once();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v4;
  *(_QWORD *)(v19 + 24) = v15;
  *(double *)(v19 + 32) = (double)a2 / (double)a3;
  *(_QWORD *)&aBlock[4] = sub_1A92A88E4;
  *(_QWORD *)&aBlock[5] = v19;
  *(_QWORD *)&aBlock[0] = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock[1] = 1107296256;
  *(_QWORD *)&aBlock[2] = sub_1A908A91C;
  *(_QWORD *)&aBlock[3] = &block_descriptor_50;
  v20 = _Block_copy(aBlock);
  v21 = v15;
  v22 = v4;
  sub_1A93F7D88();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  return swift_release();
}

void sub_1A92A8118(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_1A93F7D58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A93F7DB8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    v19[0] = v8;
    if (qword_1ED2ABF68 != -1)
      swift_once();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v3;
    *(_QWORD *)(v15 + 24) = a1;
    *(double *)(v15 + 32) = (double)a2 / (double)a3 * 100.0;
    aBlock[4] = sub_1A92A88A4;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_44_0;
    v16 = _Block_copy(aBlock);
    v17 = v3;
    v18 = a1;
    sub_1A93F7D88();
    v19[1] = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v14, v10, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v19[0] + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
  }
}

uint64_t sub_1A92A8364()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92A8388()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A92A83AC()
{
  uint64_t v0;

  sub_1A92A45A4(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1A92A83C0()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A92A840C()
{
  uint64_t v0;

  sub_1A92A4CE0(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + 40);
}

uint64_t sub_1A92A841C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1A92A8460(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A92A84A4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A93F726C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A92A8558()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1A93F726C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1A92A65AC(*(_QWORD **)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1A92A85A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2ABE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A92A85E8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1A92A8614()
{
  JUMPOUT(0x1AF414014);
}

uint64_t sub_1A92A862C()
{
  return 48;
}

__n128 sub_1A92A8638(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t method lookup function for AssetBackgroundDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetBackgroundDelegate.__allocating_init(recordCache:resume:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1A92A8660(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92A86A0 + 4 * byte_1A9418F60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92A86C0 + 4 * byte_1A9418F65[v4]))();
}

_BYTE *sub_1A92A86A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92A86C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92A86C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92A86D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92A86D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92A86E0(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AssetBackgroundDelegate.BackgroundDownloadError()
{
  JUMPOUT(0x1AF413F6CLL);
}

_QWORD *sub_1A92A86F8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A92A8754(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1A92A8790()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92A87B4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A92A87E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92A7448(a1, *(_QWORD *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_1A92A8810(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadPhase();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A92A884C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A92A8878()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92A88A4()
{
  uint64_t v0;

  sub_1A92A3F40(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1A92A88C0()
{
  uint64_t v0;

  sub_1A92A3668(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

Swift::Bool __swiftcall NSFileManager.fileExists(at:isDirectory:)(Swift::String at, Swift::Bool isDirectory)
{
  void *v2;
  void *v3;
  unsigned __int8 v4;
  Swift::Bool v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v6 = isDirectory;
  v3 = (void *)sub_1A93F8010();
  v4 = objc_msgSend(v2, sel_fileExistsAtPath_isDirectory_, v3, &v6);

  return v4;
}

id NSFileManager.createDirectory(url:createIntermediates:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v5;
  id v7;
  id v8[2];

  v3 = v2;
  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1A93F71A0();
  v8[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, a2 & 1, 0, v8);

  if ((_DWORD)v3)
    return v8[0];
  v7 = v8[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

id sub_1A92A8A40(uint64_t a1, char a2)
{
  return NSFileManager.createDirectory(url:createIntermediates:)(a1, a2);
}

id sub_1A92A8A60()
{
  return sub_1A92A8A80();
}

id sub_1A92A8A80()
{
  void *v0;
  void *v1;
  void *v2;
  id v4;
  id v5[2];

  v1 = v0;
  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A93F71A0();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if ((_DWORD)v1)
    return v5[0];
  v4 = v5[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

id sub_1A92A8B40()
{
  return sub_1A92A8B60();
}

id sub_1A92A8B60()
{
  void *v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1A93F8010();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtPath_error_, v1, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

id sub_1A92A8C18()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1A93F8010();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

id sub_1A92A8C5C(uint64_t a1, uint64_t a2, char a3)
{
  void **v3;
  void *v4;
  void *v5;
  id v6;
  char v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = *v3;
  v8 = a3;
  v5 = (void *)sub_1A93F8010();
  v6 = objc_msgSend(v4, sel_fileExistsAtPath_isDirectory_, v5, &v8);

  return v6;
}

uint64_t sub_1A92A8CDC()
{
  void **v0;
  void *v1;
  void *v2;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *v0;
  v4 = 0;
  v2 = (void *)sub_1A93F8010();
  LOBYTE(v1) = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v4);

  return (v1 & v4);
}

void *sub_1A92A8D60(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1A92A8D80(a1, a2, a3);
}

void *sub_1A92A8D80(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v13[2];

  v4 = v3;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_1A93F71A0();
  if (a2)
  {
    type metadata accessor for URLResourceKey(0);
    a2 = (void *)sub_1A93F82F8();
  }
  v13[0] = 0;
  v8 = objc_msgSend(v4, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v7, a2, a3, v13);

  v9 = v13[0];
  if (v8)
  {
    sub_1A93F726C();
    v4 = (void *)sub_1A93F8310();
    v10 = v9;

  }
  else
  {
    v11 = v13[0];
    sub_1A93F7128();

    swift_willThrow();
  }
  return v4;
}

id sub_1A92A8EA0()
{
  return sub_1A92A8EC0();
}

id sub_1A92A8EC0()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v5;
  id v6[2];

  v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A93F71A0();
  v3 = (void *)sub_1A93F71A0();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v6);

  if ((_DWORD)v1)
    return v6[0];
  v5 = v6[0];
  sub_1A93F7128();

  return (id)swift_willThrow();
}

void sub_1A92A8FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  unsigned int v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v5 = sub_1A93F885C();
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  MEMORY[0x1E0C80A78](v5);
  v12 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F89A0();
  MEMORY[0x1E0C80A78](v7);
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_10;
  if (v8)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v11 = sub_1A92AA4C0();
    if (a2 < a1 || v8 < 0)
      goto LABEL_11;
    v9[0] = v2;
    v10 = *MEMORY[0x1E0DEF8D8];
    v9[1] = 0x80000001A944BAF0;
    while (a2 != a1)
    {
      v16 = 0;
      v17 = 0xE000000000000000;
      sub_1A93F8C70();
      sub_1A93F810C();
      v15 = a1;
      sub_1A93F9060();
      sub_1A93F810C();
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8(&qword_1EEABD010, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEFA38], MEMORY[0x1E0DEFA48]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD018);
      sub_1A9066DB4(&qword_1EEABD020, &qword_1EEABD018);
      sub_1A93F8B5C();
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v12, v10, v14);
      sub_1A93F89AC();
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (a2 == ++a1)
        return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1A92A9220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_1A92A8FA0(0, 5);
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCFE0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  qword_1EEABCFD0 = result;
  *(_QWORD *)algn_1EEABCFD8 = v1;
  return result;
}

uint64_t DispatchWorkgroup.init(count:label:)@<X0>(uint64_t result@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A92A9F70(0, result, a2, a3);
    v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCFE0);
    result = swift_allocObject();
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *a4 = result;
    a4[1] = v6;
  }
  return result;
}

uint64_t static DispatchWorkgroup.swiftConcurrency.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1EEAB6F00 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EEABCFD8;
  *a1 = qword_1EEABCFD0;
  a1[1] = v2;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t DispatchWorkgroup.schedulerRing.getter()
{
  return swift_retain();
}

uint64_t DispatchWorkgroup.workloops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DispatchWorkgroup.init(workloops:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABCFE0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  *a2 = result;
  a2[1] = a1;
  return result;
}

uint64_t DispatchWorkgroup.enqueue(perform:)(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s **v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  unint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t result;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[7];

  v5 = sub_1A93F7D58();
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v12 = (unint64_t)v2[1];
  v13 = *v2 + 4;
  os_unfair_lock_lock(v11 + 6);
  sub_1A92A9614(v13, v12, aBlock);
  os_unfair_lock_unlock(v11 + 6);
  result = aBlock[0];
  if ((v12 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x1AF4129DC](aBlock[0], v12);
    goto LABEL_5;
  }
  if ((aBlock[0] & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (aBlock[0] < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v12 + 8 * aBlock[0] + 32);
LABEL_5:
    v16 = v15;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = a2;
    aBlock[4] = sub_1A9055750;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = &block_descriptor_47;
    v18 = _Block_copy(aBlock);
    swift_retain();
    sub_1A93F7D88();
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066DB4((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700);
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v10, v7, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
    return swift_release();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A92A9614@<X0>(_QWORD *result@<X0>, unint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = result;
  v5 = *result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A93F8E5C();
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_3;
  }
  else if (v5 == *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v6 = 0;
LABEL_6:
    *v3 = v6;
    *a3 = v5;
    return result;
  }
  v6 = v5 + 1;
  if (!__OFADD__(v5, 1))
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t DispatchWorkgroup.runVerySlow<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return swift_task_switch();
}

{
  _OWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return swift_task_switch();
}

uint64_t sub_1A92A96DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1A92A9784;
  return sub_1A93F9204();
}

uint64_t sub_1A92A9784()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A92A981C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1A92A98C4;
  return sub_1A93F9078();
}

uint64_t sub_1A92A98C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t DispatchWorkgroup.runThreadBlocking<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return swift_task_switch();
}

{
  _OWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return swift_task_switch();
}

uint64_t sub_1A92A9938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1A92A99E0;
  return sub_1A93F9204();
}

uint64_t sub_1A92A99E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A92A9A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a4;
  v23 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v13 = sub_1A93F8430();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - v16;
  v24 = a2;
  v25 = a3;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v22 - v16, a1, v13, v15);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v22;
  *((_QWORD *)v19 + 2) = a6;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  swift_retain();
  DispatchWorkgroup.enqueue(perform:)(v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1A92A9B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  _QWORD v14[2];

  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  v12(v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  sub_1A93F8430();
  sub_1A93F8424();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a4);
}

uint64_t sub_1A92A9CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1A92AA500;
  return sub_1A93F9078();
}

uint64_t sub_1A92A9D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a4;
  v23 = a8;
  v13 = sub_1A93F8430();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - v16;
  v24 = a2;
  v25 = a3;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v22 - v16, a1, v13, v15);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v22;
  *((_QWORD *)v19 + 2) = a6;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  swift_retain();
  DispatchWorkgroup.enqueue(perform:)(v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1A92A9E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  uint64_t v14;

  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  v12(v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, a4);
  sub_1A93F8430();
  sub_1A93F8424();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a4);
}

void sub_1A92A9F70(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  unsigned int v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = a3;
  v18 = a4;
  v7 = sub_1A93F885C();
  v15 = *(_QWORD *)(v7 - 8);
  v16 = v7;
  MEMORY[0x1E0C80A78](v7);
  v14 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A93F89A0();
  MEMORY[0x1E0C80A78](v9);
  v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_10;
  if (v10)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1A93F8D84();
    v13 = sub_1A92AA4C0();
    if (a2 < a1 || v10 < 0)
      goto LABEL_11;
    v11[1] = v4;
    v12 = *MEMORY[0x1E0DEF8D8];
    while (a2 != a1)
    {
      v17(a1);
      v19 = MEMORY[0x1E0DEE9D8];
      sub_1A9066CA8(&qword_1EEABD010, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEFA38], MEMORY[0x1E0DEFA48]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD018);
      sub_1A9066DB4(&qword_1EEABD020, &qword_1EEABD018);
      sub_1A93F8B5C();
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v14, v12, v16);
      sub_1A93F89AC();
      sub_1A93F8D60();
      sub_1A93F8D90();
      sub_1A93F8D9C();
      sub_1A93F8D6C();
      if (a2 == ++a1)
        return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1A92AA194()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92AA1B8(uint64_t a1)
{
  return sub_1A92AA1F0(a1, (uint64_t)&unk_1E54ECB80, (uint64_t)sub_1A92AA368, sub_1A92A9A54);
}

uint64_t sub_1A92AA1D4(uint64_t a1)
{
  return sub_1A92AA1F0(a1, (uint64_t)&unk_1E54ECB58, (uint64_t)sub_1A92AA360, sub_1A92A9D78);
}

uint64_t sub_1A92AA1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  _QWORD *v4;

  return a4(a1, v4[3], v4[4], v4[5], v4[6], v4[2], a2, a3);
}

uint64_t sub_1A92AA21C(uint64_t a1)
{
  return sub_1A92AA1F0(a1, (uint64_t)&unk_1E54ECB30, (uint64_t)sub_1A92AA368, sub_1A92A9A54);
}

uint64_t sub_1A92AA238(uint64_t a1)
{
  return sub_1A92AA1F0(a1, (uint64_t)&unk_1E54ECB08, (uint64_t)sub_1A92AA360, sub_1A92A9D78);
}

uint64_t destroy for DispatchWorkgroup()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18PodcastsFoundation17DispatchWorkgroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DispatchWorkgroup(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DispatchWorkgroup(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DispatchWorkgroup()
{
  return &type metadata for DispatchWorkgroup;
}

uint64_t sub_1A92AA370()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F8430() - 8) + 80);
  return sub_1A92A9E98(v0[3], v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2), v1);
}

uint64_t objectdestroy_11Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v1 = sub_1A93F8430();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A92AA460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2A1CB0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A93F8430() - 8) + 80);
  return sub_1A92A9B7C(v0[3], v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2), v1);
}

unint64_t sub_1A92AA4C0()
{
  unint64_t result;

  result = qword_1EEABD008;
  if (!qword_1EEABD008)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEABD008);
  }
  return result;
}

uint64_t dispatch thunk of DownloadLibrary.downloadedAssets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DownloadLibrary.remove(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ThinClientPodcastStateRepository.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1AF41420C](v0 + 16);
}

uint64_t ThinClientPodcastStateRepository.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ThinClientPodcastStateRepository.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1AF41420C](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1A9277650;
}

uint64_t ThinClientPodcastStateRepository.__allocating_init()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  v1 = sub_1A9115B18(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD028);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t ThinClientPodcastStateRepository.init()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  v1 = sub_1A9115B18(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD028);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t ThinClientPodcastStateRepository.deinit()
{
  uint64_t v0;

  sub_1A914CAE4(v0 + 16);
  swift_release();
  return v0;
}

uint64_t ThinClientPodcastStateRepository.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A914CAE4(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ThinClientPodcastStateRepository.reportPodcastState(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD v7[4];

  if (*((_QWORD *)a1._rawValue + 2))
  {
    v3 = *(_QWORD *)(v1 + 32);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_1A92AA834((uint64_t *)(v3 + 16), (uint64_t)a1._rawValue, v7);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    v4 = v7[0];
    swift_release();
    swift_beginAccess();
    if (MEMORY[0x1AF41420C](v1 + 16))
    {
      v5 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, ObjectType, v5);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1A92AA834@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  char v45;
  char v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int64_t v51;
  int64_t v53;

  v3 = a2;
  v50 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v51 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v53 = 0;
  v48 = v3;
  v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v6)
    goto LABEL_7;
LABEL_8:
  v9 = v53 + 1;
  if (!__OFADD__(v53, 1))
  {
    if (v9 < v51)
    {
      v10 = *(_QWORD *)(v50 + 8 * v9);
      v11 = v53 + 1;
      if (v10)
        goto LABEL_21;
      v11 = v53 + 2;
      if (v53 + 2 >= v51)
        goto LABEL_60;
      v10 = *(_QWORD *)(v50 + 8 * v11);
      if (v10)
        goto LABEL_21;
      v11 = v53 + 3;
      if (v53 + 3 >= v51)
        goto LABEL_60;
      v10 = *(_QWORD *)(v50 + 8 * v11);
      if (v10)
      {
LABEL_21:
        v6 = (v10 - 1) & v10;
        v53 = v11;
        for (i = __clz(__rbit64(v10)) + (v11 << 6); ; i = v7 | (v53 << 6))
        {
          v13 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * i);
          v14 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 40 * i);
          v15 = *v14;
          v16 = v14[1];
          v18 = v14[2];
          v17 = v14[3];
          v19 = v14[4];
          v20 = *a1;
          if (*(_QWORD *)(*a1 + 16) && (v21 = sub_1A9093570(v13), (v22 & 1) != 0))
          {
            v23 = (_QWORD *)(*(_QWORD *)(v20 + 56) + 40 * v21);
            v24 = v23[2];
            switch(v24)
            {
              case 0:
                if (!v18)
                  goto LABEL_6;
                goto LABEL_40;
              case 1:
                if (v18 == 1)
                  goto LABEL_6;
LABEL_40:
                sub_1A9094654(v15, v16, v18);
                goto LABEL_42;
              case 2:
                if (v18 == 2)
                  goto LABEL_6;
                goto LABEL_40;
            }
            if (v18 < 3)
              goto LABEL_40;
            if (((v15 ^ ((*v23 & 1) == 0)) & 1) != 0)
            {
              v26 = v23[3];
              v25 = v23[4];
              v27 = v23[1] == v16 && v24 == v18;
              if ((v27 || (sub_1A93F90C0() & 1) != 0) && ((v17 ^ ((v26 & 1) == 0)) & 1) != 0)
              {
                v3 = v48;
                if (v25 == v19)
                {
LABEL_6:
                  if (!v6)
                    goto LABEL_8;
                  goto LABEL_7;
                }
              }
              goto LABEL_40;
            }
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_1A9094654(v15, v16, v18);
            sub_1A9094654(v15, v16, v18);
            sub_1A92AB1A8(0, 0, 3uLL);
            sub_1A92AB1A8(v15, v16, v18);
          }
LABEL_42:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1A91181BC(0, v49[2] + 1, 1, v49);
          v29 = v49[2];
          v28 = v49[3];
          if (v29 >= v28 >> 1)
            v49 = sub_1A91181BC((_QWORD *)(v28 > 1), v29 + 1, 1, v49);
          v49[2] = v29 + 1;
          v49[v29 + 4] = v13;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v30 = (_QWORD *)*a1;
          *a1 = 0x8000000000000000;
          v32 = sub_1A9093570(v13);
          v33 = v30[2];
          v34 = (v31 & 1) == 0;
          v35 = v33 + v34;
          if (__OFADD__(v33, v34))
            goto LABEL_62;
          if (v30[3] >= v35)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              if ((v31 & 1) != 0)
                goto LABEL_53;
            }
            else
            {
              v46 = v31;
              sub_1A9307608();
              if ((v46 & 1) != 0)
                goto LABEL_53;
            }
          }
          else
          {
            v45 = v31;
            sub_1A9093620(v35, isUniquelyReferenced_nonNull_native);
            v36 = sub_1A9093570(v13);
            if ((v45 & 1) != (v37 & 1))
              goto LABEL_65;
            v32 = v36;
            if ((v45 & 1) != 0)
            {
LABEL_53:
              v38 = (uint64_t *)(v30[7] + 40 * v32);
              sub_1A9094668(*v38, v38[1], v38[2]);
              *v38 = v15;
              v38[1] = v16;
              v38[2] = v18;
              v38[3] = v17;
              v38[4] = v19;
              goto LABEL_58;
            }
          }
          v30[(v32 >> 6) + 8] |= 1 << v32;
          *(_QWORD *)(v30[6] + 8 * v32) = v13;
          v39 = (uint64_t *)(v30[7] + 40 * v32);
          *v39 = v15;
          v39[1] = v16;
          v39[2] = v18;
          v39[3] = v17;
          v39[4] = v19;
          v40 = v30[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          if (v41)
            goto LABEL_64;
          v30[2] = v42;
LABEL_58:
          *a1 = (uint64_t)v30;
          swift_bridgeObjectRelease();
          v3 = v48;
          if (!v6)
            goto LABEL_8;
LABEL_7:
          v7 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v12 = v53 + 4;
      if (v53 + 4 < v51)
      {
        v10 = *(_QWORD *)(v50 + 8 * v12);
        if (v10)
        {
          v11 = v53 + 4;
          goto LABEL_21;
        }
        while (1)
        {
          v11 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_63;
          if (v11 >= v51)
            break;
          v10 = *(_QWORD *)(v50 + 8 * v11);
          ++v12;
          if (v10)
            goto LABEL_21;
        }
      }
    }
LABEL_60:
    result = swift_release();
    *a3 = v49;
    return result;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

__n128 ThinClientPodcastStateRepository.state(for:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  v5 = *(os_unfair_lock_s **)(v2 + 32);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1A92AAD9C((uint64_t)&v5[4], a1, (uint64_t *)v10);
  os_unfair_lock_unlock(v5 + 6);
  v8 = (__n128)v10[1];
  v9 = v10[0];
  v6 = v11;
  swift_release();
  result = v8;
  *(_OWORD *)a2 = v9;
  *(__n128 *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1A92AAD9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_1A9093570(a2), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 40 * result);
    v7 = *v6;
    v8 = v6[1];
    v10 = v6[2];
    v9 = v6[3];
    v11 = v6[4];
    result = sub_1A9094654(*v6, v8, v10);
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v10 = 3;
  }
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v10;
  a3[3] = v9;
  a3[4] = v11;
  return result;
}

uint64_t ThinClientPodcastStateRepository.state(for:)@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  sub_1A92AAF4C(v3);
  return sub_1A9093CE4((uint64_t)v3, a1);
}

__n128 sub_1A92AAE7C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = *(os_unfair_lock_s **)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_1A92AB190((uint64_t)&v3[4], (uint64_t *)v8);
  os_unfair_lock_unlock(v3 + 6);
  v6 = (__n128)v8[1];
  v7 = v8[0];
  v4 = v9;
  swift_release();
  result = v6;
  *(_OWORD *)a1 = v7;
  *(__n128 *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_1A92AAF14@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  sub_1A92AAF4C(v3);
  return sub_1A9093CE4((uint64_t)v3, a1);
}

uint64_t sub_1A92AAF4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEAB6E30 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEABA820);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A904E000, v7, v8, "We should never be handling UUIDs on a thin client", v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = 0;
  a1[1] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = 3;
  return result;
}

uint64_t sub_1A92AB0AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1A92AB104(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for ThinClientPodcastStateRepository()
{
  return objc_opt_self();
}

uint64_t method lookup function for ThinClientPodcastStateRepository()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThinClientPodcastStateRepository.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A92AB190@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A92AAD9C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A92AB1A8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 != 3)
    return sub_1A9094668(a1, a2, a3);
  return a1;
}

uint64_t dispatch thunk of ModifiableFormat.with(format:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1A92AB1C0(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 40);
    v5 = *(unsigned __int8 *)(v1 + 48);
    swift_beginAccess();
    sub_1A9052820(v4, v5);
    sub_1A92AFC34(a1, v1 + 56);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    MEMORY[0x1E0C80A78](v6);
    if (v5)
    {
      if (v5 != 1)
        return;
      sub_1A92AF420(v4, (void (*)(uint64_t))sub_1A9052DF8);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(*(_QWORD *)v4 + 104);
      swift_retain();
      v7(a1);
      sub_1A9052AB4(v4, 0);
    }
    sub_1A9052AB4(v4, v5);
  }
  else
  {
    os_unfair_lock_unlock(v3);
  }
}

void sub_1A92AB308(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void *v4;
  id v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(_QWORD *);
  _QWORD v12[9];

  v12[8] = a1;
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    *(_BYTE *)(v1 + 24) = 0;
    swift_beginAccess();
    v4 = *(void **)(v1 + 32);
    *(_QWORD *)(v1 + 32) = a1;
    v5 = a1;
    sub_1A9173164(v4);
    swift_beginAccess();
    v6 = *(_QWORD *)(v1 + 40);
    v7 = *(unsigned __int8 *)(v1 + 48);
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 2;
    sub_1A9052820(v6, v7);
    sub_1A9052AB4(v6, v7);
    os_unfair_lock_unlock(v3);
    MEMORY[0x1E0C80A78](v8);
    if (v7)
    {
      if (v7 != 1)
        return;
      sub_1A92AF420(v6, (void (*)(uint64_t))sub_1A92AFFC0);
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12[0] = a1;
      v11 = *(void (**)(_QWORD *))(*(_QWORD *)v6 + 112);
      swift_retain();
      v11(v12);
      sub_1A9052AB4(v6, 0);
      v9 = v6;
      v10 = 0;
    }
    sub_1A9052AB4(v9, v10);
  }
  else
  {
    os_unfair_lock_unlock(v3);
  }
}

uint64_t AssetReaderTimelineAligner.__allocating_init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  swift_allocObject();
  v17 = sub_1A92AF6FC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t AssetReaderTimelineAligner.init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;

  v10 = sub_1A92AF6FC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t AssetReaderTimelineAligner.align(asset:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD030);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_started);
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 20));
  v8 = *(_BYTE *)(v7 + 16);
  *(_BYTE *)(v7 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 20));
  if ((v8 & 1) == 0)
    sub_1A92AB910(a1);
  v11[1] = *(_QWORD *)(v1 + 32);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD040);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD048);
  sub_1A9066D74(&qword_1EEABD050, &qword_1EEABD040, (uint64_t)&protocol conformance descriptor for RepublishingValueSubject<A, B>);
  sub_1A93F7B30();
  swift_release();
  sub_1A9066D74(&qword_1EEABD058, &qword_1EEABD030, MEMORY[0x1E0C95708]);
  v9 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1A92AB6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A92AFF34(a1, a2);
}

Swift::Void __swiftcall AssetReaderTimelineAligner.pauseReadingIfNeeded()()
{
  sub_1A923E280();
}

Swift::Void __swiftcall AssetReaderTimelineAligner.resumeReadingIfNeeded()()
{
  sub_1A923E33C();
}

Swift::Void __swiftcall AssetReaderTimelineAligner.cancelReading()()
{
  sub_1A923E3F8();
}

uint64_t AssetReaderTimelineAligner.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger;
  v2 = sub_1A93F7698();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  v4 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A914CAE4(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider);
  return v0;
}

uint64_t AssetReaderTimelineAligner.__deallocating_deinit()
{
  AssetReaderTimelineAligner.deinit();
  return swift_deallocClassInstance();
}

void sub_1A92AB884()
{
  sub_1A923E3F8();
}

uint64_t sub_1A92AB8A8(void *a1)
{
  return AssetReaderTimelineAligner.align(asset:)(a1);
}

void sub_1A92AB8C8()
{
  sub_1A923E280();
}

void sub_1A92AB8EC()
{
  sub_1A923E33C();
}

void sub_1A92AB910(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_signpost_type_t v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  uint8_t *v24;
  os_signpost_id_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  id v29;
  uint64_t v30;
  id v31;
  char v32;
  void (*v33)(uint64_t *__return_ptr, void **);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject *v58;
  os_signpost_type_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  uint8_t *v63;
  os_signpost_id_t v64;
  void (*v65)(char *, uint64_t);
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  os_signpost_type_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  const char *v86;
  uint8_t *v87;
  os_signpost_id_t v88;
  void (*v89)(char *, uint64_t);
  _QWORD v90[3];
  char *v91;
  char *v92;
  char *v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  _UNKNOWN **v111;
  uint64_t v112;
  uint64_t v113;

  v104 = sub_1A93F7638();
  v95 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v93 = (char *)v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)v90 - v5;
  v6 = sub_1A93F726C();
  v97 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v96 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v92 = (char *)v90 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v90 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v90 - v17;
  v106 = v1;
  v19 = v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  sub_1A93F7620();
  sub_1A93F75D8();
  v20 = sub_1A93F7620();
  v21 = sub_1A93F8940();
  v22 = sub_1A93F8A6C();
  v98 = v6;
  v100 = v19;
  if ((v22 & 1) != 0)
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v23(v15, v18, v8);
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    v25 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v20, v21, v25, "AlignmentReadCache", "", v24, 2u);
    MEMORY[0x1AF41411C](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  else
  {

    v23 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  }
  v26 = v102;
  v23(v15, v18, v8);
  sub_1A93F765C();
  swift_allocObject();
  v27 = sub_1A93F7650();
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v28(v18, v8);
  v29 = a1;
  sub_1A92AEEC0(&v107);
  v105 = v108;
  v94 = v23;
  if (v108)
  {
    v101 = v107;

  }
  else
  {
    v101 = v29;
  }
  v30 = v104;
  v31 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
  v32 = sub_1A90A427C(0xD00000000000001BLL, 0x80000001A944BCE0, 1);

  v103 = v27;
  v99 = v28;
  if ((v32 & 1) != 0)
  {
    if (v105)
    {
      v33 = *(void (**)(uint64_t *__return_ptr, void **))(v106 + 40);
      v34 = v8;
      v35 = v105;
      v36 = v101;
      v107 = v101;
      v108 = v105;
      sub_1A92AFC24(v101, v105, 0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v33(&v112, &v107);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v37 = v36;
      v38 = v35;
      v8 = v34;
      v26 = v102;
      v30 = v104;
      sub_1A92AFC14(v37, v38, 0);
      v39 = (void *)v112;
      if (v112)
      {
        v40 = v29;
        v41 = sub_1A93F7674();
        v42 = sub_1A93F87B4();
        v43 = v42;
        if (os_log_type_enabled(v41, v42))
        {
          v44 = swift_slowAlloc();
          v102 = (char *)swift_slowAlloc();
          v107 = v102;
          *(_DWORD *)v44 = 141558275;
          v112 = 1752392040;
          v90[2] = &v113;
          sub_1A93F8AA8();
          *(_WORD *)(v44 + 12) = 2081;
          v90[1] = v44 + 14;
          v45 = objc_msgSend(v40, sel_URL);
          LODWORD(v93) = v43;
          v46 = v45;
          v47 = v96;
          sub_1A93F7200();

          sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v48 = v39;
          v49 = v98;
          v50 = sub_1A93F9060();
          v52 = v51;
          v53 = v49;
          v39 = v48;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v47, v53);
          v112 = sub_1A906436C(v50, v52, (uint64_t *)&v107);
          sub_1A93F8AA8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A904E000, v41, (os_log_type_t)v93, "Using in-memory alignment cache for asset: %{private,mask.hash}s", (uint8_t *)v44, 0x16u);
          v54 = v102;
          swift_arrayDestroy();
          MEMORY[0x1AF41411C](v54, -1, -1);
          MEMORY[0x1AF41411C](v44, -1, -1);
        }
        else
        {

        }
        v79 = v104;
        v80 = v92;
        v110 = type metadata accessor for AssetReaderTimelineAlignment();
        v111 = &protocol witness table for AssetReaderTimelineAlignment;
        v107 = v39;
        swift_retain();
        sub_1A92AB1C0((uint64_t)&v107);
        sub_1A905FD54((uint64_t)&v107, &qword_1EEABD240);
        v81 = sub_1A93F7620();
        sub_1A93F7644();
        v82 = sub_1A93F8934();
        if ((sub_1A93F8A6C() & 1) != 0)
        {
          swift_retain();
          v83 = v91;
          sub_1A93F7668();
          v84 = v83;
          swift_release();
          v85 = v95;
          if ((*(unsigned int (**)(char *, uint64_t))(v95 + 88))(v84, v79) == *MEMORY[0x1E0DF2190])
          {
            v86 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v79);
            v86 = "HIT";
          }
          v94(v15, v80, v8);
          v87 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v87 = 0;
          v88 = sub_1A93F75E4();
          _os_signpost_emit_with_name_impl(&dword_1A904E000, v81, v82, v88, "AlignmentReadCache", v86, v87, 2u);
          MEMORY[0x1AF41411C](v87, -1, -1);
          swift_release();

          sub_1A92AFC14(v101, v105, 0);
          v89 = v99;
          v99(v80, v8);
          swift_release();
          v89(v15, v8);
        }
        else
        {
          sub_1A92AFC14(v101, v105, 0);

          swift_release();
          v99(v80, v8);
          swift_release();
        }
        return;
      }
    }
  }
  else
  {
    v55 = sub_1A93F7674();
    v56 = sub_1A93F87B4();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_1A904E000, v55, v56, "Cache is disabled via debug settings. Visit pcast://debugmenu.", v57, 2u);
      MEMORY[0x1AF41411C](v57, -1, -1);
    }

  }
  v58 = sub_1A93F7620();
  sub_1A93F7644();
  v59 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    v60 = v93;
    sub_1A93F7668();
    swift_release();
    v61 = v95;
    if ((*(unsigned int (**)(char *, uint64_t))(v95 + 88))(v60, v30) == *MEMORY[0x1E0DF2190])
    {
      v62 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v30);
      v62 = "MISS";
    }
    v94(v15, v26, v8);
    v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v63 = 0;
    v64 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v58, v59, v64, "AlignmentReadCache", v62, v63, 2u);
    MEMORY[0x1AF41411C](v63, -1, -1);

    v65 = v99;
    v99(v26, v8);
    v65(v15, v8);
  }
  else
  {

    v99(v26, v8);
  }
  v66 = v29;
  v67 = sub_1A93F7674();
  v68 = sub_1A93F87B4();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = swift_slowAlloc();
    v70 = (void *)swift_slowAlloc();
    v107 = v70;
    *(_DWORD *)v69 = 141558275;
    v112 = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v69 + 12) = 2081;
    v104 = v69 + 14;
    v71 = objc_msgSend(v66, sel_URL);
    v72 = v96;
    sub_1A93F7200();

    sub_1A9066CA8(qword_1ED2ABE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v73 = v98;
    v74 = sub_1A93F9060();
    v76 = v75;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v72, v73);
    v112 = sub_1A906436C(v74, v76, (uint64_t *)&v107);
    sub_1A93F8AA8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v67, v68, "Generating alignments for asset: %{private,mask.hash}s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v70, -1, -1);
    MEMORY[0x1AF41411C](v69, -1, -1);
  }
  else
  {

  }
  v77 = v105;
  v78 = v101;
  v107 = v101;
  v108 = v105;
  v109 = v105 == 0;
  sub_1A92AC448(v66, (uint64_t)&v107);
  swift_release();
  sub_1A92AFC14(v78, v77, v77 == 0);
}

uint64_t sub_1A92AC448(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint8_t *v27;
  char *v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;

  v5 = sub_1A93F7698();
  v89 = *(_QWORD *)(v5 - 8);
  v90 = v5;
  MEMORY[0x1E0C80A78](v5);
  v85 = v6;
  v86 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v7);
  v84 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1A93F762C();
  v80 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v79 = v9;
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD258);
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  MEMORY[0x1E0C80A78](v11);
  v81 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD260);
  v87 = *(_QWORD *)(v13 - 8);
  v88 = v13;
  MEMORY[0x1E0C80A78](v13);
  v96 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A93F75FC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v74 - v20;
  v22 = *(void **)a2;
  v93 = *(_QWORD *)(a2 + 8);
  v94 = v22;
  v92 = *(unsigned __int8 *)(a2 + 16);
  v97 = v2;
  v23 = v2 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  sub_1A93F7620();
  sub_1A93F75D8();
  v91 = v23;
  v24 = sub_1A93F7620();
  v25 = sub_1A93F8940();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v26(v18, v21, v15);
    v27 = (uint8_t *)swift_slowAlloc();
    v78 = (uint64_t)a1;
    v28 = v10;
    v29 = v27;
    *(_WORD *)v27 = 0;
    v30 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v24, v25, v30, "AlignmentAssetRead", "", v29, 2u);
    v31 = v29;
    v10 = v28;
    a1 = (void *)v78;
    MEMORY[0x1AF41411C](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {

    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  }
  v26(v18, v21, v15);
  sub_1A93F765C();
  swift_allocObject();
  v32 = sub_1A93F7650();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  v33 = a1;
  v34 = v97;
  sub_1A92ACC38(v33);
  v98 = *(id *)(v34 + 24);
  v35 = v98;
  type metadata accessor for ShazamMatcher();
  sub_1A9066CA8(&qword_1EEABD268, (uint64_t (*)(uint64_t))type metadata accessor for ShazamMatcher, (uint64_t)&unk_1A9409F10);
  swift_retain();
  sub_1A93F795C();
  swift_release();
  swift_release();
  v98 = v35;
  v36 = v80;
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  v37 = v10;
  v38 = v95;
  v76(v10, v91, v95);
  v39 = *(unsigned __int8 *)(v36 + 80);
  v40 = (v39 + 16) & ~v39;
  v77 = v39 | 7;
  v78 = v40;
  v79 = (v79 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = v79;
  v42 = swift_allocObject();
  v43 = v42 + v40;
  v80 = *(_QWORD *)(v36 + 32);
  v44 = v37;
  ((void (*)(uint64_t, char *, uint64_t))v80)(v43, v37, v38);
  v75 = v32;
  *(_QWORD *)(v42 + v41) = v32;
  sub_1A9066CA8(&qword_1EEABD270, (uint64_t (*)(uint64_t))type metadata accessor for ShazamMatcher, (uint64_t)&unk_1A9409E80);
  swift_retain();
  swift_retain();
  v45 = v81;
  sub_1A93F7B3C();
  swift_release();
  swift_release();
  v98 = *(id *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue);
  v46 = v98;
  v47 = sub_1A93F882C();
  v48 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v84, 1, 1, v47);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEABD278, &qword_1EEABD258, MEMORY[0x1E0C957C0]);
  sub_1A905FD90();
  v49 = v46;
  v50 = v83;
  sub_1A93F7C80();
  sub_1A905FD54(v48, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v45, v50);
  v51 = swift_allocObject();
  v52 = v34;
  swift_weakInit();
  v53 = *(char **)(v34 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_analyticsChannel);
  v83 = *(_QWORD *)(v34 + 32);
  v84 = v53;
  v54 = v44;
  v55 = v95;
  v76(v44, v91, v95);
  v56 = v79;
  v57 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
  v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
  v59 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v80)(v59 + v78, v54, v55);
  *(_QWORD *)(v59 + v56) = v75;
  v61 = v83;
  v60 = v84;
  *(_QWORD *)(v59 + v57) = v83;
  *(_QWORD *)(v59 + v58) = v51;
  v62 = v59 + ((v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  v63 = v93;
  *(_QWORD *)v62 = v94;
  *(_QWORD *)(v62 + 8) = v63;
  *(_BYTE *)(v62 + 16) = v92;
  *(_QWORD *)(v59 + ((v58 + 39) & 0xFFFFFFFFFFFFFFF8)) = v60;
  v65 = v89;
  v64 = v90;
  v66 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v86, v52 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger, v90);
  v67 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v68 = (v85 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v69 + v67, v66, v64);
  *(_QWORD *)(v69 + v68) = v61;
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = sub_1A92AFE5C;
  *(_QWORD *)(v70 + 24) = v69;
  swift_retain_n();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1A92AFC24(v94, v93, v92);
  sub_1A9066D74(&qword_1EEABD280, &qword_1EEABD260, MEMORY[0x1E0C95CB8]);
  v71 = v88;
  v72 = v96;
  sub_1A93F7BA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v71);
  swift_beginAccess();
  sub_1A93F7920();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1A92ACC38(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  double v11;
  double v12;
  double v13;
  char v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _BYTE v27[52];
  _OWORD v28[3];
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2A0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider;
  if (!MEMORY[0x1AF41420C](v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider, v5))goto LABEL_4;
  v9 = *(_QWORD *)(v8 + 8);
  ObjectType = swift_getObjectType();
  v11 = COERCE_DOUBLE((*(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 8))(a1, ObjectType, v9));
  v13 = v12;
  v15 = v14;
  swift_unknownObjectRelease();
  if ((v15 & 1) != 0
    || (sub_1A92AE12C((uint64_t)v27, v11, v13),
        sub_1A9062F08((uint64_t)v27, (uint64_t)&v29, &qword_1EEABD2A8),
        (v33 & 1) != 0))
  {
LABEL_4:
    v16 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 16);
    v34 = *MEMORY[0x1E0CA2E50];
    v35 = v16;
    v36 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 32);
    return sub_1A92AE2D8(a1, &v34, 0);
  }
  else
  {
    v19 = v29;
    v20 = v32;
    v21 = v30;
    v22 = v31;
    v23 = sub_1A93F8A0C();
    *(_QWORD *)&v34 = v19;
    *((_QWORD *)&v34 + 1) = __PAIR64__(v22, v21);
    *(_QWORD *)&v35 = v20;
    *((_QWORD *)&v35 + 1) = v23;
    *(_QWORD *)&v36 = v24;
    *((_QWORD *)&v36 + 1) = v25;
    sub_1A93F8748();
    v26[1] = sub_1A92AE2D8(a1, &v34, 2);
    v26[0] = sub_1A92AE2D8(a1, v28, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2B0);
    sub_1A9066D74(&qword_1EEABD2B8, &qword_1EEABD2B0, MEMORY[0x1E0C95D90]);
    sub_1A93F7BFC();
    swift_release();
    swift_release();
    sub_1A9066D74(&qword_1EEABD2C0, &qword_1EEABD2A0, MEMORY[0x1E0C95788]);
    v17 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v17;
}

uint64_t sub_1A92ACEAC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_signpost_type_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  uint8_t *v17;
  os_signpost_id_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v21 = sub_1A93F7638();
  v0 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A93F75FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = sub_1A93F7620();
  sub_1A93F7644();
  v11 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v12 = v21;
    v13 = v6;
    v14 = v3;
    if ((*(unsigned int (**)(char *, uint64_t))(v0 + 88))(v2, v21) == *MEMORY[0x1E0DF2190])
    {
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v12);
      v15 = "CANCELLED";
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v13, v9, v14);
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v10, v11, v18, "AlignmentAssetRead", v15, v17, 2u);
    MEMORY[0x1AF41411C](v17, -1, -1);

    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v14);
    return ((uint64_t (*)(char *, uint64_t))v19)(v13, v14);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

void sub_1A92AD0B8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, int a8, void *a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_signpost_type_t v31;
  uint64_t v32;
  const char *v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  void (*v45)(char *, uint64_t);
  void *v46;
  id v47;
  id v48;
  void *v49;
  _QWORD *v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint8_t *v54;
  os_signpost_id_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  os_unfair_lock_s *v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  _QWORD *v65;
  _QWORD v66[2];
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  _UNKNOWN **v81;

  v69 = a8;
  v68 = a7;
  v74 = a4;
  v72 = a9;
  v70 = sub_1A93F7638();
  v12 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v66 - v16;
  v18 = sub_1A93F75FC();
  v73 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v71 = (char *)v66 - v22;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v66 - v25;
  v27 = *a1;
  if (v27)
  {
    v28 = v24;
    v29 = v27;
    v30 = sub_1A93F7620();
    sub_1A93F7644();
    v31 = sub_1A93F8934();
    if ((sub_1A93F8A6C() & 1) != 0)
    {
      swift_retain();
      sub_1A93F7668();
      swift_release();
      v32 = v70;
      if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v70) == *MEMORY[0x1E0DF2190])
      {
        v33 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
        v33 = "FAILED";
      }
      v41 = v73;
      v42 = v71;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v20, v28);
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      v44 = sub_1A93F75E4();
      _os_signpost_emit_with_name_impl(&dword_1A904E000, v30, v31, v44, "AlignmentAssetRead", v33, v43, 2u);
      MEMORY[0x1AF41411C](v43, -1, -1);

      v45 = *(void (**)(char *, uint64_t))(v41 + 8);
      v45(v20, v28);
      v45(v42, v28);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v73 + 8))(v20, v28);
    }
    v77 = 0;
    v78 = 0xE000000000000000;
    sub_1A93F8C70();
    swift_bridgeObjectRelease();
    v77 = 0xD000000000000020;
    v78 = 0x80000001A944BD20;
    v46 = (void *)sub_1A93F711C();
    v47 = objc_msgSend(v46, sel_code);

    v76 = v47;
    sub_1A93F9060();
    sub_1A93F810C();
    swift_bridgeObjectRelease();
    sub_1A93F810C();
    v48 = _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0();
    swift_bridgeObjectRelease();
    objc_msgSend(v72, sel_sendEvent_, v48);

    sub_1A92AFF7C();
    v49 = (void *)swift_allocError();
    *v50 = v27;
    v51 = v27;
    sub_1A92AB308(v49);

    goto LABEL_22;
  }
  v66[1] = a5;
  v67 = a6;
  v34 = v68;
  v35 = v24;
  v36 = sub_1A93F7620();
  sub_1A93F7644();
  v37 = sub_1A93F8934();
  if ((sub_1A93F8A6C() & 1) != 0)
  {
    swift_retain();
    sub_1A93F7668();
    swift_release();
    v38 = v70;
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v17, v70) == *MEMORY[0x1E0DF2190])
    {
      v39 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v38);
      v39 = "SUCCESS";
    }
    v40 = v34;
    v52 = v73;
    v53 = v71;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v26, v35);
    v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v54 = 0;
    v55 = sub_1A93F75E4();
    _os_signpost_emit_with_name_impl(&dword_1A904E000, v36, (os_signpost_type_t)v37, v55, "AlignmentAssetRead", v39, v54, 2u);
    MEMORY[0x1AF41411C](v54, -1, -1);

    v56 = *(void (**)(char *, uint64_t))(v52 + 8);
    v56(v26, v35);
    v56(v53, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v73 + 8))(v26, v35);
    v40 = v34;
  }
  v57 = v74;
  v58 = (os_unfair_lock_s *)(*(_QWORD *)(v74 + 16) + 16);
  os_unfair_lock_lock(v58);
  swift_beginAccess();
  sub_1A92AFF34(v57 + 56, (uint64_t)&v77);
  os_unfair_lock_unlock(v58);
  v59 = v69;
  v60 = v67;
  if (!v80)
  {
    sub_1A905FD54((uint64_t)&v77, &qword_1EEABD240);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD048);
  v61 = type metadata accessor for AssetReaderTimelineAlignment();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    v63 = v72;
    v64 = _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0();
    objc_msgSend(v63, sel_sendEvent_, v64);

    sub_1A92AFF7C();
    v49 = (void *)swift_allocError();
    *v65 = 0;
    sub_1A92AB308(v49);
LABEL_22:

    return;
  }
  v62 = v75;
  sub_1A9145294();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v77 = v60;
    v78 = v40;
    v79 = v59 & 1;
    sub_1A92AD730(v62, (uint64_t)&v77);
    swift_release();
  }
  v80 = v61;
  v81 = &protocol witness table for AssetReaderTimelineAlignment;
  v77 = v62;
  swift_retain();
  sub_1A92AB1C0((uint64_t)&v77);
  sub_1A905FD54((uint64_t)&v77, &qword_1EEABD240);
  sub_1A92AB308(0);
  swift_release();
}

void sub_1A92AD730(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  char *v21;
  NSObject *v22;
  os_signpost_type_t v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  uint8_t *v26;
  os_signpost_id_t v27;
  uint8_t *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  void (*v32)(char *, uint64_t);
  void (*isa)(uint64_t *, void **);
  NSObject *v34;
  char *v35;
  os_signpost_type_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint8_t *v45;
  os_signpost_id_t v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;

  v3 = v2;
  v6 = sub_1A93F7638();
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F75FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v54 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v54 - v16;
  v18 = *(void **)a2;
  v19 = *(_QWORD *)(a2 + 8);
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    v20 = v18;
    sub_1A92AEEC0(&v63);
    sub_1A92AFC14(v18, v19, 1);
    v18 = v63;
    v19 = v64;
    if (v64)
    {
LABEL_3:
      v56 = v11;
      v61 = v3;
      v21 = (char *)v3 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
      sub_1A93F7620();
      sub_1A93F75D8();
      v54[1] = v21;
      v22 = sub_1A93F7620();
      v23 = sub_1A93F8940();
      v24 = sub_1A93F8A6C();
      v60 = v8;
      v55 = a1;
      if ((v24 & 1) != 0)
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
        v25(v14, v17, v8);
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        v27 = sub_1A93F75E4();
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v22, v23, v27, "AlignmentWriteCache", "", v26, 2u);
        v28 = v26;
        v8 = v60;
        MEMORY[0x1AF41411C](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }
      else
      {

        v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      }
      v31 = v61;
      v54[0] = v25;
      v25(v14, v17, v8);
      sub_1A93F765C();
      swift_allocObject();
      sub_1A93F7650();
      v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32(v17, v8);
      isa = (void (*)(uint64_t *, void **))v31[7].isa;
      v62 = v55;
      v63 = v18;
      v64 = v19;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      isa(&v62, &v63);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v34 = sub_1A93F7620();
      v35 = v56;
      sub_1A93F7644();
      v36 = sub_1A93F8934();
      if ((sub_1A93F8A6C() & 1) != 0)
      {
        v37 = (void (*)(char *, char *, uint64_t))v54[0];
        swift_retain();
        v38 = v57;
        sub_1A93F7668();
        swift_release();
        v40 = v58;
        v39 = v59;
        if ((*(unsigned int (**)(char *, uint64_t))(v58 + 88))(v38, v59) == *MEMORY[0x1E0DF2190])
        {
          v41 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
          v41 = "SUCCESS";
        }
        v43 = v60;
        v37(v14, v35, v60);
        v44 = v35;
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        v46 = sub_1A93F75E4();
        v42 = v43;
        _os_signpost_emit_with_name_impl(&dword_1A904E000, v34, v36, v46, "AlignmentWriteCache", v41, v45, 2u);
        MEMORY[0x1AF41411C](v45, -1, -1);

        v32(v44, v43);
      }
      else
      {

        v14 = v35;
        v42 = v60;
      }
      v47 = v61;
      v32(v14, v42);
      swift_retain_n();
      v48 = sub_1A93F7674();
      v49 = sub_1A93F87B4();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v51 = swift_slowAlloc();
        *(_DWORD *)v50 = 141558275;
        v62 = 1752392040;
        v63 = (void *)v51;
        sub_1A93F8AA8();
        *(_WORD *)(v50 + 12) = 2081;
        v62 = (uint64_t)v47[13].isa;
        sub_1A915997C();
        v52 = sub_1A93F8B38();
        v62 = sub_1A906436C(v52, v53, (uint64_t *)&v63);
        sub_1A93F8AA8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v48, v49, "Writing alignment to disk for %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v51, -1, -1);
        MEMORY[0x1AF41411C](v50, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      swift_release();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_3;
  }
  v61 = sub_1A93F7674();
  v29 = sub_1A93F879C();
  if (os_log_type_enabled(v61, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1A904E000, v61, v29, "Stream was never cached to disk. Skipping cache write.", v30, 2u);
    MEMORY[0x1AF41411C](v30, -1, -1);
  }

}

void sub_1A92ADD50(void *a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28[2];
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;

  v11 = sub_1A93F7698();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, sel_mediaItems, v13);
  sub_1A9072534(0, &qword_1EEABD288);
  v17 = sub_1A93F8310();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v18 = *(void **)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v18)
    goto LABEL_16;
LABEL_3:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x1AF4129DC](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v19 = *(id *)(v17 + 32);
  }
  v18 = v19;
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_signatureAlignments);
  if (v20)
  {
    v21 = v20;
    sub_1A9072534(0, &qword_1EEABD290);
    a4 = sub_1A93F8310();

    v22 = (os_unfair_lock_s *)(*(_QWORD *)(a5 + 16) + 16);
    os_unfair_lock_lock(v22);
    swift_beginAccess();
    sub_1A92AFF34(a5 + 56, (uint64_t)v29);
    os_unfair_lock_unlock(v22);
    if (v30)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD048);
      v23 = type metadata accessor for AssetReaderTimelineAlignment();
      if (swift_dynamicCast())
      {
        v24 = v28[1];
LABEL_14:
        sub_1A91447D8(a4, a2, a3);
        swift_bridgeObjectRelease();
        type metadata accessor for AssetReaderTimelineAlignment();
        v30 = v23;
        v31 = &protocol witness table for AssetReaderTimelineAlignment;
        v29[0] = v24;
        swift_retain();
        sub_1A92AB1C0((uint64_t)v29);
        swift_release();

        sub_1A905FD54((uint64_t)v29, &qword_1EEABD240);
        return;
      }
    }
    else
    {
      sub_1A905FD54((uint64_t)v29, &qword_1EEABD240);
    }
    v5 = sub_1A91154D4(MEMORY[0x1E0DEE9D8]);
    if (qword_1EEAB6D48 == -1)
    {
LABEL_13:
      v25 = __swift_project_value_buffer(v11, (uint64_t)qword_1EEABA660);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v25, v11);
      v23 = type metadata accessor for AssetReaderTimelineAlignment();
      swift_allocObject();
      v24 = sub_1A91446E4(v5, 0, 1, 3, 2000000000000000000, 0, (uint64_t)v15);
      goto LABEL_14;
    }
LABEL_22:
    swift_once();
    goto LABEL_13;
  }

LABEL_17:
  v28[0] = (id)sub_1A93F7674();
  v26 = sub_1A93F879C();
  if (os_log_type_enabled((os_log_t)v28[0], v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1A904E000, (os_log_t)v28[0], v26, "Expected to receive signature alignments for a match.", v27, 2u);
    MEMORY[0x1AF41411C](v27, -1, -1);
  }

}

uint64_t sub_1A92AE12C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;

  if (a2 >= 6.0)
  {
    if (a3 - a2 < 6.0)
    {
      v14 = sub_1A93F7674();
      v15 = sub_1A93F87B4();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_1A904E000, v14, v15, "Adjusting match buffer start point since we're close to the end of the episode.", v16, 2u);
        MEMORY[0x1AF41411C](v16, -1, -1);
      }

    }
    v8 = sub_1A93F8A18();
    v9 = v17;
    v10 = v18;
    result = sub_1A93F8A18();
  }
  else
  {
    v5 = sub_1A93F7674();
    v6 = sub_1A93F87B4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1A904E000, v5, v6, "Playhead is near start of episode, reading from beginning", v7, 2u);
      MEMORY[0x1AF41411C](v7, -1, -1);
    }

    v8 = 0;
    v9 = 0;
    v10 = 0;
    result = 0;
    v12 = 0;
    v13 = 0;
  }
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = a2 < 6.0;
  return result;
}

uint64_t sub_1A92AE2D8(void *a1, _OWORD *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;

  v4 = v3;
  v37 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2C8);
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2D0);
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2D8);
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2E0);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v38 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A923E4B8(a1, a2);
  v20 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue);
  v43 = v20;
  v44 = v19;
  v21 = sub_1A93F882C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  v22 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2E8);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74(&qword_1EEABD2F0, &qword_1EEABD2E8, MEMORY[0x1E0C95D90]);
  sub_1A905FD90();
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v9, &qword_1ED2A1C88);

  swift_release();
  sub_1A9066D74(&qword_1EEABD2F8, &qword_1EEABD2C8, MEMORY[0x1E0C95CB8]);
  sub_1A93F7C44();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
  v23 = *(_QWORD *)(v4 + 24);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  LOBYTE(a1) = v37;
  *(_BYTE *)(v24 + 24) = v37;
  swift_retain();
  v25 = sub_1A92AE83C(0x94049F30F7200000, 97, (uint64_t)sub_1A92B0030, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  v44 = v25;
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = (_BYTE)a1;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1A92B004C;
  *(_QWORD *)(v27 + 24) = v26;
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD308);
  sub_1A9066D74(&qword_1EEABD310, &qword_1EEABD300, MEMORY[0x1E0C95D90]);
  sub_1A9066D74(&qword_1EEABD318, &qword_1EEABD308, MEMORY[0x1E0C95818]);
  sub_1A93F7C5C();
  swift_release();
  swift_release();
  sub_1A9066D74(&qword_1EEABD320, &qword_1EEABD2D8, MEMORY[0x1E0C95B78]);
  swift_retain();
  v28 = v39;
  v29 = v38;
  sub_1A93F7B3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v28);
  sub_1A9066D74(&qword_1EEABD328, &qword_1EEABD2E0, MEMORY[0x1E0C957C0]);
  v30 = v40;
  v31 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
  return v31;
}

void sub_1A92AE7C4(uint64_t a1, uint64_t a2, int a3)
{
  __int128 v5;
  id v6;
  _OWORD v7[3];

  v6 = objc_msgSend(*(id *)(a1 + 16), sel_signature);
  v5 = *(_OWORD *)(a1 + 40);
  v7[0] = *(_OWORD *)(a1 + 24);
  v7[1] = v5;
  v7[2] = *(_OWORD *)(a1 + 56);
  sub_1A9171864(v6, (uint64_t *)v7, a3);

}

uint64_t sub_1A92AE83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD340);
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD348);
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SignatureGenerator();
  v14 = swift_allocObject();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7510]), sel_init);
  v16 = MEMORY[0x1E0CA2E50];
  v17 = *MEMORY[0x1E0CA2E50];
  v18 = *(_QWORD *)(MEMORY[0x1E0CA2E50] + 40);
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = v17;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v16 + 8);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v16 + 16);
  *(_QWORD *)(v14 + 56) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v14 + 64) = v18;
  v24 = v14;
  v25 = 0;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD2D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD350);
  sub_1A9066D74(&qword_1EEABD358, &qword_1EEABD2D0, MEMORY[0x1E0C95838]);
  sub_1A93F7B9C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD360);
  sub_1A9066D74(&qword_1EEABD368, &qword_1EEABD340, MEMORY[0x1E0C959B8]);
  sub_1A93F7B30();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  sub_1A9066D74(&qword_1EEABD370, &qword_1EEABD348, MEMORY[0x1E0C95708]);
  v20 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  return v20;
}

uint64_t sub_1A92AEABC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD330);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = a1;
  type metadata accessor for SignatureGenerator();
  swift_retain();
  sub_1A93F7A58();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_BYTE *)(v10 + 24) = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB8D80);
  sub_1A9066D74(&qword_1EEABD338, &qword_1EEABD330, MEMORY[0x1E0C960B0]);
  sub_1A93F7B6C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1A92AEC00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CMTimeEpoch *v9;
  uint64_t v10;
  CMTimeEpoch epoch;
  uint64_t v12;
  CMTimeValue value;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  void *v19;
  id v20;
  id result;
  id v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  CMTime v28;
  CMTime rhs;
  CMTime lhs;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v4 = a3;
  v5 = a4;
  v37 = *MEMORY[0x1E0C80C00];
  v6 = *a1;
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v23 = a4;
    swift_bridgeObjectRetain();
    v9 = (CMTimeEpoch *)(a2 + 80);
    v26 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 16);
    v27 = *(_OWORD *)(MEMORY[0x1E0CA2E50] + 32);
    v25 = *MEMORY[0x1E0CA2E50];
    while (1)
    {
      v10 = *(v9 - 1);
      epoch = *v9;
      v12 = *(v9 - 3);
      value = *(v9 - 2);
      v14 = *(v9 - 4);
      v15 = (void *)*(v9 - 6);
      v16 = *(v9 - 5);
      v17 = *(_OWORD *)(v6 + 40);
      v31 = *(_OWORD *)(v6 + 24);
      v32 = v17;
      v33 = *(_OWORD *)(v6 + 56);
      v35 = v26;
      v36 = v27;
      v34 = v25;
      v18 = v15;
      if ((sub_1A93F8724() & 1) == 0)
      {
        v14 = *((_QWORD *)&v31 + 1);
        v16 = v31;
        v12 = v32;
        rhs.epoch = epoch;
        lhs.value = *((_QWORD *)&v32 + 1);
        *(_OWORD *)&lhs.timescale = v33;
        rhs.value = value;
        *(_QWORD *)&rhs.timescale = v10;
        CMTimeAdd(&v28, &lhs, &rhs);
        value = v28.value;
        v10 = *(_QWORD *)&v28.timescale;
        epoch = v28.epoch;
      }
      *(_QWORD *)(v6 + 24) = v16;
      *(_QWORD *)(v6 + 32) = v14;
      *(_QWORD *)(v6 + 40) = v12;
      *(_QWORD *)(v6 + 48) = value;
      *(_QWORD *)(v6 + 56) = v10;
      *(_QWORD *)(v6 + 64) = epoch;
      v19 = *(void **)(v6 + 16);
      lhs.value = 0;
      if (!objc_msgSend(v19, sel_appendBuffer_atTime_error_, v18, 0, &lhs, v23))
        break;
      v20 = (id)lhs.value;

      v9 += 7;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        v4 = a3;
        v5 = v23;
        goto LABEL_8;
      }
    }
    v22 = (id)lhs.value;
    sub_1A93F7128();

    swift_willThrow();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    result = objc_msgSend(*(id *)(v6 + 16), sel_signature);
    *(_QWORD *)v5 = result;
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 24);
    *(_OWORD *)(v5 + 24) = *(_OWORD *)(v6 + 40);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(v6 + 56);
    *(_BYTE *)(v5 + 56) = v4;
  }
  return result;
}

void sub_1A92AEE34()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  sub_1A93F79BC();
  v0 = v2;
  if (v2)
  {
    v2 = (void *)v3;
    v3 = *(_QWORD *)v4;
    *(_OWORD *)v4 = *(_OWORD *)&v4[8];
    *(_QWORD *)&v4[16] = v5;
    v5 = v6;
    v1 = v0;
    sub_1A9171864(v1, (uint64_t *)&v2, v7);

  }
}

uint64_t sub_1A92AEEC0@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void (*v20)(char *, uint64_t);
  id v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  char *v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a1;
  v48 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1E0C80A78](v48);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A93F726C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - v16;
  v18 = v1;
  v19 = objc_msgSend(v1, sel_URL, v15);
  sub_1A93F7200();

  LOBYTE(v19) = sub_1A93F7140();
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v17, v7);
  if ((v19 & 1) != 0)
  {
    v21 = objc_msgSend(v18, sel_URL);
    sub_1A93F7200();

    result = AlignmentRequest.init(url:)((uint64_t)v17, &v50);
    v23 = v51;
    v24 = v49;
    *v49 = v50;
    v24[1] = v23;
    return result;
  }
  v46 = v8;
  v47 = v6;
  v44 = v3;
  v45 = v10;
  v25 = objc_msgSend(v18, sel_URL);
  sub_1A93F7200();

  v26 = objc_allocWithZone((Class)type metadata accessor for MediaStreamedAssetCache(0));
  v27 = (void *)sub_1A93F71A0();
  v28 = objc_msgSend((id)objc_opt_self(), sel_streamedMediaAssetURL);
  sub_1A93F7200();

  v29 = (void *)sub_1A93F71A0();
  v20(v13, v7);
  v30 = (char *)objc_msgSend(v26, sel_initWithSourceURL_cacheLocation_purgeability_, v27, v29, 512);

  v20(v17, v7);
  if (!v30)
  {
    v37 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, 1, 1, v7);
    v40 = v49;
LABEL_10:
    result = sub_1A905FD54(v37, &qword_1ED2AD3D0);
    *v40 = 0;
    v40[1] = 0;
    return result;
  }
  v31 = (uint64_t (*)(char *, uint64_t))v20;
  v32 = *(_QWORD *)&v30[OBJC_IVAR___PFMediaStreamedAssetCache_phase];
  v33 = v32 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v32 + 16);
  v34 = (os_unfair_lock_s *)(v32 + ((*(unsigned int *)(*(_QWORD *)v32 + 48) + 3) & 0x1FFFFFFFCLL));
  v35 = v30;
  os_unfair_lock_lock(v34);
  v36 = (uint64_t)v44;
  sub_1A90C3B88(v33, (uint64_t)v44);
  os_unfair_lock_unlock(v34);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v38 = v46;
    v37 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v47, v36, v7);
    v39 = 0;
    v40 = v49;
    v41 = v45;
  }
  else
  {
    sub_1A906E5B0(v36);
    v39 = 1;
    v40 = v49;
    v41 = v45;
    v38 = v46;
    v37 = (uint64_t)v47;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, v39, 1, v7);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v7) == 1)
  {

    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v41, v37, v7);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v17, v41, v7);
  AlignmentRequest.init(url:)((uint64_t)v17, &v50);

  result = v31(v41, v7);
  v42 = v51;
  *v40 = v50;
  v40[1] = v42;
  return result;
}

uint64_t sub_1A92AF2C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  v7 = *a2;
  v8 = *(void **)(*a1 + 16);
  swift_retain();
  objc_msgSend(v8, sel_duration);
  sub_1A93F9450();
  if ((sub_1A93F9420() & 1) != 0)
  {
    a3(v6);
    type metadata accessor for SignatureGenerator();
    v9 = swift_allocObject();
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7510]), sel_init);
    v11 = MEMORY[0x1E0CA2E50];
    v12 = *MEMORY[0x1E0CA2E50];
    v13 = *(_QWORD *)(MEMORY[0x1E0CA2E50] + 40);
    *(_QWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v9 + 24) = v12;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v11 + 8);
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v11 + 16);
    *(_QWORD *)(v9 + 56) = *(_QWORD *)(v11 + 32);
    *(_QWORD *)(v9 + 64) = v13;
    swift_release();
    v6 = v9;
  }
  *a4 = v6;
  a4[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92AF3C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
    v4 = swift_retain();
  else
    v4 = 0;
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92AF3FC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A92AF420(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;

  v3 = v2;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A93F8B8C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD248);
    sub_1A9066D74(&qword_1EEABD250, &qword_1EEABD248, (uint64_t)&unk_1A9421100);
    result = sub_1A93F8670();
    v5 = v22;
    v21 = v23;
    v7 = v24;
    v8 = v25;
    v9 = v26;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v8 = 0;
  }
  v20 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v16 = v8;
    if ((v5 & 0x8000000000000000) == 0)
      break;
    if (!sub_1A93F8BE0())
      return sub_1A9120240();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD248);
    swift_dynamicCast();
    v15 = v27;
    swift_unknownObjectRelease();
    if (!v27)
      return sub_1A9120240();
LABEL_10:
    a2(v15);
    result = swift_release();
    if (v3)
      return sub_1A9120240();
  }
  if (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v8 << 6);
LABEL_9:
    v15 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v14);
    swift_retain();
    if (!v15)
      return sub_1A9120240();
    goto LABEL_10;
  }
  ++v8;
  if (!__OFADD__(v16, 1))
  {
    if (v8 >= v20)
      return sub_1A9120240();
    v17 = *(_QWORD *)(v21 + 8 * v8);
    if (!v17)
    {
      v18 = v16 + 2;
      if (v16 + 2 >= v20)
        return sub_1A9120240();
      v17 = *(_QWORD *)(v21 + 8 * v18);
      if (v17)
        goto LABEL_22;
      v18 = v16 + 3;
      if (v16 + 3 >= v20)
        return sub_1A9120240();
      v17 = *(_QWORD *)(v21 + 8 * v18);
      if (v17)
        goto LABEL_22;
      v18 = v16 + 4;
      if (v16 + 4 >= v20)
        return sub_1A9120240();
      v17 = *(_QWORD *)(v21 + 8 * v18);
      if (v17)
      {
LABEL_22:
        v8 = v18;
      }
      else
      {
        v8 = v16 + 5;
        if (v16 + 5 >= v20)
          return sub_1A9120240();
        v17 = *(_QWORD *)(v21 + 8 * v8);
        if (!v17)
        {
          v19 = v16 + 6;
          while (v20 != v19)
          {
            v17 = *(_QWORD *)(v21 + 8 * v19++);
            if (v17)
            {
              v8 = v19 - 1;
              goto LABEL_23;
            }
          }
          return sub_1A9120240();
        }
      }
    }
LABEL_23:
    v9 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A92AF6FC(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;

  v10 = v9;
  v45 = a8;
  v46 = a7;
  v43 = a5;
  v44 = a6;
  v42 = a4;
  v14 = sub_1A93F7698();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v40 = a2[1];
  v41 = v18;
  v19 = a2[2];
  v38 = a2[3];
  v39 = v19;
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD040);
  v20 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD1A0);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v20 + 16) = v21;
  *(_BYTE *)(v20 + 24) = 1;
  *(_OWORD *)(v20 + 32) = xmmword_1A9411140;
  *(_BYTE *)(v20 + 48) = 2;
  *(_QWORD *)(v20 + 96) = MEMORY[0x1E0DEE9D8];
  sub_1A9062F08((uint64_t)v47, v20 + 56, &qword_1EEABD240);
  *(_QWORD *)(v10 + 32) = v20;
  v22 = OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_started;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5BC0);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 20) = 0;
  *(_BYTE *)(v23 + 16) = 0;
  *(_QWORD *)(v10 + v22) = v23;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_subscriptions) = MEMORY[0x1E0DEE9E8];
  v24 = v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider + 8) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for AssetReader.StateController();
  v25 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD378);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 20) = 0;
  *(_BYTE *)(v26 + 16) = 0;
  v25[3] = 0;
  v25[4] = 0;
  v25[2] = v26;
  if (qword_1EEAB6D10 != -1)
    swift_once();
  v27 = (void *)qword_1EEAB9E70;
  type metadata accessor for AssetReader();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)(v28 + 48) = 0u;
  *(_OWORD *)(v28 + 64) = 0u;
  *(_BYTE *)(v28 + 80) = 1;
  *(_QWORD *)(v28 + 88) = 0;
  *(_QWORD *)(v28 + 16) = v25;
  *(_QWORD *)(v28 + 24) = v27;
  *(_QWORD *)(v10 + 16) = v28;
  v29 = qword_1EEAB6D48;
  v30 = v27;
  if (v29 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v14, (uint64_t)qword_1EEABA660);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v31, v14);
  if (qword_1EEAB6D18 != -1)
    swift_once();
  v32 = (void *)qword_1EEAB9E78;
  type metadata accessor for ShazamMatcher();
  swift_allocObject();
  v33 = v32;
  v34 = sub_1A9173890(a1, (uint64_t)v17, v33);

  *(_QWORD *)(v10 + 24) = v34;
  *(_OWORD *)(v10 + 40) = v41;
  *(_OWORD *)(v10 + 56) = v40;
  *(_OWORD *)(v10 + 72) = v39;
  *(_OWORD *)(v10 + 88) = v38;
  *(_QWORD *)(v10 + 104) = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger, v42, v14);
  v35 = v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  v36 = sub_1A93F762C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v35, v43, v36);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue) = v44;
  *(_QWORD *)(v24 + 8) = v45;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_analyticsChannel) = a9;
  return v10;
}

uint64_t dispatch thunk of ElapsedTimeProviding.timing(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A92AFAB0()
{
  return type metadata accessor for AssetReaderTimelineAligner();
}

uint64_t type metadata accessor for AssetReaderTimelineAligner()
{
  uint64_t result;

  result = qword_1EEABD0B8;
  if (!qword_1EEABD0B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A92AFAF4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A93F7698();
  if (v1 <= 0x3F)
  {
    result = sub_1A93F762C();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for AssetReaderTimelineAligner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetReaderTimelineAligner.__allocating_init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for SignatureGenerator()
{
  return objc_opt_self();
}

void sub_1A92AFC14(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_1A92AFC24(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1A92AFC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A92AFC7C()
{
  return objectdestroyTm_11((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170]);
}

uint64_t sub_1A92AFC88()
{
  sub_1A93F762C();
  return sub_1A92ACEAC();
}

uint64_t sub_1A92AFCC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92AFCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A93F762C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  sub_1A92AFC14(*(void **)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_BYTE *)(v0 + v4 + 16));
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1A92AFDB8(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_1A93F762C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1A92AD0B8(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void **)(v1 + ((v7 + 39) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A92AFE50()
{
  return objectdestroyTm_11((uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258]);
}

void sub_1A92AFE5C(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_1A93F7698() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_1A92ADD50(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A92AFEC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92AFEE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _OWORD *, _QWORD);
  uint64_t v3;
  __int128 v4;
  _OWORD v6[3];

  v2 = *(uint64_t (**)(uint64_t, _OWORD *, _QWORD))(v1 + 16);
  v3 = *a1;
  v4 = *(_OWORD *)(a1 + 3);
  v6[0] = *(_OWORD *)(a1 + 1);
  v6[1] = v4;
  v6[2] = *(_OWORD *)(a1 + 5);
  return v2(v3, v6, *((unsigned __int8 *)a1 + 56));
}

uint64_t sub_1A92AFF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A92AFF7C()
{
  unint64_t result;

  result = qword_1EEABD298;
  if (!qword_1EEABD298)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for TimelineAlignmentError, &type metadata for TimelineAlignmentError);
    atomic_store(result, (unint64_t *)&qword_1EEABD298);
  }
  return result;
}

uint64_t sub_1A92AFFC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = **(_QWORD **)(v1 + 16);
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)a1 + 112))(&v3);
}

uint64_t sub_1A92B000C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A92B0030(uint64_t a1)
{
  uint64_t v1;

  sub_1A92AE7C4(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A92B003C()
{
  return swift_deallocObject();
}

uint64_t sub_1A92B004C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A92AEABC(a1, a2, *(_BYTE *)(v2 + 16));
}

void sub_1A92B0054()
{
  sub_1A92AEE34();
}

uint64_t sub_1A92B005C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1A92B0080@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A92AEC00(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

uint64_t sub_1A92B009C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92B00C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1A92AF2C0(a1, a2, *(void (**)(uint64_t))(v3 + 32), a3);
}

uint64_t dispatch thunk of DatabaseRepresentable.init(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static DatabaseRepresentable.databaseEntityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DatabaseRepresentable.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DatabaseRepresentable.objectID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DatabaseRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of DatabaseRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

id PodcastFeedDownloader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1A92B0120(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t, uint64_t);
  id v38;
  id v39;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char v53[31];
  char v54;
  char v55;
  char v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char v60;

  v52 = a7;
  v50 = a6;
  v48 = a5;
  v51 = a4;
  v47 = a2;
  v46 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = 0;
  v57 = 0u;
  v58 = 0u;
  v60 = 4;
  v53[0] = 1;
  v56 = 1;
  v55 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  v44 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E54D7608;
  v45 = sub_1A91129C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v44;
  v17 = objc_msgSend(a1, sel_description);
  v18 = sub_1A93F8040();
  v20 = v19;

  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;
  v54 = 1;
  v21 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
  swift_bridgeObjectRetain();
  v22 = MEMORY[0x1E0DEE9D8];
  v23 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v24 = sub_1A9112728(v22);
  sub_1A911273C(v22);
  v26 = v25;
  v27 = sub_1A9112844(v22);
  v28 = sub_1A9112858(v22);
  *((_QWORD *)&v43 + 1) = sub_1A911286C(v22);
  *(_QWORD *)&v43 = v28;
  *((_QWORD *)&v42 + 1) = v22;
  *((_QWORD *)&v41 + 1) = v27;
  *(_QWORD *)&v42 = v45;
  *(_QWORD *)&v41 = v22;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v57, v53, &v56, &v55, v23, v24, v26, v22, (uint64_t)v14, v41, v42, v22, v16, &v54, 300, 0, v43, 0, 1,
    1,
    (uint64_t)v11,
    0,
    0,
    v48,
    0,
    0,
    v22,
    v47,
    a3,
    2);
  v29 = v49;
  v30 = (uint64_t)v49 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  swift_beginAccess();
  sub_1A905DC3C(v30, (uint64_t)&v57);
  v31 = *((_QWORD *)&v58 + 1);
  v32 = v59;
  __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
  v33 = swift_allocObject();
  v34 = v46;
  v35 = v50;
  *(_QWORD *)(v33 + 16) = v46;
  *(_QWORD *)(v33 + 24) = v35;
  *(_QWORD *)(v33 + 32) = v52;
  *(_BYTE *)(v33 + 40) = v51;
  *(_QWORD *)(v33 + 48) = v29;
  v36 = v29;
  v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, uint64_t))(v32 + 40);
  v38 = v34;
  swift_retain();
  v39 = v36;
  v37(v14, sub_1A92B1258, v33, v31, v32);
  swift_release();
  sub_1A9114C30((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
}

void sub_1A92B04A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, NSObject *a6, void (*a7)(_QWORD, _QWORD, _QWORD, void *), uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint8_t *v44;
  _QWORD *v45;
  NSObject *v46;
  os_log_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  NSObject *v53;
  NSObject *v54;
  NSObject *v55;
  NSObject *v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  BOOL v60;
  void (*v61)(_QWORD, _QWORD, _QWORD, NSObject *);
  uint64_t v62;
  _QWORD *v63;
  NSObject *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  NSObject *v68;
  id v69;
  id v70;
  _QWORD *v71;
  void *v72;
  NSObject *v73;
  id v74;
  void (*v75)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  NSObject *v79;
  NSObject *v80;
  NSObject *v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t inited;
  unint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)();
  _QWORD *v110;
  NSObject *v111;
  void (*v112)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, _QWORD, _QWORD *, uint64_t, void (*)());
  NSObject *v116;
  void *v117;
  _BYTE *v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint8_t *v122;
  uint8_t *v123;
  os_log_t v124;
  int v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  void (*v133)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v134;
  __int128 aBlock;
  __int128 v136;
  void (*v137)();
  _QWORD *v138;
  uint64_t v139[3];
  char v140;
  char v141;
  char v142;

  v129 = a4;
  v128 = a3;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1E0C80A78](v18);
  v127 = (uint64_t)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A93F7698();
  v134 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v122 - v24;
  MEMORY[0x1E0C80A78](v26);
  v132 = ((char *)&v122 - v28);
  v133 = (void (*)(_QWORD, _QWORD, _QWORD, void *))a7;
  if (a5)
  {
    v29 = a6;
    v131 = v27;
    v30 = a5;
    v126 = (id)sub_1A93F711C();
    v31 = objc_msgSend(v126, sel_userInfo);
    v32 = sub_1A93F7EFC();

    v33 = sub_1A93F8040();
    if (*(_QWORD *)(v32 + 16) && (v35 = sub_1A9094640(v33, v34), (v36 & 1) != 0))
    {
      sub_1A906443C(*(_QWORD *)(v32 + 56) + 32 * v35, (uint64_t)&aBlock);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v136 + 1))
      {
        a6 = v29;
        if (swift_dynamicCast())
        {
          v37 = v139[0];
          if ((a9 & 1) != 0 && v139[0] == 404)
          {
            v132 = a5;
            if (qword_1ED2A4288 != -1)
              swift_once();
            v38 = v131;
            v39 = __swift_project_value_buffer(v131, (uint64_t)qword_1ED2A4268);
            swift_beginAccess();
            (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v25, v39, v38);
            v40 = v29;
            v41 = sub_1A93F7674();
            v42 = sub_1A93F87B4();
            v43 = v42;
            if (os_log_type_enabled(v41, v42))
            {
              v124 = v41;
              v125 = v43;
              v44 = (uint8_t *)swift_slowAlloc();
              v45 = (_QWORD *)swift_slowAlloc();
              v123 = v44;
              *(_DWORD *)v44 = 138412290;
              v122 = v44 + 4;
              *(_QWORD *)&aBlock = v40;
              v46 = v40;
              a6 = v29;
              sub_1A93F8AA8();
              *v45 = v40;

              v47 = v124;
              v48 = v123;
              _os_log_impl(&dword_1A904E000, v124, (os_log_type_t)v125, "Failed to fetch episodes for podcast %@ with 404. Allowing it since allowEpisodesTo404 == true", v123, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
              swift_arrayDestroy();
              MEMORY[0x1AF41411C](v45, -1, -1);
              MEMORY[0x1AF41411C](v48, -1, -1);

            }
            else
            {

            }
            (*(void (**)(char *, uint64_t))(v134 + 8))(v25, v131);
            goto LABEL_30;
          }
          v130 = a8;
          if (v139[0] >= 400 && v139[0] != 429)
          {
            v69 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
            v70 = objc_msgSend(v69, sel_importContext);

            v71 = (_QWORD *)swift_allocObject();
            v71[2] = v70;
            v71[3] = v29;
            v71[4] = v37;
            v137 = sub_1A92B2220;
            v138 = v71;
            *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
            *((_QWORD *)&aBlock + 1) = 1107296256;
            *(_QWORD *)&v136 = sub_1A908A91C;
            *((_QWORD *)&v136 + 1) = &block_descriptor_48;
            v72 = _Block_copy(&aBlock);
            v73 = v29;
            v74 = v70;
            swift_release();
            objc_msgSend(v74, sel_performBlock_, v72);
            _Block_release(v72);

          }
          v75 = v133;
          if (qword_1ED2A4288 != -1)
            swift_once();
          v76 = v131;
          v77 = __swift_project_value_buffer(v131, (uint64_t)qword_1ED2A4268);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v22, v77, v76);
          v78 = a5;
          v79 = v29;
          v80 = a5;
          v81 = v79;
          v82 = sub_1A93F7674();
          v83 = sub_1A93F879C();
          v84 = v83;
          v132 = v82;
          if (os_log_type_enabled(v82, v83))
          {
            v85 = swift_slowAlloc();
            LODWORD(v129) = v84;
            v86 = v85;
            v87 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v86 = 138412546;
            v139[0] = (uint64_t)v81;
            v88 = v81;
            v76 = v131;
            sub_1A93F8AA8();
            *v87 = v81;

            *(_WORD *)(v86 + 12) = 2112;
            v89 = sub_1A93F711C();
            v139[0] = v89;
            sub_1A93F8AA8();
            v87[1] = v89;

            _os_log_impl(&dword_1A904E000, v132, (os_log_type_t)v129, "Failed to fetch episodes for podcast %@ with parse error: %@", (uint8_t *)v86, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
            swift_arrayDestroy();
            MEMORY[0x1AF41411C](v87, -1, -1);
            MEMORY[0x1AF41411C](v86, -1, -1);
          }
          else
          {

          }
          (*(void (**)(char *, uint64_t))(v134 + 8))(v22, v76);
          sub_1A92B222C();
          v117 = (void *)swift_allocError();
          *v118 = 0;
          v75(0, 0, 0, v117);

LABEL_20:
          return;
        }
LABEL_14:
        v49 = v131;
        v50 = a8;
        v51 = v132;
        if (qword_1ED2A4288 != -1)
          swift_once();
        v52 = __swift_project_value_buffer(v49, (uint64_t)qword_1ED2A4268);
        swift_beginAccess();
        (*(void (**)(NSObject *, uint64_t, uint64_t))(v134 + 16))(v51, v52, v49);
        v53 = a5;
        v54 = a6;
        v55 = a5;
        v56 = v54;
        v57 = sub_1A93F7674();
        v58 = sub_1A93F879C();
        v59 = v58;
        v60 = os_log_type_enabled(v57, v58);
        v61 = (void (*)(_QWORD, _QWORD, _QWORD, NSObject *))v133;
        if (v60)
        {
          v62 = swift_slowAlloc();
          v63 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v62 = 138412546;
          LODWORD(v129) = v59;
          v139[0] = (uint64_t)v56;
          v130 = v50;
          v64 = v56;
          sub_1A93F8AA8();
          *v63 = v56;

          *(_WORD *)(v62 + 12) = 2112;
          v65 = sub_1A93F711C();
          v139[0] = v65;
          v49 = v131;
          sub_1A93F8AA8();
          v63[1] = v65;

          _os_log_impl(&dword_1A904E000, v57, (os_log_type_t)v129, "Failed to fetch episodes for podcast %@ with error: %@", (uint8_t *)v62, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
          swift_arrayDestroy();
          v66 = v63;
          v51 = v132;
          MEMORY[0x1AF41411C](v66, -1, -1);
          MEMORY[0x1AF41411C](v62, -1, -1);
        }
        else
        {

        }
        v67 = v126;

        (*(void (**)(NSObject *, uint64_t))(v134 + 8))(v51, v49);
        v68 = a5;
        v61(0, 0, 0, a5);

        goto LABEL_20;
      }
    }
    else
    {
      aBlock = 0u;
      v136 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1A90A593C((uint64_t)&aBlock);
    a6 = v29;
    goto LABEL_14;
  }
LABEL_30:
  v130 = a8;
  v134 = a10;
  if (a1 && (v90 = sub_1A9261424(a1)) != 0)
  {
    v131 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
    v131 = MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405950;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_1E54D7658;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = &unk_1E54D7680;
  v92 = sub_1A91129C4(inited);
  v137 = 0;
  aBlock = 0u;
  v136 = 0u;
  LOBYTE(v138) = 4;
  LOBYTE(v139[0]) = 1;
  v142 = 1;
  v141 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD3B0);
  v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1A9405520;
  v94 = -[NSObject description](a6, sel_description);
  v95 = sub_1A93F8040();
  v132 = a6;
  v97 = v96;

  *(_QWORD *)(v93 + 32) = v95;
  *(_QWORD *)(v93 + 40) = v97;
  v140 = 1;
  v98 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v17, 1, 1, v98);
  v99 = MEMORY[0x1E0DEE9D8];
  v100 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v101 = sub_1A9112728(v99);
  sub_1A911273C(v99);
  v103 = v102;
  v104 = sub_1A9112844(v99);
  v105 = sub_1A9112858(v99);
  *((_QWORD *)&v121 + 1) = sub_1A911286C(v99);
  *(_QWORD *)&v121 = v105;
  *(_QWORD *)&v120 = v92;
  *((_QWORD *)&v120 + 1) = v99;
  *(_QWORD *)&v119 = v99;
  *((_QWORD *)&v119 + 1) = v104;
  v106 = v127;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&aBlock, (char *)v139, &v142, &v141, v100, v101, v103, (uint64_t)&unk_1E54D7630, v127, v119, v120, v99, v93, &v140, 0, 1, v121, 0, 1,
    0,
    (uint64_t)v17,
    0,
    0,
    0,
    0,
    0,
    v99,
    0,
    0,
    2);
  v107 = v134 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  swift_beginAccess();
  sub_1A905DC3C(v107, (uint64_t)&aBlock);
  v108 = *((_QWORD *)&v136 + 1);
  v109 = v137;
  __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v136 + 1));
  v110 = (_QWORD *)swift_allocObject();
  v111 = v132;
  v112 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v133;
  v110[2] = v132;
  v110[3] = v112;
  v113 = v128;
  v110[4] = v130;
  v110[5] = v113;
  v114 = v131;
  v110[6] = v129;
  v110[7] = v114;
  v115 = (void (*)(uint64_t, _QWORD, _QWORD *, uint64_t, void (*)()))*((_QWORD *)v109 + 5);
  swift_bridgeObjectRetain();
  v116 = v111;
  swift_retain();
  v115(v106, sub_1A92B21C0, v110, v108, v109);
  swift_release();
  sub_1A9114C30(v106);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
}

uint64_t sub_1A92B1224()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A92B1258(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v5;

  sub_1A92B04A8(a1, a2, a3, a4, a5, *(NSObject **)(v5 + 16), *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40), *(_QWORD *)(v5 + 48));
}

void sub_1A92B128C(void *a1, void *a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  NSObject *v19;
  NSObject *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  NSObject *v27;
  id v28;
  NSObject *v29;

  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_podcastForStoreId_, objc_msgSend(a2, sel_longLongValue, v8));
  if (v11)
  {
    v27 = a3;
    v12 = qword_1ED2A4288;
    v28 = v11;
    if (v12 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A4268);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    v14 = a2;
    v15 = sub_1A93F7674();
    v16 = sub_1A93F879C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412546;
      v24 = v6;
      v29 = v14;
      v26 = a1;
      v19 = v14;
      v25 = v10;
      v20 = v19;
      v6 = v24;
      sub_1A93F8AA8();
      *v18 = v14;

      *(_WORD *)(v17 + 12) = 2048;
      v29 = v27;
      v10 = v25;
      a1 = v26;
      sub_1A93F8AA8();
      _os_log_impl(&dword_1A904E000, v15, v16, "Failed to fetch episodes for podcast %@ with status %lld. Incrementing consecutiveFeedFetchErrors count", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v18, -1, -1);
      MEMORY[0x1AF41411C](v17, -1, -1);
    }
    else
    {

      v15 = v14;
    }
    v21 = v28;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v22 = (char *)objc_msgSend(v21, sel_consecutiveFeedFetchErrors);
    if (__OFADD__(v22, 1))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v21, sel_setConsecutiveFeedFetchErrors_, v22 + 1);
      objc_msgSend(a1, sel_saveInCurrentBlock);

    }
  }
}

void sub_1A92B1550(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void *a6, void (*a7)(uint64_t, uint64_t, unint64_t, void *), uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  char *v56;
  void *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  _QWORD *v61;
  NSObject *v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  NSObject *v71;
  os_log_t v72;
  uint8_t *v73;
  char *v74;
  _BYTE *v75;
  char *v76;
  os_log_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_t v82;
  uint8_t *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(uint64_t, uint64_t, unint64_t, void *);
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  unint64_t v91;

  v86 = a7;
  v15 = (uint8_t *)sub_1A93F7698();
  v16 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v77 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v77 - v22;
  v24 = sub_1A93F8088();
  MEMORY[0x1E0C80A78](v24);
  v87 = v16;
  if (!a1)
  {
LABEL_28:
    if (a5)
    {
      v52 = a5;
      if (qword_1ED2A4288 != -1)
        swift_once();
      v53 = __swift_project_value_buffer((uint64_t)v15, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      v54 = v85;
      (*(void (**)(char *, uint64_t, uint8_t *))(v16 + 16))(v85, v53, v15);
      v55 = a6;
      v56 = a5;
      v57 = a5;
      v58 = sub_1A93F7674();
      v59 = sub_1A93F879C();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        v61 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v60 = 138412546;
        v82 = v58;
        v83 = v15;
        v89 = v55;
        v62 = v55;
        sub_1A93F8AA8();
        *v61 = v55;

        *(_WORD *)(v60 + 12) = 2112;
        v63 = sub_1A93F711C();
        v89 = v63;
        v15 = v83;
        v16 = v87;
        sub_1A93F8AA8();
        v61[1] = v63;

        v64 = v82;
        _os_log_impl(&dword_1A904E000, v82, v59, "Failed to fetch podcast %@ for feed updates with error: %@", (uint8_t *)v60, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v61, -1, -1);
        v65 = v60;
        v54 = v85;
        MEMORY[0x1AF41411C](v65, -1, -1);

      }
      else
      {

      }
      v74 = (char *)v57;
      (*(void (**)(char *, uint8_t *))(v16 + 8))(v54, v15);
      goto LABEL_40;
    }
    v85 = 0;
    if (qword_1ED2A4288 == -1)
    {
LABEL_34:
      v66 = __swift_project_value_buffer((uint64_t)v15, (uint64_t)qword_1ED2A4268);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint8_t *))(v16 + 16))(v20, v66, v15);
      v67 = a6;
      v68 = sub_1A93F7674();
      v69 = sub_1A93F879C();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        v82 = (os_log_t)swift_slowAlloc();
        v83 = v70;
        *(_DWORD *)v70 = 138412290;
        v89 = v67;
        v71 = v67;
        v16 = v87;
        sub_1A93F8AA8();
        v72 = v82;
        v82->isa = (Class)v67;

        v73 = v83;
        _os_log_impl(&dword_1A904E000, v68, v69, "Failed to fetch podcast %@ for feed updates with unknown error", v83, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v72, -1, -1);
        MEMORY[0x1AF41411C](v73, -1, -1);
      }
      else
      {

        v68 = v67;
      }
      v74 = v85;

      (*(void (**)(char *, uint8_t *))(v16 + 8))(v20, v15);
      sub_1A92B222C();
      v57 = (void *)swift_allocError();
      *v75 = 1;
LABEL_40:
      v76 = v74;
      v86(0, 0, 0, v57);

      return;
    }
LABEL_43:
    swift_once();
    goto LABEL_34;
  }
  v16 = (uint64_t)v15;
  v15 = (uint8_t *)(a1 & 0xFFFFFFFFFFFFFF8);
  if (!(a1 >> 62))
  {
    v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_4;
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  if (!sub_1A93F8E5C())
    goto LABEL_26;
LABEL_4:
  v84 = a8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v26 = MEMORY[0x1AF4129DC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v26 = *(NSObject **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  v27 = swift_dynamicCastClass();
  if (!v27)
  {
    swift_unknownObjectRelease();
LABEL_27:
    v15 = (uint8_t *)v16;
    v16 = v87;
    goto LABEL_28;
  }
  v28 = v27;
  v82 = v26;
  v85 = a5;
  if (a10)
    v29 = a9;
  else
    v29 = 0;
  if (a10)
    v30 = a10;
  else
    v30 = 0xE000000000000000;
  sub_1A93F6DEC();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A93F6DE0();
  v81 = v28;
  v90 = v28;
  sub_1A92B2270();
  v31 = sub_1A93F6DD4();
  v33 = v32;
  swift_release();
  sub_1A93F807C();
  v34 = sub_1A93F8058();
  if (v35)
  {
    v90 = v34;
    v91 = v35;
    sub_1A90828B0();
    v36 = sub_1A93F8B20();
    swift_bridgeObjectRelease();
    v90 = v36;
    sub_1A93F9060();
  }
  sub_1A905F180(v31, v33);
  v90 = v29;
  v91 = v30;
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A93F810C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v91;
  v80 = v90;
  if (qword_1ED2A4288 != -1)
    swift_once();
  v79 = a11;
  v38 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A4268);
  swift_beginAccess();
  v39 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v23, v38, v16);
  v40 = a6;
  swift_bridgeObjectRetain_n();
  v41 = v40;
  v42 = sub_1A93F7674();
  v43 = sub_1A93F87B4();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v45 = (_QWORD *)swift_slowAlloc();
    v78 = swift_slowAlloc();
    v88 = (uint64_t)v41;
    v89 = v78;
    *(_DWORD *)v44 = 138412546;
    v77 = v42;
    v83 = (uint8_t *)v16;
    v46 = v41;
    sub_1A93F8AA8();
    *v45 = v41;

    *(_WORD *)(v44 + 12) = 2080;
    swift_bridgeObjectRetain();
    v47 = v80;
    v88 = sub_1A906436C(v80, v37, (uint64_t *)&v89);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    v48 = v77;
    _os_log_impl(&dword_1A904E000, v77, v43, "Completed feed update of %@ with hash %s", (uint8_t *)v44, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v45, -1, -1);
    v49 = v78;
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v49, -1, -1);
    MEMORY[0x1AF41411C](v44, -1, -1);

    (*(void (**)(char *, uint8_t *))(v87 + 8))(v23, v83);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v16);
    v47 = v80;
  }
  v50 = v81;
  v51 = (_QWORD *)(v81 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  *v51 = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  v86(v50, v47, v37, v85);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
}

void sub_1A92B2068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  id v10;

  if (!a3)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)sub_1A93F8010();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = sub_1A93F711C();
LABEL_6:
  v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a5 + 16))(a5, a1, v8);

}

id PodcastFeedDownloader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastFeedDownloader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PodcastFeedDownloader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PodcastFeedDownloader.downloadPodcast(_:triggerBy:allowEpisodesTo404:isImplicitActionRequest:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1A92B2158()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A92B217C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A92B2068(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1A92B2184()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A92B21C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;

  sub_1A92B1550(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void (**)(uint64_t, uint64_t, unint64_t, void *))(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56));
}

uint64_t sub_1A92B21F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A92B2220()
{
  uint64_t v0;

  sub_1A92B128C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(NSObject **)(v0 + 32));
}

unint64_t sub_1A92B222C()
{
  unint64_t result;

  result = qword_1EEABD388;
  if (!qword_1EEABD388)
  {
    result = MEMORY[0x1AF414014](&unk_1A94194E4, &type metadata for PodcastFeedDownloader.PodcastFeedDownloaderError);
    atomic_store(result, (unint64_t *)&qword_1EEABD388);
  }
  return result;
}

unint64_t sub_1A92B2270()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2A2108;
  if (!qword_1ED2A2108)
  {
    v1 = type metadata accessor for ServerPodcast();
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for ServerPodcastBase, v1);
    atomic_store(result, (unint64_t *)&qword_1ED2A2108);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PodcastFeedDownloader.PodcastFeedDownloaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A92B2304 + 4 * byte_1A9419405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A92B2338 + 4 * asc_1A9419400[v4]))();
}

uint64_t sub_1A92B2338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B2340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B2348);
  return result;
}

uint64_t sub_1A92B2354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B235CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A92B2360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B2368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastFeedDownloader.PodcastFeedDownloaderError()
{
  return &type metadata for PodcastFeedDownloader.PodcastFeedDownloaderError;
}

unint64_t sub_1A92B2388()
{
  unint64_t result;

  result = qword_1EEABD390;
  if (!qword_1EEABD390)
  {
    result = MEMORY[0x1AF414014](&unk_1A94194BC, &type metadata for PodcastFeedDownloader.PodcastFeedDownloaderError);
    atomic_store(result, (unint64_t *)&qword_1EEABD390);
  }
  return result;
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDataSource.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDataSource.observedEpisodeKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EpisodeOnlyProcessorDataSource.episodesPredicate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerShowEpisodeProcessorDataSource.predicate(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)@<X0>(__int128 *a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, char a16, __int128 a17, uint64_t a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v31;
  char v32;
  char v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t result;
  char v42;
  char v43;
  __int128 v44;
  __int128 v45;
  char v46;

  v44 = a1[1];
  v45 = *a1;
  v31 = *((_QWORD *)a1 + 4);
  v42 = *a2;
  v43 = *((_BYTE *)a1 + 40);
  v32 = *a3;
  v33 = *a4;
  v46 = *a14;
  v34 = (int *)type metadata accessor for MediaRequest.Params();
  v35 = a9 + v34[24];
  v36 = sub_1A93F726C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = (_QWORD *)(a9 + v34[25]);
  *v37 = 0;
  v37[1] = 0;
  v38 = (_QWORD *)(a9 + v34[27]);
  *v38 = 0;
  v38[1] = 0;
  v39 = (_QWORD *)(a9 + v34[29]);
  *v39 = 0;
  v39[1] = 0;
  v40 = v34[30];
  *(_BYTE *)(a9 + v40) = 2;
  *(_OWORD *)a9 = v45;
  *(_OWORD *)(a9 + 16) = v44;
  *(_QWORD *)(a9 + 32) = v31;
  *(_BYTE *)(a9 + 40) = v43;
  *(_BYTE *)(a9 + 41) = v42;
  *(_BYTE *)(a9 + 42) = v32;
  *(_BYTE *)(a9 + 43) = v33;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(_QWORD *)(a9 + 112) = a12;
  *(_QWORD *)(a9 + 120) = a13;
  *(_BYTE *)(a9 + 128) = v46;
  *(_QWORD *)(a9 + 136) = a15;
  *(_BYTE *)(a9 + 144) = a16 & 1;
  *(_OWORD *)(a9 + 152) = a17;
  *(_QWORD *)(a9 + 168) = a18;
  *(_BYTE *)(a9 + 176) = a19 & 1;
  *(_BYTE *)(a9 + 177) = a20;
  sub_1A92B26A8(a21, v35);
  swift_bridgeObjectRelease();
  *v37 = a22;
  v37[1] = a23;
  *(_BYTE *)(a9 + v34[26]) = a24;
  swift_bridgeObjectRelease();
  *v38 = a25;
  v38[1] = a26;
  *(_QWORD *)(a9 + v34[28]) = a27;
  result = swift_bridgeObjectRelease();
  *v39 = a28;
  v39[1] = a29;
  *(_BYTE *)(a9 + v40) = a30;
  return result;
}

uint64_t type metadata accessor for MediaRequest.Params()
{
  uint64_t result;

  result = qword_1ED2AC508;
  if (!qword_1ED2AC508)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A92B26A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t MediaRequest.Params.init(recommendationsPersonalizedPayload:contentTypes:moduleIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v27 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v34 = 0u;
  v35 = 0u;
  v36 = 1;
  v32 = 6;
  v31 = 1;
  v30 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  v28 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E54D3EA0;
  v11 = sub_1A91129C4(inited);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = v28;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = &unk_1E54D3EC8;
  v13 = sub_1A91129C4(v12);
  v29 = 1;
  if (*(_QWORD *)(a3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEAB7740);
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = v28;
    *(_BYTE *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = a3;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  v15 = sub_1A9112998(v14);
  v16 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v19 = sub_1A9112728(v17);
  sub_1A911273C(v17);
  v21 = v20;
  *((_QWORD *)&v25 + 1) = sub_1A911286C(v17);
  *(_QWORD *)&v25 = v15;
  *(_QWORD *)&v24 = v13;
  *((_QWORD *)&v24 + 1) = v17;
  *(_QWORD *)&v23 = v17;
  *((_QWORD *)&v23 + 1) = v11;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)&v33, &v32, &v31, &v30, v18, v19, v21, v17, v27, v23, v24, v17, v17, &v29, 0, 1, v25, 0, 1,
           0,
           (uint64_t)v9,
           0,
           0,
           0,
           0,
           0,
           a2,
           0,
           0,
           2);
}

void sub_1A92B2948(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A92B29A0()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A92B2A18(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A92B2A5C()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92B2B0C()
{
  sub_1A93F92DC();
  sub_1A93F9300();
  return sub_1A93F9324();
}

void sub_1A92B2B50(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A92B2BA8()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A92B2C48(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A92B2C98()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A92B2D20(char a1)
{
  sub_1A93F92DC();
  __asm { BR              X10 }
}

uint64_t sub_1A92B2D6C()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t MediaRequest.ContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A92B2E0C + 4 * byte_1A94195E9[*v0]))(0xD000000000000010, 0x80000001A9441B40);
}

uint64_t sub_1A92B2E0C()
{
  return 0x7374736163646F70;
}

uint64_t sub_1A92B2E44()
{
  return 0x697263736E617274;
}

uint64_t sub_1A92B2E64()
{
  return 0x69726F6765746163;
}

uint64_t MediaRequest.RequestType.init(raw:)@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64x2_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C38);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A93F6F60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A93F6F30();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    result = sub_1A92B5068((uint64_t)v4);
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0uLL;
    v14 = -1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = sub_1A93F6F00();
    v11 = v15;
    v16 = sub_1A93F6EC4();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = vdupq_n_s64(0x746567uLL);
    v13.i64[0] = v16;
    v14 = 3;
    v12 = 0xE300000000000000;
  }
  a1->i64[0] = v10;
  a1->i64[1] = v11;
  a1[1] = v13;
  a1[2].i64[0] = v12;
  a1[2].i8[8] = v14;
  return result;
}

PodcastsFoundation::MediaRequest::ContentType_optional __swiftcall MediaRequest.ContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::MediaRequest::ContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaRequest.Params.init(searchTerm:contentTypes:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  char v35;
  char v36;
  __int128 v37[2];
  uint64_t v38;
  char v39;

  v28 = a3;
  v29 = a2;
  v30 = a1;
  v31 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = 0;
  memset(v37, 0, sizeof(v37));
  v39 = 4;
  v36 = 6;
  v35 = 1;
  v34 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A47B0);
  inited = swift_initStackObject();
  v32 = xmmword_1A9405520;
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = &unk_1E54D7460;
  v12 = sub_1A9112F9C(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = v32;
  *(_BYTE *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = &unk_1E54D7488;
  v14 = sub_1A91129C4(v13);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v32;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v15 + 40) = &unk_1E54D74B0;
  v16 = sub_1A91129C4(v15);
  v33 = 1;
  if ((a5 & 1) != 0)
    v17 = 3;
  else
    v17 = a4;
  v18 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = MEMORY[0x1E0DEE9D8];
  v20 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  sub_1A911273C(v19);
  v22 = v21;
  v23 = sub_1A9112858(v19);
  *((_QWORD *)&v27 + 1) = sub_1A911286C(v19);
  *(_QWORD *)&v27 = v23;
  *(_QWORD *)&v26 = v16;
  *((_QWORD *)&v26 + 1) = v19;
  *(_QWORD *)&v25 = v19;
  *((_QWORD *)&v25 + 1) = v14;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v37, &v36, &v35, &v34, v20, v12, v22, v19, v31, v25, v26, v19, v19, &v33, v17, 0, v27, 0, 1,
           0,
           (uint64_t)v10,
           0,
           0,
           0,
           v30,
           v29,
           v28,
           0,
           0,
           2);
}

uint64_t MediaRequest.Params.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_1A919EE64(v2, v3, v4, v5, v6, v7);
}

__n128 MediaRequest.Params.requestType.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 40);
  sub_1A9114BD0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 40) = v3;
  return result;
}

uint64_t (*MediaRequest.Params.requestType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.requestContentType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

_BYTE *MediaRequest.Params.requestContentType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.requestContentType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.viewType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 42);
}

_BYTE *MediaRequest.Params.viewType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 42) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.viewType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.directFetch.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 43);
}

_BYTE *MediaRequest.Params.directFetch.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 43) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.directFetch.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipIncludes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipIncludes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipRelates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipRelates.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipRelates.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipLimit.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipLimit.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipLimit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.include.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.include.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.include.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.omit.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.omit.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.omit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.typedIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.typedIncludes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.typedIncludes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.typedExtends.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.typedExtends.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.typedExtends.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.fields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.fields.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.withTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.withTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.withTypes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.identifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.identifiers.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.fragment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

_BYTE *MediaRequest.Params.fragment.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.fragment.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t MediaRequest.Params.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = result;
  *(_BYTE *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*MediaRequest.Params.limit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.filters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.filters.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.meta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.meta.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 160) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.meta.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t MediaRequest.Params.offset.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = result;
  *(_BYTE *)(v2 + 176) = a2 & 1;
  return result;
}

uint64_t (*MediaRequest.Params.offset.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.requestAllPages.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t MediaRequest.Params.requestAllPages.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 177) = result;
  return result;
}

uint64_t (*MediaRequest.Params.requestAllPages.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.hostUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 96);
  return sub_1A906A3F0(v3, a1);
}

uint64_t MediaRequest.Params.hostUrl.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 96);
  return sub_1A92B26A8(a1, v3);
}

uint64_t (*MediaRequest.Params.hostUrl.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 100));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 100));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.countryCode.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.isImplicitActionRequest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 104));
}

uint64_t MediaRequest.Params.isImplicitActionRequest.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaRequest.Params();
  *(_BYTE *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.isImplicitActionRequest.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.searchTerm.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 108));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.searchTerm.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 108));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.searchTerm.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.queryContentTypes.getter()
{
  type metadata accessor for MediaRequest.Params();
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.queryContentTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MediaRequest.Params() + 112);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.queryContentTypes.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.triggerBy.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 116));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.triggerBy.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 116));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.triggerBy.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

uint64_t MediaRequest.Params.includeEntitlementsOverride.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 120));
}

uint64_t MediaRequest.Params.includeEntitlementsOverride.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaRequest.Params();
  *(_BYTE *)(v1 + *(int *)(result + 120)) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.includeEntitlementsOverride.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MediaRequest.Params();
  return nullsub_1;
}

void sub_1A92B3B60(char *a1)
{
  sub_1A92FA444(*a1);
}

void sub_1A92B3B6C()
{
  char *v0;

  sub_1A92B2B50(*v0);
}

void sub_1A92B3B74(uint64_t a1)
{
  char *v1;

  sub_1A92275C8(a1, *v1);
}

void sub_1A92B3B7C(uint64_t a1)
{
  char *v1;

  sub_1A931C224(a1, *v1);
}

PodcastsFoundation::MediaRequest::ContentType_optional sub_1A92B3B84(Swift::String *a1)
{
  return MediaRequest.ContentType.init(rawValue:)(*a1);
}

uint64_t sub_1A92B3B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaRequest.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A92B3BB4()
{
  sub_1A92B74A4();
  return sub_1A93F82BC();
}

uint64_t sub_1A92B3C10()
{
  sub_1A92B74A4();
  return sub_1A93F828C();
}

PodcastsFoundation::MediaRequest::HTTPMethod_optional __swiftcall MediaRequest.HTTPMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::MediaRequest::HTTPMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaRequest.HTTPMethod.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1953722224;
  if (*v0 != 1)
    v1 = 0x6574656C6564;
  if (*v0)
    return v1;
  else
    return 7628135;
}

uint64_t sub_1A92B3CFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92FA5F8(*a1, *a2);
}

uint64_t sub_1A92B3D08()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92B3D94()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92B3DFC()
{
  sub_1A93F92DC();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::MediaRequest::HTTPMethod_optional sub_1A92B3E84(Swift::String *a1)
{
  return MediaRequest.HTTPMethod.init(rawValue:)(*a1);
}

void sub_1A92B3E90(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE400000000000000;
  v5 = 1953722224;
  if (v2 != 1)
  {
    v5 = 0x6574656C6564;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 7628135;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t MediaRequest.ViewType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A92B4D84(a1);
}

uint64_t MediaRequest.ViewType.rawValue.getter()
{
  return 0x6970652D7478656ELL;
}

uint64_t sub_1A92B3F0C()
{
  return sub_1A925CD90();
}

uint64_t sub_1A92B3F30()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A92B3F54()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A92B3F78@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

void sub_1A92B3F84(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "next-episodes");
  *(_WORD *)(a1 + 14) = -4864;
}

PodcastsFoundation::MediaRequest::IncludeExtendTypes_optional __swiftcall MediaRequest.IncludeExtendTypes.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PodcastsFoundation::MediaRequest::IncludeExtendTypes_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1A93F91F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v5 = 1;
      goto LABEL_5;
    case 2:
      v5 = 2;
LABEL_5:
      v6 = v5;
      break;
    case 3:
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    default:
      v6 = 21;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t MediaRequest.IncludeExtendTypes.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92B4100 + 4 * byte_1A9419604[*v0]))(0x7263736275537369, 0xEC00000064656269);
}

uint64_t sub_1A92B4100()
{
  return 0x72617262694C6E69;
}

unint64_t sub_1A92B411C()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1A92B4270()
{
  return 0xD000000000000010;
}

uint64_t sub_1A92B4298()
{
  return 0x697263736E617274;
}

uint64_t sub_1A92B42B8()
{
  return 0x74657070696E73;
}

uint64_t sub_1A92B42D0()
{
  return 0x69726F6765746163;
}

uint64_t sub_1A92B42EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A92FA2AC(*a1, *a2);
}

uint64_t sub_1A92B42F8()
{
  sub_1A93F92DC();
  MediaRequest.IncludeExtendTypes.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

uint64_t sub_1A92B435C()
{
  MediaRequest.IncludeExtendTypes.rawValue.getter();
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92B43AC()
{
  sub_1A93F92DC();
  MediaRequest.IncludeExtendTypes.rawValue.getter();
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::MediaRequest::IncludeExtendTypes_optional sub_1A92B440C(Swift::String *a1)
{
  return MediaRequest.IncludeExtendTypes.init(rawValue:)(*a1);
}

uint64_t sub_1A92B4418@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaRequest.IncludeExtendTypes.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MediaRequest.URLFragment.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A92B4D84(a1);
}

uint64_t MediaRequest.URLFragment.rawValue.getter()
{
  return 7105633;
}

uint64_t sub_1A92B4458()
{
  return sub_1A925CD90();
}

uint64_t sub_1A92B4468()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A92B4478()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A92B4488@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

void sub_1A92B4494(_QWORD *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

PodcastsFoundation::MediaRequest::Relationship_optional __swiftcall MediaRequest.Relationship.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::MediaRequest::Relationship_optional)sub_1A92B46C4(v1);
}

uint64_t MediaRequest.Relationship.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92B44E4 + 4 * byte_1A9419619[*v0]))(0x7365646F73697065, 0xE800000000000000);
}

unint64_t sub_1A92B44E4()
{
  return 0xD000000000000010;
}

uint64_t sub_1A92B4500()
{
  return 0x2D74736163646F70;
}

uint64_t sub_1A92B4524()
{
  return 0x697263736E617274;
}

void sub_1A92B4544(char *a1)
{
  sub_1A92FA2B8(*a1);
}

void sub_1A92B4550()
{
  char *v0;

  sub_1A92B2C48(*v0);
}

void sub_1A92B4558()
{
  __asm { BR              X10 }
}

uint64_t sub_1A92B4594()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92B4608(uint64_t a1)
{
  char *v1;

  sub_1A931C150(a1, *v1);
}

PodcastsFoundation::MediaRequest::Relationship_optional sub_1A92B4610(Swift::String *a1)
{
  return MediaRequest.Relationship.init(rawValue:)(*a1);
}

uint64_t sub_1A92B461C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A92B464C + 4 * byte_1A9419621[*v0]))();
}

void sub_1A92B464C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001A9441B40;
}

void sub_1A92B466C(_QWORD *a1@<X8>)
{
  *a1 = 0x2D74736163646F70;
  a1[1] = 0xEF736E6F73616573;
}

void sub_1A92B4694(_QWORD *a1@<X8>)
{
  *a1 = 0x697263736E617274;
  a1[1] = 0xEB00000000737470;
}

PodcastsFoundation::MediaRequest::Filter_optional __swiftcall MediaRequest.Filter.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PodcastsFoundation::MediaRequest::Filter_optional)sub_1A92B46C4(v1);
}

uint64_t sub_1A92B46C4@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t MediaRequest.Filter.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92B4744 + 4 * byte_1A9419625[*v0]))(0x656C75646F6DLL, 0xE600000000000000);
}

unint64_t sub_1A92B4744()
{
  return 0xD000000000000016;
}

uint64_t sub_1A92B4760()
{
  return 0x6C725564656566;
}

uint64_t sub_1A92B4778()
{
  return 0x6449636E7973;
}

void sub_1A92B4788(char *a1)
{
  sub_1A92F9F20(*a1);
}

void sub_1A92B4794()
{
  char *v0;

  sub_1A92B2D20(*v0);
}

void sub_1A92B479C()
{
  __asm { BR              X10 }
}

uint64_t sub_1A92B47D4()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92B482C(uint64_t a1)
{
  char *v1;

  sub_1A931BF74(a1, *v1);
}

PodcastsFoundation::MediaRequest::Filter_optional sub_1A92B4834(Swift::String *a1)
{
  return MediaRequest.Filter.init(rawValue:)(*a1);
}

uint64_t sub_1A92B4840()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A92B486C + 4 * byte_1A941962D[*v0]))();
}

void sub_1A92B486C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001A9441DB0;
}

void sub_1A92B488C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C725564656566;
  a1[1] = 0xE700000000000000;
}

void sub_1A92B48A8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6449636E7973;
  a1[1] = v1;
}

PodcastsFoundation::MediaRequest::WithTypes_optional __swiftcall MediaRequest.WithTypes.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::MediaRequest::WithTypes_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaRequest.WithTypes.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92B4950 + 4 * byte_1A9419631[*v0]))(0x63646F507377656ELL, 0xEC00000073747361);
}

uint64_t sub_1A92B4950()
{
  return 0x6D656C7469746E65;
}

uint64_t sub_1A92B4970()
{
  return 0x726566664F707061;
}

uint64_t sub_1A92B4990()
{
  return 0x697263736E617274;
}

uint64_t sub_1A92B49B0()
{
  return 0x6E79536E61656C63;
}

void sub_1A92B49CC(char *a1)
{
  sub_1A92F9D4C(*a1);
}

void sub_1A92B49D8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A92B4A30()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

void sub_1A92B4AD4()
{
  __asm { BR              X10 }
}

uint64_t sub_1A92B4B1C()
{
  sub_1A93F7FBC();
  return swift_bridgeObjectRelease();
}

void sub_1A92B4BAC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A93F92DC();
  __asm { BR              X9 }
}

uint64_t sub_1A92B4C00()
{
  sub_1A93F7FBC();
  swift_bridgeObjectRelease();
  return sub_1A93F9324();
}

PodcastsFoundation::MediaRequest::WithTypes_optional sub_1A92B4CA4(Swift::String *a1)
{
  return MediaRequest.WithTypes.init(rawValue:)(*a1);
}

uint64_t sub_1A92B4CB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A92B4CEC + 4 * byte_1A9419645[*v0]))();
}

void sub_1A92B4CEC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "entitlements");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1A92B4D10(_QWORD *a1@<X8>)
{
  *a1 = 0x726566664F707061;
  a1[1] = 0xE900000000000073;
}

void sub_1A92B4D34(_QWORD *a1@<X8>)
{
  *a1 = 0x697263736E617274;
  a1[1] = 0xEB00000000737470;
}

void sub_1A92B4D58(_QWORD *a1@<X8>)
{
  *a1 = 0x6E79536E61656C63;
  a1[1] = 0xE900000000000063;
}

uint64_t MediaRequest.MediaRequestActionType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A92B4D84(a1);
}

uint64_t sub_1A92B4D84@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A93F8ED4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t MediaRequest.MediaRequestActionType.rawValue.getter()
{
  return 0x746963696C706D69;
}

uint64_t sub_1A92B4DEC()
{
  return sub_1A925CD90();
}

uint64_t sub_1A92B4E04()
{
  return sub_1A93F7FBC();
}

uint64_t sub_1A92B4E1C()
{
  return sub_1A925CE0C();
}

uint64_t sub_1A92B4E34@<X0>(BOOL *a1@<X8>)
{
  return sub_1A925CE60(a1);
}

void sub_1A92B4E40(_QWORD *a1@<X8>)
{
  *a1 = 0x746963696C706D69;
  a1[1] = 0xE800000000000000;
}

PodcastsFoundation::MediaRequest::Field_optional __swiftcall MediaRequest.Field.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PodcastsFoundation::MediaRequest::Field_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A93F8ED4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaRequest.Field.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A92B4EF0 + 4 * byte_1A941964A[*v0]))(0x657373416C6D7474, 0xED0000736C725574);
}

uint64_t sub_1A92B4EF0()
{
  return 0x656B6F546C6D7474;
}

unint64_t sub_1A92B4F14()
{
  return 0xD000000000000016;
}

unint64_t sub_1A92B4F58()
{
  return 0xD000000000000013;
}

uint64_t sub_1A92B4F78()
{
  return 0x72617262694C6E69;
}

void sub_1A92B4F98(char *a1)
{
  sub_1A92FA06C(*a1);
}

void sub_1A92B4FA4()
{
  char *v0;

  sub_1A931C028(0, *v0);
}

void sub_1A92B4FB0(uint64_t a1)
{
  char *v1;

  sub_1A92274C0(a1, *v1);
}

void sub_1A92B4FB8(uint64_t a1)
{
  char *v1;

  sub_1A931C028(a1, *v1);
}

PodcastsFoundation::MediaRequest::Field_optional sub_1A92B4FC0(Swift::String *a1)
{
  return MediaRequest.Field.init(rawValue:)(*a1);
}

uint64_t sub_1A92B4FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaRequest.Field.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MediaRequest.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MediaRequest.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A92B500C(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A92B5068(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A5C38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s18PodcastsFoundation12MediaRequestC0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A92B5104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (v6)
  {
    v18 = v0;
    sub_1A919EE64(v5, v7, v4, v0, v2, v6);
    sub_1A919EE64(v9, v1, v19, v8, v20, v3);
    sub_1A9114BD0(v9, v1, v19, v8, v20, v3);
    sub_1A9114BD0(v5, v7, v4, v18, v2, v6);
    v17 = 0;
  }
  else
  {
    v10 = v4;
    v11 = v4;
    v12 = v1;
    v13 = v2;
    v14 = v2;
    v15 = v0;
    sub_1A919EE64(v5, v7, v11, v0, v14, 0);
    sub_1A919EE64(v9, v12, v19, v8, v20, 0);
    sub_1A9114BD0(v9, v12, v19, v8, v20, 0);
    sub_1A9114BD0(v5, v7, v10, v15, v13, 0);
    v17 = 1;
  }
  return v17 & 1;
}

unint64_t sub_1A92B58E4()
{
  unint64_t result;

  result = qword_1ED2AC500;
  if (!qword_1ED2AC500)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.ContentType, &type metadata for MediaRequest.ContentType);
    atomic_store(result, (unint64_t *)&qword_1ED2AC500);
  }
  return result;
}

unint64_t sub_1A92B592C()
{
  unint64_t result;

  result = qword_1EEABD398;
  if (!qword_1EEABD398)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.HTTPMethod, &type metadata for MediaRequest.HTTPMethod);
    atomic_store(result, (unint64_t *)&qword_1EEABD398);
  }
  return result;
}

unint64_t sub_1A92B5974()
{
  unint64_t result;

  result = qword_1EEABD3A0;
  if (!qword_1EEABD3A0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.ViewType, &type metadata for MediaRequest.ViewType);
    atomic_store(result, (unint64_t *)&qword_1EEABD3A0);
  }
  return result;
}

unint64_t sub_1A92B59BC()
{
  unint64_t result;

  result = qword_1EEABD3A8;
  if (!qword_1EEABD3A8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.IncludeExtendTypes, &type metadata for MediaRequest.IncludeExtendTypes);
    atomic_store(result, (unint64_t *)&qword_1EEABD3A8);
  }
  return result;
}

unint64_t sub_1A92B5A04()
{
  unint64_t result;

  result = qword_1EEABD3B0;
  if (!qword_1EEABD3B0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.URLFragment, &type metadata for MediaRequest.URLFragment);
    atomic_store(result, (unint64_t *)&qword_1EEABD3B0);
  }
  return result;
}

unint64_t sub_1A92B5A4C()
{
  unint64_t result;

  result = qword_1ED2A5590[0];
  if (!qword_1ED2A5590[0])
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.Relationship, &type metadata for MediaRequest.Relationship);
    atomic_store(result, qword_1ED2A5590);
  }
  return result;
}

unint64_t sub_1A92B5A94()
{
  unint64_t result;

  result = qword_1EEABD3B8;
  if (!qword_1EEABD3B8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.Filter, &type metadata for MediaRequest.Filter);
    atomic_store(result, (unint64_t *)&qword_1EEABD3B8);
  }
  return result;
}

unint64_t sub_1A92B5ADC()
{
  unint64_t result;

  result = qword_1EEABD3C0;
  if (!qword_1EEABD3C0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.WithTypes, &type metadata for MediaRequest.WithTypes);
    atomic_store(result, (unint64_t *)&qword_1EEABD3C0);
  }
  return result;
}

unint64_t sub_1A92B5B24()
{
  unint64_t result;

  result = qword_1EEABD3C8;
  if (!qword_1EEABD3C8)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.MediaRequestActionType, &type metadata for MediaRequest.MediaRequestActionType);
    atomic_store(result, (unint64_t *)&qword_1EEABD3C8);
  }
  return result;
}

unint64_t sub_1A92B5B6C()
{
  unint64_t result;

  result = qword_1EEABD3D0;
  if (!qword_1EEABD3D0)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.Field, &type metadata for MediaRequest.Field);
    atomic_store(result, (unint64_t *)&qword_1EEABD3D0);
  }
  return result;
}

uint64_t type metadata accessor for MediaRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaRequest()
{
  return swift_lookUpClassMethod();
}

unint64_t initializeBufferWithCopyOfBuffer for MediaRequest.Params(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  const void *v39;
  unsigned int (*v40)(const void *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_BYTE *)(a2 + 40);
    sub_1A919EE64(*(_QWORD *)a2, v8, v9, v10, v11, v12);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
    *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
    v13 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v13;
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v15;
    v41 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v41;
    v42 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v42;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    v16 = *(_QWORD *)(a2 + 152);
    v17 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v17;
    *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
    v18 = a3[24];
    __dst = (void *)(a1 + v18);
    v39 = (const void *)(a2 + v18);
    *(_QWORD *)(a1 + 152) = v16;
    v19 = sub_1A93F726C();
    v38 = *(_QWORD *)(v19 - 8);
    v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v39, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
      memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(__dst, v39, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v19);
    }
    v22 = a3[25];
    v23 = a3[26];
    v24 = (_QWORD *)(a1 + v22);
    v25 = (_QWORD *)(a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
    v27 = a3[27];
    v28 = a3[28];
    v29 = (_QWORD *)(a1 + v27);
    v30 = (_QWORD *)(a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
    v32 = a3[29];
    v33 = a3[30];
    v34 = (_QWORD *)(a1 + v32);
    v35 = (_QWORD *)(a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaRequest.Params(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A9114BD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 96);
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  const void *v37;
  unsigned int (*v38)(const void *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *__dst;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_1A919EE64(*(_QWORD *)a2, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  v39 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v39;
  v40 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v40;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v15 = *(_QWORD *)(a2 + 152);
  v16 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v16;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v17 = a3[24];
  __dst = (void *)(a1 + v17);
  v37 = (const void *)(a2 + v17);
  *(_QWORD *)(a1 + 152) = v15;
  v18 = sub_1A93F726C();
  v36 = *(_QWORD *)(v18 - 8);
  v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38(v37, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(__dst, v37, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v18);
  }
  v20 = a3[25];
  v21 = a3[26];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v25 = a3[27];
  v26 = a3[28];
  v27 = (_QWORD *)(a1 + v25);
  v28 = (_QWORD *)(a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v30 = a3[29];
  v31 = a3[30];
  v32 = (_QWORD *)(a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_1A919EE64(*(_QWORD *)a2, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  v17 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v11;
  sub_1A9114BD0(v12, v13, v14, v15, v16, v17);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v18 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v19;
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  v20 = a3[24];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = sub_1A93F726C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v9) = v25(v21, 1, v23);
  v26 = v25(v22, 1, v23);
  if (!(_DWORD)v9)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  v28 = a3[25];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v31 = a3[27];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[28]) = *(_QWORD *)(a2 + a3[28]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[29];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  return a1;
}

uint64_t initializeWithTake for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v10 = a3[24];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 152) = v9;
  v13 = sub_1A93F726C();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[28];
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[30];
  *(_OWORD *)(a1 + a3[29]) = *(_OWORD *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unsigned __int8 v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 32) = v6;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v7;
  sub_1A9114BD0(v8, v9, v10, v11, v12, v14);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  v15 = a3[24];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_1A93F726C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  v24 = a3[25];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[28]) = *(_QWORD *)(a2 + a3[28]);
  swift_bridgeObjectRelease();
  v34 = a3[29];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequest.Params()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92B69B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 96), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MediaRequest.Params()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A92B6A44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 48) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 96), a2, a2, v7);
  }
  return result;
}

void sub_1A92B6ABC()
{
  unint64_t v0;

  sub_1A90D80AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for MediaRequest.RequestType(uint64_t a1)
{
  return sub_1A9114BD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1A919EE64(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1A919EE64(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1A9114BD0(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1A9114BD0(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequest.RequestType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaRequest.RequestType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A92B6DAC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A92B6DC4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.RequestType()
{
  return &type metadata for MediaRequest.RequestType;
}

uint64_t storeEnumTagSinglePayload for MediaRequest.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A92B6E44 + 4 * byte_1A941965B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A92B6E78 + 4 * byte_1A9419656[v4]))();
}

uint64_t sub_1A92B6E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B6E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B6E88);
  return result;
}

uint64_t sub_1A92B6E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B6E9CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A92B6EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B6EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaRequest.HTTPMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A92B6F00 + 4 * byte_1A9419665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A92B6F34 + 4 * byte_1A9419660[v4]))();
}

uint64_t sub_1A92B6F34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B6F3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B6F44);
  return result;
}

uint64_t sub_1A92B6F50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B6F58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A92B6F5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B6F64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.HTTPMethod()
{
  return &type metadata for MediaRequest.HTTPMethod;
}

ValueMetadata *type metadata accessor for MediaRequest.ViewType()
{
  return &type metadata for MediaRequest.ViewType;
}

uint64_t getEnumTagSinglePayload for MediaRequest.IncludeExtendTypes(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaRequest.IncludeExtendTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1A92B7070 + 4 * byte_1A941966F[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1A92B70A4 + 4 * byte_1A941966A[v4]))();
}

uint64_t sub_1A92B70A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B70AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B70B4);
  return result;
}

uint64_t sub_1A92B70C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B70C8);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1A92B70CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B70D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.IncludeExtendTypes()
{
  return &type metadata for MediaRequest.IncludeExtendTypes;
}

ValueMetadata *type metadata accessor for MediaRequest.URLFragment()
{
  return &type metadata for MediaRequest.URLFragment;
}

ValueMetadata *type metadata accessor for MediaRequest.Relationship()
{
  return &type metadata for MediaRequest.Relationship;
}

uint64_t _s18PodcastsFoundation12MediaRequestC12RelationshipOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A92B7160 + 4 * byte_1A9419679[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A92B7194 + 4 * byte_1A9419674[v4]))();
}

uint64_t sub_1A92B7194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B719C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B71A4);
  return result;
}

uint64_t sub_1A92B71B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B71B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A92B71BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B71C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.Filter()
{
  return &type metadata for MediaRequest.Filter;
}

uint64_t storeEnumTagSinglePayload for MediaRequest.WithTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A92B722C + 4 * byte_1A9419683[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A92B7260 + 4 * byte_1A941967E[v4]))();
}

uint64_t sub_1A92B7260(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B7268(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B7270);
  return result;
}

uint64_t sub_1A92B727C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B7284);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A92B7288(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B7290(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.WithTypes()
{
  return &type metadata for MediaRequest.WithTypes;
}

uint64_t _s18PodcastsFoundation12MediaRequestC8ViewTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A92B72EC + 4 * byte_1A9419688[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A92B730C + 4 * byte_1A941968D[v4]))();
}

_BYTE *sub_1A92B72EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A92B730C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92B7314(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92B731C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A92B7324(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A92B732C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.MediaRequestActionType()
{
  return &type metadata for MediaRequest.MediaRequestActionType;
}

uint64_t getEnumTagSinglePayload for MediaRequest.Field(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaRequest.Field(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A92B7424 + 4 * byte_1A9419697[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A92B7458 + 4 * byte_1A9419692[v4]))();
}

uint64_t sub_1A92B7458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B7460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A92B7468);
  return result;
}

uint64_t sub_1A92B7474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A92B747CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A92B7480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A92B7488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.Field()
{
  return &type metadata for MediaRequest.Field;
}

unint64_t sub_1A92B74A4()
{
  unint64_t result;

  result = qword_1EEABD470;
  if (!qword_1EEABD470)
  {
    result = MEMORY[0x1AF414014](&protocol conformance descriptor for MediaRequest.ContentType, &type metadata for MediaRequest.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EEABD470);
  }
  return result;
}

uint64_t kMTInterestEntityName.getter()
{
  return 0x657265746E49544DLL;
}

uint64_t kInterestAdamID.getter()
{
  return 0x44496D616461;
}

uint64_t kInterestInterestValue.getter()
{
  return 0x7473657265746E69;
}

uint64_t kInterestLastUpdatedDate.getter()
{
  return 0x616470557473616CLL;
}

unint64_t kInterestUnknownSyncProperties.getter()
{
  return 0xD000000000000015;
}

uint64_t kInterestCategory.getter()
{
  return 0x79726F6765746163;
}

unint64_t kInterestInterestValueUpdatedDate.getter()
{
  return 0xD000000000000018;
}

id static MTInterest.createFetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1A93F8010();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1A92B7618@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_adamID);
  *a2 = result;
  return result;
}

id sub_1A92B7648(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdamID_, *a1);
}

char *keypath_get_selector_interestValue()
{
  return sel_interestValue;
}

id sub_1A92B7668@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_interestValue);
  *a2 = v4;
  return result;
}

id sub_1A92B7698(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInterestValue_, *a1);
}

char *keypath_get_selector_lastUpdatedDate()
{
  return sel_lastUpdatedDate;
}

void sub_1A92B76B8(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_lastUpdatedDate);
  sub_1A93F7368();

}

void sub_1A92B7708(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1A93F7314();
  objc_msgSend(v2, sel_setLastUpdatedDate_, v3);

}

char *keypath_get_selector_unknownSyncProperties()
{
  return sel_unknownSyncProperties;
}

void sub_1A92B775C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_unknownSyncProperties);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1A93F72B4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1A92B77C4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_1A93F729C();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setUnknownSyncProperties_);

}

char *keypath_get_selector_category()
{
  return sel_category;
}

id sub_1A92B7838@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_category);
  *a2 = result;
  return result;
}

id sub_1A92B7870(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategory_, *a1);
}

char *keypath_get_selector_podcast()
{
  return sel_podcast;
}

id sub_1A92B7890@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_podcast);
  *a2 = result;
  return result;
}

id sub_1A92B78C8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPodcast_, *a1);
}

char *keypath_get_selector_channel()
{
  return sel_channel;
}

id sub_1A92B78E8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_channel);
  *a2 = result;
  return result;
}

id sub_1A92B7920(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChannel_, *a1);
}

void URL.markAsPurgeable(urgency:)(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    sub_1A92B7B84();
  else
    sub_1A92B7958(a1);
}

void sub_1A92B7958(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  id v10;
  void *v11;
  int v12;
  int v13;
  Swift::Int32 v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  NSError *v18;
  _QWORD v19[12];
  Swift::OpaquePointer_optional v20;

  v3 = v1;
  v19[11] = *MEMORY[0x1E0C80C00];
  v5 = sub_1A93F726C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, &qword_1ED2A9398);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9(v8, v3, v5);
  v10 = sub_1A9322370((uint64_t)v8);
  if (!v2)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_fileDescriptor);
    if (a1 < 0)
    {
      sub_1A93F8E08();
      __break(1u);
    }
    else
    {
      v19[0] = a1 | 0x10006u;
      v13 = ffsctl(v12, 0xC0084A44uLL, v19, 0);
      if (v13)
      {
        v14 = v13;
        sub_1A9072534(0, &qword_1ED2ABD18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A9405520;
        *(_QWORD *)(inited + 32) = sub_1A93F8040();
        *(_QWORD *)(inited + 40) = v16;
        *(_QWORD *)(inited + 72) = v5;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        v9((char *)boxed_opaque_existential_1, v3, v5);
        v20.value._rawValue = (void *)sub_1A908A4A8(inited);
        NSError.init(fsctlCode:userInfo:)(v18, v14, v20);
        swift_willThrow();
      }
      objc_msgSend(v11, sel_closeFile);

    }
  }
}

void sub_1A92B7B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  id v8;
  void *v9;
  int v10;
  int v11;
  Swift::Int32 v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  NSError *v16;
  _QWORD v17[12];
  Swift::OpaquePointer_optional v18;

  v2 = v0;
  v17[11] = *MEMORY[0x1E0C80C00];
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9072534(0, &qword_1ED2A9398);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v2, v3);
  v8 = sub_1A9322370((uint64_t)v6);
  if (!v1)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_fileDescriptor);
    v17[0] = 0;
    v11 = ffsctl(v10, 0xC0084A44uLL, v17, 0);
    if (v11)
    {
      v12 = v11;
      sub_1A9072534(0, &qword_1ED2ABD18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A9405520;
      *(_QWORD *)(inited + 32) = sub_1A93F8040();
      *(_QWORD *)(inited + 40) = v14;
      *(_QWORD *)(inited + 72) = v3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      v7((char *)boxed_opaque_existential_1, v2, v3);
      v18.value._rawValue = (void *)sub_1A908A4A8(inited);
      NSError.init(fsctlCode:userInfo:)(v16, v12, v18);
      swift_willThrow();
    }
    objc_msgSend(v9, sel_closeFile);

  }
}

void __swiftcall NSError.init(fsctlCode:userInfo:)(NSError *__return_ptr retstr, Swift::Int32 fsctlCode, Swift::OpaquePointer_optional userInfo)
{
  unint64_t v4;
  unint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  id v11;
  id v12;
  void *v13;
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;

  v4 = 0xD000000000000031;
  v5 = 0x80000001A944C0C0;
  switch(fsctlCode)
  {
    case 2:
      v4 = 0xD00000000000001DLL;
      v6 = "The named file does not exist";
      goto LABEL_12;
    case 5:
      v4 = 0xD000000000000041;
      v6 = "An I/O error occurred while reading or writing to the file system";
      goto LABEL_12;
    case 13:
      v4 = 0xD00000000000003ELL;
      v6 = "Search permission is denied for a component of the path prefix";
      goto LABEL_12;
    case 14:
      v4 = 0xD000000000000029;
      v6 = "Path or data points to an invalid address";
      goto LABEL_12;
    case 20:
      goto LABEL_4;
    case 22:
      v4 = 0xD00000000000001BLL;
      v6 = "Request or data is invalid.";
      goto LABEL_12;
    case 62:
      v4 = 0xD000000000000045;
      v6 = "Too many symbolic links were encountered in translating the pathname.";
      goto LABEL_12;
    case 63:
      v4 = 0xD000000000000074;
      v6 = "A component of the pathname exceeded the maximum allowed characters, or the path exceeded the total allowable length";
LABEL_12:
      v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      if (!userInfo.value._rawValue)
        goto LABEL_13;
      goto LABEL_5;
    default:
      v5 = 0x80000001A944BED0;
      v4 = 0xD00000000000001ALL;
LABEL_4:
      if (userInfo.value._rawValue)
        goto LABEL_5;
LABEL_13:
      sub_1A908A4A8(MEMORY[0x1E0DEE9D8]);
LABEL_5:
      v7 = sub_1A93F8040();
      v9 = v8;
      v16 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v15 = v4;
      *((_QWORD *)&v15 + 1) = v5;
      sub_1A908A5DC(&v15, v14);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A930E0CC(v14, v7, v9, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v12 = (id)*MEMORY[0x1E0CB2FE0];
      v13 = (void *)sub_1A93F7ED8();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v12, fsctlCode, v13);

      return;
  }
}

uint64_t URL.isPodcastsPurgeable(with:)(int a1)
{
  uint64_t v1;
  int v3;
  BOOL v4;
  uint64_t result;

  sub_1A92B7FF4();
  if (v1)
    return v4;
  if ((a1 & 0x80000000) == 0)
  {
    v4 = (v3 & a1) != 0;
    if ((v3 & 6) == 0)
      return 0;
    return v4;
  }
  result = sub_1A93F8E08();
  __break(1u);
  return result;
}

void sub_1A92B7FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  id v8;
  void *v9;
  int v10;
  Swift::Int32 v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  NSError *v15;
  _QWORD v16[12];
  Swift::OpaquePointer_optional v17;

  v2 = v0;
  v16[11] = *MEMORY[0x1E0C80C00];
  v3 = sub_1A93F726C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = 65542;
  sub_1A9072534(0, &qword_1ED2A9398);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v2, v3);
  v8 = sub_1A9322370((uint64_t)v6);
  if (!v1)
  {
    v9 = v8;
    v10 = ffsctl((int)objc_msgSend(v8, sel_fileDescriptor), *(unint64_t *)"GJ\b@", v16, 0);
    if (v10)
    {
      v11 = v10;
      sub_1A9072534(0, &qword_1ED2ABD18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9740);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A9405520;
      *(_QWORD *)(inited + 32) = sub_1A93F8040();
      *(_QWORD *)(inited + 40) = v13;
      *(_QWORD *)(inited + 72) = v3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      v7((char *)boxed_opaque_existential_1, v2, v3);
      v17.value._rawValue = (void *)sub_1A908A4A8(inited);
      NSError.init(fsctlCode:userInfo:)(v15, v11, v17);
      swift_willThrow();
    }

  }
}

uint64_t URL.isPodcastsPurgeable(with:flags:)(int a1, int a2)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1A93F8E08();
    __break(1u);
  }
  else
  {
    return (a2 & 6) != 0 && (a1 & a2) != 0;
  }
  return result;
}

unint64_t URL.podcastsPurgeableLevel()()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  BOOL v5;

  sub_1A92B7FF4();
  if (!v0)
  {
    v3 = 512;
    if ((v1 & 6) != 0 && (v1 & 0x200) != 0 || (v3 = 2048, (v1 & 6) != 0) && (v1 & 0x800) != 0)
    {
      v4 = 0;
    }
    else
    {
      v3 = 0x8000;
      v5 = (v1 & 0x8000) == 0 || (v1 & 6) == 0;
      v4 = v5;
      if (v5)
        v3 = 0;
    }
    return v3 | ((unint64_t)v4 << 32);
  }
  return v2;
}

uint64_t sub_1A92B8300(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v27 = a7;
  v28 = a8;
  v26 = a2;
  v13 = sub_1A93F7D58();
  v30 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1A93F7DB8();
  v16 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1AF41420C](a3 + 16);
  if (result)
  {
    v20 = (void *)result;
    v25 = a9;
    v21 = objc_retain(*(id *)(result
                            + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue));

    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a4;
    *(_QWORD *)(v22 + 24) = a5;
    *(_QWORD *)(v22 + 32) = a1;
    v23 = v26 & 1;
    *(_BYTE *)(v22 + 40) = v23;
    aBlock[4] = v27;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908A91C;
    aBlock[3] = v28;
    v24 = _Block_copy(aBlock);
    swift_retain();
    v25(a1, v23);
    sub_1A93F7D88();
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1A90A1130();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D28();
    sub_1A93F8B5C();
    MEMORY[0x1AF412598](0, v18, v15, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v29);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A92B8594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);

  v7 = *v3;
  v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v8);
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v12 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  swift_retain();
  v12(a1, sub_1A92B8934, v11, v8, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1A92B867C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);

  v5 = *v2;
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v10 = *(void (**)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  swift_retain();
  v10(sub_1A92B88A8, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1A92B8754(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t);

  v5 = *v2;
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v10 = *(void (**)(uint64_t (*)(uint64_t, char), _QWORD *, uint64_t, uint64_t))(v7 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1A92B8854, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1A92B882C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92B8854(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_1A92B8300(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1E54ED700, (uint64_t)sub_1A90C3EA0, (uint64_t)&block_descriptor_49, (void (*)(uint64_t, uint64_t))sub_1A90BF154);
}

uint64_t sub_1A92B88A8(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_1A92B8300(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1E54ED778, (uint64_t)sub_1A90C3EA0, (uint64_t)&block_descriptor_16_2, (void (*)(uint64_t, uint64_t))sub_1A90BF154);
}

uint64_t objectdestroy_5Tm_3()
{
  uint64_t v0;

  swift_release();
  sub_1A909CFC0(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1A92B8934(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_1A92B8300(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1E54ED868, (uint64_t)sub_1A90C3EA0, (uint64_t)&block_descriptor_36, (void (*)(uint64_t, uint64_t))sub_1A92B89B0);
}

uint64_t sub_1A92B8980()
{
  uint64_t v0;

  swift_release();
  sub_1A91B8E14(*(id *)(v0 + 32));
  return swift_deallocObject();
}

id sub_1A92B89B0(id a1)
{
  return a1;
}

id AutoDownloadProcessorDownloader.capacityMonitor.getter()
{
  id *v0;

  return *v0;
}

uint64_t AutoDownloadProcessorDownloader.reachability.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t AutoDownloadProcessorDownloader.downloader.getter()
{
  return swift_unknownObjectRetain();
}

id AutoDownloadProcessorDownloader.context.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t AutoDownloadProcessorDownloader.analyticsChannel.getter()
{
  return swift_unknownObjectRetain();
}

id AutoDownloadProcessorDownloader.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t AutoDownloadProcessorDownloader.didMatch(episodes:)(uint64_t a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  objc_class *v23;
  char *v24;
  id (**v25)();
  __CFString *v26;
  id v27;
  uint64_t v28;
  __int128 v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  id v91;
  id v92;
  objc_super v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1C88);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8F50);
  v65 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8D88);
  v69 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8DE0);
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v66 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FA8);
  v74 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v67 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CC0);
  v78 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v70 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8DF8);
  v14 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  v82 = v14;
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8FC0);
  v17 = *(_QWORD *)(v16 - 8);
  v83 = v16;
  v84 = v17;
  MEMORY[0x1E0C80A78](v16);
  v76 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8CD8);
  v87 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v79 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A8BD0);
  v88 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v80 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v1[2];
  v95 = v1[1];
  v96 = v21;
  v94 = *v1;
  v97 = *((_QWORD *)v1 + 6);
  v22 = (void *)v21;
  v23 = (objc_class *)type metadata accessor for AnalyticsEvent();
  v24 = (char *)objc_allocWithZone(v23);
  *(_QWORD *)&v24[OBJC_IVAR___PFAnalyticsEvent_name] = CFSTR("com.apple.podcasts.downloads.settings.global.retention-policy");
  v25 = (id (**)())&v24[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *v25 = sub_1A939146C;
  v25[1] = 0;
  v93.receiver = v24;
  v93.super_class = v23;
  v26 = CFSTR("com.apple.podcasts.downloads.settings.global.retention-policy");
  v27 = objc_msgSendSuper2(&v93, sel_init);
  objc_msgSend(v22, sel_sendEvent_, v27);

  v28 = swift_allocObject();
  v29 = v95;
  *(_OWORD *)(v28 + 16) = v94;
  *(_OWORD *)(v28 + 32) = v29;
  *(_OWORD *)(v28 + 48) = v96;
  *(_QWORD *)(v28 + 64) = v97;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9258);
  swift_allocObject();
  sub_1A92BAC24((uint64_t)&v94);
  v30 = (void *)sub_1A93F7A94();
  v31 = (void *)*((_QWORD *)&v96 + 1);
  v91 = (id)*((_QWORD *)&v96 + 1);
  v92 = v30;
  v63 = sub_1A93F882C();
  v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
  v90(v5, 1, 1, v63);
  v62[1] = sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  sub_1A9066D74((unint64_t *)&unk_1ED2A9248, &qword_1ED2A9258, MEMORY[0x1E0C96108]);
  v89 = sub_1A905FD90();
  v32 = v31;
  v62[0] = v5;
  sub_1A93F7C80();
  sub_1A905FD54((uint64_t)v5, &qword_1ED2A1C88);

  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A90A8);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8F40, &qword_1ED2A8F50, MEMORY[0x1E0C95CB8]);
  sub_1A9066D74((unint64_t *)&unk_1ED2A9098, &qword_1ED2A90A8, MEMORY[0x1E0C95D90]);
  v33 = v64;
  sub_1A93F7D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v33);
  v34 = swift_allocObject();
  v35 = v95;
  *(_OWORD *)(v34 + 16) = v94;
  *(_OWORD *)(v34 + 32) = v35;
  *(_OWORD *)(v34 + 48) = v96;
  *(_QWORD *)(v34 + 64) = v97;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1A92BACC8;
  *(_QWORD *)(v36 + 24) = v34;
  sub_1A92BAC24((uint64_t)&v94);
  sub_1A93F78E4();
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9280);
  v37 = MEMORY[0x1E0C95B78];
  sub_1A9066D74((unint64_t *)&unk_1ED2A8D78, &qword_1ED2A8D88, MEMORY[0x1E0C95B78]);
  v65 = sub_1A9066D74((unint64_t *)&unk_1ED2A9270, &qword_1ED2A9280, MEMORY[0x1E0C96108]);
  v38 = v66;
  v39 = v68;
  sub_1A93F7D28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v39);
  v92 = v32;
  v40 = v62[0];
  v41 = v63;
  v90((char *)v62[0], 1, 1, v63);
  sub_1A9066D74(&qword_1ED2A8DD8, &qword_1ED2A8DE0, v37);
  v42 = v32;
  v43 = v67;
  v44 = v71;
  sub_1A93F7C80();
  sub_1A905FD54(v40, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v44);
  sub_1A9066D74(&qword_1ED2A8FA0, &qword_1ED2A8FA8, MEMORY[0x1E0C95CB8]);
  v45 = v70;
  v46 = v73;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v46);
  v47 = swift_allocObject();
  v48 = v95;
  *(_OWORD *)(v47 + 16) = v94;
  *(_OWORD *)(v47 + 32) = v48;
  *(_OWORD *)(v47 + 48) = v96;
  *(_QWORD *)(v47 + 64) = v97;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = sub_1A92BACF4;
  *(_QWORD *)(v49 + 24) = v47;
  sub_1A92BAC24((uint64_t)&v94);
  sub_1A93F78E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8CB0, &qword_1ED2A8CC0, MEMORY[0x1E0C95AD0]);
  v50 = v75;
  v51 = v77;
  sub_1A93F7C5C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v51);
  v92 = v42;
  v90((char *)v40, 1, 1, v41);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8DE8, &qword_1ED2A8DF8, MEMORY[0x1E0C95B78]);
  v52 = v42;
  v53 = v76;
  v54 = v81;
  sub_1A93F7C80();
  sub_1A905FD54(v40, &qword_1ED2A1C88);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v54);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8FB0, &qword_1ED2A8FC0, MEMORY[0x1E0C95CB8]);
  v55 = v79;
  v56 = v83;
  sub_1A93F7C08();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v56);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8CC8, &qword_1ED2A8CD8, MEMORY[0x1E0C95AD0]);
  v57 = v80;
  v58 = v85;
  sub_1A93F7B84();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v58);
  sub_1A9066D74((unint64_t *)&unk_1ED2A8BC0, &qword_1ED2A8BD0, MEMORY[0x1E0C95950]);
  v59 = v86;
  v60 = sub_1A93F7B24();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v57, v59);
  return v60;
}

uint64_t sub_1A92B9494@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9190);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9188);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    v16[1] = a2;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
    sub_1A93F7A58();
    sub_1A9066D74((unint64_t *)&unk_1ED2A9178, &qword_1ED2A9188, MEMORY[0x1E0C960B0]);
    v14 = sub_1A93F7B24();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
    sub_1A93F7A64();
    sub_1A9066D74(&qword_1ED2A5A60, &qword_1ED2A9190, MEMORY[0x1E0C960D0]);
    v14 = sub_1A93F7B24();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *a3 = v14;
  return result;
}

uint64_t sub_1A92B9638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = swift_allocObject();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(v4 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A9280);
  swift_allocObject();
  sub_1A92BAC24(a2);
  swift_bridgeObjectRetain();
  return sub_1A93F7A94();
}

void sub_1A92B96D4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_1ED2A3F28 != -1)
    swift_once();
  v0 = sub_1A93F7698();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A3F08);
  swift_bridgeObjectRetain_n();
  v1 = sub_1A93F7674();
  v2 = sub_1A93F879C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_bridgeObjectRetain();
    v5 = sub_1A93F8604();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_1A906436C(v5, v7, &v8);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v1, v2, "Failed to start downloads for episodes: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v4, -1, -1);
    MEMORY[0x1AF41411C](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A92B98A0(void (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  os_unfair_lock_s **v17;
  os_unfair_lock_s *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  const void *v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 aBlock;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1A93F7D58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A93F7DB8();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = *(_QWORD *)a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1A92BB19C;
  *(_QWORD *)(v15 + 24) = v13;
  v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v15 + 80) = *(_QWORD *)(a3 + 48);
  if (*(_QWORD *)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor_vfsSource))
  {
    v17 = (os_unfair_lock_s **)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor____capacityLevel);
    swift_beginAccess();
    v18 = *v17;
    v19 = *v17 + 4;
    swift_retain();
    sub_1A92BAC24(a3);
    swift_retain();
    sub_1A92BAC24(a3);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v18 + 6);
    sub_1A910F090(v19, &aBlock);
    os_unfair_lock_unlock(v18 + 6);
    v20 = aBlock;
    swift_release();
    v21 = *(_OWORD *)(a3 + 16);
    aBlock = *(_OWORD *)a3;
    v33 = v21;
    v34 = *(_OWORD *)(a3 + 32);
    v35 = *(_QWORD *)(a3 + 48);
    LOBYTE(aBlock) = sub_1A92B9CAC(v20) & 1;
    LOWORD(aBlock) = aBlock;
    a1(&aBlock);
  }
  else
  {
    v29 = *(_QWORD *)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue);
    v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v22;
    v23[3] = sub_1A92BB230;
    v28 = v22;
    v23[4] = v15;
    *(_QWORD *)&v34 = sub_1A92BB2D8;
    *((_QWORD *)&v34 + 1) = v23;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v33 = sub_1A908A91C;
    *((_QWORD *)&v33 + 1) = &block_descriptor_59;
    v27 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A92BAC24(a3);
    swift_retain();
    sub_1A92BAC24(a3);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A93F7D88();
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v26 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
    sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
    sub_1A93F8B5C();
    v24 = v27;
    MEMORY[0x1AF412598](0, v12, v9, v27);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return sub_1A92BB12C(a3);
}

uint64_t sub_1A92B9CAC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *(void **)(v1 + 8);
  v4 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v5 = objc_msgSend(v4, sel_isLowPowerModeEnabled);

  if (v5)
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v6 = sub_1A93F7698();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A3F08);
    v7 = sub_1A93F7674();
    v8 = sub_1A93F8784();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_19;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "Skipping autodownloads - Low Power Mode";
LABEL_18:
    _os_log_impl(&dword_1A904E000, v7, v8, v10, v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
LABEL_19:

    return 0;
  }
  if (a1)
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v11 = sub_1A93F7698();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2A3F08);
    v7 = sub_1A93F7674();
    v8 = sub_1A93F8784();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_19;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "Skipping autodownloads - Device is out of storage";
    goto LABEL_18;
  }
  if (!objc_msgSend(v3, sel_isReachable))
  {
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v13 = sub_1A93F7698();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED2A3F08);
    v7 = sub_1A93F7674();
    v8 = sub_1A93F8784();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_19;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "Skipping autodownloads - network unreachable";
    goto LABEL_18;
  }
  if (objc_msgSend(v3, sel_isReachableViaCellular))
    return (uint64_t)objc_msgSend(v3, sel_isPodcastsCellularDownloadsEnabled);
  else
    return 1;
}

uint64_t sub_1A92B9F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  _QWORD aBlock[7];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v9 + 16) = sub_1A92BA0C4();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9E8];
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1A90BF1B4(v11);
  swift_bridgeObjectRelease();
  v13 = *(void **)(a3 + 24);
  v14 = swift_allocObject();
  v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(a3 + 48);
  *(_QWORD *)(v14 + 72) = v12;
  *(_QWORD *)(v14 + 80) = a4;
  *(_QWORD *)(v14 + 88) = sub_1A908CDB8;
  *(_QWORD *)(v14 + 96) = v8;
  *(_QWORD *)(v14 + 104) = v9;
  *(_QWORD *)(v14 + 112) = v10;
  aBlock[4] = sub_1A92BB118;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_44_1;
  v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_1A92BAC24(a3);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v16);
  _Block_release(v16);
  swift_release();
  return swift_release();
}

id sub_1A92BA0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  id v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v0 = sub_1A93F726C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedDocumentsDirectory);
  sub_1A93F7200();

  sub_1A93F7224();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v6 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = 0;
  v7 = objc_msgSend(v5, sel_attributesOfFileSystemForPath_error_, v6, &v33);

  v8 = (void *)v33;
  if (!v7)
  {
    v14 = (id)v33;
    v15 = (void *)sub_1A93F7128();

    swift_willThrow();
    if (qword_1ED2A3F28 != -1)
      swift_once();
    v16 = sub_1A93F7698();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED2A3F08);
    v17 = sub_1A93F7674();
    v18 = sub_1A93F879C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1A904E000, v17, v18, "Unable to compute free space, autodownload system will not download anything", v19, 2u);
      MEMORY[0x1AF41411C](v19, -1, -1);
    }

    v20 = v15;
    v21 = v15;
    v22 = sub_1A93F7674();
    v23 = sub_1A93F879C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_QWORD *)&v33 = v25;
      *(_DWORD *)v24 = 136315138;
      v32 = v15;
      v26 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
      v27 = sub_1A93F8094();
      v32 = (id)sub_1A906436C(v27, v28, (uint64_t *)&v33);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A904E000, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v25, -1, -1);
      MEMORY[0x1AF41411C](v24, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_1A9066CA8((unint64_t *)&unk_1ED2A93F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A940545C);
  v9 = sub_1A93F7EFC();
  v10 = v8;

  if (*(_QWORD *)(v9 + 16))
  {
    v11 = (id)*MEMORY[0x1E0CB2B00];
    v12 = sub_1A912E5B4((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      sub_1A906443C(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v33);
    }
    else
    {
      v33 = 0u;
      v34 = 0u;
    }

  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v34 + 1))
  {
    sub_1A905FD54((uint64_t)&v33, qword_1ED2AC800);
    return 0;
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A4230);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v29 = v32;
  v30 = objc_msgSend(v32, sel_longLongValue);

  return v30;
}

void sub_1A92BA56C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, _QWORD *a6)
{
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  void (*v18)(_QWORD, _QWORD);
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unsigned int v39;
  id v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45[8];
  uint64_t v46[3];

  v9 = *(void **)(a1 + 24);
  v10 = (void *)sub_1A93F82F8();
  v11 = objc_msgSend(v9, sel_episodesForUuids_, v10);

  if (!v11)
  {
    if (qword_1ED2A3F28 == -1)
    {
LABEL_6:
      v15 = sub_1A93F7698();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED2A3F08);
      swift_bridgeObjectRetain_n();
      v16 = sub_1A93F7674();
      v17 = sub_1A93F879C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = a4;
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        v46[0] = v20;
        *(_DWORD *)v19 = 136315138;
        swift_bridgeObjectRetain();
        v21 = sub_1A93F8604();
        v23 = v22;
        swift_bridgeObjectRelease();
        v45[5] = sub_1A906436C(v21, v23, v46);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v16, v17, "Unable to retreive episodes for identifiers: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v20, -1, -1);
        v24 = v19;
        a4 = v18;
        MEMORY[0x1AF41411C](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a4(MEMORY[0x1E0DEE9E8], 0);
      return;
    }
LABEL_40:
    swift_once();
    goto LABEL_6;
  }
  sub_1A9072534(0, (unint64_t *)&qword_1ED2A1CA0);
  v12 = sub_1A93F8310();

  sub_1A92BAC24(a1);
  v13 = sub_1A93A3EBC();
  sub_1A92BB12C(a1);
  if (v13 <= 0)
  {
    v14 = 209715200;
    if (v12 < 0)
      goto LABEL_36;
  }
  else
  {
    sub_1A92BAC24(a1);
    v14 = sub_1A93A3EBC();
    sub_1A92BB12C(a1);
    if (v12 < 0)
      goto LABEL_36;
  }
  if ((v12 & 0x4000000000000000) == 0)
  {
    v25 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
      goto LABEL_37;
    goto LABEL_11;
  }
LABEL_36:
  swift_bridgeObjectRetain();
  v25 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_11:
    if (v25 >= 1)
    {
      v42 = a4;
      a6 += 2;
      a4 = (void (*)(_QWORD, _QWORD))(v12 & 0xC000000000000001);
      swift_beginAccess();
      swift_beginAccess();
      v26 = 0;
      v43 = v14;
      v44 = v12 & 0xC000000000000001;
      while (1)
      {
        if (a4)
          v27 = (id)MEMORY[0x1AF4129DC](v26, v12);
        else
          v27 = *(id *)(v12 + 8 * v26 + 32);
        v28 = v27;
        v29 = *a6;
        v30 = objc_msgSend(v27, sel_byteSize, v42);
        if (__OFSUB__(v29, v30))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v14 < v29 - (uint64_t)v30 && (v31 = objc_msgSend(v28, sel_uuid)) != 0)
        {
          v32 = v31;
          v33 = v12;
          v34 = sub_1A93F8040();
          v36 = v35;

          v37 = objc_msgSend(v28, sel_podcast);
          if (v37)
          {
            v38 = v37;
            if (objc_msgSend(v37, sel_hidden)
              || (objc_msgSend(v38, sel_isAuthenticatedDark) & 1) != 0)
            {
              swift_bridgeObjectRelease();

            }
            else
            {
              v39 = objc_msgSend(v38, sel_isPastAutodownloadOrEpisodeLimitDark);

              if (v39)
              {
                swift_bridgeObjectRelease();

              }
              else
              {
                swift_beginAccess();
                sub_1A9091D1C(v45, v34, v36);
                swift_endAccess();
                swift_bridgeObjectRelease();
                v40 = objc_msgSend(v28, sel_byteSize);

                if (__OFSUB__(*a6, v40))
                {
                  __break(1u);
                  return;
                }
                *a6 -= v40;
              }
              v14 = v43;
            }
          }
          else
          {
            swift_bridgeObjectRelease();

          }
          v12 = v33;
          a4 = (void (*)(_QWORD, _QWORD))v44;
        }
        else
        {

        }
        if (v25 == ++v26)
        {
          swift_bridgeObjectRelease();
          a4 = v42;
          goto LABEL_38;
        }
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_37:
  swift_bridgeObjectRelease();
LABEL_38:
  swift_beginAccess();
  v41 = swift_bridgeObjectRetain();
  a4(v41, 0);
  swift_bridgeObjectRelease();
}

void sub_1A92BAAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = *(void **)(a3 + 16);
  swift_retain();
  v8 = (void *)sub_1A93F85EC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A908CDB8;
  *(_QWORD *)(v9 + 24) = v6;
  v11[4] = sub_1A92BAFFC;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A92BABB4;
  v11[3] = &block_descriptor_50;
  v10 = _Block_copy(v11);
  swift_release();
  objc_msgSend(v7, sel_addEpisodeAutoDownloads_completion_, v8, v10);
  _Block_release(v10);

}

uint64_t sub_1A92BABB4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1A93F85F8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92BAC1C(void (*a1)(__int128 *), uint64_t a2)
{
  uint64_t v2;

  return sub_1A92B98A0(a1, a2, v2 + 16);
}

uint64_t sub_1A92BAC24(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)(a1 + 40);
  v4 = *(id *)a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5 = v2;
  swift_unknownObjectRetain();
  v6 = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1A92BAC98()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92BACBC@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A92B9494(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A92BACC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92B9638(a1, v1 + 16);
}

uint64_t sub_1A92BACF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A92B9638(a1, v1 + 16);
}

uint64_t sub_1A92BAD1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t destroy for AutoDownloadProcessorDownloader(id *a1)
{

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for AutoDownloadProcessorDownloader(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(void **)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(_QWORD *)(a2 + 48);
  v7 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = v5;
  swift_unknownObjectRetain();
  v9 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadProcessorDownloader(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v10 = *(void **)(a2 + 40);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AutoDownloadProcessorDownloader(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  swift_unknownObjectRelease();
  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadProcessorDownloader(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadProcessorDownloader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1A92BAFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A92BAAA0(a1, a2, v2 + 16);
}

uint64_t sub_1A92BAFFC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, 0);
}

uint64_t objectdestroy_18Tm_0()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A92BB080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A92B9F18(a1, a2, v2 + 16, *(_QWORD *)(v2 + 72));
}

uint64_t sub_1A92BB08C()
{
  return swift_deallocObject();
}

uint64_t sub_1A92BB09C()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A92BB118()
{
  uint64_t v0;

  sub_1A92BA56C(v0 + 16, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void (**)(_QWORD, _QWORD))(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD **)(v0 + 104));
}

uint64_t sub_1A92BB12C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 40);
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_1A92BB19C(__int16 a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int16 *);
  __int16 v4;

  v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_1A92BB1D4()
{
  id *v0;

  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92BB230(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  char v3;

  v2 = *(uint64_t (**)(_QWORD))(v1 + 16);
  v3 = sub_1A92B9CAC(a1);
  return v2(v3 & 1);
}

uint64_t sub_1A92BB288()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A92BB2AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A92BB2D8()
{
  uint64_t *v0;

  return sub_1A93EF5A0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A92BB30C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x1AF4129DC](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          v4 = v15;
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1A93F8E5C();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A92BB4B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(uint64_t *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_QWORD *)(a3 + 8 * v7 + 32);
      v12 = v11;
      result = v6(&v12);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v13 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A929E4E8(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v13;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1A929E4E8(v9 > 1, v10 + 1, 1);
          v8 = v13;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_QWORD *)(v8 + 8 * v10 + 32) = v11;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

_QWORD *PurchaseController.__allocating_init(uiDelegate:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1A92C33D8(a1);
  swift_getAssociatedTypeWitness();
  v5 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t PurchaseController.getStateFromMediaAPI(condition:)(char *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v4 = sub_1A93F7D58();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A93F7DB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  *(_BYTE *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = ObjectType;
  aBlock[4] = sub_1A92C3C58;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_51;
  v14 = _Block_copy(aBlock);
  v15 = v1;
  sub_1A93F7D88();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t PurchaseControllerProtocol.productRecentlyPurchasedPublisher(adamId:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v27 = a4;
  v26 = a3;
  v29 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD488);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD490);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD498);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEABD4A0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || !v29 || v29 == 1000000000000)
  {
    v30 = 0;
    sub_1A93F7A58();
    sub_1A9066D74(&qword_1EEABD4A8, &qword_1EEABD488, MEMORY[0x1E0C960B0]);
    v22 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v24 = v17;
    v25 = v18;
    (*(void (**)(uint64_t, double))(v27 + 8))(v26, v19);
    *(_QWORD *)(swift_allocObject() + 16) = v29;
    sub_1A9066D74(&qword_1EEABD4B0, &qword_1EEABD490, MEMORY[0x1E0C96190]);
    sub_1A93F7B84();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1A9066D74(&qword_1EEABD4B8, &qword_1EEABD498, MEMORY[0x1E0C95950]);
    sub_1A93F7CE0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v13);
    sub_1A9066D74((unint64_t *)&unk_1EEABD4C0, &qword_1EEABD4A0, MEMORY[0x1E0C958E0]);
    v22 = sub_1A93F7B24();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
  }
  return v22;
}

uint64_t sub_1A92BBB74@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  sub_1A915997C();
  v4 = sub_1A93F8B38();
  LOBYTE(v3) = sub_1A92EFAA4(v4, v5, v3);
  result = swift_bridgeObjectRelease();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1A92BBBE0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  v2 = sub_1A93F8A90();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_1A90D13E0((uint64_t)v5);
}

uint64_t sub_1A92BBC80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t (*sub_1A92BBD1C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A92BBD70@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  swift_beginAccess();
  return sub_1A9062170(v3, a1, &qword_1ED2A8620);
}

uint64_t (*sub_1A92BBDD8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A92BBE30()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
  return sub_1A93F7AC4();
}

uint64_t sub_1A92BBE74()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1A93F7AE8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1A92BBF0C()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1A93F7AF4();
}

uint64_t sub_1A92BBFA4()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  sub_1A93F7AD0();
  return swift_endAccess();
}

uint64_t sub_1A92BC014(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88)) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A92BC03C()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90));
}

uint64_t sub_1A92BC05C(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90)) = result;
  return result;
}

uint64_t sub_1A92BC07C()
{
  sub_1A92C3CC8();
  return swift_unknownObjectRetain();
}

id (*sub_1A92BC090(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A92BC0E8;
}

id sub_1A92BC0E8(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1A90D0B84();
  return result;
}

uint64_t sub_1A92BC118(char a1)
{
  _QWORD *v1;
  os_unfair_lock_s **v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  char v7;

  v3 = (os_unfair_lock_s **)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8));
  swift_beginAccess();
  v7 = a1;
  v4 = *v3 + 4;
  v5 = *v3 + 5;
  os_unfair_lock_lock(v5);
  sub_1A93A55D4(v4, &v7);
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_1A92BC1AC()
{
  sub_1A92C3D1C();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A92BC1C0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC0));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A92BC220())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1A92BC274()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_privateQueueContext);

  return v1;
}

_QWORD *PurchaseController.init(uiDelegate:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_1A92C33D8(a1);
  swift_getAssociatedTypeWitness();
  v3 = sub_1A93F8A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

void sub_1A92BC350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1AF41420C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = 0;
    PurchaseController.getStateFromMediaAPI(condition:)(&v5);

  }
}

id PurchaseController.__deallocating_deinit()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  objc_class *v4;
  objc_super v6;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4 = (objc_class *)type metadata accessor for PurchaseController(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  v6.receiver = v0;
  v6.super_class = v4;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_1A92BC43C(void *a1)
{
  id v1;

  v1 = a1;
  return PurchaseController.__deallocating_deinit();
}

uint64_t sub_1A92BC460(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  swift_bridgeObjectRelease();

  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x70);
  swift_getAssociatedTypeWitness();
  v4 = sub_1A93F8A90();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_1A905FD54((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0x78), &qword_1ED2A8620);
  v5 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x80);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC790);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_1A92BC64C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[6];
  _QWORD v58[4];

  v10 = v9;
  v49 = a8;
  v47 = a7;
  v50 = a6;
  v52 = a4;
  v15 = sub_1A93F7D58();
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v48 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A93F7DB8();
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  MEMORY[0x1E0C80A78](v17);
  v53 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7698();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *a5;
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v46 = a9;
  v23 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  swift_bridgeObjectRetain_n();
  v24 = v20;
  v25 = sub_1A93F7674();
  v26 = sub_1A93F87B4();
  if (os_log_type_enabled(v25, v26))
  {
    v44 = v15;
    v27 = swift_slowAlloc();
    v43 = v10;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc();
    v41 = v24;
    v30 = a2;
    v31 = v29;
    aBlock[0] = v29;
    v42 = a3;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    v58[0] = sub_1A906436C(a1, v30, aBlock);
    v15 = v44;
    a3 = v42;
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A904E000, v25, v26, "Scheduling purchase task for buyParams %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v31, -1, -1);
    v32 = v28;
    v10 = v43;
    MEMORY[0x1AF41411C](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v19);
    v30 = a2;
  }
  sub_1A9062170(v47, (uint64_t)v58, qword_1ED2AC800);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v10;
  v33[3] = a1;
  v33[4] = v30;
  v33[5] = a3;
  v34 = v45;
  v33[6] = v52;
  v33[7] = v34;
  v33[8] = v50;
  sub_1A9062F08((uint64_t)v58, (uint64_t)(v33 + 9), qword_1ED2AC800);
  v35 = v46;
  v33[13] = v49;
  v33[14] = v35;
  aBlock[4] = (uint64_t)sub_1A92C3DC4;
  aBlock[5] = (uint64_t)v33;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A908A91C;
  aBlock[3] = (uint64_t)&block_descriptor_9_2;
  v36 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v37 = v10;
  swift_bridgeObjectRetain();
  v38 = v53;
  sub_1A93F7D88();
  v56 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  v39 = v48;
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v38, v39, v36);
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v15);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
  return swift_release();
}

uint64_t sub_1A92BCB3C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a7;
  v38 = a8;
  v35 = a4;
  v36 = a5;
  v33 = a2;
  v34 = a3;
  v31 = a9;
  v32 = a10;
  v12 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x50);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v30 - v14;
  v17 = *(_QWORD *)(v16 + 88);
  swift_getAssociatedTypeWitness();
  v18 = sub_1A93F8A90();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - v19;
  v21 = swift_allocBox();
  v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v12, v17);
  sub_1A92BBC80((uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 40))(v20, v12, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
  v39 = a6;
  v24 = (_QWORD *)swift_allocObject();
  v25 = v31;
  v26 = v32;
  v24[2] = a1;
  v24[3] = v25;
  v24[4] = v26;
  v24[5] = v21;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(v17 + 64);
  v28 = a1;
  swift_retain();
  swift_retain();
  v27(v33, v34, v35, v36, &v39, v37, v38, sub_1A92C44B8, v24, v12, v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A92BCD24(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v8 = sub_1A93F7D58();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A93F7DB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68));
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a1;
  aBlock[4] = sub_1A92C4510;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_63_0;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  swift_retain();
  v19 = a1;
  sub_1A93F7D88();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v9, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1A92BCF4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_1A93F7D58();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A93F7DB8();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 0;
  PurchaseController.getStateFromMediaAPI(condition:)((char *)aBlock);
  sub_1A9072534(0, (unint64_t *)&qword_1ED2AD6C0);
  v14 = (void *)sub_1A93F8868();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  aBlock[4] = sub_1A92C4548;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_69_1;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a4;
  swift_release();
  sub_1A93F7D88();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_1A92BD188()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_1A93F7D58();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A93F7DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68));
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_1A92C3E20;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_15_2;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_1A93F7D88();
  v14[1] = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1A92BD384(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_1A93F7698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_1A93F7674();
  v8 = sub_1A93F87B4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A904E000, v7, v8, "Resetting all subs to not subscribed state", v9, 2u);
    MEMORY[0x1AF41411C](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A92BD508(MEMORY[0x1E0DEE9D8]);
  result = swift_bridgeObjectRelease();
  *((_BYTE *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x90)) = 1;
  return result;
}

uint64_t sub_1A92BD508(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v2 = v1;
  v26 = a1;
  ObjectType = swift_getObjectType();
  v4 = *MEMORY[0x1E0DEEDD8] & *v2;
  v5 = sub_1A93F7698();
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = MEMORY[0x1E0DEE9E8];
  v28 = v8 + 16;
  sub_1A93F8040();
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v10 = (void *)sub_1A93F8010();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  v12 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  objc_msgSend(v11, sel_setPredicate_, v12);

  v13 = sub_1A92BC274();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = *(_QWORD *)(v4 + 80);
  v15[3] = *(_QWORD *)(v4 + 88);
  v15[4] = v14;
  v15[5] = v26;
  v15[6] = v11;
  v15[7] = v8;
  v15[8] = ObjectType;
  aBlock[4] = sub_1A92C4498;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_54_0;
  v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v17 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWaitWithSave_, v16);
  _Block_release(v16);

  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v19 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, v18, v5);
  v20 = sub_1A93F7674();
  v21 = sub_1A93F87B4();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1A904E000, v20, v21, "Finished updating subscriptions.", v22, 2u);
    MEMORY[0x1AF41411C](v22, -1, -1);
    v23 = v17;
  }
  else
  {
    v23 = v20;
    v20 = v17;
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  swift_beginAccess();
  v24 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v24;
}

uint64_t sub_1A92BD87C(int a1)
{
  void *v1;
  uint64_t v3;
  id v4;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  sub_1A90C52A0(a1, (uint64_t)sub_1A92C3E28, v3);
  return swift_release();
}

void sub_1A92BD8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (*(_QWORD *)(a1 + 8))
  {
    v1 = sub_1A917A6B8();
    sub_1A92BC1C0(v1);
  }
  else
  {
    if (qword_1ED2A8908 != -1)
      swift_once();
    v2 = sub_1A93F7698();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED2A88E8);
    oslog = sub_1A93F7674();
    v3 = sub_1A93F87B4();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A904E000, oslog, v3, "No music subscription information fetched. Not saving in memory.", v4, 2u);
      MEMORY[0x1AF41411C](v4, -1, -1);
    }

  }
}

uint64_t sub_1A92BDA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = sub_1A93F7698();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  v5 = sub_1A93F7674();
  v6 = sub_1A93F87B4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A904E000, v5, v6, "Getting channel subscription state from MAPI after updating all feeds.", v7, 2u);
    MEMORY[0x1AF41411C](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  HIBYTE(v9) = 1;
  return PurchaseController.getStateFromMediaAPI(condition:)((char *)&v9 + 7);
}

void sub_1A92BDB64(void *a1)
{
  id v1;

  v1 = a1;
  sub_1A92BDA00();

}

uint64_t sub_1A92BDB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void (*v12)(_BYTE *, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE v17[7];
  char v18;

  v0 = sub_1A93F7698();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v17[-v5];
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v9 = sub_1A93F7674();
  v10 = sub_1A93F87B4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1A904E000, v9, v10, "Got entitlementsDidChange notification", v11, 2u);
    MEMORY[0x1AF41411C](v11, -1, -1);
  }

  v12 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v12(v6, v0);
  sub_1A92BC118(1);
  v8(v3, v7, v0);
  v13 = sub_1A93F7674();
  v14 = sub_1A93F87B4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1A904E000, v13, v14, "Set receivedEntitlementsNotification to true", v15, 2u);
    MEMORY[0x1AF41411C](v15, -1, -1);
  }

  v12(v3, v0);
  v18 = 0;
  PurchaseController.getStateFromMediaAPI(condition:)(&v18);
  return sub_1A92BD87C(1);
}

void sub_1A92BDDBC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1A92BDB98();

}

id PurchaseController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PurchaseController.init()()
{
  sub_1A92C3E30();
}

void sub_1A92BDE2C()
{
  sub_1A92C3E30();
}

uint64_t sub_1A92BDE48()
{
  return sub_1A92BBE2C();
}

uint64_t sub_1A92BDE68(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A92BC64C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

BOOL static PurchaseController.RefreshCondition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PurchaseController.RefreshCondition.hash(into:)()
{
  return sub_1A93F92E8();
}

uint64_t PurchaseController.RefreshCondition.hashValue.getter()
{
  sub_1A93F92DC();
  sub_1A93F92E8();
  return sub_1A93F9324();
}

uint64_t sub_1A92BDF28()
{
  sub_1A93F92DC();
  PurchaseController.RefreshCondition.hash(into:)();
  return sub_1A93F9324();
}

void sub_1A92BDF60(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  _QWORD *v64;

  v57 = a3;
  v58 = a1;
  v4 = *a1;
  v5 = *MEMORY[0x1E0DEEDD8];
  v6 = sub_1A93F7698();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStore);
  v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    if ((objc_msgSend((id)objc_opt_self(), sel_acknowledgementNeededForPrivacyIdentifier_, CFSTR("com.apple.onboarding.podcasts")) & 1) == 0)
    {
      if ((a2 & 1) != 0)
      {
        v22 = *(_QWORD *)((v5 & v4) + 0x50);
        v23 = *(_QWORD *)((v5 & v4) + 0x58);
        v24 = swift_allocObject();
        v56 = v24;
        *(_QWORD *)(v24 + 16) = MEMORY[0x1E0DEE9D8];
        v25 = v24 + 16;
        if (qword_1ED2AC4B8 != -1)
          swift_once();
        v26 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A1E40);
        swift_beginAccess();
        v52 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        v53 = v26;
        v52(v15, v26, v6);
        v27 = sub_1A93F7674();
        v28 = sub_1A93F87B4();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v29 = 0;
          _os_log_impl(&dword_1A904E000, v27, v28, "Fetching all channels for personalization.", v29, 2u);
          MEMORY[0x1AF41411C](v29, -1, -1);
        }

        v51 = *(void (**)(char *, uint64_t))(v7 + 8);
        v51(v15, v6);
        sub_1A93F8040();
        v30 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
        v31 = (void *)sub_1A93F8010();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v30, sel_initWithEntityName_, v31);

        v33 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
        objc_msgSend(v32, sel_setPredicate_, v33);

        v34 = v57;
        v35 = sub_1A92BC274();
        v36 = (_QWORD *)swift_allocObject();
        v54 = v23;
        v55 = v22;
        v36[2] = v22;
        v36[3] = v23;
        v36[4] = v32;
        v36[5] = v25;
        v36[6] = v34;
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = sub_1A92C4594;
        *(_QWORD *)(v37 + 24) = v36;
        v63 = sub_1A9055748;
        v64 = (_QWORD *)v37;
        aBlock = MEMORY[0x1E0C809B0];
        v60 = 1107296256;
        v61 = sub_1A9098E00;
        v62 = &block_descriptor_81_1;
        v38 = _Block_copy(&aBlock);
        v39 = v32;
        swift_retain();
        swift_release();
        objc_msgSend(v35, sel_performBlockAndWait_, v38);

        _Block_release(v38);
        LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v34 & 1) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)(*(_QWORD *)v25 + 16))
        {
          v52(v12, v53, v6);
          v40 = sub_1A93F7674();
          v41 = sub_1A93F87B4();
          if (os_log_type_enabled(v40, v41))
          {
            v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v42 = 0;
            _os_log_impl(&dword_1A904E000, v40, v41, "Retrieving personalized polling interval.", v42, 2u);
            MEMORY[0x1AF41411C](v42, -1, -1);
          }

          v51(v12, v6);
          v43 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
          v44 = objc_msgSend(v43, sel_personalizedChannelPollingInterval);

          v45 = objc_msgSend(v44, sel_asyncValuePromiseOnQueue_, *(_QWORD *)((char *)v58 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v58) + 0x68)));
          v46 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v47 = (_QWORD *)swift_allocObject();
          v48 = v56;
          v49 = v54;
          v47[2] = v55;
          v47[3] = v49;
          v47[4] = v48;
          v47[5] = v46;
          v63 = sub_1A92C45E0;
          v64 = v47;
          aBlock = MEMORY[0x1E0C809B0];
          v60 = 1107296256;
          v61 = sub_1A92EA424;
          v62 = &block_descriptor_88_0;
          v50 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v45, sel_addFinishBlock_, v50);
          _Block_release(v50);
          swift_release();
          swift_release();

        }
        else
        {
          swift_release();
          swift_release();

        }
      }
      else
      {
        sub_1A92BE658();
      }
    }
  }
  else
  {
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    v19 = sub_1A93F7674();
    v20 = sub_1A93F87B4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A904E000, v19, v20, "Resetting subscription cache since user is not signed in.", v21, 2u);
      MEMORY[0x1AF41411C](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1A92BD188();
  }
}

uint64_t sub_1A92BE658()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, void *, uint64_t, uint64_t, void *);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  id v39;
  uint64_t (**v40)(uint64_t, void *, uint64_t, uint64_t, void *);
  id v41;
  id v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char v57[31];
  char v58;
  char v59;
  char v60;
  _BYTE v61[48];
  __int128 v62;
  uint64_t v63;

  v52 = (_QWORD *)sub_1A93F7698();
  v51 = *(v52 - 1);
  MEMORY[0x1E0C80A78](v52);
  v1 = (char *)&v48 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AD3D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MediaRequest.Params();
  v53 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - v8;
  *(_QWORD *)v61 = 1;
  memset(&v61[8], 0, 32);
  v61[40] = 4;
  v57[0] = 3;
  v60 = 1;
  v59 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A9405520;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_1E54D77F8;
  v50 = sub_1A91129C4(inited);
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A9405950;
  *(_BYTE *)(v11 + 32) = 3;
  *(_QWORD *)(v11 + 40) = &unk_1E54D7820;
  *(_BYTE *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = &unk_1E54D7848;
  v12 = sub_1A91129C4(v11);
  v58 = 1;
  v13 = sub_1A93F726C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1A9112728(MEMORY[0x1E0DEE9D8]);
  v16 = sub_1A9112728(v14);
  sub_1A911273C(v14);
  v18 = v17;
  v19 = sub_1A9112858(v14);
  *((_QWORD *)&v47 + 1) = sub_1A911286C(v14);
  *(_QWORD *)&v47 = v19;
  *(_QWORD *)&v46 = v12;
  *((_QWORD *)&v46 + 1) = v14;
  *(_QWORD *)&v45 = v14;
  *((_QWORD *)&v45 + 1) = v50;
  v20 = (uint64_t)v9;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:identifiers:fragment:limit:filters:meta:offset:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((__int128 *)v61, v57, &v60, &v59, v15, v16, v18, v14, (uint64_t)v9, v45, v46, v14, v14, &v58, 30, 0, v47, 0, 1,
    0,
    (uint64_t)v4,
    0,
    0,
    0,
    0,
    0,
    v14,
    0,
    0,
    2);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v21 = v52;
  v22 = __swift_project_value_buffer((uint64_t)v52, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v23 = v51;
  (*(void (**)(char *, uint64_t, id))(v51 + 16))(v1, v22, v21);
  v24 = sub_1A93F7674();
  v25 = sub_1A93F87B4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1A904E000, v24, v25, "Getting state from MediaAPI for user's entitlements.", v26, 2u);
    MEMORY[0x1AF41411C](v26, -1, -1);
  }

  (*(void (**)(char *, id))(v23 + 8))(v1, v21);
  v52 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v56;
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((_QWORD *)v29 + 2) = v28;
  *((_QWORD *)v29 + 3) = sub_1A92C45EC;
  *((_QWORD *)v29 + 4) = v27;
  sub_1A93F9330();
  v49 = v9;
  v30 = v55;
  sub_1A9114B88(v20, v55);
  v31 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v32 = (v54 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  sub_1A917695C(v30, v35 + v31);
  *(_QWORD *)(v35 + v32) = MEMORY[0x1E0DEE9D8];
  v36 = v35 + v33;
  *(_QWORD *)(v36 + 64) = v63;
  v37 = v62;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)&v61[32];
  *(_OWORD *)(v36 + 48) = v37;
  v38 = *(_OWORD *)&v61[16];
  *(_OWORD *)v36 = *(_OWORD *)v61;
  *(_OWORD *)(v36 + 16) = v38;
  v39 = v52;
  *(_QWORD *)(v35 + v34) = v52;
  v40 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v40 = sub_1A9114B7C;
  v40[1] = v29;
  v41 = v56;
  swift_retain();
  swift_retain();
  v42 = v39;
  swift_retain();
  v43 = (uint64_t)v49;
  sub_1A9195C30((uint64_t)v49, 0, (uint64_t)sub_1A91161FC, v35);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9114C30(v43);
}

uint64_t sub_1A92BEC00(uint64_t a1, _QWORD *a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = sub_1A92BC274();
  sub_1A9072534(0, (unint64_t *)&unk_1ED2A4250);
  v4 = sub_1A93F89DC();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *a2 = v8;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v5 = sub_1A93F8E5C();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1A929E4E8(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = v15;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1AF4129DC](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      v10 = v9;
      objc_msgSend(v9, sel_lastPersonalizedRequestDate, v15);
      v12 = v11;

      v15 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
        sub_1A929E4E8(v13 > 1, v14 + 1, 1);
      ++v7;
      *(_QWORD *)(v8 + 16) = v14 + 1;
      *(_QWORD *)(v8 + 8 * v14 + 32) = v12;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A92BEDC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint8_t *v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;

  v74 = a4;
  v76 = a3;
  v78 = sub_1A93F7698();
  v6 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v77 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v67 - v9;
  MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v67 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v67 - v14;
  v16 = sub_1A93F738C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v67 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v67 - v24;
  if (a1)
  {
    v26 = a1;
    sub_1A93F7380();
    v73 = v26;
    objc_msgSend(v26, sel_doubleValue);
    sub_1A93F7308();
    v77 = *(char **)(v17 + 8);
    ((void (*)(char *, uint64_t))v77)(v22, v16);
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v72 = (uint64_t *)(v76 + 16);
    v27 = v78;
    v28 = __swift_project_value_buffer(v78, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v69 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v70 = v28;
    v69(v15, v28, v27);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v25, v16);
    v29 = sub_1A93F7674();
    v30 = v6;
    v31 = v27;
    v32 = sub_1A93F87B4();
    if (os_log_type_enabled(v29, v32))
    {
      v71 = v30;
      v33 = swift_slowAlloc();
      v68 = v25;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v81 = v35;
      *(_DWORD *)v34 = 136315138;
      v67 = v34 + 4;
      sub_1A9066CA8((unint64_t *)&qword_1ED2A5C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v36 = sub_1A93F9060();
      v80 = sub_1A906436C(v36, v37, (uint64_t *)&v81);
      sub_1A93F8AA8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v77)(v19, v16);
      _os_log_impl(&dword_1A904E000, v29, v32, "Updating channels if any were updated before %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v35, -1, -1);
      v38 = v34;
      v25 = v68;
      MEMORY[0x1AF41411C](v38, -1, -1);

      v39 = *(void (**)(char *, uint64_t))(v71 + 8);
    }
    else
    {
      ((void (*)(char *, uint64_t))v77)(v19, v16);

      v39 = *(void (**)(char *, uint64_t))(v30 + 8);
    }
    v39(v15, v31);
    v49 = v31;
    v50 = v72;
    v51 = swift_beginAccess();
    v52 = *v50;
    MEMORY[0x1E0C80A78](v51);
    *(&v67 - 2) = (uint8_t *)v25;
    swift_bridgeObjectRetain();
    v53 = *(_QWORD *)(sub_1A92BB4B0((uint64_t)sub_1A92C481C, (uint64_t)(&v67 - 4), v52) + 16);
    swift_bridgeObjectRelease();
    if (v53)
    {
      v54 = v74 + 16;
      swift_beginAccess();
      v55 = MEMORY[0x1AF41420C](v54);
      if (v55)
      {
        v56 = (void *)v55;
        sub_1A92BE658();

      }
      else
      {

      }
    }
    else
    {
      v69(v75, v70, v49);
      v57 = v76;
      swift_retain();
      v58 = sub_1A93F7674();
      v59 = sub_1A93F87B4();
      if (os_log_type_enabled(v58, (os_log_type_t)v59))
      {
        v78 = v16;
        v60 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v60 = 134217984;
        swift_beginAccess();
        v79 = *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16);
        v16 = v78;
        sub_1A93F8AA8();
        swift_release();
        _os_log_impl(&dword_1A904E000, v58, (os_log_type_t)v59, "Defer MAPI update, all %ld channels were updated recently", v60, 0xCu);
        MEMORY[0x1AF41411C](v60, -1, -1);

      }
      else
      {

        swift_release();
      }

      v39(v75, v49);
    }
    return ((uint64_t (*)(char *, uint64_t))v77)(v25, v16);
  }
  else if (a2)
  {
    v40 = (void *)sub_1A93F711C();
    v41 = v78;
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    v71 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v77, v42, v41);
    v43 = v40;
    v44 = sub_1A93F7674();
    v45 = sub_1A93F879C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v46 = 138412290;
      v81 = v43;
      v48 = v43;
      sub_1A93F8AA8();
      *v47 = v43;

      _os_log_impl(&dword_1A904E000, v44, v45, "Error getting subs TTL from bag: %@", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2A95A0);
      swift_arrayDestroy();
      MEMORY[0x1AF41411C](v47, -1, -1);
      MEMORY[0x1AF41411C](v46, -1, -1);
    }
    else
    {

      v44 = v43;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v77, v41);
  }
  else
  {
    v61 = v78;
    if (qword_1ED2AC4B8 != -1)
      swift_once();
    v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED2A1E40);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v62, v61);
    v63 = sub_1A93F7674();
    v64 = sub_1A93F879C();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_1A904E000, v63, v64, "Error getting subs TTL from bag", v65, 2u);
      MEMORY[0x1AF41411C](v65, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v61);
  }
}

BOOL sub_1A92BF5D8(double *a1)
{
  double v1;
  double v2;

  v1 = *a1;
  sub_1A93F72D8();
  return v1 < v2;
}

uint64_t sub_1A92BF614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v9 = sub_1A93F7D58();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A93F7DB8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)((char *)a6 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a6) + 0x68));
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a1;
  aBlock[4] = sub_1A92C47F4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908A91C;
  aBlock[3] = &block_descriptor_106_0;
  v18 = _Block_copy(aBlock);
  v19 = a5;
  swift_bridgeObjectRetain();
  v20 = a6;
  sub_1A93F7D88();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A9066CA8((unint64_t *)&qword_1ED2AD6F0, v10, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2AD700);
  sub_1A9066D74((unint64_t *)&qword_1ED2AD710, (uint64_t *)&unk_1ED2AD700, MEMORY[0x1E0DEAF38]);
  sub_1A93F8B5C();
  MEMORY[0x1AF412598](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_1A92BF838(void *a1, _QWORD *a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  char *v76;
  uint64_t v77;
  uint64_t (**v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  void *v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  int64_t v123;
  uint64_t v124;
  int64_t *v125;
  unint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  _BOOL8 v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int64_t v151;
  uint64_t j;
  uint64_t v153;
  int64_t v154;
  uint64_t v155;
  int64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unsigned int v176;
  uint64_t v177;
  void *v178;
  void *v179;
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t, uint64_t);
  uint64_t v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  char *v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202[3];
  uint64_t v203;
  uint64_t v204[3];
  char v205;
  uint64_t v206;

  v194 = a2;
  v5 = sub_1A93F738C();
  v201 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v200 = (uint64_t)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v190 = (char *)&v180 - v8;
  v9 = sub_1A93F7698();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v180 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v180 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v180 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v180 - v23;
  if (a1)
  {
    v204[2] = (uint64_t)a1;
    v25 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2A1CB0);
    if ((swift_dynamicCast() & 1) == 0 || LOBYTE(v202[0]) != 1)
    {
      v40 = a1;
      if (qword_1ED2AC4B8 != -1)
        swift_once();
      v41 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A1E40);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v24, v41, v9);
      v42 = a1;
      v43 = a1;
      v44 = sub_1A93F7674();
      v45 = sub_1A93F879C();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v189 = v9;
        v47 = (uint8_t *)v46;
        v48 = swift_slowAlloc();
        v202[0] = v48;
        *(_DWORD *)v47 = 136315138;
        swift_getErrorValue();
        v49 = sub_1A93F927C();
        v204[0] = sub_1A906436C(v49, v50, v202);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A904E000, v44, v45, "Getting channels failed with error %s", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v48, -1, -1);
        MEMORY[0x1AF41411C](v47, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v24, v189);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v24, v9);
      }
    }
  }
  v185 = v5;
  sub_1A92BC118(0);
  if (qword_1ED2AC4B8 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED2A1E40);
  swift_beginAccess();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v187 = v26;
  v186 = v27;
  v27(v21, v26, v9);
  v28 = sub_1A93F7674();
  v29 = sub_1A93F87B4();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v199 = v10;
    v31 = v9;
    v32 = a3;
    v33 = v18;
    v34 = v12;
    v35 = v15;
    v36 = v30;
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1A904E000, v28, v29, "Set receivedEntitlementsNotification to false", v30, 2u);
    v37 = v36;
    v15 = v35;
    v12 = v34;
    v18 = v33;
    a3 = v32;
    v9 = v31;
    v10 = v199;
    MEMORY[0x1AF41411C](v37, -1, -1);
  }

  v188 = *(void (**)(char *, uint64_t))(v10 + 8);
  v188(v21, v9);
  if (a3 && (v38 = sub_1A9261430(a3)) != 0)
  {
    v39 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1E0DEE9D8];
  }
  v198 = v15;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v52 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v52 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v53 = MEMORY[0x1E0DEE9D8];
  if (v52)
  {
    v202[0] = MEMORY[0x1E0DEE9D8];
    if (v52 < 1)
    {
      __break(1u);
      goto LABEL_152;
    }
    if ((v39 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v52; ++i)
      {
        v55 = *(unsigned __int8 *)(*(_QWORD *)(MEMORY[0x1AF4129DC](i, v39)
                                             + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                 + 74);
        if (v55 == 2 || (v55 & 1) == 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
        }
      }
    }
    else
    {
      v68 = 0;
      v69 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
      do
      {
        v70 = *(char **)(v39 + 8 * v68 + 32);
        if ((*(_BYTE *)(*(_QWORD *)&v70[v69] + 74) & 1) != 0)
        {
          v71 = v70;
          sub_1A93F8D60();
          sub_1A93F8D90();
          sub_1A93F8D9C();
          sub_1A93F8D6C();
          v69 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
        }
        ++v68;
      }
      while (v52 != v68);
    }
  }
  else
  {
    if (!a1)
    {
      swift_bridgeObjectRelease();
      v72 = v9;
      v186(v18, v187, v9);
      v73 = sub_1A93F7674();
      v74 = sub_1A93F879C();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v75 = 0;
        _os_log_impl(&dword_1A904E000, v73, v74, "Failed to cast to channel objects", v75, 2u);
        MEMORY[0x1AF41411C](v75, -1, -1);
      }

      v76 = v18;
      v77 = v72;
      v78 = (uint64_t (**)(char *, uint64_t))&v206;
      return (*(v78 - 32))(v76, v77);
    }
    v202[0] = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v56 = v202[0];
  v199 = v202[0];
  if (v202[0] < 0 || (v202[0] & 0x4000000000000000) != 0)
  {
    swift_retain();
    v57 = sub_1A93F8E5C();
    if (v57)
      goto LABEL_33;
LABEL_51:
    swift_release();
    v59 = MEMORY[0x1E0DEE9D8];
    goto LABEL_52;
  }
  v57 = *(_QWORD *)(v202[0] + 16);
  swift_retain();
  if (!v57)
    goto LABEL_51;
LABEL_33:
  v202[0] = v53;
  sub_1A908182C(0, v57 & ~(v57 >> 63), 0);
  if (v57 < 0)
    goto LABEL_153;
  v58 = 0;
  v59 = v202[0];
  v60 = v56 & 0xC000000000000001;
  do
  {
    if (v60)
      v61 = (char *)MEMORY[0x1AF4129DC](v58, v56);
    else
      v61 = (char *)*(id *)(v56 + 8 * v58 + 32);
    v62 = v61;
    v64 = *(_QWORD *)&v61[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    v63 = *(_QWORD *)&v61[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    v202[0] = v59;
    v66 = *(_QWORD *)(v59 + 16);
    v65 = *(_QWORD *)(v59 + 24);
    if (v66 >= v65 >> 1)
    {
      sub_1A908182C(v65 > 1, v66 + 1, 1);
      v59 = v202[0];
    }
    ++v58;
    *(_QWORD *)(v59 + 16) = v66 + 1;
    v67 = v59 + 16 * v66;
    *(_QWORD *)(v67 + 32) = v64;
    *(_QWORD *)(v67 + 40) = v63;
    v56 = v199;
  }
  while (v57 != v58);
  swift_release();
LABEL_52:
  v79 = v198;
  v80 = sub_1A9159F94(v59);
  swift_bridgeObjectRelease();
  v186(v79, v187, v9);
  swift_bridgeObjectRetain_n();
  v81 = sub_1A93F7674();
  v82 = sub_1A93F87B4();
  v83 = os_log_type_enabled(v81, v82);
  v189 = v9;
  v183 = v12;
  v182 = v80;
  if (v83)
  {
    v84 = v80;
    v85 = swift_slowAlloc();
    v86 = swift_slowAlloc();
    v202[0] = v86;
    *(_DWORD *)v85 = 141558275;
    v204[0] = 1752392040;
    sub_1A93F8AA8();
    *(_WORD *)(v85 + 12) = 2081;
    v204[0] = v84;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
    sub_1A9066D74(&qword_1ED2AC498, &qword_1ED2AC7A0, MEMORY[0x1E0DEB3D0]);
    sub_1A90828B0();
    v56 = v199;
    v87 = sub_1A93F8268();
    v204[0] = sub_1A906436C(v87, v88, v202);
    sub_1A93F8AA8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A904E000, v81, v82, "Got purchased channels %{private,mask.hash}s from MAPI", (uint8_t *)v85, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF41411C](v86, -1, -1);
    MEMORY[0x1AF41411C](v85, -1, -1);

    v89 = v198;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v89 = v79;
  }
  v188(v89, v9);
  v91 = v200;
  v90 = v201;
  sub_1A93F7380();
  v92 = v190;
  sub_1A93F7308();
  v181 = *(uint64_t (**)(uint64_t, uint64_t))(v90 + 8);
  v93 = v181(v91, v185);
  MEMORY[0x1E0C80A78](v93);
  v94 = v194;
  *(&v180 - 2) = (uint64_t)v92;
  *(&v180 - 1) = (uint64_t)v94;
  swift_retain();
  v95 = sub_1A92BB30C((uint64_t (*)(id *))sub_1A92C4800, (uint64_t)(&v180 - 4), v56);
  v96 = (unint64_t)v95 >> 62;
  if ((unint64_t)v95 >> 62)
    goto LABEL_150;
  v97 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_57:
  v98 = MEMORY[0x1E0DEE9D8];
  if (v97)
  {
    v202[0] = MEMORY[0x1E0DEE9D8];
    sub_1A908182C(0, v97 & ~(v97 >> 63), 0);
    if (v97 < 0)
      goto LABEL_154;
    v99 = 0;
    v98 = v202[0];
    do
    {
      if ((v95 & 0xC000000000000001) != 0)
        v100 = (char *)MEMORY[0x1AF4129DC](v99, v95);
      else
        v100 = (char *)*(id *)(v95 + 8 * v99 + 32);
      v101 = v100;
      v103 = *(_QWORD *)&v100[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
      v102 = *(_QWORD *)&v100[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
      swift_bridgeObjectRetain();

      v202[0] = v98;
      v105 = *(_QWORD *)(v98 + 16);
      v104 = *(_QWORD *)(v98 + 24);
      if (v105 >= v104 >> 1)
      {
        sub_1A908182C(v104 > 1, v105 + 1, 1);
        v98 = v202[0];
      }
      ++v99;
      *(_QWORD *)(v98 + 16) = v105 + 1;
      v106 = v98 + 16 * v105;
      *(_QWORD *)(v106 + 32) = v103;
      *(_QWORD *)(v106 + 40) = v102;
    }
    while (v97 != v99);
  }
  v184 = sub_1A9159F94(v98);
  swift_bridgeObjectRelease();
  if (v96)
  {
    swift_bridgeObjectRetain_n();
    v107 = sub_1A93F8E5C();
    swift_bridgeObjectRelease();
    v195 = v95;
    if (v107)
      goto LABEL_68;
  }
  else
  {
    v107 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v195 = v95;
    if (v107)
    {
LABEL_68:
      v108 = 0;
      v109 = v95 & 0xC000000000000001;
      v110 = MEMORY[0x1E0DEE9E0];
      v96 = (int64_t)&OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships;
      v191 = v95 + 32;
      v193 = v107;
      v192 = v95 & 0xC000000000000001;
      while (1)
      {
        if (v109)
          v111 = (char *)MEMORY[0x1AF4129DC](v108, v195);
        else
          v111 = (char *)*(id *)(v191 + 8 * v108);
        v112 = v111;
        v113 = __OFADD__(v108++, 1);
        if (v113)
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          swift_bridgeObjectRetain();
          v97 = sub_1A93F8E5C();
          swift_bridgeObjectRelease();
          goto LABEL_57;
        }
        v114 = *(_QWORD *)&v111[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
        v115 = *(_QWORD *)&v111[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
        v116 = *(_QWORD *)&v111[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships];
        if (!v116 || (v117 = *(_QWORD *)(v116 + 16)) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v129 = sub_1A9094640(v114, v115);
          if ((v130 & 1) != 0)
          {
            v131 = v129;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v204[0] = v110;
            v95 = v110;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1A9308420();
              v95 = v204[0];
            }
            swift_bridgeObjectRelease();
            sub_1A9091124(v131, v95);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v95 = v110;
          }
          goto LABEL_70;
        }
        v200 = *(_QWORD *)&v111[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
        v118 = (unint64_t *)(v117 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
        swift_beginAccess();
        v119 = *v118;
        if (v119 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v95 = sub_1A93F8E5C();
        }
        else
        {
          v95 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v197 = v108;
        v198 = (char *)v110;
        v196 = v112;
        v201 = v115;
        if (v95)
        {
          if (v95 < 1)
            goto LABEL_148;
          v120 = 0;
          v121 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v119 & 0xC000000000000001) != 0)
            {
              v122 = MEMORY[0x1AF4129DC](v120++, v119);
              v96 = *(_QWORD *)(v122 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              v123 = *(_QWORD *)(v122 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
              swift_bridgeObjectRetain();
              swift_unknownObjectRelease();
            }
            else
            {
              v124 = *(_QWORD *)(v119 + 32 + 8 * v120++);
              v125 = (int64_t *)(v124 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              v96 = *v125;
              v123 = v125[1];
              swift_bridgeObjectRetain();
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v121 = sub_1A907ECFC(0, v121[2] + 1, 1, v121);
            v127 = v121[2];
            v126 = v121[3];
            if (v127 >= v126 >> 1)
              v121 = sub_1A907ECFC((_QWORD *)(v126 > 1), v127 + 1, 1, v121);
            v121[2] = v127 + 1;
            v128 = &v121[2 * v127];
            v128[4] = v96;
            v128[5] = v123;
          }
          while (v120 != v95);
        }
        else
        {
          v121 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_bridgeObjectRelease_n();
        v133 = (uint64_t)v198;
        v95 = swift_isUniquelyReferenced_nonNull_native();
        v204[0] = v133;
        v135 = sub_1A9094640(v200, v201);
        v136 = *(_QWORD *)(v133 + 16);
        v137 = (v134 & 1) == 0;
        v138 = v136 + v137;
        if (__OFADD__(v136, v137))
          goto LABEL_147;
        v139 = v134;
        if (*(_QWORD *)(v133 + 24) >= v138)
        {
          if ((v95 & 1) != 0)
          {
            v95 = v204[0];
            if ((v134 & 1) == 0)
              goto LABEL_106;
          }
          else
          {
            sub_1A9308420();
            v95 = v204[0];
            if ((v139 & 1) == 0)
              goto LABEL_106;
          }
        }
        else
        {
          sub_1A930019C(v138, v95);
          v140 = sub_1A9094640(v200, v201);
          if ((v139 & 1) != (v141 & 1))
            goto LABEL_155;
          v135 = v140;
          v95 = v204[0];
          if ((v139 & 1) == 0)
          {
LABEL_106:
            *(_QWORD *)(v95 + 8 * (v135 >> 6) + 64) |= 1 << v135;
            v143 = (_QWORD *)(*(_QWORD *)(v95 + 48) + 16 * v135);
            v144 = v201;
            *v143 = v200;
            v143[1] = v144;
            *(_QWORD *)(*(_QWORD *)(v95 + 56) + 8 * v135) = v121;
            v145 = *(_QWORD *)(v95 + 16);
            v113 = __OFADD__(v145, 1);
            v146 = v145 + 1;
            if (v113)
              goto LABEL_149;
            *(_QWORD *)(v95 + 16) = v146;
            swift_bridgeObjectRetain();
            goto LABEL_108;
          }
        }
        v142 = *(_QWORD *)(v95 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v142 + 8 * v135) = v121;
LABEL_108:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v107 = v193;
        v112 = v196;
        v108 = v197;
        v109 = v192;
        v96 = (int64_t)&OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships;
LABEL_70:
        swift_bridgeObjectRelease();

        v110 = v95;
        if (v108 == v107)
          goto LABEL_111;
      }
    }
  }
  v95 = MEMORY[0x1E0DEE9E0];
LABEL_111:
  swift_bridgeObjectRelease_n();
  v147 = v95 + 64;
  v148 = 1 << *(_BYTE *)(v95 + 32);
  v149 = -1;
  if (v148 < 64)
    v149 = ~(-1 << v148);
  v150 = v149 & *(_QWORD *)(v95 + 64);
  v151 = (unint64_t)(v148 + 63) >> 6;
  swift_bridgeObjectRetain();
  v96 = 0;
  for (j = MEMORY[0x1E0DEE9D8]; ; j = v204[0])
  {
    if (v150)
    {
      v150 &= v150 - 1;
      goto LABEL_115;
    }
    v154 = v96 + 1;
    if (__OFADD__(v96, 1))
      goto LABEL_146;
    if (v154 >= v151)
    {
LABEL_135:
      swift_release();
      swift_bridgeObjectRelease();
      v157 = sub_1A9159F94(j);
      swift_bridgeObjectRelease();
      v158 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((*((_BYTE *)v194 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v194) + 0x90)) & 1) == 0)
      {
        v159 = v194;
        *(_QWORD *)((char *)v194 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v194) + 0x88)) = v182;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_BYTE *)v159 + *(_QWORD *)((*v158 & *v159) + 0x90)) = 1;
      }
      v160 = v183;
      v161 = v189;
      v186(v183, v187, v189);
      v162 = v184;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v163 = sub_1A93F7674();
      v164 = sub_1A93F87B4();
      if (os_log_type_enabled(v163, v164))
      {
        v165 = swift_slowAlloc();
        v166 = swift_slowAlloc();
        v201 = v166;
        *(_DWORD *)v165 = 141558787;
        v203 = 1752392040;
        v204[0] = v166;
        sub_1A93F8AA8();
        *(_WORD *)(v165 + 12) = 2081;
        v203 = v162;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2AC7A0);
        sub_1A9066D74(&qword_1ED2AC498, &qword_1ED2AC7A0, MEMORY[0x1E0DEB3D0]);
        sub_1A90828B0();
        v167 = sub_1A93F8268();
        v203 = sub_1A906436C(v167, v168, v204);
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v165 + 22) = 2160;
        v203 = 1752392040;
        sub_1A93F8AA8();
        *(_WORD *)(v165 + 32) = 2081;
        v203 = v157;
        v158 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v169 = sub_1A93F8268();
        v203 = sub_1A906436C(v169, v170, v204);
        v162 = v184;
        sub_1A93F8AA8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A904E000, v163, v164, "Got recently purchased channels %{private,mask.hash}s and purchased shows %{private,mask.hash}s from MAPI", (uint8_t *)v165, 0x2Au);
        v171 = v201;
        swift_arrayDestroy();
        MEMORY[0x1AF41411C](v171, -1, -1);
        MEMORY[0x1AF41411C](v165, -1, -1);

        v172 = v183;
        v173 = v189;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v172 = v160;
        v173 = v161;
      }
      v188(v172, v173);
      v174 = v199;
      sub_1A91EE3FC(v157, v162);
      sub_1A92BBF0C();
      v175 = sub_1A92BD508(v174);
      v176 = objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS);
      v177 = v182;
      if (v176)
      {
        v178 = *(void **)((char *)v194 + *(_QWORD *)((*v158 & *v194) + 0xD0));
        v179 = (void *)sub_1A93F8010();
        LOBYTE(v178) = objc_msgSend(v178, sel_BOOLForKey_, v179);

        if ((v178 & 1) != 0)
          v175 = v177;
      }
      swift_bridgeObjectRelease();
      PurchaseController.displaySubscriptionConfirmationSheetIfNeeded(for:channelObjects:)(v175, v174);
      swift_bridgeObjectRelease();
      swift_release();
      v76 = v190;
      v77 = v185;
      v78 = (uint64_t (**)(char *, uint64_t))&v205;
      return (*(v78 - 32))(v76, v77);
    }
    v155 = *(_QWORD *)(v147 + 8 * v154);
    ++v96;
    if (!v155)
    {
      v96 = v154 + 1;
      if (v154 + 1 >= v151)
        goto LABEL_135;
      v155 = *(_QWORD *)(v147 + 8 * v96);
      if (!v155)
      {
        v96 = v154 + 2;
        if (v154 + 2 >= v151)
          goto LABEL_135;
        v155 = *(_QWORD *)(v147 + 8 * v96);
        if (!v155)
        {
          v96 = v154 + 3;
          if (v154 + 3 >= v151)
            goto LABEL_135;
          v155 = *(_QWORD *)(v147 + 8 * v96);
          if (!v155)
          {
            v96 = v154 + 4;
            if (v154 + 4 >= v151)
              goto LABEL_135;
            v155 = *(_QWORD *)(v147 + 8 * v96);
            if (!v155)
              break;
          }
        }
      }
    }
LABEL_134:
    v150 = (v155 - 1) & v155;
LABEL_115:
    v204[0] = j;
    swift_bridgeObjectRetain();
    v153 = swift_bridgeObjectRetain();
    sub_1A913669C(v153);
    swift_bridgeObjectRelease();
  }
  v156 = v154 + 5;
  if (v156 >= v151)
    goto LABEL_135;
  v155 = *(_QWORD *)(v147 + 8 * v156);
  if (v155)
  {
    v96 = v156;
    goto LABEL_134;
  }
  while (1)
  {
    v96 = v156 + 1;
    if (__OFADD__(v156, 1))
      break;
    if (v96 >= v151)
      goto LABEL_135;
    v155 = *(_QWORD *)(v147 + 8 * v96);
    ++v156;
    if (v155)
      goto LABEL_134;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  result = sub_1A93F9258();
  __break(1u);
  return result;
}

